time stoke debug verify --config verify.conf
Computing reference outputs for 0 testcases
Computing reference outputs for 0 testcases
Target                       Rewrite                         
                                                             
.strcpy:                     .strcpy:                        
movl %esi, %esi              movl %edi, %eax                 
movl %edi, %eax              nop                             
movl %esi, %edi              nop                             
movq %rsi, %rdx              movl %esi, %edx                 
movq %rax, %rcx              movq %rdi, %rcx                 
orl %eax, %edi               nop                             
andl $0x3, %edi              nop                             
jne .L_126860                nop                             
movl %esi, %esi              orb %ah, %ch                    
movl (%r15,%rsi,1), %r8d     nop                             
movl %r8d, %esi              nop                             
leal -0x1010101(%r8), %edi   nop                             
notl %esi                    nop                             
andl %edi, %esi              nop                             
andl $0x80808080, %esi       nop                             
jne .L_126860                nop                             
nop                          nop                             
nop                          jne .L_126860                   
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          andl %edi, %ecx                 
nop                          nop                             
nop                          nop                             
.L_126820:                   nop                             
addl $0x4, %edx              nop                             
movl %ecx, %ecx              nop                             
movl %r8d, (%r15,%rcx,1)     nop                             
addl $0x4, %ecx              nop                             
movl %edx, %edx              nop                             
movl (%r15,%rdx,1), %r8d     nop                             
movl %r8d, %r9d              nop                             
leal -0x1010101(%r8), %esi   nop                             
notl %r9d                    addb %cl, %cl                   
nop                          nop                             
andl %esi, %r9d              nop                             
andl $0x80808080, %r9d       nop                             
je .L_126820                 nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          jne .L_126860                   
nop                          .L_126820:                      
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          salb $0x80, %dh                 
nop                          nop                             
nop                          nop                             
.L_126860:                   nop                             
movl %edx, %edx              nop                             
movzbl (%r15,%rdx,1), %esi   nop                             
addl $0x1, %edx              nop                             
movl %ecx, %ecx              nop                             
movb %sil, (%r15,%rcx,1)     nop                             
addl $0x1, %ecx              nop                             
testb %sil, %sil             nop                             
jne .L_126860                nop                             
nop                          nopl %eax                       
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
retq                         nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          nop                             
nop                          je .L_126820                    
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             .L_126860:                      
                             addl $0x1, %edx                 
                             movsbw -0x1(%r15,%rdx,1), %si   
                             addl $0x1, %ecx                 
                             movb %sil, -0x1(%r15,%rcx,1)    
                             testb %sil, %sil                
                             jne .L_126860                   
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             nop                             
                             retq                            
                                                             
===========================================
Working on pair / P: 1 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 1 0 
1  |     0 1 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 1)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 0 offset 0 size 1 (cell size 1)
Access 3 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 1 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
21 -> 0 (size 1 / cell size 1 / offset 0
23 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_8_4|8> <TMP_BV_8_6|8>)) (== <TMP_BV_8_5|8> <TMP_BV_8_7|8>))

CONSTRAINTS

(not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_8_6|8>))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_8_6|8>))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_4|8>))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_4|8>))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_8_4|8> <TMP_BV_8_6|8>)) (== <TMP_BV_8_5|8> <TMP_BV_8_7|8>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 1 0 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 1)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 0 offset 0 size 1 (cell size 1)
Access 3 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 1 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
50 -> 0 (size 1 / cell size 1 / offset 0
52 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_8_12|8> <TMP_BV_8_14|8>)) (== <TMP_BV_8_13|8> <TMP_BV_8_16|8>)) (== <TMP_BV_8_17|8> <TMP_BV_8_15|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_8_14|8>))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_8_14|8>))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_12|8>))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_12|8>))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_8_12|8> <TMP_BV_8_14|8>)) (== <TMP_BV_8_13|8> <TMP_BV_8_16|8>)) (== <TMP_BV_8_17|8> <TMP_BV_8_15|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 1 0 0 0 
1  |     0 1 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 1 0 
1  |     0 0 0 1 
2  |       0 1 0 
3  |         0 1 
4  |           0 
5  |             

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 0 size 1 (cell size 2)
Access 3 cell 1 offset 0 size 1 (cell size 2)
Access 4 cell 0 offset 1 size 1 (cell size 2)
Access 5 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
21 -> 0 (size 1 / cell size 2 / offset 0
23 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 2 / offset 1
30 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_16_24|16> <TMP_BV_16_26|16>)) (== <TMP_BV_16_25|16> <TMP_BV_16_27|16>))

CONSTRAINTS

(not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_26|16>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_26|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_26|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_16_26|16>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_26|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_16_26|16>[15:8]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_24|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_24|16>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_16_24|16> <TMP_BV_16_26|16>)) (== <TMP_BV_16_25|16> <TMP_BV_16_27|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 1 0 0 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 1 0 
1  |     0 0 0 0 
2  |       0 1 0 
3  |         0 1 
4  |           0 
5  |             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 0 offset 0 size 1 (cell size 2)
Access 3 cell 2 offset 0 size 1 (cell size 2)
Access 4 cell 0 offset 1 size 1 (cell size 2)
Access 5 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
50 -> 0 (size 1 / cell size 2 / offset 0
52 -> 2 (size 1 / cell size 2 / offset 0
57 -> 0 (size 1 / cell size 2 / offset 1
59 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_16_34|16> <TMP_BV_16_36|16>)) (== <TMP_BV_8_35|8> <TMP_BV_8_38|8>)) (== <TMP_BV_16_39|16> <TMP_BV_16_37|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_36|16>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_36|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_36|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_16_36|16>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_36|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_16_36|16>[15:8]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_34|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_34|16>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_16_34|16> <TMP_BV_16_36|16>)) (== <TMP_BV_8_35|8> <TMP_BV_8_38|8>)) (== <TMP_BV_16_39|16> <TMP_BV_16_37|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 1 0 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 1)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 0 offset 0 size 1 (cell size 1)
Access 3 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 1 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
106 -> 0 (size 1 / cell size 1 / offset 0
108 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_8_44|8> <TMP_BV_8_46|8>)) (== <TMP_BV_8_45|8> <TMP_BV_8_48|8>)) (== <TMP_BV_8_49|8> <TMP_BV_8_47|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_8_46|8>))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_8_46|8>))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_44|8>))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_44|8>))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_8_44|8> <TMP_BV_8_46|8>)) (== <TMP_BV_8_45|8> <TMP_BV_8_48|8>)) (== <TMP_BV_8_49|8> <TMP_BV_8_47|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 1 0 0 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 1 0 
1  |     0 0 0 0 
2  |       0 1 0 
3  |         0 1 
4  |           0 
5  |             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 0 offset 0 size 1 (cell size 2)
Access 3 cell 2 offset 0 size 1 (cell size 2)
Access 4 cell 0 offset 1 size 1 (cell size 2)
Access 5 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
106 -> 0 (size 1 / cell size 2 / offset 0
108 -> 2 (size 1 / cell size 2 / offset 0
113 -> 0 (size 1 / cell size 2 / offset 1
115 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_16_56|16> <TMP_BV_16_58|16>)) (== <TMP_BV_8_57|8> <TMP_BV_8_60|8>)) (== <TMP_BV_16_61|16> <TMP_BV_16_59|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_58|16>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_58|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_58|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_16_58|16>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_58|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_16_58|16>[15:8]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_56|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_56|16>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_16_56|16> <TMP_BV_16_58|16>)) (== <TMP_BV_8_57|8> <TMP_BV_8_60|8>)) (== <TMP_BV_16_61|16> <TMP_BV_16_59|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 1 0 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 1)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 0 offset 0 size 1 (cell size 1)
Access 3 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 1 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
142 -> 0 (size 1 / cell size 1 / offset 0
144 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_8_66|8> <TMP_BV_8_68|8>)) (== <TMP_BV_8_67|8> <TMP_BV_8_70|8>)) (== <TMP_BV_8_71|8> <TMP_BV_8_69|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_8_68|8>))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_8_68|8>))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_66|8>))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_66|8>))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_8_66|8> <TMP_BV_8_68|8>)) (== <TMP_BV_8_67|8> <TMP_BV_8_70|8>)) (== <TMP_BV_8_71|8> <TMP_BV_8_69|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 1 0 0 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 1 0 
1  |     0 0 0 0 
2  |       0 1 0 
3  |         0 1 
4  |           0 
5  |             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 0 offset 0 size 1 (cell size 2)
Access 3 cell 2 offset 0 size 1 (cell size 2)
Access 4 cell 0 offset 1 size 1 (cell size 2)
Access 5 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
142 -> 0 (size 1 / cell size 2 / offset 0
144 -> 2 (size 1 / cell size 2 / offset 0
149 -> 0 (size 1 / cell size 2 / offset 1
151 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_16_78|16> <TMP_BV_16_80|16>)) (== <TMP_BV_8_79|8> <TMP_BV_8_82|8>)) (== <TMP_BV_16_83|16> <TMP_BV_16_81|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_80|16>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_80|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_80|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_16_80|16>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_80|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_16_80|16>[15:8]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_78|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_78|16>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_16_78|16> <TMP_BV_16_80|16>)) (== <TMP_BV_8_79|8> <TMP_BV_8_82|8>)) (== <TMP_BV_16_83|16> <TMP_BV_16_81|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   1 0 1 0 
1  |     0 1 0 
2  |       0 1 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
21 -> 0 (size 1 / cell size 4 / offset 0
23 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_32_89|32> <TMP_BV_32_91|32>)) (== <TMP_BV_8_90|8> <TMP_BV_8_92|8>))

CONSTRAINTS

(not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_91|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_91|32>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_89|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_89|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_89|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_89|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_89|32> <TMP_BV_32_91|32>)) (== <TMP_BV_8_90|8> <TMP_BV_8_92|8>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   1 0 1 0 
1  |     0 1 0 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
50 -> 0 (size 1 / cell size 4 / offset 0
52 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_98|32> <TMP_BV_32_100|32>)) (== <TMP_BV_8_99|8> <TMP_BV_8_102|8>)) (== <TMP_BV_8_103|8> <TMP_BV_8_101|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_100|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_100|32>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_98|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_98|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_98|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_98|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_98|32> <TMP_BV_32_100|32>)) (== <TMP_BV_8_99|8> <TMP_BV_8_102|8>)) (== <TMP_BV_8_103|8> <TMP_BV_8_101|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   1 0 1 0 0 0 
1  |     0 1 0 0 0 
2  |       0 1 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 1 0 
2  |       0 0 0 1 
3  |         0 1 0 
4  |           0 1 
5  |             0 
6  |               

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 1 offset 0 size 1 (cell size 2)
Access 5 cell 0 offset 1 size 1 (cell size 4)
Access 6 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
21 -> 0 (size 1 / cell size 4 / offset 0
23 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
30 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_32_111|32> <TMP_BV_32_113|32>)) (== <TMP_BV_16_112|16> <TMP_BV_16_114|16>))

CONSTRAINTS

(not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_113|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_113|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_113|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_32_113|32>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_113|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_32_113|32>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_111|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_111|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_111|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_111|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_111|32> <TMP_BV_32_113|32>)) (== <TMP_BV_16_112|16> <TMP_BV_16_114|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   1 0 1 0 0 0 
1  |     0 1 0 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 1 0 
2  |       0 0 0 0 
3  |         0 1 0 
4  |           0 1 
5  |             0 
6  |               

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 2 offset 0 size 1 (cell size 2)
Access 5 cell 0 offset 1 size 1 (cell size 4)
Access 6 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
50 -> 0 (size 1 / cell size 4 / offset 0
52 -> 2 (size 1 / cell size 2 / offset 0
57 -> 0 (size 1 / cell size 4 / offset 1
59 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_122|32> <TMP_BV_32_124|32>)) (== <TMP_BV_8_123|8> <TMP_BV_8_126|8>)) (== <TMP_BV_16_127|16> <TMP_BV_16_125|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_124|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_124|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_124|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_32_124|32>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_124|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_32_124|32>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_122|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_122|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_122|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_122|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_122|32> <TMP_BV_32_124|32>)) (== <TMP_BV_8_123|8> <TMP_BV_8_126|8>)) (== <TMP_BV_16_127|16> <TMP_BV_16_125|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   1 0 1 0 
1  |     0 1 0 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
106 -> 0 (size 1 / cell size 4 / offset 0
108 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_133|32> <TMP_BV_32_135|32>)) (== <TMP_BV_8_134|8> <TMP_BV_8_137|8>)) (== <TMP_BV_8_138|8> <TMP_BV_8_136|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_135|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_135|32>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_133|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_133|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_133|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_133|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_133|32> <TMP_BV_32_135|32>)) (== <TMP_BV_8_134|8> <TMP_BV_8_137|8>)) (== <TMP_BV_8_138|8> <TMP_BV_8_136|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   1 0 1 0 0 0 
1  |     0 1 0 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 1 0 
2  |       0 0 0 0 
3  |         0 1 0 
4  |           0 1 
5  |             0 
6  |               

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 2 offset 0 size 1 (cell size 2)
Access 5 cell 0 offset 1 size 1 (cell size 4)
Access 6 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
106 -> 0 (size 1 / cell size 4 / offset 0
108 -> 2 (size 1 / cell size 2 / offset 0
113 -> 0 (size 1 / cell size 4 / offset 1
115 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_146|32> <TMP_BV_32_148|32>)) (== <TMP_BV_8_147|8> <TMP_BV_8_150|8>)) (== <TMP_BV_16_151|16> <TMP_BV_16_149|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_148|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_148|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_148|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_32_148|32>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_148|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_32_148|32>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_146|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_146|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_146|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_146|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_146|32> <TMP_BV_32_148|32>)) (== <TMP_BV_8_147|8> <TMP_BV_8_150|8>)) (== <TMP_BV_16_151|16> <TMP_BV_16_149|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   1 0 1 0 
1  |     0 1 0 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
142 -> 0 (size 1 / cell size 4 / offset 0
144 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_157|32> <TMP_BV_32_159|32>)) (== <TMP_BV_8_158|8> <TMP_BV_8_161|8>)) (== <TMP_BV_8_162|8> <TMP_BV_8_160|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_159|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_159|32>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_157|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_157|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_157|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_157|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_157|32> <TMP_BV_32_159|32>)) (== <TMP_BV_8_158|8> <TMP_BV_8_161|8>)) (== <TMP_BV_8_162|8> <TMP_BV_8_160|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   1 0 1 0 0 0 
1  |     0 1 0 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 1 0 
2  |       0 0 0 0 
3  |         0 1 0 
4  |           0 1 
5  |             0 
6  |               

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 2 offset 0 size 1 (cell size 2)
Access 5 cell 0 offset 1 size 1 (cell size 4)
Access 6 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
142 -> 0 (size 1 / cell size 4 / offset 0
144 -> 2 (size 1 / cell size 2 / offset 0
149 -> 0 (size 1 / cell size 4 / offset 1
151 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_170|32> <TMP_BV_32_172|32>)) (== <TMP_BV_8_171|8> <TMP_BV_8_174|8>)) (== <TMP_BV_16_175|16> <TMP_BV_16_173|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_172|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_172|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_172|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_32_172|32>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_172|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_32_172|32>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_170|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_170|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_170|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_170|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_170|32> <TMP_BV_32_172|32>)) (== <TMP_BV_8_171|8> <TMP_BV_8_174|8>)) (== <TMP_BV_16_175|16> <TMP_BV_16_173|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 1 0 
1  |     0 0 0 1 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 1 0 0 0 
1  |     0 1 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 1 (cell size 2)
Access 5 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
21 -> 0 (size 1 / cell size 2 / offset 0
23 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_16_182|16> <TMP_BV_16_184|16>)) (== <TMP_BV_16_183|16> <TMP_BV_16_185|16>))

CONSTRAINTS

(not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_184|16>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_184|16>[7:0]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_182|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_182|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_182|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_182|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_16_182|16> <TMP_BV_16_184|16>)) (== <TMP_BV_16_183|16> <TMP_BV_16_185|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 1 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 1 0 0 0 
1  |     0 1 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 1 (cell size 2)
Access 5 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
50 -> 0 (size 1 / cell size 2 / offset 0
52 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_16_192|16> <TMP_BV_16_194|16>)) (== <TMP_BV_16_193|16> <TMP_BV_16_196|16>)) (== <TMP_BV_8_197|8> <TMP_BV_8_195|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_194|16>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_194|16>[7:0]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_192|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_192|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_192|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_192|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_16_192|16> <TMP_BV_16_194|16>)) (== <TMP_BV_16_193|16> <TMP_BV_16_196|16>)) (== <TMP_BV_8_197|8> <TMP_BV_8_195|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 1 0 0 0 
1  |     0 0 0 1 0 0 
2  |       0 0 0 1 0 
3  |         0 0 0 1 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 1 0 0 0 1 0 
1  |     0 1 0 0 0 1 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 1 0 
5  |             0 1 
6  |               0 
7  |                 

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 1 (cell size 2)
Access 5 cell 1 offset 0 size 1 (cell size 2)
Access 6 cell 0 offset 1 size 1 (cell size 2)
Access 7 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
21 -> 0 (size 1 / cell size 2 / offset 0
23 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 2 / offset 1
30 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_16_206|16> <TMP_BV_16_208|16>)) (== <TMP_BV_16_207|16> <TMP_BV_16_209|16>))

CONSTRAINTS

(not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_208|16>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_208|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_208|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_16_208|16>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_208|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_16_208|16>[15:8]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_206|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_206|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_206|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_206|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_16_206|16> <TMP_BV_16_208|16>)) (== <TMP_BV_16_207|16> <TMP_BV_16_209|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 
2  |       0 0 0 1 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 1 0 0 0 1 0 
1  |     0 1 0 0 0 0 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 1 0 
5  |             0 1 
6  |               0 
7  |                 

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 1 (cell size 2)
Access 5 cell 2 offset 0 size 1 (cell size 2)
Access 6 cell 0 offset 1 size 1 (cell size 2)
Access 7 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
50 -> 0 (size 1 / cell size 2 / offset 0
52 -> 2 (size 1 / cell size 2 / offset 0
57 -> 0 (size 1 / cell size 2 / offset 1
59 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_16_218|16> <TMP_BV_16_220|16>)) (== <TMP_BV_16_219|16> <TMP_BV_16_222|16>)) (== <TMP_BV_16_223|16> <TMP_BV_16_221|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_220|16>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_220|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_220|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_16_220|16>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_220|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_16_220|16>[15:8]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_218|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_218|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_218|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_218|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_16_218|16> <TMP_BV_16_220|16>)) (== <TMP_BV_16_219|16> <TMP_BV_16_222|16>)) (== <TMP_BV_16_223|16> <TMP_BV_16_221|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 1 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 1 0 0 0 
1  |     0 1 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 1 (cell size 2)
Access 5 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
106 -> 0 (size 1 / cell size 2 / offset 0
108 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_16_230|16> <TMP_BV_16_232|16>)) (== <TMP_BV_16_231|16> <TMP_BV_16_234|16>)) (== <TMP_BV_8_235|8> <TMP_BV_8_233|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_232|16>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_232|16>[7:0]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_230|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_230|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_230|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_230|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_16_230|16> <TMP_BV_16_232|16>)) (== <TMP_BV_16_231|16> <TMP_BV_16_234|16>)) (== <TMP_BV_8_235|8> <TMP_BV_8_233|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 
2  |       0 0 0 1 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 1 0 0 0 1 0 
1  |     0 1 0 0 0 0 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 1 0 
5  |             0 1 
6  |               0 
7  |                 

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 1 (cell size 2)
Access 5 cell 2 offset 0 size 1 (cell size 2)
Access 6 cell 0 offset 1 size 1 (cell size 2)
Access 7 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
106 -> 0 (size 1 / cell size 2 / offset 0
108 -> 2 (size 1 / cell size 2 / offset 0
113 -> 0 (size 1 / cell size 2 / offset 1
115 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_16_244|16> <TMP_BV_16_246|16>)) (== <TMP_BV_16_245|16> <TMP_BV_16_248|16>)) (== <TMP_BV_16_249|16> <TMP_BV_16_247|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_246|16>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_246|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_246|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_16_246|16>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_246|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_16_246|16>[15:8]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_244|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_244|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_244|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_244|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_16_244|16> <TMP_BV_16_246|16>)) (== <TMP_BV_16_245|16> <TMP_BV_16_248|16>)) (== <TMP_BV_16_249|16> <TMP_BV_16_247|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 1 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 1 0 0 0 
1  |     0 1 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 1 (cell size 2)
Access 5 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
142 -> 0 (size 1 / cell size 2 / offset 0
144 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_16_256|16> <TMP_BV_16_258|16>)) (== <TMP_BV_16_257|16> <TMP_BV_16_260|16>)) (== <TMP_BV_8_261|8> <TMP_BV_8_259|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_258|16>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_258|16>[7:0]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_256|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_256|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_256|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_256|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_16_256|16> <TMP_BV_16_258|16>)) (== <TMP_BV_16_257|16> <TMP_BV_16_260|16>)) (== <TMP_BV_8_261|8> <TMP_BV_8_259|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 
2  |       0 0 0 1 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 1 0 0 0 1 0 
1  |     0 1 0 0 0 0 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 1 0 
5  |             0 1 
6  |               0 
7  |                 

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 1 (cell size 2)
Access 5 cell 2 offset 0 size 1 (cell size 2)
Access 6 cell 0 offset 1 size 1 (cell size 2)
Access 7 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
142 -> 0 (size 1 / cell size 2 / offset 0
144 -> 2 (size 1 / cell size 2 / offset 0
149 -> 0 (size 1 / cell size 2 / offset 1
151 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_16_270|16> <TMP_BV_16_272|16>)) (== <TMP_BV_16_271|16> <TMP_BV_16_274|16>)) (== <TMP_BV_16_275|16> <TMP_BV_16_273|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_272|16>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_272|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_272|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_16_272|16>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_272|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_16_272|16>[15:8]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_270|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_270|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_270|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_270|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_16_270|16> <TMP_BV_16_272|16>)) (== <TMP_BV_16_271|16> <TMP_BV_16_274|16>)) (== <TMP_BV_16_275|16> <TMP_BV_16_273|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   1 0 0 0 1 0 
1  |     0 0 0 1 0 
2  |       0 0 0 1 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 1 0 0 0 
2  |       0 1 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
21 -> 0 (size 1 / cell size 4 / offset 0
23 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_32_283|32> <TMP_BV_32_285|32>)) (== <TMP_BV_16_284|16> <TMP_BV_16_286|16>))

CONSTRAINTS

(not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_285|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_285|32>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_283|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_283|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_283|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_283|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_283|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_283|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_283|32> <TMP_BV_32_285|32>)) (== <TMP_BV_16_284|16> <TMP_BV_16_286|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   1 0 0 0 1 0 
1  |     0 0 0 1 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 1 0 0 0 
2  |       0 1 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
50 -> 0 (size 1 / cell size 4 / offset 0
52 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_294|32> <TMP_BV_32_296|32>)) (== <TMP_BV_16_295|16> <TMP_BV_16_298|16>)) (== <TMP_BV_8_299|8> <TMP_BV_8_297|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_296|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_296|32>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_294|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_294|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_294|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_294|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_294|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_294|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_294|32> <TMP_BV_32_296|32>)) (== <TMP_BV_16_295|16> <TMP_BV_16_298|16>)) (== <TMP_BV_8_299|8> <TMP_BV_8_297|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   1 0 0 0 1 0 0 0 
1  |     0 0 0 1 0 0 0 
2  |       0 0 0 1 0 0 
3  |         0 0 0 1 0 
4  |           0 0 0 1 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 1 0 
2  |       0 1 0 0 0 1 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 1 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 1 offset 0 size 1 (cell size 2)
Access 7 cell 0 offset 1 size 1 (cell size 4)
Access 8 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
21 -> 0 (size 1 / cell size 4 / offset 0
23 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
30 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_32_309|32> <TMP_BV_32_311|32>)) (== <TMP_BV_16_310|16> <TMP_BV_16_312|16>))

CONSTRAINTS

(not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_311|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_311|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_311|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_32_311|32>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_311|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_32_311|32>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_309|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_309|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_309|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_309|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_309|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_309|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_309|32> <TMP_BV_32_311|32>)) (== <TMP_BV_16_310|16> <TMP_BV_16_312|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   1 0 0 0 1 0 0 0 
1  |     0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 1 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 1 0 
2  |       0 1 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 1 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 2 offset 0 size 1 (cell size 2)
Access 7 cell 0 offset 1 size 1 (cell size 4)
Access 8 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
50 -> 0 (size 1 / cell size 4 / offset 0
52 -> 2 (size 1 / cell size 2 / offset 0
57 -> 0 (size 1 / cell size 4 / offset 1
59 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_322|32> <TMP_BV_32_324|32>)) (== <TMP_BV_16_323|16> <TMP_BV_16_326|16>)) (== <TMP_BV_16_327|16> <TMP_BV_16_325|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_324|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_324|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_324|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_32_324|32>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_324|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_32_324|32>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_322|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_322|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_322|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_322|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_322|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_322|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_322|32> <TMP_BV_32_324|32>)) (== <TMP_BV_16_323|16> <TMP_BV_16_326|16>)) (== <TMP_BV_16_327|16> <TMP_BV_16_325|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   1 0 0 0 1 0 
1  |     0 0 0 1 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 1 0 0 0 
2  |       0 1 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
106 -> 0 (size 1 / cell size 4 / offset 0
108 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_335|32> <TMP_BV_32_337|32>)) (== <TMP_BV_16_336|16> <TMP_BV_16_339|16>)) (== <TMP_BV_8_340|8> <TMP_BV_8_338|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_337|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_337|32>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_335|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_335|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_335|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_335|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_335|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_335|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_335|32> <TMP_BV_32_337|32>)) (== <TMP_BV_16_336|16> <TMP_BV_16_339|16>)) (== <TMP_BV_8_340|8> <TMP_BV_8_338|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   1 0 0 0 1 0 0 0 
1  |     0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 1 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 1 0 
2  |       0 1 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 1 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 2 offset 0 size 1 (cell size 2)
Access 7 cell 0 offset 1 size 1 (cell size 4)
Access 8 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
106 -> 0 (size 1 / cell size 4 / offset 0
108 -> 2 (size 1 / cell size 2 / offset 0
113 -> 0 (size 1 / cell size 4 / offset 1
115 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_350|32> <TMP_BV_32_352|32>)) (== <TMP_BV_16_351|16> <TMP_BV_16_354|16>)) (== <TMP_BV_16_355|16> <TMP_BV_16_353|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_352|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_352|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_352|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_32_352|32>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_352|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_32_352|32>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_350|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_350|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_350|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_350|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_350|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_350|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_350|32> <TMP_BV_32_352|32>)) (== <TMP_BV_16_351|16> <TMP_BV_16_354|16>)) (== <TMP_BV_16_355|16> <TMP_BV_16_353|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   1 0 0 0 1 0 
1  |     0 0 0 1 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 1 0 0 0 
2  |       0 1 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
142 -> 0 (size 1 / cell size 4 / offset 0
144 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_363|32> <TMP_BV_32_365|32>)) (== <TMP_BV_16_364|16> <TMP_BV_16_367|16>)) (== <TMP_BV_8_368|8> <TMP_BV_8_366|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_365|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_365|32>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_363|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_363|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_363|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_363|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_363|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_363|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_363|32> <TMP_BV_32_365|32>)) (== <TMP_BV_16_364|16> <TMP_BV_16_367|16>)) (== <TMP_BV_8_368|8> <TMP_BV_8_366|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   1 0 0 0 1 0 0 0 
1  |     0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 1 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 1 0 
2  |       0 1 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 1 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 2 offset 0 size 1 (cell size 2)
Access 7 cell 0 offset 1 size 1 (cell size 4)
Access 8 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
142 -> 0 (size 1 / cell size 4 / offset 0
144 -> 2 (size 1 / cell size 2 / offset 0
149 -> 0 (size 1 / cell size 4 / offset 1
151 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_378|32> <TMP_BV_32_380|32>)) (== <TMP_BV_16_379|16> <TMP_BV_16_382|16>)) (== <TMP_BV_16_383|16> <TMP_BV_16_381|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_380|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_380|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_380|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_32_380|32>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_380|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_32_380|32>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_378|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_378|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_378|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_378|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_378|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_378|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_378|32> <TMP_BV_32_380|32>)) (== <TMP_BV_16_379|16> <TMP_BV_16_382|16>)) (== <TMP_BV_16_383|16> <TMP_BV_16_381|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 1 0 
1  |     0 0 0 0 1 
2  |       1 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 1 0 0 0 
1  |     0 0 1 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 1 (cell size 8)
Access 6 cell 1 offset 0 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
21 -> 0 (size 1 / cell size 8 / offset 0
23 -> 1 (size 1 / cell size 5 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_64_390|64> <TMP_BV_64_392|64>)) (== <TMP_BV_40_391|40> <TMP_BV_40_393|40>))

CONSTRAINTS

(not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_392|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_392|64>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_390|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_390|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_390|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_390|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_390|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_390|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_390|64> <TMP_BV_64_392|64>)) (== <TMP_BV_40_391|40> <TMP_BV_40_393|40>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 1 0 
1  |     0 0 0 0 0 
2  |       1 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 1 0 0 0 
1  |     0 0 1 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 1 (cell size 8)
Access 6 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
50 -> 0 (size 1 / cell size 8 / offset 0
52 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_400|64> <TMP_BV_64_402|64>)) (== <TMP_BV_40_401|40> <TMP_BV_40_404|40>)) (== <TMP_BV_8_405|8> <TMP_BV_8_403|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_402|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_402|64>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_400|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_400|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_400|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_400|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_400|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_400|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_400|64> <TMP_BV_64_402|64>)) (== <TMP_BV_40_401|40> <TMP_BV_40_404|40>)) (== <TMP_BV_8_405|8> <TMP_BV_8_403|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 1 0 0 0 
1  |     0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 1 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 1 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 1 (cell size 8)
Access 6 cell 1 offset 0 size 1 (cell size 5)
Access 7 cell 0 offset 1 size 1 (cell size 8)
Access 8 cell 1 offset 1 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
21 -> 0 (size 1 / cell size 8 / offset 0
23 -> 1 (size 1 / cell size 5 / offset 0
28 -> 0 (size 1 / cell size 8 / offset 1
30 -> 1 (size 1 / cell size 5 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_64_414|64> <TMP_BV_64_416|64>)) (== <TMP_BV_40_415|40> <TMP_BV_40_417|40>))

CONSTRAINTS

(not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_416|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_416|64>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_416|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_64_416|64>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_416|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_64_416|64>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_414|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_414|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_414|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_414|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_414|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_414|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_414|64> <TMP_BV_64_416|64>)) (== <TMP_BV_40_415|40> <TMP_BV_40_417|40>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 0 
2  |       1 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 1 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 1 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 1 (cell size 8)
Access 6 cell 2 offset 0 size 1 (cell size 2)
Access 7 cell 0 offset 1 size 1 (cell size 8)
Access 8 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
50 -> 0 (size 1 / cell size 8 / offset 0
52 -> 2 (size 1 / cell size 2 / offset 0
57 -> 0 (size 1 / cell size 8 / offset 1
59 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_426|64> <TMP_BV_64_428|64>)) (== <TMP_BV_40_427|40> <TMP_BV_40_430|40>)) (== <TMP_BV_16_431|16> <TMP_BV_16_429|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_428|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_428|64>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_428|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_64_428|64>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_428|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_64_428|64>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_426|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_426|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_426|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_426|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_426|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_426|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_426|64> <TMP_BV_64_428|64>)) (== <TMP_BV_40_427|40> <TMP_BV_40_430|40>)) (== <TMP_BV_16_431|16> <TMP_BV_16_429|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 1 0 
1  |     0 0 0 0 0 
2  |       1 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 1 0 0 0 
1  |     0 0 1 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 1 (cell size 8)
Access 6 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
106 -> 0 (size 1 / cell size 8 / offset 0
108 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_438|64> <TMP_BV_64_440|64>)) (== <TMP_BV_40_439|40> <TMP_BV_40_442|40>)) (== <TMP_BV_8_443|8> <TMP_BV_8_441|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_440|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_440|64>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_438|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_438|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_438|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_438|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_438|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_438|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_438|64> <TMP_BV_64_440|64>)) (== <TMP_BV_40_439|40> <TMP_BV_40_442|40>)) (== <TMP_BV_8_443|8> <TMP_BV_8_441|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 0 
2  |       1 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 1 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 1 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 1 (cell size 8)
Access 6 cell 2 offset 0 size 1 (cell size 2)
Access 7 cell 0 offset 1 size 1 (cell size 8)
Access 8 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
106 -> 0 (size 1 / cell size 8 / offset 0
108 -> 2 (size 1 / cell size 2 / offset 0
113 -> 0 (size 1 / cell size 8 / offset 1
115 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_452|64> <TMP_BV_64_454|64>)) (== <TMP_BV_40_453|40> <TMP_BV_40_456|40>)) (== <TMP_BV_16_457|16> <TMP_BV_16_455|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_454|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_454|64>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_454|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_64_454|64>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_454|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_64_454|64>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_452|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_452|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_452|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_452|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_452|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_452|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_452|64> <TMP_BV_64_454|64>)) (== <TMP_BV_40_453|40> <TMP_BV_40_456|40>)) (== <TMP_BV_16_457|16> <TMP_BV_16_455|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 1 0 
1  |     0 0 0 0 0 
2  |       1 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 1 0 0 0 
1  |     0 0 1 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 1 (cell size 8)
Access 6 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
142 -> 0 (size 1 / cell size 8 / offset 0
144 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_464|64> <TMP_BV_64_466|64>)) (== <TMP_BV_40_465|40> <TMP_BV_40_468|40>)) (== <TMP_BV_8_469|8> <TMP_BV_8_467|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_466|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_466|64>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_464|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_464|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_464|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_464|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_464|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_464|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_464|64> <TMP_BV_64_466|64>)) (== <TMP_BV_40_465|40> <TMP_BV_40_468|40>)) (== <TMP_BV_8_469|8> <TMP_BV_8_467|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 0 
2  |       1 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 1 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 1 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 1 (cell size 8)
Access 6 cell 2 offset 0 size 1 (cell size 2)
Access 7 cell 0 offset 1 size 1 (cell size 8)
Access 8 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
142 -> 0 (size 1 / cell size 8 / offset 0
144 -> 2 (size 1 / cell size 2 / offset 0
149 -> 0 (size 1 / cell size 8 / offset 1
151 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_478|64> <TMP_BV_64_480|64>)) (== <TMP_BV_40_479|40> <TMP_BV_40_482|40>)) (== <TMP_BV_16_483|16> <TMP_BV_16_481|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_480|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_480|64>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_480|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_64_480|64>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_480|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_64_480|64>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_478|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_478|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_478|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_478|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_478|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_478|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_478|64> <TMP_BV_64_480|64>)) (== <TMP_BV_40_479|40> <TMP_BV_40_482|40>)) (== <TMP_BV_16_483|16> <TMP_BV_16_481|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 1 
2  |       1 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 1 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 1 0 0 0 
4  |           0 1 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 1 (cell size 8)
Access 8 cell 1 offset 0 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
21 -> 0 (size 1 / cell size 8 / offset 0
23 -> 1 (size 1 / cell size 6 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_64_492|64> <TMP_BV_64_494|64>)) (== <TMP_BV_48_493|48> <TMP_BV_48_495|48>))

CONSTRAINTS

(not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_494|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_494|64>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_492|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_492|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_492|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_492|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_492|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_492|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_492|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_492|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_492|64> <TMP_BV_64_494|64>)) (== <TMP_BV_48_493|48> <TMP_BV_48_495|48>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 0 
2  |       1 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 1 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 1 0 0 0 
4  |           0 1 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 1 (cell size 8)
Access 8 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
50 -> 0 (size 1 / cell size 8 / offset 0
52 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_504|64> <TMP_BV_64_506|64>)) (== <TMP_BV_48_505|48> <TMP_BV_48_508|48>)) (== <TMP_BV_8_509|8> <TMP_BV_8_507|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_506|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_506|64>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_504|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_504|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_504|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_504|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_504|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_504|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_504|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_504|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_504|64> <TMP_BV_64_506|64>)) (== <TMP_BV_48_505|48> <TMP_BV_48_508|48>)) (== <TMP_BV_8_509|8> <TMP_BV_8_507|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 
4  |           0 1 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 1 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 1 (cell size 8)
Access 8 cell 1 offset 0 size 1 (cell size 6)
Access 9 cell 0 offset 1 size 1 (cell size 8)
Access 10 cell 1 offset 1 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
21 -> 0 (size 1 / cell size 8 / offset 0
23 -> 1 (size 1 / cell size 6 / offset 0
28 -> 0 (size 1 / cell size 8 / offset 1
30 -> 1 (size 1 / cell size 6 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_64_520|64> <TMP_BV_64_522|64>)) (== <TMP_BV_48_521|48> <TMP_BV_48_523|48>))

CONSTRAINTS

(not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_522|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_522|64>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_522|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_64_522|64>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_522|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_64_522|64>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_520|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_520|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_520|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_520|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_520|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_520|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_520|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_520|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_520|64> <TMP_BV_64_522|64>)) (== <TMP_BV_48_521|48> <TMP_BV_48_523|48>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 
2  |       1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 
4  |           0 1 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 1 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 1 (cell size 8)
Access 8 cell 2 offset 0 size 1 (cell size 2)
Access 9 cell 0 offset 1 size 1 (cell size 8)
Access 10 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
50 -> 0 (size 1 / cell size 8 / offset 0
52 -> 2 (size 1 / cell size 2 / offset 0
57 -> 0 (size 1 / cell size 8 / offset 1
59 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_534|64> <TMP_BV_64_536|64>)) (== <TMP_BV_48_535|48> <TMP_BV_48_538|48>)) (== <TMP_BV_16_539|16> <TMP_BV_16_537|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_536|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_536|64>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_536|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_64_536|64>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_536|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_64_536|64>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_534|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_534|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_534|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_534|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_534|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_534|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_534|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_534|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_534|64> <TMP_BV_64_536|64>)) (== <TMP_BV_48_535|48> <TMP_BV_48_538|48>)) (== <TMP_BV_16_539|16> <TMP_BV_16_537|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 0 
2  |       1 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 1 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 1 0 0 0 
4  |           0 1 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 1 (cell size 8)
Access 8 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
106 -> 0 (size 1 / cell size 8 / offset 0
108 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_548|64> <TMP_BV_64_550|64>)) (== <TMP_BV_48_549|48> <TMP_BV_48_552|48>)) (== <TMP_BV_8_553|8> <TMP_BV_8_551|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_550|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_550|64>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_548|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_548|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_548|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_548|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_548|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_548|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_548|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_548|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_548|64> <TMP_BV_64_550|64>)) (== <TMP_BV_48_549|48> <TMP_BV_48_552|48>)) (== <TMP_BV_8_553|8> <TMP_BV_8_551|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 
2  |       1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 
4  |           0 1 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 1 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 1 (cell size 8)
Access 8 cell 2 offset 0 size 1 (cell size 2)
Access 9 cell 0 offset 1 size 1 (cell size 8)
Access 10 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
106 -> 0 (size 1 / cell size 8 / offset 0
108 -> 2 (size 1 / cell size 2 / offset 0
113 -> 0 (size 1 / cell size 8 / offset 1
115 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_564|64> <TMP_BV_64_566|64>)) (== <TMP_BV_48_565|48> <TMP_BV_48_568|48>)) (== <TMP_BV_16_569|16> <TMP_BV_16_567|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_566|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_566|64>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_566|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_64_566|64>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_566|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_64_566|64>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_564|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_564|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_564|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_564|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_564|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_564|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_564|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_564|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_564|64> <TMP_BV_64_566|64>)) (== <TMP_BV_48_565|48> <TMP_BV_48_568|48>)) (== <TMP_BV_16_569|16> <TMP_BV_16_567|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 0 
2  |       1 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 1 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 1 0 0 0 
4  |           0 1 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 1 (cell size 8)
Access 8 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
142 -> 0 (size 1 / cell size 8 / offset 0
144 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_578|64> <TMP_BV_64_580|64>)) (== <TMP_BV_48_579|48> <TMP_BV_48_582|48>)) (== <TMP_BV_8_583|8> <TMP_BV_8_581|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_580|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_580|64>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_578|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_578|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_578|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_578|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_578|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_578|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_578|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_578|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_578|64> <TMP_BV_64_580|64>)) (== <TMP_BV_48_579|48> <TMP_BV_48_582|48>)) (== <TMP_BV_8_583|8> <TMP_BV_8_581|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 
2  |       1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 
4  |           0 1 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 1 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 1 (cell size 8)
Access 8 cell 2 offset 0 size 1 (cell size 2)
Access 9 cell 0 offset 1 size 1 (cell size 8)
Access 10 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
142 -> 0 (size 1 / cell size 8 / offset 0
144 -> 2 (size 1 / cell size 2 / offset 0
149 -> 0 (size 1 / cell size 8 / offset 1
151 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_594|64> <TMP_BV_64_596|64>)) (== <TMP_BV_48_595|48> <TMP_BV_48_598|48>)) (== <TMP_BV_16_599|16> <TMP_BV_16_597|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_596|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_596|64>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_596|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_64_596|64>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_596|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_64_596|64>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_594|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_594|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_594|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_594|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_594|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_594|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_594|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_594|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_594|64> <TMP_BV_64_596|64>)) (== <TMP_BV_48_595|48> <TMP_BV_48_598|48>)) (== <TMP_BV_16_599|16> <TMP_BV_16_597|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           1 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 1 1 0 0 0 
3  |         0 0 1 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 1 (cell size 12)
Access 8 cell 1 offset 0 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
21 -> 0 (size 1 / cell size 12 / offset 0
23 -> 1 (size 1 / cell size 9 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_96_607|96> <TMP_BV_96_609|96>)) (== <TMP_BV_72_608|72> <TMP_BV_72_610|72>))

CONSTRAINTS

(not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_609|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_609|96>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_607|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_607|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_607|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_607|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_607|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_607|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_607|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_607|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_607|96> <TMP_BV_96_609|96>)) (== <TMP_BV_72_608|72> <TMP_BV_72_610|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           1 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 1 1 0 0 0 
3  |         0 0 1 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 1 (cell size 12)
Access 8 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
50 -> 0 (size 1 / cell size 12 / offset 0
52 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_618|96> <TMP_BV_96_620|96>)) (== <TMP_BV_72_619|72> <TMP_BV_72_622|72>)) (== <TMP_BV_8_623|8> <TMP_BV_8_621|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_620|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_620|96>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_618|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_618|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_618|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_618|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_618|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_618|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_618|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_618|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_618|96> <TMP_BV_96_620|96>)) (== <TMP_BV_72_619|72> <TMP_BV_72_622|72>)) (== <TMP_BV_8_623|8> <TMP_BV_8_621|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 1 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 1 (cell size 12)
Access 8 cell 1 offset 0 size 1 (cell size 9)
Access 9 cell 0 offset 1 size 1 (cell size 12)
Access 10 cell 1 offset 1 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
21 -> 0 (size 1 / cell size 12 / offset 0
23 -> 1 (size 1 / cell size 9 / offset 0
28 -> 0 (size 1 / cell size 12 / offset 1
30 -> 1 (size 1 / cell size 9 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_96_633|96> <TMP_BV_96_635|96>)) (== <TMP_BV_72_634|72> <TMP_BV_72_636|72>))

CONSTRAINTS

(not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_635|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_635|96>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_635|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_96_635|96>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_635|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_96_635|96>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_633|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_633|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_633|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_633|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_633|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_633|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_633|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_633|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_633|96> <TMP_BV_96_635|96>)) (== <TMP_BV_72_634|72> <TMP_BV_72_636|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 1 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 1 (cell size 12)
Access 8 cell 2 offset 0 size 1 (cell size 2)
Access 9 cell 0 offset 1 size 1 (cell size 12)
Access 10 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
50 -> 0 (size 1 / cell size 12 / offset 0
52 -> 2 (size 1 / cell size 2 / offset 0
57 -> 0 (size 1 / cell size 12 / offset 1
59 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_646|96> <TMP_BV_96_648|96>)) (== <TMP_BV_72_647|72> <TMP_BV_72_650|72>)) (== <TMP_BV_16_651|16> <TMP_BV_16_649|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_648|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_648|96>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_648|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_96_648|96>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_648|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_96_648|96>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_646|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_646|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_646|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_646|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_646|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_646|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_646|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_646|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_646|96> <TMP_BV_96_648|96>)) (== <TMP_BV_72_647|72> <TMP_BV_72_650|72>)) (== <TMP_BV_16_651|16> <TMP_BV_16_649|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           1 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 1 1 0 0 0 
3  |         0 0 1 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 1 (cell size 12)
Access 8 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
106 -> 0 (size 1 / cell size 12 / offset 0
108 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_659|96> <TMP_BV_96_661|96>)) (== <TMP_BV_72_660|72> <TMP_BV_72_663|72>)) (== <TMP_BV_8_664|8> <TMP_BV_8_662|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_661|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_661|96>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_659|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_659|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_659|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_659|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_659|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_659|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_659|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_659|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_659|96> <TMP_BV_96_661|96>)) (== <TMP_BV_72_660|72> <TMP_BV_72_663|72>)) (== <TMP_BV_8_664|8> <TMP_BV_8_662|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 1 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 1 (cell size 12)
Access 8 cell 2 offset 0 size 1 (cell size 2)
Access 9 cell 0 offset 1 size 1 (cell size 12)
Access 10 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
106 -> 0 (size 1 / cell size 12 / offset 0
108 -> 2 (size 1 / cell size 2 / offset 0
113 -> 0 (size 1 / cell size 12 / offset 1
115 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_674|96> <TMP_BV_96_676|96>)) (== <TMP_BV_72_675|72> <TMP_BV_72_678|72>)) (== <TMP_BV_16_679|16> <TMP_BV_16_677|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_676|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_676|96>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_676|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_96_676|96>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_676|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_96_676|96>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_674|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_674|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_674|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_674|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_674|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_674|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_674|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_674|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_674|96> <TMP_BV_96_676|96>)) (== <TMP_BV_72_675|72> <TMP_BV_72_678|72>)) (== <TMP_BV_16_679|16> <TMP_BV_16_677|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           1 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 1 1 0 0 0 
3  |         0 0 1 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 1 (cell size 12)
Access 8 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
142 -> 0 (size 1 / cell size 12 / offset 0
144 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_687|96> <TMP_BV_96_689|96>)) (== <TMP_BV_72_688|72> <TMP_BV_72_691|72>)) (== <TMP_BV_8_692|8> <TMP_BV_8_690|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_689|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_689|96>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_687|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_687|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_687|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_687|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_687|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_687|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_687|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_687|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_687|96> <TMP_BV_96_689|96>)) (== <TMP_BV_72_688|72> <TMP_BV_72_691|72>)) (== <TMP_BV_8_692|8> <TMP_BV_8_690|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 1 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 1 (cell size 12)
Access 8 cell 2 offset 0 size 1 (cell size 2)
Access 9 cell 0 offset 1 size 1 (cell size 12)
Access 10 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
142 -> 0 (size 1 / cell size 12 / offset 0
144 -> 2 (size 1 / cell size 2 / offset 0
149 -> 0 (size 1 / cell size 12 / offset 1
151 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_702|96> <TMP_BV_96_704|96>)) (== <TMP_BV_72_703|72> <TMP_BV_72_706|72>)) (== <TMP_BV_16_707|16> <TMP_BV_16_705|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_704|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_704|96>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_704|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_96_704|96>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_704|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_96_704|96>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_702|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_702|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_702|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_702|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_702|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_702|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_702|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_702|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_702|96> <TMP_BV_96_704|96>)) (== <TMP_BV_72_703|72> <TMP_BV_72_706|72>)) (== <TMP_BV_16_707|16> <TMP_BV_16_705|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 1 0 0 0 
6  |               0 1 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 1 (cell size 12)
Access 10 cell 1 offset 0 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
21 -> 0 (size 1 / cell size 12 / offset 0
23 -> 1 (size 1 / cell size 10 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_96_717|96> <TMP_BV_96_719|96>)) (== <TMP_BV_80_718|80> <TMP_BV_80_720|80>))

CONSTRAINTS

(not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_719|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_719|96>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_717|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_717|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_717|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_717|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_717|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_717|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_717|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_717|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_717|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_717|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_717|96> <TMP_BV_96_719|96>)) (== <TMP_BV_80_718|80> <TMP_BV_80_720|80>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 1 0 0 0 
6  |               0 1 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 1 (cell size 12)
Access 10 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
50 -> 0 (size 1 / cell size 12 / offset 0
52 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_730|96> <TMP_BV_96_732|96>)) (== <TMP_BV_80_731|80> <TMP_BV_80_734|80>)) (== <TMP_BV_8_735|8> <TMP_BV_8_733|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_732|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_732|96>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_730|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_730|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_730|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_730|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_730|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_730|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_730|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_730|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_730|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_730|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_730|96> <TMP_BV_96_732|96>)) (== <TMP_BV_80_731|80> <TMP_BV_80_734|80>)) (== <TMP_BV_8_735|8> <TMP_BV_8_733|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 13
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   0 0 0 0 
9  |                     0 0 0 
10 |                       0 0 
11 |                         0 
12 |                           

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 
6  |               0 1 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   0 0 0 0 
9  |                     0 1 0 
10 |                       0 1 
11 |                         0 
12 |                           

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 1 (cell size 12)
Access 10 cell 1 offset 0 size 1 (cell size 10)
Access 11 cell 0 offset 1 size 1 (cell size 12)
Access 12 cell 1 offset 1 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
21 -> 0 (size 1 / cell size 12 / offset 0
23 -> 1 (size 1 / cell size 10 / offset 0
28 -> 0 (size 1 / cell size 12 / offset 1
30 -> 1 (size 1 / cell size 10 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_96_747|96> <TMP_BV_96_749|96>)) (== <TMP_BV_80_748|80> <TMP_BV_80_750|80>))

CONSTRAINTS

(not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_749|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_749|96>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_749|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_96_749|96>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_749|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_96_749|96>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_747|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_747|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_747|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_747|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_747|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_747|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_747|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_747|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_747|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_747|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_747|96> <TMP_BV_96_749|96>)) (== <TMP_BV_80_748|80> <TMP_BV_80_750|80>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 13
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   0 0 0 0 
9  |                     0 0 0 
10 |                       0 0 
11 |                         0 
12 |                           

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 
6  |               0 1 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   0 0 0 0 
9  |                     0 1 0 
10 |                       0 1 
11 |                         0 
12 |                           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 1 (cell size 12)
Access 10 cell 2 offset 0 size 1 (cell size 2)
Access 11 cell 0 offset 1 size 1 (cell size 12)
Access 12 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
50 -> 0 (size 1 / cell size 12 / offset 0
52 -> 2 (size 1 / cell size 2 / offset 0
57 -> 0 (size 1 / cell size 12 / offset 1
59 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_762|96> <TMP_BV_96_764|96>)) (== <TMP_BV_80_763|80> <TMP_BV_80_766|80>)) (== <TMP_BV_16_767|16> <TMP_BV_16_765|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_764|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_764|96>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_764|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_96_764|96>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_764|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_96_764|96>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_762|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_762|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_762|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_762|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_762|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_762|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_762|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_762|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_762|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_762|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_762|96> <TMP_BV_96_764|96>)) (== <TMP_BV_80_763|80> <TMP_BV_80_766|80>)) (== <TMP_BV_16_767|16> <TMP_BV_16_765|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 1 0 0 0 
6  |               0 1 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 1 (cell size 12)
Access 10 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
106 -> 0 (size 1 / cell size 12 / offset 0
108 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_777|96> <TMP_BV_96_779|96>)) (== <TMP_BV_80_778|80> <TMP_BV_80_781|80>)) (== <TMP_BV_8_782|8> <TMP_BV_8_780|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_779|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_779|96>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_777|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_777|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_777|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_777|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_777|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_777|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_777|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_777|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_777|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_777|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_777|96> <TMP_BV_96_779|96>)) (== <TMP_BV_80_778|80> <TMP_BV_80_781|80>)) (== <TMP_BV_8_782|8> <TMP_BV_8_780|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 13
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   0 0 0 0 
9  |                     0 0 0 
10 |                       0 0 
11 |                         0 
12 |                           

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 
6  |               0 1 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   0 0 0 0 
9  |                     0 1 0 
10 |                       0 1 
11 |                         0 
12 |                           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 1 (cell size 12)
Access 10 cell 2 offset 0 size 1 (cell size 2)
Access 11 cell 0 offset 1 size 1 (cell size 12)
Access 12 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
106 -> 0 (size 1 / cell size 12 / offset 0
108 -> 2 (size 1 / cell size 2 / offset 0
113 -> 0 (size 1 / cell size 12 / offset 1
115 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_794|96> <TMP_BV_96_796|96>)) (== <TMP_BV_80_795|80> <TMP_BV_80_798|80>)) (== <TMP_BV_16_799|16> <TMP_BV_16_797|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_796|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_796|96>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_796|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_96_796|96>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_796|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_96_796|96>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_794|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_794|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_794|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_794|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_794|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_794|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_794|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_794|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_794|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_794|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_794|96> <TMP_BV_96_796|96>)) (== <TMP_BV_80_795|80> <TMP_BV_80_798|80>)) (== <TMP_BV_16_799|16> <TMP_BV_16_797|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 1 0 0 0 
6  |               0 1 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 1 (cell size 12)
Access 10 cell 2 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
142 -> 0 (size 1 / cell size 12 / offset 0
144 -> 2 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_809|96> <TMP_BV_96_811|96>)) (== <TMP_BV_80_810|80> <TMP_BV_80_813|80>)) (== <TMP_BV_8_814|8> <TMP_BV_8_812|8>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_811|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_811|96>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_809|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_809|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_809|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_809|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_809|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_809|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_809|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_809|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_809|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_809|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_809|96> <TMP_BV_96_811|96>)) (== <TMP_BV_80_810|80> <TMP_BV_80_813|80>)) (== <TMP_BV_8_814|8> <TMP_BV_8_812|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movl %esi, %edx
movq %rdi, %rcx
nop 
nop 
nop 
orb %ah, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl %edi, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
addb %cl, %cl
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
salb $0x80, %dh
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
.L_126860:
addl $0x1, %edx
movsbw -0x1(%r15,%rdx,1), %si
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 13
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   0 0 0 0 
9  |                     0 0 0 
10 |                       0 0 
11 |                         0 
12 |                           

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 
6  |               0 1 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   0 0 0 0 
9  |                     0 1 0 
10 |                       0 1 
11 |                         0 
12 |                           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 1 (cell size 12)
Access 10 cell 2 offset 0 size 1 (cell size 2)
Access 11 cell 0 offset 1 size 1 (cell size 12)
Access 12 cell 2 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
142 -> 0 (size 1 / cell size 12 / offset 0
144 -> 2 (size 1 / cell size 2 / offset 0
149 -> 0 (size 1 / cell size 12 / offset 1
151 -> 2 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_826|96> <TMP_BV_96_828|96>)) (== <TMP_BV_80_827|80> <TMP_BV_80_830|80>)) (== <TMP_BV_16_831|16> <TMP_BV_16_829|16>))

CONSTRAINTS

(not (not (== (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8]) <0x0|8>)))
(not (not (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>)))
(not (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0] <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_828|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_828|96>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[63:16] (<< (concat <0x0|1> (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (<< (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:8]) (concat <0x0|1> (and <0x80|8>[7:0] <0x1f|8>)))[7:0]) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[7:0])[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[63:8] (plus (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]) (concat <0x0|1> (concat <0x0|32> (and (concat (concat <%rdi_2_INIT|64>[63:16] (or <%rdi_2_INIT|64>[15:8] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[15:8])) <%rdi_2_INIT|64>[7:0])[31:0] <%rdi_2_INIT|64>[31:0]))[7:0]))[7:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_828|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_96_828|96>[15:8]))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_828|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_96_828|96>[15:8]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_826|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_826|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_826|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_826|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_826|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_826|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_826|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_826|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_826|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_826|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_826|96> <TMP_BV_96_828|96>)) (== <TMP_BV_80_827|80> <TMP_BV_80_830|80>)) (== <TMP_BV_16_831|16> <TMP_BV_16_829|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
Equivalent: yes
