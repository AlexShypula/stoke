Training TCs: 3
flags for addb_al_imm8: { }
flags for addw_ax_imm16: { }
flags for addl_eax_imm32: { }
flags for addw_m16_imm16: { }
flags for addw_m16_imm8: { }
flags for addw_m16_r16: { }
flags for addl_m32_imm32: { }
flags for addl_m32_imm8: { }
flags for addl_m32_r32: { }
flags for addq_m64_imm32: { }
flags for addq_m64_imm8: { }
flags for addq_m64_r64: { }
flags for addb_m8_imm8: { }
flags for addb_m8_r8: { }
flags for addb_m8_rh: { }
flags for addw_r16_imm16: { }
flags for addw_r16_imm8: { }
flags for addw_r16_m16: { }
flags for addw_r16_r16: { }
flags for addw_r16_r16_1: { }
flags for addl_r32_imm32: { }
flags for addl_r32_imm8: { }
flags for addl_r32_m32: { }
flags for addl_r32_r32: { }
flags for addl_r32_r32_1: { }
flags for addq_r64_imm32: { }
flags for addq_r64_imm8: { }
flags for addq_r64_m64: { }
flags for addq_r64_r64: { }
flags for addq_r64_r64_1: { }
flags for addb_r8_imm8: { }
flags for addb_r8_m8: { }
flags for addb_r8_r8: { }
flags for addb_r8_r8_1: { }
flags for addb_r8_rh: { }
flags for addb_r8_rh_1: { }
flags for addq_rax_imm32: { }
flags for addb_rh_imm8: { }
flags for addb_rh_m8: { }
flags for addb_rh_r8: { }
flags for addb_rh_r8_1: { }
flags for addb_rh_rh: { }
flags for addb_rh_rh_1: { }
flags for addpd_xmm_m128: { sse2 }
flags for addpd_xmm_xmm: { sse2 }
flags for addps_xmm_m128: { sse }
flags for addps_xmm_xmm: { sse }
flags for addsd_xmm_m64: { sse2 }
flags for addsd_xmm_xmm: { sse2 }
flags for addss_xmm_m32: { sse }
flags for addss_xmm_xmm: { sse }
flags for addsubpd_xmm_m128: { pni }
flags for addsubpd_xmm_xmm: { pni }
flags for addsubps_xmm_m128: { pni }
flags for addsubps_xmm_xmm: { pni }
flags for aesdec_xmm_m128: { aes }
flags for aesdec_xmm_xmm: { aes }
flags for aesdeclast_xmm_m128: { aes }
flags for aesdeclast_xmm_xmm: { aes }
flags for aesenc_xmm_m128: { aes }
flags for aesenc_xmm_xmm: { aes }
flags for aesenclast_xmm_m128: { aes }
flags for aesenclast_xmm_xmm: { aes }
flags for aesimc_xmm_m128: { aes }
flags for aesimc_xmm_xmm: { aes }
flags for aeskeygenassist_xmm_m128_imm8: { aes }
flags for aeskeygenassist_xmm_xmm_imm8: { aes }
flags for andb_al_imm8: { }
flags for andw_ax_imm16: { }
flags for andl_eax_imm32: { }
flags for andw_m16_imm16: { }
flags for andw_m16_imm8: { }
flags for andw_m16_r16: { }
flags for andl_m32_imm32: { }
flags for andl_m32_imm8: { }
flags for andl_m32_r32: { }
flags for andq_m64_imm32: { }
flags for andq_m64_imm8: { }
flags for andq_m64_r64: { }
flags for andb_m8_imm8: { }
flags for andb_m8_r8: { }
flags for andb_m8_rh: { }
flags for andw_r16_imm16: { }
flags for andw_r16_imm8: { }
flags for andw_r16_m16: { }
flags for andw_r16_r16: { }
flags for andw_r16_r16_1: { }
flags for andl_r32_imm32: { }
flags for andl_r32_imm8: { }
flags for andl_r32_m32: { }
flags for andl_r32_r32: { }
flags for andl_r32_r32_1: { }
flags for andq_r64_imm32: { }
flags for andq_r64_imm8: { }
flags for andq_r64_m64: { }
flags for andq_r64_r64: { }
flags for andq_r64_r64_1: { }
flags for andb_r8_imm8: { }
flags for andb_r8_m8: { }
flags for andb_r8_r8: { }
flags for andb_r8_r8_1: { }
flags for andb_r8_rh: { }
flags for andb_r8_rh_1: { }
flags for andq_rax_imm32: { }
flags for andb_rh_imm8: { }
flags for andb_rh_m8: { }
flags for andb_rh_r8: { }
flags for andb_rh_r8_1: { }
flags for andb_rh_rh: { }
flags for andb_rh_rh_1: { }
flags for andnl_r32_r32_m32: { bmi1 }
flags for andnl_r32_r32_r32: { bmi1 }
flags for andnq_r64_r64_m64: { bmi1 }
flags for andnq_r64_r64_r64: { bmi1 }
flags for andnpd_xmm_m128: { sse2 }
flags for andnpd_xmm_xmm: { sse2 }
flags for andnps_xmm_m128: { sse }
flags for andnps_xmm_xmm: { sse }
flags for andpd_xmm_m128: { sse2 }
flags for andpd_xmm_xmm: { sse2 }
flags for andps_xmm_m128: { sse }
flags for andps_xmm_xmm: { sse }
flags for bextrl_r32_m32_r32: { bmi1 }
flags for bextrl_r32_r32_r32: { bmi1 }
flags for bextrq_r64_m64_r64: { bmi1 }
flags for bextrq_r64_r64_r64: { bmi1 }
flags for blendpd_xmm_m128_imm8: { sse4_1 }
flags for blendpd_xmm_xmm_imm8: { sse4_1 }
flags for blendps_xmm_m128_imm8: { sse4_1 }
flags for blendps_xmm_xmm_imm8: { sse4_1 }
flags for blendvpd_xmm_m128_xmm0: { sse4_1 }
flags for blendvpd_xmm_xmm_xmm0: { sse4_1 }
flags for blendvps_xmm_m128_xmm0: { sse4_1 }
flags for blendvps_xmm_xmm_xmm0: { sse4_1 }
flags for blsil_r32_m32: { bmi1 }
flags for blsil_r32_r32: { bmi1 }
flags for blsiq_r64_m64: { bmi1 }
flags for blsiq_r64_r64: { bmi1 }
flags for blsmskl_r32_m32: { bmi1 }
flags for blsmskl_r32_r32: { bmi1 }
flags for blsmskq_r64_m64: { bmi1 }
flags for blsmskq_r64_r64: { bmi1 }
flags for blsrl_r32_m32: { bmi1 }
flags for blsrl_r32_r32: { bmi1 }
flags for blsrq_r64_m64: { bmi1 }
flags for blsrq_r64_r64: { bmi1 }
flags for bzhil_r32_m32_r32: { bmi2 }
flags for bzhil_r32_r32_r32: { bmi2 }
flags for bzhiq_r64_m64_r64: { bmi2 }
flags for bzhiq_r64_r64_r64: { bmi2 }
flags for cmovaw_r16_m16: { cmov }
flags for cmovaw_r16_r16: { cmov }
flags for cmoval_r32_m32: { cmov }
flags for cmoval_r32_r32: { cmov }
flags for cmovaq_r64_m64: { cmov }
flags for cmovaq_r64_r64: { cmov }
flags for cmovaew_r16_m16: { cmov }
flags for cmovaew_r16_r16: { cmov }
flags for cmovael_r32_m32: { cmov }
flags for cmovael_r32_r32: { cmov }
flags for cmovaeq_r64_m64: { cmov }
flags for cmovaeq_r64_r64: { cmov }
flags for cmovbw_r16_m16: { cmov }
flags for cmovbw_r16_r16: { cmov }
flags for cmovbl_r32_m32: { cmov }
flags for cmovbl_r32_r32: { cmov }
flags for cmovbq_r64_m64: { cmov }
flags for cmovbq_r64_r64: { cmov }
flags for cmovbew_r16_m16: { cmov }
flags for cmovbew_r16_r16: { cmov }
flags for cmovbel_r32_m32: { cmov }
flags for cmovbel_r32_r32: { cmov }
flags for cmovbeq_r64_m64: { cmov }
flags for cmovbeq_r64_r64: { cmov }
flags for cmovcw_r16_m16: { cmov }
flags for cmovcw_r16_r16: { cmov }
flags for cmovcl_r32_m32: { cmov }
flags for cmovcl_r32_r32: { cmov }
flags for cmovcq_r64_m64: { cmov }
flags for cmovcq_r64_r64: { cmov }
flags for cmovew_r16_m16: { cmov }
flags for cmovew_r16_r16: { cmov }
flags for cmovel_r32_m32: { cmov }
flags for cmovel_r32_r32: { cmov }
flags for cmoveq_r64_m64: { cmov }
flags for cmoveq_r64_r64: { cmov }
flags for cmovgw_r16_m16: { cmov }
flags for cmovgw_r16_r16: { cmov }
flags for cmovgl_r32_m32: { cmov }
flags for cmovgl_r32_r32: { cmov }
flags for cmovgq_r64_m64: { cmov }
flags for cmovgq_r64_r64: { cmov }
flags for cmovgew_r16_m16: { cmov }
flags for cmovgew_r16_r16: { cmov }
flags for cmovgel_r32_m32: { cmov }
flags for cmovgel_r32_r32: { cmov }
flags for cmovgeq_r64_m64: { cmov }
flags for cmovgeq_r64_r64: { cmov }
flags for cmovlw_r16_m16: { cmov }
flags for cmovlw_r16_r16: { cmov }
flags for cmovll_r32_m32: { cmov }
flags for cmovll_r32_r32: { cmov }
flags for cmovlq_r64_m64: { cmov }
flags for cmovlq_r64_r64: { cmov }
flags for cmovlew_r16_m16: { cmov }
flags for cmovlew_r16_r16: { cmov }
flags for cmovlel_r32_m32: { cmov }
flags for cmovlel_r32_r32: { cmov }
flags for cmovleq_r64_m64: { cmov }
flags for cmovleq_r64_r64: { cmov }
flags for cmovnaw_r16_m16: { cmov }
flags for cmovnaw_r16_r16: { cmov }
flags for cmovnal_r32_m32: { cmov }
flags for cmovnal_r32_r32: { cmov }
flags for cmovnaq_r64_m64: { cmov }
flags for cmovnaq_r64_r64: { cmov }
flags for cmovnaew_r16_m16: { cmov }
flags for cmovnaew_r16_r16: { cmov }
flags for cmovnael_r32_m32: { cmov }
flags for cmovnael_r32_r32: { cmov }
flags for cmovnaeq_r64_m64: { cmov }
flags for cmovnaeq_r64_r64: { cmov }
flags for cmovnbw_r16_m16: { cmov }
flags for cmovnbw_r16_r16: { cmov }
flags for cmovnbl_r32_m32: { cmov }
flags for cmovnbl_r32_r32: { cmov }
flags for cmovnbq_r64_m64: { cmov }
flags for cmovnbq_r64_r64: { cmov }
flags for cmovnbew_r16_m16: { cmov }
flags for cmovnbew_r16_r16: { cmov }
flags for cmovnbel_r32_m32: { cmov }
flags for cmovnbel_r32_r32: { cmov }
flags for cmovnbeq_r64_m64: { cmov }
flags for cmovnbeq_r64_r64: { cmov }
flags for cmovncw_r16_m16: { cmov }
flags for cmovncw_r16_r16: { cmov }
flags for cmovncl_r32_m32: { cmov }
flags for cmovncl_r32_r32: { cmov }
flags for cmovncq_r64_m64: { cmov }
flags for cmovncq_r64_r64: { cmov }
flags for cmovnew_r16_m16: { cmov }
flags for cmovnew_r16_r16: { cmov }
flags for cmovnel_r32_m32: { cmov }
flags for cmovnel_r32_r32: { cmov }
flags for cmovneq_r64_m64: { cmov }
flags for cmovneq_r64_r64: { cmov }
flags for cmovngw_r16_m16: { cmov }
flags for cmovngw_r16_r16: { cmov }
flags for cmovngl_r32_m32: { cmov }
flags for cmovngl_r32_r32: { cmov }
flags for cmovngq_r64_m64: { cmov }
flags for cmovngq_r64_r64: { cmov }
flags for cmovngew_r16_m16: { cmov }
flags for cmovngew_r16_r16: { cmov }
flags for cmovngel_r32_m32: { cmov }
flags for cmovngel_r32_r32: { cmov }
flags for cmovngeq_r64_m64: { cmov }
flags for cmovngeq_r64_r64: { cmov }
flags for cmovnlw_r16_m16: { cmov }
flags for cmovnlw_r16_r16: { cmov }
flags for cmovnll_r32_m32: { cmov }
flags for cmovnll_r32_r32: { cmov }
flags for cmovnlq_r64_m64: { cmov }
flags for cmovnlq_r64_r64: { cmov }
flags for cmovnlew_r16_m16: { cmov }
flags for cmovnlew_r16_r16: { cmov }
flags for cmovnlel_r32_m32: { cmov }
flags for cmovnlel_r32_r32: { cmov }
flags for cmovnleq_r64_m64: { cmov }
flags for cmovnleq_r64_r64: { cmov }
flags for cmovnow_r16_m16: { cmov }
flags for cmovnow_r16_r16: { cmov }
flags for cmovnol_r32_m32: { cmov }
flags for cmovnol_r32_r32: { cmov }
flags for cmovnoq_r64_m64: { cmov }
flags for cmovnoq_r64_r64: { cmov }
flags for cmovnpw_r16_m16: { cmov }
flags for cmovnpw_r16_r16: { cmov }
flags for cmovnpl_r32_m32: { cmov }
flags for cmovnpl_r32_r32: { cmov }
flags for cmovnpq_r64_m64: { cmov }
flags for cmovnpq_r64_r64: { cmov }
flags for cmovnsw_r16_m16: { cmov }
flags for cmovnsw_r16_r16: { cmov }
flags for cmovnsl_r32_m32: { cmov }
flags for cmovnsl_r32_r32: { cmov }
flags for cmovnsq_r64_m64: { cmov }
flags for cmovnsq_r64_r64: { cmov }
flags for cmovnzw_r16_m16: { cmov }
flags for cmovnzw_r16_r16: { cmov }
flags for cmovnzl_r32_m32: { cmov }
flags for cmovnzl_r32_r32: { cmov }
flags for cmovnzq_r64_m64: { cmov }
flags for cmovnzq_r64_r64: { cmov }
flags for cmovow_r16_m16: { cmov }
flags for cmovow_r16_r16: { cmov }
flags for cmovol_r32_m32: { cmov }
flags for cmovol_r32_r32: { cmov }
flags for cmovoq_r64_m64: { cmov }
flags for cmovoq_r64_r64: { cmov }
flags for cmovpw_r16_m16: { cmov }
flags for cmovpw_r16_r16: { cmov }
flags for cmovpl_r32_m32: { cmov }
flags for cmovpl_r32_r32: { cmov }
flags for cmovpq_r64_m64: { cmov }
flags for cmovpq_r64_r64: { cmov }
flags for cmovpew_r16_m16: { cmov }
flags for cmovpew_r16_r16: { cmov }
flags for cmovpel_r32_m32: { cmov }
flags for cmovpel_r32_r32: { cmov }
flags for cmovpeq_r64_m64: { cmov }
flags for cmovpeq_r64_r64: { cmov }
flags for cmovpow_r16_m16: { cmov }
flags for cmovpow_r16_r16: { cmov }
flags for cmovpol_r32_m32: { cmov }
flags for cmovpol_r32_r32: { cmov }
flags for cmovpoq_r64_m64: { cmov }
flags for cmovpoq_r64_r64: { cmov }
flags for cmovsw_r16_m16: { cmov }
flags for cmovsw_r16_r16: { cmov }
flags for cmovsl_r32_m32: { cmov }
flags for cmovsl_r32_r32: { cmov }
flags for cmovsq_r64_m64: { cmov }
flags for cmovsq_r64_r64: { cmov }
flags for cmovzw_r16_m16: { cmov }
flags for cmovzw_r16_r16: { cmov }
flags for cmovzl_r32_m32: { cmov }
flags for cmovzl_r32_r32: { cmov }
flags for cmovzq_r64_m64: { cmov }
flags for cmovzq_r64_r64: { cmov }
flags for comisd_xmm_m64: { sse2 }
flags for comisd_xmm_xmm: { sse2 }
flags for comiss_xmm_m32: { sse }
flags for comiss_xmm_xmm: { sse }
flags for cvtdq2pd_xmm_m64: { sse2 }
flags for cvtdq2pd_xmm_xmm: { sse2 }
flags for cvtdq2ps_xmm_m128: { sse2 }
flags for cvtdq2ps_xmm_xmm: { sse2 }
flags for cvtpd2dq_xmm_m128: { sse2 }
flags for cvtpd2dq_xmm_xmm: { sse2 }
flags for cvtpd2pi_mm_m128: { }
flags for cvtpd2pi_mm_xmm: { }
flags for cvtpd2ps_xmm_m128: { sse2 }
flags for cvtpd2ps_xmm_xmm: { sse2 }
flags for cvtpi2pd_xmm_m64: { }
flags for cvtpi2pd_xmm_mm: { }
flags for cvtpi2ps_xmm_m64: { }
flags for cvtpi2ps_xmm_mm: { }
flags for cvtps2dq_xmm_m128: { sse2 }
flags for cvtps2dq_xmm_xmm: { sse2 }
flags for cvtps2pd_xmm_m64: { sse2 }
flags for cvtps2pd_xmm_xmm: { sse2 }
flags for cvtps2pi_mm_m64: { }
flags for cvtps2pi_mm_xmm: { }
flags for cvtsd2si_r32_m64: { sse2 }
flags for cvtsd2si_r32_xmm: { sse2 }
flags for cvtsd2si_r64_m64: { sse2 }
flags for cvtsd2si_r64_xmm: { sse2 }
flags for cvtsd2ss_xmm_m64: { sse2 }
flags for cvtsd2ss_xmm_xmm: { sse2 }
flags for cvtsi2sdl_xmm_m32: { sse2 }
flags for cvtsi2sdq_xmm_m64: { sse2 }
flags for cvtsi2sdl_xmm_r32: { sse2 }
flags for cvtsi2sdq_xmm_r64: { sse2 }
flags for cvtsi2ssl_xmm_m32: { sse }
flags for cvtsi2ssq_xmm_m64: { sse }
flags for cvtsi2ssl_xmm_r32: { sse }
flags for cvtsi2ssq_xmm_r64: { sse }
flags for cvtss2sd_xmm_m32: { sse2 }
flags for cvtss2sd_xmm_xmm: { sse2 }
flags for cvtss2sil_r32_m32: { sse }
flags for cvtss2sil_r32_xmm: { sse }
flags for cvtss2siq_r64_m32: { sse }
flags for cvtss2siq_r64_xmm: { sse }
flags for cvttpd2dq_xmm_m128: { sse2 }
flags for cvttpd2dq_xmm_xmm: { sse2 }
flags for cvttpd2pi_mm_m128: { }
flags for cvttpd2pi_mm_xmm: { }
flags for cvttps2dq_xmm_m128: { sse2 }
flags for cvttps2dq_xmm_xmm: { sse2 }
flags for cvttps2pi_mm_m64: { }
flags for cvttps2pi_mm_xmm: { }
flags for cvttsd2si_r32_m64: { sse2 }
flags for cvttsd2si_r32_xmm: { sse2 }
flags for cvttsd2siq_r64_m64: { sse2 }
flags for cvttsd2siq_r64_xmm: { sse2 }
flags for cvttss2si_r32_m32: { sse }
flags for cvttss2si_r32_xmm: { sse }
flags for cvttss2siq_r64_m32: { sse }
flags for cvttss2siq_r64_xmm: { sse }
flags for decw_m16: { }
flags for decl_m32: { }
flags for decq_m64: { }
flags for decb_m8: { }
flags for decw_r16: { }
flags for decl_r32: { }
flags for decq_r64: { }
flags for decb_r8: { }
flags for decb_rh: { }
flags for dppd_xmm_m128_imm8: { sse4_1 }
flags for dppd_xmm_xmm_imm8: { sse4_1 }
flags for dpps_xmm_m128_imm8: { sse4_1 }
flags for dpps_xmm_xmm_imm8: { sse4_1 }
flags for extractps_m32_xmm_imm8: { sse4_1 }
flags for extractps_r32_xmm_imm8: { sse4_1 }
flags for extractps_r64_xmm_imm8: { sse4_1 }
flags for f2xm1: { fpu }
flags for fabs: { fpu }
flags for fadds_m32fp: { fpu }
flags for faddl_m64fp: { fpu }
flags for faddp: { fpu }
flags for fbld_m80bcd: { fpu }
flags for fbstp_m80bcd: { fpu }
flags for fchs: { fpu }
flags for fclex: { fpu }
flags for fcom: { fpu }
flags for fcoms_m32fp: { fpu }
flags for fcoml_m64fp: { fpu }
flags for fcomp: { fpu }
flags for fcomps_m32fp: { fpu }
flags for fcompl_m64fp: { fpu }
flags for fcompp: { fpu }
flags for fcos: { fpu }
flags for fdecstp: { fpu }
flags for fdivs_m32fp: { fpu }
flags for fdivl_m64fp: { fpu }
flags for fdivp: { fpu }
flags for fdivrs_m32fp: { fpu }
flags for fdivrl_m64fp: { fpu }
flags for fdivrp: { fpu }
flags for fiadd_m16int: { fpu }
flags for fiaddl_m32int: { fpu }
flags for ficom_m16int: { fpu }
flags for ficoml_m32int: { fpu }
flags for ficomp_m16int: { fpu }
flags for ficompl_m32int: { fpu }
flags for fidiv_m16int: { fpu }
flags for fidivl_m32int: { fpu }
flags for fidivr_m16int: { fpu }
flags for fidivrl_m32int: { fpu }
flags for fild_m16int: { fpu }
flags for fildl_m32int: { fpu }
flags for fildll_m64int: { fpu }
flags for fimul_m16int: { fpu }
flags for fimull_m32int: { fpu }
flags for fincstp: { fpu }
flags for finit: { fpu }
flags for fist_m16int: { fpu }
flags for fistl_m32int: { fpu }
flags for fistp_m16int: { fpu }
flags for fistpl_m32int: { fpu }
flags for fistpll_m64int: { fpu }
flags for fisttp_m16int: { fpu }
flags for fisttpl_m32int: { fpu }
flags for fisttpll_m64int: { fpu }
flags for fisub_m16int: { fpu }
flags for fisubl_m32int: { fpu }
flags for fisubr_m16int: { fpu }
flags for fisubrl_m32int: { fpu }
flags for flds_m32fp: { fpu }
flags for fldl_m64fp: { fpu }
flags for fldt_m80fp: { fpu }
flags for fld1: { fpu }
flags for fldl2e: { fpu }
flags for fldl2t: { fpu }
flags for fldlg2: { fpu }
flags for fldln2: { fpu }
flags for fldpi: { fpu }
flags for fldz: { fpu }
flags for fmuls_m32fp: { fpu }
flags for fmull_m64fp: { fpu }
flags for fmulp: { fpu }
flags for fnclex: { fpu }
flags for fninit: { fpu }
flags for fnop: { fpu }
flags for fnstsw_ax: { fpu }
flags for fpatan: { fpu }
flags for fprem: { fpu }
flags for fprem1: { fpu }
flags for fptan: { fpu }
flags for frndint: { fpu }
flags for fscale: { fpu }
flags for fsin: { fpu }
flags for fsincos: { fpu }
flags for fsqrt: { fpu }
flags for fsts_m32fp: { fpu }
flags for fstl_m64fp: { fpu }
flags for fstps_m32fp: { fpu }
flags for fstpl_m64fp: { fpu }
flags for fstpt_m80fp: { fpu }
flags for fstsw_ax: { fpu }
flags for fsubs_m32fp: { fpu }
flags for fsubl_m64fp: { fpu }
flags for fsubp: { fpu }
flags for fsubrs_m32fp: { fpu }
flags for fsubrl_m64fp: { fpu }
flags for fsubrp: { fpu }
flags for ftst: { fpu }
flags for fucom: { fpu }
flags for fucomp: { fpu }
flags for fucompp: { fpu }
flags for fwait: { fpu }
flags for fxam: { fpu }
flags for fxch: { fpu }
flags for fxtract: { fpu }
flags for fyl2x: { fpu }
flags for fyl2xp1: { fpu }
flags for haddpd_xmm_m128: { pni }
flags for haddpd_xmm_xmm: { pni }
flags for haddps_xmm_m128: { pni }
flags for haddps_xmm_xmm: { pni }
flags for hsubpd_xmm_m128: { pni }
flags for hsubpd_xmm_xmm: { pni }
flags for hsubps_xmm_m128: { pni }
flags for hsubps_xmm_xmm: { pni }
flags for incw_m16: { }
flags for incl_m32: { }
flags for incq_m64: { }
flags for incb_m8: { }
flags for incw_r16: { }
flags for incl_r32: { }
flags for incq_r64: { }
flags for incb_r8: { }
flags for incb_rh: { }
flags for insertps_xmm_m32_imm8: { sse4_1 }
flags for insertps_xmm_xmm_imm8: { sse4_1 }
flags for int_imm8: { }
flags for int_three: { }
flags for lahf: { lahf_lm }
flags for lddqu_xmm_m128: { pni }
flags for leaw_r16_m16: { }
flags for leaw_r16_m32: { }
flags for leaw_r16_m64: { }
flags for leal_r32_m16: { }
flags for leal_r32_m32: { }
flags for leal_r32_m64: { }
flags for leaq_r64_m16: { }
flags for leaq_r64_m32: { }
flags for leaq_r64_m64: { }
flags for lzcntw_r16_m16: { bmi1 }
flags for lzcntw_r16_r16: { bmi1 }
flags for lzcntl_r32_m32: { bmi1 }
flags for lzcntl_r32_r32: { bmi1 }
flags for lzcntq_r64_m64: { bmi1 }
flags for lzcntq_r64_r64: { bmi1 }
flags for maxpd_xmm_m128: { sse2 }
flags for maxpd_xmm_xmm: { sse2 }
flags for maxps_xmm_m128: { sse }
flags for maxps_xmm_xmm: { sse }
flags for maxsd_xmm_m64: { sse2 }
flags for maxsd_xmm_xmm: { sse2 }
flags for maxss_xmm_m32: { sse }
flags for maxss_xmm_xmm: { sse }
flags for minpd_xmm_m128: { sse2 }
flags for minpd_xmm_xmm: { sse2 }
flags for minps_xmm_m128: { sse }
flags for minps_xmm_xmm: { sse }
flags for minsd_xmm_m64: { sse2 }
flags for minsd_xmm_xmm: { sse2 }
flags for minss_xmm_m32: { sse }
flags for minss_xmm_xmm: { sse }
flags for movw_m16_imm16: { }
flags for movw_m16_r16: { }
flags for movl_m32_imm32: { }
flags for movl_m32_r32: { }
flags for movq_m64_imm32: { }
flags for movq_m64_r64: { }
flags for movb_m8_imm8: { }
flags for movb_m8_r8: { }
flags for movb_m8_rh: { }
flags for movw_r16_imm16: { }
flags for movw_r16_imm16_1: { }
flags for movw_r16_m16: { }
flags for movw_r16_r16: { }
flags for movw_r16_r16_1: { }
flags for movl_r32_imm32: { }
flags for movl_r32_imm32_1: { }
flags for movl_r32_m32: { }
flags for movl_r32_r32: { }
flags for movl_r32_r32_1: { }
flags for movq_r64_imm32: { }
flags for movq_r64_imm64: { }
flags for movq_r64_m64: { }
flags for movq_r64_r64: { }
flags for movq_r64_r64_1: { }
flags for movb_r8_imm8: { }
flags for movb_r8_imm8_1: { }
flags for movb_r8_m8: { }
flags for movb_r8_r8: { }
flags for movb_r8_r8_1: { }
flags for movb_r8_rh: { }
flags for movb_r8_rh_1: { }
flags for movb_rh_imm8: { }
flags for movb_rh_imm8_1: { }
flags for movb_rh_m8: { }
flags for movb_rh_r8: { }
flags for movb_rh_r8_1: { }
flags for movb_rh_rh: { }
flags for movb_rh_rh_1: { }
flags for movapd_m128_xmm: { sse2 }
flags for movapd_xmm_m128: { sse2 }
flags for movapd_xmm_xmm: { sse2 }
flags for movapd_xmm_xmm_1: { sse2 }
flags for movaps_m128_xmm: { sse }
flags for movaps_xmm_m128: { sse }
flags for movaps_xmm_xmm: { sse }
flags for movaps_xmm_xmm_1: { sse }
flags for movbew_m16_r16: { movbe }
flags for movbel_m32_r32: { movbe }
flags for movbeq_m64_r64: { movbe }
flags for movbew_r16_m16: { movbe }
flags for movbel_r32_m32: { movbe }
flags for movbeq_r64_m64: { movbe }
flags for movd_m32_mm: { mmx }
flags for movd_m32_xmm: { sse2 }
flags for movd_mm_m32: { mmx }
flags for movd_mm_r32: { mmx }
flags for movd_r32_mm: { mmx }
flags for movd_r32_xmm: { sse2 }
flags for movd_xmm_m32: { sse2 }
flags for movd_xmm_r32: { sse2 }
flags for movddup_xmm_m64: { pni }
flags for movddup_xmm_xmm: { pni }
flags for movdq2q_mm_xmm: { mmx }
flags for movdqa_m128_xmm: { sse2 }
flags for movdqa_xmm_m128: { sse2 }
flags for movdqa_xmm_xmm: { sse2 }
flags for movdqa_xmm_xmm_1: { sse2 }
flags for movdqu_m128_xmm: { sse2 }
flags for movdqu_xmm_m128: { sse2 }
flags for movdqu_xmm_xmm: { sse2 }
flags for movdqu_xmm_xmm_1: { sse2 }
flags for movhlps_xmm_xmm: { sse }
flags for movhpd_m64_xmm: { sse2 }
flags for movhpd_xmm_m64: { sse2 }
flags for movhps_m64_xmm: { sse }
flags for movhps_xmm_m64: { sse }
flags for movlhps_xmm_xmm: { sse }
flags for movlpd_m64_xmm: { sse2 }
flags for movlpd_xmm_m64: { sse2 }
flags for movlps_m64_xmm: { sse }
flags for movlps_xmm_m64: { sse }
flags for movmskpd_r32_xmm: { sse2 }
flags for movmskpd_r64_xmm: { sse2 }
flags for movmskps_r32_xmm: { sse }
flags for movmskps_r64_xmm: { sse }
flags for movntdq_m128_xmm: { sse2 }
flags for movntdq_m256_ymm: { avx }
flags for movntdqa_xmm_m128: { sse4_1 }
flags for movnti_m32_r32: { }
flags for movnti_m64_r64: { }
flags for movntpd_m128_xmm: { sse2 }
flags for movntps_m128_xmm: { sse }
flags for movntq_m64_mm: { }
flags for movq_m64_mm: { mmx }
flags for movq_m64_mm_1: { mmx }
flags for movq_m64_xmm: { sse2 }
flags for movq_m64_xmm_1: { sse2 }
flags for movq_mm_m64: { mmx }
flags for movq_mm_m64_1: { mmx }
flags for movq_mm_mm: { mmx }
flags for movq_mm_mm_1: { mmx }
flags for movq_mm_r64: { mmx }
flags for movq_r64_mm: { mmx }
flags for movq_r64_xmm: { sse2 }
flags for movq_xmm_m64: { sse2 }
flags for movq_xmm_m64_1: { sse2 }
flags for movq_xmm_r64: { sse2 }
flags for movq_xmm_xmm: { sse2 }
flags for movq_xmm_xmm_1: { sse2 }
flags for movq2dq_xmm_mm: { mmx }
flags for movsd_m64_xmm: { sse2 }
flags for movsd_xmm_m64: { sse2 }
flags for movsd_xmm_xmm: { sse2 }
flags for movsd_xmm_xmm_1: { sse2 }
flags for movshdup_xmm_m128: { pni }
flags for movshdup_xmm_xmm: { pni }
flags for movsldup_xmm_m128: { pni }
flags for movsldup_xmm_xmm: { pni }
flags for movss_m32_xmm: { sse }
flags for movss_xmm_m32: { sse }
flags for movss_xmm_xmm: { sse }
flags for movss_xmm_xmm_1: { sse }
flags for movsbw_r16_m8: { }
flags for movsbw_r16_r8: { }
flags for movsbw_r16_rh: { }
flags for movswl_r32_m16: { }
flags for movsbl_r32_m8: { }
flags for movswl_r32_r16: { }
flags for movsbl_r32_r8: { }
flags for movsbl_r32_rh: { }
flags for movswq_r64_m16: { }
flags for movsbq_r64_m8: { }
flags for movswq_r64_r16: { }
flags for movsbq_r64_r8: { }
flags for movslq_r64_m32: { }
flags for movslq_r64_r32: { }
flags for movupd_m128_xmm: { sse2 }
flags for movupd_xmm_m128: { sse2 }
flags for movupd_xmm_xmm: { sse2 }
flags for movupd_xmm_xmm_1: { sse2 }
flags for movups_m128_xmm: { sse }
flags for movups_xmm_m128: { sse }
flags for movups_xmm_xmm: { sse }
flags for movups_xmm_xmm_1: { sse }
flags for movzbw_r16_m8: { }
flags for movzbw_r16_r8: { }
flags for movzbw_r16_rh: { }
flags for movzwl_r32_m16: { }
flags for movzbl_r32_m8: { }
flags for movzwl_r32_r16: { }
flags for movzbl_r32_r8: { }
flags for movzbl_r32_rh: { }
flags for movzwq_r64_m16: { }
flags for movzbq_r64_m8: { }
flags for movzwq_r64_r16: { }
flags for movzbq_r64_r8: { }
flags for mpsadbw_xmm_m128_imm8: { sse4_1 }
flags for mpsadbw_xmm_xmm_imm8: { sse4_1 }
flags for negw_m16: { }
flags for negl_m32: { }
flags for negq_m64: { }
flags for negb_m8: { }
flags for negw_r16: { }
flags for negl_r32: { }
flags for negq_r64: { }
flags for negb_r8: { }
flags for negb_rh: { }
flags for nop: { }
flags for nopw_m16: { nopl }
flags for nopl_m32: { nopl }
flags for nopw_r16: { nopl }
flags for nopl_r32: { nopl }
flags for notw_m16: { }
flags for notl_m32: { }
flags for notq_m64: { }
flags for notb_m8: { }
flags for notw_r16: { }
flags for notl_r32: { }
flags for notq_r64: { }
flags for notb_r8: { }
flags for notb_rh: { }
flags for orb_al_imm8: { }
flags for orw_ax_imm16: { }
flags for orl_eax_imm32: { }
flags for orw_m16_imm16: { }
flags for orw_m16_imm8: { }
flags for orw_m16_r16: { }
flags for orl_m32_imm32: { }
flags for orl_m32_imm8: { }
flags for orl_m32_r32: { }
flags for orq_m64_imm32: { }
flags for orq_m64_imm8: { }
flags for orq_m64_r64: { }
flags for orb_m8_imm8: { }
flags for orb_m8_r8: { }
flags for orb_m8_rh: { }
flags for orw_r16_imm16: { }
flags for orw_r16_imm8: { }
flags for orw_r16_m16: { }
flags for orw_r16_r16: { }
flags for orw_r16_r16_1: { }
flags for orl_r32_imm32: { }
flags for orl_r32_imm8: { }
flags for orl_r32_m32: { }
flags for orl_r32_r32: { }
flags for orl_r32_r32_1: { }
flags for orq_r64_imm32: { }
flags for orq_r64_imm8: { }
flags for orq_r64_m64: { }
flags for orq_r64_r64: { }
flags for orq_r64_r64_1: { }
flags for orb_r8_imm8: { }
flags for orb_r8_m8: { }
flags for orb_r8_r8: { }
flags for orb_r8_r8_1: { }
flags for orb_r8_rh: { }
flags for orb_r8_rh_1: { }
flags for orq_rax_imm32: { }
flags for orb_rh_imm8: { }
flags for orb_rh_m8: { }
flags for orb_rh_r8: { }
flags for orb_rh_r8_1: { }
flags for orb_rh_rh: { }
flags for orb_rh_rh_1: { }
flags for orpd_xmm_m128: { sse2 }
flags for orpd_xmm_xmm: { sse2 }
flags for orps_xmm_m128: { sse }
flags for orps_xmm_xmm: { sse }
flags for pabsb_mm_m64: { ssse3 }
flags for pabsb_mm_mm: { ssse3 }
flags for pabsb_xmm_m128: { ssse3 }
flags for pabsb_xmm_xmm: { ssse3 }
flags for pabsd_mm_m64: { ssse3 }
flags for pabsd_mm_mm: { ssse3 }
flags for pabsd_xmm_m128: { ssse3 }
flags for pabsd_xmm_xmm: { ssse3 }
flags for pabsw_mm_m64: { ssse3 }
flags for pabsw_mm_mm: { ssse3 }
flags for pabsw_xmm_m128: { ssse3 }
flags for pabsw_xmm_xmm: { ssse3 }
flags for packssdw_mm_m64: { mmx }
flags for packssdw_mm_mm: { mmx }
flags for packssdw_xmm_m128: { sse2 }
flags for packssdw_xmm_xmm: { sse2 }
flags for packsswb_mm_m64: { mmx }
flags for packsswb_mm_mm: { mmx }
flags for packsswb_xmm_m128: { sse2 }
flags for packsswb_xmm_xmm: { sse2 }
flags for packusdw_xmm_m128: { sse4_1 }
flags for packusdw_xmm_xmm: { sse4_1 }
flags for packuswb_mm_m64: { mmx }
flags for packuswb_mm_mm: { mmx }
flags for packuswb_xmm_m128: { sse2 }
flags for packuswb_xmm_xmm: { sse2 }
flags for paddb_mm_m64: { mmx }
flags for paddb_mm_mm: { mmx }
flags for paddb_xmm_m128: { sse2 }
flags for paddb_xmm_xmm: { sse2 }
flags for paddd_mm_m64: { mmx }
flags for paddd_mm_mm: { mmx }
flags for paddd_xmm_m128: { sse2 }
flags for paddd_xmm_xmm: { sse2 }
flags for paddq_mm_m64: { sse2 }
flags for paddq_mm_mm: { sse2 }
flags for paddq_xmm_m128: { sse2 }
flags for paddq_xmm_xmm: { sse2 }
flags for paddsb_mm_m64: { mmx }
flags for paddsb_mm_mm: { mmx }
flags for paddsb_xmm_m128: { sse2 }
flags for paddsb_xmm_xmm: { sse2 }
flags for paddsw_mm_m64: { mmx }
flags for paddsw_mm_mm: { mmx }
flags for paddsw_xmm_m128: { sse2 }
flags for paddsw_xmm_xmm: { sse2 }
flags for paddusb_mm_m64: { mmx }
flags for paddusb_mm_mm: { mmx }
flags for paddusb_xmm_m128: { sse2 }
flags for paddusb_xmm_xmm: { sse2 }
flags for paddusw_mm_m64: { mmx }
flags for paddusw_mm_mm: { mmx }
flags for paddusw_xmm_m128: { sse2 }
flags for paddusw_xmm_xmm: { sse2 }
flags for paddw_mm_m64: { mmx }
flags for paddw_mm_mm: { mmx }
flags for paddw_xmm_m128: { sse2 }
flags for paddw_xmm_xmm: { sse2 }
flags for palignr_mm_m64_imm8: { ssse3 }
flags for palignr_mm_mm_imm8: { ssse3 }
flags for palignr_xmm_m128_imm8: { ssse3 }
flags for palignr_xmm_xmm_imm8: { ssse3 }
flags for pand_mm_m64: { mmx }
flags for pand_mm_mm: { mmx }
flags for pand_xmm_m128: { sse2 }
flags for pand_xmm_xmm: { sse2 }
flags for pandn_mm_m64: { mmx }
flags for pandn_mm_mm: { mmx }
flags for pandn_xmm_m128: { sse2 }
flags for pandn_xmm_xmm: { sse2 }
flags for pavgb_mm_m64: { sse }
flags for pavgb_mm_mm: { sse }
flags for pavgb_xmm_m128: { sse2 }
flags for pavgb_xmm_xmm: { sse2 }
flags for pavgw_mm_m64: { sse }
flags for pavgw_mm_mm: { sse }
flags for pavgw_xmm_m128: { sse2 }
flags for pavgw_xmm_xmm: { sse2 }
flags for pblendvb_xmm_m128_xmm0: { sse4_1 }
flags for pblendvb_xmm_xmm_xmm0: { sse4_1 }
flags for pblendw_xmm_m128_imm8: { sse4_1 }
flags for pblendw_xmm_xmm_imm8: { sse4_1 }
flags for pclmulqdq_xmm_m128_imm8: { pclmulqdq }
flags for pclmulqdq_xmm_xmm_imm8: { pclmulqdq }
flags for pcmpeqb_mm_m64: { mmx }
flags for pcmpeqb_mm_mm: { mmx }
flags for pcmpeqb_xmm_m128: { sse2 }
flags for pcmpeqb_xmm_xmm: { sse2 }
flags for pcmpeqd_mm_m64: { mmx }
flags for pcmpeqd_mm_mm: { mmx }
flags for pcmpeqd_xmm_m128: { sse2 }
flags for pcmpeqd_xmm_xmm: { sse2 }
flags for pcmpeqq_xmm_m128: { sse4_1 }
flags for pcmpeqq_xmm_xmm: { sse4_1 }
flags for pcmpeqw_mm_m64: { mmx }
flags for pcmpeqw_mm_mm: { mmx }
flags for pcmpeqw_xmm_m128: { sse2 }
flags for pcmpeqw_xmm_xmm: { sse2 }
flags for pcmpestri_xmm_m128_imm8: { sse4_2 }
flags for pcmpestri_xmm_xmm_imm8: { sse4_2 }
flags for pcmpestrm_xmm_m128_imm8: { sse4_2 }
flags for pcmpestrm_xmm_xmm_imm8: { sse4_2 }
flags for pcmpgtb_mm_m64: { mmx }
flags for pcmpgtb_mm_mm: { mmx }
flags for pcmpgtb_xmm_m128: { sse2 }
flags for pcmpgtb_xmm_xmm: { sse2 }
flags for pcmpgtd_mm_m64: { mmx }
flags for pcmpgtd_mm_mm: { mmx }
flags for pcmpgtd_xmm_m128: { sse2 }
flags for pcmpgtd_xmm_xmm: { sse2 }
flags for pcmpgtq_xmm_m128: { sse4_2 }
flags for pcmpgtq_xmm_xmm: { sse4_2 }
flags for pcmpgtw_mm_m64: { mmx }
flags for pcmpgtw_mm_mm: { mmx }
flags for pcmpgtw_xmm_m128: { sse2 }
flags for pcmpgtw_xmm_xmm: { sse2 }
flags for pcmpistri_xmm_m128_imm8: { sse4_2 }
flags for pcmpistri_xmm_xmm_imm8: { sse4_2 }
flags for pcmpistrm_xmm_m128_imm8: { sse4_2 }
flags for pcmpistrm_xmm_xmm_imm8: { sse4_2 }
flags for pdepl_r32_r32_m32: { bmi2 }
flags for pdepl_r32_r32_r32: { bmi2 }
flags for pdepq_r64_r64_m64: { bmi2 }
flags for pdepq_r64_r64_r64: { bmi2 }
flags for pextl_r32_r32_m32: { bmi2 }
flags for pextl_r32_r32_r32: { bmi2 }
flags for pextq_r64_r64_m64: { bmi2 }
flags for pextq_r64_r64_r64: { bmi2 }
flags for pextrb_m8_xmm_imm8: { sse4_1 }
flags for pextrb_r32_xmm_imm8: { sse4_1 }
flags for pextrb_r64_xmm_imm8: { sse4_1 }
flags for pextrd_m32_xmm_imm8: { sse4_1 }
flags for pextrd_r32_xmm_imm8: { sse4_1 }
flags for pextrq_m64_xmm_imm8: { sse4_1 }
flags for pextrq_r64_xmm_imm8: { sse4_1 }
flags for pextrw_m16_xmm_imm8: { sse4_1 }
flags for pextrw_r32_mm_imm8: { sse }
flags for pextrw_r32_xmm_imm8: { sse2 }
flags for pextrw_r32_xmm_imm8_1: { sse4_1 }
flags for pextrw_r64_mm_imm8: { sse }
flags for pextrw_r64_xmm_imm8: { sse2 }
flags for pextrw_r64_xmm_imm8_1: { sse4_1 }
flags for phaddd_mm_m64: { ssse3 }
flags for phaddd_mm_mm: { ssse3 }
flags for phaddd_xmm_m128: { ssse3 }
flags for phaddd_xmm_xmm: { ssse3 }
flags for phaddsw_mm_m64: { ssse3 }
flags for phaddsw_mm_mm: { ssse3 }
flags for phaddsw_xmm_m128: { ssse3 }
flags for phaddsw_xmm_xmm: { ssse3 }
flags for phaddw_mm_m64: { ssse3 }
flags for phaddw_mm_mm: { ssse3 }
flags for phaddw_xmm_m128: { ssse3 }
flags for phaddw_xmm_xmm: { ssse3 }
flags for phminposuw_xmm_m128: { sse4_1 }
flags for phminposuw_xmm_xmm: { sse4_1 }
flags for phsubd_mm_m64: { ssse3 }
flags for phsubd_mm_mm: { ssse3 }
flags for phsubd_xmm_m128: { ssse3 }
flags for phsubd_xmm_xmm: { ssse3 }
flags for phsubsw_mm_m64: { ssse3 }
flags for phsubsw_mm_mm: { ssse3 }
flags for phsubsw_xmm_m128: { ssse3 }
flags for phsubsw_xmm_xmm: { ssse3 }
flags for phsubw_mm_m64: { ssse3 }
flags for phsubw_mm_mm: { ssse3 }
flags for phsubw_xmm_m128: { ssse3 }
flags for phsubw_xmm_xmm: { ssse3 }
flags for pinsrb_xmm_m8_imm8: { sse4_1 }
flags for pinsrb_xmm_r32_imm8: { sse4_1 }
flags for pinsrd_xmm_m32_imm8: { sse4_1 }
flags for pinsrd_xmm_r32_imm8: { sse4_1 }
flags for pinsrw_mm_m16_imm8: { sse }
flags for pinsrw_mm_r32_imm8: { sse }
flags for pinsrw_xmm_m16_imm8: { sse2 }
flags for pinsrw_xmm_r32_imm8: { sse2 }
flags for pmaddubsw_mm_m64: { mmx ssse3 }
flags for pmaddubsw_mm_mm: { mmx ssse3 }
flags for pmaddubsw_xmm_m128: { ssse3 }
flags for pmaddubsw_xmm_xmm: { ssse3 }
flags for pmaddwd_mm_m64: { mmx }
flags for pmaddwd_mm_mm: { mmx }
flags for pmaddwd_xmm_m128: { sse2 }
flags for pmaddwd_xmm_xmm: { sse2 }
flags for pmaxsb_xmm_m128: { sse4_1 }
flags for pmaxsb_xmm_xmm: { sse4_1 }
flags for pmaxsd_xmm_m128: { sse4_1 }
flags for pmaxsd_xmm_xmm: { sse4_1 }
flags for pmaxsw_mm_m64: { sse }
flags for pmaxsw_mm_mm: { sse }
flags for pmaxsw_xmm_m128: { sse2 }
flags for pmaxsw_xmm_xmm: { sse2 }
flags for pmaxub_mm_m64: { sse }
flags for pmaxub_mm_mm: { sse }
flags for pmaxub_xmm_m128: { sse2 }
flags for pmaxub_xmm_xmm: { sse2 }
flags for pmaxud_xmm_m128: { sse4_1 }
flags for pmaxud_xmm_xmm: { sse4_1 }
flags for pmaxuw_xmm_m128: { sse4_1 }
flags for pmaxuw_xmm_xmm: { sse4_1 }
flags for pminsb_xmm_m128: { sse4_1 }
flags for pminsb_xmm_xmm: { sse4_1 }
flags for pminsd_xmm_m128: { sse4_1 }
flags for pminsd_xmm_xmm: { sse4_1 }
flags for pminsw_mm_m64: { sse }
flags for pminsw_mm_mm: { sse }
flags for pminsw_xmm_m128: { sse2 }
flags for pminsw_xmm_xmm: { sse2 }
flags for pminub_mm_m64: { sse }
flags for pminub_mm_mm: { sse }
flags for pminub_xmm_m128: { sse2 }
flags for pminub_xmm_xmm: { sse2 }
flags for pminud_xmm_m128: { sse4_1 }
flags for pminud_xmm_xmm: { sse4_1 }
flags for pminuw_xmm_m128: { sse4_1 }
flags for pminuw_xmm_xmm: { sse4_1 }
flags for pmovmskb_r32_mm: { sse }
flags for pmovmskb_r32_xmm: { sse2 }
flags for pmovmskb_r64_mm: { sse }
flags for pmovmskb_r64_xmm: { sse2 }
flags for pmovsxbd_xmm_m32: { sse4_1 }
flags for pmovsxbd_xmm_xmm: { sse4_1 }
flags for pmovsxbq_xmm_m16: { sse4_1 }
flags for pmovsxbq_xmm_xmm: { sse4_1 }
flags for pmovsxbw_xmm_m64: { sse4_1 }
flags for pmovsxbw_xmm_xmm: { sse4_1 }
flags for pmovsxdq_xmm_m64: { sse4_1 }
flags for pmovsxdq_xmm_xmm: { sse4_1 }
flags for pmovsxwd_xmm_m64: { sse4_1 }
flags for pmovsxwd_xmm_xmm: { sse4_1 }
flags for pmovsxwq_xmm_m32: { sse4_1 }
flags for pmovsxwq_xmm_xmm: { sse4_1 }
flags for pmovzxbd_xmm_m32: { sse4_1 }
flags for pmovzxbd_xmm_xmm: { sse4_1 }
flags for pmovzxbq_xmm_m16: { sse4_1 }
flags for pmovzxbq_xmm_xmm: { sse4_1 }
flags for pmovzxbw_xmm_m64: { sse4_1 }
flags for pmovzxbw_xmm_xmm: { sse4_1 }
flags for pmovzxdq_xmm_m64: { sse4_1 }
flags for pmovzxdq_xmm_xmm: { sse4_1 }
flags for pmovzxwd_xmm_m64: { sse4_1 }
flags for pmovzxwd_xmm_xmm: { sse4_1 }
flags for pmovzxwq_xmm_m32: { sse4_1 }
flags for pmovzxwq_xmm_xmm: { sse4_1 }
flags for pmuldq_xmm_m128: { sse4_1 }
flags for pmuldq_xmm_xmm: { sse4_1 }
flags for pmulhrsw_mm_m64: { ssse3 }
flags for pmulhrsw_mm_mm: { ssse3 }
flags for pmulhrsw_xmm_m128: { ssse3 }
flags for pmulhrsw_xmm_xmm: { ssse3 }
flags for pmulhuw_mm_m64: { sse }
flags for pmulhuw_mm_mm: { sse }
flags for pmulhuw_xmm_m128: { sse2 }
flags for pmulhuw_xmm_xmm: { sse2 }
flags for pmulhw_mm_m64: { mmx }
flags for pmulhw_mm_mm: { mmx }
flags for pmulhw_xmm_m128: { sse2 }
flags for pmulhw_xmm_xmm: { sse2 }
flags for pmulld_xmm_m128: { sse4_1 }
flags for pmulld_xmm_xmm: { sse4_1 }
flags for pmullw_mm_m64: { mmx }
flags for pmullw_mm_mm: { mmx }
flags for pmullw_xmm_m128: { sse2 }
flags for pmullw_xmm_xmm: { sse2 }
flags for pmuludq_mm_m64: { sse2 }
flags for pmuludq_mm_mm: { sse2 }
flags for pmuludq_xmm_m128: { sse2 }
flags for pmuludq_xmm_xmm: { sse2 }
flags for popw_m16: { }
flags for popq_m64: { }
flags for popw_r16: { }
flags for popw_r16_1: { }
flags for popq_r64: { }
flags for popq_r64_1: { }
flags for popcntw_r16_m16: { popcnt }
flags for popcntw_r16_r16: { popcnt }
flags for popcntl_r32_m32: { popcnt }
flags for popcntl_r32_r32: { popcnt }
flags for popcntq_r64_m64: { popcnt }
flags for popcntq_r64_r64: { popcnt }
flags for popf: { }
flags for popfq: { }
flags for por_mm_m64: { mmx }
flags for por_mm_mm: { mmx }
flags for por_xmm_m128: { sse2 }
flags for por_xmm_xmm: { sse2 }
flags for psadbw_mm_m64: { sse }
flags for psadbw_mm_mm: { sse }
flags for psadbw_xmm_m128: { sse2 }
flags for psadbw_xmm_xmm: { sse2 }
flags for pshufb_mm_m64: { ssse3 }
flags for pshufb_mm_mm: { ssse3 }
flags for pshufb_xmm_m128: { ssse3 }
flags for pshufb_xmm_xmm: { ssse3 }
flags for pshufd_xmm_m128_imm8: { sse2 }
flags for pshufd_xmm_xmm_imm8: { sse2 }
flags for pshufhw_xmm_m128_imm8: { sse2 }
flags for pshufhw_xmm_xmm_imm8: { sse2 }
flags for pshuflw_xmm_m128_imm8: { sse2 }
flags for pshuflw_xmm_xmm_imm8: { sse2 }
flags for pshufw_mm_m64_imm8: { }
flags for pshufw_mm_mm_imm8: { }
flags for psignb_mm_m64: { ssse3 }
flags for psignb_mm_mm: { ssse3 }
flags for psignb_xmm_m128: { ssse3 }
flags for psignb_xmm_xmm: { ssse3 }
flags for psignd_mm_m64: { ssse3 }
flags for psignd_mm_mm: { ssse3 }
flags for psignd_xmm_m128: { ssse3 }
flags for psignd_xmm_xmm: { ssse3 }
flags for psignw_mm_m64: { ssse3 }
flags for psignw_mm_mm: { ssse3 }
flags for psignw_xmm_m128: { ssse3 }
flags for psignw_xmm_xmm: { ssse3 }
flags for pslld_mm_imm8: { mmx }
flags for pslld_mm_m64: { mmx }
flags for pslld_mm_mm: { mmx }
flags for pslld_xmm_imm8: { sse2 }
flags for pslld_xmm_m128: { sse2 }
flags for pslld_xmm_xmm: { sse2 }
flags for pslldq_xmm_imm8: { sse2 }
flags for psllq_mm_imm8: { mmx }
flags for psllq_mm_m64: { mmx }
flags for psllq_mm_mm: { mmx }
flags for psllq_xmm_imm8: { sse2 }
flags for psllq_xmm_m128: { sse2 }
flags for psllq_xmm_xmm: { sse2 }
flags for psllw_mm_imm8: { mmx }
flags for psllw_mm_m64: { mmx }
flags for psllw_mm_mm: { mmx }
flags for psllw_xmm_imm8: { sse2 }
flags for psllw_xmm_m128: { sse2 }
flags for psllw_xmm_xmm: { sse2 }
flags for psrad_mm_imm8: { mmx }
flags for psrad_mm_m64: { mmx }
flags for psrad_mm_mm: { mmx }
flags for psrad_xmm_imm8: { sse2 }
flags for psrad_xmm_m128: { sse2 }
flags for psrad_xmm_xmm: { sse2 }
flags for psraw_mm_imm8: { mmx }
flags for psraw_mm_m64: { mmx }
flags for psraw_mm_mm: { mmx }
flags for psraw_xmm_imm8: { sse2 }
flags for psraw_xmm_m128: { sse2 }
flags for psraw_xmm_xmm: { sse2 }
flags for psrld_mm_imm8: { mmx }
flags for psrld_mm_m64: { mmx }
flags for psrld_mm_mm: { mmx }
flags for psrld_xmm_imm8: { sse2 }
flags for psrld_xmm_m128: { sse2 }
flags for psrld_xmm_xmm: { sse2 }
flags for psrldq_xmm_imm8: { sse2 }
flags for psrlq_mm_imm8: { mmx }
flags for psrlq_mm_m64: { mmx }
flags for psrlq_mm_mm: { mmx }
flags for psrlq_xmm_imm8: { sse2 }
flags for psrlq_xmm_m128: { sse2 }
flags for psrlq_xmm_xmm: { sse2 }
flags for psrlw_mm_imm8: { mmx }
flags for psrlw_mm_m64: { mmx }
flags for psrlw_mm_mm: { mmx }
flags for psrlw_xmm_imm8: { sse2 }
flags for psrlw_xmm_m128: { sse2 }
flags for psrlw_xmm_xmm: { sse2 }
flags for psubb_mm_m64: { mmx }
flags for psubb_mm_mm: { mmx }
flags for psubb_xmm_m128: { sse2 }
flags for psubb_xmm_xmm: { sse2 }
flags for psubd_mm_m64: { mmx }
flags for psubd_mm_mm: { mmx }
flags for psubd_xmm_m128: { sse2 }
flags for psubd_xmm_xmm: { sse2 }
flags for psubq_mm_m64: { sse2 }
flags for psubq_mm_mm: { sse2 }
flags for psubq_xmm_m128: { sse2 }
flags for psubq_xmm_xmm: { sse2 }
flags for psubsb_mm_m64: { mmx }
flags for psubsb_mm_mm: { mmx }
flags for psubsb_xmm_m128: { sse2 }
flags for psubsb_xmm_xmm: { sse2 }
flags for psubsw_mm_m64: { mmx }
flags for psubsw_mm_mm: { mmx }
flags for psubsw_xmm_m128: { sse2 }
flags for psubsw_xmm_xmm: { sse2 }
flags for psubusb_mm_m64: { mmx }
flags for psubusb_mm_mm: { mmx }
flags for psubusb_xmm_m128: { sse2 }
flags for psubusb_xmm_xmm: { sse2 }
flags for psubusw_mm_m64: { mmx }
flags for psubusw_mm_mm: { mmx }
flags for psubusw_xmm_m128: { sse2 }
flags for psubusw_xmm_xmm: { sse2 }
flags for psubw_mm_m64: { mmx }
flags for psubw_mm_mm: { mmx }
flags for psubw_xmm_m128: { sse2 }
flags for psubw_xmm_xmm: { sse2 }
flags for ptest_xmm_m128: { sse4_1 }
flags for ptest_xmm_xmm: { sse4_1 }
flags for punpckhbw_mm_m64: { mmx }
flags for punpckhbw_mm_mm: { mmx }
flags for punpckhbw_xmm_m128: { sse2 }
flags for punpckhbw_xmm_xmm: { sse2 }
flags for punpckhdq_mm_m64: { mmx }
flags for punpckhdq_mm_mm: { mmx }
flags for punpckhdq_xmm_m128: { sse2 }
flags for punpckhdq_xmm_xmm: { sse2 }
flags for punpckhqdq_xmm_m128: { sse2 }
flags for punpckhqdq_xmm_xmm: { sse2 }
flags for punpckhwd_mm_m64: { mmx }
flags for punpckhwd_mm_mm: { mmx }
flags for punpckhwd_xmm_m128: { sse2 }
flags for punpckhwd_xmm_xmm: { sse2 }
flags for punpcklbw_mm_m32: { mmx }
flags for punpcklbw_mm_mm: { mmx }
flags for punpcklbw_xmm_m128: { sse2 }
flags for punpcklbw_xmm_xmm: { sse2 }
flags for punpckldq_mm_m32: { mmx }
flags for punpckldq_mm_mm: { mmx }
flags for punpckldq_xmm_m128: { sse2 }
flags for punpckldq_xmm_xmm: { sse2 }
flags for punpcklqdq_xmm_m128: { sse2 }
flags for punpcklqdq_xmm_xmm: { sse2 }
flags for punpcklwd_mm_m32: { mmx }
flags for punpcklwd_mm_mm: { mmx }
flags for punpcklwd_xmm_m128: { sse2 }
flags for punpcklwd_xmm_xmm: { sse2 }
flags for pushq_imm16: { }
flags for pushq_imm32: { }
flags for pushq_imm8: { }
flags for pushw_m16: { }
flags for pushq_m64: { }
flags for pushw_r16: { }
flags for pushw_r16_1: { }
flags for pushq_r64: { }
flags for pushq_r64_1: { }
flags for pushf: { }
flags for pushfq: { }
flags for pxor_mm_m64: { mmx }
flags for pxor_mm_mm: { mmx }
flags for pxor_xmm_m128: { sse2 }
flags for pxor_xmm_xmm: { sse2 }
flags for rcpps_xmm_m128: { sse }
flags for rcpps_xmm_xmm: { sse }
flags for rcpss_xmm_m32: { sse }
flags for rcpss_xmm_xmm: { sse }
flags for rdrand_r16: { rdrand }
flags for rdrand_r32: { rdrand }
flags for rdrand_r64: { rdrand }
flags for repz scasb_m8_1: { rep_good }
flags for roundpd_xmm_m128_imm8: { sse4_1 }
flags for roundpd_xmm_xmm_imm8: { sse4_1 }
flags for roundps_xmm_m128_imm8: { sse4_1 }
flags for roundps_xmm_xmm_imm8: { sse4_1 }
flags for roundsd_xmm_m64_imm8: { sse4_1 }
flags for roundsd_xmm_xmm_imm8: { sse4_1 }
flags for roundss_xmm_m32_imm8: { sse4_1 }
flags for roundss_xmm_xmm_imm8: { sse4_1 }
flags for rsqrtps_xmm_m128: { sse }
flags for rsqrtps_xmm_xmm: { sse }
flags for rsqrtss_xmm_m32: { sse }
flags for rsqrtss_xmm_xmm: { sse }
flags for sahf: { lahf_lm }
flags for salw_m16_cl: { }
flags for salw_m16_imm8: { }
flags for salw_m16_one: { }
flags for sall_m32_cl: { }
flags for sall_m32_imm8: { }
flags for sall_m32_one: { }
flags for salq_m64_cl: { }
flags for salq_m64_imm8: { }
flags for salq_m64_one: { }
flags for salb_m8_cl: { }
flags for salb_m8_imm8: { }
flags for salb_m8_one: { }
flags for salw_r16_cl: { }
flags for salw_r16_imm8: { }
flags for salw_r16_one: { }
flags for sall_r32_cl: { }
flags for sall_r32_imm8: { }
flags for sall_r32_one: { }
flags for salq_r64_cl: { }
flags for salq_r64_imm8: { }
flags for salq_r64_one: { }
flags for salb_r8_cl: { }
flags for salb_r8_imm8: { }
flags for salb_r8_one: { }
flags for salb_rh_cl: { }
flags for salb_rh_imm8: { }
flags for salb_rh_one: { }
flags for sarw_m16_cl: { }
flags for sarw_m16_imm8: { }
flags for sarw_m16_one: { }
flags for sarl_m32_cl: { }
flags for sarl_m32_imm8: { }
flags for sarl_m32_one: { }
flags for sarq_m64_cl: { }
flags for sarq_m64_imm8: { }
flags for sarq_m64_one: { }
flags for sarb_m8_cl: { }
flags for sarb_m8_imm8: { }
flags for sarb_m8_one: { }
flags for sarw_r16_cl: { }
flags for sarw_r16_imm8: { }
flags for sarw_r16_one: { }
flags for sarl_r32_cl: { }
flags for sarl_r32_imm8: { }
flags for sarl_r32_one: { }
flags for sarq_r64_cl: { }
flags for sarq_r64_imm8: { }
flags for sarq_r64_one: { }
flags for sarb_r8_cl: { }
flags for sarb_r8_imm8: { }
flags for sarb_r8_one: { }
flags for sarb_rh_cl: { }
flags for sarb_rh_imm8: { }
flags for sarb_rh_one: { }
flags for sarxl_r32_m32_r32: { bmi2 }
flags for sarxl_r32_r32_r32: { bmi2 }
flags for sarxq_r64_m64_r64: { bmi2 }
flags for sarxq_r64_r64_r64: { bmi2 }
flags for shlw_m16_cl: { }
flags for shlw_m16_imm8: { }
flags for shlw_m16_one: { }
flags for shll_m32_cl: { }
flags for shll_m32_imm8: { }
flags for shll_m32_one: { }
flags for shlq_m64_cl: { }
flags for shlq_m64_imm8: { }
flags for shlq_m64_one: { }
flags for shlb_m8_cl: { }
flags for shlb_m8_imm8: { }
flags for shlb_m8_one: { }
flags for shlw_r16_cl: { }
flags for shlw_r16_imm8: { }
flags for shlw_r16_one: { }
flags for shll_r32_cl: { }
flags for shll_r32_imm8: { }
flags for shll_r32_one: { }
flags for shlq_r64_cl: { }
flags for shlq_r64_imm8: { }
flags for shlq_r64_one: { }
flags for shlb_r8_cl: { }
flags for shlb_r8_imm8: { }
flags for shlb_r8_one: { }
flags for shlb_rh_cl: { }
flags for shlb_rh_imm8: { }
flags for shlb_rh_one: { }
flags for shldw_m16_r16_cl: { }
flags for shldw_m16_r16_imm8: { }
flags for shldl_m32_r32_cl: { }
flags for shldl_m32_r32_imm8: { }
flags for shldq_m64_r64_cl: { }
flags for shldq_m64_r64_imm8: { }
flags for shldw_r16_r16_cl: { }
flags for shldw_r16_r16_imm8: { }
flags for shldl_r32_r32_cl: { }
flags for shldl_r32_r32_imm8: { }
flags for shldq_r64_r64_cl: { }
flags for shldq_r64_r64_imm8: { }
flags for shlxl_r32_m32_r32: { bmi2 }
flags for shlxl_r32_r32_r32: { bmi2 }
flags for shlxq_r64_m64_r64: { bmi2 }
flags for shlxq_r64_r64_r64: { bmi2 }
flags for shrw_m16_cl: { }
flags for shrw_m16_imm8: { }
flags for shrw_m16_one: { }
flags for shrl_m32_cl: { }
flags for shrl_m32_imm8: { }
flags for shrl_m32_one: { }
flags for shrq_m64_cl: { }
flags for shrq_m64_imm8: { }
flags for shrq_m64_one: { }
flags for shrb_m8_cl: { }
flags for shrb_m8_imm8: { }
flags for shrb_m8_one: { }
flags for shrw_r16_cl: { }
flags for shrw_r16_imm8: { }
flags for shrw_r16_one: { }
flags for shrl_r32_cl: { }
flags for shrl_r32_imm8: { }
flags for shrl_r32_one: { }
flags for shrq_r64_cl: { }
flags for shrq_r64_imm8: { }
flags for shrq_r64_one: { }
flags for shrb_r8_cl: { }
flags for shrb_r8_imm8: { }
flags for shrb_r8_one: { }
flags for shrb_rh_cl: { }
flags for shrb_rh_imm8: { }
flags for shrb_rh_one: { }
flags for shrxl_r32_m32_r32: { bmi2 }
flags for shrxl_r32_r32_r32: { bmi2 }
flags for shrxq_r64_m64_r64: { bmi2 }
flags for shrxq_r64_r64_r64: { bmi2 }
flags for shufpd_xmm_m128_imm8: { sse2 }
flags for shufpd_xmm_xmm_imm8: { sse2 }
flags for shufps_xmm_m128_imm8: { sse }
flags for shufps_xmm_xmm_imm8: { sse }
flags for sqrtpd_xmm_m128: { sse2 }
flags for sqrtpd_xmm_xmm: { sse2 }
flags for sqrtps_xmm_m128: { sse }
flags for sqrtps_xmm_xmm: { sse }
flags for sqrtsd_xmm_m64: { sse2 }
flags for sqrtsd_xmm_xmm: { sse2 }
flags for sqrtss_xmm_m32: { sse }
flags for sqrtss_xmm_xmm: { sse }
flags for subb_al_imm8: { }
flags for subw_ax_imm16: { }
flags for subl_eax_imm32: { }
flags for subw_m16_imm16: { }
flags for subw_m16_imm8: { }
flags for subw_m16_r16: { }
flags for subl_m32_imm32: { }
flags for subl_m32_imm8: { }
flags for subl_m32_r32: { }
flags for subq_m64_imm32: { }
flags for subq_m64_imm8: { }
flags for subq_m64_r64: { }
flags for subb_m8_imm8: { }
flags for subb_m8_r8: { }
flags for subb_m8_rh: { }
flags for subw_r16_imm16: { }
flags for subw_r16_imm8: { }
flags for subw_r16_m16: { }
flags for subw_r16_r16: { }
flags for subw_r16_r16_1: { }
flags for subl_r32_imm32: { }
flags for subl_r32_imm8: { }
flags for subl_r32_m32: { }
flags for subl_r32_r32: { }
flags for subl_r32_r32_1: { }
flags for subq_r64_imm32: { }
flags for subq_r64_imm8: { }
flags for subq_r64_m64: { }
flags for subq_r64_r64: { }
flags for subq_r64_r64_1: { }
flags for subb_r8_imm8: { }
flags for subb_r8_m8: { }
flags for subb_r8_r8: { }
flags for subb_r8_r8_1: { }
flags for subb_r8_rh: { }
flags for subb_r8_rh_1: { }
flags for subq_rax_imm32: { }
flags for subb_rh_imm8: { }
flags for subb_rh_m8: { }
flags for subb_rh_r8: { }
flags for subb_rh_r8_1: { }
flags for subb_rh_rh: { }
flags for subb_rh_rh_1: { }
flags for subpd_xmm_m128: { sse2 }
flags for subpd_xmm_xmm: { sse2 }
flags for subps_xmm_m128: { sse }
flags for subps_xmm_xmm: { sse }
flags for subsd_xmm_m64: { sse2 }
flags for subsd_xmm_xmm: { sse2 }
flags for subss_xmm_m32: { sse }
flags for subss_xmm_xmm: { sse }
flags for tzcntw_r16_m16: { bmi1 }
flags for tzcntw_r16_r16: { bmi1 }
flags for tzcntl_r32_m32: { bmi1 }
flags for tzcntl_r32_r32: { bmi1 }
flags for tzcntq_r64_m64: { bmi1 }
flags for tzcntq_r64_r64: { bmi1 }
flags for ucomisd_xmm_m64: { sse2 }
flags for ucomisd_xmm_xmm: { sse2 }
flags for ucomiss_xmm_m32: { sse }
flags for ucomiss_xmm_xmm: { sse }
flags for unpckhpd_xmm_m128: { sse2 }
flags for unpckhpd_xmm_xmm: { sse2 }
flags for unpckhps_xmm_m128: { sse }
flags for unpckhps_xmm_xmm: { sse }
flags for unpcklpd_xmm_m128: { sse2 }
flags for unpcklpd_xmm_xmm: { sse2 }
flags for unpcklps_xmm_m128: { sse }
flags for unpcklps_xmm_xmm: { sse }
flags for vaddpd_xmm_xmm_m128: { avx }
flags for vaddpd_xmm_xmm_xmm: { avx }
flags for vaddpd_ymm_ymm_m256: { avx }
flags for vaddpd_ymm_ymm_ymm: { avx }
flags for vaddps_xmm_xmm_m128: { avx }
flags for vaddps_xmm_xmm_xmm: { avx }
flags for vaddps_ymm_ymm_m256: { avx }
flags for vaddps_ymm_ymm_ymm: { avx }
flags for vaddsd_xmm_xmm_m64: { avx }
flags for vaddsd_xmm_xmm_xmm: { avx }
flags for vaddss_xmm_xmm_m32: { avx }
flags for vaddss_xmm_xmm_xmm: { avx }
flags for vaddsubpd_xmm_xmm_m128: { avx }
flags for vaddsubpd_xmm_xmm_xmm: { avx }
flags for vaddsubpd_ymm_ymm_m256: { avx }
flags for vaddsubpd_ymm_ymm_ymm: { avx }
flags for vaddsubps_xmm_xmm_m128: { avx }
flags for vaddsubps_xmm_xmm_xmm: { avx }
flags for vaddsubps_ymm_ymm_m256: { avx }
flags for vaddsubps_ymm_ymm_ymm: { avx }
flags for vaesdec_xmm_xmm_m128: { aes avx }
flags for vaesdec_xmm_xmm_xmm: { aes avx }
flags for vaesdeclast_xmm_xmm_m128: { aes avx }
flags for vaesdeclast_xmm_xmm_xmm: { aes avx }
flags for vaesenc_xmm_xmm_m128: { aes avx }
flags for vaesenc_xmm_xmm_xmm: { aes avx }
flags for vaesenclast_xmm_xmm_m128: { aes avx }
flags for vaesenclast_xmm_xmm_xmm: { aes avx }
flags for vaesimc_xmm_m128: { aes avx }
flags for vaesimc_xmm_xmm: { aes avx }
flags for vaeskeygenassist_xmm_m128_imm8: { aes avx }
flags for vaeskeygenassist_xmm_xmm_imm8: { aes avx }
flags for vandnpd_xmm_xmm_m128: { avx }
flags for vandnpd_xmm_xmm_xmm: { avx }
flags for vandnpd_ymm_ymm_m256: { avx }
flags for vandnpd_ymm_ymm_ymm: { avx }
flags for vandnps_xmm_xmm_m128: { avx }
flags for vandnps_xmm_xmm_xmm: { avx }
flags for vandnps_ymm_ymm_m256: { avx }
flags for vandnps_ymm_ymm_ymm: { avx }
flags for vandpd_xmm_xmm_m128: { avx }
flags for vandpd_xmm_xmm_xmm: { avx }
flags for vandpd_ymm_ymm_m256: { avx }
flags for vandpd_ymm_ymm_ymm: { avx }
flags for vandps_xmm_xmm_m128: { avx }
flags for vandps_xmm_xmm_xmm: { avx }
flags for vandps_ymm_ymm_m256: { avx }
flags for vandps_ymm_ymm_ymm: { avx }
flags for vblendpd_xmm_xmm_m128_imm8: { avx }
flags for vblendpd_xmm_xmm_xmm_imm8: { avx }
flags for vblendpd_ymm_ymm_m256_imm8: { avx }
flags for vblendpd_ymm_ymm_ymm_imm8: { avx }
flags for vblendps_xmm_xmm_m128_imm8: { avx }
flags for vblendps_xmm_xmm_xmm_imm8: { avx }
flags for vblendps_ymm_ymm_m256_imm8: { avx }
flags for vblendps_ymm_ymm_ymm_imm8: { avx }
flags for vblendvpd_xmm_xmm_m128_xmm: { avx }
flags for vblendvpd_xmm_xmm_xmm_xmm: { avx }
flags for vblendvpd_ymm_ymm_m256_ymm: { avx }
flags for vblendvpd_ymm_ymm_ymm_ymm: { avx }
flags for vblendvps_xmm_xmm_m128_xmm: { avx }
flags for vblendvps_xmm_xmm_xmm_xmm: { avx }
flags for vblendvps_ymm_ymm_m256_ymm: { avx }
flags for vblendvps_ymm_ymm_ymm_ymm: { avx }
flags for vbroadcastf128_ymm_m128: { avx }
flags for vpbroadcasti128_ymm_m128: { avx2 }
flags for vbroadcastsd_ymm_m64: { avx }
flags for vbroadcastsd_ymm_xmm: { avx2 }
flags for vbroadcastss_xmm_m32: { avx }
flags for vbroadcastss_xmm_xmm: { avx2 }
flags for vbroadcastss_ymm_m32: { avx }
flags for vbroadcastss_ymm_xmm: { avx2 }
flags for vcmppd_xmm_xmm_m128_imm8: { avx }
flags for vcmppd_xmm_xmm_xmm_imm8: { avx }
flags for vcmppd_ymm_ymm_m256_imm8: { avx }
flags for vcmppd_ymm_ymm_ymm_imm8: { avx }
flags for vcmpps_xmm_xmm_m128_imm8: { avx }
flags for vcmpps_xmm_xmm_xmm_imm8: { avx }
flags for vcmpps_ymm_ymm_m256_imm8: { avx }
flags for vcmpps_ymm_ymm_ymm_imm8: { avx }
flags for vcmpsd_xmm_xmm_m64_imm8: { avx }
flags for vcmpsd_xmm_xmm_xmm_imm8: { avx }
flags for vcmpss_xmm_xmm_m32_imm8: { avx }
flags for vcmpss_xmm_xmm_xmm_imm8: { avx }
flags for vcomisd_xmm_m64: { avx }
flags for vcomisd_xmm_xmm: { avx }
flags for vcomiss_xmm_m32: { avx }
flags for vcomiss_xmm_xmm: { avx }
flags for vcvtdq2pd_xmm_m64: { avx }
flags for vcvtdq2pd_xmm_xmm: { avx }
flags for vcvtdq2pd_ymm_m128: { avx }
flags for vcvtdq2pd_ymm_ymm: { avx }
flags for vcvtdq2ps_xmm_m128: { avx }
flags for vcvtdq2ps_xmm_xmm: { avx }
flags for vcvtdq2ps_ymm_m256: { avx }
flags for vcvtdq2ps_ymm_ymm: { avx }
flags for vcvtpd2dqx_xmm_m128: { avx }
flags for vcvtpd2dq_xmm_m256: { avx }
flags for vcvtpd2dqx_xmm_xmm: { avx }
flags for vcvtpd2dq_xmm_ymm: { avx }
flags for vcvtpd2ps_xmm_m128: { avx }
flags for vcvtpd2ps_xmm_m256: { avx }
flags for vcvtpd2ps_xmm_xmm: { avx }
flags for vcvtpd2ps_xmm_ymm: { avx }
flags for vcvtph2ps_xmm_m64: { f16c }
flags for vcvtph2ps_xmm_xmm: { f16c }
flags for vcvtph2ps_ymm_m128: { f16c }
flags for vcvtph2ps_ymm_xmm: { f16c }
flags for vcvtps2dq_xmm_m128: { avx }
flags for vcvtps2dq_xmm_xmm: { avx }
flags for vcvtps2dq_ymm_m256: { avx }
flags for vcvtps2dq_ymm_ymm: { avx }
flags for vcvtps2pd_xmm_m64: { avx }
flags for vcvtps2pd_xmm_xmm: { avx }
flags for vcvtps2pd_ymm_m128: { avx }
flags for vcvtps2pd_ymm_xmm: { avx }
flags for vcvtps2ph_m128_ymm_imm8: { f16c }
flags for vcvtps2ph_m64_xmm_imm8: { f16c }
flags for vcvtps2ph_xmm_xmm_imm8: { f16c }
flags for vcvtps2ph_xmm_ymm_imm8: { f16c }
flags for vcvtsd2sil_r32_m64: { avx }
flags for vcvtsd2sil_r32_xmm: { avx }
flags for vcvtsd2siq_r64_m64: { avx }
flags for vcvtsd2siq_r64_xmm: { avx }
flags for vcvtsd2ss_xmm_xmm_m64: { avx }
flags for vcvtsd2ss_xmm_xmm_xmm: { avx }
flags for vcvtsi2sdl_xmm_xmm_m32: { avx }
flags for vcvtsi2sdq_xmm_xmm_m64: { avx }
flags for vcvtsi2sdl_xmm_xmm_r32: { avx }
flags for vcvtsi2sdq_xmm_xmm_r64: { avx }
flags for vcvtsi2ssl_xmm_xmm_m32: { avx }
flags for vcvtsi2ssq_xmm_xmm_m64: { avx }
flags for vcvtsi2ssl_xmm_xmm_r32: { avx }
flags for vcvtsi2ssq_xmm_xmm_r64: { avx }
flags for vcvtss2sd_xmm_xmm_m32: { avx }
flags for vcvtss2sd_xmm_xmm_xmm: { avx }
flags for vcvtss2sil_r32_m32: { avx }
flags for vcvtss2sil_r32_xmm: { avx }
flags for vcvtss2siq_r64_m32: { avx }
flags for vcvtss2siq_r64_xmm: { avx }
flags for vcvttpd2dq_xmm_m128: { avx }
flags for vcvttpd2dq_xmm_m256: { avx }
flags for vcvttpd2dq_xmm_xmm: { avx }
flags for vcvttpd2dq_xmm_ymm: { avx }
flags for vcvttps2dq_xmm_m128: { avx }
flags for vcvttps2dq_xmm_xmm: { avx }
flags for vcvttps2dq_ymm_m256: { avx }
flags for vcvttps2dq_ymm_ymm: { avx }
flags for vcvttsd2si_r32_m64: { avx }
flags for vcvttsd2si_r32_xmm: { avx }
flags for vcvttsd2siq_r64_m64: { avx }
flags for vcvttsd2siq_r64_xmm: { avx }
flags for vcvttss2si_r32_m32: { avx }
flags for vcvttss2si_r32_xmm: { avx }
flags for vcvttss2siq_r64_m32: { avx }
flags for vcvttss2siq_r64_xmm: { avx }
flags for vdivpd_xmm_xmm_m128: { avx }
flags for vdivpd_xmm_xmm_xmm: { avx }
flags for vdivpd_ymm_ymm_m256: { avx }
flags for vdivpd_ymm_ymm_ymm: { avx }
flags for vdivps_xmm_xmm_m128: { avx }
flags for vdivps_xmm_xmm_xmm: { avx }
flags for vdivps_ymm_ymm_m256: { avx }
flags for vdivps_ymm_ymm_ymm: { avx }
flags for vdivsd_xmm_xmm_m64: { avx }
flags for vdivsd_xmm_xmm_xmm: { avx }
flags for vdivss_xmm_xmm_m32: { avx }
flags for vdivss_xmm_xmm_xmm: { avx }
flags for vdppd_xmm_xmm_m128_imm8: { avx }
flags for vdppd_xmm_xmm_xmm_imm8: { avx }
flags for vdpps_xmm_xmm_m128_imm8: { avx }
flags for vdpps_xmm_xmm_xmm_imm8: { avx }
flags for vdpps_ymm_ymm_m256_imm8: { avx }
flags for vdpps_ymm_ymm_ymm_imm8: { avx }
flags for vextractf128_m128_ymm_imm8: { avx }
flags for vextractf128_xmm_ymm_imm8: { avx }
flags for vextracti128_m128_ymm_imm8: { avx2 }
flags for vextracti128_xmm_ymm_imm8: { avx2 }
flags for vextractps_m32_xmm_imm8: { avx }
flags for vextractps_r32_xmm_imm8: { avx }
flags for vfmadd132pd_xmm_xmm_m128: { fma }
flags for vfmadd132pd_xmm_xmm_xmm: { fma }
flags for vfmadd132pd_ymm_ymm_m256: { fma }
flags for vfmadd132pd_ymm_ymm_ymm: { fma }
flags for vfmadd132ps_xmm_xmm_m128: { fma }
flags for vfmadd132ps_xmm_xmm_xmm: { fma }
flags for vfmadd132ps_ymm_ymm_m256: { fma }
flags for vfmadd132ps_ymm_ymm_ymm: { fma }
flags for vfmadd132sd_xmm_xmm_m64: { fma }
flags for vfmadd132sd_xmm_xmm_xmm: { fma }
flags for vfmadd132ss_xmm_xmm_m32: { fma }
flags for vfmadd132ss_xmm_xmm_xmm: { fma }
flags for vfmadd213pd_xmm_xmm_m128: { fma }
flags for vfmadd213pd_xmm_xmm_xmm: { fma }
flags for vfmadd213pd_ymm_ymm_m256: { fma }
flags for vfmadd213pd_ymm_ymm_ymm: { fma }
flags for vfmadd213ps_xmm_xmm_m128: { fma }
flags for vfmadd213ps_xmm_xmm_xmm: { fma }
flags for vfmadd213ps_ymm_ymm_m256: { fma }
flags for vfmadd213ps_ymm_ymm_ymm: { fma }
flags for vfmadd213sd_xmm_xmm_m64: { fma }
flags for vfmadd213sd_xmm_xmm_xmm: { fma }
flags for vfmadd213ss_xmm_xmm_m32: { fma }
flags for vfmadd213ss_xmm_xmm_xmm: { fma }
flags for vfmadd231pd_xmm_xmm_m128: { fma }
flags for vfmadd231pd_xmm_xmm_xmm: { fma }
flags for vfmadd231pd_ymm_ymm_m256: { fma }
flags for vfmadd231pd_ymm_ymm_ymm: { fma }
flags for vfmadd231ps_xmm_xmm_m128: { fma }
flags for vfmadd231ps_xmm_xmm_xmm: { fma }
flags for vfmadd231ps_ymm_ymm_m256: { fma }
flags for vfmadd231ps_ymm_ymm_ymm: { fma }
flags for vfmadd231sd_xmm_xmm_m64: { fma }
flags for vfmadd231sd_xmm_xmm_xmm: { fma }
flags for vfmadd231ss_xmm_xmm_m32: { fma }
flags for vfmadd231ss_xmm_xmm_xmm: { fma }
flags for vfmaddsub132pd_xmm_xmm_m128: { fma }
flags for vfmaddsub132pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub132pd_ymm_ymm_m256: { fma }
flags for vfmaddsub132pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub132ps_xmm_xmm_m128: { fma }
flags for vfmaddsub132ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub132ps_ymm_ymm_m256: { fma }
flags for vfmaddsub132ps_ymm_ymm_ymm: { fma }
flags for vfmaddsub213pd_xmm_xmm_m128: { fma }
flags for vfmaddsub213pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub213pd_ymm_ymm_m256: { fma }
flags for vfmaddsub213pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub213ps_xmm_xmm_m128: { fma }
flags for vfmaddsub213ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub213ps_ymm_ymm_m256: { fma }
flags for vfmaddsub213ps_ymm_ymm_ymm: { fma }
flags for vfmaddsub231pd_xmm_xmm_m128: { fma }
flags for vfmaddsub231pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub231pd_ymm_ymm_m256: { fma }
flags for vfmaddsub231pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub231ps_xmm_xmm_m128: { fma }
flags for vfmaddsub231ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub231ps_ymm_ymm_m256: { fma }
flags for vfmaddsub231ps_ymm_ymm_ymm: { fma }
flags for vfmsub132pd_xmm_xmm_m128: { fma }
flags for vfmsub132pd_xmm_xmm_xmm: { fma }
flags for vfmsub132pd_ymm_ymm_m256: { fma }
flags for vfmsub132pd_ymm_ymm_ymm: { fma }
flags for vfmsub132ps_xmm_xmm_m128: { fma }
flags for vfmsub132ps_xmm_xmm_xmm: { fma }
flags for vfmsub132ps_ymm_ymm_m256: { fma }
flags for vfmsub132ps_ymm_ymm_ymm: { fma }
flags for vfmsub132sd_xmm_xmm_m64: { fma }
flags for vfmsub132sd_xmm_xmm_xmm: { fma }
flags for vfmsub132ss_xmm_xmm_m32: { fma }
flags for vfmsub132ss_xmm_xmm_xmm: { fma }
flags for vfmsub213pd_xmm_xmm_m128: { fma }
flags for vfmsub213pd_xmm_xmm_xmm: { fma }
flags for vfmsub213pd_ymm_ymm_m256: { fma }
flags for vfmsub213pd_ymm_ymm_ymm: { fma }
flags for vfmsub213ps_xmm_xmm_m128: { fma }
flags for vfmsub213ps_xmm_xmm_xmm: { fma }
flags for vfmsub213ps_ymm_ymm_m256: { fma }
flags for vfmsub213ps_ymm_ymm_ymm: { fma }
flags for vfmsub213sd_xmm_xmm_m64: { fma }
flags for vfmsub213sd_xmm_xmm_xmm: { fma }
flags for vfmsub213ss_xmm_xmm_m32: { fma }
flags for vfmsub213ss_xmm_xmm_xmm: { fma }
flags for vfmsub231pd_xmm_xmm_m128: { fma }
flags for vfmsub231pd_xmm_xmm_xmm: { fma }
flags for vfmsub231pd_ymm_ymm_m256: { fma }
flags for vfmsub231pd_ymm_ymm_ymm: { fma }
flags for vfmsub231ps_xmm_xmm_m128: { fma }
flags for vfmsub231ps_xmm_xmm_xmm: { fma }
flags for vfmsub231ps_ymm_ymm_m256: { fma }
flags for vfmsub231ps_ymm_ymm_ymm: { fma }
flags for vfmsub231sd_xmm_xmm_m64: { fma }
flags for vfmsub231sd_xmm_xmm_xmm: { fma }
flags for vfmsub231ss_xmm_xmm_m32: { fma }
flags for vfmsub231ss_xmm_xmm_xmm: { fma }
flags for vfmsubadd132pd_xmm_xmm_m128: { fma }
flags for vfmsubadd132pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd132pd_ymm_ymm_m256: { fma }
flags for vfmsubadd132pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd132ps_xmm_xmm_m128: { fma }
flags for vfmsubadd132ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd132ps_ymm_ymm_m256: { fma }
flags for vfmsubadd132ps_ymm_ymm_ymm: { fma }
flags for vfmsubadd213pd_xmm_xmm_m128: { fma }
flags for vfmsubadd213pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd213pd_ymm_ymm_m256: { fma }
flags for vfmsubadd213pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd213ps_xmm_xmm_m128: { fma }
flags for vfmsubadd213ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd213ps_ymm_ymm_m256: { fma }
flags for vfmsubadd213ps_ymm_ymm_ymm: { fma }
flags for vfmsubadd231pd_xmm_xmm_m128: { fma }
flags for vfmsubadd231pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd231pd_ymm_ymm_m256: { fma }
flags for vfmsubadd231pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd231ps_xmm_xmm_m128: { fma }
flags for vfmsubadd231ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd231ps_ymm_ymm_m256: { fma }
flags for vfmsubadd231ps_ymm_ymm_ymm: { fma }
flags for vfnmadd132pd_xmm_xmm_m128: { fma }
flags for vfnmadd132pd_xmm_xmm_xmm: { fma }
flags for vfnmadd132pd_ymm_ymm_m256: { fma }
flags for vfnmadd132pd_ymm_ymm_ymm: { fma }
flags for vfnmadd132ps_xmm_xmm_m128: { fma }
flags for vfnmadd132ps_xmm_xmm_xmm: { fma }
flags for vfnmadd132ps_ymm_ymm_m256: { fma }
flags for vfnmadd132ps_ymm_ymm_ymm: { fma }
flags for vfnmadd132sd_xmm_xmm_m64: { fma }
flags for vfnmadd132sd_xmm_xmm_xmm: { fma }
flags for vfnmadd132ss_xmm_xmm_m32: { fma }
flags for vfnmadd132ss_xmm_xmm_xmm: { fma }
flags for vfnmadd213pd_xmm_xmm_m128: { fma }
flags for vfnmadd213pd_xmm_xmm_xmm: { fma }
flags for vfnmadd213pd_ymm_ymm_m256: { fma }
flags for vfnmadd213pd_ymm_ymm_ymm: { fma }
flags for vfnmadd213ps_xmm_xmm_m128: { fma }
flags for vfnmadd213ps_xmm_xmm_xmm: { fma }
flags for vfnmadd213ps_ymm_ymm_m256: { fma }
flags for vfnmadd213ps_ymm_ymm_ymm: { fma }
flags for vfnmadd213sd_xmm_xmm_m64: { fma }
flags for vfnmadd213sd_xmm_xmm_xmm: { fma }
flags for vfnmadd213ss_xmm_xmm_m32: { fma }
flags for vfnmadd213ss_xmm_xmm_xmm: { fma }
flags for vfnmadd231pd_xmm_xmm_m128: { fma }
flags for vfnmadd231pd_xmm_xmm_xmm: { fma }
flags for vfnmadd231pd_ymm_ymm_m256: { fma }
flags for vfnmadd231pd_ymm_ymm_ymm: { fma }
flags for vfnmadd231ps_xmm_xmm_m128: { fma }
flags for vfnmadd231ps_xmm_xmm_xmm: { fma }
flags for vfnmadd231ps_ymm_ymm_m256: { fma }
flags for vfnmadd231ps_ymm_ymm_ymm: { fma }
flags for vfnmadd231sd_xmm_xmm_m64: { fma }
flags for vfnmadd231sd_xmm_xmm_xmm: { fma }
flags for vfnmadd231ss_xmm_xmm_m32: { fma }
flags for vfnmadd231ss_xmm_xmm_xmm: { fma }
flags for vfnmsub132pd_xmm_xmm_m128: { fma }
flags for vfnmsub132pd_xmm_xmm_xmm: { fma }
flags for vfnmsub132pd_ymm_ymm_m256: { fma }
flags for vfnmsub132pd_ymm_ymm_ymm: { fma }
flags for vfnmsub132ps_xmm_xmm_m128: { fma }
flags for vfnmsub132ps_xmm_xmm_xmm: { fma }
flags for vfnmsub132ps_ymm_ymm_m256: { fma }
flags for vfnmsub132ps_ymm_ymm_ymm: { fma }
flags for vfnmsub132sd_xmm_xmm_m64: { fma }
flags for vfnmsub132sd_xmm_xmm_xmm: { fma }
flags for vfnmsub132ss_xmm_xmm_m32: { fma }
flags for vfnmsub132ss_xmm_xmm_xmm: { fma }
flags for vfnmsub213pd_xmm_xmm_m128: { fma }
flags for vfnmsub213pd_xmm_xmm_xmm: { fma }
flags for vfnmsub213pd_ymm_ymm_m256: { fma }
flags for vfnmsub213pd_ymm_ymm_ymm: { fma }
flags for vfnmsub213ps_xmm_xmm_m128: { fma }
flags for vfnmsub213ps_xmm_xmm_xmm: { fma }
flags for vfnmsub213ps_ymm_ymm_m256: { fma }
flags for vfnmsub213ps_ymm_ymm_ymm: { fma }
flags for vfnmsub213sd_xmm_xmm_m64: { fma }
flags for vfnmsub213sd_xmm_xmm_xmm: { fma }
flags for vfnmsub213ss_xmm_xmm_m32: { fma }
flags for vfnmsub213ss_xmm_xmm_xmm: { fma }
flags for vfnmsub231pd_xmm_xmm_m128: { fma }
flags for vfnmsub231pd_xmm_xmm_xmm: { fma }
flags for vfnmsub231pd_ymm_ymm_m256: { fma }
flags for vfnmsub231pd_ymm_ymm_ymm: { fma }
flags for vfnmsub231ps_xmm_xmm_m128: { fma }
flags for vfnmsub231ps_xmm_xmm_xmm: { fma }
flags for vfnmsub231ps_ymm_ymm_m256: { fma }
flags for vfnmsub231ps_ymm_ymm_ymm: { fma }
flags for vfnmsub231sd_xmm_xmm_m64: { fma }
flags for vfnmsub231sd_xmm_xmm_xmm: { fma }
flags for vfnmsub231ss_xmm_xmm_m32: { fma }
flags for vfnmsub231ss_xmm_xmm_xmm: { fma }
flags for vgatherdpd_xmm_m32_xmm: { avx2 }
flags for vgatherdpd_ymm_m32_ymm: { avx2 }
flags for vgatherdps_xmm_m32_xmm: { avx2 }
flags for vgatherdps_ymm_m32_ymm: { avx2 }
flags for vgatherqpd_xmm_m64_xmm: { avx2 }
flags for vgatherqpd_ymm_m64_ymm: { avx2 }
flags for vgatherqps_xmm_m64_xmm: { avx2 }
flags for vgatherqps_xmm_m64_xmm_1: { avx2 }
flags for vhaddpd_xmm_xmm_m128: { avx }
flags for vhaddpd_xmm_xmm_xmm: { avx }
flags for vhaddpd_ymm_ymm_m256: { avx }
flags for vhaddpd_ymm_ymm_ymm: { avx }
flags for vhaddps_xmm_xmm_m128: { avx }
flags for vhaddps_xmm_xmm_xmm: { avx }
flags for vhaddps_ymm_ymm_m256: { avx }
flags for vhaddps_ymm_ymm_ymm: { avx }
flags for vhsubpd_xmm_xmm_m128: { avx }
flags for vhsubpd_xmm_xmm_xmm: { avx }
flags for vhsubpd_ymm_ymm_m256: { avx }
flags for vhsubpd_ymm_ymm_ymm: { avx }
flags for vhsubps_xmm_xmm_m128: { avx }
flags for vhsubps_xmm_xmm_xmm: { avx }
flags for vhsubps_ymm_ymm_m256: { avx }
flags for vhsubps_ymm_ymm_ymm: { avx }
flags for vinsertf128_ymm_ymm_m128_imm8: { avx }
flags for vinsertf128_ymm_ymm_xmm_imm8: { avx }
flags for vinserti128_ymm_ymm_m128_imm8: { avx2 }
flags for vinserti128_ymm_ymm_xmm_imm8: { avx2 }
flags for vinsertps_xmm_xmm_m32_imm8: { avx }
flags for vinsertps_xmm_xmm_xmm_imm8: { avx }
flags for vlddqu_xmm_m128: { avx }
flags for vlddqu_ymm_m256: { avx }
flags for vmaskmovpd_m128_xmm_xmm: { avx }
flags for vmaskmovpd_m256_ymm_ymm: { avx }
flags for vmaskmovpd_xmm_xmm_m128: { avx }
flags for vmaskmovpd_ymm_ymm_m256: { avx }
flags for vmaskmovps_m128_xmm_xmm: { avx }
flags for vmaskmovps_m256_ymm_ymm: { avx }
flags for vmaskmovps_xmm_xmm_m128: { avx }
flags for vmaskmovps_ymm_ymm_m256: { avx }
flags for vmaxpd_xmm_xmm_m128: { avx }
flags for vmaxpd_xmm_xmm_xmm: { avx }
flags for vmaxpd_ymm_ymm_m256: { avx }
flags for vmaxpd_ymm_ymm_ymm: { avx }
flags for vmaxps_xmm_xmm_m128: { avx }
flags for vmaxps_xmm_xmm_xmm: { avx }
flags for vmaxps_ymm_ymm_m256: { avx }
flags for vmaxps_ymm_ymm_ymm: { avx }
flags for vmaxsd_xmm_xmm_m64: { avx }
flags for vmaxsd_xmm_xmm_xmm: { avx }
flags for vmaxss_xmm_xmm_m32: { avx }
flags for vmaxss_xmm_xmm_xmm: { avx }
flags for vminpd_xmm_xmm_m128: { avx }
flags for vminpd_xmm_xmm_xmm: { avx }
flags for vminpd_ymm_ymm_m256: { avx }
flags for vminpd_ymm_ymm_ymm: { avx }
flags for vminps_xmm_xmm_m128: { avx }
flags for vminps_xmm_xmm_xmm: { avx }
flags for vminps_ymm_ymm_m256: { avx }
flags for vminps_ymm_ymm_ymm: { avx }
flags for vminsd_xmm_xmm_m64: { avx }
flags for vminsd_xmm_xmm_xmm: { avx }
flags for vminss_xmm_xmm_m32: { avx }
flags for vminss_xmm_xmm_xmm: { avx }
flags for vmovapd_m128_xmm: { avx }
flags for vmovapd_m256_ymm: { avx }
flags for vmovapd_xmm_m128: { avx }
flags for vmovapd_xmm_xmm: { avx }
flags for vmovapd_xmm_xmm_1: { avx }
flags for vmovapd_ymm_m256: { avx }
flags for vmovapd_ymm_ymm: { avx }
flags for vmovapd_ymm_ymm_1: { avx }
flags for vmovaps_m128_xmm: { avx }
flags for vmovaps_m256_ymm: { avx }
flags for vmovaps_xmm_m128: { avx }
flags for vmovaps_xmm_xmm: { avx }
flags for vmovaps_xmm_xmm_1: { avx }
flags for vmovaps_ymm_m256: { avx }
flags for vmovaps_ymm_ymm: { avx }
flags for vmovaps_ymm_ymm_1: { avx }
flags for vmovd_m32_xmm: { avx }
flags for vmovd_r32_xmm: { avx }
flags for vmovd_xmm_m32: { avx }
flags for vmovd_xmm_r32: { avx }
flags for vmovddup_xmm_m64: { avx }
flags for vmovddup_xmm_xmm: { avx }
flags for vmovddup_ymm_m256: { avx }
flags for vmovddup_ymm_ymm: { avx }
flags for vmovdqa_m128_xmm: { avx }
flags for vmovdqa_m256_ymm: { avx }
flags for vmovdqa_xmm_m128: { avx }
flags for vmovdqa_xmm_xmm: { avx }
flags for vmovdqa_xmm_xmm_1: { avx }
flags for vmovdqa_ymm_m256: { avx }
flags for vmovdqa_ymm_ymm: { avx }
flags for vmovdqa_ymm_ymm_1: { avx }
flags for vmovdqu_m128_xmm: { avx }
flags for vmovdqu_m256_ymm: { avx }
flags for vmovdqu_xmm_m128: { avx }
flags for vmovdqu_xmm_xmm: { avx }
flags for vmovdqu_xmm_xmm_1: { avx }
flags for vmovdqu_ymm_m256: { avx }
flags for vmovdqu_ymm_ymm: { avx }
flags for vmovdqu_ymm_ymm_1: { avx }
flags for vmovhlps_xmm_xmm_xmm: { avx }
flags for vmovhpd_m64_xmm: { avx }
flags for vmovhpd_xmm_xmm_m64: { avx }
flags for vmovhps_m64_xmm: { avx }
flags for vmovhps_xmm_xmm_m64: { avx }
flags for vmovlhps_xmm_xmm_xmm: { avx }
flags for vmovlpd_m64_xmm: { avx }
flags for vmovlpd_xmm_xmm_m64: { avx }
flags for vmovlps_m64_xmm: { avx }
flags for vmovlps_xmm_xmm_m64: { avx }
flags for vmovmskpd_r32_xmm: { avx }
flags for vmovmskpd_r32_ymm: { avx }
flags for vmovmskpd_r64_xmm: { avx }
flags for vmovmskpd_r64_ymm: { avx }
flags for vmovmskps_r32_xmm: { avx }
flags for vmovmskps_r32_ymm: { avx }
flags for vmovmskps_r64_xmm: { avx }
flags for vmovmskps_r64_ymm: { avx }
flags for vmovntdqa_m128_xmm: { avx }
flags for vmovntdqa_xmm_m128: { avx }
flags for vmovntdqa_ymm_m256: { avx2 }
flags for vmovntpd_m128_xmm: { avx }
flags for vmovntpd_m256_ymm: { avx }
flags for vmovntps_m128_xmm: { avx }
flags for vmovntps_m256_ymm: { avx }
flags for vmovq_m64_xmm: { avx }
flags for vmovq_m64_xmm_1: { avx }
flags for vmovq_r64_xmm: { avx }
flags for vmovq_xmm_m64: { avx }
flags for vmovq_xmm_m64_1: { avx }
flags for vmovq_xmm_r64: { avx }
flags for vmovq_xmm_xmm: { avx }
flags for vmovq_xmm_xmm_1: { avx }
flags for vmovsd_m64_xmm: { avx }
flags for vmovsd_xmm_m64: { avx }
flags for vmovsd_xmm_xmm_xmm: { avx }
flags for vmovsd_xmm_xmm_xmm_1: { avx }
flags for vmovshdup_xmm_m128: { avx }
flags for vmovshdup_xmm_xmm: { avx }
flags for vmovshdup_ymm_m256: { avx }
flags for vmovshdup_ymm_ymm: { avx }
flags for vmovsldup_xmm_m128: { avx }
flags for vmovsldup_xmm_xmm: { avx }
flags for vmovsldup_ymm_m256: { avx }
flags for vmovsldup_ymm_ymm: { avx }
flags for vmovss_m32_xmm: { avx }
flags for vmovss_xmm_m32: { avx }
flags for vmovss_xmm_xmm_xmm: { avx }
flags for vmovss_xmm_xmm_xmm_1: { avx }
flags for vmovupd_m128_xmm: { avx }
flags for vmovupd_m256_ymm: { avx }
flags for vmovupd_xmm_m128: { avx }
flags for vmovupd_xmm_xmm: { avx }
flags for vmovupd_xmm_xmm_1: { avx }
flags for vmovupd_ymm_m256: { avx }
flags for vmovupd_ymm_ymm: { avx }
flags for vmovupd_ymm_ymm_1: { avx }
flags for vmovups_m128_xmm: { avx }
flags for vmovups_m256_ymm: { avx }
flags for vmovups_xmm_m128: { avx }
flags for vmovups_xmm_xmm: { avx }
flags for vmovups_xmm_xmm_1: { avx }
flags for vmovups_ymm_m256: { avx }
flags for vmovups_ymm_ymm: { avx }
flags for vmovups_ymm_ymm_1: { avx }
flags for vmpsadbw_xmm_xmm_m128_imm8: { avx }
flags for vmpsadbw_xmm_xmm_xmm_imm8: { avx }
flags for vmpsadbw_ymm_ymm_m256_imm8: { avx2 }
flags for vmpsadbw_ymm_ymm_ymm_imm8: { avx2 }
flags for vmulpd_xmm_xmm_m128: { avx }
flags for vmulpd_xmm_xmm_xmm: { avx }
flags for vmulpd_ymm_ymm_m256: { avx }
flags for vmulpd_ymm_ymm_ymm: { avx }
flags for vmulps_xmm_xmm_m128: { avx }
flags for vmulps_xmm_xmm_xmm: { avx }
flags for vmulps_ymm_ymm_m256: { avx }
flags for vmulps_ymm_ymm_ymm: { avx }
flags for vmulsd_xmm_xmm_m64: { avx }
flags for vmulsd_xmm_xmm_xmm: { avx }
flags for vmulss_xmm_xmm_m32: { avx }
flags for vmulss_xmm_xmm_xmm: { avx }
flags for vorpd_xmm_xmm_m128: { avx }
flags for vorpd_xmm_xmm_xmm: { avx }
flags for vorpd_ymm_ymm_m256: { avx }
flags for vorpd_ymm_ymm_ymm: { avx }
flags for vorps_xmm_xmm_m128: { avx }
flags for vorps_xmm_xmm_xmm: { avx }
flags for vorps_ymm_ymm_m256: { avx }
flags for vorps_ymm_ymm_ymm: { avx }
flags for vpabsb_xmm_m128: { avx }
flags for vpabsb_xmm_xmm: { avx }
flags for vpabsb_ymm_m256: { avx2 }
flags for vpabsb_ymm_ymm: { avx2 }
flags for vpabsd_xmm_m128: { avx }
flags for vpabsd_xmm_xmm: { avx }
flags for vpabsd_ymm_m256: { avx2 }
flags for vpabsd_ymm_ymm: { avx2 }
flags for vpabsw_xmm_m128: { avx }
flags for vpabsw_xmm_xmm: { avx }
flags for vpabsw_ymm_m256: { avx2 }
flags for vpabsw_ymm_ymm: { avx2 }
flags for vpackssdw_xmm_xmm_m128: { avx }
flags for vpackssdw_xmm_xmm_xmm: { avx }
flags for vpackssdw_ymm_ymm_m256: { avx2 }
flags for vpackssdw_ymm_ymm_ymm: { avx2 }
flags for vpacksswb_xmm_xmm_m128: { avx }
flags for vpacksswb_xmm_xmm_xmm: { avx }
flags for vpacksswb_ymm_ymm_m256: { avx2 }
flags for vpacksswb_ymm_ymm_ymm: { avx2 }
flags for vpackusdw_xmm_xmm_m128: { avx }
flags for vpackusdw_xmm_xmm_xmm: { avx }
flags for vpackusdw_ymm_ymm_m256: { avx2 }
flags for vpackusdw_ymm_ymm_ymm: { avx2 }
flags for vpackuswb_xmm_xmm_m128: { avx }
flags for vpackuswb_xmm_xmm_xmm: { avx }
flags for vpackuswb_ymm_ymm_m256: { avx2 }
flags for vpackuswb_ymm_ymm_ymm: { avx2 }
flags for vpaddb_xmm_xmm_m128: { avx }
flags for vpaddb_xmm_xmm_xmm: { avx }
flags for vpaddb_ymm_ymm_m256: { avx2 }
flags for vpaddb_ymm_ymm_ymm: { avx2 }
flags for vpaddd_xmm_xmm_m128: { avx }
flags for vpaddd_xmm_xmm_xmm: { avx }
flags for vpaddd_ymm_ymm_m256: { avx2 }
flags for vpaddd_ymm_ymm_ymm: { avx2 }
flags for vpaddq_xmm_xmm_m128: { avx }
flags for vpaddq_xmm_xmm_xmm: { avx }
flags for vpaddq_ymm_ymm_m256: { avx2 }
flags for vpaddq_ymm_ymm_ymm: { avx2 }
flags for vpaddsb_xmm_xmm_m128: { avx }
flags for vpaddsb_xmm_xmm_xmm: { avx }
flags for vpaddsb_ymm_ymm_m256: { avx2 }
flags for vpaddsb_ymm_ymm_ymm: { avx2 }
flags for vpaddsw_xmm_xmm_m128: { avx }
flags for vpaddsw_xmm_xmm_xmm: { avx }
flags for vpaddsw_ymm_ymm_m256: { avx2 }
flags for vpaddsw_ymm_ymm_ymm: { avx2 }
flags for vpaddusb_xmm_xmm_m128: { avx }
flags for vpaddusb_xmm_xmm_xmm: { avx }
flags for vpaddusb_ymm_ymm_m256: { avx2 }
flags for vpaddusb_ymm_ymm_ymm: { avx2 }
flags for vpaddusw_xmm_xmm_m128: { avx }
flags for vpaddusw_xmm_xmm_xmm: { avx }
flags for vpaddusw_ymm_ymm_m256: { avx2 }
flags for vpaddusw_ymm_ymm_ymm: { avx2 }
flags for vpaddw_xmm_xmm_m128: { avx }
flags for vpaddw_xmm_xmm_xmm: { avx }
flags for vpaddw_ymm_ymm_m256: { avx2 }
flags for vpaddw_ymm_ymm_ymm: { avx2 }
flags for vpalignr_xmm_xmm_m128_imm8: { avx }
flags for vpalignr_xmm_xmm_xmm_imm8: { avx }
flags for vpalignr_ymm_ymm_m256_imm8: { avx2 }
flags for vpalignr_ymm_ymm_ymm_imm8: { avx2 }
flags for vpand_xmm_xmm_m128: { avx }
flags for vpand_xmm_xmm_xmm: { avx }
flags for vpand_ymm_ymm_m256: { avx2 }
flags for vpand_ymm_ymm_ymm: { avx2 }
flags for vpandn_xmm_xmm_m128: { avx }
flags for vpandn_xmm_xmm_xmm: { avx }
flags for vpandn_ymm_ymm_m256: { avx2 }
flags for vpandn_ymm_ymm_ymm: { avx2 }
flags for vpavgb_xmm_xmm_m128: { avx }
flags for vpavgb_xmm_xmm_xmm: { avx }
flags for vpavgb_ymm_ymm_m256: { avx2 }
flags for vpavgb_ymm_ymm_ymm: { avx2 }
flags for vpavgw_xmm_xmm_m128: { avx }
flags for vpavgw_xmm_xmm_xmm: { avx }
flags for vpavgw_ymm_ymm_m256: { avx2 }
flags for vpavgw_ymm_ymm_ymm: { avx2 }
flags for vpblendd_xmm_xmm_m128_imm8: { avx2 }
flags for vpblendd_xmm_xmm_xmm_imm8: { avx2 }
flags for vpblendd_ymm_ymm_m256_imm8: { avx2 }
flags for vpblendd_ymm_ymm_ymm_imm8: { avx2 }
flags for vpblendvb_xmm_xmm_m128_xmm: { avx }
flags for vpblendvb_xmm_xmm_xmm_xmm: { avx }
flags for vpblendvb_ymm_ymm_m256_ymm: { avx2 }
flags for vpblendvb_ymm_ymm_ymm_ymm: { avx2 }
flags for vpblendw_xmm_xmm_m128_imm8: { avx }
flags for vpblendw_xmm_xmm_xmm_imm8: { avx }
flags for vpblendw_ymm_ymm_m256_imm8: { avx2 }
flags for vpblendw_ymm_ymm_ymm_imm8: { avx2 }
flags for vpbroadcastb_xmm_m8: { avx2 }
flags for vpbroadcastb_xmm_xmm: { avx2 }
flags for vpbroadcastb_ymm_m8: { avx2 }
flags for vpbroadcastb_ymm_xmm: { avx2 }
flags for vpbroadcastd_xmm_m32: { avx2 }
flags for vpbroadcastd_xmm_xmm: { avx2 }
flags for vpbroadcastd_ymm_m32: { avx2 }
flags for vpbroadcastd_ymm_xmm: { avx2 }
flags for vpbroadcastq_xmm_m64: { avx2 }
flags for vpbroadcastq_xmm_xmm: { avx2 }
flags for vpbroadcastq_ymm_m64: { avx2 }
flags for vpbroadcastq_ymm_xmm: { avx2 }
flags for vpbroadcastw_xmm_m16: { avx2 }
flags for vpbroadcastw_xmm_xmm: { avx2 }
flags for vpbroadcastw_ymm_m16: { avx2 }
flags for vpbroadcastw_ymm_xmm: { avx2 }
flags for vpclmulqdq_xmm_xmm_m128_imm8: { pclmulqdq avx }
flags for vpclmulqdq_xmm_xmm_xmm_imm8: { pclmulqdq avx }
flags for vpcmpeqb_xmm_xmm_m128: { avx }
flags for vpcmpeqb_xmm_xmm_xmm: { avx }
flags for vpcmpeqb_ymm_ymm_m256: { avx2 }
flags for vpcmpeqb_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqd_xmm_xmm_m128: { avx }
flags for vpcmpeqd_xmm_xmm_xmm: { avx }
flags for vpcmpeqd_ymm_ymm_m256: { avx2 }
flags for vpcmpeqd_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqq_xmm_xmm_m128: { avx }
flags for vpcmpeqq_xmm_xmm_xmm: { avx }
flags for vpcmpeqq_ymm_ymm_m256: { avx2 }
flags for vpcmpeqq_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqw_xmm_xmm_m128: { avx }
flags for vpcmpeqw_xmm_xmm_xmm: { avx }
flags for vpcmpeqw_ymm_ymm_m256: { avx2 }
flags for vpcmpeqw_ymm_ymm_ymm: { avx2 }
flags for vpcmpestri_xmm_m128_imm8: { avx }
flags for vpcmpestri_xmm_xmm_imm8: { avx }
flags for vpcmpestrm_xmm_m128_imm8: { avx }
flags for vpcmpestrm_xmm_xmm_imm8: { avx }
flags for vpcmpgtb_xmm_xmm_m128: { avx }
flags for vpcmpgtb_xmm_xmm_xmm: { avx }
flags for vpcmpgtb_ymm_ymm_m256: { avx }
flags for vpcmpgtb_ymm_ymm_ymm: { avx }
flags for vpcmpgtd_xmm_xmm_m128: { avx }
flags for vpcmpgtd_xmm_xmm_xmm: { avx }
flags for vpcmpgtd_ymm_ymm_m256: { avx2 }
flags for vpcmpgtd_ymm_ymm_ymm: { avx2 }
flags for vpcmpgtq_xmm_xmm_m128: { avx }
flags for vpcmpgtq_xmm_xmm_xmm: { avx }
flags for vpvmpgtq_ymm_ymm_m256: { avx2 }
flags for vpvmpgtq_ymm_ymm_ymm: { avx2 }
flags for vpcmpgtw_xmm_xmm_m128: { avx }
flags for vpcmpgtw_xmm_xmm_xmm: { avx }
flags for vpcmpgtw_ymm_ymm_m256: { avx2 }
flags for vpcmpgtw_ymm_ymm_ymm: { avx2 }
flags for vpcmpistri_xmm_m128_imm8: { avx }
flags for vpcmpistri_xmm_xmm_imm8: { avx }
flags for vpcmpistrm_xmm_m128_imm8: { avx }
flags for vpcmpistrm_xmm_xmm_imm8: { avx }
flags for vperm2f128_ymm_ymm_m256_imm8: { avx }
flags for vperm2f128_ymm_ymm_ymm_imm8: { avx }
flags for vperm2i128_ymm_ymm_m256_imm8: { avx2 }
flags for vperm2i128_ymm_ymm_ymm_imm8: { avx2 }
flags for vpermd_ymm_ymm_m256: { avx2 }
flags for vpermd_ymm_ymm_ymm: { avx2 }
flags for vpermilpd_xmm_m128_imm8: { avx }
flags for vpermilpd_xmm_xmm_imm8: { avx }
flags for vpermilpd_xmm_xmm_m128: { avx }
flags for vpermilpd_xmm_xmm_xmm: { avx }
flags for vpermilpd_ymm_m256_imm8: { avx }
flags for vpermilpd_ymm_ymm_imm8: { avx }
flags for vpermilpd_ymm_ymm_m256: { avx }
flags for vpermilpd_ymm_ymm_ymm: { avx }
flags for vpermilps_xmm_m128_imm8: { avx }
flags for vpermilps_xmm_xmm_imm8: { avx }
flags for vpermilps_xmm_xmm_m128: { avx }
flags for vpermilps_xmm_xmm_xmm: { avx }
flags for vpermilps_ymm_m256_imm8: { avx }
flags for vpermilps_ymm_ymm_imm8: { avx }
flags for vpermilps_ymm_ymm_m256: { avx }
flags for vpermilps_ymm_ymm_ymm: { avx }
flags for vpermpd_ymm_m256_imm8: { avx2 }
flags for vpermpd_ymm_ymm_imm8: { avx2 }
flags for vpermps_ymm_ymm_m256: { avx2 }
flags for vpermps_ymm_ymm_ymm: { avx2 }
flags for vpermq_ymm_m256_imm8: { avx2 }
flags for vpermq_ymm_ymm_imm8: { avx2 }
flags for vpextrb_m8_xmm_imm8: { avx }
flags for vpextrb_r32_xmm_imm8: { avx }
flags for vpextrb_r64_xmm_imm8: { avx }
flags for vpextrd_m32_xmm_imm8: { avx }
flags for vpextrd_r32_xmm_imm8: { avx }
flags for vpextrq_m64_xmm_imm8: { avx }
flags for vpextrq_r64_xmm_imm8: { avx }
flags for vpextrw_m16_xmm_imm8: { avx }
flags for vpextrw_r32_xmm_imm8: { avx }
flags for vpextrw_r32_xmm_imm8_1: { avx }
flags for vpextrw_r64_xmm_imm8: { avx }
flags for vpextrw_r64_xmm_imm8_1: { avx }
flags for vpgatherdd_xmm_m32_xmm: { avx2 }
flags for vpgatherdd_ymm_m32_ymm: { avx2 }
flags for vpgatherdq_xmm_m32_xmm: { avx2 }
flags for vpgatherdq_ymm_m32_ymm: { avx2 }
flags for vpgatherqd_xmm_m64_xmm: { avx2 }
flags for vpgatherqd_xmm_m64_xmm_1: { avx2 }
flags for vpgatherqq_xmm_m64_xmm: { avx2 }
flags for vpgatherqq_ymm_m64_ymm: { avx2 }
flags for vphaddd_xmm_xmm_m128: { avx }
flags for vphaddd_xmm_xmm_xmm: { avx }
flags for vphaddd_ymm_ymm_m256: { avx2 }
flags for vphaddd_ymm_ymm_ymm: { avx2 }
flags for vphaddsw_xmm_xmm_m128: { avx }
flags for vphaddsw_xmm_xmm_xmm: { avx }
flags for vphaddsw_ymm_ymm_m256: { avx2 }
flags for vphaddsw_ymm_ymm_ymm: { avx2 }
flags for vphaddw_xmm_xmm_m128: { avx }
flags for vphaddw_xmm_xmm_xmm: { avx }
flags for vphaddw_ymm_ymm_m256: { avx2 }
flags for vphaddw_ymm_ymm_ymm: { avx2 }
flags for vphminposuw_xmm_m128: { avx }
flags for vphminposuw_xmm_xmm: { avx }
flags for vphsubd_xmm_xmm_m128: { avx }
flags for vphsubd_xmm_xmm_xmm: { avx }
flags for vphsubd_ymm_ymm_m256: { avx2 }
flags for vphsubd_ymm_ymm_ymm: { avx2 }
flags for vphsubsw_xmm_xmm_m128: { avx }
flags for vphsubsw_xmm_xmm_xmm: { avx }
flags for vphsubsw_ymm_ymm_m256: { avx2 }
flags for vphsubsw_ymm_ymm_ymm: { avx2 }
flags for vphsubw_xmm_xmm_m128: { avx }
flags for vphsubw_xmm_xmm_xmm: { avx }
flags for vphsubw_ymm_ymm_m256: { avx2 }
flags for vphsubw_ymm_ymm_ymm: { avx2 }
flags for vpinsrb_xmm_xmm_m8_imm8: { avx }
flags for vpinsrb_xmm_xmm_r32_imm8: { avx }
flags for vpinsrd_xmm_xmm_m32_imm8: { avx }
flags for vpinsrd_xmm_xmm_r32_imm8: { avx }
flags for vpinsrq_xmm_xmm_m64_imm8: { avx }
flags for vpinsrq_xmm_xmm_r64_imm8: { avx }
flags for vpinsrw_xmm_xmm_m16_imm8: { avx }
flags for vpinsrw_xmm_xmm_r32_imm8: { avx }
flags for vpmaddubsw_xmm_xmm_m128: { avx }
flags for vpmaddubsw_xmm_xmm_xmm: { avx }
flags for vpmaddubsw_ymm_ymm_m256: { avx2 }
flags for vpmaddubsw_ymm_ymm_ymm: { avx2 }
flags for vpmaddwd_xmm_xmm_m128: { avx }
flags for vpmaddwd_xmm_xmm_xmm: { avx }
flags for vpmaddwd_ymm_ymm_m256: { avx2 }
flags for vpmaddwd_ymm_ymm_ymm: { avx2 }
flags for vpmaskmovd_m128_xmm_xmm: { avx2 }
flags for vpmaskmovd_m256_ymm_ymm: { avx2 }
flags for vpmaskmovd_xmm_xmm_m128: { avx2 }
flags for vpmaskmovd_ymm_ymm_m256: { avx2 }
flags for vpmaskmovq_m128_xmm_xmm: { avx2 }
flags for vpmaskmovq_m256_ymm_ymm: { avx2 }
flags for vpmaskmovq_xmm_xmm_m128: { avx2 }
flags for vpmaskmovq_ymm_ymm_m256: { avx2 }
flags for vpmaxsb_xmm_xmm_m128: { avx }
flags for vpmaxsb_xmm_xmm_xmm: { avx }
flags for vpmaxsb_ymm_ymm_m256: { avx2 }
flags for vpmaxsb_ymm_ymm_ymm: { avx2 }
flags for vpmaxsd_xmm_xmm_m128: { avx }
flags for vpmaxsd_xmm_xmm_xmm: { avx }
flags for vpmaxsd_ymm_ymm_m256: { avx2 }
flags for vpmaxsd_ymm_ymm_ymm: { avx2 }
flags for vpmaxsw_xmm_xmm_m128: { avx }
flags for vpmaxsw_xmm_xmm_xmm: { avx }
flags for vpmaxsw_ymm_ymm_m256: { avx2 }
flags for vpmaxsw_ymm_ymm_ymm: { avx2 }
flags for vpmaxub_xmm_xmm_m128: { avx }
flags for vpmaxub_xmm_xmm_xmm: { avx }
flags for vpmaxub_ymm_ymm_m256: { avx2 }
flags for vpmaxub_ymm_ymm_ymm: { avx2 }
flags for vpmaxud_xmm_xmm_m128: { avx }
flags for vpmaxud_xmm_xmm_xmm: { avx }
flags for vpmaxud_ymm_ymm_m256: { avx2 }
flags for vpmaxud_ymm_ymm_ymm: { avx2 }
flags for vpmaxuw_xmm_xmm_m128: { avx }
flags for vpmaxuw_xmm_xmm_xmm: { avx }
flags for vpmaxuw_ymm_ymm_m256: { avx2 }
flags for vpmaxuw_ymm_ymm_ymm: { avx2 }
flags for vpminsb_xmm_xmm_m128: { avx }
flags for vpminsb_xmm_xmm_xmm: { avx }
flags for vpminsb_ymm_ymm_m256: { avx2 }
flags for vpminsb_ymm_ymm_ymm: { avx2 }
flags for vpminsd_xmm_xmm_m128: { avx }
flags for vpminsd_xmm_xmm_xmm: { avx }
flags for vpminsd_ymm_ymm_m256: { avx2 }
flags for vpminsd_ymm_ymm_ymm: { avx2 }
flags for vpminsw_xmm_xmm_m128: { avx }
flags for vpminsw_xmm_xmm_xmm: { avx }
flags for vpminub_xmm_xmm_m128: { avx }
flags for vpminub_xmm_xmm_xmm: { avx }
flags for vpminub_ymm_ymm_m256: { avx2 }
flags for vpminub_ymm_ymm_ymm: { avx2 }
flags for vpminud_xmm_xmm_m128: { avx }
flags for vpminud_xmm_xmm_xmm: { avx }
flags for vpminud_ymm_ymm_m256: { avx2 }
flags for vpminud_ymm_ymm_ymm: { avx2 }
flags for vpminuw_xmm_xmm_m128: { avx }
flags for vpminuw_xmm_xmm_xmm: { avx }
flags for vpminuw_ymm_ymm_m256: { avx2 }
flags for vpminuw_ymm_ymm_ymm: { avx2 }
flags for vpmovmskb_r32_xmm: { avx }
flags for vpmovmskb_r32_ymm: { avx2 }
flags for vpmovmskb_r64_xmm: { avx }
flags for vpmovmskb_r64_ymm: { avx2 }
flags for vpmovsxbd_xmm_m32: { avx }
flags for vpmovsxbd_xmm_xmm: { avx }
flags for vpmovsxbd_ymm_m64: { avx2 }
flags for vpmovsxbd_ymm_xmm: { avx2 }
flags for vpmovsxbq_xmm_m16: { avx }
flags for vpmovsxbq_xmm_xmm: { avx }
flags for vpmovsxbq_ymm_m32: { avx2 }
flags for vpmovsxbq_ymm_xmm: { avx2 }
flags for vpmovsxbw_xmm_m64: { avx }
flags for vpmovsxbw_xmm_xmm: { avx }
flags for vpmovsxbw_ymm_m128: { avx2 }
flags for vpmovsxbw_ymm_xmm: { avx2 }
flags for vpmovsxdq_xmm_m64: { avx }
flags for vpmovsxdq_xmm_xmm: { avx }
flags for vpmovsxdq_ymm_m128: { avx2 }
flags for vpmovsxdq_ymm_xmm: { avx2 }
flags for vpmovsxwd_xmm_m64: { avx }
flags for vpmovsxwd_xmm_xmm: { avx }
flags for vpmovsxwd_ymm_m128: { avx2 }
flags for vpmovsxwd_ymm_xmm: { avx2 }
flags for vpmovsxwq_xmm_m32: { avx }
flags for vpmovsxwq_xmm_xmm: { avx }
flags for vpmovsxwq_ymm_m64: { avx2 }
flags for vpmovsxwq_ymm_xmm: { avx2 }
flags for vpmovzxbd_xmm_m32: { avx }
flags for vpmovzxbd_xmm_xmm: { avx }
flags for vpmovzxbd_ymm_m64: { avx2 }
flags for vpmovzxbd_ymm_xmm: { avx2 }
flags for vpmovzxbq_xmm_m16: { avx }
flags for vpmovzxbq_xmm_xmm: { avx }
flags for vpmovzxbq_ymm_m32: { avx2 }
flags for vpmovzxbq_ymm_xmm: { avx2 }
flags for vpmovzxbw_xmm_m64: { avx }
flags for vpmovzxbw_xmm_xmm: { avx }
flags for vpmovzxbw_ymm_m128: { avx2 }
flags for vpmovzxbw_ymm_xmm: { avx2 }
flags for vpmovzxdq_xmm_m64: { avx }
flags for vpmovzxdq_xmm_xmm: { avx }
flags for vpmovzxdq_ymm_m128: { avx2 }
flags for vpmovzxdq_ymm_xmm: { avx2 }
flags for vpmovzxwd_xmm_m64: { avx }
flags for vpmovzxwd_xmm_xmm: { avx }
flags for vpmovzxwd_ymm_m128: { avx2 }
flags for vpmovzxwd_ymm_xmm: { avx2 }
flags for vpmovzxwq_xmm_m32: { avx }
flags for vpmovzxwq_xmm_xmm: { avx }
flags for vpmovzxwq_ymm_m64: { avx2 }
flags for vpmovzxwq_ymm_xmm: { avx2 }
flags for vpmuldq_xmm_xmm_m128: { avx }
flags for vpmuldq_xmm_xmm_xmm: { avx }
flags for vpmuldq_ymm_ymm_m256: { avx2 }
flags for vpmuldq_ymm_ymm_ymm: { avx2 }
flags for vpmulhrsw_xmm_xmm_m128: { avx }
flags for vpmulhrsw_xmm_xmm_xmm: { avx }
flags for vpmulhrsw_ymm_ymm_m256: { avx2 }
flags for vpmulhrsw_ymm_ymm_ymm: { avx2 }
flags for vpmulhuw_xmm_xmm_m128: { avx }
flags for vpmulhuw_xmm_xmm_xmm: { avx }
flags for vpmulhuw_ymm_ymm_m256: { avx2 }
flags for vpmulhuw_ymm_ymm_ymm: { avx2 }
flags for vpmulhw_xmm_xmm_m128: { avx }
flags for vpmulhw_xmm_xmm_xmm: { avx }
flags for vpmulhw_ymm_ymm_m256: { avx2 }
flags for vpmulhw_ymm_ymm_ymm: { avx2 }
flags for vpmulld_xmm_xmm_m128: { avx }
flags for vpmulld_xmm_xmm_xmm: { avx }
flags for vpmulld_ymm_ymm_m256: { avx2 }
flags for vpmulld_ymm_ymm_ymm: { avx2 }
flags for vpmullw_xmm_xmm_m128: { avx }
flags for vpmullw_xmm_xmm_xmm: { avx }
flags for vpmullw_ymm_ymm_m256: { avx2 }
flags for vpmullw_ymm_ymm_ymm: { avx2 }
flags for vpmuludq_xmm_xmm_m128: { avx }
flags for vpmuludq_xmm_xmm_xmm: { avx }
flags for vpmuludq_ymm_ymm_m256: { avx2 }
flags for vpmuludq_ymm_ymm_ymm: { avx2 }
flags for vpor_xmm_xmm_m128: { avx }
flags for vpor_xmm_xmm_xmm: { avx }
flags for vpor_ymm_ymm_m256: { avx2 }
flags for vpor_ymm_ymm_ymm: { avx2 }
flags for vpsadbw_xmm_xmm_m128: { avx }
flags for vpsadbw_xmm_xmm_xmm: { avx }
flags for vpsadbw_ymm_ymm_m256: { avx2 }
flags for vpsadbw_ymm_ymm_ymm: { avx2 }
flags for vpshufb_xmm_xmm_m128: { avx }
flags for vpshufb_xmm_xmm_xmm: { avx }
flags for vpshufb_ymm_ymm_m256: { avx2 }
flags for vpshufb_ymm_ymm_ymm: { avx2 }
flags for vpshufd_xmm_m128_imm8: { avx }
flags for vpshufd_xmm_xmm_imm8: { avx }
flags for vpshufd_ymm_m256_imm8: { avx2 }
flags for vpshufd_ymm_ymm_imm8: { avx2 }
flags for vpshufhw_xmm_m128_imm8: { avx }
flags for vpshufhw_xmm_xmm_imm8: { avx }
flags for vpshufhw_ymm_m256_imm8: { avx2 }
flags for vpshufhw_ymm_ymm_imm8: { avx2 }
flags for vpshuflw_xmm_m128_imm8: { avx }
flags for vpshuflw_xmm_xmm_imm8: { avx }
flags for vpshuflw_ymm_m256_imm8: { avx2 }
flags for vpshuflw_ymm_ymm_imm8: { avx2 }
flags for vpsignb_xmm_xmm_m128: { avx }
flags for vpsignb_xmm_xmm_xmm: { avx }
flags for vpsignd_xmm_xmm_m128: { avx }
flags for vpsignd_xmm_xmm_xmm: { avx }
flags for vpsignw_xmm_xmm_m128: { avx }
flags for vpsignw_xmm_xmm_xmm: { avx }
flags for vpslld_xmm_xmm_imm8: { avx }
flags for vpslld_xmm_xmm_m128: { avx }
flags for vpslld_xmm_xmm_xmm: { avx }
flags for vpslld_ymm_ymm_imm8: { avx2 }
flags for vpslld_ymm_ymm_m128: { avx2 }
flags for vpslld_ymm_ymm_xmm: { avx2 }
flags for vpslldq_xmm_xmm_imm8: { avx }
flags for vpslldq_ymm_ymm_imm8: { avx2 }
flags for vpsllq_xmm_xmm_imm8: { avx }
flags for vpsllq_xmm_xmm_m128: { avx }
flags for vpsllq_xmm_xmm_xmm: { avx }
flags for vpsllq_ymm_ymm_imm8: { avx2 }
flags for vpsllq_ymm_ymm_m128: { avx2 }
flags for vpsllq_ymm_ymm_xmm: { avx2 }
flags for vpsllvd_xmm_xmm_m128: { avx2 }
flags for vpsllvd_xmm_xmm_xmm: { avx2 }
flags for vpsllvd_ymm_ymm_m256: { avx2 }
flags for vpsllvd_ymm_ymm_ymm: { avx2 }
flags for vpsllvq_xmm_xmm_m128: { avx2 }
flags for vpsllvq_xmm_xmm_xmm: { avx2 }
flags for vpsllvq_ymm_ymm_m256: { avx2 }
flags for vpsllvq_ymm_ymm_ymm: { avx2 }
flags for vpsllw_xmm_xmm_imm8: { avx }
flags for vpsllw_xmm_xmm_m128: { avx }
flags for vpsllw_xmm_xmm_xmm: { avx }
flags for vpsllw_ymm_ymm_imm8: { avx2 }
flags for vpsllw_ymm_ymm_m128: { avx2 }
flags for vpsllw_ymm_ymm_xmm: { avx2 }
flags for vpsrad_xmm_xmm_imm8: { avx }
flags for vpsrad_xmm_xmm_m128: { avx }
flags for vpsrad_xmm_xmm_xmm: { avx }
flags for vpsrad_ymm_ymm_imm8: { avx2 }
flags for vpsrad_ymm_ymm_m128: { avx2 }
flags for vpsrad_ymm_ymm_xmm: { avx2 }
flags for vpsravd_xmm_xmm_m128: { avx2 }
flags for vpsravd_xmm_xmm_xmm: { avx2 }
flags for vpsravd_ymm_ymm_m256: { avx2 }
flags for vpsravd_ymm_ymm_ymm: { avx2 }
flags for vpsraw_xmm_xmm_imm8: { avx }
flags for vpsraw_xmm_xmm_m128: { avx }
flags for vpsraw_xmm_xmm_xmm: { avx }
flags for vpsraw_ymm_ymm_imm8: { avx2 }
flags for vpsraw_ymm_ymm_m128: { avx2 }
flags for vpsraw_ymm_ymm_xmm: { avx2 }
flags for vpsrld_xmm_xmm_imm8: { avx }
flags for vpsrld_xmm_xmm_m128: { avx }
flags for vpsrld_xmm_xmm_xmm: { avx }
flags for vpsrld_ymm_ymm_imm8: { avx2 }
flags for vpsrld_ymm_ymm_m128: { avx2 }
flags for vpsrld_ymm_ymm_xmm: { avx2 }
flags for vpsrldq_xmm_xmm_imm8: { avx }
flags for vpsrldq_ymm_ymm_imm8: { avx2 }
flags for vpsrlq_xmm_xmm_imm8: { avx }
flags for vpsrlq_xmm_xmm_m128: { avx }
flags for vpsrlq_xmm_xmm_xmm: { avx }
flags for vpsrlq_ymm_ymm_imm8: { avx2 }
flags for vpsrlq_ymm_ymm_m128: { avx2 }
flags for vpsrlq_ymm_ymm_xmm: { avx2 }
flags for vpsrlvd_xmm_xmm_m128: { avx2 }
flags for vpsrlvd_xmm_xmm_xmm: { avx2 }
flags for vpsrlvd_ymm_ymm_m256: { avx2 }
flags for vpsrlvd_ymm_ymm_ymm: { avx2 }
flags for vpsrlvq_xmm_xmm_m128: { avx2 }
flags for vpsrlvq_xmm_xmm_xmm: { avx2 }
flags for vpsrlvq_ymm_ymm_m256: { avx2 }
flags for vpsrlvq_ymm_ymm_ymm: { avx2 }
flags for vpsrlw_xmm_xmm_imm8: { avx }
flags for vpsrlw_xmm_xmm_m128: { avx }
flags for vpsrlw_xmm_xmm_xmm: { avx }
flags for vpsrlw_ymm_ymm_imm8: { avx2 }
flags for vpsrlw_ymm_ymm_m128: { avx2 }
flags for vpsrlw_ymm_ymm_xmm: { avx2 }
flags for vpsubb_xmm_xmm_m128: { avx }
flags for vpsubb_xmm_xmm_xmm: { avx }
flags for vpsubb_ymm_ymm_m256: { avx2 }
flags for vpsubb_ymm_ymm_ymm: { avx2 }
flags for vpsubd_xmm_xmm_m128: { avx }
flags for vpsubd_xmm_xmm_xmm: { avx }
flags for vpsubd_ymm_ymm_m256: { avx2 }
flags for vpsubd_ymm_ymm_ymm: { avx2 }
flags for vpsubq_xmm_xmm_m128: { avx }
flags for vpsubq_xmm_xmm_xmm: { avx }
flags for vpsubq_ymm_ymm_m256: { avx2 }
flags for vpsubq_ymm_ymm_ymm: { avx2 }
flags for vpsubsb_xmm_xmm_m128: { avx }
flags for vpsubsb_xmm_xmm_xmm: { avx }
flags for vpsubsb_ymm_ymm_m256: { avx2 }
flags for vpsubsb_ymm_ymm_ymm: { avx2 }
flags for vpsubsw_xmm_xmm_m128: { avx }
flags for vpsubsw_xmm_xmm_xmm: { avx }
flags for vpsubsw_ymm_ymm_m256: { avx2 }
flags for vpsubsw_ymm_ymm_ymm: { avx2 }
flags for vpsubusb_xmm_xmm_m128: { avx }
flags for vpsubusb_xmm_xmm_xmm: { avx }
flags for vpsubusb_ymm_ymm_m256: { avx2 }
flags for vpsubusb_ymm_ymm_ymm: { avx2 }
flags for vpsubusw_xmm_xmm_m128: { avx }
flags for vpsubusw_xmm_xmm_xmm: { avx }
flags for vpsubusw_ymm_ymm_m256: { avx2 }
flags for vpsubusw_ymm_ymm_ymm: { avx2 }
flags for vpsubw_xmm_xmm_m128: { avx }
flags for vpsubw_xmm_xmm_xmm: { avx }
flags for vpsubw_ymm_ymm_m256: { avx2 }
flags for vpsubw_ymm_ymm_ymm: { avx2 }
flags for vptest_xmm_m128: { avx }
flags for vptest_xmm_xmm: { avx }
flags for vptest_ymm_m256: { avx }
flags for vptest_ymm_ymm: { avx }
flags for vpunpckhbw_xmm_xmm_m128: { avx }
flags for vpunpckhbw_xmm_xmm_xmm: { avx }
flags for vpunpckhbw_ymm_ymm_m256: { avx2 }
flags for vpunpckhbw_ymm_ymm_ymm: { avx2 }
flags for vpunpckhdq_xmm_xmm_m128: { avx }
flags for vpunpckhdq_xmm_xmm_xmm: { avx }
flags for vpunpckhdq_ymm_ymm_m256: { avx2 }
flags for vpunpckhdq_ymm_ymm_ymm: { avx2 }
flags for vpunpckhqdq_xmm_xmm_m128: { avx }
flags for vpunpckhqdq_xmm_xmm_xmm: { avx }
flags for vpunpckhqdq_ymm_ymm_m256: { avx2 }
flags for vpunpckhqdq_ymm_ymm_ymm: { avx2 }
flags for vpunpckhwd_xmm_xmm_m128: { avx }
flags for vpunpckhwd_xmm_xmm_xmm: { avx }
flags for vpunpckhwd_ymm_ymm_m256: { avx2 }
flags for vpunpckhwd_ymm_ymm_ymm: { avx2 }
flags for vpunpcklbw_xmm_xmm_m128: { avx }
flags for vpunpcklbw_xmm_xmm_xmm: { avx }
flags for vpunpcklbw_ymm_ymm_m256: { avx2 }
flags for vpunpcklbw_ymm_ymm_ymm: { avx2 }
flags for vpunpckldq_xmm_xmm_m128: { avx }
flags for vpunpckldq_xmm_xmm_xmm: { avx }
flags for vpunpckldq_ymm_ymm_m256: { avx2 }
flags for vpunpckldq_ymm_ymm_ymm: { avx2 }
flags for vpunpcklqdq_xmm_xmm_m128: { avx }
flags for vpunpcklqdq_xmm_xmm_xmm: { avx }
flags for vpunpcklqdq_ymm_ymm_m256: { avx2 }
flags for vpunpcklqdq_ymm_ymm_ymm: { avx2 }
flags for vpunpcklwd_xmm_xmm_m128: { avx }
flags for vpunpcklwd_xmm_xmm_xmm: { avx }
flags for vpunpcklwd_ymm_ymm_m256: { avx2 }
flags for vpunpcklwd_ymm_ymm_ymm: { avx2 }
flags for vpxor_xmm_xmm_m128: { avx }
flags for vpxor_xmm_xmm_xmm: { avx }
flags for vpxor_ymm_ymm_m256: { avx2 }
flags for vpxor_ymm_ymm_ymm: { avx2 }
flags for vrcpps_xmm_m128: { avx }
flags for vrcpps_xmm_xmm: { avx }
flags for vrcpps_ymm_m256: { avx }
flags for vrcpps_ymm_ymm: { avx }
flags for vrcpss_xmm_xmm_m32: { avx }
flags for vrcpss_xmm_xmm_xmm: { avx }
flags for vroundpd_xmm_m128_imm8: { avx }
flags for vroundpd_xmm_xmm_imm8: { avx }
flags for vroundpd_ymm_m256_imm8: { avx }
flags for vroundpd_ymm_ymm_imm8: { avx }
flags for vroundps_xmm_m128_imm8: { avx }
flags for vroundps_xmm_xmm_imm8: { avx }
flags for vroundps_ymm_m256_imm8: { avx }
flags for vroundps_ymm_ymm_imm8: { avx }
flags for vroundsd_xmm_xmm_m64_imm8: { avx }
flags for vroundsd_xmm_xmm_xmm_imm8: { avx }
flags for vroundss_xmm_xmm_m32_imm8: { avx }
flags for vroundss_xmm_xmm_xmm_imm8: { avx }
flags for vrsqrtps_xmm_m128: { avx }
flags for vrsqrtps_xmm_xmm: { avx }
flags for vrsqrtps_ymm_m256: { avx }
flags for vrsqrtps_ymm_ymm: { avx }
flags for vrsqrtss_xmm_xmm_m32: { avx }
flags for vrsqrtss_xmm_xmm_xmm: { avx }
flags for vshufpd_xmm_xmm_m128_imm8: { avx }
flags for vshufpd_xmm_xmm_xmm_imm8: { avx }
flags for vshufpd_ymm_ymm_m256_imm8: { avx }
flags for vshufpd_ymm_ymm_ymm_imm8: { avx }
flags for vshufps_xmm_xmm_m128_imm8: { avx }
flags for vshufps_xmm_xmm_xmm_imm8: { avx }
flags for vshufps_ymm_ymm_m256_imm8: { avx }
flags for vshufps_ymm_ymm_ymm_imm8: { avx }
flags for vsqrtpd_xmm_m128: { avx }
flags for vsqrtpd_xmm_xmm: { avx }
flags for vsqrtpd_ymm_m256: { avx }
flags for vsqrtpd_ymm_ymm: { avx }
flags for vsqrtps_xmm_m128: { avx }
flags for vsqrtps_xmm_xmm: { avx }
flags for vsqrtps_ymm_m256: { avx }
flags for vsqrtps_ymm_ymm: { avx }
flags for vsqrtsd_xmm_xmm_m64: { avx }
flags for vsqrtsd_xmm_xmm_xmm: { avx }
flags for vsqrtss_xmm_xmm_m32: { avx }
flags for vsqrtss_xmm_xmm_xmm: { avx }
flags for vsubpd_xmm_xmm_m128: { avx }
flags for vsubpd_xmm_xmm_xmm: { avx }
flags for vsubpd_ymm_ymm_m256: { avx }
flags for vsubpd_ymm_ymm_ymm: { avx }
flags for vsubps_xmm_xmm_m128: { avx }
flags for vsubps_xmm_xmm_xmm: { avx }
flags for vsubps_ymm_ymm_m256: { avx }
flags for vsubps_ymm_ymm_ymm: { avx }
flags for vsubsd_xmm_xmm_m64: { avx }
flags for vsubsd_xmm_xmm_xmm: { avx }
flags for vsubss_xmm_xmm_m32: { avx }
flags for vsubss_xmm_xmm_xmm: { avx }
flags for vtestpd_xmm_m128: { avx }
flags for vtestpd_xmm_xmm: { avx }
flags for vtestpd_ymm_m256: { avx }
flags for vtestpd_ymm_ymm: { avx }
flags for vtestps_xmm_m128: { avx }
flags for vtestps_xmm_xmm: { avx }
flags for vtestps_ymm_m256: { avx }
flags for vtestps_ymm_ymm: { avx }
flags for vucomisd_xmm_m64: { avx }
flags for vucomisd_xmm_xmm: { avx }
flags for vucomiss_xmm_m32: { avx }
flags for vucomiss_xmm_xmm: { avx }
flags for vunpckhpd_xmm_xmm_m128: { avx }
flags for vunpckhpd_xmm_xmm_xmm: { avx }
flags for vunpckhpd_ymm_ymm_m256: { avx }
flags for vunpckhpd_ymm_ymm_ymm: { avx }
flags for vunpckhps_xmm_xmm_m128: { avx }
flags for vunpckhps_xmm_xmm_xmm: { avx }
flags for vunpckhps_ymm_ymm_m256: { avx }
flags for vunpckhps_ymm_ymm_ymm: { avx }
flags for vunpcklpd_xmm_xmm_m128: { avx }
flags for vunpcklpd_xmm_xmm_xmm: { avx }
flags for vunpcklpd_ymm_ymm_m256: { avx }
flags for vunpcklpd_ymm_ymm_ymm: { avx }
flags for vunpcklps_xmm_xmm_m128: { avx }
flags for vunpcklps_xmm_xmm_xmm: { avx }
flags for vunpcklps_ymm_ymm_m256: { avx }
flags for vunpcklps_ymm_ymm_ymm: { avx }
flags for vxorpd_xmm_xmm_m128: { avx }
flags for vxorpd_xmm_xmm_xmm: { avx }
flags for vxorpd_ymm_ymm_m256: { avx }
flags for vxorpd_ymm_ymm_ymm: { avx }
flags for vxorps_xmm_xmm_m128: { avx }
flags for vxorps_xmm_xmm_xmm: { avx }
flags for vxorps_ymm_ymm_m256: { avx }
flags for vxorps_ymm_ymm_ymm: { avx }
flags for vzeroall: { avx }
flags for vzeroupper: { avx }
flags for wait: { fpu }
flags for xabort_imm8: { rtm }
flags for xacquire: { hle }
flags for xbegin_label: { rtm }
flags for xend: { rtm }
flags for xorb_al_imm8: { }
flags for xorw_ax_imm16: { }
flags for xorl_eax_imm32: { }
flags for xorw_m16_imm16: { }
flags for xorw_m16_imm8: { }
flags for xorw_m16_r16: { }
flags for xorl_m32_imm32: { }
flags for xorl_m32_imm8: { }
flags for xorl_m32_r32: { }
flags for xorq_m64_imm32: { }
flags for xorq_m64_imm8: { }
flags for xorq_m64_r64: { }
flags for xorb_m8_imm8: { }
flags for xorb_m8_r8: { }
flags for xorb_m8_rh: { }
flags for xorw_r16_imm16: { }
flags for xorw_r16_imm8: { }
flags for xorw_r16_m16: { }
flags for xorw_r16_r16: { }
flags for xorw_r16_r16_1: { }
flags for xorl_r32_imm32: { }
flags for xorl_r32_imm8: { }
flags for xorl_r32_m32: { }
flags for xorl_r32_r32: { }
flags for xorl_r32_r32_1: { }
flags for xorq_r64_imm32: { }
flags for xorq_r64_imm8: { }
flags for xorq_r64_m64: { }
flags for xorq_r64_r64: { }
flags for xorq_r64_r64_1: { }
flags for xorb_r8_imm8: { }
flags for xorb_r8_m8: { }
flags for xorb_r8_r8: { }
flags for xorb_r8_r8_1: { }
flags for xorb_r8_rh: { }
flags for xorb_r8_rh_1: { }
flags for xorq_rax_imm32: { }
flags for xorb_rh_imm8: { }
flags for xorb_rh_m8: { }
flags for xorb_rh_r8: { }
flags for xorb_rh_r8_1: { }
flags for xorb_rh_rh: { }
flags for xorb_rh_rh_1: { }
flags for xorpd_xmm_m128: { sse2 }
flags for xorpd_xmm_xmm: { sse2 }
flags for xorps_xmm_m128: { sse }
flags for xorps_xmm_xmm: { sse }
flags for xrelease: { hle }
flags for xtest: { rtm }
Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (15)                                                Lowest Known Correct Cost (15)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  addb $0xfa, %ah           #  2     0x2   3      OPC=addb_rh_imm8           addb $0xfa, %ah           #  2     0x2   3      OPC=addb_rh_imm8         
  nop                       #  3     0x5   1      OPC=nop                    nop                       #  3     0x5   1      OPC=nop                  
  movq %rdi, %rdx           #  4     0x6   3      OPC=movq_r64_r64           movq %rdi, %rdx           #  4     0x6   3      OPC=movq_r64_r64         
  movl %edi, %edi           #  5     0x9   2      OPC=movl_r32_r32           movl %edi, %edi           #  5     0x9   2      OPC=movl_r32_r32         
  testl %edx, %r15d         #  6     0xb   3      OPC=testl_r32_r32          testl %edx, %r15d         #  6     0xb   3      OPC=testl_r32_r32        
  nop                       #  7     0xe   1      OPC=nop                    nop                       #  7     0xe   1      OPC=nop                  
  nop                       #  8     0xf   1      OPC=nop                    nop                       #  8     0xf   1      OPC=nop                  
  je .L_142ce0              #  9     0x10  2      OPC=je_label               je .L_142ce0              #  9     0x10  2      OPC=je_label             
  nop                       #  10    0x12  1      OPC=nop                    nop                       #  10    0x12  1      OPC=nop                  
  nop                       #  11    0x13  1      OPC=nop                    nop                       #  11    0x13  1      OPC=nop                  
  nop                       #  12    0x14  1      OPC=nop                    nop                       #  12    0x14  1      OPC=nop                  
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x15  1      OPC=nop                  
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x16  1      OPC=nop                  
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x17  1      OPC=nop                  
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x18  1      OPC=nop                  
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x19  1      OPC=nop                  
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1a  1      OPC=nop                  
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1b  1      OPC=nop                  
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1c  1      OPC=nop                  
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1d  1      OPC=nop                  
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1e  1      OPC=nop                  
  nop                       #  23    0x1f  1      OPC=nop                    nop                       #  23    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  nop                       #  24    0x20  1      OPC=nop                    nop                       #  24    0x20  1      OPC=nop                  
  nop                       #  25    0x21  1      OPC=nop                    nop                       #  25    0x21  1      OPC=nop                  
  nop                       #  26    0x22  1      OPC=nop                    nop                       #  26    0x22  1      OPC=nop                  
  addl $0x8, %edx           #  27    0x23  3      OPC=addl_r32_imm8          addl $0x8, %edx           #  27    0x23  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  28    0x26  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  28    0x26  4      OPC=movl_r32_m32         
  testl %eax, %eax          #  29    0x2a  2      OPC=testl_r32_r32          testl %eax, %eax          #  29    0x2a  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  30    0x2c  2      OPC=jne_label              jne .L_142cc0             #  30    0x2c  2      OPC=jne_label            
  movl %edx, %eax           #  31    0x2e  2      OPC=movl_r32_r32_1         movl %edx, %eax           #  31    0x2e  2      OPC=movl_r32_r32_1       
  nop                       #  32    0x30  1      OPC=nop                    nop                       #  32    0x30  1      OPC=nop                  
  nop                       #  33    0x31  1      OPC=nop                    nop                       #  33    0x31  1      OPC=nop                  
  nop                       #  34    0x32  1      OPC=nop                    nop                       #  34    0x32  1      OPC=nop                  
  nop                       #  35    0x33  1      OPC=nop                    nop                       #  35    0x33  1      OPC=nop                  
  nop                       #  36    0x34  1      OPC=nop                    nop                       #  36    0x34  1      OPC=nop                  
  nop                       #  37    0x35  1      OPC=nop                    nop                       #  37    0x35  1      OPC=nop                  
  nop                       #  38    0x36  1      OPC=nop                    nop                       #  38    0x36  1      OPC=nop                  
  subl %edi, %eax           #  39    0x37  2      OPC=subl_r32_r32           subl %edi, %eax           #  39    0x37  2      OPC=subl_r32_r32         
  nop                       #  40    0x39  1      OPC=nop                    nop                       #  40    0x39  1      OPC=nop                  
  nop                       #  41    0x3a  1      OPC=nop                    nop                       #  41    0x3a  1      OPC=nop                  
  sarl $0x2, %eax           #  42    0x3b  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  42    0x3b  3      OPC=sarl_r32_imm8        
  nop                       #  43    0x3e  1      OPC=nop                    nop                       #  43    0x3e  1      OPC=nop                  
  nop                       #  44    0x3f  1      OPC=nop                    nop                       #  44    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  45    0x40  1      OPC=nop                    nop                       #  45    0x40  1      OPC=nop                  
  nop                       #  46    0x41  1      OPC=nop                    nop                       #  46    0x41  1      OPC=nop                  
  popq %r11                 #  47    0x42  2      OPC=popq_r64_1             popq %r11                 #  47    0x42  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  48    0x44  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  48    0x44  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  49    0x48  3      OPC=addq_r64_r64           addq %r15, %r11           #  49    0x48  3      OPC=addq_r64_r64         
  jmpq %r11                 #  50    0x4b  3      OPC=jmpq_r64               jmpq %r11                 #  50    0x4b  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (14)                                                Lowest Known Correct Cost (14)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  nop                       #  2     0x2   1      OPC=nop                    nop                       #  2     0x2   1      OPC=nop                  
  addb $0x7, %ah            #  3     0x3   3      OPC=addb_rh_imm8           addb $0x7, %ah            #  3     0x3   3      OPC=addb_rh_imm8         
  movq %rdi, %rdx           #  4     0x6   3      OPC=movq_r64_r64           movq %rdi, %rdx           #  4     0x6   3      OPC=movq_r64_r64         
  nop                       #  5     0x9   1      OPC=nop                    nop                       #  5     0x9   1      OPC=nop                  
  nop                       #  6     0xa   1      OPC=nop                    nop                       #  6     0xa   1      OPC=nop                  
  nop                       #  7     0xb   1      OPC=nop                    nop                       #  7     0xb   1      OPC=nop                  
  nop                       #  8     0xc   1      OPC=nop                    nop                       #  8     0xc   1      OPC=nop                  
  nop                       #  9     0xd   1      OPC=nop                    nop                       #  9     0xd   1      OPC=nop                  
  nop                       #  10    0xe   1      OPC=nop                    nop                       #  10    0xe   1      OPC=nop                  
  nop                       #  11    0xf   1      OPC=nop                    nop                       #  11    0xf   1      OPC=nop                  
  je .L_142ce0              #  12    0x10  2      OPC=je_label               je .L_142ce0              #  12    0x10  2      OPC=je_label             
  nop                       #  13    0x12  1      OPC=nop                    nop                       #  13    0x12  1      OPC=nop                  
  nop                       #  14    0x13  1      OPC=nop                    nop                       #  14    0x13  1      OPC=nop                  
  nop                       #  15    0x14  1      OPC=nop                    nop                       #  15    0x14  1      OPC=nop                  
  nop                       #  16    0x15  1      OPC=nop                    nop                       #  16    0x15  1      OPC=nop                  
  nop                       #  17    0x16  1      OPC=nop                    nop                       #  17    0x16  1      OPC=nop                  
  nop                       #  18    0x17  1      OPC=nop                    nop                       #  18    0x17  1      OPC=nop                  
  nop                       #  19    0x18  1      OPC=nop                    nop                       #  19    0x18  1      OPC=nop                  
  nop                       #  20    0x19  1      OPC=nop                    nop                       #  20    0x19  1      OPC=nop                  
  nop                       #  21    0x1a  1      OPC=nop                    nop                       #  21    0x1a  1      OPC=nop                  
  nop                       #  22    0x1b  1      OPC=nop                    nop                       #  22    0x1b  1      OPC=nop                  
  nop                       #  23    0x1c  1      OPC=nop                    nop                       #  23    0x1c  1      OPC=nop                  
  nop                       #  24    0x1d  1      OPC=nop                    nop                       #  24    0x1d  1      OPC=nop                  
  nop                       #  25    0x1e  1      OPC=nop                    nop                       #  25    0x1e  1      OPC=nop                  
  nop                       #  26    0x1f  1      OPC=nop                    nop                       #  26    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  nop                       #  27    0x20  1      OPC=nop                    nop                       #  27    0x20  1      OPC=nop                  
  nop                       #  28    0x21  1      OPC=nop                    nop                       #  28    0x21  1      OPC=nop                  
  addl $0x8, %edx           #  29    0x22  3      OPC=addl_r32_imm8          addl $0x8, %edx           #  29    0x22  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  30    0x25  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  30    0x25  4      OPC=movl_r32_m32         
  testl %eax, %eax          #  31    0x29  2      OPC=testl_r32_r32          testl %eax, %eax          #  31    0x29  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  32    0x2b  2      OPC=jne_label              jne .L_142cc0             #  32    0x2b  2      OPC=jne_label            
  movl %edx, %eax           #  33    0x2d  2      OPC=movl_r32_r32_1         movl %edx, %eax           #  33    0x2d  2      OPC=movl_r32_r32_1       
  nop                       #  34    0x2f  1      OPC=nop                    nop                       #  34    0x2f  1      OPC=nop                  
  nop                       #  35    0x30  1      OPC=nop                    nop                       #  35    0x30  1      OPC=nop                  
  nop                       #  36    0x31  1      OPC=nop                    nop                       #  36    0x31  1      OPC=nop                  
  nop                       #  37    0x32  1      OPC=nop                    nop                       #  37    0x32  1      OPC=nop                  
  nop                       #  38    0x33  1      OPC=nop                    nop                       #  38    0x33  1      OPC=nop                  
  nop                       #  39    0x34  1      OPC=nop                    nop                       #  39    0x34  1      OPC=nop                  
  nop                       #  40    0x35  1      OPC=nop                    nop                       #  40    0x35  1      OPC=nop                  
  subl %edi, %eax           #  41    0x36  2      OPC=subl_r32_r32           subl %edi, %eax           #  41    0x36  2      OPC=subl_r32_r32         
  nop                       #  42    0x38  1      OPC=nop                    nop                       #  42    0x38  1      OPC=nop                  
  nop                       #  43    0x39  1      OPC=nop                    nop                       #  43    0x39  1      OPC=nop                  
  sarl $0x2, %eax           #  44    0x3a  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  44    0x3a  3      OPC=sarl_r32_imm8        
  nop                       #  45    0x3d  1      OPC=nop                    nop                       #  45    0x3d  1      OPC=nop                  
  nop                       #  46    0x3e  1      OPC=nop                    nop                       #  46    0x3e  1      OPC=nop                  
  nop                       #  47    0x3f  1      OPC=nop                    nop                       #  47    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  48    0x40  1      OPC=nop                    nop                       #  48    0x40  1      OPC=nop                  
  popq %r11                 #  49    0x41  2      OPC=popq_r64_1             popq %r11                 #  49    0x41  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  50    0x43  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  50    0x43  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  51    0x47  3      OPC=addq_r64_r64           addq %r15, %r11           #  51    0x47  3      OPC=addq_r64_r64         
  jmpq %r11                 #  52    0x4a  3      OPC=jmpq_r64               jmpq %r11                 #  52    0x4a  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (12)                                               Lowest Known Correct Cost (12)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                     #  Line  RIP   Bytes  Opcode                   # Text                     #  Line  RIP   Bytes  Opcode                   
.wcslen:                   #        0     0      OPC=<label>              .wcslen:                   #        0     0      OPC=<label>              
  nop                      #  1     0     1      OPC=nop                    nop                      #  1     0     1      OPC=nop                  
  nop                      #  2     0x1   1      OPC=nop                    nop                      #  2     0x1   1      OPC=nop                  
  nop                      #  3     0x2   1      OPC=nop                    nop                      #  3     0x2   1      OPC=nop                  
  nop                      #  4     0x3   1      OPC=nop                    nop                      #  4     0x3   1      OPC=nop                  
  xorl %eax, %eax          #  5     0x4   2      OPC=xorl_r32_r32           xorl %eax, %eax          #  5     0x4   2      OPC=xorl_r32_r32         
  nop                      #  6     0x6   1      OPC=nop                    nop                      #  6     0x6   1      OPC=nop                  
  nop                      #  7     0x7   1      OPC=nop                    nop                      #  7     0x7   1      OPC=nop                  
  nop                      #  8     0x8   1      OPC=nop                    nop                      #  8     0x8   1      OPC=nop                  
  movq %rdi, %rdx          #  9     0x9   3      OPC=movq_r64_r64           movq %rdi, %rdx          #  9     0x9   3      OPC=movq_r64_r64         
  nop                      #  10    0xc   1      OPC=nop                    nop                      #  10    0xc   1      OPC=nop                  
  nop                      #  11    0xd   1      OPC=nop                    nop                      #  11    0xd   1      OPC=nop                  
  orb $0x5, %ah            #  12    0xe   3      OPC=orb_rh_imm8            orb $0x5, %ah            #  12    0xe   3      OPC=orb_rh_imm8          
  nop                      #  13    0x11  1      OPC=nop                    nop                      #  13    0x11  1      OPC=nop                  
  nop                      #  14    0x12  1      OPC=nop                    nop                      #  14    0x12  1      OPC=nop                  
  nop                      #  15    0x13  1      OPC=nop                    nop                      #  15    0x13  1      OPC=nop                  
  nop                      #  16    0x14  1      OPC=nop                    nop                      #  16    0x14  1      OPC=nop                  
  je .L_142ce0             #  17    0x15  2      OPC=je_label               je .L_142ce0             #  17    0x15  2      OPC=je_label             
  nop                      #  18    0x17  1      OPC=nop                    nop                      #  18    0x17  1      OPC=nop                  
  nop                      #  19    0x18  1      OPC=nop                    nop                      #  19    0x18  1      OPC=nop                  
  nop                      #  20    0x19  1      OPC=nop                    nop                      #  20    0x19  1      OPC=nop                  
  nop                      #  21    0x1a  1      OPC=nop                    nop                      #  21    0x1a  1      OPC=nop                  
  nop                      #  22    0x1b  1      OPC=nop                    nop                      #  22    0x1b  1      OPC=nop                  
  nop                      #  23    0x1c  1      OPC=nop                    nop                      #  23    0x1c  1      OPC=nop                  
  nop                      #  24    0x1d  1      OPC=nop                    nop                      #  24    0x1d  1      OPC=nop                  
  nop                      #  25    0x1e  1      OPC=nop                    nop                      #  25    0x1e  1      OPC=nop                  
  nop                      #  26    0x1f  1      OPC=nop                    nop                      #  26    0x1f  1      OPC=nop                  
.L_142cc0:                 #        0x20  0      OPC=<label>              .L_142cc0:                 #        0x20  0      OPC=<label>              
  nop                      #  27    0x20  1      OPC=nop                    nop                      #  27    0x20  1      OPC=nop                  
  addl $0x10, %edx         #  28    0x21  3      OPC=addl_r32_imm8          addl $0x10, %edx         #  28    0x21  3      OPC=addl_r32_imm8        
  movw (%r15,%rdx,1), %ax  #  29    0x24  5      OPC=movw_r16_m16           movw (%r15,%rdx,1), %ax  #  29    0x24  5      OPC=movw_r16_m16         
  testl %eax, %edx         #  30    0x29  2      OPC=testl_r32_r32          testl %eax, %edx         #  30    0x29  2      OPC=testl_r32_r32        
  jne .L_142cc0            #  31    0x2b  2      OPC=jne_label              jne .L_142cc0            #  31    0x2b  2      OPC=jne_label            
  nop                      #  32    0x2d  1      OPC=nop                    nop                      #  32    0x2d  1      OPC=nop                  
  nop                      #  33    0x2e  1      OPC=nop                    nop                      #  33    0x2e  1      OPC=nop                  
  nop                      #  34    0x2f  1      OPC=nop                    nop                      #  34    0x2f  1      OPC=nop                  
  nop                      #  35    0x30  1      OPC=nop                    nop                      #  35    0x30  1      OPC=nop                  
  nop                      #  36    0x31  1      OPC=nop                    nop                      #  36    0x31  1      OPC=nop                  
  subl %edi, %eax          #  37    0x32  2      OPC=subl_r32_r32           subl %edi, %eax          #  37    0x32  2      OPC=subl_r32_r32         
  nop                      #  38    0x34  1      OPC=nop                    nop                      #  38    0x34  1      OPC=nop                  
  nop                      #  39    0x35  1      OPC=nop                    nop                      #  39    0x35  1      OPC=nop                  
  nop                      #  40    0x36  1      OPC=nop                    nop                      #  40    0x36  1      OPC=nop                  
  addl %edx, %eax          #  41    0x37  2      OPC=addl_r32_r32_1         addl %edx, %eax          #  41    0x37  2      OPC=addl_r32_r32_1       
  nop                      #  42    0x39  1      OPC=nop                    nop                      #  42    0x39  1      OPC=nop                  
  nop                      #  43    0x3a  1      OPC=nop                    nop                      #  43    0x3a  1      OPC=nop                  
  nop                      #  44    0x3b  1      OPC=nop                    nop                      #  44    0x3b  1      OPC=nop                  
  nop                      #  45    0x3c  1      OPC=nop                    nop                      #  45    0x3c  1      OPC=nop                  
  sarl $0x2, %eax          #  46    0x3d  3      OPC=sarl_r32_imm8          sarl $0x2, %eax          #  46    0x3d  3      OPC=sarl_r32_imm8        
.L_142ce0:                 #        0x40  0      OPC=<label>              .L_142ce0:                 #        0x40  0      OPC=<label>              
  nop                      #  47    0x40  1      OPC=nop                    nop                      #  47    0x40  1      OPC=nop                  
  nop                      #  48    0x41  1      OPC=nop                    nop                      #  48    0x41  1      OPC=nop                  
  nop                      #  49    0x42  1      OPC=nop                    nop                      #  49    0x42  1      OPC=nop                  
  nop                      #  50    0x43  1      OPC=nop                    nop                      #  50    0x43  1      OPC=nop                  
  nop                      #  51    0x44  1      OPC=nop                    nop                      #  51    0x44  1      OPC=nop                  
  nop                      #  52    0x45  1      OPC=nop                    nop                      #  52    0x45  1      OPC=nop                  
  nop                      #  53    0x46  1      OPC=nop                    nop                      #  53    0x46  1      OPC=nop                  
  popq %r11                #  54    0x47  2      OPC=popq_r64_1             popq %r11                #  54    0x47  2      OPC=popq_r64_1           
  andl $0xe0, %r11d        #  55    0x49  4      OPC=andl_r32_imm8          andl $0xe0, %r11d        #  55    0x49  4      OPC=andl_r32_imm8        
  addq %r15, %r11          #  56    0x4d  3      OPC=addq_r64_r64           addq %r15, %r11          #  56    0x4d  3      OPC=addq_r64_r64         
  jmpq %r11                #  57    0x50  3      OPC=jmpq_r64               jmpq %r11                #  57    0x50  3      OPC=jmpq_r64             
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (11)                                               Lowest Known Correct Cost (11)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                     #  Line  RIP   Bytes  Opcode                   # Text                     #  Line  RIP   Bytes  Opcode                   
.wcslen:                   #        0     0      OPC=<label>              .wcslen:                   #        0     0      OPC=<label>              
  nop                      #  1     0     1      OPC=nop                    nop                      #  1     0     1      OPC=nop                  
  nop                      #  2     0x1   1      OPC=nop                    nop                      #  2     0x1   1      OPC=nop                  
  nop                      #  3     0x2   1      OPC=nop                    nop                      #  3     0x2   1      OPC=nop                  
  nop                      #  4     0x3   1      OPC=nop                    nop                      #  4     0x3   1      OPC=nop                  
  nop                      #  5     0x4   1      OPC=nop                    nop                      #  5     0x4   1      OPC=nop                  
  nop                      #  6     0x5   1      OPC=nop                    nop                      #  6     0x5   1      OPC=nop                  
  nop                      #  7     0x6   1      OPC=nop                    nop                      #  7     0x6   1      OPC=nop                  
  movq %rdi, %rdx          #  8     0x7   3      OPC=movq_r64_r64           movq %rdi, %rdx          #  8     0x7   3      OPC=movq_r64_r64         
  nop                      #  9     0xa   1      OPC=nop                    nop                      #  9     0xa   1      OPC=nop                  
  nop                      #  10    0xb   1      OPC=nop                    nop                      #  10    0xb   1      OPC=nop                  
  xorl $0x10, %edx         #  11    0xc   3      OPC=xorl_r32_imm8          xorl $0x10, %edx         #  11    0xc   3      OPC=xorl_r32_imm8        
  nop                      #  12    0xf   1      OPC=nop                    nop                      #  12    0xf   1      OPC=nop                  
  nop                      #  13    0x10  1      OPC=nop                    nop                      #  13    0x10  1      OPC=nop                  
  xorl %eax, %eax          #  14    0x11  2      OPC=xorl_r32_r32           xorl %eax, %eax          #  14    0x11  2      OPC=xorl_r32_r32         
  nop                      #  15    0x13  1      OPC=nop                    nop                      #  15    0x13  1      OPC=nop                  
  nop                      #  16    0x14  1      OPC=nop                    nop                      #  16    0x14  1      OPC=nop                  
  nop                      #  17    0x15  1      OPC=nop                    nop                      #  17    0x15  1      OPC=nop                  
  nop                      #  18    0x16  1      OPC=nop                    nop                      #  18    0x16  1      OPC=nop                  
  nop                      #  19    0x17  1      OPC=nop                    nop                      #  19    0x17  1      OPC=nop                  
  nop                      #  20    0x18  1      OPC=nop                    nop                      #  20    0x18  1      OPC=nop                  
  nop                      #  21    0x19  1      OPC=nop                    nop                      #  21    0x19  1      OPC=nop                  
  nop                      #  22    0x1a  1      OPC=nop                    nop                      #  22    0x1a  1      OPC=nop                  
  xorl $0x40, %eax         #  23    0x1b  3      OPC=xorl_r32_imm8          xorl $0x40, %eax         #  23    0x1b  3      OPC=xorl_r32_imm8        
  je .L_142ce0             #  24    0x1e  2      OPC=je_label               je .L_142ce0             #  24    0x1e  2      OPC=je_label             
.L_142cc0:                 #        0x20  0      OPC=<label>              .L_142cc0:                 #        0x20  0      OPC=<label>              
  orl %edi, %edx           #  25    0x20  2      OPC=orl_r32_r32_1          orl %edi, %edx           #  25    0x20  2      OPC=orl_r32_r32_1        
  andw (%r15,%rdx,1), %ax  #  26    0x22  5      OPC=andw_r16_m16           andw (%r15,%rdx,1), %ax  #  26    0x22  5      OPC=andw_r16_m16         
  nop                      #  27    0x27  1      OPC=nop                    nop                      #  27    0x27  1      OPC=nop                  
  nop                      #  28    0x28  1      OPC=nop                    nop                      #  28    0x28  1      OPC=nop                  
  nop                      #  29    0x29  1      OPC=nop                    nop                      #  29    0x29  1      OPC=nop                  
  nop                      #  30    0x2a  1      OPC=nop                    nop                      #  30    0x2a  1      OPC=nop                  
  nop                      #  31    0x2b  1      OPC=nop                    nop                      #  31    0x2b  1      OPC=nop                  
  jne .L_142cc0            #  32    0x2c  2      OPC=jne_label              jne .L_142cc0            #  32    0x2c  2      OPC=jne_label            
  subl %edi, %eax          #  33    0x2e  2      OPC=subl_r32_r32_1         subl %edi, %eax          #  33    0x2e  2      OPC=subl_r32_r32_1       
  nop                      #  34    0x30  1      OPC=nop                    nop                      #  34    0x30  1      OPC=nop                  
  addl %edx, %eax          #  35    0x31  2      OPC=addl_r32_r32_1         addl %edx, %eax          #  35    0x31  2      OPC=addl_r32_r32_1       
  shrl $0x2, %eax          #  36    0x33  3      OPC=shrl_r32_imm8          shrl $0x2, %eax          #  36    0x33  3      OPC=shrl_r32_imm8        
  nop                      #  37    0x36  1      OPC=nop                    nop                      #  37    0x36  1      OPC=nop                  
  nop                      #  38    0x37  1      OPC=nop                    nop                      #  38    0x37  1      OPC=nop                  
  nop                      #  39    0x38  1      OPC=nop                    nop                      #  39    0x38  1      OPC=nop                  
  nop                      #  40    0x39  1      OPC=nop                    nop                      #  40    0x39  1      OPC=nop                  
  nop                      #  41    0x3a  1      OPC=nop                    nop                      #  41    0x3a  1      OPC=nop                  
  nop                      #  42    0x3b  1      OPC=nop                    nop                      #  42    0x3b  1      OPC=nop                  
  nop                      #  43    0x3c  1      OPC=nop                    nop                      #  43    0x3c  1      OPC=nop                  
  nop                      #  44    0x3d  1      OPC=nop                    nop                      #  44    0x3d  1      OPC=nop                  
  nop                      #  45    0x3e  1      OPC=nop                    nop                      #  45    0x3e  1      OPC=nop                  
  nop                      #  46    0x3f  1      OPC=nop                    nop                      #  46    0x3f  1      OPC=nop                  
.L_142ce0:                 #        0x40  0      OPC=<label>              .L_142ce0:                 #        0x40  0      OPC=<label>              
  nopl %eax                #  47    0x40  3      OPC=nopl_r32               nopl %eax                #  47    0x40  3      OPC=nopl_r32             
  popq %r11                #  48    0x43  2      OPC=popq_r64_1             popq %r11                #  48    0x43  2      OPC=popq_r64_1           
  andl $0xe0, %r11d        #  49    0x45  4      OPC=andl_r32_imm8          andl $0xe0, %r11d        #  49    0x45  4      OPC=andl_r32_imm8        
  addq %r15, %r11          #  50    0x49  3      OPC=addq_r64_r64           addq %r15, %r11          #  50    0x49  3      OPC=addq_r64_r64         
  jmpq %r11                #  51    0x4c  3      OPC=jmpq_r64               jmpq %r11                #  51    0x4c  3      OPC=jmpq_r64             
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (10)                                               Lowest Known Correct Cost (10)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                     #  Line  RIP   Bytes  Opcode                   # Text                     #  Line  RIP   Bytes  Opcode                   
.wcslen:                   #        0     0      OPC=<label>              .wcslen:                   #        0     0      OPC=<label>              
  nop                      #  1     0     1      OPC=nop                    nop                      #  1     0     1      OPC=nop                  
  nop                      #  2     0x1   1      OPC=nop                    nop                      #  2     0x1   1      OPC=nop                  
  nop                      #  3     0x2   1      OPC=nop                    nop                      #  3     0x2   1      OPC=nop                  
  nop                      #  4     0x3   1      OPC=nop                    nop                      #  4     0x3   1      OPC=nop                  
  nop                      #  5     0x4   1      OPC=nop                    nop                      #  5     0x4   1      OPC=nop                  
  nop                      #  6     0x5   1      OPC=nop                    nop                      #  6     0x5   1      OPC=nop                  
  nop                      #  7     0x6   1      OPC=nop                    nop                      #  7     0x6   1      OPC=nop                  
  nop                      #  8     0x7   1      OPC=nop                    nop                      #  8     0x7   1      OPC=nop                  
  nop                      #  9     0x8   1      OPC=nop                    nop                      #  9     0x8   1      OPC=nop                  
  nop                      #  10    0x9   1      OPC=nop                    nop                      #  10    0x9   1      OPC=nop                  
  nop                      #  11    0xa   1      OPC=nop                    nop                      #  11    0xa   1      OPC=nop                  
  nop                      #  12    0xb   1      OPC=nop                    nop                      #  12    0xb   1      OPC=nop                  
  nop                      #  13    0xc   1      OPC=nop                    nop                      #  13    0xc   1      OPC=nop                  
  nop                      #  14    0xd   1      OPC=nop                    nop                      #  14    0xd   1      OPC=nop                  
  movq %rdi, %rdx          #  15    0xe   3      OPC=movq_r64_r64_1         movq %rdi, %rdx          #  15    0xe   3      OPC=movq_r64_r64_1       
  nop                      #  16    0x11  1      OPC=nop                    nop                      #  16    0x11  1      OPC=nop                  
  nop                      #  17    0x12  1      OPC=nop                    nop                      #  17    0x12  1      OPC=nop                  
  nop                      #  18    0x13  1      OPC=nop                    nop                      #  18    0x13  1      OPC=nop                  
  nop                      #  19    0x14  1      OPC=nop                    nop                      #  19    0x14  1      OPC=nop                  
  nop                      #  20    0x15  1      OPC=nop                    nop                      #  20    0x15  1      OPC=nop                  
  nop                      #  21    0x16  1      OPC=nop                    nop                      #  21    0x16  1      OPC=nop                  
  xorl %eax, %eax          #  22    0x17  2      OPC=xorl_r32_r32           xorl %eax, %eax          #  22    0x17  2      OPC=xorl_r32_r32         
  orl $0x10, %edx          #  23    0x19  3      OPC=orl_r32_imm8           orl $0x10, %edx          #  23    0x19  3      OPC=orl_r32_imm8         
  nop                      #  24    0x1c  1      OPC=nop                    nop                      #  24    0x1c  1      OPC=nop                  
  nop                      #  25    0x1d  1      OPC=nop                    nop                      #  25    0x1d  1      OPC=nop                  
  je .L_142ce0             #  26    0x1e  2      OPC=je_label               je .L_142ce0             #  26    0x1e  2      OPC=je_label             
.L_142cc0:                 #        0x20  0      OPC=<label>              .L_142cc0:                 #        0x20  0      OPC=<label>              
  andl %edx, %edi          #  27    0x20  2      OPC=andl_r32_r32_1         andl %edx, %edi          #  27    0x20  2      OPC=andl_r32_r32_1       
  andw (%r15,%rdi,1), %ax  #  28    0x22  5      OPC=andw_r16_m16           andw (%r15,%rdi,1), %ax  #  28    0x22  5      OPC=andw_r16_m16         
  nop                      #  29    0x27  1      OPC=nop                    nop                      #  29    0x27  1      OPC=nop                  
  nop                      #  30    0x28  1      OPC=nop                    nop                      #  30    0x28  1      OPC=nop                  
  jne .L_142cc0            #  31    0x29  2      OPC=jne_label              jne .L_142cc0            #  31    0x29  2      OPC=jne_label            
  nop                      #  32    0x2b  1      OPC=nop                    nop                      #  32    0x2b  1      OPC=nop                  
  nop                      #  33    0x2c  1      OPC=nop                    nop                      #  33    0x2c  1      OPC=nop                  
  nop                      #  34    0x2d  1      OPC=nop                    nop                      #  34    0x2d  1      OPC=nop                  
  nop                      #  35    0x2e  1      OPC=nop                    nop                      #  35    0x2e  1      OPC=nop                  
  nop                      #  36    0x2f  1      OPC=nop                    nop                      #  36    0x2f  1      OPC=nop                  
  nop                      #  37    0x30  1      OPC=nop                    nop                      #  37    0x30  1      OPC=nop                  
  nop                      #  38    0x31  1      OPC=nop                    nop                      #  38    0x31  1      OPC=nop                  
  nop                      #  39    0x32  1      OPC=nop                    nop                      #  39    0x32  1      OPC=nop                  
  nop                      #  40    0x33  1      OPC=nop                    nop                      #  40    0x33  1      OPC=nop                  
  nop                      #  41    0x34  1      OPC=nop                    nop                      #  41    0x34  1      OPC=nop                  
  nop                      #  42    0x35  1      OPC=nop                    nop                      #  42    0x35  1      OPC=nop                  
  nop                      #  43    0x36  1      OPC=nop                    nop                      #  43    0x36  1      OPC=nop                  
  nop                      #  44    0x37  1      OPC=nop                    nop                      #  44    0x37  1      OPC=nop                  
  shrl $0x80, %eax         #  45    0x38  3      OPC=shrl_r32_imm8          shrl $0x80, %eax         #  45    0x38  3      OPC=shrl_r32_imm8        
  orl %edx, %eax           #  46    0x3b  2      OPC=orl_r32_r32            orl %edx, %eax           #  46    0x3b  2      OPC=orl_r32_r32          
  subq %rdi, %rax          #  47    0x3d  3      OPC=subq_r64_r64           subq %rdi, %rax          #  47    0x3d  3      OPC=subq_r64_r64         
.L_142ce0:                 #        0x40  0      OPC=<label>              .L_142ce0:                 #        0x40  0      OPC=<label>              
  nop                      #  48    0x40  1      OPC=nop                    nop                      #  48    0x40  1      OPC=nop                  
  nop                      #  49    0x41  1      OPC=nop                    nop                      #  49    0x41  1      OPC=nop                  
  nop                      #  50    0x42  1      OPC=nop                    nop                      #  50    0x42  1      OPC=nop                  
  nop                      #  51    0x43  1      OPC=nop                    nop                      #  51    0x43  1      OPC=nop                  
  shrb $0x2, %al           #  52    0x44  3      OPC=shrb_r8_imm8           shrb $0x2, %al           #  52    0x44  3      OPC=shrb_r8_imm8         
  nop                      #  53    0x47  1      OPC=nop                    nop                      #  53    0x47  1      OPC=nop                  
  nop                      #  54    0x48  1      OPC=nop                    nop                      #  54    0x48  1      OPC=nop                  
  nop                      #  55    0x49  1      OPC=nop                    nop                      #  55    0x49  1      OPC=nop                  
  nop                      #  56    0x4a  1      OPC=nop                    nop                      #  56    0x4a  1      OPC=nop                  
  nop                      #  57    0x4b  1      OPC=nop                    nop                      #  57    0x4b  1      OPC=nop                  
  nop                      #  58    0x4c  1      OPC=nop                    nop                      #  58    0x4c  1      OPC=nop                  
  nop                      #  59    0x4d  1      OPC=nop                    nop                      #  59    0x4d  1      OPC=nop                  
  nop                      #  60    0x4e  1      OPC=nop                    nop                      #  60    0x4e  1      OPC=nop                  
  nop                      #  61    0x4f  1      OPC=nop                    nop                      #  61    0x4f  1      OPC=nop                  
  popq %r11                #  62    0x50  2      OPC=popq_r64_1             popq %r11                #  62    0x50  2      OPC=popq_r64_1           
  andl $0xe0, %r11d        #  63    0x52  4      OPC=andl_r32_imm8          andl $0xe0, %r11d        #  63    0x52  4      OPC=andl_r32_imm8        
  addq %r15, %r11          #  64    0x56  3      OPC=addq_r64_r64           addq %r15, %r11          #  64    0x56  3      OPC=addq_r64_r64         
  jmpq %r11                #  65    0x59  3      OPC=jmpq_r64               jmpq %r11                #  65    0x59  3      OPC=jmpq_r64             
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (9)                                          Lowest Known Correct Cost (9)                                       
                                                                                                                                        
  .text                                                               .text                                                             
  .globl wcslen                                                       .globl wcslen                                                     
  .type wcslen, @function                                             .type wcslen, @function                                           
                                                                                                                                        
#! file-offset 0                                                    #! file-offset 0                                                    
#! rip-offset  0                                                    #! rip-offset  0                                                    
#! capacity    0 bytes                                              #! capacity    0 bytes                                              
                                                                                                                                        
# Text               #  Line  RIP   Bytes  Opcode                   # Text               #  Line  RIP   Bytes  Opcode                   
.wcslen:             #        0     0      OPC=<label>              .wcslen:             #        0     0      OPC=<label>              
  nop                #  1     0     1      OPC=nop                    nop                #  1     0     1      OPC=nop                  
  nop                #  2     0x1   1      OPC=nop                    nop                #  2     0x1   1      OPC=nop                  
  nop                #  3     0x2   1      OPC=nop                    nop                #  3     0x2   1      OPC=nop                  
  nop                #  4     0x3   1      OPC=nop                    nop                #  4     0x3   1      OPC=nop                  
  nop                #  5     0x4   1      OPC=nop                    nop                #  5     0x4   1      OPC=nop                  
  nop                #  6     0x5   1      OPC=nop                    nop                #  6     0x5   1      OPC=nop                  
  nop                #  7     0x6   1      OPC=nop                    nop                #  7     0x6   1      OPC=nop                  
  nop                #  8     0x7   1      OPC=nop                    nop                #  8     0x7   1      OPC=nop                  
  nop                #  9     0x8   1      OPC=nop                    nop                #  9     0x8   1      OPC=nop                  
  nop                #  10    0x9   1      OPC=nop                    nop                #  10    0x9   1      OPC=nop                  
  nop                #  11    0xa   1      OPC=nop                    nop                #  11    0xa   1      OPC=nop                  
  nop                #  12    0xb   1      OPC=nop                    nop                #  12    0xb   1      OPC=nop                  
  nop                #  13    0xc   1      OPC=nop                    nop                #  13    0xc   1      OPC=nop                  
  nop                #  14    0xd   1      OPC=nop                    nop                #  14    0xd   1      OPC=nop                  
  nop                #  15    0xe   1      OPC=nop                    nop                #  15    0xe   1      OPC=nop                  
  nop                #  16    0xf   1      OPC=nop                    nop                #  16    0xf   1      OPC=nop                  
  nop                #  17    0x10  1      OPC=nop                    nop                #  17    0x10  1      OPC=nop                  
  nop                #  18    0x11  1      OPC=nop                    nop                #  18    0x11  1      OPC=nop                  
  movq %rdi, %rdx    #  19    0x12  3      OPC=movq_r64_r64_1         movq %rdi, %rdx    #  19    0x12  3      OPC=movq_r64_r64_1       
  xorl $0x10, %edi   #  20    0x15  3      OPC=xorl_r32_imm8          xorl $0x10, %edi   #  20    0x15  3      OPC=xorl_r32_imm8        
  je .L_142ce0       #  21    0x18  2      OPC=je_label               je .L_142ce0       #  21    0x18  2      OPC=je_label             
  movl $0x0, %r10d   #  22    0x1a  6      OPC=movl_r32_imm32         movl $0x0, %r10d   #  22    0x1a  6      OPC=movl_r32_imm32       
.L_142cc0:           #        0x20  0      OPC=<label>              .L_142cc0:           #        0x20  0      OPC=<label>              
  nop                #  23    0x20  1      OPC=nop                    nop                #  23    0x20  1      OPC=nop                  
  nop                #  24    0x21  1      OPC=nop                    nop                #  24    0x21  1      OPC=nop                  
  sarb $0x1, %r10b   #  25    0x22  3      OPC=sarb_r8_one            sarb $0x1, %r10b   #  25    0x22  3      OPC=sarb_r8_one          
  nop                #  26    0x25  1      OPC=nop                    nop                #  26    0x25  1      OPC=nop                  
  nop                #  27    0x26  1      OPC=nop                    nop                #  27    0x26  1      OPC=nop                  
  nop                #  28    0x27  1      OPC=nop                    nop                #  28    0x27  1      OPC=nop                  
  nop                #  29    0x28  1      OPC=nop                    nop                #  29    0x28  1      OPC=nop                  
  nop                #  30    0x29  1      OPC=nop                    nop                #  30    0x29  1      OPC=nop                  
  nop                #  31    0x2a  1      OPC=nop                    nop                #  31    0x2a  1      OPC=nop                  
  nop                #  32    0x2b  1      OPC=nop                    nop                #  32    0x2b  1      OPC=nop                  
  jne .L_142cc0      #  33    0x2c  2      OPC=jne_label              jne .L_142cc0      #  33    0x2c  2      OPC=jne_label            
  nop                #  34    0x2e  1      OPC=nop                    nop                #  34    0x2e  1      OPC=nop                  
  nop                #  35    0x2f  1      OPC=nop                    nop                #  35    0x2f  1      OPC=nop                  
  nop                #  36    0x30  1      OPC=nop                    nop                #  36    0x30  1      OPC=nop                  
  nop                #  37    0x31  1      OPC=nop                    nop                #  37    0x31  1      OPC=nop                  
  nop                #  38    0x32  1      OPC=nop                    nop                #  38    0x32  1      OPC=nop                  
  nop                #  39    0x33  1      OPC=nop                    nop                #  39    0x33  1      OPC=nop                  
  nop                #  40    0x34  1      OPC=nop                    nop                #  40    0x34  1      OPC=nop                  
  nop                #  41    0x35  1      OPC=nop                    nop                #  41    0x35  1      OPC=nop                  
  nop                #  42    0x36  1      OPC=nop                    nop                #  42    0x36  1      OPC=nop                  
  nop                #  43    0x37  1      OPC=nop                    nop                #  43    0x37  1      OPC=nop                  
  nop                #  44    0x38  1      OPC=nop                    nop                #  44    0x38  1      OPC=nop                  
  xorl %edx, %edi    #  45    0x39  2      OPC=xorl_r32_r32_1         xorl %edx, %edi    #  45    0x39  2      OPC=xorl_r32_r32_1       
  nop                #  46    0x3b  1      OPC=nop                    nop                #  46    0x3b  1      OPC=nop                  
  nop                #  47    0x3c  1      OPC=nop                    nop                #  47    0x3c  1      OPC=nop                  
  nop                #  48    0x3d  1      OPC=nop                    nop                #  48    0x3d  1      OPC=nop                  
  nop                #  49    0x3e  1      OPC=nop                    nop                #  49    0x3e  1      OPC=nop                  
  nop                #  50    0x3f  1      OPC=nop                    nop                #  50    0x3f  1      OPC=nop                  
.L_142ce0:           #        0x40  0      OPC=<label>              .L_142ce0:           #        0x40  0      OPC=<label>              
  movq %rdi, %rax    #  51    0x40  3      OPC=movq_r64_r64_1         movq %rdi, %rax    #  51    0x40  3      OPC=movq_r64_r64_1       
  nop                #  52    0x43  1      OPC=nop                    nop                #  52    0x43  1      OPC=nop                  
  nop                #  53    0x44  1      OPC=nop                    nop                #  53    0x44  1      OPC=nop                  
  nop                #  54    0x45  1      OPC=nop                    nop                #  54    0x45  1      OPC=nop                  
  nop                #  55    0x46  1      OPC=nop                    nop                #  55    0x46  1      OPC=nop                  
  nop                #  56    0x47  1      OPC=nop                    nop                #  56    0x47  1      OPC=nop                  
  nop                #  57    0x48  1      OPC=nop                    nop                #  57    0x48  1      OPC=nop                  
  nop                #  58    0x49  1      OPC=nop                    nop                #  58    0x49  1      OPC=nop                  
  nop                #  59    0x4a  1      OPC=nop                    nop                #  59    0x4a  1      OPC=nop                  
  nop                #  60    0x4b  1      OPC=nop                    nop                #  60    0x4b  1      OPC=nop                  
  nop                #  61    0x4c  1      OPC=nop                    nop                #  61    0x4c  1      OPC=nop                  
  nop                #  62    0x4d  1      OPC=nop                    nop                #  62    0x4d  1      OPC=nop                  
  nop                #  63    0x4e  1      OPC=nop                    nop                #  63    0x4e  1      OPC=nop                  
  shrq $0x2, %rax    #  64    0x4f  4      OPC=shrq_r64_imm8          shrq $0x2, %rax    #  64    0x4f  4      OPC=shrq_r64_imm8        
  popq %r11          #  65    0x53  2      OPC=popq_r64_1             popq %r11          #  65    0x53  2      OPC=popq_r64_1           
  andl $0xe0, %r11d  #  66    0x55  4      OPC=andl_r32_imm8          andl $0xe0, %r11d  #  66    0x55  4      OPC=andl_r32_imm8        
  addq %r15, %r11    #  67    0x59  3      OPC=addq_r64_r64           addq %r15, %r11    #  67    0x59  3      OPC=addq_r64_r64         
  jmpq %r11          #  68    0x5c  3      OPC=jmpq_r64               jmpq %r11          #  68    0x5c  3      OPC=jmpq_r64             
                                                                                                                                        
.size wcslen, .-wcslen                                              .size wcslen, .-wcslen                                              
                                                                                                                                        

********************************************************************************

Progress Update: 

Lowest Cost Discovered (8)                                            Lowest Known Correct Cost (9)                                       
                                                                                                                                          
  .text                                                                 .text                                                             
  .globl wcslen                                                         .globl wcslen                                                     
  .type wcslen, @function                                               .type wcslen, @function                                           
                                                                                                                                          
#! file-offset 0                                                      #! file-offset 0                                                    
#! rip-offset  0                                                      #! rip-offset  0                                                    
#! capacity    0 bytes                                                #! capacity    0 bytes                                              
                                                                                                                                          
# Text                 #  Line  RIP   Bytes  Opcode                   # Text               #  Line  RIP   Bytes  Opcode                   
.wcslen:               #        0     0      OPC=<label>              .wcslen:             #        0     0      OPC=<label>              
  xorl %edi, %edi      #  1     0     2      OPC=xorl_r32_r32           nop                #  1     0     1      OPC=nop                  
  movl %r15d, %edx     #  2     0x2   3      OPC=movl_r32_r32_1         nop                #  2     0x1   1      OPC=nop                  
  orw $0x10, %di       #  3     0x5   4      OPC=orw_r16_imm8           nop                #  3     0x2   1      OPC=nop                  
  nop                  #  4     0x9   1      OPC=nop                    nop                #  4     0x3   1      OPC=nop                  
  nop                  #  5     0xa   1      OPC=nop                    nop                #  5     0x4   1      OPC=nop                  
  nop                  #  6     0xb   1      OPC=nop                    nop                #  6     0x5   1      OPC=nop                  
  nop                  #  7     0xc   1      OPC=nop                    nop                #  7     0x6   1      OPC=nop                  
  nop                  #  8     0xd   1      OPC=nop                    nop                #  8     0x7   1      OPC=nop                  
  nop                  #  9     0xe   1      OPC=nop                    nop                #  9     0x8   1      OPC=nop                  
  nop                  #  10    0xf   1      OPC=nop                    nop                #  10    0x9   1      OPC=nop                  
  nop                  #  11    0x10  1      OPC=nop                    nop                #  11    0xa   1      OPC=nop                  
  nop                  #  12    0x11  1      OPC=nop                    nop                #  12    0xb   1      OPC=nop                  
  nop                  #  13    0x12  1      OPC=nop                    nop                #  13    0xc   1      OPC=nop                  
  nop                  #  14    0x13  1      OPC=nop                    nop                #  14    0xd   1      OPC=nop                  
  movsbl %r15b, %r14d  #  15    0x14  4      OPC=movsbl_r32_r8          nop                #  15    0xe   1      OPC=nop                  
  nop                  #  16    0x18  1      OPC=nop                    nop                #  16    0xf   1      OPC=nop                  
  nop                  #  17    0x19  1      OPC=nop                    nop                #  17    0x10  1      OPC=nop                  
  nop                  #  18    0x1a  1      OPC=nop                    nop                #  18    0x11  1      OPC=nop                  
  andb $0x7, %dl       #  19    0x1b  3      OPC=andb_r8_imm8           movq %rdi, %rdx    #  19    0x12  3      OPC=movq_r64_r64_1       
  je .L_142ce0         #  20    0x1e  2      OPC=je_label               xorl $0x10, %edi   #  20    0x15  3      OPC=xorl_r32_imm8        
.L_142cc0:             #        0x20  0      OPC=<label>                je .L_142ce0       #  21    0x18  2      OPC=je_label             
  nop                  #  21    0x20  1      OPC=nop                    movl $0x0, %r10d   #  22    0x1a  6      OPC=movl_r32_imm32       
  nop                  #  22    0x21  1      OPC=nop                  .L_142cc0:           #        0x20  0      OPC=<label>              
  nop                  #  23    0x22  1      OPC=nop                    nop                #  23    0x20  1      OPC=nop                  
  nopl %eax            #  24    0x23  3      OPC=nopl_r32               nop                #  24    0x21  1      OPC=nop                  
  nop                  #  25    0x26  1      OPC=nop                    sarb $0x1, %r10b   #  25    0x22  3      OPC=sarb_r8_one          
  nop                  #  26    0x27  1      OPC=nop                    nop                #  26    0x25  1      OPC=nop                  
  andw %di, %di        #  27    0x28  3      OPC=andw_r16_r16_1         nop                #  27    0x26  1      OPC=nop                  
  salw $0x4, %r14w     #  28    0x2b  5      OPC=salw_r16_imm8          nop                #  28    0x27  1      OPC=nop                  
  nop                  #  29    0x30  1      OPC=nop                    nop                #  29    0x28  1      OPC=nop                  
  nop                  #  30    0x31  1      OPC=nop                    nop                #  30    0x29  1      OPC=nop                  
  nop                  #  31    0x32  1      OPC=nop                    nop                #  31    0x2a  1      OPC=nop                  
  jne .L_142cc0        #  32    0x33  2      OPC=jne_label              nop                #  32    0x2b  1      OPC=nop                  
  nop                  #  33    0x35  1      OPC=nop                    jne .L_142cc0      #  33    0x2c  2      OPC=jne_label            
  nop                  #  34    0x36  1      OPC=nop                    nop                #  34    0x2e  1      OPC=nop                  
  nop                  #  35    0x37  1      OPC=nop                    nop                #  35    0x2f  1      OPC=nop                  
  nop                  #  36    0x38  1      OPC=nop                    nop                #  36    0x30  1      OPC=nop                  
  nop                  #  37    0x39  1      OPC=nop                    nop                #  37    0x31  1      OPC=nop                  
  nop                  #  38    0x3a  1      OPC=nop                    nop                #  38    0x32  1      OPC=nop                  
  nop                  #  39    0x3b  1      OPC=nop                    nop                #  39    0x33  1      OPC=nop                  
  nop                  #  40    0x3c  1      OPC=nop                    nop                #  40    0x34  1      OPC=nop                  
  nop                  #  41    0x3d  1      OPC=nop                    nop                #  41    0x35  1      OPC=nop                  
  nop                  #  42    0x3e  1      OPC=nop                    nop                #  42    0x36  1      OPC=nop                  
  nop                  #  43    0x3f  1      OPC=nop                    nop                #  43    0x37  1      OPC=nop                  
  nop                  #  44    0x40  1      OPC=nop                    nop                #  44    0x38  1      OPC=nop                  
.L_142ce0:             #        0x41  0      OPC=<label>                xorl %edx, %edi    #  45    0x39  2      OPC=xorl_r32_r32_1       
  nop                  #  45    0x41  1      OPC=nop                    nop                #  46    0x3b  1      OPC=nop                  
  movl %edi, %eax      #  46    0x42  2      OPC=movl_r32_r32_1         nop                #  47    0x3c  1      OPC=nop                  
  sarb $0x2, %al       #  47    0x44  3      OPC=sarb_r8_imm8           nop                #  48    0x3d  1      OPC=nop                  
  nop                  #  48    0x47  1      OPC=nop                    nop                #  49    0x3e  1      OPC=nop                  
  nop                  #  49    0x48  1      OPC=nop                    nop                #  50    0x3f  1      OPC=nop                  
  nop                  #  50    0x49  1      OPC=nop                  .L_142ce0:           #        0x40  0      OPC=<label>              
  nop                  #  51    0x4a  1      OPC=nop                    movq %rdi, %rax    #  51    0x40  3      OPC=movq_r64_r64_1       
  nop                  #  52    0x4b  1      OPC=nop                    nop                #  52    0x43  1      OPC=nop                  
  nop                  #  53    0x4c  1      OPC=nop                    nop                #  53    0x44  1      OPC=nop                  
  nop                  #  54    0x4d  1      OPC=nop                    nop                #  54    0x45  1      OPC=nop                  
  nop                  #  55    0x4e  1      OPC=nop                    nop                #  55    0x46  1      OPC=nop                  
  nop                  #  56    0x4f  1      OPC=nop                    nop                #  56    0x47  1      OPC=nop                  
  nop                  #  57    0x50  1      OPC=nop                    nop                #  57    0x48  1      OPC=nop                  
  nop                  #  58    0x51  1      OPC=nop                    nop                #  58    0x49  1      OPC=nop                  
  nop                  #  59    0x52  1      OPC=nop                    nop                #  59    0x4a  1      OPC=nop                  
  nop                  #  60    0x53  1      OPC=nop                    nop                #  60    0x4b  1      OPC=nop                  
  nop                  #  61    0x54  1      OPC=nop                    nop                #  61    0x4c  1      OPC=nop                  
  popq %r11            #  62    0x55  2      OPC=popq_r64_1             nop                #  62    0x4d  1      OPC=nop                  
  andl $0xe0, %r11d    #  63    0x57  4      OPC=andl_r32_imm8          nop                #  63    0x4e  1      OPC=nop                  
  addq %r15, %r11      #  64    0x5b  3      OPC=addq_r64_r64           shrq $0x2, %rax    #  64    0x4f  4      OPC=shrq_r64_imm8        
  jmpq %r11            #  65    0x5e  3      OPC=jmpq_r64               popq %r11          #  65    0x53  2      OPC=popq_r64_1           
                                                                        andl $0xe0, %r11d  #  66    0x55  4      OPC=andl_r32_imm8        
.size wcslen, .-wcslen                                                  addq %r15, %r11    #  67    0x59  3      OPC=addq_r64_r64         
                                                                        jmpq %r11          #  68    0x5c  3      OPC=jmpq_r64             
                                                                                                                                          
                                                                      .size wcslen, .-wcslen                                              
                                                                                                                                          

********************************************************************************

Progress Update: 

Lowest Cost Discovered (7)                                            Lowest Known Correct Cost (7)                                         
                                                                                                                                            
  .text                                                                 .text                                                               
  .globl wcslen                                                         .globl wcslen                                                       
  .type wcslen, @function                                               .type wcslen, @function                                             
                                                                                                                                            
#! file-offset 0                                                      #! file-offset 0                                                      
#! rip-offset  0                                                      #! rip-offset  0                                                      
#! capacity    0 bytes                                                #! capacity    0 bytes                                                
                                                                                                                                            
# Text                 #  Line  RIP   Bytes  Opcode                   # Text                 #  Line  RIP   Bytes  Opcode                   
.wcslen:               #        0     0      OPC=<label>              .wcslen:               #        0     0      OPC=<label>              
  xorl %edi, %edi      #  1     0     2      OPC=xorl_r32_r32           xorl %edi, %edi      #  1     0     2      OPC=xorl_r32_r32         
  movl %r15d, %edx     #  2     0x2   3      OPC=movl_r32_r32_1         movl %r15d, %edx     #  2     0x2   3      OPC=movl_r32_r32_1       
  orw $0x10, %di       #  3     0x5   4      OPC=orw_r16_imm8           orw $0x10, %di       #  3     0x5   4      OPC=orw_r16_imm8         
  nop                  #  4     0x9   1      OPC=nop                    nop                  #  4     0x9   1      OPC=nop                  
  nop                  #  5     0xa   1      OPC=nop                    nop                  #  5     0xa   1      OPC=nop                  
  nop                  #  6     0xb   1      OPC=nop                    nop                  #  6     0xb   1      OPC=nop                  
  nop                  #  7     0xc   1      OPC=nop                    nop                  #  7     0xc   1      OPC=nop                  
  nop                  #  8     0xd   1      OPC=nop                    nop                  #  8     0xd   1      OPC=nop                  
  nop                  #  9     0xe   1      OPC=nop                    nop                  #  9     0xe   1      OPC=nop                  
  nop                  #  10    0xf   1      OPC=nop                    nop                  #  10    0xf   1      OPC=nop                  
  nop                  #  11    0x10  1      OPC=nop                    nop                  #  11    0x10  1      OPC=nop                  
  nop                  #  12    0x11  1      OPC=nop                    nop                  #  12    0x11  1      OPC=nop                  
  nop                  #  13    0x12  1      OPC=nop                    nop                  #  13    0x12  1      OPC=nop                  
  nop                  #  14    0x13  1      OPC=nop                    nop                  #  14    0x13  1      OPC=nop                  
  nop                  #  15    0x14  1      OPC=nop                    nop                  #  15    0x14  1      OPC=nop                  
  movsbl %r15b, %r14d  #  16    0x15  4      OPC=movsbl_r32_r8          movsbl %r15b, %r14d  #  16    0x15  4      OPC=movsbl_r32_r8        
  nop                  #  17    0x19  1      OPC=nop                    nop                  #  17    0x19  1      OPC=nop                  
  nop                  #  18    0x1a  1      OPC=nop                    nop                  #  18    0x1a  1      OPC=nop                  
  andb $0x7, %dl       #  19    0x1b  3      OPC=andb_r8_imm8           andb $0x7, %dl       #  19    0x1b  3      OPC=andb_r8_imm8         
  je .L_142ce0         #  20    0x1e  2      OPC=je_label               je .L_142ce0         #  20    0x1e  2      OPC=je_label             
.L_142cc0:             #        0x20  0      OPC=<label>              .L_142cc0:             #        0x20  0      OPC=<label>              
  nop                  #  21    0x20  1      OPC=nop                    nop                  #  21    0x20  1      OPC=nop                  
  nop                  #  22    0x21  1      OPC=nop                    nop                  #  22    0x21  1      OPC=nop                  
  nop                  #  23    0x22  1      OPC=nop                    nop                  #  23    0x22  1      OPC=nop                  
  nop                  #  24    0x23  1      OPC=nop                    nop                  #  24    0x23  1      OPC=nop                  
  nop                  #  25    0x24  1      OPC=nop                    nop                  #  25    0x24  1      OPC=nop                  
  andw %di, %di        #  26    0x25  3      OPC=andw_r16_r16_1         andw %di, %di        #  26    0x25  3      OPC=andw_r16_r16_1       
  salw $0x4, %r14w     #  27    0x28  5      OPC=salw_r16_imm8          salw $0x4, %r14w     #  27    0x28  5      OPC=salw_r16_imm8        
  nopl %eax            #  28    0x2d  3      OPC=nopl_r32               nopl %eax            #  28    0x2d  3      OPC=nopl_r32             
  nop                  #  29    0x30  1      OPC=nop                    nop                  #  29    0x30  1      OPC=nop                  
  nop                  #  30    0x31  1      OPC=nop                    nop                  #  30    0x31  1      OPC=nop                  
  nop                  #  31    0x32  1      OPC=nop                    nop                  #  31    0x32  1      OPC=nop                  
  jne .L_142cc0        #  32    0x33  2      OPC=jne_label              jne .L_142cc0        #  32    0x33  2      OPC=jne_label            
  nop                  #  33    0x35  1      OPC=nop                    nop                  #  33    0x35  1      OPC=nop                  
  nop                  #  34    0x36  1      OPC=nop                    nop                  #  34    0x36  1      OPC=nop                  
  nop                  #  35    0x37  1      OPC=nop                    nop                  #  35    0x37  1      OPC=nop                  
  nop                  #  36    0x38  1      OPC=nop                    nop                  #  36    0x38  1      OPC=nop                  
  nop                  #  37    0x39  1      OPC=nop                    nop                  #  37    0x39  1      OPC=nop                  
  nop                  #  38    0x3a  1      OPC=nop                    nop                  #  38    0x3a  1      OPC=nop                  
  nop                  #  39    0x3b  1      OPC=nop                    nop                  #  39    0x3b  1      OPC=nop                  
  nop                  #  40    0x3c  1      OPC=nop                    nop                  #  40    0x3c  1      OPC=nop                  
  nop                  #  41    0x3d  1      OPC=nop                    nop                  #  41    0x3d  1      OPC=nop                  
  nop                  #  42    0x3e  1      OPC=nop                    nop                  #  42    0x3e  1      OPC=nop                  
  nop                  #  43    0x3f  1      OPC=nop                    nop                  #  43    0x3f  1      OPC=nop                  
.L_142ce0:             #        0x40  0      OPC=<label>              .L_142ce0:             #        0x40  0      OPC=<label>              
  nop                  #  44    0x40  1      OPC=nop                    nop                  #  44    0x40  1      OPC=nop                  
  movl %edi, %eax      #  45    0x41  2      OPC=movl_r32_r32_1         movl %edi, %eax      #  45    0x41  2      OPC=movl_r32_r32_1       
  sarb $0x2, %al       #  46    0x43  3      OPC=sarb_r8_imm8           sarb $0x2, %al       #  46    0x43  3      OPC=sarb_r8_imm8         
  nop                  #  47    0x46  1      OPC=nop                    nop                  #  47    0x46  1      OPC=nop                  
  nop                  #  48    0x47  1      OPC=nop                    nop                  #  48    0x47  1      OPC=nop                  
  nop                  #  49    0x48  1      OPC=nop                    nop                  #  49    0x48  1      OPC=nop                  
  nop                  #  50    0x49  1      OPC=nop                    nop                  #  50    0x49  1      OPC=nop                  
  nop                  #  51    0x4a  1      OPC=nop                    nop                  #  51    0x4a  1      OPC=nop                  
  nop                  #  52    0x4b  1      OPC=nop                    nop                  #  52    0x4b  1      OPC=nop                  
  nop                  #  53    0x4c  1      OPC=nop                    nop                  #  53    0x4c  1      OPC=nop                  
  nop                  #  54    0x4d  1      OPC=nop                    nop                  #  54    0x4d  1      OPC=nop                  
  nop                  #  55    0x4e  1      OPC=nop                    nop                  #  55    0x4e  1      OPC=nop                  
  nop                  #  56    0x4f  1      OPC=nop                    nop                  #  56    0x4f  1      OPC=nop                  
  nop                  #  57    0x50  1      OPC=nop                    nop                  #  57    0x50  1      OPC=nop                  
  nop                  #  58    0x51  1      OPC=nop                    nop                  #  58    0x51  1      OPC=nop                  
  nop                  #  59    0x52  1      OPC=nop                    nop                  #  59    0x52  1      OPC=nop                  
  popq %r11            #  60    0x53  2      OPC=popq_r64_1             popq %r11            #  60    0x53  2      OPC=popq_r64_1           
  andl $0xe0, %r11d    #  61    0x55  4      OPC=andl_r32_imm8          andl $0xe0, %r11d    #  61    0x55  4      OPC=andl_r32_imm8        
  addq %r15, %r11      #  62    0x59  3      OPC=addq_r64_r64           addq %r15, %r11      #  62    0x59  3      OPC=addq_r64_r64         
  jmpq %r11            #  63    0x5c  3      OPC=jmpq_r64               jmpq %r11            #  63    0x5c  3      OPC=jmpq_r64             
                                                                                                                                            
.size wcslen, .-wcslen                                                .size wcslen, .-wcslen                                                
                                                                                                                                            

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  73.1424s
Iterations/s:                  1367.2

Starting cost:                 18
Lowest cost:                   7
Lowest correct cost:           7

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.326%       7.989%        7.851%       
Local Swap      8.305%       4.528%        4.031%       
Global Copy     8.225%       7.81%         7.81%        
Global Swap     8.371%       7.642%        7.169%       
Operand         8.23%        4.094%        2.035%       
Rotate          8.457%       7.88%         6.245%       
ReplaceNop      8.331%       8.016%        7.813%       
Delete          8.311%       7.973%        6.975%       
Instruction     8.353%       4.417%        0.49%        
Add Nops        8.369%       8.369%        7.04%        
OpcodeWidth     8.423%       7.906%        7.801%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.299%       0.475%        0.008%       
                                                        
Total           100%         77.099%       65.268%      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (6)                                          Lowest Known Correct Cost (6)                                       
                                                                                                                                        
  .text                                                               .text                                                             
  .globl wcslen                                                       .globl wcslen                                                     
  .type wcslen, @function                                             .type wcslen, @function                                           
                                                                                                                                        
#! file-offset 0                                                    #! file-offset 0                                                    
#! rip-offset  0                                                    #! rip-offset  0                                                    
#! capacity    0 bytes                                              #! capacity    0 bytes                                              
                                                                                                                                        
# Text                #  Line  RIP   Bytes  Opcode                  # Text                #  Line  RIP   Bytes  Opcode                  
.wcslen:              #        0     0      OPC=<label>             .wcslen:              #        0     0      OPC=<label>             
  nop                 #  1     0     1      OPC=nop                   nop                 #  1     0     1      OPC=nop                 
  nop                 #  2     0x1   1      OPC=nop                   nop                 #  2     0x1   1      OPC=nop                 
  nop                 #  3     0x2   1      OPC=nop                   nop                 #  3     0x2   1      OPC=nop                 
  movzbq %r15b, %rax  #  4     0x3   4      OPC=movzbq_r64_r8         movzbq %r15b, %rax  #  4     0x3   4      OPC=movzbq_r64_r8       
  movsbq %dil, %rdx   #  5     0x7   4      OPC=movsbq_r64_r8         movsbq %dil, %rdx   #  5     0x7   4      OPC=movsbq_r64_r8       
  nop                 #  6     0xb   1      OPC=nop                   nop                 #  6     0xb   1      OPC=nop                 
  nop                 #  7     0xc   1      OPC=nop                   nop                 #  7     0xc   1      OPC=nop                 
  nop                 #  8     0xd   1      OPC=nop                   nop                 #  8     0xd   1      OPC=nop                 
  nop                 #  9     0xe   1      OPC=nop                   nop                 #  9     0xe   1      OPC=nop                 
  nop                 #  10    0xf   1      OPC=nop                   nop                 #  10    0xf   1      OPC=nop                 
  nop                 #  11    0x10  1      OPC=nop                   nop                 #  11    0x10  1      OPC=nop                 
  nop                 #  12    0x11  1      OPC=nop                   nop                 #  12    0x11  1      OPC=nop                 
  xorb %dl, %dl       #  13    0x12  2      OPC=xorb_r8_r8_1          xorb %dl, %dl       #  13    0x12  2      OPC=xorb_r8_r8_1        
  nop                 #  14    0x14  1      OPC=nop                   nop                 #  14    0x14  1      OPC=nop                 
  nop                 #  15    0x15  1      OPC=nop                   nop                 #  15    0x15  1      OPC=nop                 
  nop                 #  16    0x16  1      OPC=nop                   nop                 #  16    0x16  1      OPC=nop                 
  nop                 #  17    0x17  1      OPC=nop                   nop                 #  17    0x17  1      OPC=nop                 
  nopl %eax           #  18    0x18  3      OPC=nopl_r32              nopl %eax           #  18    0x18  3      OPC=nopl_r32            
  je .L_142ce0        #  19    0x1b  2      OPC=je_label              je .L_142ce0        #  19    0x1b  2      OPC=je_label            
  xorb $0x40, %dh     #  20    0x1d  3      OPC=xorb_rh_imm8          xorb $0x40, %dh     #  20    0x1d  3      OPC=xorb_rh_imm8        
.L_142cc0:            #        0x20  0      OPC=<label>             .L_142cc0:            #        0x20  0      OPC=<label>             
  nop                 #  21    0x20  1      OPC=nop                   nop                 #  21    0x20  1      OPC=nop                 
  nop                 #  22    0x21  1      OPC=nop                   nop                 #  22    0x21  1      OPC=nop                 
  nop                 #  23    0x22  1      OPC=nop                   nop                 #  23    0x22  1      OPC=nop                 
  nop                 #  24    0x23  1      OPC=nop                   nop                 #  24    0x23  1      OPC=nop                 
  nop                 #  25    0x24  1      OPC=nop                   nop                 #  25    0x24  1      OPC=nop                 
  nop                 #  26    0x25  1      OPC=nop                   nop                 #  26    0x25  1      OPC=nop                 
  nop                 #  27    0x26  1      OPC=nop                   nop                 #  27    0x26  1      OPC=nop                 
  jne .L_142cc0       #  28    0x27  2      OPC=jne_label             jne .L_142cc0       #  28    0x27  2      OPC=jne_label           
  nop                 #  29    0x29  1      OPC=nop                   nop                 #  29    0x29  1      OPC=nop                 
  incl %edi           #  30    0x2a  2      OPC=incl_r32              incl %edi           #  30    0x2a  2      OPC=incl_r32            
  nop                 #  31    0x2c  1      OPC=nop                   nop                 #  31    0x2c  1      OPC=nop                 
  nop                 #  32    0x2d  1      OPC=nop                   nop                 #  32    0x2d  1      OPC=nop                 
  andb %dil, %al      #  33    0x2e  3      OPC=andb_r8_r8_1          andb %dil, %al      #  33    0x2e  3      OPC=andb_r8_r8_1        
  nop                 #  34    0x31  1      OPC=nop                   nop                 #  34    0x31  1      OPC=nop                 
  nop                 #  35    0x32  1      OPC=nop                   nop                 #  35    0x32  1      OPC=nop                 
  addw $0x80, %ax     #  36    0x33  4      OPC=addw_ax_imm16         addw $0x80, %ax     #  36    0x33  4      OPC=addw_ax_imm16       
  nop                 #  37    0x37  1      OPC=nop                   nop                 #  37    0x37  1      OPC=nop                 
  nop                 #  38    0x38  1      OPC=nop                   nop                 #  38    0x38  1      OPC=nop                 
  nop                 #  39    0x39  1      OPC=nop                   nop                 #  39    0x39  1      OPC=nop                 
  nop                 #  40    0x3a  1      OPC=nop                   nop                 #  40    0x3a  1      OPC=nop                 
  nop                 #  41    0x3b  1      OPC=nop                   nop                 #  41    0x3b  1      OPC=nop                 
  nop                 #  42    0x3c  1      OPC=nop                   nop                 #  42    0x3c  1      OPC=nop                 
  nop                 #  43    0x3d  1      OPC=nop                   nop                 #  43    0x3d  1      OPC=nop                 
  nop                 #  44    0x3e  1      OPC=nop                   nop                 #  44    0x3e  1      OPC=nop                 
  nop                 #  45    0x3f  1      OPC=nop                   nop                 #  45    0x3f  1      OPC=nop                 
.L_142ce0:            #        0x40  0      OPC=<label>             .L_142ce0:            #        0x40  0      OPC=<label>             
  sarl $0x2, %eax     #  46    0x40  3      OPC=sarl_r32_imm8         sarl $0x2, %eax     #  46    0x40  3      OPC=sarl_r32_imm8       
  nop                 #  47    0x43  1      OPC=nop                   nop                 #  47    0x43  1      OPC=nop                 
  nop                 #  48    0x44  1      OPC=nop                   nop                 #  48    0x44  1      OPC=nop                 
  nop                 #  49    0x45  1      OPC=nop                   nop                 #  49    0x45  1      OPC=nop                 
  nop                 #  50    0x46  1      OPC=nop                   nop                 #  50    0x46  1      OPC=nop                 
  nop                 #  51    0x47  1      OPC=nop                   nop                 #  51    0x47  1      OPC=nop                 
  nop                 #  52    0x48  1      OPC=nop                   nop                 #  52    0x48  1      OPC=nop                 
  nop                 #  53    0x49  1      OPC=nop                   nop                 #  53    0x49  1      OPC=nop                 
  nop                 #  54    0x4a  1      OPC=nop                   nop                 #  54    0x4a  1      OPC=nop                 
  nop                 #  55    0x4b  1      OPC=nop                   nop                 #  55    0x4b  1      OPC=nop                 
  nop                 #  56    0x4c  1      OPC=nop                   nop                 #  56    0x4c  1      OPC=nop                 
  nop                 #  57    0x4d  1      OPC=nop                   nop                 #  57    0x4d  1      OPC=nop                 
  nop                 #  58    0x4e  1      OPC=nop                   nop                 #  58    0x4e  1      OPC=nop                 
  nop                 #  59    0x4f  1      OPC=nop                   nop                 #  59    0x4f  1      OPC=nop                 
  nop                 #  60    0x50  1      OPC=nop                   nop                 #  60    0x50  1      OPC=nop                 
  andb $0x4, %al      #  61    0x51  2      OPC=andb_al_imm8          andb $0x4, %al      #  61    0x51  2      OPC=andb_al_imm8        
  popq %r11           #  62    0x53  2      OPC=popq_r64_1            popq %r11           #  62    0x53  2      OPC=popq_r64_1          
  andl $0xe0, %r11d   #  63    0x55  4      OPC=andl_r32_imm8         andl $0xe0, %r11d   #  63    0x55  4      OPC=andl_r32_imm8       
  addq %r15, %r11     #  64    0x59  3      OPC=addq_r64_r64          addq %r15, %r11     #  64    0x59  3      OPC=addq_r64_r64        
  jmpq %r11           #  65    0x5c  3      OPC=jmpq_r64              jmpq %r11           #  65    0x5c  3      OPC=jmpq_r64            
                                                                                                                                        
.size wcslen, .-wcslen                                              .size wcslen, .-wcslen                                              
                                                                                                                                        

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  217.549s
Iterations/s:                  919.333

Starting cost:                 18
Lowest cost:                   6
Lowest correct cost:           6

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3705%      8.147%        8.062%       
Local Swap      8.314%       4.3235%       3.9535%      
Global Copy     8.272%       7.984%        7.984%       
Global Swap     8.404%       7.9075%       7.5685%      
Operand         8.309%       4.8085%       3.115%       
Rotate          8.386%       8.0015%       6.679%       
ReplaceNop      8.3275%      8.098%        7.9645%      
Delete          8.3155%      8.088%        7.1515%      
Instruction     8.2065%      4.3435%       0.748%       
Add Nops        8.3945%      8.3945%       7.206%       
OpcodeWidth     8.3905%      8.0085%       7.9145%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.31%        0.2375%       0.004%       
                                                        
Total           100%         78.342%       68.3505%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  451.073s
Iterations/s:                  665.081

Starting cost:                 18
Lowest cost:                   6
Lowest correct cost:           6

Move Type       Proposed     Succeeded     Accepted        
                                                           
Opcode          8.36233%     8.194%        8.129%          
Local Swap      8.34967%     4.38367%      4.05267%        
Global Copy     8.325%       8.10133%      8.10133%        
Global Swap     8.324%       7.94467%      7.67733%        
Operand         8.27533%     5.03567%      3.57533%        
Rotate          8.34967%     8.05767%      6.89533%        
ReplaceNop      8.27433%     8.099%        8.00233%        
Delete          8.328%       8.151%        7.23233%        
Instruction     8.265%       4.47833%      0.900667%       
Add Nops        8.42633%     8.42633%      7.26433%        
OpcodeWidth     8.422%       8.118%        8.029%          
2xWeighted      0%           0%            0%              
Memory+Swap     8.29833%     0.158333%     0.00266667%     
                                                           
Total           100%         79.148%       69.8623%        

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  754.974s
Iterations/s:                  529.82

Starting cost:                 18
Lowest cost:                   6
Lowest correct cost:           6

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.2815%      8.1435%       8.093%       
Local Swap      8.37325%     4.465%        4.15%        
Global Copy     8.31275%     8.128%        8.128%       
Global Swap     8.31625%     8.0005%       7.77325%     
Operand         8.3035%      5.22275%      3.8805%      
Rotate          8.34775%     8.10625%      6.98575%     
ReplaceNop      8.32375%     8.1795%       8.10175%     
Delete          8.329%       8.18325%      7.20825%     
Instruction     8.28025%     4.62325%      0.9785%      
Add Nops        8.41%        8.41%         7.2215%      
OpcodeWidth     8.432%       8.17375%      8.089%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.29%        0.11875%      0.002%       
                                                        
Total           100%         79.7545%      70.6115%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  1096.1s
Iterations/s:                  456.161

Starting cost:                 18
Lowest cost:                   6
Lowest correct cost:           6

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.2874%      8.1694%       8.126%       
Local Swap      8.3646%      4.3902%       4.0866%      
Global Copy     8.3302%      8.1688%       8.1688%      
Global Swap     8.3032%      8.0264%       7.825%       
Operand         8.3286%      5.3758%       4.0866%      
Rotate          8.3366%      8.1272%       7.0396%      
ReplaceNop      8.3332%      8.2062%       8.1412%      
Delete          8.3602%      8.2322%       7.2256%      
Instruction     8.2928%      4.6584%       1.0204%      
Add Nops        8.3854%      8.3854%       7.1974%      
OpcodeWidth     8.38%        8.1474%       8.0678%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.2978%      0.095%        0.0016%      
                                                        
Total           100%         79.9824%      70.9866%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     e6 00 48 a4 3e 0d 77 e8
%rcx     c0 d2 80 52 aa 2f 67 31
%rdx     aa c6 dc 79 e6 cf d9 db
%rbx     78 0c 57 90 85 38 57 85
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 04 e0 0a c0
%rdi     00 00 00 00 02 e5 0d c0
%r8      7d 01 36 5e 6e dd a7 0c
%r9      37 ab 1f 4e c7 ee 3e be
%r10     ec 5e a7 05 fc 9a 75 20
%r11     44 f2 54 37 88 64 44 ec
%r12     c5 d7 b3 06 59 b2 d0 fb
%r13     05 77 37 e5 40 8c c5 f1
%r14     a4 9d 5f b8 b1 01 11 ac
%r15     00 00 00 00 0c 2d e0 b0

%ymm0    d6 1f 30 e7 cf 11 c8 79 35 9c 78 91 f7 da 32 3f 29 30 2d 7d 2b b6 46 46 76 ba 81 84 f5 aa d1 ef
%ymm1    29 39 2e 27 62 0f f7 7b 40 e6 b2 c6 b0 16 4e 1f 1f 74 ed e0 4a bc b2 cd 91 fc 86 4a 86 cc c9 02
%ymm2    a1 7a 3d a9 51 04 7b 29 a2 6c 32 27 2c 4c 74 65 9c 5e 17 7d 3f a3 90 5f 58 d3 ac 8b 42 b0 05 f8
%ymm3    95 a4 d4 52 02 5a 15 59 09 10 de df 6e 72 ad 47 46 60 d3 e0 c4 75 c9 47 36 26 b7 d7 ce e4 2a 42
%ymm4    6f 17 c9 70 82 25 9b 2f 22 41 1a c9 38 0a eb 59 9b 79 ac 54 33 4b 81 53 87 0c 89 3f d6 63 88 ff
%ymm5    1a 5c ae c9 ed 97 00 7d 15 db e2 e6 b8 a0 cb ef 68 c1 03 0f 26 8a 63 d2 56 17 51 03 90 45 7a 51
%ymm6    e1 75 e6 b9 5b 89 0a 92 9c 73 92 1e 5d b7 3c 77 ff 9c ac 10 34 ea 0c 25 c4 82 c2 f2 2c aa a1 28
%ymm7    c5 c2 59 3d e0 e3 57 27 88 ce 1d f5 32 aa 63 13 4c ab d7 d5 ac 3b 29 9c 07 3e 90 e2 7a 0d 20 87
%ymm8    ea e1 59 71 1c 97 18 df b6 34 87 8f ac b9 72 b7 87 c8 54 74 7b a8 9d a6 fc 62 7d 5f 5b 3f cf 79
%ymm9    58 8b 5d 2f a1 7c d6 30 5f 3f 18 80 89 e4 f9 fa 37 3f 88 80 b8 c0 2c 44 44 84 a7 9e 88 45 20 28
%ymm10   e3 c9 a2 65 71 17 08 41 75 8c 6b 45 2c 2b 2c ac a2 48 b3 a8 11 73 20 90 bb 60 64 77 1c e0 d0 7e
%ymm11   0a 82 dd 97 9e 14 f5 39 a3 de 31 62 68 a5 f7 23 78 cb f7 cc 29 ae 19 80 9d a6 60 0d ea ff a9 73
%ymm12   cb d7 29 45 cd a7 67 35 08 53 40 cf af 62 9e 4d fa f9 56 d6 81 8b df b4 62 31 9b e1 93 f5 81 86
%ymm13   87 97 bd dd cc e5 b4 87 18 0d 1f e3 04 cc a2 35 1d 40 96 cf 46 9d 79 6f 1c ee 90 67 8c 5f cc aa
%ymm14   46 9f 3d bc 18 a6 ff 3b da 1a 87 53 01 7a 33 1e 75 67 7c 40 4a 3c aa 7a f6 0d 01 86 f1 13 f6 89
%ymm15   58 a4 97 24 5e f8 e6 a2 e0 40 a2 a5 66 88 1e 13 87 a4 e0 68 2e 79 ec ee 2f b0 44 b4 ba 37 b3 34

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   8a 79 6a 5c b6 4a 5d a4 
00000006 fffffff0   v v v v v v v v   6f 12 4c ca 7b 28 6c 83 
00000006 ffffffe8   v v v v v v v v   41 ca a3 01 27 fe 9a 9f 
00000006 ffffffe0   v v v v v v v v   e0 87 18 3c a7 af 0d 2e 

[ 00000000 0f12ee88 - 00000000 0f12ee60 ]
[ 1 valid rows shown ]

00000000 0f12ee70   . . . . v v v v   00 00 00 00 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (12)                                               Lowest Known Correct Cost (12)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32          movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xf   2      OPC=je_label              je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x11  1      OPC=nop                   nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x12  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x13  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32          movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32        
  testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32         testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label             jne .L_142cc0             #  26    0x29  2      OPC=jne_label           
  nop                       #  27    0x2b  1      OPC=nop                   nop                       #  27    0x2b  1      OPC=nop                 
  movl %edx, %eax           #  28    0x2c  2      OPC=movl_r32_r32          movl %edx, %eax           #  28    0x2c  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  29    0x2e  2      OPC=subl_r32_r32          subl %edi, %eax           #  29    0x2e  2      OPC=subl_r32_r32        
  sarl $0x2, %eax           #  30    0x30  3      OPC=sarl_r32_imm8         sarl $0x2, %eax           #  30    0x30  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x33  1      OPC=nop                   nop                       #  31    0x33  1      OPC=nop                 
  nop                       #  32    0x34  1      OPC=nop                   nop                       #  32    0x34  1      OPC=nop                 
  nop                       #  33    0x35  1      OPC=nop                   nop                       #  33    0x35  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                   nop                       #  34    0x36  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                   nop                       #  35    0x37  1      OPC=nop                 
  nop                       #  36    0x38  1      OPC=nop                   nop                       #  36    0x38  1      OPC=nop                 
  nop                       #  37    0x39  1      OPC=nop                   nop                       #  37    0x39  1      OPC=nop                 
  nop                       #  38    0x3a  1      OPC=nop                   nop                       #  38    0x3a  1      OPC=nop                 
  nop                       #  39    0x3b  1      OPC=nop                   nop                       #  39    0x3b  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                   nop                       #  40    0x3c  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                   nop                       #  41    0x3d  1      OPC=nop                 
  nop                       #  42    0x3e  1      OPC=nop                   nop                       #  42    0x3e  1      OPC=nop                 
  nop                       #  43    0x3f  1      OPC=nop                   nop                       #  43    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>             .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  44    0x40  2      OPC=popq_r64_1            popq %r11                 #  44    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64          addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64              jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (11)                                               Lowest Known Correct Cost (12)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  movq %rdi, %rdx           #  1     0     3      OPC=movq_r64_r64          movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %ecx  #  2     0x3   4      OPC=movl_r32_m32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x7   1      OPC=nop                   movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x8   1      OPC=nop                   movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0x9   1      OPC=nop                   movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0xa   1      OPC=nop                   testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xb   1      OPC=nop                   je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xc   1      OPC=nop                   nop                       #  8     0x11  1      OPC=nop                 
  xorl %eax, %eax           #  9     0xd   2      OPC=xorl_r32_r32          nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0xf   1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x10  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x11  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x12  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  shrb $0x2, %cl            #  14    0x13  3      OPC=shrb_r8_imm8          nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x16  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  je .L_142ce0              #  16    0x17  2      OPC=je_label              nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                 .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x20  0      OPC=<label>               addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  nop                       #  24    0x20  1      OPC=nop                   movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32        
  nop                       #  25    0x21  1      OPC=nop                   testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32       
  nop                       #  26    0x22  1      OPC=nop                   jne .L_142cc0             #  26    0x29  2      OPC=jne_label           
  addl $0x10, %edx          #  27    0x23  3      OPC=addl_r32_imm8         nop                       #  27    0x2b  1      OPC=nop                 
  movl (%r15,%rdx,1), %eax  #  28    0x26  4      OPC=movl_r32_m32          movl %edx, %eax           #  28    0x2c  2      OPC=movl_r32_r32        
  testl %eax, %ecx          #  29    0x2a  2      OPC=testl_r32_r32         subl %edi, %eax           #  29    0x2e  2      OPC=subl_r32_r32        
  jne .L_142cc0             #  30    0x2c  2      OPC=jne_label             sarl $0x2, %eax           #  30    0x30  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x2e  1      OPC=nop                   nop                       #  31    0x33  1      OPC=nop                 
  sarb $0x40, %dh           #  32    0x2f  3      OPC=sarb_rh_imm8          nop                       #  32    0x34  1      OPC=nop                 
  movl %edx, %eax           #  33    0x32  2      OPC=movl_r32_r32          nop                       #  33    0x35  1      OPC=nop                 
  subl %edi, %eax           #  34    0x34  2      OPC=subl_r32_r32          nop                       #  34    0x36  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                   nop                       #  35    0x37  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                   nop                       #  36    0x38  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                   nop                       #  37    0x39  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                   nop                       #  38    0x3a  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                   nop                       #  39    0x3b  1      OPC=nop                 
  sarl $0x2, %eax           #  40    0x3b  3      OPC=sarl_r32_imm8         nop                       #  40    0x3c  1      OPC=nop                 
  nop                       #  41    0x3e  1      OPC=nop                   nop                       #  41    0x3d  1      OPC=nop                 
  nop                       #  42    0x3f  1      OPC=nop                   nop                       #  42    0x3e  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>               nop                       #  43    0x3f  1      OPC=nop                 
  nop                       #  43    0x40  1      OPC=nop                 .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  44    0x41  1      OPC=nop                   popq %r11                 #  44    0x40  2      OPC=popq_r64_1          
  nop                       #  45    0x42  1      OPC=nop                   andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8       
  nop                       #  46    0x43  1      OPC=nop                   addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64        
  nop                       #  47    0x44  1      OPC=nop                   jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64            
  nop                       #  48    0x45  1      OPC=nop                                                                                           
  nop                       #  49    0x46  1      OPC=nop                 .size wcslen, .-wcslen                                                    
  nop                       #  50    0x47  1      OPC=nop                                                                                           
  nop                       #  51    0x48  1      OPC=nop                                                                                           
  nop                       #  52    0x49  1      OPC=nop                                                                                           
  popq %r11                 #  53    0x4a  2      OPC=popq_r64_1                                                                                    
  andl $0xe0, %r11d         #  54    0x4c  4      OPC=andl_r32_imm8                                                                                 
  addq %r15, %r11           #  55    0x50  3      OPC=addq_r64_r64                                                                                  
  jmpq %r11                 #  56    0x53  3      OPC=jmpq_r64                                                                                      
                                                                                                                                                    
.size wcslen, .-wcslen                                                                                                                              
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (10)                                               Lowest Known Correct Cost (12)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  movq %rdi, %rdx           #  1     0     3      OPC=movq_r64_r64          movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %ecx  #  2     0x3   4      OPC=movl_r32_m32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x7   1      OPC=nop                   movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x8   1      OPC=nop                   movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0x9   1      OPC=nop                   movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0xa   1      OPC=nop                   testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xb   1      OPC=nop                   je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xc   1      OPC=nop                   nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0xd   1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0xe   1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  xorl %eax, %eax           #  11    0xf   2      OPC=xorl_r32_r32          nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x11  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x12  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x13  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x14  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x15  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  shrb $0x2, %cl            #  17    0x16  3      OPC=shrb_r8_imm8          nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x19  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  je .L_142ce0              #  19    0x1a  2      OPC=je_label              nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                 .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x20  0      OPC=<label>               addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  nop                       #  24    0x20  1      OPC=nop                   movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32        
  nop                       #  25    0x21  1      OPC=nop                   testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32       
  nop                       #  26    0x22  1      OPC=nop                   jne .L_142cc0             #  26    0x29  2      OPC=jne_label           
  nop                       #  27    0x23  1      OPC=nop                   nop                       #  27    0x2b  1      OPC=nop                 
  nop                       #  28    0x24  1      OPC=nop                   movl %edx, %eax           #  28    0x2c  2      OPC=movl_r32_r32        
  addl $0x10, %edx          #  29    0x25  3      OPC=addl_r32_imm8         subl %edi, %eax           #  29    0x2e  2      OPC=subl_r32_r32        
  nop                       #  30    0x28  1      OPC=nop                   sarl $0x2, %eax           #  30    0x30  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x29  1      OPC=nop                   nop                       #  31    0x33  1      OPC=nop                 
  nop                       #  32    0x2a  1      OPC=nop                   nop                       #  32    0x34  1      OPC=nop                 
  nop                       #  33    0x2b  1      OPC=nop                   nop                       #  33    0x35  1      OPC=nop                 
  nop                       #  34    0x2c  1      OPC=nop                   nop                       #  34    0x36  1      OPC=nop                 
  testl %eax, %ecx          #  35    0x2d  2      OPC=testl_r32_r32         nop                       #  35    0x37  1      OPC=nop                 
  jne .L_142cc0             #  36    0x2f  2      OPC=jne_label             nop                       #  36    0x38  1      OPC=nop                 
  nopl %eax                 #  37    0x31  3      OPC=nopl_r32              nop                       #  37    0x39  1      OPC=nop                 
  movl %edx, %eax           #  38    0x34  2      OPC=movl_r32_r32          nop                       #  38    0x3a  1      OPC=nop                 
  nop                       #  39    0x36  1      OPC=nop                   nop                       #  39    0x3b  1      OPC=nop                 
  nop                       #  40    0x37  1      OPC=nop                   nop                       #  40    0x3c  1      OPC=nop                 
  nop                       #  41    0x38  1      OPC=nop                   nop                       #  41    0x3d  1      OPC=nop                 
  nop                       #  42    0x39  1      OPC=nop                   nop                       #  42    0x3e  1      OPC=nop                 
  subl %edi, %eax           #  43    0x3a  2      OPC=subl_r32_r32          nop                       #  43    0x3f  1      OPC=nop                 
  shrl $0x2, %eax           #  44    0x3c  3      OPC=shrl_r32_imm8       .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  45    0x3f  1      OPC=nop                   popq %r11                 #  44    0x40  2      OPC=popq_r64_1          
.L_142ce0:                  #        0x40  0      OPC=<label>               andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8       
  nop                       #  46    0x40  1      OPC=nop                   addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64        
  nop                       #  47    0x41  1      OPC=nop                   jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64            
  nop                       #  48    0x42  1      OPC=nop                                                                                           
  nop                       #  49    0x43  1      OPC=nop                 .size wcslen, .-wcslen                                                    
  nop                       #  50    0x44  1      OPC=nop                                                                                           
  nop                       #  51    0x45  1      OPC=nop                                                                                           
  nop                       #  52    0x46  1      OPC=nop                                                                                           
  nop                       #  53    0x47  1      OPC=nop                                                                                           
  nop                       #  54    0x48  1      OPC=nop                                                                                           
  nop                       #  55    0x49  1      OPC=nop                                                                                           
  nop                       #  56    0x4a  1      OPC=nop                                                                                           
  nop                       #  57    0x4b  1      OPC=nop                                                                                           
  popq %r11                 #  58    0x4c  2      OPC=popq_r64_1                                                                                    
  andl $0xe0, %r11d         #  59    0x4e  4      OPC=andl_r32_imm8                                                                                 
  addq %r15, %r11           #  60    0x52  3      OPC=addq_r64_r64                                                                                  
  jmpq %r11                 #  61    0x55  3      OPC=jmpq_r64                                                                                      
                                                                                                                                                    
.size wcslen, .-wcslen                                                                                                                              
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (10)                                               Lowest Known Correct Cost (11)                                             
                                                                                                                                                     
  .text                                                                     .text                                                                    
  .globl wcslen                                                             .globl wcslen                                                            
  .type wcslen, @function                                                   .type wcslen, @function                                                  
                                                                                                                                                     
#! file-offset 0                                                          #! file-offset 0                                                           
#! rip-offset  0                                                          #! rip-offset  0                                                           
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                     
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>              
  movq %rdi, %rdx           #  1     0     3      OPC=movq_r64_r64          nop                       #  1     0     1      OPC=nop                  
  movl (%r15,%rdx,1), %ecx  #  2     0x3   4      OPC=movl_r32_m32          nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x7   1      OPC=nop                   movl %edi, %edx           #  3     0x2   2      OPC=movl_r32_r32_1       
  nop                       #  4     0x8   1      OPC=nop                   movl (%r15,%rdx,1), %ecx  #  4     0x4   4      OPC=movl_r32_m32         
  nop                       #  5     0x9   1      OPC=nop                   nop                       #  5     0x8   1      OPC=nop                  
  nop                       #  6     0xa   1      OPC=nop                   xorl %eax, %eax           #  6     0x9   2      OPC=xorl_r32_r32         
  nop                       #  7     0xb   1      OPC=nop                   nop                       #  7     0xb   1      OPC=nop                  
  nop                       #  8     0xc   1      OPC=nop                   nop                       #  8     0xc   1      OPC=nop                  
  nop                       #  9     0xd   1      OPC=nop                   nop                       #  9     0xd   1      OPC=nop                  
  nop                       #  10    0xe   1      OPC=nop                   andl $0xfffffff9, %ecx    #  10    0xe   6      OPC=andl_r32_imm32       
  xorl %eax, %eax           #  11    0xf   2      OPC=xorl_r32_r32          nop                       #  11    0x14  1      OPC=nop                  
  nop                       #  12    0x11  1      OPC=nop                   je .L_142ce0              #  12    0x15  2      OPC=je_label             
  nop                       #  13    0x12  1      OPC=nop                   nop                       #  13    0x17  1      OPC=nop                  
  nop                       #  14    0x13  1      OPC=nop                   nop                       #  14    0x18  1      OPC=nop                  
  nop                       #  15    0x14  1      OPC=nop                   nop                       #  15    0x19  1      OPC=nop                  
  nop                       #  16    0x15  1      OPC=nop                   nop                       #  16    0x1a  1      OPC=nop                  
  shrb $0x2, %cl            #  17    0x16  3      OPC=shrb_r8_imm8          addl %edi, %eax           #  17    0x1b  2      OPC=addl_r32_r32         
  nop                       #  18    0x19  1      OPC=nop                   nop                       #  18    0x1d  1      OPC=nop                  
  je .L_142ce0              #  19    0x1a  2      OPC=je_label              nop                       #  19    0x1e  1      OPC=nop                  
  nop                       #  20    0x1c  1      OPC=nop                   nop                       #  20    0x1f  1      OPC=nop                  
  nop                       #  21    0x1d  1      OPC=nop                 .L_142cc0:                  #        0x20  0      OPC=<label>              
  nop                       #  22    0x1e  1      OPC=nop                   nop                       #  21    0x20  1      OPC=nop                  
  nop                       #  23    0x1f  1      OPC=nop                   nop                       #  22    0x21  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>               nop                       #  23    0x22  1      OPC=nop                  
  nop                       #  24    0x20  1      OPC=nop                   addb $0x10, %al           #  24    0x23  3      OPC=addb_r8_imm8         
  nop                       #  25    0x21  1      OPC=nop                   nop                       #  25    0x26  1      OPC=nop                  
  nop                       #  26    0x22  1      OPC=nop                   nop                       #  26    0x27  1      OPC=nop                  
  nop                       #  27    0x23  1      OPC=nop                   nop                       #  27    0x28  1      OPC=nop                  
  nop                       #  28    0x24  1      OPC=nop                   nop                       #  28    0x29  1      OPC=nop                  
  addl $0x10, %edx          #  29    0x25  3      OPC=addl_r32_imm8         nop                       #  29    0x2a  1      OPC=nop                  
  nop                       #  30    0x28  1      OPC=nop                   nop                       #  30    0x2b  1      OPC=nop                  
  nop                       #  31    0x29  1      OPC=nop                   nop                       #  31    0x2c  1      OPC=nop                  
  nop                       #  32    0x2a  1      OPC=nop                   nop                       #  32    0x2d  1      OPC=nop                  
  nop                       #  33    0x2b  1      OPC=nop                   nop                       #  33    0x2e  1      OPC=nop                  
  nop                       #  34    0x2c  1      OPC=nop                   nop                       #  34    0x2f  1      OPC=nop                  
  testl %eax, %ecx          #  35    0x2d  2      OPC=testl_r32_r32         nop                       #  35    0x30  1      OPC=nop                  
  jne .L_142cc0             #  36    0x2f  2      OPC=jne_label             nop                       #  36    0x31  1      OPC=nop                  
  nopl %eax                 #  37    0x31  3      OPC=nopl_r32              nop                       #  37    0x32  1      OPC=nop                  
  movl %edx, %eax           #  38    0x34  2      OPC=movl_r32_r32          nop                       #  38    0x33  1      OPC=nop                  
  nop                       #  39    0x36  1      OPC=nop                   subl %edx, %eax           #  39    0x34  2      OPC=subl_r32_r32         
  nop                       #  40    0x37  1      OPC=nop                   nop                       #  40    0x36  1      OPC=nop                  
  nop                       #  41    0x38  1      OPC=nop                   nop                       #  41    0x37  1      OPC=nop                  
  nop                       #  42    0x39  1      OPC=nop                   nop                       #  42    0x38  1      OPC=nop                  
  subl %edi, %eax           #  43    0x3a  2      OPC=subl_r32_r32          shlb %cl, %ah             #  43    0x39  2      OPC=shlb_rh_cl           
  shrl $0x2, %eax           #  44    0x3c  3      OPC=shrl_r32_imm8         jne .L_142cc0             #  44    0x3b  2      OPC=jne_label            
  nop                       #  45    0x3f  1      OPC=nop                   nop                       #  45    0x3d  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>               nop                       #  46    0x3e  1      OPC=nop                  
  nop                       #  46    0x40  1      OPC=nop                   nop                       #  47    0x3f  1      OPC=nop                  
  nop                       #  47    0x41  1      OPC=nop                 .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  48    0x42  1      OPC=nop                   shrl $0x2, %eax           #  48    0x40  3      OPC=shrl_r32_imm8        
  nop                       #  49    0x43  1      OPC=nop                   nop                       #  49    0x43  1      OPC=nop                  
  nop                       #  50    0x44  1      OPC=nop                   nop                       #  50    0x44  1      OPC=nop                  
  nop                       #  51    0x45  1      OPC=nop                   nop                       #  51    0x45  1      OPC=nop                  
  nop                       #  52    0x46  1      OPC=nop                   nop                       #  52    0x46  1      OPC=nop                  
  nop                       #  53    0x47  1      OPC=nop                   nop                       #  53    0x47  1      OPC=nop                  
  nop                       #  54    0x48  1      OPC=nop                   nop                       #  54    0x48  1      OPC=nop                  
  nop                       #  55    0x49  1      OPC=nop                   nop                       #  55    0x49  1      OPC=nop                  
  nop                       #  56    0x4a  1      OPC=nop                   nop                       #  56    0x4a  1      OPC=nop                  
  nop                       #  57    0x4b  1      OPC=nop                   nop                       #  57    0x4b  1      OPC=nop                  
  popq %r11                 #  58    0x4c  2      OPC=popq_r64_1            nop                       #  58    0x4c  1      OPC=nop                  
  andl $0xe0, %r11d         #  59    0x4e  4      OPC=andl_r32_imm8         nop                       #  59    0x4d  1      OPC=nop                  
  addq %r15, %r11           #  60    0x52  3      OPC=addq_r64_r64          nop                       #  60    0x4e  1      OPC=nop                  
  jmpq %r11                 #  61    0x55  3      OPC=jmpq_r64              nop                       #  61    0x4f  1      OPC=nop                  
                                                                            nop                       #  62    0x50  1      OPC=nop                  
.size wcslen, .-wcslen                                                      nop                       #  63    0x51  1      OPC=nop                  
                                                                            popq %r11                 #  64    0x52  2      OPC=popq_r64_1           
                                                                            andl $0xe0, %r11d         #  65    0x54  4      OPC=andl_r32_imm8        
                                                                            addq %r15, %r11           #  66    0x58  3      OPC=addq_r64_r64         
                                                                            jmpq %r11                 #  67    0x5b  3      OPC=jmpq_r64             
                                                                                                                                                     
                                                                          .size wcslen, .-wcslen                                                     
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (10)                                               Lowest Known Correct Cost (10)                                             
                                                                                                                                                     
  .text                                                                     .text                                                                    
  .globl wcslen                                                             .globl wcslen                                                            
  .type wcslen, @function                                                   .type wcslen, @function                                                  
                                                                                                                                                     
#! file-offset 0                                                          #! file-offset 0                                                           
#! rip-offset  0                                                          #! rip-offset  0                                                           
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                     
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>              
  movq %rdi, %rdx           #  1     0     3      OPC=movq_r64_r64          xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  movl (%r15,%rdx,1), %ecx  #  2     0x3   4      OPC=movl_r32_m32          nop                       #  2     0x2   1      OPC=nop                  
  nop                       #  3     0x7   1      OPC=nop                   nop                       #  3     0x3   1      OPC=nop                  
  nop                       #  4     0x8   1      OPC=nop                   nop                       #  4     0x4   1      OPC=nop                  
  nop                       #  5     0x9   1      OPC=nop                   movl %edi, %edx           #  5     0x5   2      OPC=movl_r32_r32         
  nop                       #  6     0xa   1      OPC=nop                   movl (%r15,%rdx,1), %ecx  #  6     0x7   4      OPC=movl_r32_m32         
  nop                       #  7     0xb   1      OPC=nop                   nop                       #  7     0xb   1      OPC=nop                  
  nop                       #  8     0xc   1      OPC=nop                   nop                       #  8     0xc   1      OPC=nop                  
  nop                       #  9     0xd   1      OPC=nop                   nop                       #  9     0xd   1      OPC=nop                  
  nop                       #  10    0xe   1      OPC=nop                   andl $0xfffffff8, %ecx    #  10    0xe   6      OPC=andl_r32_imm32       
  xorl %eax, %eax           #  11    0xf   2      OPC=xorl_r32_r32          nop                       #  11    0x14  1      OPC=nop                  
  nop                       #  12    0x11  1      OPC=nop                   je .L_142ce0              #  12    0x15  2      OPC=je_label             
  nop                       #  13    0x12  1      OPC=nop                   nop                       #  13    0x17  1      OPC=nop                  
  nop                       #  14    0x13  1      OPC=nop                   nop                       #  14    0x18  1      OPC=nop                  
  nop                       #  15    0x14  1      OPC=nop                   nop                       #  15    0x19  1      OPC=nop                  
  nop                       #  16    0x15  1      OPC=nop                   nop                       #  16    0x1a  1      OPC=nop                  
  shrb $0x2, %cl            #  17    0x16  3      OPC=shrb_r8_imm8          nop                       #  17    0x1b  1      OPC=nop                  
  nop                       #  18    0x19  1      OPC=nop                   nop                       #  18    0x1c  1      OPC=nop                  
  je .L_142ce0              #  19    0x1a  2      OPC=je_label              nop                       #  19    0x1d  1      OPC=nop                  
  nop                       #  20    0x1c  1      OPC=nop                   nop                       #  20    0x1e  1      OPC=nop                  
  nop                       #  21    0x1d  1      OPC=nop                   nop                       #  21    0x1f  1      OPC=nop                  
  nop                       #  22    0x1e  1      OPC=nop                 .L_142cc0:                  #        0x20  0      OPC=<label>              
  nop                       #  23    0x1f  1      OPC=nop                   nop                       #  22    0x20  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>               nop                       #  23    0x21  1      OPC=nop                  
  nop                       #  24    0x20  1      OPC=nop                   nop                       #  24    0x22  1      OPC=nop                  
  nop                       #  25    0x21  1      OPC=nop                   nop                       #  25    0x23  1      OPC=nop                  
  nop                       #  26    0x22  1      OPC=nop                   nop                       #  26    0x24  1      OPC=nop                  
  nop                       #  27    0x23  1      OPC=nop                   nop                       #  27    0x25  1      OPC=nop                  
  nop                       #  28    0x24  1      OPC=nop                   nop                       #  28    0x26  1      OPC=nop                  
  addl $0x10, %edx          #  29    0x25  3      OPC=addl_r32_imm8         nop                       #  29    0x27  1      OPC=nop                  
  nop                       #  30    0x28  1      OPC=nop                   nop                       #  30    0x28  1      OPC=nop                  
  nop                       #  31    0x29  1      OPC=nop                   nop                       #  31    0x29  1      OPC=nop                  
  nop                       #  32    0x2a  1      OPC=nop                   nop                       #  32    0x2a  1      OPC=nop                  
  nop                       #  33    0x2b  1      OPC=nop                   nop                       #  33    0x2b  1      OPC=nop                  
  nop                       #  34    0x2c  1      OPC=nop                   addl %edi, %eax           #  34    0x2c  2      OPC=addl_r32_r32         
  testl %eax, %ecx          #  35    0x2d  2      OPC=testl_r32_r32         xorl %edi, %eax           #  35    0x2e  2      OPC=xorl_r32_r32_1       
  jne .L_142cc0             #  36    0x2f  2      OPC=jne_label             addb $0x10, %al           #  36    0x30  3      OPC=addb_r8_imm8         
  nopl %eax                 #  37    0x31  3      OPC=nopl_r32              nop                       #  37    0x33  1      OPC=nop                  
  movl %edx, %eax           #  38    0x34  2      OPC=movl_r32_r32          nop                       #  38    0x34  1      OPC=nop                  
  nop                       #  39    0x36  1      OPC=nop                   sarb %cl, %ah             #  39    0x35  2      OPC=sarb_rh_cl           
  nop                       #  40    0x37  1      OPC=nop                   nop                       #  40    0x37  1      OPC=nop                  
  nop                       #  41    0x38  1      OPC=nop                   nop                       #  41    0x38  1      OPC=nop                  
  nop                       #  42    0x39  1      OPC=nop                   nop                       #  42    0x39  1      OPC=nop                  
  subl %edi, %eax           #  43    0x3a  2      OPC=subl_r32_r32          jne .L_142cc0             #  43    0x3a  2      OPC=jne_label            
  shrl $0x2, %eax           #  44    0x3c  3      OPC=shrl_r32_imm8         nop                       #  44    0x3c  1      OPC=nop                  
  nop                       #  45    0x3f  1      OPC=nop                   nop                       #  45    0x3d  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>               nop                       #  46    0x3e  1      OPC=nop                  
  nop                       #  46    0x40  1      OPC=nop                   nop                       #  47    0x3f  1      OPC=nop                  
  nop                       #  47    0x41  1      OPC=nop                 .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  48    0x42  1      OPC=nop                   nop                       #  48    0x40  1      OPC=nop                  
  nop                       #  49    0x43  1      OPC=nop                   nop                       #  49    0x41  1      OPC=nop                  
  nop                       #  50    0x44  1      OPC=nop                   nop                       #  50    0x42  1      OPC=nop                  
  nop                       #  51    0x45  1      OPC=nop                   nop                       #  51    0x43  1      OPC=nop                  
  nop                       #  52    0x46  1      OPC=nop                   nop                       #  52    0x44  1      OPC=nop                  
  nop                       #  53    0x47  1      OPC=nop                   nop                       #  53    0x45  1      OPC=nop                  
  nop                       #  54    0x48  1      OPC=nop                   nop                       #  54    0x46  1      OPC=nop                  
  nop                       #  55    0x49  1      OPC=nop                   nop                       #  55    0x47  1      OPC=nop                  
  nop                       #  56    0x4a  1      OPC=nop                   nop                       #  56    0x48  1      OPC=nop                  
  nop                       #  57    0x4b  1      OPC=nop                   nop                       #  57    0x49  1      OPC=nop                  
  popq %r11                 #  58    0x4c  2      OPC=popq_r64_1            nop                       #  58    0x4a  1      OPC=nop                  
  andl $0xe0, %r11d         #  59    0x4e  4      OPC=andl_r32_imm8         nop                       #  59    0x4b  1      OPC=nop                  
  addq %r15, %r11           #  60    0x52  3      OPC=addq_r64_r64          nop                       #  60    0x4c  1      OPC=nop                  
  jmpq %r11                 #  61    0x55  3      OPC=jmpq_r64              nop                       #  61    0x4d  1      OPC=nop                  
                                                                            nop                       #  62    0x4e  1      OPC=nop                  
.size wcslen, .-wcslen                                                      shrl $0x2, %eax           #  63    0x4f  3      OPC=shrl_r32_imm8        
                                                                            popq %r11                 #  64    0x52  2      OPC=popq_r64_1           
                                                                            andl $0xe0, %r11d         #  65    0x54  4      OPC=andl_r32_imm8        
                                                                            addq %r15, %r11           #  66    0x58  3      OPC=addq_r64_r64         
                                                                            jmpq %r11                 #  67    0x5b  3      OPC=jmpq_r64             
                                                                                                                                                     
                                                                          .size wcslen, .-wcslen                                                     
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (9)                                                 Lowest Known Correct Cost (9)                                              
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x2   1      OPC=nop                  
  xorl %eax, %eax           #  4     0x3   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  4     0x3   2      OPC=xorl_r32_r32         
  movl %edi, %edx           #  5     0x5   2      OPC=movl_r32_r32           movl %edi, %edx           #  5     0x5   2      OPC=movl_r32_r32         
  movl (%r15,%rdx,1), %ecx  #  6     0x7   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  6     0x7   4      OPC=movl_r32_m32         
  subb %dh, %dh             #  7     0xb   2      OPC=subb_rh_rh_1           subb %dh, %dh             #  7     0xb   2      OPC=subb_rh_rh_1         
  andl $0xfffffffd, %ecx    #  8     0xd   6      OPC=andl_r32_imm32         andl $0xfffffffd, %ecx    #  8     0xd   6      OPC=andl_r32_imm32       
  nop                       #  9     0x13  1      OPC=nop                    nop                       #  9     0x13  1      OPC=nop                  
  nop                       #  10    0x14  1      OPC=nop                    nop                       #  10    0x14  1      OPC=nop                  
  je .L_142ce0              #  11    0x15  2      OPC=je_label               je .L_142ce0              #  11    0x15  2      OPC=je_label             
  nop                       #  12    0x17  1      OPC=nop                    nop                       #  12    0x17  1      OPC=nop                  
  nop                       #  13    0x18  1      OPC=nop                    nop                       #  13    0x18  1      OPC=nop                  
  shlb $0xf0, %al           #  14    0x19  3      OPC=shlb_r8_imm8           shlb $0xf0, %al           #  14    0x19  3      OPC=shlb_r8_imm8         
  nop                       #  15    0x1c  1      OPC=nop                    nop                       #  15    0x1c  1      OPC=nop                  
  nop                       #  16    0x1d  1      OPC=nop                    nop                       #  16    0x1d  1      OPC=nop                  
  nop                       #  17    0x1e  1      OPC=nop                    nop                       #  17    0x1e  1      OPC=nop                  
  nop                       #  18    0x1f  1      OPC=nop                    nop                       #  18    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  xorw $0x10, %ax           #  19    0x20  4      OPC=xorw_r16_imm8          xorw $0x10, %ax           #  19    0x20  4      OPC=xorw_r16_imm8        
  nop                       #  20    0x24  1      OPC=nop                    nop                       #  20    0x24  1      OPC=nop                  
  nop                       #  21    0x25  1      OPC=nop                    nop                       #  21    0x25  1      OPC=nop                  
  nop                       #  22    0x26  1      OPC=nop                    nop                       #  22    0x26  1      OPC=nop                  
  nop                       #  23    0x27  1      OPC=nop                    nop                       #  23    0x27  1      OPC=nop                  
  nop                       #  24    0x28  1      OPC=nop                    nop                       #  24    0x28  1      OPC=nop                  
  nop                       #  25    0x29  1      OPC=nop                    nop                       #  25    0x29  1      OPC=nop                  
  xorw %dx, %dx             #  26    0x2a  3      OPC=xorw_r16_r16_1         xorw %dx, %dx             #  26    0x2a  3      OPC=xorw_r16_r16_1       
  nop                       #  27    0x2d  1      OPC=nop                    nop                       #  27    0x2d  1      OPC=nop                  
  jne .L_142cc0             #  28    0x2e  2      OPC=jne_label              jne .L_142cc0             #  28    0x2e  2      OPC=jne_label            
  nop                       #  29    0x30  1      OPC=nop                    nop                       #  29    0x30  1      OPC=nop                  
  nop                       #  30    0x31  1      OPC=nop                    nop                       #  30    0x31  1      OPC=nop                  
  nop                       #  31    0x32  1      OPC=nop                    nop                       #  31    0x32  1      OPC=nop                  
  nop                       #  32    0x33  1      OPC=nop                    nop                       #  32    0x33  1      OPC=nop                  
  nop                       #  33    0x34  1      OPC=nop                    nop                       #  33    0x34  1      OPC=nop                  
  nop                       #  34    0x35  1      OPC=nop                    nop                       #  34    0x35  1      OPC=nop                  
  nop                       #  35    0x36  1      OPC=nop                    nop                       #  35    0x36  1      OPC=nop                  
  nop                       #  36    0x37  1      OPC=nop                    nop                       #  36    0x37  1      OPC=nop                  
  nop                       #  37    0x38  1      OPC=nop                    nop                       #  37    0x38  1      OPC=nop                  
  nop                       #  38    0x39  1      OPC=nop                    nop                       #  38    0x39  1      OPC=nop                  
  nop                       #  39    0x3a  1      OPC=nop                    nop                       #  39    0x3a  1      OPC=nop                  
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3b  1      OPC=nop                  
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3c  1      OPC=nop                  
  nop                       #  42    0x3d  1      OPC=nop                    nop                       #  42    0x3d  1      OPC=nop                  
  nop                       #  43    0x3e  1      OPC=nop                    nop                       #  43    0x3e  1      OPC=nop                  
  nop                       #  44    0x3f  1      OPC=nop                    nop                       #  44    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  sarl $0x2, %eax           #  45    0x40  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  45    0x40  3      OPC=sarl_r32_imm8        
  nop                       #  46    0x43  1      OPC=nop                    nop                       #  46    0x43  1      OPC=nop                  
  nop                       #  47    0x44  1      OPC=nop                    nop                       #  47    0x44  1      OPC=nop                  
  nop                       #  48    0x45  1      OPC=nop                    nop                       #  48    0x45  1      OPC=nop                  
  nop                       #  49    0x46  1      OPC=nop                    nop                       #  49    0x46  1      OPC=nop                  
  nop                       #  50    0x47  1      OPC=nop                    nop                       #  50    0x47  1      OPC=nop                  
  nop                       #  51    0x48  1      OPC=nop                    nop                       #  51    0x48  1      OPC=nop                  
  nop                       #  52    0x49  1      OPC=nop                    nop                       #  52    0x49  1      OPC=nop                  
  nop                       #  53    0x4a  1      OPC=nop                    nop                       #  53    0x4a  1      OPC=nop                  
  nop                       #  54    0x4b  1      OPC=nop                    nop                       #  54    0x4b  1      OPC=nop                  
  nop                       #  55    0x4c  1      OPC=nop                    nop                       #  55    0x4c  1      OPC=nop                  
  nop                       #  56    0x4d  1      OPC=nop                    nop                       #  56    0x4d  1      OPC=nop                  
  nop                       #  57    0x4e  1      OPC=nop                    nop                       #  57    0x4e  1      OPC=nop                  
  nop                       #  58    0x4f  1      OPC=nop                    nop                       #  58    0x4f  1      OPC=nop                  
  nop                       #  59    0x50  1      OPC=nop                    nop                       #  59    0x50  1      OPC=nop                  
  nop                       #  60    0x51  1      OPC=nop                    nop                       #  60    0x51  1      OPC=nop                  
  popq %r11                 #  61    0x52  2      OPC=popq_r64_1             popq %r11                 #  61    0x52  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  62    0x54  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  62    0x54  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  63    0x58  3      OPC=addq_r64_r64           addq %r15, %r11           #  63    0x58  3      OPC=addq_r64_r64         
  jmpq %r11                 #  64    0x5b  3      OPC=jmpq_r64               jmpq %r11                 #  64    0x5b  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (8)                                                 Lowest Known Correct Cost (8)                                              
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32         
  movl %edi, %edx           #  4     0x4   2      OPC=movl_r32_r32           movl %edi, %edx           #  4     0x4   2      OPC=movl_r32_r32         
  movl (%r15,%rdx,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32         
  nop                       #  6     0xa   1      OPC=nop                    nop                       #  6     0xa   1      OPC=nop                  
  nop                       #  7     0xb   1      OPC=nop                    nop                       #  7     0xb   1      OPC=nop                  
  andl $0xffffffe0, %ecx    #  8     0xc   6      OPC=andl_r32_imm32         andl $0xffffffe0, %ecx    #  8     0xc   6      OPC=andl_r32_imm32       
  nop                       #  9     0x12  1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                  
  nop                       #  10    0x13  1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                  
  nop                       #  11    0x14  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                  
  nop                       #  12    0x15  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                  
  nop                       #  13    0x16  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                  
  je .L_142ce0              #  14    0x17  2      OPC=je_label               je .L_142ce0              #  14    0x17  2      OPC=je_label             
  nop                       #  15    0x19  1      OPC=nop                    nop                       #  15    0x19  1      OPC=nop                  
  nop                       #  16    0x1a  1      OPC=nop                    nop                       #  16    0x1a  1      OPC=nop                  
  nop                       #  17    0x1b  1      OPC=nop                    nop                       #  17    0x1b  1      OPC=nop                  
  nop                       #  18    0x1c  1      OPC=nop                    nop                       #  18    0x1c  1      OPC=nop                  
  nop                       #  19    0x1d  1      OPC=nop                    nop                       #  19    0x1d  1      OPC=nop                  
  xorb %ah, %ah             #  20    0x1e  2      OPC=xorb_rh_rh             xorb %ah, %ah             #  20    0x1e  2      OPC=xorb_rh_rh           
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  xorw $0x10, %ax           #  21    0x20  4      OPC=xorw_r16_imm8          xorw $0x10, %ax           #  21    0x20  4      OPC=xorw_r16_imm8        
  nop                       #  22    0x24  1      OPC=nop                    nop                       #  22    0x24  1      OPC=nop                  
  nop                       #  23    0x25  1      OPC=nop                    nop                       #  23    0x25  1      OPC=nop                  
  nop                       #  24    0x26  1      OPC=nop                    nop                       #  24    0x26  1      OPC=nop                  
  nop                       #  25    0x27  1      OPC=nop                    nop                       #  25    0x27  1      OPC=nop                  
  xorw %dx, %dx             #  26    0x28  3      OPC=xorw_r16_r16_1         xorw %dx, %dx             #  26    0x28  3      OPC=xorw_r16_r16_1       
  nop                       #  27    0x2b  1      OPC=nop                    nop                       #  27    0x2b  1      OPC=nop                  
  jne .L_142cc0             #  28    0x2c  2      OPC=jne_label              jne .L_142cc0             #  28    0x2c  2      OPC=jne_label            
  nop                       #  29    0x2e  1      OPC=nop                    nop                       #  29    0x2e  1      OPC=nop                  
  nop                       #  30    0x2f  1      OPC=nop                    nop                       #  30    0x2f  1      OPC=nop                  
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x30  1      OPC=nop                  
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x31  1      OPC=nop                  
  nop                       #  33    0x32  1      OPC=nop                    nop                       #  33    0x32  1      OPC=nop                  
  nop                       #  34    0x33  1      OPC=nop                    nop                       #  34    0x33  1      OPC=nop                  
  nop                       #  35    0x34  1      OPC=nop                    nop                       #  35    0x34  1      OPC=nop                  
  nop                       #  36    0x35  1      OPC=nop                    nop                       #  36    0x35  1      OPC=nop                  
  nop                       #  37    0x36  1      OPC=nop                    nop                       #  37    0x36  1      OPC=nop                  
  nop                       #  38    0x37  1      OPC=nop                    nop                       #  38    0x37  1      OPC=nop                  
  nop                       #  39    0x38  1      OPC=nop                    nop                       #  39    0x38  1      OPC=nop                  
  nop                       #  40    0x39  1      OPC=nop                    nop                       #  40    0x39  1      OPC=nop                  
  nop                       #  41    0x3a  1      OPC=nop                    nop                       #  41    0x3a  1      OPC=nop                  
  nop                       #  42    0x3b  1      OPC=nop                    nop                       #  42    0x3b  1      OPC=nop                  
  nop                       #  43    0x3c  1      OPC=nop                    nop                       #  43    0x3c  1      OPC=nop                  
  nop                       #  44    0x3d  1      OPC=nop                    nop                       #  44    0x3d  1      OPC=nop                  
  nop                       #  45    0x3e  1      OPC=nop                    nop                       #  45    0x3e  1      OPC=nop                  
  nop                       #  46    0x3f  1      OPC=nop                    nop                       #  46    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  sarl $0x2, %eax           #  47    0x40  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  47    0x40  3      OPC=sarl_r32_imm8        
  nop                       #  48    0x43  1      OPC=nop                    nop                       #  48    0x43  1      OPC=nop                  
  nop                       #  49    0x44  1      OPC=nop                    nop                       #  49    0x44  1      OPC=nop                  
  nop                       #  50    0x45  1      OPC=nop                    nop                       #  50    0x45  1      OPC=nop                  
  nop                       #  51    0x46  1      OPC=nop                    nop                       #  51    0x46  1      OPC=nop                  
  nop                       #  52    0x47  1      OPC=nop                    nop                       #  52    0x47  1      OPC=nop                  
  nop                       #  53    0x48  1      OPC=nop                    nop                       #  53    0x48  1      OPC=nop                  
  nop                       #  54    0x49  1      OPC=nop                    nop                       #  54    0x49  1      OPC=nop                  
  nop                       #  55    0x4a  1      OPC=nop                    nop                       #  55    0x4a  1      OPC=nop                  
  nop                       #  56    0x4b  1      OPC=nop                    nop                       #  56    0x4b  1      OPC=nop                  
  nop                       #  57    0x4c  1      OPC=nop                    nop                       #  57    0x4c  1      OPC=nop                  
  nop                       #  58    0x4d  1      OPC=nop                    nop                       #  58    0x4d  1      OPC=nop                  
  nop                       #  59    0x4e  1      OPC=nop                    nop                       #  59    0x4e  1      OPC=nop                  
  nop                       #  60    0x4f  1      OPC=nop                    nop                       #  60    0x4f  1      OPC=nop                  
  popq %r11                 #  61    0x50  2      OPC=popq_r64_1             popq %r11                 #  61    0x50  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  62    0x52  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  62    0x52  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  63    0x56  3      OPC=addq_r64_r64           addq %r15, %r11           #  63    0x56  3      OPC=addq_r64_r64         
  jmpq %r11                 #  64    0x59  3      OPC=jmpq_r64               jmpq %r11                 #  64    0x59  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (7)                                                 Lowest Known Correct Cost (7)                                              
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x2   1      OPC=nop                  
  nop                       #  4     0x3   1      OPC=nop                    nop                       #  4     0x3   1      OPC=nop                  
  nop                       #  5     0x4   1      OPC=nop                    nop                       #  5     0x4   1      OPC=nop                  
  nop                       #  6     0x5   1      OPC=nop                    nop                       #  6     0x5   1      OPC=nop                  
  xorl %eax, %eax           #  7     0x6   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  7     0x6   2      OPC=xorl_r32_r32         
  nop                       #  8     0x8   1      OPC=nop                    nop                       #  8     0x8   1      OPC=nop                  
  nop                       #  9     0x9   1      OPC=nop                    nop                       #  9     0x9   1      OPC=nop                  
  nop                       #  10    0xa   1      OPC=nop                    nop                       #  10    0xa   1      OPC=nop                  
  nop                       #  11    0xb   1      OPC=nop                    nop                       #  11    0xb   1      OPC=nop                  
  movl %edi, %edx           #  12    0xc   2      OPC=movl_r32_r32_1         movl %edi, %edx           #  12    0xc   2      OPC=movl_r32_r32_1       
  movl (%r15,%rdx,1), %ecx  #  13    0xe   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  13    0xe   4      OPC=movl_r32_m32         
  nop                       #  14    0x12  1      OPC=nop                    nop                       #  14    0x12  1      OPC=nop                  
  nop                       #  15    0x13  1      OPC=nop                    nop                       #  15    0x13  1      OPC=nop                  
  nop                       #  16    0x14  1      OPC=nop                    nop                       #  16    0x14  1      OPC=nop                  
  nop                       #  17    0x15  1      OPC=nop                    nop                       #  17    0x15  1      OPC=nop                  
  nop                       #  18    0x16  1      OPC=nop                    nop                       #  18    0x16  1      OPC=nop                  
  andq $0xfffffffe, %rcx    #  19    0x17  7      OPC=andq_r64_imm32         andq $0xfffffffe, %rcx    #  19    0x17  7      OPC=andq_r64_imm32       
  je .L_142ce0              #  20    0x1e  2      OPC=je_label               je .L_142ce0              #  20    0x1e  2      OPC=je_label             
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  nop                       #  21    0x20  1      OPC=nop                    nop                       #  21    0x20  1      OPC=nop                  
  nop                       #  22    0x21  1      OPC=nop                    nop                       #  22    0x21  1      OPC=nop                  
  nopl %eax                 #  23    0x22  3      OPC=nopl_r32               nopl %eax                 #  23    0x22  3      OPC=nopl_r32             
  nop                       #  24    0x25  1      OPC=nop                    nop                       #  24    0x25  1      OPC=nop                  
  nop                       #  25    0x26  1      OPC=nop                    nop                       #  25    0x26  1      OPC=nop                  
  nop                       #  26    0x27  1      OPC=nop                    nop                       #  26    0x27  1      OPC=nop                  
  nop                       #  27    0x28  1      OPC=nop                    nop                       #  27    0x28  1      OPC=nop                  
  nop                       #  28    0x29  1      OPC=nop                    nop                       #  28    0x29  1      OPC=nop                  
  nop                       #  29    0x2a  1      OPC=nop                    nop                       #  29    0x2a  1      OPC=nop                  
  nop                       #  30    0x2b  1      OPC=nop                    nop                       #  30    0x2b  1      OPC=nop                  
  shrb $0xff, %al           #  31    0x2c  3      OPC=shrb_r8_imm8           shrb $0xff, %al           #  31    0x2c  3      OPC=shrb_r8_imm8         
  jne .L_142cc0             #  32    0x2f  2      OPC=jne_label              jne .L_142cc0             #  32    0x2f  2      OPC=jne_label            
  nop                       #  33    0x31  1      OPC=nop                    nop                       #  33    0x31  1      OPC=nop                  
  nop                       #  34    0x32  1      OPC=nop                    nop                       #  34    0x32  1      OPC=nop                  
  nop                       #  35    0x33  1      OPC=nop                    nop                       #  35    0x33  1      OPC=nop                  
  nop                       #  36    0x34  1      OPC=nop                    nop                       #  36    0x34  1      OPC=nop                  
  nop                       #  37    0x35  1      OPC=nop                    nop                       #  37    0x35  1      OPC=nop                  
  nop                       #  38    0x36  1      OPC=nop                    nop                       #  38    0x36  1      OPC=nop                  
  nop                       #  39    0x37  1      OPC=nop                    nop                       #  39    0x37  1      OPC=nop                  
  nop                       #  40    0x38  1      OPC=nop                    nop                       #  40    0x38  1      OPC=nop                  
  nop                       #  41    0x39  1      OPC=nop                    nop                       #  41    0x39  1      OPC=nop                  
  xorq $0x10, %rax          #  42    0x3a  6      OPC=xorq_rax_imm32         xorq $0x10, %rax          #  42    0x3a  6      OPC=xorq_rax_imm32       
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  sarb $0x2, %al            #  43    0x40  3      OPC=sarb_r8_imm8           sarb $0x2, %al            #  43    0x40  3      OPC=sarb_r8_imm8         
  nop                       #  44    0x43  1      OPC=nop                    nop                       #  44    0x43  1      OPC=nop                  
  nop                       #  45    0x44  1      OPC=nop                    nop                       #  45    0x44  1      OPC=nop                  
  nop                       #  46    0x45  1      OPC=nop                    nop                       #  46    0x45  1      OPC=nop                  
  nop                       #  47    0x46  1      OPC=nop                    nop                       #  47    0x46  1      OPC=nop                  
  popq %r11                 #  48    0x47  2      OPC=popq_r64_1             popq %r11                 #  48    0x47  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  49    0x49  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  49    0x49  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  50    0x4d  3      OPC=addq_r64_r64           addq %r15, %r11           #  50    0x4d  3      OPC=addq_r64_r64         
  jmpq %r11                 #  51    0x50  3      OPC=jmpq_r64               jmpq %r11                 #  51    0x50  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (6)                                                 Lowest Known Correct Cost (6)                                              
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32         
  nop                       #  4     0x4   1      OPC=nop                    nop                       #  4     0x4   1      OPC=nop                  
  nop                       #  5     0x5   1      OPC=nop                    nop                       #  5     0x5   1      OPC=nop                  
  nop                       #  6     0x6   1      OPC=nop                    nop                       #  6     0x6   1      OPC=nop                  
  nop                       #  7     0x7   1      OPC=nop                    nop                       #  7     0x7   1      OPC=nop                  
  nop                       #  8     0x8   1      OPC=nop                    nop                       #  8     0x8   1      OPC=nop                  
  nop                       #  9     0x9   1      OPC=nop                    nop                       #  9     0x9   1      OPC=nop                  
  nop                       #  10    0xa   1      OPC=nop                    nop                       #  10    0xa   1      OPC=nop                  
  nop                       #  11    0xb   1      OPC=nop                    nop                       #  11    0xb   1      OPC=nop                  
  movl %edi, %edx           #  12    0xc   2      OPC=movl_r32_r32_1         movl %edi, %edx           #  12    0xc   2      OPC=movl_r32_r32_1       
  movl (%r15,%rdx,1), %ecx  #  13    0xe   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  13    0xe   4      OPC=movl_r32_m32         
  nop                       #  14    0x12  1      OPC=nop                    nop                       #  14    0x12  1      OPC=nop                  
  nop                       #  15    0x13  1      OPC=nop                    nop                       #  15    0x13  1      OPC=nop                  
  nop                       #  16    0x14  1      OPC=nop                    nop                       #  16    0x14  1      OPC=nop                  
  nop                       #  17    0x15  1      OPC=nop                    nop                       #  17    0x15  1      OPC=nop                  
  nop                       #  18    0x16  1      OPC=nop                    nop                       #  18    0x16  1      OPC=nop                  
  andq $0xfffffffe, %rcx    #  19    0x17  7      OPC=andq_r64_imm32         andq $0xfffffffe, %rcx    #  19    0x17  7      OPC=andq_r64_imm32       
  je .L_142ce0              #  20    0x1e  2      OPC=je_label               je .L_142ce0              #  20    0x1e  2      OPC=je_label             
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  shlb $0xf9, %al           #  21    0x20  3      OPC=shlb_r8_imm8           shlb $0xf9, %al           #  21    0x20  3      OPC=shlb_r8_imm8         
  nop                       #  22    0x23  1      OPC=nop                    nop                       #  22    0x23  1      OPC=nop                  
  nop                       #  23    0x24  1      OPC=nop                    nop                       #  23    0x24  1      OPC=nop                  
  nop                       #  24    0x25  1      OPC=nop                    nop                       #  24    0x25  1      OPC=nop                  
  nop                       #  25    0x26  1      OPC=nop                    nop                       #  25    0x26  1      OPC=nop                  
  nop                       #  26    0x27  1      OPC=nop                    nop                       #  26    0x27  1      OPC=nop                  
  nop                       #  27    0x28  1      OPC=nop                    nop                       #  27    0x28  1      OPC=nop                  
  nop                       #  28    0x29  1      OPC=nop                    nop                       #  28    0x29  1      OPC=nop                  
  nop                       #  29    0x2a  1      OPC=nop                    nop                       #  29    0x2a  1      OPC=nop                  
  nop                       #  30    0x2b  1      OPC=nop                    nop                       #  30    0x2b  1      OPC=nop                  
  nop                       #  31    0x2c  1      OPC=nop                    nop                       #  31    0x2c  1      OPC=nop                  
  nop                       #  32    0x2d  1      OPC=nop                    nop                       #  32    0x2d  1      OPC=nop                  
  nop                       #  33    0x2e  1      OPC=nop                    nop                       #  33    0x2e  1      OPC=nop                  
  nop                       #  34    0x2f  1      OPC=nop                    nop                       #  34    0x2f  1      OPC=nop                  
  nop                       #  35    0x30  1      OPC=nop                    nop                       #  35    0x30  1      OPC=nop                  
  jne .L_142cc0             #  36    0x31  2      OPC=jne_label              jne .L_142cc0             #  36    0x31  2      OPC=jne_label            
  xorq $0x10, %rax          #  37    0x33  6      OPC=xorq_rax_imm32         xorq $0x10, %rax          #  37    0x33  6      OPC=xorq_rax_imm32       
  nop                       #  38    0x39  1      OPC=nop                    nop                       #  38    0x39  1      OPC=nop                  
  nop                       #  39    0x3a  1      OPC=nop                    nop                       #  39    0x3a  1      OPC=nop                  
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3b  1      OPC=nop                  
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3c  1      OPC=nop                  
  nop                       #  42    0x3d  1      OPC=nop                    nop                       #  42    0x3d  1      OPC=nop                  
  andb %ah, %ah             #  43    0x3e  2      OPC=andb_rh_rh_1           andb %ah, %ah             #  43    0x3e  2      OPC=andb_rh_rh_1         
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  sarb $0x2, %al            #  44    0x40  3      OPC=sarb_r8_imm8           sarb $0x2, %al            #  44    0x40  3      OPC=sarb_r8_imm8         
  popq %r11                 #  45    0x43  2      OPC=popq_r64_1             popq %r11                 #  45    0x43  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  46    0x45  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  46    0x45  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  47    0x49  3      OPC=addq_r64_r64           addq %r15, %r11           #  47    0x49  3      OPC=addq_r64_r64         
  jmpq %r11                 #  48    0x4c  3      OPC=jmpq_r64               jmpq %r11                 #  48    0x4c  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (5)                                          Lowest Known Correct Cost (5)                                       
                                                                                                                                        
  .text                                                               .text                                                             
  .globl wcslen                                                       .globl wcslen                                                     
  .type wcslen, @function                                             .type wcslen, @function                                           
                                                                                                                                        
#! file-offset 0                                                    #! file-offset 0                                                    
#! rip-offset  0                                                    #! rip-offset  0                                                    
#! capacity    0 bytes                                              #! capacity    0 bytes                                              
                                                                                                                                        
# Text               #  Line  RIP   Bytes  Opcode                   # Text               #  Line  RIP   Bytes  Opcode                   
.wcslen:             #        0     0      OPC=<label>              .wcslen:             #        0     0      OPC=<label>              
  nop                #  1     0     1      OPC=nop                    nop                #  1     0     1      OPC=nop                  
  nop                #  2     0x1   1      OPC=nop                    nop                #  2     0x1   1      OPC=nop                  
  nop                #  3     0x2   1      OPC=nop                    nop                #  3     0x2   1      OPC=nop                  
  nop                #  4     0x3   1      OPC=nop                    nop                #  4     0x3   1      OPC=nop                  
  nop                #  5     0x4   1      OPC=nop                    nop                #  5     0x4   1      OPC=nop                  
  nop                #  6     0x5   1      OPC=nop                    nop                #  6     0x5   1      OPC=nop                  
  nop                #  7     0x6   1      OPC=nop                    nop                #  7     0x6   1      OPC=nop                  
  nop                #  8     0x7   1      OPC=nop                    nop                #  8     0x7   1      OPC=nop                  
  nop                #  9     0x8   1      OPC=nop                    nop                #  9     0x8   1      OPC=nop                  
  nop                #  10    0x9   1      OPC=nop                    nop                #  10    0x9   1      OPC=nop                  
  nop                #  11    0xa   1      OPC=nop                    nop                #  11    0xa   1      OPC=nop                  
  nop                #  12    0xb   1      OPC=nop                    nop                #  12    0xb   1      OPC=nop                  
  nop                #  13    0xc   1      OPC=nop                    nop                #  13    0xc   1      OPC=nop                  
  nop                #  14    0xd   1      OPC=nop                    nop                #  14    0xd   1      OPC=nop                  
  xorl %eax, %eax    #  15    0xe   2      OPC=xorl_r32_r32           xorl %eax, %eax    #  15    0xe   2      OPC=xorl_r32_r32         
  nop                #  16    0x10  1      OPC=nop                    nop                #  16    0x10  1      OPC=nop                  
  nop                #  17    0x11  1      OPC=nop                    nop                #  17    0x11  1      OPC=nop                  
  nop                #  18    0x12  1      OPC=nop                    nop                #  18    0x12  1      OPC=nop                  
  nop                #  19    0x13  1      OPC=nop                    nop                #  19    0x13  1      OPC=nop                  
  nop                #  20    0x14  1      OPC=nop                    nop                #  20    0x14  1      OPC=nop                  
  nop                #  21    0x15  1      OPC=nop                    nop                #  21    0x15  1      OPC=nop                  
  nop                #  22    0x16  1      OPC=nop                    nop                #  22    0x16  1      OPC=nop                  
  nop                #  23    0x17  1      OPC=nop                    nop                #  23    0x17  1      OPC=nop                  
  andl $0x7, %edi    #  24    0x18  6      OPC=andl_r32_imm32         andl $0x7, %edi    #  24    0x18  6      OPC=andl_r32_imm32       
  je .L_142ce0       #  25    0x1e  2      OPC=je_label               je .L_142ce0       #  25    0x1e  2      OPC=je_label             
.L_142cc0:           #        0x20  0      OPC=<label>              .L_142cc0:           #        0x20  0      OPC=<label>              
  andb $0xf0, %al    #  26    0x20  2      OPC=andb_al_imm8           andb $0xf0, %al    #  26    0x20  2      OPC=andb_al_imm8         
  nop                #  27    0x22  1      OPC=nop                    nop                #  27    0x22  1      OPC=nop                  
  nop                #  28    0x23  1      OPC=nop                    nop                #  28    0x23  1      OPC=nop                  
  nop                #  29    0x24  1      OPC=nop                    nop                #  29    0x24  1      OPC=nop                  
  nop                #  30    0x25  1      OPC=nop                    nop                #  30    0x25  1      OPC=nop                  
  nop                #  31    0x26  1      OPC=nop                    nop                #  31    0x26  1      OPC=nop                  
  nop                #  32    0x27  1      OPC=nop                    nop                #  32    0x27  1      OPC=nop                  
  nop                #  33    0x28  1      OPC=nop                    nop                #  33    0x28  1      OPC=nop                  
  nop                #  34    0x29  1      OPC=nop                    nop                #  34    0x29  1      OPC=nop                  
  nop                #  35    0x2a  1      OPC=nop                    nop                #  35    0x2a  1      OPC=nop                  
  nop                #  36    0x2b  1      OPC=nop                    nop                #  36    0x2b  1      OPC=nop                  
  nop                #  37    0x2c  1      OPC=nop                    nop                #  37    0x2c  1      OPC=nop                  
  nop                #  38    0x2d  1      OPC=nop                    nop                #  38    0x2d  1      OPC=nop                  
  nop                #  39    0x2e  1      OPC=nop                    nop                #  39    0x2e  1      OPC=nop                  
  nop                #  40    0x2f  1      OPC=nop                    nop                #  40    0x2f  1      OPC=nop                  
  jne .L_142cc0      #  41    0x30  2      OPC=jne_label              jne .L_142cc0      #  41    0x30  2      OPC=jne_label            
  nop                #  42    0x32  1      OPC=nop                    nop                #  42    0x32  1      OPC=nop                  
  nop                #  43    0x33  1      OPC=nop                    nop                #  43    0x33  1      OPC=nop                  
  nop                #  44    0x34  1      OPC=nop                    nop                #  44    0x34  1      OPC=nop                  
  nop                #  45    0x35  1      OPC=nop                    nop                #  45    0x35  1      OPC=nop                  
  nop                #  46    0x36  1      OPC=nop                    nop                #  46    0x36  1      OPC=nop                  
  nop                #  47    0x37  1      OPC=nop                    nop                #  47    0x37  1      OPC=nop                  
  nop                #  48    0x38  1      OPC=nop                    nop                #  48    0x38  1      OPC=nop                  
  orq $0x10, %rax    #  49    0x39  7      OPC=orq_r64_imm32          orq $0x10, %rax    #  49    0x39  7      OPC=orq_r64_imm32        
.L_142ce0:           #        0x40  0      OPC=<label>              .L_142ce0:           #        0x40  0      OPC=<label>              
  nop                #  50    0x40  1      OPC=nop                    nop                #  50    0x40  1      OPC=nop                  
  nop                #  51    0x41  1      OPC=nop                    nop                #  51    0x41  1      OPC=nop                  
  nop                #  52    0x42  1      OPC=nop                    nop                #  52    0x42  1      OPC=nop                  
  nop                #  53    0x43  1      OPC=nop                    nop                #  53    0x43  1      OPC=nop                  
  nop                #  54    0x44  1      OPC=nop                    nop                #  54    0x44  1      OPC=nop                  
  sarw $0x2, %ax     #  55    0x45  4      OPC=sarw_r16_imm8          sarw $0x2, %ax     #  55    0x45  4      OPC=sarw_r16_imm8        
  nop                #  56    0x49  1      OPC=nop                    nop                #  56    0x49  1      OPC=nop                  
  nop                #  57    0x4a  1      OPC=nop                    nop                #  57    0x4a  1      OPC=nop                  
  nop                #  58    0x4b  1      OPC=nop                    nop                #  58    0x4b  1      OPC=nop                  
  nop                #  59    0x4c  1      OPC=nop                    nop                #  59    0x4c  1      OPC=nop                  
  nop                #  60    0x4d  1      OPC=nop                    nop                #  60    0x4d  1      OPC=nop                  
  nop                #  61    0x4e  1      OPC=nop                    nop                #  61    0x4e  1      OPC=nop                  
  nop                #  62    0x4f  1      OPC=nop                    nop                #  62    0x4f  1      OPC=nop                  
  nop                #  63    0x50  1      OPC=nop                    nop                #  63    0x50  1      OPC=nop                  
  nop                #  64    0x51  1      OPC=nop                    nop                #  64    0x51  1      OPC=nop                  
  nop                #  65    0x52  1      OPC=nop                    nop                #  65    0x52  1      OPC=nop                  
  nop                #  66    0x53  1      OPC=nop                    nop                #  66    0x53  1      OPC=nop                  
  popq %r11          #  67    0x54  2      OPC=popq_r64_1             popq %r11          #  67    0x54  2      OPC=popq_r64_1           
  andl $0xe0, %r11d  #  68    0x56  4      OPC=andl_r32_imm8          andl $0xe0, %r11d  #  68    0x56  4      OPC=andl_r32_imm8        
  addq %r15, %r11    #  69    0x5a  3      OPC=addq_r64_r64           addq %r15, %r11    #  69    0x5a  3      OPC=addq_r64_r64         
  jmpq %r11          #  70    0x5d  3      OPC=jmpq_r64               jmpq %r11          #  70    0x5d  3      OPC=jmpq_r64             
                                                                                                                                        
.size wcslen, .-wcslen                                              .size wcslen, .-wcslen                                              
                                                                                                                                        

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  34.9211s
Iterations/s:                  2863.6

Starting cost:                 13
Lowest cost:                   5
Lowest correct cost:           5

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.398%       7.387%        6.97%        
Local Swap      8.307%       5.635%        5.105%       
Global Copy     8.19%        6.809%        6.809%       
Global Swap     8.282%       6.237%        5.215%       
Operand         8.295%       3.756%        1.788%       
Rotate          8.297%       6.524%        4.167%       
ReplaceNop      8.457%       7.45%         6.831%       
Delete          8.397%       7.394%        4.709%       
Instruction     8.293%       4.912%        0.589%       
Add Nops        8.44%        8.44%         4.201%       
OpcodeWidth     8.257%       6.714%        6.49%        
2xWeighted      0%           0%            0%           
Memory+Swap     8.387%       0.369%        0.001%       
                                                        
Total           100%         71.627%       52.875%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  71.1781s
Iterations/s:                  2809.85

Starting cost:                 13
Lowest cost:                   5
Lowest correct cost:           5

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.345%       7.4295%       7.0325%      
Local Swap      8.262%       5.593%        5.1565%      
Global Copy     8.257%       6.8515%       6.8515%      
Global Swap     8.2815%      6.4675%       5.5295%      
Operand         8.304%       3.8055%       1.903%       
Rotate          8.4115%      6.7485%       4.378%       
ReplaceNop      8.3855%      7.5125%       6.953%       
Delete          8.3815%      7.481%        4.682%       
Instruction     8.299%       4.608%        0.531%       
Add Nops        8.397%       8.397%        4.2265%      
OpcodeWidth     8.253%       6.8295%       6.645%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.423%       0.1845%       0.0005%      
                                                        
Total           100%         71.908%       53.889%      

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  105.813s
Iterations/s:                  2835.2

Starting cost:                 13
Lowest cost:                   5
Lowest correct cost:           5

Move Type       Proposed     Succeeded     Accepted         
                                                            
Opcode          8.33333%     7.50067%      7.12867%         
Local Swap      8.29333%     5.65233%      5.24533%         
Global Copy     8.254%       6.93033%      6.93033%         
Global Swap     8.26233%     6.59167%      5.71067%         
Operand         8.34567%     3.87967%      1.97333%         
Rotate          8.382%       6.85167%      4.42833%         
ReplaceNop      8.399%       7.594%        7.07333%         
Delete          8.36733%     7.55%         4.84633%         
Instruction     8.33433%     4.528%        0.519333%        
Add Nops        8.36833%     8.36833%      4.40867%         
OpcodeWidth     8.26567%     6.96467%      6.79467%         
2xWeighted      0%           0%            0%               
Memory+Swap     8.39467%     0.123%        0.000333333%     
                                                            
Total           100%         72.5343%      55.0593%         

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  154.802s
Iterations/s:                  2583.95

Starting cost:                 13
Lowest cost:                   5
Lowest correct cost:           5

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.34025%     7.576%        7.24%        
Local Swap      8.322%       5.86825%      5.474%       
Global Copy     8.25925%     7.0295%       7.0295%      
Global Swap     8.27675%     6.73425%      5.904%       
Operand         8.379%       3.97075%      2.099%       
Rotate          8.38925%     6.994%        4.55225%     
ReplaceNop      8.398%       7.6595%       7.185%       
Delete          8.33375%     7.57925%      5.0545%      
Instruction     8.306%       4.5805%       0.5335%      
Add Nops        8.34075%     8.34075%      4.596%       
OpcodeWidth     8.29975%     7.099%        6.939%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.35525%     0.09225%      0.00025%     
                                                        
Total           100%         73.524%       56.607%      

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  200.552s
Iterations/s:                  2493.12

Starting cost:                 13
Lowest cost:                   5
Lowest correct cost:           5

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3464%      7.6228%       7.2992%      
Local Swap      8.3324%      5.9716%       5.5808%      
Global Copy     8.2774%      7.0914%       7.0914%      
Global Swap     8.2796%      6.8102%       5.999%       
Operand         8.3586%      4.0126%       2.1548%      
Rotate          8.362%       7.0258%       4.595%       
ReplaceNop      8.3778%      7.6738%       7.229%       
Delete          8.3464%      7.6366%       5.2024%      
Instruction     8.3124%      4.6078%       0.5336%      
Add Nops        8.3256%      8.3256%       4.7318%      
OpcodeWidth     8.3278%      7.1764%       7.0238%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3536%      0.0738%       0.0002%      
                                                        
Total           100%         74.0284%      57.441%      

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     30 4e 27 ff 7c f0 44 35
%rcx     e0 de 9a 69 f1 c3 70 86
%rdx     9f bf cf a6 02 65 30 4c
%rbx     73 70 34 5e ea da f6 8e
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 3e eb a8 65
%rdi     00 00 00 00 3e eb a8 a8
%r8      3d 64 39 04 93 11 d6 ed
%r9      89 44 b4 f0 38 6f bd 20
%r10     44 75 b0 e4 66 6b f0 78
%r11     89 70 5c 0a 18 d1 ca 9e
%r12     d8 d4 60 a7 df d4 d5 4b
%r13     34 ed 06 af c7 07 a4 e4
%r14     3a e5 14 4e 2d 9d 24 6b
%r15     00 00 00 00 0a 19 c1 50

%ymm0    c5 5f da 43 63 01 82 53 9c dd e7 3c 10 51 cd f1 b9 26 e2 b2 17 5b db 29 be 23 aa ff a8 47 6a 9c
%ymm1    bc dc 8d 22 60 7b 00 6e 82 43 a6 ac ba 0a c6 62 a4 d1 a3 45 a5 df 92 8f e7 f8 29 a6 69 15 64 d7
%ymm2    01 36 99 3f 8d b2 80 a9 6a a2 6c 53 13 e9 9c 78 5c e8 a5 87 a9 0c f5 de 10 3b 81 3f fd 9f e0 bf
%ymm3    c8 38 df 7c f7 7f 42 83 79 76 e8 3b ea ce 76 1a ef 3f b5 4d bd b7 dd b0 f4 82 8a ca 31 c3 3a 46
%ymm4    a0 ca a1 30 ef 5e b0 ee 15 3b 3c 9a 11 e7 6a 3d a7 ec 05 97 81 20 dc 73 c7 b3 d5 dd 80 34 e3 d3
%ymm5    70 47 44 c5 d1 6d 59 02 73 3a 6b f9 30 65 16 2b 85 21 76 7a 1b a9 92 de aa 94 0f 46 71 87 fb 95
%ymm6    87 70 75 97 29 1f cd 60 4f 64 52 d1 0b 67 ab 20 21 be d4 33 25 12 93 04 5f c0 fa ea 38 24 12 e7
%ymm7    d0 76 20 d6 e8 a0 1f 07 a0 48 46 06 e3 9f 97 1a c0 57 ea af 60 b8 b6 74 3a b4 88 c5 4e 91 8a 47
%ymm8    50 c2 e1 56 18 bb 09 65 53 23 dc 78 92 f2 ff 64 db d1 95 ca 6f 11 b7 2f a1 36 0c d4 97 98 ca d3
%ymm9    d1 30 83 77 75 57 a9 9f e0 92 53 c0 4f 4e 26 a2 bd 98 f9 3a 4b a1 b9 45 db f9 96 d9 f7 61 b0 1d
%ymm10   d2 fd 33 b3 c0 e5 e8 39 38 e3 70 47 7f 87 6a 0f 03 c6 eb cd a1 76 78 99 f5 68 63 df 9b c2 8b f7
%ymm11   d7 50 5c f1 6a 1f 99 7e f3 a5 7c d9 db 69 cf 55 2a a3 9e 89 78 74 b2 e2 50 6c 13 f1 a9 89 68 ba
%ymm12   e7 e5 74 be 3d 27 16 65 4b 4d 65 92 29 8d 12 86 18 ae 9a 78 e3 16 89 37 c1 db 72 41 b7 b9 4b 55
%ymm13   4e 18 8b 9f 18 ac 7f c9 ee 7a d0 78 18 34 e0 6d 5e 07 0f c3 e7 c6 6c 51 57 fd 28 8f fe bd 6a e4
%ymm14   d7 4b 56 35 f4 23 0d 6a 71 b0 32 4c d3 05 84 5a 82 61 3b d8 b3 01 dc 5e 34 e5 81 01 76 f8 a7 c7
%ymm15   3f a5 b3 21 fd e7 fa 6b 40 52 d2 2e b6 3a f0 91 35 23 2d a1 44 a4 39 16 b1 a2 61 74 a2 a1 17 90

%cf      1 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   cc 99 bc a3 76 93 b2 11 
00000006 fffffff0   v v v v v v v v   00 95 3e 5c 1d ec 14 06 
00000006 ffffffe8   v v v v v v v v   54 2f e6 b1 20 de 92 40 
00000006 ffffffe0   v v v v v v v v   5f 6f 69 25 8b df 8c 8a 

[ 00000000 49056a18 - 00000000 49056980 ]
[ 2 valid rows shown ]

00000000 49056a00   v v v v v v v v   00 00 00 00 fe 1a 36 7b 
00000000 490569f8   v v v v v v v v   82 96 78 32 9d d5 26 46 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  40.1004s
Iterations/s:                  2493.74

Starting cost:                 10
Lowest cost:                   10
Lowest correct cost:           10

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.373%       7.242%        6.533%       
Local Swap      8.406%       5.424%        4.345%       
Global Copy     8.472%       6.939%        6.939%       
Global Swap     8.425%       6.095%        4.448%       
Operand         8.231%       4.186%        1.477%       
Rotate          8.238%       6.306%        3.527%       
ReplaceNop      8.29%        7.167%        6.136%       
Delete          8.33%        7.246%        4.544%       
Instruction     8.157%       5.039%        0.525%       
Add Nops        8.471%       8.471%        4.143%       
OpcodeWidth     8.354%       6.517%        6.095%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.253%       1.476%        0.005%       
                                                        
Total           100%         72.108%       48.717%      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (9)                                                      Lowest Known Correct Cost (9)                                                   
                                                                                                                                                                
  .text                                                                           .text                                                                         
  .globl wcslen                                                                   .globl wcslen                                                                 
  .type wcslen, @function                                                         .type wcslen, @function                                                       
                                                                                                                                                                
#! file-offset 0                                                                #! file-offset 0                                                                
#! rip-offset  0                                                                #! rip-offset  0                                                                
#! capacity    0 bytes                                                          #! capacity    0 bytes                                                          
                                                                                                                                                                
# Text                           #  Line  RIP   Bytes  Opcode                   # Text                           #  Line  RIP   Bytes  Opcode                   
.wcslen:                         #        0     0      OPC=<label>              .wcslen:                         #        0     0      OPC=<label>              
  nop                            #  1     0     1      OPC=nop                    nop                            #  1     0     1      OPC=nop                  
  nop                            #  2     0x1   1      OPC=nop                    nop                            #  2     0x1   1      OPC=nop                  
  nop                            #  3     0x2   1      OPC=nop                    nop                            #  3     0x2   1      OPC=nop                  
  nop                            #  4     0x3   1      OPC=nop                    nop                            #  4     0x3   1      OPC=nop                  
  nop                            #  5     0x4   1      OPC=nop                    nop                            #  5     0x4   1      OPC=nop                  
  nop                            #  6     0x5   1      OPC=nop                    nop                            #  6     0x5   1      OPC=nop                  
  nop                            #  7     0x6   1      OPC=nop                    nop                            #  7     0x6   1      OPC=nop                  
  nop                            #  8     0x7   1      OPC=nop                    nop                            #  8     0x7   1      OPC=nop                  
  nop                            #  9     0x8   1      OPC=nop                    nop                            #  9     0x8   1      OPC=nop                  
  nop                            #  10    0x9   1      OPC=nop                    nop                            #  10    0x9   1      OPC=nop                  
  movl %edi, %edx                #  11    0xa   2      OPC=movl_r32_r32_1         movl %edi, %edx                #  11    0xa   2      OPC=movl_r32_r32_1       
  leaq -0x40(%rdx,%rdx,8), %rcx  #  12    0xc   5      OPC=leaq_r64_m64           leaq -0x40(%rdx,%rdx,8), %rcx  #  12    0xc   5      OPC=leaq_r64_m64         
  nop                            #  13    0x11  1      OPC=nop                    nop                            #  13    0x11  1      OPC=nop                  
  nop                            #  14    0x12  1      OPC=nop                    nop                            #  14    0x12  1      OPC=nop                  
  nop                            #  15    0x13  1      OPC=nop                    nop                            #  15    0x13  1      OPC=nop                  
  nop                            #  16    0x14  1      OPC=nop                    nop                            #  16    0x14  1      OPC=nop                  
  nop                            #  17    0x15  1      OPC=nop                    nop                            #  17    0x15  1      OPC=nop                  
  xorl %eax, %eax                #  18    0x16  2      OPC=xorl_r32_r32           xorl %eax, %eax                #  18    0x16  2      OPC=xorl_r32_r32         
  shll $0xfa, %ecx               #  19    0x18  3      OPC=shll_r32_imm8          shll $0xfa, %ecx               #  19    0x18  3      OPC=shll_r32_imm8        
  je .L_142ce0                   #  20    0x1b  2      OPC=je_label               je .L_142ce0                   #  20    0x1b  2      OPC=je_label             
  nopl %eax                      #  21    0x1d  3      OPC=nopl_r32               nopl %eax                      #  21    0x1d  3      OPC=nopl_r32             
.L_142cc0:                       #        0x20  0      OPC=<label>              .L_142cc0:                       #        0x20  0      OPC=<label>              
  addl $0x6, %edx                #  22    0x20  3      OPC=addl_r32_imm8          addl $0x6, %edx                #  22    0x20  3      OPC=addl_r32_imm8        
  movw (%r15,%rdx,1), %ax        #  23    0x23  5      OPC=movw_r16_m16           movw (%r15,%rdx,1), %ax        #  23    0x23  5      OPC=movw_r16_m16         
  nop                            #  24    0x28  1      OPC=nop                    nop                            #  24    0x28  1      OPC=nop                  
  nop                            #  25    0x29  1      OPC=nop                    nop                            #  25    0x29  1      OPC=nop                  
  nop                            #  26    0x2a  1      OPC=nop                    nop                            #  26    0x2a  1      OPC=nop                  
  nop                            #  27    0x2b  1      OPC=nop                    nop                            #  27    0x2b  1      OPC=nop                  
  nop                            #  28    0x2c  1      OPC=nop                    nop                            #  28    0x2c  1      OPC=nop                  
  nop                            #  29    0x2d  1      OPC=nop                    nop                            #  29    0x2d  1      OPC=nop                  
  nop                            #  30    0x2e  1      OPC=nop                    nop                            #  30    0x2e  1      OPC=nop                  
  nop                            #  31    0x2f  1      OPC=nop                    nop                            #  31    0x2f  1      OPC=nop                  
  nop                            #  32    0x30  1      OPC=nop                    nop                            #  32    0x30  1      OPC=nop                  
  nop                            #  33    0x31  1      OPC=nop                    nop                            #  33    0x31  1      OPC=nop                  
  negb %ah                       #  34    0x32  2      OPC=negb_rh                negb %ah                       #  34    0x32  2      OPC=negb_rh              
  jne .L_142cc0                  #  35    0x34  2      OPC=jne_label              jne .L_142cc0                  #  35    0x34  2      OPC=jne_label            
  subq %rdi, %rdx                #  36    0x36  3      OPC=subq_r64_r64_1         subq %rdi, %rdx                #  36    0x36  3      OPC=subq_r64_r64_1       
  nop                            #  37    0x39  1      OPC=nop                    nop                            #  37    0x39  1      OPC=nop                  
  nop                            #  38    0x3a  1      OPC=nop                    nop                            #  38    0x3a  1      OPC=nop                  
  nop                            #  39    0x3b  1      OPC=nop                    nop                            #  39    0x3b  1      OPC=nop                  
  nop                            #  40    0x3c  1      OPC=nop                    nop                            #  40    0x3c  1      OPC=nop                  
  orq %rdx, %rax                 #  41    0x3d  3      OPC=orq_r64_r64            orq %rdx, %rax                 #  41    0x3d  3      OPC=orq_r64_r64          
.L_142ce0:                       #        0x40  0      OPC=<label>              .L_142ce0:                       #        0x40  0      OPC=<label>              
  shrb $0x2, %al                 #  42    0x40  3      OPC=shrb_r8_imm8           shrb $0x2, %al                 #  42    0x40  3      OPC=shrb_r8_imm8         
  nop                            #  43    0x43  1      OPC=nop                    nop                            #  43    0x43  1      OPC=nop                  
  nop                            #  44    0x44  1      OPC=nop                    nop                            #  44    0x44  1      OPC=nop                  
  nop                            #  45    0x45  1      OPC=nop                    nop                            #  45    0x45  1      OPC=nop                  
  nop                            #  46    0x46  1      OPC=nop                    nop                            #  46    0x46  1      OPC=nop                  
  nop                            #  47    0x47  1      OPC=nop                    nop                            #  47    0x47  1      OPC=nop                  
  nop                            #  48    0x48  1      OPC=nop                    nop                            #  48    0x48  1      OPC=nop                  
  nop                            #  49    0x49  1      OPC=nop                    nop                            #  49    0x49  1      OPC=nop                  
  nop                            #  50    0x4a  1      OPC=nop                    nop                            #  50    0x4a  1      OPC=nop                  
  popq %r11                      #  51    0x4b  2      OPC=popq_r64_1             popq %r11                      #  51    0x4b  2      OPC=popq_r64_1           
  andl $0xe0, %r11d              #  52    0x4d  4      OPC=andl_r32_imm8          andl $0xe0, %r11d              #  52    0x4d  4      OPC=andl_r32_imm8        
  addq %r15, %r11                #  53    0x51  3      OPC=addq_r64_r64           addq %r15, %r11                #  53    0x51  3      OPC=addq_r64_r64         
  jmpq %r11                      #  54    0x54  3      OPC=jmpq_r64               jmpq %r11                      #  54    0x54  3      OPC=jmpq_r64             
                                                                                                                                                                
.size wcslen, .-wcslen                                                          .size wcslen, .-wcslen                                                          
                                                                                                                                                                

********************************************************************************

Progress Update: 

Lowest Cost Discovered (8)                                                      Lowest Known Correct Cost (8)                                                   
                                                                                                                                                                
  .text                                                                           .text                                                                         
  .globl wcslen                                                                   .globl wcslen                                                                 
  .type wcslen, @function                                                         .type wcslen, @function                                                       
                                                                                                                                                                
#! file-offset 0                                                                #! file-offset 0                                                                
#! rip-offset  0                                                                #! rip-offset  0                                                                
#! capacity    0 bytes                                                          #! capacity    0 bytes                                                          
                                                                                                                                                                
# Text                           #  Line  RIP   Bytes  Opcode                   # Text                           #  Line  RIP   Bytes  Opcode                   
.wcslen:                         #        0     0      OPC=<label>              .wcslen:                         #        0     0      OPC=<label>              
  movl %edi, %edx                #  1     0     2      OPC=movl_r32_r32           movl %edi, %edx                #  1     0     2      OPC=movl_r32_r32         
  leal -0x40(%rdx,%rdx,8), %ecx  #  2     0x2   4      OPC=leal_r32_m32           leal -0x40(%rdx,%rdx,8), %ecx  #  2     0x2   4      OPC=leal_r32_m32         
  xorq %rax, %rax                #  3     0x6   3      OPC=xorq_r64_r64           xorq %rax, %rax                #  3     0x6   3      OPC=xorq_r64_r64         
  shlq $0xf9, %rcx               #  4     0x9   4      OPC=shlq_r64_imm8          shlq $0xf9, %rcx               #  4     0x9   4      OPC=shlq_r64_imm8        
  nop                            #  5     0xd   1      OPC=nop                    nop                            #  5     0xd   1      OPC=nop                  
  nop                            #  6     0xe   1      OPC=nop                    nop                            #  6     0xe   1      OPC=nop                  
  nop                            #  7     0xf   1      OPC=nop                    nop                            #  7     0xf   1      OPC=nop                  
  nop                            #  8     0x10  1      OPC=nop                    nop                            #  8     0x10  1      OPC=nop                  
  nop                            #  9     0x11  1      OPC=nop                    nop                            #  9     0x11  1      OPC=nop                  
  nop                            #  10    0x12  1      OPC=nop                    nop                            #  10    0x12  1      OPC=nop                  
  nop                            #  11    0x13  1      OPC=nop                    nop                            #  11    0x13  1      OPC=nop                  
  nop                            #  12    0x14  1      OPC=nop                    nop                            #  12    0x14  1      OPC=nop                  
  nop                            #  13    0x15  1      OPC=nop                    nop                            #  13    0x15  1      OPC=nop                  
  je .L_142ce0                   #  14    0x16  2      OPC=je_label               je .L_142ce0                   #  14    0x16  2      OPC=je_label             
  nop                            #  15    0x18  1      OPC=nop                    nop                            #  15    0x18  1      OPC=nop                  
  nop                            #  16    0x19  1      OPC=nop                    nop                            #  16    0x19  1      OPC=nop                  
  nop                            #  17    0x1a  1      OPC=nop                    nop                            #  17    0x1a  1      OPC=nop                  
  nop                            #  18    0x1b  1      OPC=nop                    nop                            #  18    0x1b  1      OPC=nop                  
  nop                            #  19    0x1c  1      OPC=nop                    nop                            #  19    0x1c  1      OPC=nop                  
  nop                            #  20    0x1d  1      OPC=nop                    nop                            #  20    0x1d  1      OPC=nop                  
  nop                            #  21    0x1e  1      OPC=nop                    nop                            #  21    0x1e  1      OPC=nop                  
  nop                            #  22    0x1f  1      OPC=nop                    nop                            #  22    0x1f  1      OPC=nop                  
.L_142cc0:                       #        0x20  0      OPC=<label>              .L_142cc0:                       #        0x20  0      OPC=<label>              
  addl $0x6, %edx                #  23    0x20  3      OPC=addl_r32_imm8          addl $0x6, %edx                #  23    0x20  3      OPC=addl_r32_imm8        
  movw (%r15,%rdx,1), %ax        #  24    0x23  5      OPC=movw_r16_m16           movw (%r15,%rdx,1), %ax        #  24    0x23  5      OPC=movw_r16_m16         
  shrb $0x1, %ah                 #  25    0x28  2      OPC=shrb_rh_one            shrb $0x1, %ah                 #  25    0x28  2      OPC=shrb_rh_one          
  jne .L_142cc0                  #  26    0x2a  2      OPC=jne_label              jne .L_142cc0                  #  26    0x2a  2      OPC=jne_label            
  nop                            #  27    0x2c  1      OPC=nop                    nop                            #  27    0x2c  1      OPC=nop                  
  nop                            #  28    0x2d  1      OPC=nop                    nop                            #  28    0x2d  1      OPC=nop                  
  nop                            #  29    0x2e  1      OPC=nop                    nop                            #  29    0x2e  1      OPC=nop                  
  nop                            #  30    0x2f  1      OPC=nop                    nop                            #  30    0x2f  1      OPC=nop                  
  nop                            #  31    0x30  1      OPC=nop                    nop                            #  31    0x30  1      OPC=nop                  
  nop                            #  32    0x31  1      OPC=nop                    nop                            #  32    0x31  1      OPC=nop                  
  subl %edi, %edx                #  33    0x32  2      OPC=subl_r32_r32_1         subl %edi, %edx                #  33    0x32  2      OPC=subl_r32_r32_1       
  nop                            #  34    0x34  1      OPC=nop                    nop                            #  34    0x34  1      OPC=nop                  
  nop                            #  35    0x35  1      OPC=nop                    nop                            #  35    0x35  1      OPC=nop                  
  nop                            #  36    0x36  1      OPC=nop                    nop                            #  36    0x36  1      OPC=nop                  
  nop                            #  37    0x37  1      OPC=nop                    nop                            #  37    0x37  1      OPC=nop                  
  nop                            #  38    0x38  1      OPC=nop                    nop                            #  38    0x38  1      OPC=nop                  
  nop                            #  39    0x39  1      OPC=nop                    nop                            #  39    0x39  1      OPC=nop                  
  nop                            #  40    0x3a  1      OPC=nop                    nop                            #  40    0x3a  1      OPC=nop                  
  nop                            #  41    0x3b  1      OPC=nop                    nop                            #  41    0x3b  1      OPC=nop                  
  nop                            #  42    0x3c  1      OPC=nop                    nop                            #  42    0x3c  1      OPC=nop                  
  nop                            #  43    0x3d  1      OPC=nop                    nop                            #  43    0x3d  1      OPC=nop                  
  orl %edx, %eax                 #  44    0x3e  2      OPC=orl_r32_r32            orl %edx, %eax                 #  44    0x3e  2      OPC=orl_r32_r32          
.L_142ce0:                       #        0x40  0      OPC=<label>              .L_142ce0:                       #        0x40  0      OPC=<label>              
  nop                            #  45    0x40  1      OPC=nop                    nop                            #  45    0x40  1      OPC=nop                  
  nop                            #  46    0x41  1      OPC=nop                    nop                            #  46    0x41  1      OPC=nop                  
  nop                            #  47    0x42  1      OPC=nop                    nop                            #  47    0x42  1      OPC=nop                  
  nop                            #  48    0x43  1      OPC=nop                    nop                            #  48    0x43  1      OPC=nop                  
  nop                            #  49    0x44  1      OPC=nop                    nop                            #  49    0x44  1      OPC=nop                  
  nop                            #  50    0x45  1      OPC=nop                    nop                            #  50    0x45  1      OPC=nop                  
  nop                            #  51    0x46  1      OPC=nop                    nop                            #  51    0x46  1      OPC=nop                  
  nop                            #  52    0x47  1      OPC=nop                    nop                            #  52    0x47  1      OPC=nop                  
  nop                            #  53    0x48  1      OPC=nop                    nop                            #  53    0x48  1      OPC=nop                  
  nop                            #  54    0x49  1      OPC=nop                    nop                            #  54    0x49  1      OPC=nop                  
  nop                            #  55    0x4a  1      OPC=nop                    nop                            #  55    0x4a  1      OPC=nop                  
  shrb $0x2, %al                 #  56    0x4b  3      OPC=shrb_r8_imm8           shrb $0x2, %al                 #  56    0x4b  3      OPC=shrb_r8_imm8         
  nop                            #  57    0x4e  1      OPC=nop                    nop                            #  57    0x4e  1      OPC=nop                  
  nop                            #  58    0x4f  1      OPC=nop                    nop                            #  58    0x4f  1      OPC=nop                  
  popq %r11                      #  59    0x50  2      OPC=popq_r64_1             popq %r11                      #  59    0x50  2      OPC=popq_r64_1           
  andl $0xe0, %r11d              #  60    0x52  4      OPC=andl_r32_imm8          andl $0xe0, %r11d              #  60    0x52  4      OPC=andl_r32_imm8        
  addq %r15, %r11                #  61    0x56  3      OPC=addq_r64_r64           addq %r15, %r11                #  61    0x56  3      OPC=addq_r64_r64         
  jmpq %r11                      #  62    0x59  3      OPC=jmpq_r64               jmpq %r11                      #  62    0x59  3      OPC=jmpq_r64             
                                                                                                                                                                
.size wcslen, .-wcslen                                                          .size wcslen, .-wcslen                                                          
                                                                                                                                                                

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  88.0673s
Iterations/s:                  2270.99

Starting cost:                 10
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3055%      7.2285%       6.5045%      
Local Swap      8.2885%      5.471%        4.417%       
Global Copy     8.33%        6.8375%       6.8375%      
Global Swap     8.4315%      6.09%         4.529%       
Operand         8.3085%      4.194%        1.398%       
Rotate          8.2285%      6.2545%       3.5615%      
ReplaceNop      8.3795%      7.2205%       6.2115%      
Delete          8.282%       7.221%        4.5415%      
Instruction     8.2745%      5.0935%       0.508%       
Add Nops        8.481%       8.481%        4.1465%      
OpcodeWidth     8.3105%      6.5425%       6.138%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.38%        1.4985%       0.0025%      
                                                        
Total           100%         72.1325%      48.7955%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  137.971s
Iterations/s:                  2174.37

Starting cost:                 10
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted        
                                                           
Opcode          8.316%       7.34033%      6.662%          
Local Swap      8.33767%     5.604%        4.591%          
Global Copy     8.33267%     6.962%        6.962%          
Global Swap     8.39767%     6.24267%      4.762%          
Operand         8.32133%     4.17033%      1.44367%        
Rotate          8.192%       6.39633%      3.76433%        
ReplaceNop      8.36933%     7.312%        6.385%          
Delete          8.30933%     7.32067%      4.83%           
Instruction     8.37%        5.17033%      0.548333%       
Add Nops        8.43133%     8.43133%      4.42%           
OpcodeWidth     8.26567%     6.638%        6.258%          
2xWeighted      0%           0%            0%              
Memory+Swap     8.357%       1.62367%      0.00266667%     
                                                           
Total           100%         73.2117%      50.629%         

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  188.031s
Iterations/s:                  2127.3

Starting cost:                 10
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3145%      7.39275%      6.73275%     
Local Swap      8.36075%     5.688%        4.699%       
Global Copy     8.3465%      7.037%        7.037%       
Global Swap     8.3745%      6.31525%      4.90675%     
Operand         8.31575%     4.17%         1.4565%      
Rotate          8.215%       6.502%        3.906%       
ReplaceNop      8.37325%     7.3735%       6.48475%     
Delete          8.32725%     7.374%        5.02075%     
Instruction     8.37725%     5.1765%       0.5685%      
Add Nops        8.38175%     8.38175%      4.595%       
OpcodeWidth     8.2695%      6.7285%       6.3665%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.344%       1.63125%      0.003%       
                                                        
Total           100%         73.7705%      51.7765%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  236.404s
Iterations/s:                  2115.03

Starting cost:                 10
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.352%       7.4702%       6.8396%      
Local Swap      8.335%       5.6792%       4.7448%      
Global Copy     8.3426%      7.0906%       7.0906%      
Global Swap     8.4186%      6.4278%       5.0668%      
Operand         8.3348%      4.1998%       1.4774%      
Rotate          8.2522%      6.5862%       4.0342%      
ReplaceNop      8.3646%      7.3956%       6.5476%      
Delete          8.2956%      7.3804%       5.1288%      
Instruction     8.3476%      5.162%        0.5532%      
Add Nops        8.3538%      8.3538%       4.6982%      
OpcodeWidth     8.282%       6.8128%       6.462%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.3212%      1.6082%       0.0024%      
                                                        
Total           100%         74.1666%      52.6456%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     d6 35 17 80 88 19 8b 42
%rcx     92 37 2f 7f 46 55 78 e5
%rdx     fc 78 92 ea 7c 75 b1 c4
%rbx     db 4c 06 ea c4 97 8c d0
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 0a 10 7d 3e
%rdi     00 00 00 00 0a 10 7d 64
%r8      af e3 32 65 8f 99 8b 46
%r9      f6 d7 fb 04 d1 1e 8b 63
%r10     bb a8 3b 9a 17 7f 0d 0b
%r11     12 c7 2f 05 1f b5 f1 1d
%r12     9e b7 4a 62 ac e0 4b ae
%r13     e6 ea 94 a6 a9 f9 c4 a2
%r14     bf 90 9c 5f bf 6a 15 16
%r15     00 00 00 00 04 14 8f 10

%ymm0    01 58 8d bb a2 29 e2 4b 72 81 80 82 c0 2c 33 ce 3f a0 6c 9c 3f 1f 79 09 8e 71 9c 95 14 fd ad c6
%ymm1    31 f0 2c 94 93 02 a1 fc 70 ba 53 71 5b 2c d6 ce 50 20 d8 fe 7a 70 31 55 09 35 36 34 72 f4 cc ed
%ymm2    ef b4 6c 92 25 8a 2e bc 4b 5c 8a 57 c3 83 23 cb 07 c0 ee 6e 63 f1 61 df c9 f3 f7 67 ff ab a3 47
%ymm3    61 4d ea 00 28 ea 61 e2 04 49 cb fb 3b 37 af ff 44 47 46 4f 70 14 e6 b0 3e bb 63 c6 b8 97 9f a0
%ymm4    c3 f1 be 74 a8 ac 4e db 5c 0d 8e 31 71 09 b0 fa f3 25 2d 3e 57 ef 11 b8 b7 a7 36 96 f3 9c 7c 5c
%ymm5    3b d9 4f 43 3a 21 27 53 7b b4 95 de dc fa aa 0d 7e a5 c3 7a cc 33 a4 89 d6 38 41 03 55 27 90 bf
%ymm6    2f cb ab fa a1 90 17 c1 48 12 3d 7c 02 8f 2f e9 08 3f 09 c3 49 91 cc 22 f4 f9 39 8b 9c 0d 84 1d
%ymm7    9e 21 6e 06 ee 64 8d 8d df 3d 46 14 5d 39 04 2d 75 1f 2e 40 11 b6 6f ba f6 92 e0 ba b2 cc f5 28
%ymm8    09 d6 a2 09 2b ba 49 c3 fe 71 2e f5 05 ba 8f e9 b0 06 9b 45 db 15 49 97 5b 6a c0 60 86 20 f9 69
%ymm9    e8 c3 4f cc 02 f9 48 3c eb 34 8e d3 39 6a 67 a6 53 69 da cb 08 99 57 ea 95 65 c3 7b 23 c5 f7 79
%ymm10   9b 0b 62 4a 6e 58 2b 40 90 b9 1c ab 61 2e 99 59 1e e6 84 98 73 3f ba ad 77 1f 94 e5 4c 7b dc 2a
%ymm11   20 73 c9 e3 8a ca ed ee eb 89 f3 8d 75 2f e8 b4 6b b0 21 65 fe 90 6d c3 37 b2 af cb 9c 20 ba 69
%ymm12   67 ae 47 e1 6a 8c c8 02 db 48 57 b7 b7 ff be 05 9e 57 58 93 41 d2 76 df 66 df 0c fd 2d e8 19 62
%ymm13   94 31 89 a3 30 5f 94 81 58 d7 15 9a a9 22 08 f1 e8 69 e9 96 10 cd 3c 78 25 ff 8b f4 c9 be 4c 0f
%ymm14   ed 7f f0 e8 a2 b7 d0 fe 56 d6 c1 ca c4 90 a2 c2 21 1d eb e3 9a 13 cd 36 6a ea 49 52 fd 28 8b 18
%ymm15   dd 23 97 37 67 5e ff e4 4f a6 83 c2 17 d3 9b 0d 44 f4 ed 6d 77 01 3c 06 86 7b 26 91 47 b9 09 82

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   8d a0 ee d3 6c c9 47 23 
00000006 fffffff0   v v v v v v v v   4c 5d 28 43 f0 59 a9 f4 
00000006 ffffffe8   v v v v v v v v   05 2c ca 06 5c 58 1c c2 
00000006 ffffffe0   v v v v v v v v   69 ee d1 ad 6b a7 f1 cf 

[ 00000000 0e250c98 - 00000000 0e250c00 ]
[ 2 valid rows shown ]

00000000 0e250c78   v v v v v v v v   00 00 00 00 6d 26 21 d3 
00000000 0e250c70   v v v v . . . .   03 c4 d5 7b 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (8)                                                 Lowest Known Correct Cost (8)                                              
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x2   1      OPC=nop                  
  xorl %eax, %eax           #  4     0x3   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  4     0x3   2      OPC=xorl_r32_r32         
  nop                       #  5     0x5   1      OPC=nop                    nop                       #  5     0x5   1      OPC=nop                  
  nop                       #  6     0x6   1      OPC=nop                    nop                       #  6     0x6   1      OPC=nop                  
  nop                       #  7     0x7   1      OPC=nop                    nop                       #  7     0x7   1      OPC=nop                  
  movq %rdi, %rdx           #  8     0x8   3      OPC=movq_r64_r64_1         movq %rdi, %rdx           #  8     0x8   3      OPC=movq_r64_r64_1       
  movl %edx, %edi           #  9     0xb   2      OPC=movl_r32_r32           movl %edx, %edi           #  9     0xb   2      OPC=movl_r32_r32         
  movl (%r15,%rdi,1), %ecx  #  10    0xd   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  10    0xd   4      OPC=movl_r32_m32         
  testl %r15d, %ecx         #  11    0x11  3      OPC=testl_r32_r32          testl %r15d, %ecx         #  11    0x11  3      OPC=testl_r32_r32        
  nop                       #  12    0x14  1      OPC=nop                    nop                       #  12    0x14  1      OPC=nop                  
  je .L_142ce0              #  13    0x15  2      OPC=je_label               je .L_142ce0              #  13    0x15  2      OPC=je_label             
  nop                       #  14    0x17  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                  
  nop                       #  15    0x18  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                  
  nop                       #  16    0x19  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                  
  nop                       #  17    0x1a  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                  
  nop                       #  18    0x1b  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                  
  nop                       #  19    0x1c  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                  
  nop                       #  20    0x1d  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                  
  nop                       #  21    0x1e  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                  
  nop                       #  22    0x1f  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32         
  sarb $0x1, %ah            #  25    0x27  2      OPC=sarb_rh_one            sarb $0x1, %ah            #  25    0x27  2      OPC=sarb_rh_one          
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label              jne .L_142cc0             #  26    0x29  2      OPC=jne_label            
  subl %edi, %edx           #  27    0x2b  2      OPC=subl_r32_r32           subl %edi, %edx           #  27    0x2b  2      OPC=subl_r32_r32         
  nop                       #  28    0x2d  1      OPC=nop                    nop                       #  28    0x2d  1      OPC=nop                  
  nop                       #  29    0x2e  1      OPC=nop                    nop                       #  29    0x2e  1      OPC=nop                  
  nop                       #  30    0x2f  1      OPC=nop                    nop                       #  30    0x2f  1      OPC=nop                  
  orl %edx, %eax            #  31    0x30  2      OPC=orl_r32_r32            orl %edx, %eax            #  31    0x30  2      OPC=orl_r32_r32          
  nop                       #  32    0x32  1      OPC=nop                    nop                       #  32    0x32  1      OPC=nop                  
  nop                       #  33    0x33  1      OPC=nop                    nop                       #  33    0x33  1      OPC=nop                  
  nop                       #  34    0x34  1      OPC=nop                    nop                       #  34    0x34  1      OPC=nop                  
  nop                       #  35    0x35  1      OPC=nop                    nop                       #  35    0x35  1      OPC=nop                  
  nop                       #  36    0x36  1      OPC=nop                    nop                       #  36    0x36  1      OPC=nop                  
  nop                       #  37    0x37  1      OPC=nop                    nop                       #  37    0x37  1      OPC=nop                  
  nop                       #  38    0x38  1      OPC=nop                    nop                       #  38    0x38  1      OPC=nop                  
  nop                       #  39    0x39  1      OPC=nop                    nop                       #  39    0x39  1      OPC=nop                  
  nop                       #  40    0x3a  1      OPC=nop                    nop                       #  40    0x3a  1      OPC=nop                  
  nop                       #  41    0x3b  1      OPC=nop                    nop                       #  41    0x3b  1      OPC=nop                  
  nop                       #  42    0x3c  1      OPC=nop                    nop                       #  42    0x3c  1      OPC=nop                  
  shrl $0x2, %eax           #  43    0x3d  3      OPC=shrl_r32_imm8          shrl $0x2, %eax           #  43    0x3d  3      OPC=shrl_r32_imm8        
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  popq %r11                 #  44    0x40  2      OPC=popq_r64_1             popq %r11                 #  44    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64           addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64               jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  48.4878s
Iterations/s:                  2062.38

Starting cost:                 9
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.359%       7.179%        6.437%       
Local Swap      8.35%        5.378%        4.291%       
Global Copy     8.372%       6.865%        6.865%       
Global Swap     8.368%       5.956%        4.449%       
Operand         8.187%       3.989%        1.368%       
Rotate          8.238%       6.259%        3.631%       
ReplaceNop      8.453%       7.327%        6.249%       
Delete          8.36%        7.236%        4.397%       
Instruction     8.224%       4.926%        0.508%       
Add Nops        8.442%       8.442%        4.017%       
OpcodeWidth     8.31%        6.501%        6.124%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.337%       1.491%        0.005%       
                                                        
Total           100%         71.549%       48.341%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  98.6861s
Iterations/s:                  2026.63

Starting cost:                 9
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.306%       7.218%        6.502%       
Local Swap      8.345%       5.518%        4.4955%      
Global Copy     8.363%       6.879%        6.879%       
Global Swap     8.2875%      5.938%        4.4995%      
Operand         8.2385%      4.0085%       1.328%       
Rotate          8.2755%      6.315%        3.6425%      
ReplaceNop      8.398%       7.2675%       6.245%       
Delete          8.3115%      7.193%        4.495%       
Instruction     8.293%       5.064%        0.5095%      
Add Nops        8.5045%      8.5045%       4.1215%      
OpcodeWidth     8.3075%      6.6025%       6.2255%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.37%        1.492%        0.0025%      
                                                        
Total           100%         72%           48.9455%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  143.452s
Iterations/s:                  2091.29

Starting cost:                 9
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted        
                                                           
Opcode          8.33033%     7.231%        6.47467%        
Local Swap      8.371%       5.55433%      4.523%          
Global Copy     8.34833%     6.80233%      6.80233%        
Global Swap     8.326%       5.90233%      4.422%          
Operand         8.214%       4.02367%      1.31767%        
Rotate          8.31367%     6.28767%      3.64567%        
ReplaceNop      8.36133%     7.19567%      6.166%          
Delete          8.36133%     7.18467%      4.50033%        
Instruction     8.30967%     5.054%        0.524333%       
Add Nops        8.40433%     8.40433%      4.11267%        
OpcodeWidth     8.34633%     6.60567%      6.19533%        
2xWeighted      0%           0%            0%              
Memory+Swap     8.31367%     1.48033%      0.00166667%     
                                                           
Total           100%         71.726%       48.6857%        

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  195.595s
Iterations/s:                  2045.05

Starting cost:                 9
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.30575%     7.23625%      6.501%       
Local Swap      8.3545%      5.53975%      4.5305%      
Global Copy     8.32125%     6.7975%       6.7975%      
Global Swap     8.32925%     5.9125%       4.45925%     
Operand         8.243%       4.053%        1.37025%     
Rotate          8.32%        6.335%        3.693%       
ReplaceNop      8.3745%      7.213%        6.1935%      
Delete          8.34325%     7.173%        4.55025%     
Instruction     8.3175%      5.06525%      0.53025%     
Add Nops        8.384%       8.384%        4.16025%     
OpcodeWidth     8.3465%      6.62225%      6.2065%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3605%      1.52375%      0.00125%     
                                                        
Total           100%         71.8552%      48.9935%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  252.406s
Iterations/s:                  1980.93

Starting cost:                 9
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.2922%      7.2918%       6.607%       
Local Swap      8.3408%      5.5898%       4.6116%      
Global Copy     8.3318%      6.8924%       6.8924%      
Global Swap     8.3148%      6.0346%       4.6476%      
Operand         8.2632%      4.128%        1.4334%      
Rotate          8.3534%      6.466%        3.8624%      
ReplaceNop      8.3842%      7.2944%       6.3416%      
Delete          8.3156%      7.2294%       4.7666%      
Instruction     8.314%       5.0974%       0.5404%      
Add Nops        8.419%       8.419%        4.3636%      
OpcodeWidth     8.3366%      6.7132%       6.3168%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3344%      1.526%        0.001%       
                                                        
Total           100%         72.682%       50.3844%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     17 40 5f 3a 8e c2 26 c3
%rcx     e6 17 8c 15 bb 40 32 6a
%rdx     ea a1 99 1e 5d 02 bc 67
%rbx     60 ed 3b 59 b7 66 54 48
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 3e eb a8 d1
%rdi     00 00 00 00 3e eb ac d2
%r8      fc 98 0a dd 0c 2d 01 e7
%r9      39 d4 cd 20 d4 47 b8 e8
%r10     e0 40 32 f9 94 a0 15 8d
%r11     e1 0e 4f 42 8b 67 91 94
%r12     3a 43 37 4b b4 3f c9 db
%r13     65 62 2d 2d 3a fe f5 24
%r14     14 50 2d 5e e7 10 a0 c1
%r15     00 00 00 00 0a 19 c1 50

%ymm0    71 3e 0d 30 fd c3 e1 24 5d 6a 7d 6b c9 95 a3 ee 19 b4 bf 73 d1 66 ba dc 5b 69 5f 7e e3 a4 3c 96
%ymm1    b7 13 a9 48 81 69 75 cc 89 17 f8 54 71 ea 35 4d 88 5a 36 22 df 53 e6 2c 1c e6 4e 08 5a 9b d6 8a
%ymm2    4a a1 e8 6e 21 c0 e3 8f a5 a0 1f e9 b7 57 c3 56 e0 63 b3 bb 0d 80 46 3f 67 00 92 02 b6 67 e2 3c
%ymm3    76 e2 9f 69 eb a5 76 97 f4 88 74 f6 90 42 5a 08 71 b1 be c9 fa 8b 77 dd 42 97 24 43 1c a3 85 f9
%ymm4    2d 6b 39 98 c4 df cb d4 91 18 2b 00 12 0b 15 ff 56 a5 71 c3 10 40 f9 71 51 9f 15 a0 b8 0f ea b7
%ymm5    09 6c 2e d3 53 b1 a3 a0 54 20 a9 82 8e 6e a9 c0 d9 de 89 e8 43 05 a0 fc 3a 48 8f de 05 73 f6 11
%ymm6    f2 85 85 8d 72 f9 b0 72 a2 59 54 d0 3f dc f1 48 33 05 43 a4 b6 cf dc a3 33 25 05 9d 74 59 91 33
%ymm7    a9 1f 1c 48 db eb fd 14 db 38 c3 2e 70 d7 97 5f cc b0 c5 8b db ec 4d 4a 2d a0 97 3b 06 05 a8 e7
%ymm8    38 9b bc 81 0a 41 19 3e 6a f7 f8 e1 68 a8 d2 e0 3c 7e c9 59 da a2 fa ce 1c b7 80 1e cc 51 11 b0
%ymm9    4f e5 cc 28 d4 40 30 b7 cb 66 ab 92 1c 2e d7 ec df b7 06 e1 d1 b5 02 e5 62 61 97 05 6f 1d f2 b2
%ymm10   d3 fe f2 04 05 62 30 04 94 8c 1c f6 dc 2c 8d e3 3d 8e e5 f3 ad 29 62 7a 7d d5 fd ec c7 a6 b2 72
%ymm11   07 05 3c 86 13 00 9d 0a e2 7b 06 33 ad e2 83 ca 99 93 9d 39 05 07 50 82 d4 80 17 90 bb dc 98 af
%ymm12   a5 cc 34 b7 e4 67 88 7e 25 ef 63 81 e5 6f 71 95 e5 ee c1 1a 36 13 c6 ca 11 8c 03 db 30 c8 25 30
%ymm13   10 b9 fb 3d d7 4a 29 ad 84 34 ea 96 b5 65 17 63 43 e5 4b a0 f3 ce 2c 5e 68 71 46 f3 b9 c0 29 05
%ymm14   35 62 bb a1 66 a7 96 5f 0b 8c 20 71 e2 16 fc e9 80 8c 24 a6 c9 89 9e 21 3e cd 8d ed 36 15 53 a2
%ymm15   a1 06 7b dc 03 00 51 67 b0 d8 ec 87 b9 37 1f 4d 24 2d 93 4e 7a 64 77 ac 0e e8 4b d9 fb 41 12 41

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   7f 97 6b da 12 25 4e 60 
00000006 fffffff0   v v v v v v v v   19 fd d4 4e 34 2a 6e d3 
00000006 ffffffe8   v v v v v v v v   3f ac e5 20 ad 24 a0 10 
00000006 ffffffe0   v v v v v v v v   49 6f ef b9 09 9a 5e 3b 

[ 00000000 49057198 - 00000000 49056980 ]
[ 15 valid rows shown ]

00000000 49056e90   . . . . . . v v   00 00 00 00 00 00 00 00 
00000000 49056e88   v v v v v v v v   00 00 f3 04 19 a3 28 46 
00000000 49056e80   v v v v v v v v   ee 0a bd 4c 99 31 a8 6a 
00000000 49056e78   v v v v v v v v   fd f3 c7 60 00 d9 5b d5 
00000000 49056e70   v v v v v v v v   89 08 70 28 2f 3a f5 ff 
00000000 49056e68   v v v v v v v v   be 50 dc d2 b5 1e 89 a2 
00000000 49056e60   v v v v v v v v   70 8b a3 2f 34 b5 a3 9c 
00000000 49056e58   v v v v v v v v   f3 ee 05 2b 4f 52 64 61 
00000000 49056e50   v v v v v v v v   d9 36 33 30 7b a5 23 ec 
00000000 49056e48   v v v v v v v v   9a be 49 13 ad fe fe 41 
00000000 49056e40   v v v v v v v v   57 ee 8c 98 c2 b4 97 c7 
00000000 49056e38   v v v v v v v v   9f b3 c7 ee 79 2e 2d a9 
00000000 49056e30   v v v v v v v v   bb 8e 0d 8f 0a 65 a3 87 
00000000 49056e28   v v v v v v v v   10 4b 15 6c a7 10 b5 bf 
00000000 49056e20   v v v v v v . .   2c d7 01 fa 15 e4 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (13)                                                Lowest Known Correct Cost (13)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  movl %edi, %edi           #  2     0x2   2      OPC=movl_r32_r32           movl %edi, %edi           #  2     0x2   2      OPC=movl_r32_r32         
  movl (%r15,%rdi,1), %ecx  #  3     0x4   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  3     0x4   4      OPC=movl_r32_m32         
  movq %rdi, %rdx           #  4     0x8   3      OPC=movq_r64_r64           movq %rdi, %rdx           #  4     0x8   3      OPC=movq_r64_r64         
  testl %edi, %ecx          #  5     0xb   2      OPC=testl_r32_r32          testl %edi, %ecx          #  5     0xb   2      OPC=testl_r32_r32        
  nop                       #  6     0xd   1      OPC=nop                    nop                       #  6     0xd   1      OPC=nop                  
  je .L_142ce0              #  7     0xe   2      OPC=je_label               je .L_142ce0              #  7     0xe   2      OPC=je_label             
  movl %edi, %edi           #  8     0x10  2      OPC=movl_r32_r32_1         movl %edi, %edi           #  8     0x10  2      OPC=movl_r32_r32_1       
  nop                       #  9     0x12  1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                  
  nop                       #  10    0x13  1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                  
  nop                       #  11    0x14  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                  
  nop                       #  12    0x15  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                  
  nop                       #  13    0x16  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                  
  nop                       #  14    0x17  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                  
  nop                       #  15    0x18  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                  
  nop                       #  16    0x19  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                  
  nop                       #  17    0x1a  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                  
  nop                       #  18    0x1b  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                  
  nop                       #  19    0x1c  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                  
  nop                       #  20    0x1d  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                  
  nop                       #  21    0x1e  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                  
  nop                       #  22    0x1f  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32         
  salw $0x1, %ax            #  25    0x27  3      OPC=salw_r16_one           salw $0x1, %ax            #  25    0x27  3      OPC=salw_r16_one         
  jne .L_142cc0             #  26    0x2a  2      OPC=jne_label              jne .L_142cc0             #  26    0x2a  2      OPC=jne_label            
  orl %edx, %eax            #  27    0x2c  2      OPC=orl_r32_r32            orl %edx, %eax            #  27    0x2c  2      OPC=orl_r32_r32          
  nop                       #  28    0x2e  1      OPC=nop                    nop                       #  28    0x2e  1      OPC=nop                  
  subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32           subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32         
  sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8        
  nop                       #  31    0x34  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                  
  nop                       #  32    0x35  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                  
  nop                       #  33    0x36  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                  
  nop                       #  34    0x37  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                  
  nop                       #  35    0x38  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                  
  nop                       #  36    0x39  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                  
  nop                       #  37    0x3a  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                  
  nop                       #  38    0x3b  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                  
  nop                       #  39    0x3c  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                  
  nop                       #  40    0x3d  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                  
  nop                       #  41    0x3e  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                  
  nop                       #  42    0x3f  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  popq %r11                 #  43    0x40  2      OPC=popq_r64_1             popq %r11                 #  43    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64           addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64               jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  74.4094s
Iterations/s:                  1343.92

Starting cost:                 17
Lowest cost:                   13
Lowest correct cost:           13

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.207%       7.81%         7.574%       
Local Swap      8.323%       4.296%        3.655%       
Global Copy     8.349%       7.76%         7.76%        
Global Swap     8.32%        7.447%        6.718%       
Operand         8.316%       4.332%        2.09%        
Rotate          8.265%       7.546%        5.767%       
ReplaceNop      8.388%       7.973%        7.604%       
Delete          8.435%       8.027%        6.806%       
Instruction     8.33%        4.967%        0.734%       
Add Nops        8.362%       8.362%        6.552%       
OpcodeWidth     8.436%       7.688%        7.453%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.269%       1.561%        0.003%       
                                                        
Total           100%         77.769%       62.716%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  242.007s
Iterations/s:                  826.422

Starting cost:                 17
Lowest cost:                   13
Lowest correct cost:           13

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.322%       8.048%        7.882%       
Local Swap      8.3125%      4.391%        3.7475%      
Global Copy     8.3025%      7.905%        7.905%       
Global Swap     8.306%       7.6945%       7.138%       
Operand         8.335%       4.5405%       2.4225%      
Rotate          8.2725%      7.773%        6.2015%      
ReplaceNop      8.4295%      8.1325%       7.8735%      
Delete          8.384%       8.097%        7.011%       
Instruction     8.3785%      4.9535%       0.735%       
Add Nops        8.3095%      8.3095%       6.749%       
OpcodeWidth     8.378%       7.837%        7.6545%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.27%        1.6195%       0.0015%      
                                                        
Total           100%         79.301%       65.321%      

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  588.63s
Iterations/s:                  509.658

Starting cost:                 17
Lowest cost:                   13
Lowest correct cost:           13

Move Type       Proposed     Succeeded     Accepted      
                                                         
Opcode          8.31667%     8.098%        7.96533%      
Local Swap      8.264%       4.418%        3.746%        
Global Copy     8.30167%     7.992%        7.992%        
Global Swap     8.24667%     7.76433%      7.296%        
Operand         8.35867%     4.76667%      2.644%        
Rotate          8.27533%     7.88033%      6.423%        
ReplaceNop      8.458%       8.222%        8.01533%      
Delete          8.372%       8.14467%      7.06633%      
Instruction     8.405%       5.02333%      0.737333%     
Add Nops        8.343%       8.343%        6.86%         
OpcodeWidth     8.35133%     7.90667%      7.75133%      
2xWeighted      0%           0%            0%            
Memory+Swap     8.30767%     1.64167%      0.001%        
                                                         
Total           100%         80.2007%      66.4977%      

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  1029.84s
Iterations/s:                  388.411

Starting cost:                 17
Lowest cost:                   13
Lowest correct cost:           13

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.34075%     8.1555%       8.04475%     
Local Swap      8.26975%     4.46175%      3.7615%      
Global Copy     8.2885%      8.03025%      8.03025%     
Global Swap     8.284%       7.8685%       7.4645%      
Operand         8.319%       4.9615%       2.8335%      
Rotate          8.278%       7.94475%      6.5425%      
ReplaceNop      8.42775%     8.2315%       8.06125%     
Delete          8.35875%     8.1695%       7.1055%      
Instruction     8.39925%     5.0315%       0.75025%     
Add Nops        8.35025%     8.35025%      6.904%       
OpcodeWidth     8.37175%     7.98325%      7.84775%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.31225%     1.644%        0.00075%     
                                                        
Total           100%         80.8323%      67.3465%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  1632.17s
Iterations/s:                  306.341

Starting cost:                 17
Lowest cost:                   13
Lowest correct cost:           13

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3414%      8.1816%       8.084%       
Local Swap      8.301%       4.4258%       3.673%       
Global Copy     8.3184%      8.0968%       8.0968%      
Global Swap     8.3038%      7.9376%       7.5718%      
Operand         8.3532%      5.1778%       3.0446%      
Rotate          8.2948%      8.0054%       6.6086%      
ReplaceNop      8.3782%      8.205%        8.0616%      
Delete          8.3404%      8.1776%       7.044%       
Instruction     8.3872%      4.993%        0.7424%      
Add Nops        8.3468%      8.3468%       6.8436%      
OpcodeWidth     8.3484%      8.0068%       7.882%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.2864%      1.6966%       0.0006%      
                                                        
Total           100%         81.2508%      67.653%      

********************************************************************************

TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %edi, %ecx
nop 
nop 
.L_142ce0:
retq 
Total accesses: 2
SAME MAP
     0 1 
------------------
0  |   1 
1  |     

NEXT MAP
     0 1 
------------------
0  |   0 
1  |     

TOTAL CELLS: 1
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
ALIASING CASES: 1
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %edi, %ecx
nop 
nop 
movl %edi, %edi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
salw $0x1, %ax
nop 
orl %edx, %eax
nop 
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
movb $0x6, %dh
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   1 0 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %edi, %ecx
nop 
nop 
movl %edi, %edi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
salw $0x1, %ax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
salw $0x1, %ax
nop 
orl %edx, %eax
nop 
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
movb $0x6, %dh
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   1 0 0 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
Access 3 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %edi, %ecx
nop 
nop 
.L_142ce0:
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   0 1 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     00 00 00 00 00 00 00 00
%rcx     00 00 00 00 00 00 00 00
%rdx     00 00 00 00 00 00 00 00
%rbx     00 00 00 00 00 00 00 00
%rsp     00 00 00 00 00 00 00 00
%rbp     00 00 00 00 00 00 00 00
%rsi     00 00 00 00 00 00 00 00
%rdi     00 00 00 00 d0 00 10 03
%r8      00 00 00 00 00 00 00 00
%r9      00 00 00 00 00 00 00 00
%r10     00 00 00 00 00 00 00 00
%r11     00 00 00 00 00 00 00 00
%r12     00 00 00 00 00 00 00 00
%r13     00 00 00 00 00 00 00 00
%r14     00 00 00 00 00 00 00 00
%r15     79 ff ff ff 24 3f f3 fb

%ymm0    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm1    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm2    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm3    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm4    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm5    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm6    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm7    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm8    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm9    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm10   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm11   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm12   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm13   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm14   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm15   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000007 00000000 ]
[ 0 valid rows shown ]

[ 79ffffff f4400408 - 79ffffff f44003e0 ]
[ 2 valid rows shown ]

79ffffff f4400400   . . v v v v v v   00 00 00 00 00 00 0f ff 
79ffffff f44003f8   v v . . . . . .   ef fc 00 00 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (13)                                               Lowest Known Correct Cost (14)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x3   1      OPC=nop                   movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  movq %rdi, %rdx           #  6     0xa   3      OPC=movq_r64_r64          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xd   1      OPC=nop                   je .L_142ce0              #  7     0xf   2      OPC=je_label            
  testl %r15d, %ecx         #  8     0xe   3      OPC=testl_r32_r32         nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x11  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  je .L_142ce0              #  10    0x12  2      OPC=je_label              nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  testl %eax, %r15d         #  25    0x27  3      OPC=testl_r32_r32         movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  jne .L_142cc0             #  26    0x2a  2      OPC=jne_label             testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  subl %edi, %eax           #  27    0x2c  2      OPC=subl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  nop                       #  28    0x2e  1      OPC=nop                   movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2f  1      OPC=nop                   subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x30  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x31  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x32  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x33  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  addl %edx, %eax           #  34    0x34  2      OPC=addl_r32_r32          nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  sarb $0x2, %al            #  40    0x3b  3      OPC=sarb_r8_imm8          nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3e  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
.L_142ce0:                  #        0x3f  0      OPC=<label>               nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  42    0x3f  1      OPC=nop                 .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  43    0x40  2      OPC=popq_r64_1            popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64          addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64              jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (12)                                                Lowest Known Correct Cost (12)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32         
  nop                       #  3     0x3   1      OPC=nop                    nop                       #  3     0x3   1      OPC=nop                  
  nop                       #  4     0x4   1      OPC=nop                    nop                       #  4     0x4   1      OPC=nop                  
  andl %edi, %edi           #  5     0x5   2      OPC=andl_r32_r32_1         andl %edi, %edi           #  5     0x5   2      OPC=andl_r32_r32_1       
  movl (%r15,%rdi,1), %ecx  #  6     0x7   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  6     0x7   4      OPC=movl_r32_m32         
  movq %rdi, %rdx           #  7     0xb   3      OPC=movq_r64_r64           movq %rdi, %rdx           #  7     0xb   3      OPC=movq_r64_r64         
  nop                       #  8     0xe   1      OPC=nop                    nop                       #  8     0xe   1      OPC=nop                  
  testl %r15d, %ecx         #  9     0xf   3      OPC=testl_r32_r32          testl %r15d, %ecx         #  9     0xf   3      OPC=testl_r32_r32        
  nop                       #  10    0x12  1      OPC=nop                    nop                       #  10    0x12  1      OPC=nop                  
  je .L_142ce0              #  11    0x13  2      OPC=je_label               je .L_142ce0              #  11    0x13  2      OPC=je_label             
  nop                       #  12    0x15  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                  
  nop                       #  13    0x16  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                  
  nop                       #  14    0x17  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                  
  nop                       #  15    0x18  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                  
  nop                       #  16    0x19  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                  
  nop                       #  17    0x1a  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                  
  nop                       #  18    0x1b  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                  
  nop                       #  19    0x1c  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                  
  nop                       #  20    0x1d  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                  
  nop                       #  21    0x1e  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                  
  nop                       #  22    0x1f  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32         
  testl %eax, %edx          #  25    0x27  2      OPC=testl_r32_r32          testl %eax, %edx          #  25    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label              jne .L_142cc0             #  26    0x29  2      OPC=jne_label            
  subl %edi, %edx           #  27    0x2b  2      OPC=subl_r32_r32           subl %edi, %edx           #  27    0x2b  2      OPC=subl_r32_r32         
  nop                       #  28    0x2d  1      OPC=nop                    nop                       #  28    0x2d  1      OPC=nop                  
  nop                       #  29    0x2e  1      OPC=nop                    nop                       #  29    0x2e  1      OPC=nop                  
  nop                       #  30    0x2f  1      OPC=nop                    nop                       #  30    0x2f  1      OPC=nop                  
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x30  1      OPC=nop                  
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x31  1      OPC=nop                  
  nop                       #  33    0x32  1      OPC=nop                    nop                       #  33    0x32  1      OPC=nop                  
  addl %edx, %eax           #  34    0x33  2      OPC=addl_r32_r32           addl %edx, %eax           #  34    0x33  2      OPC=addl_r32_r32         
  nop                       #  35    0x35  1      OPC=nop                    nop                       #  35    0x35  1      OPC=nop                  
  nop                       #  36    0x36  1      OPC=nop                    nop                       #  36    0x36  1      OPC=nop                  
  nop                       #  37    0x37  1      OPC=nop                    nop                       #  37    0x37  1      OPC=nop                  
  nop                       #  38    0x38  1      OPC=nop                    nop                       #  38    0x38  1      OPC=nop                  
  nop                       #  39    0x39  1      OPC=nop                    nop                       #  39    0x39  1      OPC=nop                  
  nop                       #  40    0x3a  1      OPC=nop                    nop                       #  40    0x3a  1      OPC=nop                  
  nop                       #  41    0x3b  1      OPC=nop                    nop                       #  41    0x3b  1      OPC=nop                  
  sarb $0x2, %al            #  42    0x3c  3      OPC=sarb_r8_imm8           sarb $0x2, %al            #  42    0x3c  3      OPC=sarb_r8_imm8         
  nop                       #  43    0x3f  1      OPC=nop                    nop                       #  43    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  44    0x40  1      OPC=nop                    nop                       #  44    0x40  1      OPC=nop                  
  nop                       #  45    0x41  1      OPC=nop                    nop                       #  45    0x41  1      OPC=nop                  
  popq %r11                 #  46    0x42  2      OPC=popq_r64_1             popq %r11                 #  46    0x42  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  47    0x44  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  47    0x44  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  48    0x48  3      OPC=addq_r64_r64           addq %r15, %r11           #  48    0x48  3      OPC=addq_r64_r64         
  jmpq %r11                 #  49    0x4b  3      OPC=jmpq_r64               jmpq %r11                 #  49    0x4b  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (11)                                                Lowest Known Correct Cost (11)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  nop                       #  2     0x2   1      OPC=nop                    nop                       #  2     0x2   1      OPC=nop                  
  nop                       #  3     0x3   1      OPC=nop                    nop                       #  3     0x3   1      OPC=nop                  
  movl %edi, %edx           #  4     0x4   2      OPC=movl_r32_r32           movl %edi, %edx           #  4     0x4   2      OPC=movl_r32_r32         
  movl (%r15,%rdx,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32         
  nop                       #  6     0xa   1      OPC=nop                    nop                       #  6     0xa   1      OPC=nop                  
  nop                       #  7     0xb   1      OPC=nop                    nop                       #  7     0xb   1      OPC=nop                  
  nop                       #  8     0xc   1      OPC=nop                    nop                       #  8     0xc   1      OPC=nop                  
  addb %cl, %ah             #  9     0xd   2      OPC=addb_rh_r8_1           addb %cl, %ah             #  9     0xd   2      OPC=addb_rh_r8_1         
  nop                       #  10    0xf   1      OPC=nop                    nop                       #  10    0xf   1      OPC=nop                  
  nop                       #  11    0x10  1      OPC=nop                    nop                       #  11    0x10  1      OPC=nop                  
  nop                       #  12    0x11  1      OPC=nop                    nop                       #  12    0x11  1      OPC=nop                  
  nop                       #  13    0x12  1      OPC=nop                    nop                       #  13    0x12  1      OPC=nop                  
  nop                       #  14    0x13  1      OPC=nop                    nop                       #  14    0x13  1      OPC=nop                  
  je .L_142ce0              #  15    0x14  2      OPC=je_label               je .L_142ce0              #  15    0x14  2      OPC=je_label             
  nop                       #  16    0x16  1      OPC=nop                    nop                       #  16    0x16  1      OPC=nop                  
  nop                       #  17    0x17  1      OPC=nop                    nop                       #  17    0x17  1      OPC=nop                  
  nop                       #  18    0x18  1      OPC=nop                    nop                       #  18    0x18  1      OPC=nop                  
  nop                       #  19    0x19  1      OPC=nop                    nop                       #  19    0x19  1      OPC=nop                  
  nop                       #  20    0x1a  1      OPC=nop                    nop                       #  20    0x1a  1      OPC=nop                  
  nop                       #  21    0x1b  1      OPC=nop                    nop                       #  21    0x1b  1      OPC=nop                  
  nop                       #  22    0x1c  1      OPC=nop                    nop                       #  22    0x1c  1      OPC=nop                  
  nop                       #  23    0x1d  1      OPC=nop                    nop                       #  23    0x1d  1      OPC=nop                  
  nop                       #  24    0x1e  1      OPC=nop                    nop                       #  24    0x1e  1      OPC=nop                  
  nop                       #  25    0x1f  1      OPC=nop                    nop                       #  25    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  26    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  26    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  27    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  27    0x23  4      OPC=movl_r32_m32         
  subw $0x0, %ax            #  28    0x27  4      OPC=subw_r16_imm8          subw $0x0, %ax            #  28    0x27  4      OPC=subw_r16_imm8        
  jne .L_142cc0             #  29    0x2b  2      OPC=jne_label              jne .L_142cc0             #  29    0x2b  2      OPC=jne_label            
  orl %edx, %eax            #  30    0x2d  2      OPC=orl_r32_r32            orl %edx, %eax            #  30    0x2d  2      OPC=orl_r32_r32          
  nop                       #  31    0x2f  1      OPC=nop                    nop                       #  31    0x2f  1      OPC=nop                  
  nop                       #  32    0x30  1      OPC=nop                    nop                       #  32    0x30  1      OPC=nop                  
  nop                       #  33    0x31  1      OPC=nop                    nop                       #  33    0x31  1      OPC=nop                  
  nop                       #  34    0x32  1      OPC=nop                    nop                       #  34    0x32  1      OPC=nop                  
  nop                       #  35    0x33  1      OPC=nop                    nop                       #  35    0x33  1      OPC=nop                  
  nop                       #  36    0x34  1      OPC=nop                    nop                       #  36    0x34  1      OPC=nop                  
  nop                       #  37    0x35  1      OPC=nop                    nop                       #  37    0x35  1      OPC=nop                  
  nop                       #  38    0x36  1      OPC=nop                    nop                       #  38    0x36  1      OPC=nop                  
  nop                       #  39    0x37  1      OPC=nop                    nop                       #  39    0x37  1      OPC=nop                  
  nop                       #  40    0x38  1      OPC=nop                    nop                       #  40    0x38  1      OPC=nop                  
  nop                       #  41    0x39  1      OPC=nop                    nop                       #  41    0x39  1      OPC=nop                  
  nop                       #  42    0x3a  1      OPC=nop                    nop                       #  42    0x3a  1      OPC=nop                  
  subl %edi, %eax           #  43    0x3b  2      OPC=subl_r32_r32_1         subl %edi, %eax           #  43    0x3b  2      OPC=subl_r32_r32_1       
  nop                       #  44    0x3d  1      OPC=nop                    nop                       #  44    0x3d  1      OPC=nop                  
  nop                       #  45    0x3e  1      OPC=nop                    nop                       #  45    0x3e  1      OPC=nop                  
  nop                       #  46    0x3f  1      OPC=nop                    nop                       #  46    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  47    0x40  1      OPC=nop                    nop                       #  47    0x40  1      OPC=nop                  
  sarq $0x2, %rax           #  48    0x41  4      OPC=sarq_r64_imm8          sarq $0x2, %rax           #  48    0x41  4      OPC=sarq_r64_imm8        
  popq %r11                 #  49    0x45  2      OPC=popq_r64_1             popq %r11                 #  49    0x45  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  50    0x47  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  50    0x47  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  51    0x4b  3      OPC=addq_r64_r64           addq %r15, %r11           #  51    0x4b  3      OPC=addq_r64_r64         
  jmpq %r11                 #  52    0x4e  3      OPC=jmpq_r64               jmpq %r11                 #  52    0x4e  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  68.2856s
Iterations/s:                  1464.44

Starting cost:                 14
Lowest cost:                   11
Lowest correct cost:           11

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.433%       7.268%        6.532%       
Local Swap      8.347%       5.09%         4.33%        
Global Copy     8.413%       6.926%        6.926%       
Global Swap     8.294%       5.92%         4.38%        
Operand         8.255%       3.991%        1.469%       
Rotate          8.257%       6.279%        3.539%       
ReplaceNop      8.174%       7.038%        6.038%       
Delete          8.385%       7.172%        4.458%       
Instruction     8.491%       5.025%        0.684%       
Add Nops        8.303%       8.303%        3.971%       
OpcodeWidth     8.343%       6.609%        6.159%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.305%       1.35%         0.001%       
                                                        
Total           100%         70.971%       48.487%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  139.458s
Iterations/s:                  1434.13

Starting cost:                 14
Lowest cost:                   11
Lowest correct cost:           11

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.32%        7.205%        6.52%        
Local Swap      8.31%        5.059%        4.251%       
Global Copy     8.443%       6.9345%       6.9345%      
Global Swap     8.3725%      5.942%        4.403%       
Operand         8.2455%      4.244%        1.574%       
Rotate          8.2625%      6.29%         3.5565%      
ReplaceNop      8.2855%      7.1315%       6.147%       
Delete          8.3725%      7.179%        4.5935%      
Instruction     8.451%       4.9625%       0.6735%      
Add Nops        8.3305%      8.3305%       4.066%       
OpcodeWidth     8.271%       6.5315%       6.062%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.336%       1.3625%       0.0005%      
                                                        
Total           100%         71.172%       48.7815%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  233.203s
Iterations/s:                  1286.43

Starting cost:                 14
Lowest cost:                   11
Lowest correct cost:           11

Move Type       Proposed     Succeeded     Accepted         
                                                            
Opcode          8.31533%     7.35333%      6.77533%         
Local Swap      8.313%       5.26533%      4.54767%         
Global Copy     8.423%       7.13267%      7.13267%         
Global Swap     8.36133%     6.291%        4.954%           
Operand         8.23933%     4.38833%      1.763%           
Rotate          8.28767%     6.57867%      3.97433%         
ReplaceNop      8.256%       7.27533%      6.445%           
Delete          8.347%       7.343%        5.02233%         
Instruction     8.447%       4.911%        0.664333%        
Add Nops        8.316%       8.316%        4.49433%         
OpcodeWidth     8.32433%     6.81433%      6.42467%         
2xWeighted      0%           0%            0%               
Memory+Swap     8.37%        1.488%        0.000333333%     
                                                            
Total           100%         73.157%       52.198%          

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  346.827s
Iterations/s:                  1153.31

Starting cost:                 14
Lowest cost:                   11
Lowest correct cost:           11

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.30375%     7.45475%      6.96775%     
Local Swap      8.28175%     5.35675%      4.71925%     
Global Copy     8.4%         7.27325%      7.27325%     
Global Swap     8.36075%     6.5295%       5.40675%     
Operand         8.25475%     4.391%        1.9035%      
Rotate          8.34075%     6.83625%      4.35875%     
ReplaceNop      8.25875%     7.38825%      6.70375%     
Delete          8.338%       7.45125%      5.3105%      
Instruction     8.46825%     4.78275%      0.644%       
Add Nops        8.30675%     8.30675%      4.7875%      
OpcodeWidth     8.312%       6.972%        6.64225%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.3745%      1.55175%      0.00025%     
                                                        
Total           100%         74.2943%      54.7175%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  454.741s
Iterations/s:                  1099.53

Starting cost:                 14
Lowest cost:                   11
Lowest correct cost:           11

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3204%      7.5494%       7.1074%      
Local Swap      8.3014%      5.495%        4.8874%      
Global Copy     8.3762%      7.349%        7.349%       
Global Swap     8.3818%      6.6826%       5.6556%      
Operand         8.2822%      4.453%        2.0176%      
Rotate          8.336%       6.9622%       4.549%       
ReplaceNop      8.2498%      7.4498%       6.8376%      
Delete          8.3412%      7.531%        5.4916%      
Instruction     8.4276%      4.667%        0.6428%      
Add Nops        8.3142%      8.3142%       4.9568%      
OpcodeWidth     8.3072%      7.0784%       6.7856%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.362%       1.529%        0.0002%      
                                                        
Total           100%         75.0606%      56.2806%     

********************************************************************************

TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
nop 
nop 
addb %cl, %ah
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
nop 
sarq $0x2, %rax
retq 
Total accesses: 2
SAME MAP
     0 1 
------------------
0  |   1 
1  |     

NEXT MAP
     0 1 
------------------
0  |   0 
1  |     

TOTAL CELLS: 1
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
ALIASING CASES: 1
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
nop 
nop 
addb %cl, %ah
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
subw $0x0, %ax
nop 
orl %edx, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subl %edi, %eax
nop 
nop 
nop 
.L_142ce0:
nop 
sarq $0x2, %rax
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   1 0 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
nop 
nop 
addb %cl, %ah
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
subw $0x0, %ax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
subw $0x0, %ax
nop 
orl %edx, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subl %edi, %eax
nop 
nop 
nop 
.L_142ce0:
nop 
sarq $0x2, %rax
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   1 0 0 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
Access 3 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
nop 
nop 
addb %cl, %ah
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
nop 
sarq $0x2, %rax
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   0 1 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     00 00 00 00 00 00 00 00
%rcx     00 00 00 00 00 00 00 00
%rdx     00 00 00 00 00 00 00 00
%rbx     00 00 00 00 00 00 00 00
%rsp     00 00 00 00 00 00 00 00
%rbp     00 00 00 00 00 00 00 00
%rsi     00 00 00 00 00 00 00 00
%rdi     00 00 00 00 ff ff ff ff
%r8      00 00 00 00 00 00 00 00
%r9      00 00 00 00 00 00 00 00
%r10     00 00 00 00 00 00 00 00
%r11     00 00 00 00 00 00 00 00
%r12     00 00 00 00 00 00 00 00
%r13     00 00 00 00 00 00 00 00
%r14     00 00 00 00 00 00 00 00
%r15     7f ff ff ff ff ff ff ed

%ymm0    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm1    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm2    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm3    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm4    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm5    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm6    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm7    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm8    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm9    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm10   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm11   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm12   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm13   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm14   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm15   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 80000000 fffffff0 - 80000000 ffffffe0 ]
[ 1 valid rows shown ]

80000000 ffffffe8   v v v v . . . .   40 00 00 00 00 00 00 00 

[ 7fffffff fffffff8 - 7fffffff ffffffe0 ]
[ 1 valid rows shown ]

7fffffff fffffff0   . . . . v v v v   00 00 00 00 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (12)                                                Lowest Known Correct Cost (13)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x2   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x3   1      OPC=nop                    movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32           movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0xa   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xb   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xc   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  testl %ecx, %ecx          #  9     0xd   2      OPC=testl_r32_r32          nop                       #  9     0x12  1      OPC=nop                 
  movq %rdi, %rdx           #  10    0xf   3      OPC=movq_r64_r64           nop                       #  10    0x13  1      OPC=nop                 
  je .L_142ce0              #  11    0x12  2      OPC=je_label               nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x20  0      OPC=<label>                addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  testl %eax, %edi          #  26    0x27  2      OPC=testl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  addl %edx, %eax           #  28    0x2b  2      OPC=addl_r32_r32_1         movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2d  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32           sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x32  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x33  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x34  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x35  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x36  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x37  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x38  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  sarl $0x2, %eax           #  40    0x39  3      OPC=sarl_r32_imm8          nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3d  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x3e  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>             
  nopl %eax                 #  43    0x3e  3      OPC=nopl_r32               popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  nop                       #  44    0x41  1      OPC=nop                    andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  popq %r11                 #  45    0x42  2      OPC=popq_r64_1             addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  andl $0xe0, %r11d         #  46    0x44  4      OPC=andl_r32_imm8          jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  addq %r15, %r11           #  47    0x48  3      OPC=addq_r64_r64                                                                                   
  jmpq %r11                 #  48    0x4b  3      OPC=jmpq_r64             .size wcslen, .-wcslen                                                    
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (11)                                                Lowest Known Correct Cost (13)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x2   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x3   1      OPC=nop                    movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32           movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0xa   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xb   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xc   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  testl %ecx, %ecx          #  9     0xd   2      OPC=testl_r32_r32          nop                       #  9     0x12  1      OPC=nop                 
  movq %rdi, %rdx           #  10    0xf   3      OPC=movq_r64_r64           nop                       #  10    0x13  1      OPC=nop                 
  je .L_142ce0              #  11    0x12  2      OPC=je_label               nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x20  0      OPC=<label>                addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  testl %eax, %edi          #  26    0x27  2      OPC=testl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  addl %edx, %eax           #  28    0x2b  2      OPC=addl_r32_r32_1         movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2d  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32           sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x32  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x33  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x34  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x35  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x36  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x37  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x38  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  sarl $0x2, %eax           #  40    0x39  3      OPC=sarl_r32_imm8          nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3d  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  43    0x3e  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
.L_142ce0:                  #        0x3f  0      OPC=<label>                popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  nopl %eax                 #  44    0x3f  3      OPC=nopl_r32               andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  nop                       #  45    0x42  1      OPC=nop                    addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  popq %r11                 #  46    0x43  2      OPC=popq_r64_1             jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  andl $0xe0, %r11d         #  47    0x45  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11           #  48    0x49  3      OPC=addq_r64_r64         .size wcslen, .-wcslen                                                    
  jmpq %r11                 #  49    0x4c  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (10)                                                Lowest Known Correct Cost (10)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  nop                       #  2     0x2   1      OPC=nop                    nop                       #  2     0x2   1      OPC=nop                  
  nop                       #  3     0x3   1      OPC=nop                    nop                       #  3     0x3   1      OPC=nop                  
  movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32           movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32         
  movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32         
  nop                       #  6     0xa   1      OPC=nop                    nop                       #  6     0xa   1      OPC=nop                  
  nop                       #  7     0xb   1      OPC=nop                    nop                       #  7     0xb   1      OPC=nop                  
  nop                       #  8     0xc   1      OPC=nop                    nop                       #  8     0xc   1      OPC=nop                  
  testl %ecx, %ecx          #  9     0xd   2      OPC=testl_r32_r32          testl %ecx, %ecx          #  9     0xd   2      OPC=testl_r32_r32        
  movq %rdi, %rdx           #  10    0xf   3      OPC=movq_r64_r64           movq %rdi, %rdx           #  10    0xf   3      OPC=movq_r64_r64         
  je .L_142ce0              #  11    0x12  2      OPC=je_label               je .L_142ce0              #  11    0x12  2      OPC=je_label             
  nop                       #  12    0x14  1      OPC=nop                    nop                       #  12    0x14  1      OPC=nop                  
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x15  1      OPC=nop                  
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x16  1      OPC=nop                  
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x17  1      OPC=nop                  
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x18  1      OPC=nop                  
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x19  1      OPC=nop                  
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1a  1      OPC=nop                  
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1b  1      OPC=nop                  
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1c  1      OPC=nop                  
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1d  1      OPC=nop                  
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1e  1      OPC=nop                  
  nop                       #  23    0x1f  1      OPC=nop                    nop                       #  23    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32         
  testl %eax, %edi          #  26    0x27  2      OPC=testl_r32_r32          testl %eax, %edi          #  26    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x29  2      OPC=jne_label            
  addl %edx, %eax           #  28    0x2b  2      OPC=addl_r32_r32_1         addl %edx, %eax           #  28    0x2b  2      OPC=addl_r32_r32_1       
  nop                       #  29    0x2d  1      OPC=nop                    nop                       #  29    0x2d  1      OPC=nop                  
  subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32           subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32         
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x30  1      OPC=nop                  
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x31  1      OPC=nop                  
  nop                       #  33    0x32  1      OPC=nop                    nop                       #  33    0x32  1      OPC=nop                  
  nop                       #  34    0x33  1      OPC=nop                    nop                       #  34    0x33  1      OPC=nop                  
  nop                       #  35    0x34  1      OPC=nop                    nop                       #  35    0x34  1      OPC=nop                  
  nop                       #  36    0x35  1      OPC=nop                    nop                       #  36    0x35  1      OPC=nop                  
  nop                       #  37    0x36  1      OPC=nop                    nop                       #  37    0x36  1      OPC=nop                  
  nop                       #  38    0x37  1      OPC=nop                    nop                       #  38    0x37  1      OPC=nop                  
  nop                       #  39    0x38  1      OPC=nop                    nop                       #  39    0x38  1      OPC=nop                  
  sarl $0x2, %eax           #  40    0x39  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  40    0x39  3      OPC=sarl_r32_imm8        
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3c  1      OPC=nop                  
  nop                       #  42    0x3d  1      OPC=nop                    nop                       #  42    0x3d  1      OPC=nop                  
  nop                       #  43    0x3e  1      OPC=nop                    nop                       #  43    0x3e  1      OPC=nop                  
  nop                       #  44    0x3f  1      OPC=nop                    nop                       #  44    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nopl %eax                 #  45    0x40  3      OPC=nopl_r32               nopl %eax                 #  45    0x40  3      OPC=nopl_r32             
  nop                       #  46    0x43  1      OPC=nop                    nop                       #  46    0x43  1      OPC=nop                  
  popq %r11                 #  47    0x44  2      OPC=popq_r64_1             popq %r11                 #  47    0x44  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  48    0x46  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  48    0x46  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  49    0x4a  3      OPC=addq_r64_r64           addq %r15, %r11           #  49    0x4a  3      OPC=addq_r64_r64         
  jmpq %r11                 #  50    0x4d  3      OPC=jmpq_r64               jmpq %r11                 #  50    0x4d  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  79.81s
Iterations/s:                  1252.98

Starting cost:                 13
Lowest cost:                   10
Lowest correct cost:           10

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.283%       7.268%        6.709%       
Local Swap      8.379%       5.473%        4.632%       
Global Copy     8.269%       6.948%        6.948%       
Global Swap     8.369%       6.259%        4.844%       
Operand         8.367%       4.203%        1.624%       
Rotate          8.443%       6.583%        3.848%       
ReplaceNop      8.198%       7.225%        6.404%       
Delete          8.23%        7.224%        4.804%       
Instruction     8.381%       5.13%         0.707%       
Add Nops        8.328%       8.328%        4.302%       
OpcodeWidth     8.421%       6.815%        6.409%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.332%       1.337%        0.004%       
                                                        
Total           100%         72.793%       51.235%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  165.561s
Iterations/s:                  1208.01

Starting cost:                 13
Lowest cost:                   10
Lowest correct cost:           10

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.323%       7.4545%       6.8875%      
Local Swap      8.4295%      5.5315%       4.6655%      
Global Copy     8.298%       7.086%        7.086%       
Global Swap     8.3715%      6.3915%       5.1125%      
Operand         8.3755%      4.414%        1.8625%      
Rotate          8.4325%      6.755%        4.126%       
ReplaceNop      8.199%       7.2775%       6.538%       
Delete          8.2995%      7.323%        5.1835%      
Instruction     8.33%        5.071%        0.772%       
Add Nops        8.344%       8.344%        4.5705%      
OpcodeWidth     8.318%       6.8345%       6.456%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.2795%      1.348%        0.002%       
                                                        
Total           100%         73.8305%      53.262%      

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  267.527s
Iterations/s:                  1121.38

Starting cost:                 13
Lowest cost:                   10
Lowest correct cost:           10

Move Type       Proposed     Succeeded     Accepted        
                                                           
Opcode          8.29167%     7.46733%      6.907%          
Local Swap      8.44967%     5.632%        4.78533%        
Global Copy     8.277%       7.12867%      7.12867%        
Global Swap     8.37233%     6.45733%      5.24933%        
Operand         8.36033%     4.438%        1.88433%        
Rotate          8.422%       6.81867%      4.22533%        
ReplaceNop      8.25733%     7.34633%      6.63967%        
Delete          8.29433%     7.35967%      5.353%          
Instruction     8.34833%     5.088%        0.775667%       
Add Nops        8.349%       8.349%        4.727%          
OpcodeWidth     8.28533%     6.87667%      6.51033%        
2xWeighted      0%           0%            0%              
Memory+Swap     8.29267%     1.34533%      0.00133333%     
                                                           
Total           100%         74.307%       54.187%         

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  361.58s
Iterations/s:                  1106.25

Starting cost:                 13
Lowest cost:                   10
Lowest correct cost:           10

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.29775%     7.498%        6.94575%     
Local Swap      8.478%       5.6875%       4.8485%      
Global Copy     8.296%       7.179%        7.179%       
Global Swap     8.343%       6.4595%       5.3075%      
Operand         8.373%       4.506%        1.92075%     
Rotate          8.36%        6.8165%       4.27575%     
ReplaceNop      8.2855%      7.37525%      6.6965%      
Delete          8.28825%     7.36075%      5.39775%     
Instruction     8.32975%     5.07225%      0.75225%     
Add Nops        8.37425%     8.37425%      4.782%       
OpcodeWidth     8.28475%     6.90275%      6.547%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.28975%     1.34075%      0.001%       
                                                        
Total           100%         74.5725%      54.6538%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  433.838s
Iterations/s:                  1152.5

Starting cost:                 13
Lowest cost:                   10
Lowest correct cost:           10

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3414%      7.5656%       7.0268%      
Local Swap      8.456%       5.6688%       4.8404%      
Global Copy     8.2914%      7.1864%       7.1864%      
Global Swap     8.3176%      6.4696%       5.3308%      
Operand         8.3368%      4.5172%       1.918%       
Rotate          8.3642%      6.8414%       4.3018%      
ReplaceNop      8.3116%      7.4062%       6.7404%      
Delete          8.2798%      7.362%        5.4128%      
Instruction     8.3098%      5.0606%       0.7578%      
Add Nops        8.3648%      8.3648%       4.7976%      
OpcodeWidth     8.306%       6.9434%       6.5916%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3206%      1.3402%       0.0008%      
                                                        
Total           100%         74.7262%      54.9052%     

********************************************************************************

TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
nop 
nop 
nop 
testl %ecx, %ecx
movq %rdi, %rdx
nop 
.L_142ce0:
movsbq %r15b, %r9
retq 
Total accesses: 2
SAME MAP
     0 1 
------------------
0  |   1 
1  |     

NEXT MAP
     0 1 
------------------
0  |   0 
1  |     

TOTAL CELLS: 1
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
ALIASING CASES: 1
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
nop 
nop 
nop 
testl %ecx, %ecx
movq %rdi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
orb $0x10, %al
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %edi
nop 
addl %edx, %eax
nop 
subl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sarl $0x2, %eax
nop 
nop 
nop 
nop 
.L_142ce0:
movsbq %r15b, %r9
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   1 0 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
nop 
nop 
nop 
testl %ecx, %ecx
movq %rdi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
orb $0x10, %al
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %edi
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %edi
nop 
addl %edx, %eax
nop 
subl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sarl $0x2, %eax
nop 
nop 
nop 
nop 
.L_142ce0:
movsbq %r15b, %r9
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   1 0 0 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
Access 3 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
nop 
nop 
nop 
testl %ecx, %ecx
movq %rdi, %rdx
nop 
.L_142ce0:
movsbq %r15b, %r9
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   0 1 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
nop 
nop 
nop 
testl %ecx, %ecx
movq %rdi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
orb $0x10, %al
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %edi
nop 
addl %edx, %eax
nop 
subl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sarl $0x2, %eax
nop 
nop 
nop 
nop 
.L_142ce0:
movsbq %r15b, %r9
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 1 0 
1  |     0 1 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
nop 
nop 
nop 
testl %ecx, %ecx
movq %rdi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
orb $0x10, %al
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %edi
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %edi
nop 
addl %edx, %eax
nop 
subl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sarl $0x2, %eax
nop 
nop 
nop 
nop 
.L_142ce0:
movsbq %r15b, %r9
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 1 0 0 
1  |     0 1 0 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 4)
Access 4 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
nop 
nop 
nop 
testl %ecx, %ecx
movq %rdi, %rdx
nop 
.L_142ce0:
movsbq %r15b, %r9
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 0 1 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
nop 
nop 
nop 
testl %ecx, %ecx
movq %rdi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
orb $0x10, %al
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %edi
nop 
addl %edx, %eax
nop 
subl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sarl $0x2, %eax
nop 
nop 
nop 
nop 
.L_142ce0:
movsbq %r15b, %r9
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 0 1 0 
1  |     0 0 1 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 4 (cell size 4)
Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     00 00 00 00 00 00 00 00
%rcx     00 00 00 00 00 00 00 00
%rdx     00 00 00 00 00 00 00 00
%rbx     00 00 00 00 00 00 00 00
%rsp     00 00 00 00 00 00 00 00
%rbp     00 00 00 00 00 00 00 00
%rsi     00 00 00 00 00 00 00 00
%rdi     00 00 00 00 4f c0 00 01
%r8      00 00 00 00 00 00 00 00
%r9      00 00 00 00 00 00 00 00
%r10     00 00 00 00 00 00 00 00
%r11     00 00 00 00 00 00 00 00
%r12     00 00 00 00 00 00 00 00
%r13     00 00 00 00 00 00 00 00
%r14     00 00 00 00 00 00 00 00
%r15     70 00 44 52 00 bf ff fb

%ymm0    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm1    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm2    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm3    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm4    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm5    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm6    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm7    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm8    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm9    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm10   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm11   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm12   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm13   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm14   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm15   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000007 00000000 ]
[ 0 valid rows shown ]

[ 70004452 50800008 - 70004452 507fffe0 ]
[ 2 valid rows shown ]

70004452 50800000   v v v v v v v v   00 00 00 00 80 00 00 00 
70004452 507ffff8   v v v v . . . .   ff ff ff ff 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (10)                                                Lowest Known Correct Cost (11)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                    movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x1   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x2   1      OPC=nop                    movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  4     0x3   2      OPC=xorl_r32_r32           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0x5   3      OPC=movq_r64_r64           movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  movl (%r15,%rdx,1), %ecx  #  6     0x8   4      OPC=movl_r32_m32           testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  movl %edx, %edi           #  7     0xc   2      OPC=movl_r32_r32           je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xe   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  testl %ecx, %ecx          #  9     0xf   2      OPC=testl_r32_r32          nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x11  1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  je .L_142ce0              #  11    0x12  2      OPC=je_label               nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x20  0      OPC=<label>                addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  xorl %edx, %eax           #  28    0x2b  2      OPC=xorl_r32_r32_1         movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2d  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32           sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  sarl $0x2, %eax           #  31    0x30  3      OPC=sarl_r32_imm8          nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x33  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nopl %eax                 #  37    0x38  3      OPC=nopl_r32               nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3b  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3c  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3d  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3e  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3f  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  43    0x40  1      OPC=nop                    popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  nop                       #  44    0x41  1      OPC=nop                    andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  nop                       #  45    0x42  1      OPC=nop                    addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  popq %r11                 #  46    0x43  2      OPC=popq_r64_1             jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  andl $0xe0, %r11d         #  47    0x45  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11           #  48    0x49  3      OPC=addq_r64_r64         .size wcslen, .-wcslen                                                    
  jmpq %r11                 #  49    0x4c  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (9)                                                 Lowest Known Correct Cost (9)                                              
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32         
  nop                       #  3     0x3   1      OPC=nop                    nop                       #  3     0x3   1      OPC=nop                  
  nop                       #  4     0x4   1      OPC=nop                    nop                       #  4     0x4   1      OPC=nop                  
  movl %edi, %edx           #  5     0x5   2      OPC=movl_r32_r32           movl %edi, %edx           #  5     0x5   2      OPC=movl_r32_r32         
  movl (%r15,%rdx,1), %ecx  #  6     0x7   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  6     0x7   4      OPC=movl_r32_m32         
  sarl $0x1, %ecx           #  7     0xb   2      OPC=sarl_r32_one           sarl $0x1, %ecx           #  7     0xb   2      OPC=sarl_r32_one         
  nop                       #  8     0xd   1      OPC=nop                    nop                       #  8     0xd   1      OPC=nop                  
  nop                       #  9     0xe   1      OPC=nop                    nop                       #  9     0xe   1      OPC=nop                  
  je .L_142ce0              #  10    0xf   2      OPC=je_label               je .L_142ce0              #  10    0xf   2      OPC=je_label             
  nop                       #  11    0x11  1      OPC=nop                    nop                       #  11    0x11  1      OPC=nop                  
  nop                       #  12    0x12  1      OPC=nop                    nop                       #  12    0x12  1      OPC=nop                  
  shlb $0x8, %ch            #  13    0x13  3      OPC=shlb_rh_imm8           shlb $0x8, %ch            #  13    0x13  3      OPC=shlb_rh_imm8         
  nopl %eax                 #  14    0x16  3      OPC=nopl_r32               nopl %eax                 #  14    0x16  3      OPC=nopl_r32             
  nop                       #  15    0x19  1      OPC=nop                    nop                       #  15    0x19  1      OPC=nop                  
  nop                       #  16    0x1a  1      OPC=nop                    nop                       #  16    0x1a  1      OPC=nop                  
  nop                       #  17    0x1b  1      OPC=nop                    nop                       #  17    0x1b  1      OPC=nop                  
  nop                       #  18    0x1c  1      OPC=nop                    nop                       #  18    0x1c  1      OPC=nop                  
  nop                       #  19    0x1d  1      OPC=nop                    nop                       #  19    0x1d  1      OPC=nop                  
  nop                       #  20    0x1e  1      OPC=nop                    nop                       #  20    0x1e  1      OPC=nop                  
  nop                       #  21    0x1f  1      OPC=nop                    nop                       #  21    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32         
  testl %ecx, %eax          #  24    0x27  2      OPC=testl_r32_r32          testl %ecx, %eax          #  24    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  25    0x29  2      OPC=jne_label              jne .L_142cc0             #  25    0x29  2      OPC=jne_label            
  nop                       #  26    0x2b  1      OPC=nop                    nop                       #  26    0x2b  1      OPC=nop                  
  nop                       #  27    0x2c  1      OPC=nop                    nop                       #  27    0x2c  1      OPC=nop                  
  nop                       #  28    0x2d  1      OPC=nop                    nop                       #  28    0x2d  1      OPC=nop                  
  orl %edx, %eax            #  29    0x2e  2      OPC=orl_r32_r32_1          orl %edx, %eax            #  29    0x2e  2      OPC=orl_r32_r32_1        
  subl %edi, %eax           #  30    0x30  2      OPC=subl_r32_r32_1         subl %edi, %eax           #  30    0x30  2      OPC=subl_r32_r32_1       
  nop                       #  31    0x32  1      OPC=nop                    nop                       #  31    0x32  1      OPC=nop                  
  nop                       #  32    0x33  1      OPC=nop                    nop                       #  32    0x33  1      OPC=nop                  
  nop                       #  33    0x34  1      OPC=nop                    nop                       #  33    0x34  1      OPC=nop                  
  nop                       #  34    0x35  1      OPC=nop                    nop                       #  34    0x35  1      OPC=nop                  
  nop                       #  35    0x36  1      OPC=nop                    nop                       #  35    0x36  1      OPC=nop                  
  nop                       #  36    0x37  1      OPC=nop                    nop                       #  36    0x37  1      OPC=nop                  
  nop                       #  37    0x38  1      OPC=nop                    nop                       #  37    0x38  1      OPC=nop                  
  nop                       #  38    0x39  1      OPC=nop                    nop                       #  38    0x39  1      OPC=nop                  
  nop                       #  39    0x3a  1      OPC=nop                    nop                       #  39    0x3a  1      OPC=nop                  
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3b  1      OPC=nop                  
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3c  1      OPC=nop                  
  sarl $0x2, %eax           #  42    0x3d  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  42    0x3d  3      OPC=sarl_r32_imm8        
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  43    0x40  1      OPC=nop                    nop                       #  43    0x40  1      OPC=nop                  
  nop                       #  44    0x41  1      OPC=nop                    nop                       #  44    0x41  1      OPC=nop                  
  nop                       #  45    0x42  1      OPC=nop                    nop                       #  45    0x42  1      OPC=nop                  
  popq %r11                 #  46    0x43  2      OPC=popq_r64_1             popq %r11                 #  46    0x43  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  47    0x45  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  47    0x45  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  48    0x49  3      OPC=addq_r64_r64           addq %r15, %r11           #  48    0x49  3      OPC=addq_r64_r64         
  jmpq %r11                 #  49    0x4c  3      OPC=jmpq_r64               jmpq %r11                 #  49    0x4c  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  74.267s
Iterations/s:                  1346.49

Starting cost:                 11
Lowest cost:                   9
Lowest correct cost:           9

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.427%       7.912%        7.651%       
Local Swap      8.381%       4.236%        3.565%       
Global Copy     8.299%       7.648%        7.648%       
Global Swap     8.299%       7.301%        6.518%       
Operand         8.415%       4.648%        1.973%       
Rotate          8.346%       7.524%        5.426%       
ReplaceNop      8.311%       7.812%        7.401%       
Delete          8.373%       7.921%        6.601%       
Instruction     8.349%       4.862%        0.785%       
Add Nops        8.185%       8.185%        6.239%       
OpcodeWidth     8.416%       7.531%        7.302%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.199%       1.451%        0.004%       
                                                        
Total           100%         77.031%       61.113%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  205.633s
Iterations/s:                  972.607

Starting cost:                 11
Lowest cost:                   9
Lowest correct cost:           9

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3975%      8.043%        7.8545%      
Local Swap      8.406%       4.2945%       3.589%       
Global Copy     8.2165%      7.777%        7.777%       
Global Swap     8.3545%      7.6575%       7.0535%      
Operand         8.299%       4.8625%       2.2795%      
Rotate          8.34%        7.7675%       6.071%       
ReplaceNop      8.3365%      7.996%        7.708%       
Delete          8.3765%      8.0625%       6.9355%      
Instruction     8.393%       4.9315%       0.7845%      
Add Nops        8.2075%      8.2075%       6.6365%      
OpcodeWidth     8.4105%      7.7975%       7.6165%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.2625%      1.618%        0.0035%      
                                                        
Total           100%         79.015%       64.309%      

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  379.352s
Iterations/s:                  790.823

Starting cost:                 11
Lowest cost:                   9
Lowest correct cost:           9

Move Type       Proposed     Succeeded     Accepted        
                                                           
Opcode          8.35567%     8.08067%      7.92967%        
Local Swap      8.388%       4.42233%      3.69767%        
Global Copy     8.26467%     7.921%        7.921%          
Global Swap     8.33367%     7.77067%      7.25333%        
Operand         8.33733%     5.11733%      2.643%          
Rotate          8.33267%     7.879%        6.31733%        
ReplaceNop      8.359%       8.09533%      7.86267%        
Delete          8.37833%     8.12567%      6.99%           
Instruction     8.33667%     4.93%         0.795667%       
Add Nops        8.217%       8.217%        6.66733%        
OpcodeWidth     8.37667%     7.86933%      7.70467%        
2xWeighted      0%           0%            0%              
Memory+Swap     8.32033%     1.64733%      0.00333333%     
                                                           
Total           100%         80.0757%      65.7857%        

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  624.411s
Iterations/s:                  640.604

Starting cost:                 11
Lowest cost:                   9
Lowest correct cost:           9

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3055%      8.0805%       7.953%       
Local Swap      8.41075%     4.4765%       3.75225%     
Global Copy     8.258%       7.97075%      7.97075%     
Global Swap     8.3505%      7.87175%      7.4245%      
Operand         8.29325%     5.27025%      2.851%       
Rotate          8.345%       7.9575%       6.50625%     
ReplaceNop      8.3835%      8.1575%       7.96625%     
Delete          8.37575%     8.1625%       7.0315%      
Instruction     8.316%       4.89025%      0.7865%      
Add Nops        8.2905%      8.2905%       6.79025%     
OpcodeWidth     8.34475%     7.91075%      7.7615%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3265%      1.644%        0.0025%      
                                                        
Total           100%         80.6827%      66.7963%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  932.455s
Iterations/s:                  536.219

Starting cost:                 11
Lowest cost:                   9
Lowest correct cost:           9

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3178%      8.1244%       8.0138%      
Local Swap      8.3912%      4.4378%       3.7224%      
Global Copy     8.2814%      8.0368%       8.0368%      
Global Swap     8.3536%      7.9386%       7.534%       
Operand         8.2932%      5.426%        3.0516%      
Rotate          8.3262%      7.994%        6.5782%      
ReplaceNop      8.3556%      8.161%        7.9988%      
Delete          8.3964%      8.211%        7.011%       
Instruction     8.3292%      4.8716%       0.7784%      
Add Nops        8.3084%      8.3084%       6.7662%      
OpcodeWidth     8.3416%      7.9624%       7.8242%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3054%      1.6344%       0.002%       
                                                        
Total           100%         81.1064%      67.3174%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     2b 59 5d bf 5e 58 1c 25
%rcx     80 5e 39 04 1c a2 4f 79
%rdx     8f ef 3f 52 54 fd 6a 26
%rbx     9d 77 9e 1b 4e 7f 77 23
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 3e 27 2f a5
%rdi     00 00 00 00 3e 27 34 81
%r8      3e 03 cd 8e c9 fd 19 77
%r9      8f b7 ab 62 04 eb 0c 1b
%r10     25 dc 94 44 21 11 b1 56
%r11     51 f3 55 3a 4d f8 a7 9d
%r12     88 02 65 79 b3 4a c2 c6
%r13     ff fe 53 d2 19 13 8c 33
%r14     13 0e 31 27 38 ac 5e 06
%r15     00 00 00 00 0f e1 59 a0

%ymm0    c7 58 ab c8 b0 9b 65 fc 87 02 ae 92 c8 09 0d 81 a2 cc 12 4b 98 f5 bd 09 1e 60 97 39 0e 73 37 64
%ymm1    0a 10 df 8c 66 23 ff df 86 92 e0 92 cf aa e2 1b 59 c9 81 4e 01 43 80 e1 65 e8 9b 8c c0 c8 65 44
%ymm2    09 16 39 d2 a4 21 e1 17 19 06 a7 1b 88 e5 e2 0a 11 21 ad 39 a6 a6 7d 61 23 65 51 9e 57 df 10 b6
%ymm3    d3 ca de 5b a2 fd 77 32 31 ee c7 07 f3 1c 6c 86 92 7c 3c 5d 9e 57 05 61 2c f6 81 f7 0f d1 73 ba
%ymm4    78 90 b0 68 c9 6c 98 18 d5 a4 fc c3 76 ba 2d 28 91 d3 af 92 66 dc 4a 11 9b f6 dd c9 ff 69 e1 c3
%ymm5    06 5d 0a 29 99 50 29 d5 c3 69 26 3d e3 c4 4d 52 ab 56 d2 c1 0c 85 df 32 4e 96 3b 12 65 d7 bf e6
%ymm6    3a 54 79 22 fd e7 0f 76 27 5c d2 b6 6d 19 cb 9e a1 68 20 47 a3 56 ea 88 fa 8a 7e d6 9c 52 37 6a
%ymm7    2b a4 f0 f7 48 62 01 82 90 1e 72 5f b2 d0 79 85 01 1c 61 a2 b1 7f 2b 95 d1 47 95 6e 40 7d 18 5a
%ymm8    06 33 f9 3e 0e 9f 06 d0 8f 32 be d5 1d 5d 6e 43 8f 3a 0b a9 00 8b 9a d2 e1 49 08 06 0e 22 1a e4
%ymm9    ba f7 d4 63 2c 44 89 f4 3f 7f 18 1f 6e 23 a6 97 01 14 53 f4 e5 a6 82 5d ac f5 09 69 18 13 5d 44
%ymm10   69 8f 67 1a 62 a3 50 62 0d 42 d3 06 f4 6c 98 ef 6f dc f5 b5 9b a4 30 9b bf 8b 18 9a 85 17 bb 9a
%ymm11   23 fc e0 ca f8 a2 86 63 47 fa 40 40 a2 e0 30 9c a5 d7 66 b2 31 b0 a7 fc 10 45 b4 a1 14 e6 f2 f8
%ymm12   71 39 92 56 8f 2f 39 ac 2a 96 d1 99 e4 28 e1 1e 23 b2 4f d1 55 10 ab 0a 33 6b a8 1a 1a 2e 1a 16
%ymm13   a0 97 25 a6 3e ee 17 cf 36 13 25 c4 2c 8f 94 24 e4 cc c2 ee 92 9e d4 a7 0a f7 54 ae 68 68 df bb
%ymm14   05 a9 57 e8 34 b2 b4 57 34 c8 af 1e f6 59 0a 48 93 6f 87 cb 44 d3 87 fc 0e b6 c6 00 91 b4 21 5a
%ymm15   be 1b 5c ea 67 24 c4 ff 20 0a 5d d8 1f 50 16 57 13 50 fc 9f 6c 70 85 e6 c0 35 5e ae 3e f0 82 14

%cf      1 
%1       1 
%pf      1 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   88 13 8b c7 0c 7c bc a4 
00000006 fffffff0   v v v v v v v v   3d 75 21 18 d9 0b 75 0f 
00000006 ffffffe8   v v v v v v v v   f7 7e 00 bf c2 cc 60 07 
00000006 ffffffe0   v v v v v v v v   8c d3 18 a6 71 2c 9b 90 

[ 00000000 4e089138 - 00000000 4e088920 ]
[ 64 valid rows shown ]

00000000 4e089018   . . . . . . . v   00 00 00 00 00 00 00 00 
00000000 4e089010   v v v v v v v v   00 00 00 6a a1 97 5f e0 
00000000 4e089008   v v v v v v v v   f7 7d 09 cf 65 88 a4 e8 
00000000 4e089000   v v v v v v v v   99 6b 26 d7 d1 52 d9 0e 
00000000 4e088ff8   v v v v v v v v   7b ed 46 c7 b0 f5 75 c8 
00000000 4e088ff0   v v v v v v v v   6b 97 0b c1 a0 e2 d6 28 
00000000 4e088fe8   v v v v v v v v   17 81 2b 7d ef 38 c2 c1 
00000000 4e088fe0   v v v v v v v v   9a d4 fe c3 d7 eb c8 b4 
00000000 4e088fd8   v v v v v v v v   3d 51 51 e8 89 de bc aa 
00000000 4e088fd0   v v v v v v v v   f7 29 eb 78 ca 55 fc 9a 
00000000 4e088fc8   v v v v v v v v   92 f3 bb 2d 9e ed c3 d7 
00000000 4e088fc0   v v v v v v v v   fd 13 fb 23 ae 76 62 54 
00000000 4e088fb8   v v v v v v v v   c8 73 2c df e7 93 bf 7f 
00000000 4e088fb0   v v v v v v v v   5f 96 7b 30 c2 09 df 65 
00000000 4e088fa8   v v v v v v v v   54 cd 6a c7 f0 b0 dc da 
00000000 4e088fa0   v v v v v v v v   64 84 c0 5a ae ef 28 e8 
00000000 4e088f98   v v v v v v v v   8b 99 20 68 34 29 03 2f 
00000000 4e088f90   v v v v v v v v   d3 72 50 5d b5 12 fa 8d 
00000000 4e088f88   v v v v v v v v   dd ba eb 15 4b 57 1a 0a 
00000000 4e088f80   v v v v v v v v   d6 d1 31 c6 64 8f c8 23 
00000000 4e088f78   v v v v v v v v   65 f7 65 05 55 91 de 76 
00000000 4e088f70   v v v v v v v v   bd 3e 63 28 34 40 a1 c8 
00000000 4e088f68   v v v v v v v v   6f 94 fb 41 81 49 d9 10 
00000000 4e088f60   v v v v v v v v   6d a2 fe 41 2a d0 be 60 
00000000 4e088f58   v v v v v v v v   a2 d3 26 df d4 a0 13 95 
00000000 4e088f50   v v v v v v v v   0a 23 86 6c d1 0d cc 2e 
00000000 4e088f48   v v v v v v v v   12 b2 68 71 dc 37 12 2c 
00000000 4e088f40   v v v v v v v v   77 2d 83 ca 2e ea 39 c2 
00000000 4e088f38   v v v v v v v v   ff 86 cc 3f 96 f0 0e 9d 
00000000 4e088f30   v v v v v v v v   52 79 a0 a3 fb 1a c6 a1 
00000000 4e088f28   v v v v v v v v   d6 31 5f b0 bf e4 a9 ad 
00000000 4e088f20   v v v v v v v v   ff 98 91 6c eb b3 f6 bf 
00000000 4e088f18   v v v v v v v v   f0 dc 31 f8 9e 95 fd af 
00000000 4e088f10   v v v v v v v v   7e 86 dd 5a 43 95 41 26 
00000000 4e088f08   v v v v v v v v   71 7b 07 12 e5 10 1c 93 
00000000 4e088f00   v v v v v v v v   ad de 76 2c c2 19 8e f8 
00000000 4e088ef8   v v v v v v v v   3e 9b fb ef 17 77 d2 24 
00000000 4e088ef0   v v v v v v v v   42 48 18 1d 23 c6 1f 5f 
00000000 4e088ee8   v v v v v v v v   95 f6 f6 52 63 3e 1d 81 
00000000 4e088ee0   v v v v v v v v   1b 5c 9d ca db f3 fd 4f 
00000000 4e088ed8   v v v v v v v v   84 83 1d f3 35 8a 0b 25 
00000000 4e088ed0   v v v v v v v v   24 52 fd c4 31 29 68 43 
00000000 4e088ec8   v v v v v v v v   93 b8 35 e2 22 c0 e3 51 
00000000 4e088ec0   v v v v v v v v   81 aa cd 8b 6f 79 32 90 
00000000 4e088eb8   v v v v v v v v   4e 93 e8 0f 65 b9 28 60 
00000000 4e088eb0   v v v v v v v v   21 d4 5c ee 96 b0 0d b0 
00000000 4e088ea8   v v v v v v v v   96 75 ff d1 3f 39 83 f6 
00000000 4e088ea0   v v v v v v v v   3b 54 59 de 2b 9f a8 3f 
00000000 4e088e98   v v v v v v v v   2d 2e e7 05 98 53 04 33 
00000000 4e088e90   v v v v v v v v   3e ac e0 e5 1a 98 b1 c4 
00000000 4e088e88   v v v v v v v v   36 c6 4e 49 fd 2f 9d 5d 
00000000 4e088e80   v v v v v v v v   29 b9 36 ec 72 7a 57 28 
00000000 4e088e78   v v v v v v v v   96 94 01 65 15 58 52 59 
00000000 4e088e70   v v v v v v v v   92 48 34 55 62 eb 76 ed 
00000000 4e088e68   v v v v v v v v   c8 1e ac a0 06 e3 27 3d 
00000000 4e088e60   v v v v v v v v   47 bc 94 4a e4 c3 26 30 
00000000 4e088e58   v v v v v v v v   7f a9 13 bc c6 0a 25 3c 
00000000 4e088e50   v v v v v v v v   e5 48 df 75 23 58 41 28 
00000000 4e088e48   v v v v v v v v   18 c8 79 c9 9c 6b a8 fd 
00000000 4e088e40   v v v v v v v v   d8 d1 23 b3 44 7d 1d c3 
00000000 4e088e38   v v v v v v v v   e3 08 97 89 25 dc 5d 70 
00000000 4e088e30   v v v v v v v v   25 87 34 fb 40 78 ae 4e 
00000000 4e088e28   v v v v v v v v   2c 0e 21 9e 93 d7 da 24 
00000000 4e088e20   v v v v v v v .   8c a6 96 81 99 15 2c 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (46)                                                Lowest Known Correct Cost (57)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  movl %edi, %edi           #  2     0x2   2      OPC=movl_r32_r32           xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  3     0x4   4      OPC=movl_r32_m32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  testl %ecx, %ecx          #  4     0x8   2      OPC=testl_r32_r32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  je .L_142ce0              #  5     0xa   2      OPC=je_label               movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0xc   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xd   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xe   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0xf   1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x10  1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x11  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  movq %rdi, %rdx           #  12    0x12  3      OPC=movq_r64_r64           nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x1e  0      OPC=<label>                nop                       #  22    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  22    0x1e  3      OPC=addl_r32_imm8        .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  23    0x21  4      OPC=movl_r32_m32           addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  testl %ecx, %eax          #  24    0x25  2      OPC=testl_r32_r32          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  25    0x27  2      OPC=jne_label              movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl %edx, %eax           #  26    0x29  2      OPC=movl_r32_r32           testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  subl %edi, %eax           #  27    0x2b  2      OPC=subl_r32_r32_1         jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  nop                       #  28    0x2d  1      OPC=nop                    movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2e  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2f  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  sarl $0x2, %eax           #  33    0x32  3      OPC=sarl_r32_imm8          nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
.L_142ce0:                  #        0x3d  0      OPC=<label>                nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  42    0x3d  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  43    0x3e  2      OPC=popq_r64_1             popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  44    0x40  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  45    0x44  3      OPC=addq_r64_r64           addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  46    0x47  3      OPC=jmpq_r64               jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                     
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                    
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (45)                                                Lowest Known Correct Cost (57)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  movl %edi, %edi           #  2     0x2   2      OPC=movl_r32_r32           xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  3     0x4   4      OPC=movl_r32_m32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  testl %ecx, %ecx          #  4     0x8   2      OPC=testl_r32_r32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  je .L_142ce0              #  5     0xa   2      OPC=je_label               movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0xc   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xd   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xe   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0xf   1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x10  1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x11  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  movq %rdi, %rdx           #  12    0x12  3      OPC=movq_r64_r64           nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x1e  0      OPC=<label>                nop                       #  22    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  22    0x1e  3      OPC=addl_r32_imm8        .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  23    0x21  4      OPC=movl_r32_m32           addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  testl %ecx, %eax          #  24    0x25  2      OPC=testl_r32_r32          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  25    0x27  2      OPC=jne_label              movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl %edx, %eax           #  26    0x29  2      OPC=movl_r32_r32           testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  subl %edi, %eax           #  27    0x2b  2      OPC=subl_r32_r32_1         jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  nop                       #  28    0x2d  1      OPC=nop                    movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2e  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2f  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  sarl $0x2, %eax           #  33    0x32  3      OPC=sarl_r32_imm8          nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3d  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x3e  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  43    0x3e  1      OPC=nop                    popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  popq %r11                 #  44    0x3f  2      OPC=popq_r64_1             andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  andl $0xe0, %r11d         #  45    0x41  4      OPC=andl_r32_imm8          addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  addq %r15, %r11           #  46    0x45  3      OPC=addq_r64_r64           jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  jmpq %r11                 #  47    0x48  3      OPC=jmpq_r64                                                                                       
                                                                           .size wcslen, .-wcslen                                                    
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (44)                                                Lowest Known Correct Cost (44)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32         
  orl %edi, %edi            #  3     0x3   2      OPC=orl_r32_r32            orl %edi, %edi            #  3     0x3   2      OPC=orl_r32_r32          
  movl (%r15,%rdi,1), %ecx  #  4     0x5   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  4     0x5   4      OPC=movl_r32_m32         
  testl %ecx, %ecx          #  5     0x9   2      OPC=testl_r32_r32          testl %ecx, %ecx          #  5     0x9   2      OPC=testl_r32_r32        
  je .L_142ce0              #  6     0xb   2      OPC=je_label               je .L_142ce0              #  6     0xb   2      OPC=je_label             
  nop                       #  7     0xd   1      OPC=nop                    nop                       #  7     0xd   1      OPC=nop                  
  nop                       #  8     0xe   1      OPC=nop                    nop                       #  8     0xe   1      OPC=nop                  
  nop                       #  9     0xf   1      OPC=nop                    nop                       #  9     0xf   1      OPC=nop                  
  nop                       #  10    0x10  1      OPC=nop                    nop                       #  10    0x10  1      OPC=nop                  
  nop                       #  11    0x11  1      OPC=nop                    nop                       #  11    0x11  1      OPC=nop                  
  nop                       #  12    0x12  1      OPC=nop                    nop                       #  12    0x12  1      OPC=nop                  
  addl $0xfffffffa, %eax    #  13    0x13  5      OPC=addl_eax_imm32         addl $0xfffffffa, %eax    #  13    0x13  5      OPC=addl_eax_imm32       
  nop                       #  14    0x18  1      OPC=nop                    nop                       #  14    0x18  1      OPC=nop                  
  nop                       #  15    0x19  1      OPC=nop                    nop                       #  15    0x19  1      OPC=nop                  
  nop                       #  16    0x1a  1      OPC=nop                    nop                       #  16    0x1a  1      OPC=nop                  
  nop                       #  17    0x1b  1      OPC=nop                    nop                       #  17    0x1b  1      OPC=nop                  
  movq %rdi, %rdx           #  18    0x1c  3      OPC=movq_r64_r64           movq %rdi, %rdx           #  18    0x1c  3      OPC=movq_r64_r64         
  nop                       #  19    0x1f  1      OPC=nop                    nop                       #  19    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  20    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  20    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %ecx  #  21    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  21    0x23  4      OPC=movl_r32_m32         
  testl %ecx, %eax          #  22    0x27  2      OPC=testl_r32_r32          testl %ecx, %eax          #  22    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  23    0x29  2      OPC=jne_label              jne .L_142cc0             #  23    0x29  2      OPC=jne_label            
  movl %edx, %eax           #  24    0x2b  2      OPC=movl_r32_r32           movl %edx, %eax           #  24    0x2b  2      OPC=movl_r32_r32         
  subl %edi, %eax           #  25    0x2d  2      OPC=subl_r32_r32_1         subl %edi, %eax           #  25    0x2d  2      OPC=subl_r32_r32_1       
  nop                       #  26    0x2f  1      OPC=nop                    nop                       #  26    0x2f  1      OPC=nop                  
  nop                       #  27    0x30  1      OPC=nop                    nop                       #  27    0x30  1      OPC=nop                  
  nop                       #  28    0x31  1      OPC=nop                    nop                       #  28    0x31  1      OPC=nop                  
  nop                       #  29    0x32  1      OPC=nop                    nop                       #  29    0x32  1      OPC=nop                  
  nop                       #  30    0x33  1      OPC=nop                    nop                       #  30    0x33  1      OPC=nop                  
  nop                       #  31    0x34  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                  
  nop                       #  32    0x35  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                  
  nop                       #  33    0x36  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                  
  sarl $0x2, %eax           #  34    0x37  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  34    0x37  3      OPC=sarl_r32_imm8        
  nop                       #  35    0x3a  1      OPC=nop                    nop                       #  35    0x3a  1      OPC=nop                  
  nop                       #  36    0x3b  1      OPC=nop                    nop                       #  36    0x3b  1      OPC=nop                  
  nop                       #  37    0x3c  1      OPC=nop                    nop                       #  37    0x3c  1      OPC=nop                  
  nop                       #  38    0x3d  1      OPC=nop                    nop                       #  38    0x3d  1      OPC=nop                  
  nop                       #  39    0x3e  1      OPC=nop                    nop                       #  39    0x3e  1      OPC=nop                  
  nop                       #  40    0x3f  1      OPC=nop                    nop                       #  40    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nopl %eax                 #  41    0x40  3      OPC=nopl_r32               nopl %eax                 #  41    0x40  3      OPC=nopl_r32             
  popq %r11                 #  42    0x43  2      OPC=popq_r64_1             popq %r11                 #  42    0x43  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  43    0x45  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  43    0x45  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  44    0x49  3      OPC=addq_r64_r64           addq %r15, %r11           #  44    0x49  3      OPC=addq_r64_r64         
  jmpq %r11                 #  45    0x4c  3      OPC=jmpq_r64               jmpq %r11                 #  45    0x4c  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (43)                                                Lowest Known Correct Cost (43)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  nop                       #  2     0x2   1      OPC=nop                    nop                       #  2     0x2   1      OPC=nop                  
  nop                       #  3     0x3   1      OPC=nop                    nop                       #  3     0x3   1      OPC=nop                  
  nop                       #  4     0x4   1      OPC=nop                    nop                       #  4     0x4   1      OPC=nop                  
  nop                       #  5     0x5   1      OPC=nop                    nop                       #  5     0x5   1      OPC=nop                  
  nop                       #  6     0x6   1      OPC=nop                    nop                       #  6     0x6   1      OPC=nop                  
  movl %edi, %edx           #  7     0x7   2      OPC=movl_r32_r32_1         movl %edi, %edx           #  7     0x7   2      OPC=movl_r32_r32_1       
  movl (%r15,%rdx,1), %ecx  #  8     0x9   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  8     0x9   4      OPC=movl_r32_m32         
  nop                       #  9     0xd   1      OPC=nop                    nop                       #  9     0xd   1      OPC=nop                  
  testl %ecx, %ecx          #  10    0xe   2      OPC=testl_r32_r32          testl %ecx, %ecx          #  10    0xe   2      OPC=testl_r32_r32        
  je .L_142ce0              #  11    0x10  2      OPC=je_label               je .L_142ce0              #  11    0x10  2      OPC=je_label             
  nop                       #  12    0x12  1      OPC=nop                    nop                       #  12    0x12  1      OPC=nop                  
  nop                       #  13    0x13  1      OPC=nop                    nop                       #  13    0x13  1      OPC=nop                  
  nop                       #  14    0x14  1      OPC=nop                    nop                       #  14    0x14  1      OPC=nop                  
  nop                       #  15    0x15  1      OPC=nop                    nop                       #  15    0x15  1      OPC=nop                  
  nop                       #  16    0x16  1      OPC=nop                    nop                       #  16    0x16  1      OPC=nop                  
  nop                       #  17    0x17  1      OPC=nop                    nop                       #  17    0x17  1      OPC=nop                  
  nop                       #  18    0x18  1      OPC=nop                    nop                       #  18    0x18  1      OPC=nop                  
  nop                       #  19    0x19  1      OPC=nop                    nop                       #  19    0x19  1      OPC=nop                  
  nop                       #  20    0x1a  1      OPC=nop                    nop                       #  20    0x1a  1      OPC=nop                  
  nop                       #  21    0x1b  1      OPC=nop                    nop                       #  21    0x1b  1      OPC=nop                  
  nop                       #  22    0x1c  1      OPC=nop                    nop                       #  22    0x1c  1      OPC=nop                  
  nop                       #  23    0x1d  1      OPC=nop                    nop                       #  23    0x1d  1      OPC=nop                  
  nop                       #  24    0x1e  1      OPC=nop                    nop                       #  24    0x1e  1      OPC=nop                  
  nop                       #  25    0x1f  1      OPC=nop                    nop                       #  25    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  26    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  26    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %ecx  #  27    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  27    0x23  4      OPC=movl_r32_m32         
  testl %ecx, %ecx          #  28    0x27  2      OPC=testl_r32_r32          testl %ecx, %ecx          #  28    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  29    0x29  2      OPC=jne_label              jne .L_142cc0             #  29    0x29  2      OPC=jne_label            
  nop                       #  30    0x2b  1      OPC=nop                    nop                       #  30    0x2b  1      OPC=nop                  
  nop                       #  31    0x2c  1      OPC=nop                    nop                       #  31    0x2c  1      OPC=nop                  
  subq %rdi, %rax           #  32    0x2d  3      OPC=subq_r64_r64_1         subq %rdi, %rax           #  32    0x2d  3      OPC=subq_r64_r64_1       
  addl %edx, %eax           #  33    0x30  2      OPC=addl_r32_r32_1         addl %edx, %eax           #  33    0x30  2      OPC=addl_r32_r32_1       
  nop                       #  34    0x32  1      OPC=nop                    nop                       #  34    0x32  1      OPC=nop                  
  nop                       #  35    0x33  1      OPC=nop                    nop                       #  35    0x33  1      OPC=nop                  
  nop                       #  36    0x34  1      OPC=nop                    nop                       #  36    0x34  1      OPC=nop                  
  nop                       #  37    0x35  1      OPC=nop                    nop                       #  37    0x35  1      OPC=nop                  
  nop                       #  38    0x36  1      OPC=nop                    nop                       #  38    0x36  1      OPC=nop                  
  nop                       #  39    0x37  1      OPC=nop                    nop                       #  39    0x37  1      OPC=nop                  
  nop                       #  40    0x38  1      OPC=nop                    nop                       #  40    0x38  1      OPC=nop                  
  nop                       #  41    0x39  1      OPC=nop                    nop                       #  41    0x39  1      OPC=nop                  
  nop                       #  42    0x3a  1      OPC=nop                    nop                       #  42    0x3a  1      OPC=nop                  
  nop                       #  43    0x3b  1      OPC=nop                    nop                       #  43    0x3b  1      OPC=nop                  
  sarq $0x2, %rax           #  44    0x3c  4      OPC=sarq_r64_imm8          sarq $0x2, %rax           #  44    0x3c  4      OPC=sarq_r64_imm8        
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  45    0x40  1      OPC=nop                    nop                       #  45    0x40  1      OPC=nop                  
  nop                       #  46    0x41  1      OPC=nop                    nop                       #  46    0x41  1      OPC=nop                  
  nop                       #  47    0x42  1      OPC=nop                    nop                       #  47    0x42  1      OPC=nop                  
  nop                       #  48    0x43  1      OPC=nop                    nop                       #  48    0x43  1      OPC=nop                  
  nop                       #  49    0x44  1      OPC=nop                    nop                       #  49    0x44  1      OPC=nop                  
  nop                       #  50    0x45  1      OPC=nop                    nop                       #  50    0x45  1      OPC=nop                  
  popq %r11                 #  51    0x46  2      OPC=popq_r64_1             popq %r11                 #  51    0x46  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  52    0x48  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  52    0x48  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  53    0x4c  3      OPC=addq_r64_r64           addq %r15, %r11           #  53    0x4c  3      OPC=addq_r64_r64         
  jmpq %r11                 #  54    0x4f  3      OPC=jmpq_r64               jmpq %r11                 #  54    0x4f  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  94.2108s
Iterations/s:                  1061.45

Starting cost:                 57
Lowest cost:                   43
Lowest correct cost:           43

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.299%       7.826%        7.567%       
Local Swap      8.254%       4.064%        3.352%       
Global Copy     8.457%       7.818%        7.818%       
Global Swap     8.214%       7.21%         6.427%       
Operand         8.369%       4.54%         1.883%       
Rotate          8.407%       7.639%        5.734%       
ReplaceNop      8.419%       7.96%         7.514%       
Delete          8.235%       7.808%        6.595%       
Instruction     8.253%       4.881%        0.631%       
Add Nops        8.276%       8.276%        6.466%       
OpcodeWidth     8.34%        7.527%        7.328%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.477%       1.547%        0.001%       
                                                        
Total           100%         77.096%       61.316%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  274.078s
Iterations/s:                  729.719

Starting cost:                 57
Lowest cost:                   43
Lowest correct cost:           43

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.369%       8.075%        7.9095%      
Local Swap      8.2425%      3.898%        3.2205%      
Global Copy     8.385%       7.9905%       7.9905%      
Global Swap     8.287%       7.6665%       7.151%       
Operand         8.3275%      4.754%        2.124%       
Rotate          8.4335%      7.9315%       6.496%       
ReplaceNop      8.351%       8.0615%       7.783%       
Delete          8.2595%      7.9715%       6.978%       
Instruction     8.279%       4.8915%       0.6015%      
Add Nops        8.322%       8.322%        6.9535%      
OpcodeWidth     8.306%       7.7755%       7.642%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.438%       1.5665%       0.0005%      
                                                        
Total           100%         78.904%       64.85%       

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  534.876s
Iterations/s:                  560.878

Starting cost:                 57
Lowest cost:                   43
Lowest correct cost:           43

Move Type       Proposed     Succeeded     Accepted      
                                                         
Opcode          8.359%       8.138%        8.01133%      
Local Swap      8.26967%     3.94233%      3.24667%      
Global Copy     8.35967%     8.06767%      8.06767%      
Global Swap     8.317%       7.851%        7.43767%      
Operand         8.33767%     4.86867%      2.33533%      
Rotate          8.39333%     8.01367%      6.77233%      
ReplaceNop      8.33033%     8.111%        7.90467%      
Delete          8.24167%     8.02333%      7.10733%      
Instruction     8.30433%     4.91533%      0.604667%     
Add Nops        8.321%       8.321%        7.086%        
OpcodeWidth     8.34667%     7.945%        7.83433%      
2xWeighted      0%           0%            0%            
Memory+Swap     8.41967%     1.607%        0.001%        
                                                         
Total           100%         79.804%       66.409%       

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  841.328s
Iterations/s:                  475.439

Starting cost:                 57
Lowest cost:                   43
Lowest correct cost:           43

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.39%        8.20725%      8.099%       
Local Swap      8.267%       4.0575%       3.3535%      
Global Copy     8.34375%     8.10825%      8.10825%     
Global Swap     8.326%       7.9425%       7.588%       
Operand         8.3335%      5.061%        2.56275%     
Rotate          8.38325%     8.0715%       6.89775%     
ReplaceNop      8.32875%     8.1475%       7.97925%     
Delete          8.27175%     8.09225%      7.16425%     
Instruction     8.2905%      4.892%        0.6135%      
Add Nops        8.31825%     8.31825%      7.12225%     
OpcodeWidth     8.3175%      7.98075%      7.88125%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.42975%     1.62175%      0.001%       
                                                        
Total           100%         80.5005%      67.3708%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  1181.5s
Iterations/s:                  423.19

Starting cost:                 57
Lowest cost:                   43
Lowest correct cost:           43

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.4042%      8.2464%       8.1522%      
Local Swap      8.2538%      4.1324%       3.416%       
Global Copy     8.3436%      8.1422%       8.1422%      
Global Swap     8.3298%      7.9916%       7.6678%      
Operand         8.2882%      5.2142%       2.77%        
Rotate          8.3948%      8.127%        6.9404%      
ReplaceNop      8.3472%      8.1886%       8.0424%      
Delete          8.313%       8.155%        7.1588%      
Instruction     8.2818%      4.9358%       0.6464%      
Add Nops        8.3048%      8.3048%       7.0726%      
OpcodeWidth     8.3318%      8.0324%       7.9356%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.407%       1.6756%       0.0008%      
                                                        
Total           100%         81.146%       67.9452%     

********************************************************************************

TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
testl %ecx, %ecx
nop 
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 2
SAME MAP
     0 1 
------------------
0  |   1 
1  |     

NEXT MAP
     0 1 
------------------
0  |   0 
1  |     

TOTAL CELLS: 1
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
ALIASING CASES: 1
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %ecx
testl %ecx, %ecx
nop 
nop 
nop 
subq %rdi, %rax
addl %edx, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sarq $0x2, %rax
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   1 0 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %ecx
testl %ecx, %ecx
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %ecx
testl %ecx, %ecx
nop 
nop 
nop 
subq %rdi, %rax
addl %edx, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sarq $0x2, %rax
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   1 0 0 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
Access 3 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
testl %ecx, %ecx
nop 
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   0 1 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %ecx
testl %ecx, %ecx
nop 
nop 
nop 
subq %rdi, %rax
addl %edx, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sarq $0x2, %rax
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 1 0 
1  |     0 1 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %ecx
testl %ecx, %ecx
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %ecx
testl %ecx, %ecx
nop 
nop 
nop 
subq %rdi, %rax
addl %edx, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sarq $0x2, %rax
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 1 0 0 
1  |     0 1 0 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 4)
Access 4 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
testl %ecx, %ecx
nop 
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 0 1 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %ecx
testl %ecx, %ecx
nop 
nop 
nop 
subq %rdi, %rax
addl %edx, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sarq $0x2, %rax
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 0 1 0 
1  |     0 0 1 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %ecx
testl %ecx, %ecx
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %ecx
testl %ecx, %ecx
nop 
nop 
nop 
subq %rdi, %rax
addl %edx, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sarq $0x2, %rax
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 1 0 0 
1  |     0 0 1 0 
2  |       0 0 1 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 0 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 4 (cell size 4)
Access 5 cell 2 offset 0 size 4 (cell size 4)
################################################################################

Final update:

Total search iterations:       4500000
Number of attempted searches:  9
Total search time:             6420.18s
Total time:                    6448.79s

Statistics of last search

Iterations:                    500000
Elapsed Time:                  1181.5s
Iterations/s:                  423.19

Starting cost:                 57
Lowest cost:                   43
Lowest correct cost:           43

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.4042%      8.2464%       8.1522%      
Local Swap      8.2538%      4.1324%       3.416%       
Global Copy     8.3436%      8.1422%       8.1422%      
Global Swap     8.3298%      7.9916%       7.6678%      
Operand         8.2882%      5.2142%       2.77%        
Rotate          8.3948%      8.127%        6.9404%      
ReplaceNop      8.3472%      8.1886%       8.0424%      
Delete          8.313%       8.155%        7.1588%      
Instruction     8.2818%      4.9358%       0.6464%      
Add Nops        8.3048%      8.3048%       7.0726%      
OpcodeWidth     8.3318%      8.0324%       7.9356%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.407%       1.6756%       0.0008%      
                                                        
Total           100%         81.146%       67.9452%     

Lowest Cost Discovered (43)                                                
                                                                           
  .text                                                                    
  .globl wcslen                                                            
  .type wcslen, @function                                                  
                                                                           
#! file-offset 0                                                           
#! rip-offset  0                                                           
#! capacity    0 bytes                                                     
                                                                           
# Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  nop                       #  2     0x2   1      OPC=nop                  
  nop                       #  3     0x3   1      OPC=nop                  
  nop                       #  4     0x4   1      OPC=nop                  
  nop                       #  5     0x5   1      OPC=nop                  
  nop                       #  6     0x6   1      OPC=nop                  
  movl %edi, %edx           #  7     0x7   2      OPC=movl_r32_r32_1       
  movl (%r15,%rdx,1), %ecx  #  8     0x9   4      OPC=movl_r32_m32         
  nop                       #  9     0xd   1      OPC=nop                  
  testl %ecx, %ecx          #  10    0xe   2      OPC=testl_r32_r32        
  je .L_142ce0              #  11    0x10  2      OPC=je_label             
  nop                       #  12    0x12  1      OPC=nop                  
  nop                       #  13    0x13  1      OPC=nop                  
  nop                       #  14    0x14  1      OPC=nop                  
  nop                       #  15    0x15  1      OPC=nop                  
  nop                       #  16    0x16  1      OPC=nop                  
  nop                       #  17    0x17  1      OPC=nop                  
  nop                       #  18    0x18  1      OPC=nop                  
  nop                       #  19    0x19  1      OPC=nop                  
  nop                       #  20    0x1a  1      OPC=nop                  
  nop                       #  21    0x1b  1      OPC=nop                  
  nop                       #  22    0x1c  1      OPC=nop                  
  nop                       #  23    0x1d  1      OPC=nop                  
  nop                       #  24    0x1e  1      OPC=nop                  
  nop                       #  25    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  26    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %ecx  #  27    0x23  4      OPC=movl_r32_m32         
  testl %ecx, %ecx          #  28    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  29    0x29  2      OPC=jne_label            
  nop                       #  30    0x2b  1      OPC=nop                  
  nop                       #  31    0x2c  1      OPC=nop                  
  subq %rdi, %rax           #  32    0x2d  3      OPC=subq_r64_r64_1       
  addl %edx, %eax           #  33    0x30  2      OPC=addl_r32_r32_1       
  nop                       #  34    0x32  1      OPC=nop                  
  nop                       #  35    0x33  1      OPC=nop                  
  nop                       #  36    0x34  1      OPC=nop                  
  nop                       #  37    0x35  1      OPC=nop                  
  nop                       #  38    0x36  1      OPC=nop                  
  nop                       #  39    0x37  1      OPC=nop                  
  nop                       #  40    0x38  1      OPC=nop                  
  nop                       #  41    0x39  1      OPC=nop                  
  nop                       #  42    0x3a  1      OPC=nop                  
  nop                       #  43    0x3b  1      OPC=nop                  
  sarq $0x2, %rax           #  44    0x3c  4      OPC=sarq_r64_imm8        
.L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  45    0x40  1      OPC=nop                  
  nop                       #  46    0x41  1      OPC=nop                  
  nop                       #  47    0x42  1      OPC=nop                  
  nop                       #  48    0x43  1      OPC=nop                  
  nop                       #  49    0x44  1      OPC=nop                  
  nop                       #  50    0x45  1      OPC=nop                  
  popq %r11                 #  51    0x46  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  52    0x48  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  53    0x4c  3      OPC=addq_r64_r64         
  jmpq %r11                 #  54    0x4f  3      OPC=jmpq_r64             
                                                                           
.size wcslen, .-wcslen                                                     
Lowest Known Correct Cost (43)                                             
                                                                           
  .text                                                                    
  .globl wcslen                                                            
  .type wcslen, @function                                                  
                                                                           
#! file-offset 0                                                           
#! rip-offset  0                                                           
#! capacity    0 bytes                                                     
                                                                           
# Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  nop                       #  2     0x2   1      OPC=nop                  
  nop                       #  3     0x3   1      OPC=nop                  
  nop                       #  4     0x4   1      OPC=nop                  
  nop                       #  5     0x5   1      OPC=nop                  
  nop                       #  6     0x6   1      OPC=nop                  
  movl %edi, %edx           #  7     0x7   2      OPC=movl_r32_r32_1       
  movl (%r15,%rdx,1), %ecx  #  8     0x9   4      OPC=movl_r32_m32         
  nop                       #  9     0xd   1      OPC=nop                  
  testl %ecx, %ecx          #  10    0xe   2      OPC=testl_r32_r32        
  je .L_142ce0              #  11    0x10  2      OPC=je_label             
  nop                       #  12    0x12  1      OPC=nop                  
  nop                       #  13    0x13  1      OPC=nop                  
  nop                       #  14    0x14  1      OPC=nop                  
  nop                       #  15    0x15  1      OPC=nop                  
  nop                       #  16    0x16  1      OPC=nop                  
  nop                       #  17    0x17  1      OPC=nop                  
  nop                       #  18    0x18  1      OPC=nop                  
  nop                       #  19    0x19  1      OPC=nop                  
  nop                       #  20    0x1a  1      OPC=nop                  
  nop                       #  21    0x1b  1      OPC=nop                  
  nop                       #  22    0x1c  1      OPC=nop                  
  nop                       #  23    0x1d  1      OPC=nop                  
  nop                       #  24    0x1e  1      OPC=nop                  
  nop                       #  25    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  26    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %ecx  #  27    0x23  4      OPC=movl_r32_m32         
  testl %ecx, %ecx          #  28    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  29    0x29  2      OPC=jne_label            
  nop                       #  30    0x2b  1      OPC=nop                  
  nop                       #  31    0x2c  1      OPC=nop                  
  subq %rdi, %rax           #  32    0x2d  3      OPC=subq_r64_r64_1       
  addl %edx, %eax           #  33    0x30  2      OPC=addl_r32_r32_1       
  nop                       #  34    0x32  1      OPC=nop                  
  nop                       #  35    0x33  1      OPC=nop                  
  nop                       #  36    0x34  1      OPC=nop                  
  nop                       #  37    0x35  1      OPC=nop                  
  nop                       #  38    0x36  1      OPC=nop                  
  nop                       #  39    0x37  1      OPC=nop                  
  nop                       #  40    0x38  1      OPC=nop                  
  nop                       #  41    0x39  1      OPC=nop                  
  nop                       #  42    0x3a  1      OPC=nop                  
  nop                       #  43    0x3b  1      OPC=nop                  
  sarq $0x2, %rax           #  44    0x3c  4      OPC=sarq_r64_imm8        
.L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  45    0x40  1      OPC=nop                  
  nop                       #  46    0x41  1      OPC=nop                  
  nop                       #  47    0x42  1      OPC=nop                  
  nop                       #  48    0x43  1      OPC=nop                  
  nop                       #  49    0x44  1      OPC=nop                  
  nop                       #  50    0x45  1      OPC=nop                  
  popq %r11                 #  51    0x46  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  52    0x48  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  53    0x4c  3      OPC=addq_r64_r64         
  jmpq %r11                 #  54    0x4f  3      OPC=jmpq_r64             
                                                                           
.size wcslen, .-wcslen                                                     
                                                                           

################################################################################

Search terminated successfully with a verified rewrite!
