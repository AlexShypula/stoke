Training TCs: 10
flags for addb_al_imm8: { }
flags for addw_ax_imm16: { }
flags for addl_eax_imm32: { }
flags for addw_m16_imm16: { }
flags for addw_m16_imm8: { }
flags for addw_m16_r16: { }
flags for addl_m32_imm32: { }
flags for addl_m32_imm8: { }
flags for addl_m32_r32: { }
flags for addq_m64_imm32: { }
flags for addq_m64_imm8: { }
flags for addq_m64_r64: { }
flags for addb_m8_imm8: { }
flags for addb_m8_r8: { }
flags for addb_m8_rh: { }
flags for addw_r16_imm16: { }
flags for addw_r16_imm8: { }
flags for addw_r16_m16: { }
flags for addw_r16_r16: { }
flags for addw_r16_r16_1: { }
flags for addl_r32_imm32: { }
flags for addl_r32_imm8: { }
flags for addl_r32_m32: { }
flags for addl_r32_r32: { }
flags for addl_r32_r32_1: { }
flags for addq_r64_imm32: { }
flags for addq_r64_imm8: { }
flags for addq_r64_m64: { }
flags for addq_r64_r64: { }
flags for addq_r64_r64_1: { }
flags for addb_r8_imm8: { }
flags for addb_r8_m8: { }
flags for addb_r8_r8: { }
flags for addb_r8_r8_1: { }
flags for addb_r8_rh: { }
flags for addb_r8_rh_1: { }
flags for addq_rax_imm32: { }
flags for addb_rh_imm8: { }
flags for addb_rh_m8: { }
flags for addb_rh_r8: { }
flags for addb_rh_r8_1: { }
flags for addb_rh_rh: { }
flags for addb_rh_rh_1: { }
flags for addpd_xmm_m128: { sse2 }
flags for addpd_xmm_xmm: { sse2 }
flags for addps_xmm_m128: { sse }
flags for addps_xmm_xmm: { sse }
flags for addsd_xmm_m64: { sse2 }
flags for addsd_xmm_xmm: { sse2 }
flags for addss_xmm_m32: { sse }
flags for addss_xmm_xmm: { sse }
flags for addsubpd_xmm_m128: { pni }
flags for addsubpd_xmm_xmm: { pni }
flags for addsubps_xmm_m128: { pni }
flags for addsubps_xmm_xmm: { pni }
flags for aesdec_xmm_m128: { aes }
flags for aesdec_xmm_xmm: { aes }
flags for aesdeclast_xmm_m128: { aes }
flags for aesdeclast_xmm_xmm: { aes }
flags for aesenc_xmm_m128: { aes }
flags for aesenc_xmm_xmm: { aes }
flags for aesenclast_xmm_m128: { aes }
flags for aesenclast_xmm_xmm: { aes }
flags for aesimc_xmm_m128: { aes }
flags for aesimc_xmm_xmm: { aes }
flags for aeskeygenassist_xmm_m128_imm8: { aes }
flags for aeskeygenassist_xmm_xmm_imm8: { aes }
flags for andb_al_imm8: { }
flags for andw_ax_imm16: { }
flags for andl_eax_imm32: { }
flags for andw_m16_imm16: { }
flags for andw_m16_imm8: { }
flags for andw_m16_r16: { }
flags for andl_m32_imm32: { }
flags for andl_m32_imm8: { }
flags for andl_m32_r32: { }
flags for andq_m64_imm32: { }
flags for andq_m64_imm8: { }
flags for andq_m64_r64: { }
flags for andb_m8_imm8: { }
flags for andb_m8_r8: { }
flags for andb_m8_rh: { }
flags for andw_r16_imm16: { }
flags for andw_r16_imm8: { }
flags for andw_r16_m16: { }
flags for andw_r16_r16: { }
flags for andw_r16_r16_1: { }
flags for andl_r32_imm32: { }
flags for andl_r32_imm8: { }
flags for andl_r32_m32: { }
flags for andl_r32_r32: { }
flags for andl_r32_r32_1: { }
flags for andq_r64_imm32: { }
flags for andq_r64_imm8: { }
flags for andq_r64_m64: { }
flags for andq_r64_r64: { }
flags for andq_r64_r64_1: { }
flags for andb_r8_imm8: { }
flags for andb_r8_m8: { }
flags for andb_r8_r8: { }
flags for andb_r8_r8_1: { }
flags for andb_r8_rh: { }
flags for andb_r8_rh_1: { }
flags for andq_rax_imm32: { }
flags for andb_rh_imm8: { }
flags for andb_rh_m8: { }
flags for andb_rh_r8: { }
flags for andb_rh_r8_1: { }
flags for andb_rh_rh: { }
flags for andb_rh_rh_1: { }
flags for andnl_r32_r32_m32: { bmi1 }
flags for andnl_r32_r32_r32: { bmi1 }
flags for andnq_r64_r64_m64: { bmi1 }
flags for andnq_r64_r64_r64: { bmi1 }
flags for andnpd_xmm_m128: { sse2 }
flags for andnpd_xmm_xmm: { sse2 }
flags for andnps_xmm_m128: { sse }
flags for andnps_xmm_xmm: { sse }
flags for andpd_xmm_m128: { sse2 }
flags for andpd_xmm_xmm: { sse2 }
flags for andps_xmm_m128: { sse }
flags for andps_xmm_xmm: { sse }
flags for bextrl_r32_m32_r32: { bmi1 }
flags for bextrl_r32_r32_r32: { bmi1 }
flags for bextrq_r64_m64_r64: { bmi1 }
flags for bextrq_r64_r64_r64: { bmi1 }
flags for blendpd_xmm_m128_imm8: { sse4_1 }
flags for blendpd_xmm_xmm_imm8: { sse4_1 }
flags for blendps_xmm_m128_imm8: { sse4_1 }
flags for blendps_xmm_xmm_imm8: { sse4_1 }
flags for blendvpd_xmm_m128_xmm0: { sse4_1 }
flags for blendvpd_xmm_xmm_xmm0: { sse4_1 }
flags for blendvps_xmm_m128_xmm0: { sse4_1 }
flags for blendvps_xmm_xmm_xmm0: { sse4_1 }
flags for blsil_r32_m32: { bmi1 }
flags for blsil_r32_r32: { bmi1 }
flags for blsiq_r64_m64: { bmi1 }
flags for blsiq_r64_r64: { bmi1 }
flags for blsmskl_r32_m32: { bmi1 }
flags for blsmskl_r32_r32: { bmi1 }
flags for blsmskq_r64_m64: { bmi1 }
flags for blsmskq_r64_r64: { bmi1 }
flags for blsrl_r32_m32: { bmi1 }
flags for blsrl_r32_r32: { bmi1 }
flags for blsrq_r64_m64: { bmi1 }
flags for blsrq_r64_r64: { bmi1 }
flags for bzhil_r32_m32_r32: { bmi2 }
flags for bzhil_r32_r32_r32: { bmi2 }
flags for bzhiq_r64_m64_r64: { bmi2 }
flags for bzhiq_r64_r64_r64: { bmi2 }
flags for cmovaw_r16_m16: { cmov }
flags for cmovaw_r16_r16: { cmov }
flags for cmoval_r32_m32: { cmov }
flags for cmoval_r32_r32: { cmov }
flags for cmovaq_r64_m64: { cmov }
flags for cmovaq_r64_r64: { cmov }
flags for cmovaew_r16_m16: { cmov }
flags for cmovaew_r16_r16: { cmov }
flags for cmovael_r32_m32: { cmov }
flags for cmovael_r32_r32: { cmov }
flags for cmovaeq_r64_m64: { cmov }
flags for cmovaeq_r64_r64: { cmov }
flags for cmovbw_r16_m16: { cmov }
flags for cmovbw_r16_r16: { cmov }
flags for cmovbl_r32_m32: { cmov }
flags for cmovbl_r32_r32: { cmov }
flags for cmovbq_r64_m64: { cmov }
flags for cmovbq_r64_r64: { cmov }
flags for cmovbew_r16_m16: { cmov }
flags for cmovbew_r16_r16: { cmov }
flags for cmovbel_r32_m32: { cmov }
flags for cmovbel_r32_r32: { cmov }
flags for cmovbeq_r64_m64: { cmov }
flags for cmovbeq_r64_r64: { cmov }
flags for cmovcw_r16_m16: { cmov }
flags for cmovcw_r16_r16: { cmov }
flags for cmovcl_r32_m32: { cmov }
flags for cmovcl_r32_r32: { cmov }
flags for cmovcq_r64_m64: { cmov }
flags for cmovcq_r64_r64: { cmov }
flags for cmovew_r16_m16: { cmov }
flags for cmovew_r16_r16: { cmov }
flags for cmovel_r32_m32: { cmov }
flags for cmovel_r32_r32: { cmov }
flags for cmoveq_r64_m64: { cmov }
flags for cmoveq_r64_r64: { cmov }
flags for cmovgw_r16_m16: { cmov }
flags for cmovgw_r16_r16: { cmov }
flags for cmovgl_r32_m32: { cmov }
flags for cmovgl_r32_r32: { cmov }
flags for cmovgq_r64_m64: { cmov }
flags for cmovgq_r64_r64: { cmov }
flags for cmovgew_r16_m16: { cmov }
flags for cmovgew_r16_r16: { cmov }
flags for cmovgel_r32_m32: { cmov }
flags for cmovgel_r32_r32: { cmov }
flags for cmovgeq_r64_m64: { cmov }
flags for cmovgeq_r64_r64: { cmov }
flags for cmovlw_r16_m16: { cmov }
flags for cmovlw_r16_r16: { cmov }
flags for cmovll_r32_m32: { cmov }
flags for cmovll_r32_r32: { cmov }
flags for cmovlq_r64_m64: { cmov }
flags for cmovlq_r64_r64: { cmov }
flags for cmovlew_r16_m16: { cmov }
flags for cmovlew_r16_r16: { cmov }
flags for cmovlel_r32_m32: { cmov }
flags for cmovlel_r32_r32: { cmov }
flags for cmovleq_r64_m64: { cmov }
flags for cmovleq_r64_r64: { cmov }
flags for cmovnaw_r16_m16: { cmov }
flags for cmovnaw_r16_r16: { cmov }
flags for cmovnal_r32_m32: { cmov }
flags for cmovnal_r32_r32: { cmov }
flags for cmovnaq_r64_m64: { cmov }
flags for cmovnaq_r64_r64: { cmov }
flags for cmovnaew_r16_m16: { cmov }
flags for cmovnaew_r16_r16: { cmov }
flags for cmovnael_r32_m32: { cmov }
flags for cmovnael_r32_r32: { cmov }
flags for cmovnaeq_r64_m64: { cmov }
flags for cmovnaeq_r64_r64: { cmov }
flags for cmovnbw_r16_m16: { cmov }
flags for cmovnbw_r16_r16: { cmov }
flags for cmovnbl_r32_m32: { cmov }
flags for cmovnbl_r32_r32: { cmov }
flags for cmovnbq_r64_m64: { cmov }
flags for cmovnbq_r64_r64: { cmov }
flags for cmovnbew_r16_m16: { cmov }
flags for cmovnbew_r16_r16: { cmov }
flags for cmovnbel_r32_m32: { cmov }
flags for cmovnbel_r32_r32: { cmov }
flags for cmovnbeq_r64_m64: { cmov }
flags for cmovnbeq_r64_r64: { cmov }
flags for cmovncw_r16_m16: { cmov }
flags for cmovncw_r16_r16: { cmov }
flags for cmovncl_r32_m32: { cmov }
flags for cmovncl_r32_r32: { cmov }
flags for cmovncq_r64_m64: { cmov }
flags for cmovncq_r64_r64: { cmov }
flags for cmovnew_r16_m16: { cmov }
flags for cmovnew_r16_r16: { cmov }
flags for cmovnel_r32_m32: { cmov }
flags for cmovnel_r32_r32: { cmov }
flags for cmovneq_r64_m64: { cmov }
flags for cmovneq_r64_r64: { cmov }
flags for cmovngw_r16_m16: { cmov }
flags for cmovngw_r16_r16: { cmov }
flags for cmovngl_r32_m32: { cmov }
flags for cmovngl_r32_r32: { cmov }
flags for cmovngq_r64_m64: { cmov }
flags for cmovngq_r64_r64: { cmov }
flags for cmovngew_r16_m16: { cmov }
flags for cmovngew_r16_r16: { cmov }
flags for cmovngel_r32_m32: { cmov }
flags for cmovngel_r32_r32: { cmov }
flags for cmovngeq_r64_m64: { cmov }
flags for cmovngeq_r64_r64: { cmov }
flags for cmovnlw_r16_m16: { cmov }
flags for cmovnlw_r16_r16: { cmov }
flags for cmovnll_r32_m32: { cmov }
flags for cmovnll_r32_r32: { cmov }
flags for cmovnlq_r64_m64: { cmov }
flags for cmovnlq_r64_r64: { cmov }
flags for cmovnlew_r16_m16: { cmov }
flags for cmovnlew_r16_r16: { cmov }
flags for cmovnlel_r32_m32: { cmov }
flags for cmovnlel_r32_r32: { cmov }
flags for cmovnleq_r64_m64: { cmov }
flags for cmovnleq_r64_r64: { cmov }
flags for cmovnow_r16_m16: { cmov }
flags for cmovnow_r16_r16: { cmov }
flags for cmovnol_r32_m32: { cmov }
flags for cmovnol_r32_r32: { cmov }
flags for cmovnoq_r64_m64: { cmov }
flags for cmovnoq_r64_r64: { cmov }
flags for cmovnpw_r16_m16: { cmov }
flags for cmovnpw_r16_r16: { cmov }
flags for cmovnpl_r32_m32: { cmov }
flags for cmovnpl_r32_r32: { cmov }
flags for cmovnpq_r64_m64: { cmov }
flags for cmovnpq_r64_r64: { cmov }
flags for cmovnsw_r16_m16: { cmov }
flags for cmovnsw_r16_r16: { cmov }
flags for cmovnsl_r32_m32: { cmov }
flags for cmovnsl_r32_r32: { cmov }
flags for cmovnsq_r64_m64: { cmov }
flags for cmovnsq_r64_r64: { cmov }
flags for cmovnzw_r16_m16: { cmov }
flags for cmovnzw_r16_r16: { cmov }
flags for cmovnzl_r32_m32: { cmov }
flags for cmovnzl_r32_r32: { cmov }
flags for cmovnzq_r64_m64: { cmov }
flags for cmovnzq_r64_r64: { cmov }
flags for cmovow_r16_m16: { cmov }
flags for cmovow_r16_r16: { cmov }
flags for cmovol_r32_m32: { cmov }
flags for cmovol_r32_r32: { cmov }
flags for cmovoq_r64_m64: { cmov }
flags for cmovoq_r64_r64: { cmov }
flags for cmovpw_r16_m16: { cmov }
flags for cmovpw_r16_r16: { cmov }
flags for cmovpl_r32_m32: { cmov }
flags for cmovpl_r32_r32: { cmov }
flags for cmovpq_r64_m64: { cmov }
flags for cmovpq_r64_r64: { cmov }
flags for cmovpew_r16_m16: { cmov }
flags for cmovpew_r16_r16: { cmov }
flags for cmovpel_r32_m32: { cmov }
flags for cmovpel_r32_r32: { cmov }
flags for cmovpeq_r64_m64: { cmov }
flags for cmovpeq_r64_r64: { cmov }
flags for cmovpow_r16_m16: { cmov }
flags for cmovpow_r16_r16: { cmov }
flags for cmovpol_r32_m32: { cmov }
flags for cmovpol_r32_r32: { cmov }
flags for cmovpoq_r64_m64: { cmov }
flags for cmovpoq_r64_r64: { cmov }
flags for cmovsw_r16_m16: { cmov }
flags for cmovsw_r16_r16: { cmov }
flags for cmovsl_r32_m32: { cmov }
flags for cmovsl_r32_r32: { cmov }
flags for cmovsq_r64_m64: { cmov }
flags for cmovsq_r64_r64: { cmov }
flags for cmovzw_r16_m16: { cmov }
flags for cmovzw_r16_r16: { cmov }
flags for cmovzl_r32_m32: { cmov }
flags for cmovzl_r32_r32: { cmov }
flags for cmovzq_r64_m64: { cmov }
flags for cmovzq_r64_r64: { cmov }
flags for comisd_xmm_m64: { sse2 }
flags for comisd_xmm_xmm: { sse2 }
flags for comiss_xmm_m32: { sse }
flags for comiss_xmm_xmm: { sse }
flags for cvtdq2pd_xmm_m64: { sse2 }
flags for cvtdq2pd_xmm_xmm: { sse2 }
flags for cvtdq2ps_xmm_m128: { sse2 }
flags for cvtdq2ps_xmm_xmm: { sse2 }
flags for cvtpd2dq_xmm_m128: { sse2 }
flags for cvtpd2dq_xmm_xmm: { sse2 }
flags for cvtpd2pi_mm_m128: { }
flags for cvtpd2pi_mm_xmm: { }
flags for cvtpd2ps_xmm_m128: { sse2 }
flags for cvtpd2ps_xmm_xmm: { sse2 }
flags for cvtpi2pd_xmm_m64: { }
flags for cvtpi2pd_xmm_mm: { }
flags for cvtpi2ps_xmm_m64: { }
flags for cvtpi2ps_xmm_mm: { }
flags for cvtps2dq_xmm_m128: { sse2 }
flags for cvtps2dq_xmm_xmm: { sse2 }
flags for cvtps2pd_xmm_m64: { sse2 }
flags for cvtps2pd_xmm_xmm: { sse2 }
flags for cvtps2pi_mm_m64: { }
flags for cvtps2pi_mm_xmm: { }
flags for cvtsd2si_r32_m64: { sse2 }
flags for cvtsd2si_r32_xmm: { sse2 }
flags for cvtsd2si_r64_m64: { sse2 }
flags for cvtsd2si_r64_xmm: { sse2 }
flags for cvtsd2ss_xmm_m64: { sse2 }
flags for cvtsd2ss_xmm_xmm: { sse2 }
flags for cvtsi2sdl_xmm_m32: { sse2 }
flags for cvtsi2sdq_xmm_m64: { sse2 }
flags for cvtsi2sdl_xmm_r32: { sse2 }
flags for cvtsi2sdq_xmm_r64: { sse2 }
flags for cvtsi2ssl_xmm_m32: { sse }
flags for cvtsi2ssq_xmm_m64: { sse }
flags for cvtsi2ssl_xmm_r32: { sse }
flags for cvtsi2ssq_xmm_r64: { sse }
flags for cvtss2sd_xmm_m32: { sse2 }
flags for cvtss2sd_xmm_xmm: { sse2 }
flags for cvtss2sil_r32_m32: { sse }
flags for cvtss2sil_r32_xmm: { sse }
flags for cvtss2siq_r64_m32: { sse }
flags for cvtss2siq_r64_xmm: { sse }
flags for cvttpd2dq_xmm_m128: { sse2 }
flags for cvttpd2dq_xmm_xmm: { sse2 }
flags for cvttpd2pi_mm_m128: { }
flags for cvttpd2pi_mm_xmm: { }
flags for cvttps2dq_xmm_m128: { sse2 }
flags for cvttps2dq_xmm_xmm: { sse2 }
flags for cvttps2pi_mm_m64: { }
flags for cvttps2pi_mm_xmm: { }
flags for cvttsd2si_r32_m64: { sse2 }
flags for cvttsd2si_r32_xmm: { sse2 }
flags for cvttsd2siq_r64_m64: { sse2 }
flags for cvttsd2siq_r64_xmm: { sse2 }
flags for cvttss2si_r32_m32: { sse }
flags for cvttss2si_r32_xmm: { sse }
flags for cvttss2siq_r64_m32: { sse }
flags for cvttss2siq_r64_xmm: { sse }
flags for decw_m16: { }
flags for decl_m32: { }
flags for decq_m64: { }
flags for decb_m8: { }
flags for decw_r16: { }
flags for decl_r32: { }
flags for decq_r64: { }
flags for decb_r8: { }
flags for decb_rh: { }
flags for dppd_xmm_m128_imm8: { sse4_1 }
flags for dppd_xmm_xmm_imm8: { sse4_1 }
flags for dpps_xmm_m128_imm8: { sse4_1 }
flags for dpps_xmm_xmm_imm8: { sse4_1 }
flags for extractps_m32_xmm_imm8: { sse4_1 }
flags for extractps_r32_xmm_imm8: { sse4_1 }
flags for extractps_r64_xmm_imm8: { sse4_1 }
flags for f2xm1: { fpu }
flags for fabs: { fpu }
flags for fadds_m32fp: { fpu }
flags for faddl_m64fp: { fpu }
flags for faddp: { fpu }
flags for fbld_m80bcd: { fpu }
flags for fbstp_m80bcd: { fpu }
flags for fchs: { fpu }
flags for fclex: { fpu }
flags for fcom: { fpu }
flags for fcoms_m32fp: { fpu }
flags for fcoml_m64fp: { fpu }
flags for fcomp: { fpu }
flags for fcomps_m32fp: { fpu }
flags for fcompl_m64fp: { fpu }
flags for fcompp: { fpu }
flags for fcos: { fpu }
flags for fdecstp: { fpu }
flags for fdivs_m32fp: { fpu }
flags for fdivl_m64fp: { fpu }
flags for fdivp: { fpu }
flags for fdivrs_m32fp: { fpu }
flags for fdivrl_m64fp: { fpu }
flags for fdivrp: { fpu }
flags for fiadd_m16int: { fpu }
flags for fiaddl_m32int: { fpu }
flags for ficom_m16int: { fpu }
flags for ficoml_m32int: { fpu }
flags for ficomp_m16int: { fpu }
flags for ficompl_m32int: { fpu }
flags for fidiv_m16int: { fpu }
flags for fidivl_m32int: { fpu }
flags for fidivr_m16int: { fpu }
flags for fidivrl_m32int: { fpu }
flags for fild_m16int: { fpu }
flags for fildl_m32int: { fpu }
flags for fildll_m64int: { fpu }
flags for fimul_m16int: { fpu }
flags for fimull_m32int: { fpu }
flags for fincstp: { fpu }
flags for finit: { fpu }
flags for fist_m16int: { fpu }
flags for fistl_m32int: { fpu }
flags for fistp_m16int: { fpu }
flags for fistpl_m32int: { fpu }
flags for fistpll_m64int: { fpu }
flags for fisttp_m16int: { fpu }
flags for fisttpl_m32int: { fpu }
flags for fisttpll_m64int: { fpu }
flags for fisub_m16int: { fpu }
flags for fisubl_m32int: { fpu }
flags for fisubr_m16int: { fpu }
flags for fisubrl_m32int: { fpu }
flags for flds_m32fp: { fpu }
flags for fldl_m64fp: { fpu }
flags for fldt_m80fp: { fpu }
flags for fld1: { fpu }
flags for fldl2e: { fpu }
flags for fldl2t: { fpu }
flags for fldlg2: { fpu }
flags for fldln2: { fpu }
flags for fldpi: { fpu }
flags for fldz: { fpu }
flags for fmuls_m32fp: { fpu }
flags for fmull_m64fp: { fpu }
flags for fmulp: { fpu }
flags for fnclex: { fpu }
flags for fninit: { fpu }
flags for fnop: { fpu }
flags for fnstsw_ax: { fpu }
flags for fpatan: { fpu }
flags for fprem: { fpu }
flags for fprem1: { fpu }
flags for fptan: { fpu }
flags for frndint: { fpu }
flags for fscale: { fpu }
flags for fsin: { fpu }
flags for fsincos: { fpu }
flags for fsqrt: { fpu }
flags for fsts_m32fp: { fpu }
flags for fstl_m64fp: { fpu }
flags for fstps_m32fp: { fpu }
flags for fstpl_m64fp: { fpu }
flags for fstpt_m80fp: { fpu }
flags for fstsw_ax: { fpu }
flags for fsubs_m32fp: { fpu }
flags for fsubl_m64fp: { fpu }
flags for fsubp: { fpu }
flags for fsubrs_m32fp: { fpu }
flags for fsubrl_m64fp: { fpu }
flags for fsubrp: { fpu }
flags for ftst: { fpu }
flags for fucom: { fpu }
flags for fucomp: { fpu }
flags for fucompp: { fpu }
flags for fwait: { fpu }
flags for fxam: { fpu }
flags for fxch: { fpu }
flags for fxtract: { fpu }
flags for fyl2x: { fpu }
flags for fyl2xp1: { fpu }
flags for haddpd_xmm_m128: { pni }
flags for haddpd_xmm_xmm: { pni }
flags for haddps_xmm_m128: { pni }
flags for haddps_xmm_xmm: { pni }
flags for hsubpd_xmm_m128: { pni }
flags for hsubpd_xmm_xmm: { pni }
flags for hsubps_xmm_m128: { pni }
flags for hsubps_xmm_xmm: { pni }
flags for incw_m16: { }
flags for incl_m32: { }
flags for incq_m64: { }
flags for incb_m8: { }
flags for incw_r16: { }
flags for incl_r32: { }
flags for incq_r64: { }
flags for incb_r8: { }
flags for incb_rh: { }
flags for insertps_xmm_m32_imm8: { sse4_1 }
flags for insertps_xmm_xmm_imm8: { sse4_1 }
flags for int_imm8: { }
flags for int_three: { }
flags for lahf: { lahf_lm }
flags for lddqu_xmm_m128: { pni }
flags for leaw_r16_m16: { }
flags for leaw_r16_m32: { }
flags for leaw_r16_m64: { }
flags for leal_r32_m16: { }
flags for leal_r32_m32: { }
flags for leal_r32_m64: { }
flags for leaq_r64_m16: { }
flags for leaq_r64_m32: { }
flags for leaq_r64_m64: { }
flags for lzcntw_r16_m16: { bmi1 }
flags for lzcntw_r16_r16: { bmi1 }
flags for lzcntl_r32_m32: { bmi1 }
flags for lzcntl_r32_r32: { bmi1 }
flags for lzcntq_r64_m64: { bmi1 }
flags for lzcntq_r64_r64: { bmi1 }
flags for maxpd_xmm_m128: { sse2 }
flags for maxpd_xmm_xmm: { sse2 }
flags for maxps_xmm_m128: { sse }
flags for maxps_xmm_xmm: { sse }
flags for maxsd_xmm_m64: { sse2 }
flags for maxsd_xmm_xmm: { sse2 }
flags for maxss_xmm_m32: { sse }
flags for maxss_xmm_xmm: { sse }
flags for minpd_xmm_m128: { sse2 }
flags for minpd_xmm_xmm: { sse2 }
flags for minps_xmm_m128: { sse }
flags for minps_xmm_xmm: { sse }
flags for minsd_xmm_m64: { sse2 }
flags for minsd_xmm_xmm: { sse2 }
flags for minss_xmm_m32: { sse }
flags for minss_xmm_xmm: { sse }
flags for movw_m16_imm16: { }
flags for movw_m16_r16: { }
flags for movl_m32_imm32: { }
flags for movl_m32_r32: { }
flags for movq_m64_imm32: { }
flags for movq_m64_r64: { }
flags for movb_m8_imm8: { }
flags for movb_m8_r8: { }
flags for movb_m8_rh: { }
flags for movw_r16_imm16: { }
flags for movw_r16_imm16_1: { }
flags for movw_r16_m16: { }
flags for movw_r16_r16: { }
flags for movw_r16_r16_1: { }
flags for movl_r32_imm32: { }
flags for movl_r32_imm32_1: { }
flags for movl_r32_m32: { }
flags for movl_r32_r32: { }
flags for movl_r32_r32_1: { }
flags for movq_r64_imm32: { }
flags for movq_r64_imm64: { }
flags for movq_r64_m64: { }
flags for movq_r64_r64: { }
flags for movq_r64_r64_1: { }
flags for movb_r8_imm8: { }
flags for movb_r8_imm8_1: { }
flags for movb_r8_m8: { }
flags for movb_r8_r8: { }
flags for movb_r8_r8_1: { }
flags for movb_r8_rh: { }
flags for movb_r8_rh_1: { }
flags for movb_rh_imm8: { }
flags for movb_rh_imm8_1: { }
flags for movb_rh_m8: { }
flags for movb_rh_r8: { }
flags for movb_rh_r8_1: { }
flags for movb_rh_rh: { }
flags for movb_rh_rh_1: { }
flags for movapd_m128_xmm: { sse2 }
flags for movapd_xmm_m128: { sse2 }
flags for movapd_xmm_xmm: { sse2 }
flags for movapd_xmm_xmm_1: { sse2 }
flags for movaps_m128_xmm: { sse }
flags for movaps_xmm_m128: { sse }
flags for movaps_xmm_xmm: { sse }
flags for movaps_xmm_xmm_1: { sse }
flags for movbew_m16_r16: { movbe }
flags for movbel_m32_r32: { movbe }
flags for movbeq_m64_r64: { movbe }
flags for movbew_r16_m16: { movbe }
flags for movbel_r32_m32: { movbe }
flags for movbeq_r64_m64: { movbe }
flags for movd_m32_mm: { mmx }
flags for movd_m32_xmm: { sse2 }
flags for movd_mm_m32: { mmx }
flags for movd_mm_r32: { mmx }
flags for movd_r32_mm: { mmx }
flags for movd_r32_xmm: { sse2 }
flags for movd_xmm_m32: { sse2 }
flags for movd_xmm_r32: { sse2 }
flags for movddup_xmm_m64: { pni }
flags for movddup_xmm_xmm: { pni }
flags for movdq2q_mm_xmm: { mmx }
flags for movdqa_m128_xmm: { sse2 }
flags for movdqa_xmm_m128: { sse2 }
flags for movdqa_xmm_xmm: { sse2 }
flags for movdqa_xmm_xmm_1: { sse2 }
flags for movdqu_m128_xmm: { sse2 }
flags for movdqu_xmm_m128: { sse2 }
flags for movdqu_xmm_xmm: { sse2 }
flags for movdqu_xmm_xmm_1: { sse2 }
flags for movhlps_xmm_xmm: { sse }
flags for movhpd_m64_xmm: { sse2 }
flags for movhpd_xmm_m64: { sse2 }
flags for movhps_m64_xmm: { sse }
flags for movhps_xmm_m64: { sse }
flags for movlhps_xmm_xmm: { sse }
flags for movlpd_m64_xmm: { sse2 }
flags for movlpd_xmm_m64: { sse2 }
flags for movlps_m64_xmm: { sse }
flags for movlps_xmm_m64: { sse }
flags for movmskpd_r32_xmm: { sse2 }
flags for movmskpd_r64_xmm: { sse2 }
flags for movmskps_r32_xmm: { sse }
flags for movmskps_r64_xmm: { sse }
flags for movntdq_m128_xmm: { sse2 }
flags for movntdq_m256_ymm: { avx }
flags for movntdqa_xmm_m128: { sse4_1 }
flags for movnti_m32_r32: { }
flags for movnti_m64_r64: { }
flags for movntpd_m128_xmm: { sse2 }
flags for movntps_m128_xmm: { sse }
flags for movntq_m64_mm: { }
flags for movq_m64_mm: { mmx }
flags for movq_m64_mm_1: { mmx }
flags for movq_m64_xmm: { sse2 }
flags for movq_m64_xmm_1: { sse2 }
flags for movq_mm_m64: { mmx }
flags for movq_mm_m64_1: { mmx }
flags for movq_mm_mm: { mmx }
flags for movq_mm_mm_1: { mmx }
flags for movq_mm_r64: { mmx }
flags for movq_r64_mm: { mmx }
flags for movq_r64_xmm: { sse2 }
flags for movq_xmm_m64: { sse2 }
flags for movq_xmm_m64_1: { sse2 }
flags for movq_xmm_r64: { sse2 }
flags for movq_xmm_xmm: { sse2 }
flags for movq_xmm_xmm_1: { sse2 }
flags for movq2dq_xmm_mm: { mmx }
flags for movsd_m64_xmm: { sse2 }
flags for movsd_xmm_m64: { sse2 }
flags for movsd_xmm_xmm: { sse2 }
flags for movsd_xmm_xmm_1: { sse2 }
flags for movshdup_xmm_m128: { pni }
flags for movshdup_xmm_xmm: { pni }
flags for movsldup_xmm_m128: { pni }
flags for movsldup_xmm_xmm: { pni }
flags for movss_m32_xmm: { sse }
flags for movss_xmm_m32: { sse }
flags for movss_xmm_xmm: { sse }
flags for movss_xmm_xmm_1: { sse }
flags for movsbw_r16_m8: { }
flags for movsbw_r16_r8: { }
flags for movsbw_r16_rh: { }
flags for movswl_r32_m16: { }
flags for movsbl_r32_m8: { }
flags for movswl_r32_r16: { }
flags for movsbl_r32_r8: { }
flags for movsbl_r32_rh: { }
flags for movswq_r64_m16: { }
flags for movsbq_r64_m8: { }
flags for movswq_r64_r16: { }
flags for movsbq_r64_r8: { }
flags for movslq_r64_m32: { }
flags for movslq_r64_r32: { }
flags for movupd_m128_xmm: { sse2 }
flags for movupd_xmm_m128: { sse2 }
flags for movupd_xmm_xmm: { sse2 }
flags for movupd_xmm_xmm_1: { sse2 }
flags for movups_m128_xmm: { sse }
flags for movups_xmm_m128: { sse }
flags for movups_xmm_xmm: { sse }
flags for movups_xmm_xmm_1: { sse }
flags for movzbw_r16_m8: { }
flags for movzbw_r16_r8: { }
flags for movzbw_r16_rh: { }
flags for movzwl_r32_m16: { }
flags for movzbl_r32_m8: { }
flags for movzwl_r32_r16: { }
flags for movzbl_r32_r8: { }
flags for movzbl_r32_rh: { }
flags for movzwq_r64_m16: { }
flags for movzbq_r64_m8: { }
flags for movzwq_r64_r16: { }
flags for movzbq_r64_r8: { }
flags for mpsadbw_xmm_m128_imm8: { sse4_1 }
flags for mpsadbw_xmm_xmm_imm8: { sse4_1 }
flags for negw_m16: { }
flags for negl_m32: { }
flags for negq_m64: { }
flags for negb_m8: { }
flags for negw_r16: { }
flags for negl_r32: { }
flags for negq_r64: { }
flags for negb_r8: { }
flags for negb_rh: { }
flags for nop: { }
flags for nopw_m16: { nopl }
flags for nopl_m32: { nopl }
flags for nopw_r16: { nopl }
flags for nopl_r32: { nopl }
flags for notw_m16: { }
flags for notl_m32: { }
flags for notq_m64: { }
flags for notb_m8: { }
flags for notw_r16: { }
flags for notl_r32: { }
flags for notq_r64: { }
flags for notb_r8: { }
flags for notb_rh: { }
flags for orb_al_imm8: { }
flags for orw_ax_imm16: { }
flags for orl_eax_imm32: { }
flags for orw_m16_imm16: { }
flags for orw_m16_imm8: { }
flags for orw_m16_r16: { }
flags for orl_m32_imm32: { }
flags for orl_m32_imm8: { }
flags for orl_m32_r32: { }
flags for orq_m64_imm32: { }
flags for orq_m64_imm8: { }
flags for orq_m64_r64: { }
flags for orb_m8_imm8: { }
flags for orb_m8_r8: { }
flags for orb_m8_rh: { }
flags for orw_r16_imm16: { }
flags for orw_r16_imm8: { }
flags for orw_r16_m16: { }
flags for orw_r16_r16: { }
flags for orw_r16_r16_1: { }
flags for orl_r32_imm32: { }
flags for orl_r32_imm8: { }
flags for orl_r32_m32: { }
flags for orl_r32_r32: { }
flags for orl_r32_r32_1: { }
flags for orq_r64_imm32: { }
flags for orq_r64_imm8: { }
flags for orq_r64_m64: { }
flags for orq_r64_r64: { }
flags for orq_r64_r64_1: { }
flags for orb_r8_imm8: { }
flags for orb_r8_m8: { }
flags for orb_r8_r8: { }
flags for orb_r8_r8_1: { }
flags for orb_r8_rh: { }
flags for orb_r8_rh_1: { }
flags for orq_rax_imm32: { }
flags for orb_rh_imm8: { }
flags for orb_rh_m8: { }
flags for orb_rh_r8: { }
flags for orb_rh_r8_1: { }
flags for orb_rh_rh: { }
flags for orb_rh_rh_1: { }
flags for orpd_xmm_m128: { sse2 }
flags for orpd_xmm_xmm: { sse2 }
flags for orps_xmm_m128: { sse }
flags for orps_xmm_xmm: { sse }
flags for pabsb_mm_m64: { ssse3 }
flags for pabsb_mm_mm: { ssse3 }
flags for pabsb_xmm_m128: { ssse3 }
flags for pabsb_xmm_xmm: { ssse3 }
flags for pabsd_mm_m64: { ssse3 }
flags for pabsd_mm_mm: { ssse3 }
flags for pabsd_xmm_m128: { ssse3 }
flags for pabsd_xmm_xmm: { ssse3 }
flags for pabsw_mm_m64: { ssse3 }
flags for pabsw_mm_mm: { ssse3 }
flags for pabsw_xmm_m128: { ssse3 }
flags for pabsw_xmm_xmm: { ssse3 }
flags for packssdw_mm_m64: { mmx }
flags for packssdw_mm_mm: { mmx }
flags for packssdw_xmm_m128: { sse2 }
flags for packssdw_xmm_xmm: { sse2 }
flags for packsswb_mm_m64: { mmx }
flags for packsswb_mm_mm: { mmx }
flags for packsswb_xmm_m128: { sse2 }
flags for packsswb_xmm_xmm: { sse2 }
flags for packusdw_xmm_m128: { sse4_1 }
flags for packusdw_xmm_xmm: { sse4_1 }
flags for packuswb_mm_m64: { mmx }
flags for packuswb_mm_mm: { mmx }
flags for packuswb_xmm_m128: { sse2 }
flags for packuswb_xmm_xmm: { sse2 }
flags for paddb_mm_m64: { mmx }
flags for paddb_mm_mm: { mmx }
flags for paddb_xmm_m128: { sse2 }
flags for paddb_xmm_xmm: { sse2 }
flags for paddd_mm_m64: { mmx }
flags for paddd_mm_mm: { mmx }
flags for paddd_xmm_m128: { sse2 }
flags for paddd_xmm_xmm: { sse2 }
flags for paddq_mm_m64: { sse2 }
flags for paddq_mm_mm: { sse2 }
flags for paddq_xmm_m128: { sse2 }
flags for paddq_xmm_xmm: { sse2 }
flags for paddsb_mm_m64: { mmx }
flags for paddsb_mm_mm: { mmx }
flags for paddsb_xmm_m128: { sse2 }
flags for paddsb_xmm_xmm: { sse2 }
flags for paddsw_mm_m64: { mmx }
flags for paddsw_mm_mm: { mmx }
flags for paddsw_xmm_m128: { sse2 }
flags for paddsw_xmm_xmm: { sse2 }
flags for paddusb_mm_m64: { mmx }
flags for paddusb_mm_mm: { mmx }
flags for paddusb_xmm_m128: { sse2 }
flags for paddusb_xmm_xmm: { sse2 }
flags for paddusw_mm_m64: { mmx }
flags for paddusw_mm_mm: { mmx }
flags for paddusw_xmm_m128: { sse2 }
flags for paddusw_xmm_xmm: { sse2 }
flags for paddw_mm_m64: { mmx }
flags for paddw_mm_mm: { mmx }
flags for paddw_xmm_m128: { sse2 }
flags for paddw_xmm_xmm: { sse2 }
flags for palignr_mm_m64_imm8: { ssse3 }
flags for palignr_mm_mm_imm8: { ssse3 }
flags for palignr_xmm_m128_imm8: { ssse3 }
flags for palignr_xmm_xmm_imm8: { ssse3 }
flags for pand_mm_m64: { mmx }
flags for pand_mm_mm: { mmx }
flags for pand_xmm_m128: { sse2 }
flags for pand_xmm_xmm: { sse2 }
flags for pandn_mm_m64: { mmx }
flags for pandn_mm_mm: { mmx }
flags for pandn_xmm_m128: { sse2 }
flags for pandn_xmm_xmm: { sse2 }
flags for pavgb_mm_m64: { sse }
flags for pavgb_mm_mm: { sse }
flags for pavgb_xmm_m128: { sse2 }
flags for pavgb_xmm_xmm: { sse2 }
flags for pavgw_mm_m64: { sse }
flags for pavgw_mm_mm: { sse }
flags for pavgw_xmm_m128: { sse2 }
flags for pavgw_xmm_xmm: { sse2 }
flags for pblendvb_xmm_m128_xmm0: { sse4_1 }
flags for pblendvb_xmm_xmm_xmm0: { sse4_1 }
flags for pblendw_xmm_m128_imm8: { sse4_1 }
flags for pblendw_xmm_xmm_imm8: { sse4_1 }
flags for pclmulqdq_xmm_m128_imm8: { pclmulqdq }
flags for pclmulqdq_xmm_xmm_imm8: { pclmulqdq }
flags for pcmpeqb_mm_m64: { mmx }
flags for pcmpeqb_mm_mm: { mmx }
flags for pcmpeqb_xmm_m128: { sse2 }
flags for pcmpeqb_xmm_xmm: { sse2 }
flags for pcmpeqd_mm_m64: { mmx }
flags for pcmpeqd_mm_mm: { mmx }
flags for pcmpeqd_xmm_m128: { sse2 }
flags for pcmpeqd_xmm_xmm: { sse2 }
flags for pcmpeqq_xmm_m128: { sse4_1 }
flags for pcmpeqq_xmm_xmm: { sse4_1 }
flags for pcmpeqw_mm_m64: { mmx }
flags for pcmpeqw_mm_mm: { mmx }
flags for pcmpeqw_xmm_m128: { sse2 }
flags for pcmpeqw_xmm_xmm: { sse2 }
flags for pcmpestri_xmm_m128_imm8: { sse4_2 }
flags for pcmpestri_xmm_xmm_imm8: { sse4_2 }
flags for pcmpestrm_xmm_m128_imm8: { sse4_2 }
flags for pcmpestrm_xmm_xmm_imm8: { sse4_2 }
flags for pcmpgtb_mm_m64: { mmx }
flags for pcmpgtb_mm_mm: { mmx }
flags for pcmpgtb_xmm_m128: { sse2 }
flags for pcmpgtb_xmm_xmm: { sse2 }
flags for pcmpgtd_mm_m64: { mmx }
flags for pcmpgtd_mm_mm: { mmx }
flags for pcmpgtd_xmm_m128: { sse2 }
flags for pcmpgtd_xmm_xmm: { sse2 }
flags for pcmpgtq_xmm_m128: { sse4_2 }
flags for pcmpgtq_xmm_xmm: { sse4_2 }
flags for pcmpgtw_mm_m64: { mmx }
flags for pcmpgtw_mm_mm: { mmx }
flags for pcmpgtw_xmm_m128: { sse2 }
flags for pcmpgtw_xmm_xmm: { sse2 }
flags for pcmpistri_xmm_m128_imm8: { sse4_2 }
flags for pcmpistri_xmm_xmm_imm8: { sse4_2 }
flags for pcmpistrm_xmm_m128_imm8: { sse4_2 }
flags for pcmpistrm_xmm_xmm_imm8: { sse4_2 }
flags for pdepl_r32_r32_m32: { bmi2 }
flags for pdepl_r32_r32_r32: { bmi2 }
flags for pdepq_r64_r64_m64: { bmi2 }
flags for pdepq_r64_r64_r64: { bmi2 }
flags for pextl_r32_r32_m32: { bmi2 }
flags for pextl_r32_r32_r32: { bmi2 }
flags for pextq_r64_r64_m64: { bmi2 }
flags for pextq_r64_r64_r64: { bmi2 }
flags for pextrb_m8_xmm_imm8: { sse4_1 }
flags for pextrb_r32_xmm_imm8: { sse4_1 }
flags for pextrb_r64_xmm_imm8: { sse4_1 }
flags for pextrd_m32_xmm_imm8: { sse4_1 }
flags for pextrd_r32_xmm_imm8: { sse4_1 }
flags for pextrq_m64_xmm_imm8: { sse4_1 }
flags for pextrq_r64_xmm_imm8: { sse4_1 }
flags for pextrw_m16_xmm_imm8: { sse4_1 }
flags for pextrw_r32_mm_imm8: { sse }
flags for pextrw_r32_xmm_imm8: { sse2 }
flags for pextrw_r32_xmm_imm8_1: { sse4_1 }
flags for pextrw_r64_mm_imm8: { sse }
flags for pextrw_r64_xmm_imm8: { sse2 }
flags for pextrw_r64_xmm_imm8_1: { sse4_1 }
flags for phaddd_mm_m64: { ssse3 }
flags for phaddd_mm_mm: { ssse3 }
flags for phaddd_xmm_m128: { ssse3 }
flags for phaddd_xmm_xmm: { ssse3 }
flags for phaddsw_mm_m64: { ssse3 }
flags for phaddsw_mm_mm: { ssse3 }
flags for phaddsw_xmm_m128: { ssse3 }
flags for phaddsw_xmm_xmm: { ssse3 }
flags for phaddw_mm_m64: { ssse3 }
flags for phaddw_mm_mm: { ssse3 }
flags for phaddw_xmm_m128: { ssse3 }
flags for phaddw_xmm_xmm: { ssse3 }
flags for phminposuw_xmm_m128: { sse4_1 }
flags for phminposuw_xmm_xmm: { sse4_1 }
flags for phsubd_mm_m64: { ssse3 }
flags for phsubd_mm_mm: { ssse3 }
flags for phsubd_xmm_m128: { ssse3 }
flags for phsubd_xmm_xmm: { ssse3 }
flags for phsubsw_mm_m64: { ssse3 }
flags for phsubsw_mm_mm: { ssse3 }
flags for phsubsw_xmm_m128: { ssse3 }
flags for phsubsw_xmm_xmm: { ssse3 }
flags for phsubw_mm_m64: { ssse3 }
flags for phsubw_mm_mm: { ssse3 }
flags for phsubw_xmm_m128: { ssse3 }
flags for phsubw_xmm_xmm: { ssse3 }
flags for pinsrb_xmm_m8_imm8: { sse4_1 }
flags for pinsrb_xmm_r32_imm8: { sse4_1 }
flags for pinsrd_xmm_m32_imm8: { sse4_1 }
flags for pinsrd_xmm_r32_imm8: { sse4_1 }
flags for pinsrw_mm_m16_imm8: { sse }
flags for pinsrw_mm_r32_imm8: { sse }
flags for pinsrw_xmm_m16_imm8: { sse2 }
flags for pinsrw_xmm_r32_imm8: { sse2 }
flags for pmaddubsw_mm_m64: { mmx ssse3 }
flags for pmaddubsw_mm_mm: { mmx ssse3 }
flags for pmaddubsw_xmm_m128: { ssse3 }
flags for pmaddubsw_xmm_xmm: { ssse3 }
flags for pmaddwd_mm_m64: { mmx }
flags for pmaddwd_mm_mm: { mmx }
flags for pmaddwd_xmm_m128: { sse2 }
flags for pmaddwd_xmm_xmm: { sse2 }
flags for pmaxsb_xmm_m128: { sse4_1 }
flags for pmaxsb_xmm_xmm: { sse4_1 }
flags for pmaxsd_xmm_m128: { sse4_1 }
flags for pmaxsd_xmm_xmm: { sse4_1 }
flags for pmaxsw_mm_m64: { sse }
flags for pmaxsw_mm_mm: { sse }
flags for pmaxsw_xmm_m128: { sse2 }
flags for pmaxsw_xmm_xmm: { sse2 }
flags for pmaxub_mm_m64: { sse }
flags for pmaxub_mm_mm: { sse }
flags for pmaxub_xmm_m128: { sse2 }
flags for pmaxub_xmm_xmm: { sse2 }
flags for pmaxud_xmm_m128: { sse4_1 }
flags for pmaxud_xmm_xmm: { sse4_1 }
flags for pmaxuw_xmm_m128: { sse4_1 }
flags for pmaxuw_xmm_xmm: { sse4_1 }
flags for pminsb_xmm_m128: { sse4_1 }
flags for pminsb_xmm_xmm: { sse4_1 }
flags for pminsd_xmm_m128: { sse4_1 }
flags for pminsd_xmm_xmm: { sse4_1 }
flags for pminsw_mm_m64: { sse }
flags for pminsw_mm_mm: { sse }
flags for pminsw_xmm_m128: { sse2 }
flags for pminsw_xmm_xmm: { sse2 }
flags for pminub_mm_m64: { sse }
flags for pminub_mm_mm: { sse }
flags for pminub_xmm_m128: { sse2 }
flags for pminub_xmm_xmm: { sse2 }
flags for pminud_xmm_m128: { sse4_1 }
flags for pminud_xmm_xmm: { sse4_1 }
flags for pminuw_xmm_m128: { sse4_1 }
flags for pminuw_xmm_xmm: { sse4_1 }
flags for pmovmskb_r32_mm: { sse }
flags for pmovmskb_r32_xmm: { sse2 }
flags for pmovmskb_r64_mm: { sse }
flags for pmovmskb_r64_xmm: { sse2 }
flags for pmovsxbd_xmm_m32: { sse4_1 }
flags for pmovsxbd_xmm_xmm: { sse4_1 }
flags for pmovsxbq_xmm_m16: { sse4_1 }
flags for pmovsxbq_xmm_xmm: { sse4_1 }
flags for pmovsxbw_xmm_m64: { sse4_1 }
flags for pmovsxbw_xmm_xmm: { sse4_1 }
flags for pmovsxdq_xmm_m64: { sse4_1 }
flags for pmovsxdq_xmm_xmm: { sse4_1 }
flags for pmovsxwd_xmm_m64: { sse4_1 }
flags for pmovsxwd_xmm_xmm: { sse4_1 }
flags for pmovsxwq_xmm_m32: { sse4_1 }
flags for pmovsxwq_xmm_xmm: { sse4_1 }
flags for pmovzxbd_xmm_m32: { sse4_1 }
flags for pmovzxbd_xmm_xmm: { sse4_1 }
flags for pmovzxbq_xmm_m16: { sse4_1 }
flags for pmovzxbq_xmm_xmm: { sse4_1 }
flags for pmovzxbw_xmm_m64: { sse4_1 }
flags for pmovzxbw_xmm_xmm: { sse4_1 }
flags for pmovzxdq_xmm_m64: { sse4_1 }
flags for pmovzxdq_xmm_xmm: { sse4_1 }
flags for pmovzxwd_xmm_m64: { sse4_1 }
flags for pmovzxwd_xmm_xmm: { sse4_1 }
flags for pmovzxwq_xmm_m32: { sse4_1 }
flags for pmovzxwq_xmm_xmm: { sse4_1 }
flags for pmuldq_xmm_m128: { sse4_1 }
flags for pmuldq_xmm_xmm: { sse4_1 }
flags for pmulhrsw_mm_m64: { ssse3 }
flags for pmulhrsw_mm_mm: { ssse3 }
flags for pmulhrsw_xmm_m128: { ssse3 }
flags for pmulhrsw_xmm_xmm: { ssse3 }
flags for pmulhuw_mm_m64: { sse }
flags for pmulhuw_mm_mm: { sse }
flags for pmulhuw_xmm_m128: { sse2 }
flags for pmulhuw_xmm_xmm: { sse2 }
flags for pmulhw_mm_m64: { mmx }
flags for pmulhw_mm_mm: { mmx }
flags for pmulhw_xmm_m128: { sse2 }
flags for pmulhw_xmm_xmm: { sse2 }
flags for pmulld_xmm_m128: { sse4_1 }
flags for pmulld_xmm_xmm: { sse4_1 }
flags for pmullw_mm_m64: { mmx }
flags for pmullw_mm_mm: { mmx }
flags for pmullw_xmm_m128: { sse2 }
flags for pmullw_xmm_xmm: { sse2 }
flags for pmuludq_mm_m64: { sse2 }
flags for pmuludq_mm_mm: { sse2 }
flags for pmuludq_xmm_m128: { sse2 }
flags for pmuludq_xmm_xmm: { sse2 }
flags for popw_m16: { }
flags for popq_m64: { }
flags for popw_r16: { }
flags for popw_r16_1: { }
flags for popq_r64: { }
flags for popq_r64_1: { }
flags for popcntw_r16_m16: { popcnt }
flags for popcntw_r16_r16: { popcnt }
flags for popcntl_r32_m32: { popcnt }
flags for popcntl_r32_r32: { popcnt }
flags for popcntq_r64_m64: { popcnt }
flags for popcntq_r64_r64: { popcnt }
flags for popf: { }
flags for popfq: { }
flags for por_mm_m64: { mmx }
flags for por_mm_mm: { mmx }
flags for por_xmm_m128: { sse2 }
flags for por_xmm_xmm: { sse2 }
flags for psadbw_mm_m64: { sse }
flags for psadbw_mm_mm: { sse }
flags for psadbw_xmm_m128: { sse2 }
flags for psadbw_xmm_xmm: { sse2 }
flags for pshufb_mm_m64: { ssse3 }
flags for pshufb_mm_mm: { ssse3 }
flags for pshufb_xmm_m128: { ssse3 }
flags for pshufb_xmm_xmm: { ssse3 }
flags for pshufd_xmm_m128_imm8: { sse2 }
flags for pshufd_xmm_xmm_imm8: { sse2 }
flags for pshufhw_xmm_m128_imm8: { sse2 }
flags for pshufhw_xmm_xmm_imm8: { sse2 }
flags for pshuflw_xmm_m128_imm8: { sse2 }
flags for pshuflw_xmm_xmm_imm8: { sse2 }
flags for pshufw_mm_m64_imm8: { }
flags for pshufw_mm_mm_imm8: { }
flags for psignb_mm_m64: { ssse3 }
flags for psignb_mm_mm: { ssse3 }
flags for psignb_xmm_m128: { ssse3 }
flags for psignb_xmm_xmm: { ssse3 }
flags for psignd_mm_m64: { ssse3 }
flags for psignd_mm_mm: { ssse3 }
flags for psignd_xmm_m128: { ssse3 }
flags for psignd_xmm_xmm: { ssse3 }
flags for psignw_mm_m64: { ssse3 }
flags for psignw_mm_mm: { ssse3 }
flags for psignw_xmm_m128: { ssse3 }
flags for psignw_xmm_xmm: { ssse3 }
flags for pslld_mm_imm8: { mmx }
flags for pslld_mm_m64: { mmx }
flags for pslld_mm_mm: { mmx }
flags for pslld_xmm_imm8: { sse2 }
flags for pslld_xmm_m128: { sse2 }
flags for pslld_xmm_xmm: { sse2 }
flags for pslldq_xmm_imm8: { sse2 }
flags for psllq_mm_imm8: { mmx }
flags for psllq_mm_m64: { mmx }
flags for psllq_mm_mm: { mmx }
flags for psllq_xmm_imm8: { sse2 }
flags for psllq_xmm_m128: { sse2 }
flags for psllq_xmm_xmm: { sse2 }
flags for psllw_mm_imm8: { mmx }
flags for psllw_mm_m64: { mmx }
flags for psllw_mm_mm: { mmx }
flags for psllw_xmm_imm8: { sse2 }
flags for psllw_xmm_m128: { sse2 }
flags for psllw_xmm_xmm: { sse2 }
flags for psrad_mm_imm8: { mmx }
flags for psrad_mm_m64: { mmx }
flags for psrad_mm_mm: { mmx }
flags for psrad_xmm_imm8: { sse2 }
flags for psrad_xmm_m128: { sse2 }
flags for psrad_xmm_xmm: { sse2 }
flags for psraw_mm_imm8: { mmx }
flags for psraw_mm_m64: { mmx }
flags for psraw_mm_mm: { mmx }
flags for psraw_xmm_imm8: { sse2 }
flags for psraw_xmm_m128: { sse2 }
flags for psraw_xmm_xmm: { sse2 }
flags for psrld_mm_imm8: { mmx }
flags for psrld_mm_m64: { mmx }
flags for psrld_mm_mm: { mmx }
flags for psrld_xmm_imm8: { sse2 }
flags for psrld_xmm_m128: { sse2 }
flags for psrld_xmm_xmm: { sse2 }
flags for psrldq_xmm_imm8: { sse2 }
flags for psrlq_mm_imm8: { mmx }
flags for psrlq_mm_m64: { mmx }
flags for psrlq_mm_mm: { mmx }
flags for psrlq_xmm_imm8: { sse2 }
flags for psrlq_xmm_m128: { sse2 }
flags for psrlq_xmm_xmm: { sse2 }
flags for psrlw_mm_imm8: { mmx }
flags for psrlw_mm_m64: { mmx }
flags for psrlw_mm_mm: { mmx }
flags for psrlw_xmm_imm8: { sse2 }
flags for psrlw_xmm_m128: { sse2 }
flags for psrlw_xmm_xmm: { sse2 }
flags for psubb_mm_m64: { mmx }
flags for psubb_mm_mm: { mmx }
flags for psubb_xmm_m128: { sse2 }
flags for psubb_xmm_xmm: { sse2 }
flags for psubd_mm_m64: { mmx }
flags for psubd_mm_mm: { mmx }
flags for psubd_xmm_m128: { sse2 }
flags for psubd_xmm_xmm: { sse2 }
flags for psubq_mm_m64: { sse2 }
flags for psubq_mm_mm: { sse2 }
flags for psubq_xmm_m128: { sse2 }
flags for psubq_xmm_xmm: { sse2 }
flags for psubsb_mm_m64: { mmx }
flags for psubsb_mm_mm: { mmx }
flags for psubsb_xmm_m128: { sse2 }
flags for psubsb_xmm_xmm: { sse2 }
flags for psubsw_mm_m64: { mmx }
flags for psubsw_mm_mm: { mmx }
flags for psubsw_xmm_m128: { sse2 }
flags for psubsw_xmm_xmm: { sse2 }
flags for psubusb_mm_m64: { mmx }
flags for psubusb_mm_mm: { mmx }
flags for psubusb_xmm_m128: { sse2 }
flags for psubusb_xmm_xmm: { sse2 }
flags for psubusw_mm_m64: { mmx }
flags for psubusw_mm_mm: { mmx }
flags for psubusw_xmm_m128: { sse2 }
flags for psubusw_xmm_xmm: { sse2 }
flags for psubw_mm_m64: { mmx }
flags for psubw_mm_mm: { mmx }
flags for psubw_xmm_m128: { sse2 }
flags for psubw_xmm_xmm: { sse2 }
flags for ptest_xmm_m128: { sse4_1 }
flags for ptest_xmm_xmm: { sse4_1 }
flags for punpckhbw_mm_m64: { mmx }
flags for punpckhbw_mm_mm: { mmx }
flags for punpckhbw_xmm_m128: { sse2 }
flags for punpckhbw_xmm_xmm: { sse2 }
flags for punpckhdq_mm_m64: { mmx }
flags for punpckhdq_mm_mm: { mmx }
flags for punpckhdq_xmm_m128: { sse2 }
flags for punpckhdq_xmm_xmm: { sse2 }
flags for punpckhqdq_xmm_m128: { sse2 }
flags for punpckhqdq_xmm_xmm: { sse2 }
flags for punpckhwd_mm_m64: { mmx }
flags for punpckhwd_mm_mm: { mmx }
flags for punpckhwd_xmm_m128: { sse2 }
flags for punpckhwd_xmm_xmm: { sse2 }
flags for punpcklbw_mm_m32: { mmx }
flags for punpcklbw_mm_mm: { mmx }
flags for punpcklbw_xmm_m128: { sse2 }
flags for punpcklbw_xmm_xmm: { sse2 }
flags for punpckldq_mm_m32: { mmx }
flags for punpckldq_mm_mm: { mmx }
flags for punpckldq_xmm_m128: { sse2 }
flags for punpckldq_xmm_xmm: { sse2 }
flags for punpcklqdq_xmm_m128: { sse2 }
flags for punpcklqdq_xmm_xmm: { sse2 }
flags for punpcklwd_mm_m32: { mmx }
flags for punpcklwd_mm_mm: { mmx }
flags for punpcklwd_xmm_m128: { sse2 }
flags for punpcklwd_xmm_xmm: { sse2 }
flags for pushq_imm16: { }
flags for pushq_imm32: { }
flags for pushq_imm8: { }
flags for pushw_m16: { }
flags for pushq_m64: { }
flags for pushw_r16: { }
flags for pushw_r16_1: { }
flags for pushq_r64: { }
flags for pushq_r64_1: { }
flags for pushf: { }
flags for pushfq: { }
flags for pxor_mm_m64: { mmx }
flags for pxor_mm_mm: { mmx }
flags for pxor_xmm_m128: { sse2 }
flags for pxor_xmm_xmm: { sse2 }
flags for rcpps_xmm_m128: { sse }
flags for rcpps_xmm_xmm: { sse }
flags for rcpss_xmm_m32: { sse }
flags for rcpss_xmm_xmm: { sse }
flags for rdrand_r16: { rdrand }
flags for rdrand_r32: { rdrand }
flags for rdrand_r64: { rdrand }
flags for repz scasb_m8_1: { rep_good }
flags for roundpd_xmm_m128_imm8: { sse4_1 }
flags for roundpd_xmm_xmm_imm8: { sse4_1 }
flags for roundps_xmm_m128_imm8: { sse4_1 }
flags for roundps_xmm_xmm_imm8: { sse4_1 }
flags for roundsd_xmm_m64_imm8: { sse4_1 }
flags for roundsd_xmm_xmm_imm8: { sse4_1 }
flags for roundss_xmm_m32_imm8: { sse4_1 }
flags for roundss_xmm_xmm_imm8: { sse4_1 }
flags for rsqrtps_xmm_m128: { sse }
flags for rsqrtps_xmm_xmm: { sse }
flags for rsqrtss_xmm_m32: { sse }
flags for rsqrtss_xmm_xmm: { sse }
flags for sahf: { lahf_lm }
flags for salw_m16_cl: { }
flags for salw_m16_imm8: { }
flags for salw_m16_one: { }
flags for sall_m32_cl: { }
flags for sall_m32_imm8: { }
flags for sall_m32_one: { }
flags for salq_m64_cl: { }
flags for salq_m64_imm8: { }
flags for salq_m64_one: { }
flags for salb_m8_cl: { }
flags for salb_m8_imm8: { }
flags for salb_m8_one: { }
flags for salw_r16_cl: { }
flags for salw_r16_imm8: { }
flags for salw_r16_one: { }
flags for sall_r32_cl: { }
flags for sall_r32_imm8: { }
flags for sall_r32_one: { }
flags for salq_r64_cl: { }
flags for salq_r64_imm8: { }
flags for salq_r64_one: { }
flags for salb_r8_cl: { }
flags for salb_r8_imm8: { }
flags for salb_r8_one: { }
flags for salb_rh_cl: { }
flags for salb_rh_imm8: { }
flags for salb_rh_one: { }
flags for sarw_m16_cl: { }
flags for sarw_m16_imm8: { }
flags for sarw_m16_one: { }
flags for sarl_m32_cl: { }
flags for sarl_m32_imm8: { }
flags for sarl_m32_one: { }
flags for sarq_m64_cl: { }
flags for sarq_m64_imm8: { }
flags for sarq_m64_one: { }
flags for sarb_m8_cl: { }
flags for sarb_m8_imm8: { }
flags for sarb_m8_one: { }
flags for sarw_r16_cl: { }
flags for sarw_r16_imm8: { }
flags for sarw_r16_one: { }
flags for sarl_r32_cl: { }
flags for sarl_r32_imm8: { }
flags for sarl_r32_one: { }
flags for sarq_r64_cl: { }
flags for sarq_r64_imm8: { }
flags for sarq_r64_one: { }
flags for sarb_r8_cl: { }
flags for sarb_r8_imm8: { }
flags for sarb_r8_one: { }
flags for sarb_rh_cl: { }
flags for sarb_rh_imm8: { }
flags for sarb_rh_one: { }
flags for sarxl_r32_m32_r32: { bmi2 }
flags for sarxl_r32_r32_r32: { bmi2 }
flags for sarxq_r64_m64_r64: { bmi2 }
flags for sarxq_r64_r64_r64: { bmi2 }
flags for shlw_m16_cl: { }
flags for shlw_m16_imm8: { }
flags for shlw_m16_one: { }
flags for shll_m32_cl: { }
flags for shll_m32_imm8: { }
flags for shll_m32_one: { }
flags for shlq_m64_cl: { }
flags for shlq_m64_imm8: { }
flags for shlq_m64_one: { }
flags for shlb_m8_cl: { }
flags for shlb_m8_imm8: { }
flags for shlb_m8_one: { }
flags for shlw_r16_cl: { }
flags for shlw_r16_imm8: { }
flags for shlw_r16_one: { }
flags for shll_r32_cl: { }
flags for shll_r32_imm8: { }
flags for shll_r32_one: { }
flags for shlq_r64_cl: { }
flags for shlq_r64_imm8: { }
flags for shlq_r64_one: { }
flags for shlb_r8_cl: { }
flags for shlb_r8_imm8: { }
flags for shlb_r8_one: { }
flags for shlb_rh_cl: { }
flags for shlb_rh_imm8: { }
flags for shlb_rh_one: { }
flags for shldw_m16_r16_cl: { }
flags for shldw_m16_r16_imm8: { }
flags for shldl_m32_r32_cl: { }
flags for shldl_m32_r32_imm8: { }
flags for shldq_m64_r64_cl: { }
flags for shldq_m64_r64_imm8: { }
flags for shldw_r16_r16_cl: { }
flags for shldw_r16_r16_imm8: { }
flags for shldl_r32_r32_cl: { }
flags for shldl_r32_r32_imm8: { }
flags for shldq_r64_r64_cl: { }
flags for shldq_r64_r64_imm8: { }
flags for shlxl_r32_m32_r32: { bmi2 }
flags for shlxl_r32_r32_r32: { bmi2 }
flags for shlxq_r64_m64_r64: { bmi2 }
flags for shlxq_r64_r64_r64: { bmi2 }
flags for shrw_m16_cl: { }
flags for shrw_m16_imm8: { }
flags for shrw_m16_one: { }
flags for shrl_m32_cl: { }
flags for shrl_m32_imm8: { }
flags for shrl_m32_one: { }
flags for shrq_m64_cl: { }
flags for shrq_m64_imm8: { }
flags for shrq_m64_one: { }
flags for shrb_m8_cl: { }
flags for shrb_m8_imm8: { }
flags for shrb_m8_one: { }
flags for shrw_r16_cl: { }
flags for shrw_r16_imm8: { }
flags for shrw_r16_one: { }
flags for shrl_r32_cl: { }
flags for shrl_r32_imm8: { }
flags for shrl_r32_one: { }
flags for shrq_r64_cl: { }
flags for shrq_r64_imm8: { }
flags for shrq_r64_one: { }
flags for shrb_r8_cl: { }
flags for shrb_r8_imm8: { }
flags for shrb_r8_one: { }
flags for shrb_rh_cl: { }
flags for shrb_rh_imm8: { }
flags for shrb_rh_one: { }
flags for shrxl_r32_m32_r32: { bmi2 }
flags for shrxl_r32_r32_r32: { bmi2 }
flags for shrxq_r64_m64_r64: { bmi2 }
flags for shrxq_r64_r64_r64: { bmi2 }
flags for shufpd_xmm_m128_imm8: { sse2 }
flags for shufpd_xmm_xmm_imm8: { sse2 }
flags for shufps_xmm_m128_imm8: { sse }
flags for shufps_xmm_xmm_imm8: { sse }
flags for sqrtpd_xmm_m128: { sse2 }
flags for sqrtpd_xmm_xmm: { sse2 }
flags for sqrtps_xmm_m128: { sse }
flags for sqrtps_xmm_xmm: { sse }
flags for sqrtsd_xmm_m64: { sse2 }
flags for sqrtsd_xmm_xmm: { sse2 }
flags for sqrtss_xmm_m32: { sse }
flags for sqrtss_xmm_xmm: { sse }
flags for subb_al_imm8: { }
flags for subw_ax_imm16: { }
flags for subl_eax_imm32: { }
flags for subw_m16_imm16: { }
flags for subw_m16_imm8: { }
flags for subw_m16_r16: { }
flags for subl_m32_imm32: { }
flags for subl_m32_imm8: { }
flags for subl_m32_r32: { }
flags for subq_m64_imm32: { }
flags for subq_m64_imm8: { }
flags for subq_m64_r64: { }
flags for subb_m8_imm8: { }
flags for subb_m8_r8: { }
flags for subb_m8_rh: { }
flags for subw_r16_imm16: { }
flags for subw_r16_imm8: { }
flags for subw_r16_m16: { }
flags for subw_r16_r16: { }
flags for subw_r16_r16_1: { }
flags for subl_r32_imm32: { }
flags for subl_r32_imm8: { }
flags for subl_r32_m32: { }
flags for subl_r32_r32: { }
flags for subl_r32_r32_1: { }
flags for subq_r64_imm32: { }
flags for subq_r64_imm8: { }
flags for subq_r64_m64: { }
flags for subq_r64_r64: { }
flags for subq_r64_r64_1: { }
flags for subb_r8_imm8: { }
flags for subb_r8_m8: { }
flags for subb_r8_r8: { }
flags for subb_r8_r8_1: { }
flags for subb_r8_rh: { }
flags for subb_r8_rh_1: { }
flags for subq_rax_imm32: { }
flags for subb_rh_imm8: { }
flags for subb_rh_m8: { }
flags for subb_rh_r8: { }
flags for subb_rh_r8_1: { }
flags for subb_rh_rh: { }
flags for subb_rh_rh_1: { }
flags for subpd_xmm_m128: { sse2 }
flags for subpd_xmm_xmm: { sse2 }
flags for subps_xmm_m128: { sse }
flags for subps_xmm_xmm: { sse }
flags for subsd_xmm_m64: { sse2 }
flags for subsd_xmm_xmm: { sse2 }
flags for subss_xmm_m32: { sse }
flags for subss_xmm_xmm: { sse }
flags for tzcntw_r16_m16: { bmi1 }
flags for tzcntw_r16_r16: { bmi1 }
flags for tzcntl_r32_m32: { bmi1 }
flags for tzcntl_r32_r32: { bmi1 }
flags for tzcntq_r64_m64: { bmi1 }
flags for tzcntq_r64_r64: { bmi1 }
flags for ucomisd_xmm_m64: { sse2 }
flags for ucomisd_xmm_xmm: { sse2 }
flags for ucomiss_xmm_m32: { sse }
flags for ucomiss_xmm_xmm: { sse }
flags for unpckhpd_xmm_m128: { sse2 }
flags for unpckhpd_xmm_xmm: { sse2 }
flags for unpckhps_xmm_m128: { sse }
flags for unpckhps_xmm_xmm: { sse }
flags for unpcklpd_xmm_m128: { sse2 }
flags for unpcklpd_xmm_xmm: { sse2 }
flags for unpcklps_xmm_m128: { sse }
flags for unpcklps_xmm_xmm: { sse }
flags for vaddpd_xmm_xmm_m128: { avx }
flags for vaddpd_xmm_xmm_xmm: { avx }
flags for vaddpd_ymm_ymm_m256: { avx }
flags for vaddpd_ymm_ymm_ymm: { avx }
flags for vaddps_xmm_xmm_m128: { avx }
flags for vaddps_xmm_xmm_xmm: { avx }
flags for vaddps_ymm_ymm_m256: { avx }
flags for vaddps_ymm_ymm_ymm: { avx }
flags for vaddsd_xmm_xmm_m64: { avx }
flags for vaddsd_xmm_xmm_xmm: { avx }
flags for vaddss_xmm_xmm_m32: { avx }
flags for vaddss_xmm_xmm_xmm: { avx }
flags for vaddsubpd_xmm_xmm_m128: { avx }
flags for vaddsubpd_xmm_xmm_xmm: { avx }
flags for vaddsubpd_ymm_ymm_m256: { avx }
flags for vaddsubpd_ymm_ymm_ymm: { avx }
flags for vaddsubps_xmm_xmm_m128: { avx }
flags for vaddsubps_xmm_xmm_xmm: { avx }
flags for vaddsubps_ymm_ymm_m256: { avx }
flags for vaddsubps_ymm_ymm_ymm: { avx }
flags for vaesdec_xmm_xmm_m128: { aes avx }
flags for vaesdec_xmm_xmm_xmm: { aes avx }
flags for vaesdeclast_xmm_xmm_m128: { aes avx }
flags for vaesdeclast_xmm_xmm_xmm: { aes avx }
flags for vaesenc_xmm_xmm_m128: { aes avx }
flags for vaesenc_xmm_xmm_xmm: { aes avx }
flags for vaesenclast_xmm_xmm_m128: { aes avx }
flags for vaesenclast_xmm_xmm_xmm: { aes avx }
flags for vaesimc_xmm_m128: { aes avx }
flags for vaesimc_xmm_xmm: { aes avx }
flags for vaeskeygenassist_xmm_m128_imm8: { aes avx }
flags for vaeskeygenassist_xmm_xmm_imm8: { aes avx }
flags for vandnpd_xmm_xmm_m128: { avx }
flags for vandnpd_xmm_xmm_xmm: { avx }
flags for vandnpd_ymm_ymm_m256: { avx }
flags for vandnpd_ymm_ymm_ymm: { avx }
flags for vandnps_xmm_xmm_m128: { avx }
flags for vandnps_xmm_xmm_xmm: { avx }
flags for vandnps_ymm_ymm_m256: { avx }
flags for vandnps_ymm_ymm_ymm: { avx }
flags for vandpd_xmm_xmm_m128: { avx }
flags for vandpd_xmm_xmm_xmm: { avx }
flags for vandpd_ymm_ymm_m256: { avx }
flags for vandpd_ymm_ymm_ymm: { avx }
flags for vandps_xmm_xmm_m128: { avx }
flags for vandps_xmm_xmm_xmm: { avx }
flags for vandps_ymm_ymm_m256: { avx }
flags for vandps_ymm_ymm_ymm: { avx }
flags for vblendpd_xmm_xmm_m128_imm8: { avx }
flags for vblendpd_xmm_xmm_xmm_imm8: { avx }
flags for vblendpd_ymm_ymm_m256_imm8: { avx }
flags for vblendpd_ymm_ymm_ymm_imm8: { avx }
flags for vblendps_xmm_xmm_m128_imm8: { avx }
flags for vblendps_xmm_xmm_xmm_imm8: { avx }
flags for vblendps_ymm_ymm_m256_imm8: { avx }
flags for vblendps_ymm_ymm_ymm_imm8: { avx }
flags for vblendvpd_xmm_xmm_m128_xmm: { avx }
flags for vblendvpd_xmm_xmm_xmm_xmm: { avx }
flags for vblendvpd_ymm_ymm_m256_ymm: { avx }
flags for vblendvpd_ymm_ymm_ymm_ymm: { avx }
flags for vblendvps_xmm_xmm_m128_xmm: { avx }
flags for vblendvps_xmm_xmm_xmm_xmm: { avx }
flags for vblendvps_ymm_ymm_m256_ymm: { avx }
flags for vblendvps_ymm_ymm_ymm_ymm: { avx }
flags for vbroadcastf128_ymm_m128: { avx }
flags for vpbroadcasti128_ymm_m128: { avx2 }
flags for vbroadcastsd_ymm_m64: { avx }
flags for vbroadcastsd_ymm_xmm: { avx2 }
flags for vbroadcastss_xmm_m32: { avx }
flags for vbroadcastss_xmm_xmm: { avx2 }
flags for vbroadcastss_ymm_m32: { avx }
flags for vbroadcastss_ymm_xmm: { avx2 }
flags for vcmppd_xmm_xmm_m128_imm8: { avx }
flags for vcmppd_xmm_xmm_xmm_imm8: { avx }
flags for vcmppd_ymm_ymm_m256_imm8: { avx }
flags for vcmppd_ymm_ymm_ymm_imm8: { avx }
flags for vcmpps_xmm_xmm_m128_imm8: { avx }
flags for vcmpps_xmm_xmm_xmm_imm8: { avx }
flags for vcmpps_ymm_ymm_m256_imm8: { avx }
flags for vcmpps_ymm_ymm_ymm_imm8: { avx }
flags for vcmpsd_xmm_xmm_m64_imm8: { avx }
flags for vcmpsd_xmm_xmm_xmm_imm8: { avx }
flags for vcmpss_xmm_xmm_m32_imm8: { avx }
flags for vcmpss_xmm_xmm_xmm_imm8: { avx }
flags for vcomisd_xmm_m64: { avx }
flags for vcomisd_xmm_xmm: { avx }
flags for vcomiss_xmm_m32: { avx }
flags for vcomiss_xmm_xmm: { avx }
flags for vcvtdq2pd_xmm_m64: { avx }
flags for vcvtdq2pd_xmm_xmm: { avx }
flags for vcvtdq2pd_ymm_m128: { avx }
flags for vcvtdq2pd_ymm_ymm: { avx }
flags for vcvtdq2ps_xmm_m128: { avx }
flags for vcvtdq2ps_xmm_xmm: { avx }
flags for vcvtdq2ps_ymm_m256: { avx }
flags for vcvtdq2ps_ymm_ymm: { avx }
flags for vcvtpd2dqx_xmm_m128: { avx }
flags for vcvtpd2dq_xmm_m256: { avx }
flags for vcvtpd2dqx_xmm_xmm: { avx }
flags for vcvtpd2dq_xmm_ymm: { avx }
flags for vcvtpd2ps_xmm_m128: { avx }
flags for vcvtpd2ps_xmm_m256: { avx }
flags for vcvtpd2ps_xmm_xmm: { avx }
flags for vcvtpd2ps_xmm_ymm: { avx }
flags for vcvtph2ps_xmm_m64: { f16c }
flags for vcvtph2ps_xmm_xmm: { f16c }
flags for vcvtph2ps_ymm_m128: { f16c }
flags for vcvtph2ps_ymm_xmm: { f16c }
flags for vcvtps2dq_xmm_m128: { avx }
flags for vcvtps2dq_xmm_xmm: { avx }
flags for vcvtps2dq_ymm_m256: { avx }
flags for vcvtps2dq_ymm_ymm: { avx }
flags for vcvtps2pd_xmm_m64: { avx }
flags for vcvtps2pd_xmm_xmm: { avx }
flags for vcvtps2pd_ymm_m128: { avx }
flags for vcvtps2pd_ymm_xmm: { avx }
flags for vcvtps2ph_m128_ymm_imm8: { f16c }
flags for vcvtps2ph_m64_xmm_imm8: { f16c }
flags for vcvtps2ph_xmm_xmm_imm8: { f16c }
flags for vcvtps2ph_xmm_ymm_imm8: { f16c }
flags for vcvtsd2sil_r32_m64: { avx }
flags for vcvtsd2sil_r32_xmm: { avx }
flags for vcvtsd2siq_r64_m64: { avx }
flags for vcvtsd2siq_r64_xmm: { avx }
flags for vcvtsd2ss_xmm_xmm_m64: { avx }
flags for vcvtsd2ss_xmm_xmm_xmm: { avx }
flags for vcvtsi2sdl_xmm_xmm_m32: { avx }
flags for vcvtsi2sdq_xmm_xmm_m64: { avx }
flags for vcvtsi2sdl_xmm_xmm_r32: { avx }
flags for vcvtsi2sdq_xmm_xmm_r64: { avx }
flags for vcvtsi2ssl_xmm_xmm_m32: { avx }
flags for vcvtsi2ssq_xmm_xmm_m64: { avx }
flags for vcvtsi2ssl_xmm_xmm_r32: { avx }
flags for vcvtsi2ssq_xmm_xmm_r64: { avx }
flags for vcvtss2sd_xmm_xmm_m32: { avx }
flags for vcvtss2sd_xmm_xmm_xmm: { avx }
flags for vcvtss2sil_r32_m32: { avx }
flags for vcvtss2sil_r32_xmm: { avx }
flags for vcvtss2siq_r64_m32: { avx }
flags for vcvtss2siq_r64_xmm: { avx }
flags for vcvttpd2dq_xmm_m128: { avx }
flags for vcvttpd2dq_xmm_m256: { avx }
flags for vcvttpd2dq_xmm_xmm: { avx }
flags for vcvttpd2dq_xmm_ymm: { avx }
flags for vcvttps2dq_xmm_m128: { avx }
flags for vcvttps2dq_xmm_xmm: { avx }
flags for vcvttps2dq_ymm_m256: { avx }
flags for vcvttps2dq_ymm_ymm: { avx }
flags for vcvttsd2si_r32_m64: { avx }
flags for vcvttsd2si_r32_xmm: { avx }
flags for vcvttsd2siq_r64_m64: { avx }
flags for vcvttsd2siq_r64_xmm: { avx }
flags for vcvttss2si_r32_m32: { avx }
flags for vcvttss2si_r32_xmm: { avx }
flags for vcvttss2siq_r64_m32: { avx }
flags for vcvttss2siq_r64_xmm: { avx }
flags for vdivpd_xmm_xmm_m128: { avx }
flags for vdivpd_xmm_xmm_xmm: { avx }
flags for vdivpd_ymm_ymm_m256: { avx }
flags for vdivpd_ymm_ymm_ymm: { avx }
flags for vdivps_xmm_xmm_m128: { avx }
flags for vdivps_xmm_xmm_xmm: { avx }
flags for vdivps_ymm_ymm_m256: { avx }
flags for vdivps_ymm_ymm_ymm: { avx }
flags for vdivsd_xmm_xmm_m64: { avx }
flags for vdivsd_xmm_xmm_xmm: { avx }
flags for vdivss_xmm_xmm_m32: { avx }
flags for vdivss_xmm_xmm_xmm: { avx }
flags for vdppd_xmm_xmm_m128_imm8: { avx }
flags for vdppd_xmm_xmm_xmm_imm8: { avx }
flags for vdpps_xmm_xmm_m128_imm8: { avx }
flags for vdpps_xmm_xmm_xmm_imm8: { avx }
flags for vdpps_ymm_ymm_m256_imm8: { avx }
flags for vdpps_ymm_ymm_ymm_imm8: { avx }
flags for vextractf128_m128_ymm_imm8: { avx }
flags for vextractf128_xmm_ymm_imm8: { avx }
flags for vextracti128_m128_ymm_imm8: { avx2 }
flags for vextracti128_xmm_ymm_imm8: { avx2 }
flags for vextractps_m32_xmm_imm8: { avx }
flags for vextractps_r32_xmm_imm8: { avx }
flags for vfmadd132pd_xmm_xmm_m128: { fma }
flags for vfmadd132pd_xmm_xmm_xmm: { fma }
flags for vfmadd132pd_ymm_ymm_m256: { fma }
flags for vfmadd132pd_ymm_ymm_ymm: { fma }
flags for vfmadd132ps_xmm_xmm_m128: { fma }
flags for vfmadd132ps_xmm_xmm_xmm: { fma }
flags for vfmadd132ps_ymm_ymm_m256: { fma }
flags for vfmadd132ps_ymm_ymm_ymm: { fma }
flags for vfmadd132sd_xmm_xmm_m64: { fma }
flags for vfmadd132sd_xmm_xmm_xmm: { fma }
flags for vfmadd132ss_xmm_xmm_m32: { fma }
flags for vfmadd132ss_xmm_xmm_xmm: { fma }
flags for vfmadd213pd_xmm_xmm_m128: { fma }
flags for vfmadd213pd_xmm_xmm_xmm: { fma }
flags for vfmadd213pd_ymm_ymm_m256: { fma }
flags for vfmadd213pd_ymm_ymm_ymm: { fma }
flags for vfmadd213ps_xmm_xmm_m128: { fma }
flags for vfmadd213ps_xmm_xmm_xmm: { fma }
flags for vfmadd213ps_ymm_ymm_m256: { fma }
flags for vfmadd213ps_ymm_ymm_ymm: { fma }
flags for vfmadd213sd_xmm_xmm_m64: { fma }
flags for vfmadd213sd_xmm_xmm_xmm: { fma }
flags for vfmadd213ss_xmm_xmm_m32: { fma }
flags for vfmadd213ss_xmm_xmm_xmm: { fma }
flags for vfmadd231pd_xmm_xmm_m128: { fma }
flags for vfmadd231pd_xmm_xmm_xmm: { fma }
flags for vfmadd231pd_ymm_ymm_m256: { fma }
flags for vfmadd231pd_ymm_ymm_ymm: { fma }
flags for vfmadd231ps_xmm_xmm_m128: { fma }
flags for vfmadd231ps_xmm_xmm_xmm: { fma }
flags for vfmadd231ps_ymm_ymm_m256: { fma }
flags for vfmadd231ps_ymm_ymm_ymm: { fma }
flags for vfmadd231sd_xmm_xmm_m64: { fma }
flags for vfmadd231sd_xmm_xmm_xmm: { fma }
flags for vfmadd231ss_xmm_xmm_m32: { fma }
flags for vfmadd231ss_xmm_xmm_xmm: { fma }
flags for vfmaddsub132pd_xmm_xmm_m128: { fma }
flags for vfmaddsub132pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub132pd_ymm_ymm_m256: { fma }
flags for vfmaddsub132pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub132ps_xmm_xmm_m128: { fma }
flags for vfmaddsub132ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub132ps_ymm_ymm_m256: { fma }
flags for vfmaddsub132ps_ymm_ymm_ymm: { fma }
flags for vfmaddsub213pd_xmm_xmm_m128: { fma }
flags for vfmaddsub213pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub213pd_ymm_ymm_m256: { fma }
flags for vfmaddsub213pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub213ps_xmm_xmm_m128: { fma }
flags for vfmaddsub213ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub213ps_ymm_ymm_m256: { fma }
flags for vfmaddsub213ps_ymm_ymm_ymm: { fma }
flags for vfmaddsub231pd_xmm_xmm_m128: { fma }
flags for vfmaddsub231pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub231pd_ymm_ymm_m256: { fma }
flags for vfmaddsub231pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub231ps_xmm_xmm_m128: { fma }
flags for vfmaddsub231ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub231ps_ymm_ymm_m256: { fma }
flags for vfmaddsub231ps_ymm_ymm_ymm: { fma }
flags for vfmsub132pd_xmm_xmm_m128: { fma }
flags for vfmsub132pd_xmm_xmm_xmm: { fma }
flags for vfmsub132pd_ymm_ymm_m256: { fma }
flags for vfmsub132pd_ymm_ymm_ymm: { fma }
flags for vfmsub132ps_xmm_xmm_m128: { fma }
flags for vfmsub132ps_xmm_xmm_xmm: { fma }
flags for vfmsub132ps_ymm_ymm_m256: { fma }
flags for vfmsub132ps_ymm_ymm_ymm: { fma }
flags for vfmsub132sd_xmm_xmm_m64: { fma }
flags for vfmsub132sd_xmm_xmm_xmm: { fma }
flags for vfmsub132ss_xmm_xmm_m32: { fma }
flags for vfmsub132ss_xmm_xmm_xmm: { fma }
flags for vfmsub213pd_xmm_xmm_m128: { fma }
flags for vfmsub213pd_xmm_xmm_xmm: { fma }
flags for vfmsub213pd_ymm_ymm_m256: { fma }
flags for vfmsub213pd_ymm_ymm_ymm: { fma }
flags for vfmsub213ps_xmm_xmm_m128: { fma }
flags for vfmsub213ps_xmm_xmm_xmm: { fma }
flags for vfmsub213ps_ymm_ymm_m256: { fma }
flags for vfmsub213ps_ymm_ymm_ymm: { fma }
flags for vfmsub213sd_xmm_xmm_m64: { fma }
flags for vfmsub213sd_xmm_xmm_xmm: { fma }
flags for vfmsub213ss_xmm_xmm_m32: { fma }
flags for vfmsub213ss_xmm_xmm_xmm: { fma }
flags for vfmsub231pd_xmm_xmm_m128: { fma }
flags for vfmsub231pd_xmm_xmm_xmm: { fma }
flags for vfmsub231pd_ymm_ymm_m256: { fma }
flags for vfmsub231pd_ymm_ymm_ymm: { fma }
flags for vfmsub231ps_xmm_xmm_m128: { fma }
flags for vfmsub231ps_xmm_xmm_xmm: { fma }
flags for vfmsub231ps_ymm_ymm_m256: { fma }
flags for vfmsub231ps_ymm_ymm_ymm: { fma }
flags for vfmsub231sd_xmm_xmm_m64: { fma }
flags for vfmsub231sd_xmm_xmm_xmm: { fma }
flags for vfmsub231ss_xmm_xmm_m32: { fma }
flags for vfmsub231ss_xmm_xmm_xmm: { fma }
flags for vfmsubadd132pd_xmm_xmm_m128: { fma }
flags for vfmsubadd132pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd132pd_ymm_ymm_m256: { fma }
flags for vfmsubadd132pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd132ps_xmm_xmm_m128: { fma }
flags for vfmsubadd132ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd132ps_ymm_ymm_m256: { fma }
flags for vfmsubadd132ps_ymm_ymm_ymm: { fma }
flags for vfmsubadd213pd_xmm_xmm_m128: { fma }
flags for vfmsubadd213pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd213pd_ymm_ymm_m256: { fma }
flags for vfmsubadd213pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd213ps_xmm_xmm_m128: { fma }
flags for vfmsubadd213ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd213ps_ymm_ymm_m256: { fma }
flags for vfmsubadd213ps_ymm_ymm_ymm: { fma }
flags for vfmsubadd231pd_xmm_xmm_m128: { fma }
flags for vfmsubadd231pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd231pd_ymm_ymm_m256: { fma }
flags for vfmsubadd231pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd231ps_xmm_xmm_m128: { fma }
flags for vfmsubadd231ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd231ps_ymm_ymm_m256: { fma }
flags for vfmsubadd231ps_ymm_ymm_ymm: { fma }
flags for vfnmadd132pd_xmm_xmm_m128: { fma }
flags for vfnmadd132pd_xmm_xmm_xmm: { fma }
flags for vfnmadd132pd_ymm_ymm_m256: { fma }
flags for vfnmadd132pd_ymm_ymm_ymm: { fma }
flags for vfnmadd132ps_xmm_xmm_m128: { fma }
flags for vfnmadd132ps_xmm_xmm_xmm: { fma }
flags for vfnmadd132ps_ymm_ymm_m256: { fma }
flags for vfnmadd132ps_ymm_ymm_ymm: { fma }
flags for vfnmadd132sd_xmm_xmm_m64: { fma }
flags for vfnmadd132sd_xmm_xmm_xmm: { fma }
flags for vfnmadd132ss_xmm_xmm_m32: { fma }
flags for vfnmadd132ss_xmm_xmm_xmm: { fma }
flags for vfnmadd213pd_xmm_xmm_m128: { fma }
flags for vfnmadd213pd_xmm_xmm_xmm: { fma }
flags for vfnmadd213pd_ymm_ymm_m256: { fma }
flags for vfnmadd213pd_ymm_ymm_ymm: { fma }
flags for vfnmadd213ps_xmm_xmm_m128: { fma }
flags for vfnmadd213ps_xmm_xmm_xmm: { fma }
flags for vfnmadd213ps_ymm_ymm_m256: { fma }
flags for vfnmadd213ps_ymm_ymm_ymm: { fma }
flags for vfnmadd213sd_xmm_xmm_m64: { fma }
flags for vfnmadd213sd_xmm_xmm_xmm: { fma }
flags for vfnmadd213ss_xmm_xmm_m32: { fma }
flags for vfnmadd213ss_xmm_xmm_xmm: { fma }
flags for vfnmadd231pd_xmm_xmm_m128: { fma }
flags for vfnmadd231pd_xmm_xmm_xmm: { fma }
flags for vfnmadd231pd_ymm_ymm_m256: { fma }
flags for vfnmadd231pd_ymm_ymm_ymm: { fma }
flags for vfnmadd231ps_xmm_xmm_m128: { fma }
flags for vfnmadd231ps_xmm_xmm_xmm: { fma }
flags for vfnmadd231ps_ymm_ymm_m256: { fma }
flags for vfnmadd231ps_ymm_ymm_ymm: { fma }
flags for vfnmadd231sd_xmm_xmm_m64: { fma }
flags for vfnmadd231sd_xmm_xmm_xmm: { fma }
flags for vfnmadd231ss_xmm_xmm_m32: { fma }
flags for vfnmadd231ss_xmm_xmm_xmm: { fma }
flags for vfnmsub132pd_xmm_xmm_m128: { fma }
flags for vfnmsub132pd_xmm_xmm_xmm: { fma }
flags for vfnmsub132pd_ymm_ymm_m256: { fma }
flags for vfnmsub132pd_ymm_ymm_ymm: { fma }
flags for vfnmsub132ps_xmm_xmm_m128: { fma }
flags for vfnmsub132ps_xmm_xmm_xmm: { fma }
flags for vfnmsub132ps_ymm_ymm_m256: { fma }
flags for vfnmsub132ps_ymm_ymm_ymm: { fma }
flags for vfnmsub132sd_xmm_xmm_m64: { fma }
flags for vfnmsub132sd_xmm_xmm_xmm: { fma }
flags for vfnmsub132ss_xmm_xmm_m32: { fma }
flags for vfnmsub132ss_xmm_xmm_xmm: { fma }
flags for vfnmsub213pd_xmm_xmm_m128: { fma }
flags for vfnmsub213pd_xmm_xmm_xmm: { fma }
flags for vfnmsub213pd_ymm_ymm_m256: { fma }
flags for vfnmsub213pd_ymm_ymm_ymm: { fma }
flags for vfnmsub213ps_xmm_xmm_m128: { fma }
flags for vfnmsub213ps_xmm_xmm_xmm: { fma }
flags for vfnmsub213ps_ymm_ymm_m256: { fma }
flags for vfnmsub213ps_ymm_ymm_ymm: { fma }
flags for vfnmsub213sd_xmm_xmm_m64: { fma }
flags for vfnmsub213sd_xmm_xmm_xmm: { fma }
flags for vfnmsub213ss_xmm_xmm_m32: { fma }
flags for vfnmsub213ss_xmm_xmm_xmm: { fma }
flags for vfnmsub231pd_xmm_xmm_m128: { fma }
flags for vfnmsub231pd_xmm_xmm_xmm: { fma }
flags for vfnmsub231pd_ymm_ymm_m256: { fma }
flags for vfnmsub231pd_ymm_ymm_ymm: { fma }
flags for vfnmsub231ps_xmm_xmm_m128: { fma }
flags for vfnmsub231ps_xmm_xmm_xmm: { fma }
flags for vfnmsub231ps_ymm_ymm_m256: { fma }
flags for vfnmsub231ps_ymm_ymm_ymm: { fma }
flags for vfnmsub231sd_xmm_xmm_m64: { fma }
flags for vfnmsub231sd_xmm_xmm_xmm: { fma }
flags for vfnmsub231ss_xmm_xmm_m32: { fma }
flags for vfnmsub231ss_xmm_xmm_xmm: { fma }
flags for vgatherdpd_xmm_m32_xmm: { avx2 }
flags for vgatherdpd_ymm_m32_ymm: { avx2 }
flags for vgatherdps_xmm_m32_xmm: { avx2 }
flags for vgatherdps_ymm_m32_ymm: { avx2 }
flags for vgatherqpd_xmm_m64_xmm: { avx2 }
flags for vgatherqpd_ymm_m64_ymm: { avx2 }
flags for vgatherqps_xmm_m64_xmm: { avx2 }
flags for vgatherqps_xmm_m64_xmm_1: { avx2 }
flags for vhaddpd_xmm_xmm_m128: { avx }
flags for vhaddpd_xmm_xmm_xmm: { avx }
flags for vhaddpd_ymm_ymm_m256: { avx }
flags for vhaddpd_ymm_ymm_ymm: { avx }
flags for vhaddps_xmm_xmm_m128: { avx }
flags for vhaddps_xmm_xmm_xmm: { avx }
flags for vhaddps_ymm_ymm_m256: { avx }
flags for vhaddps_ymm_ymm_ymm: { avx }
flags for vhsubpd_xmm_xmm_m128: { avx }
flags for vhsubpd_xmm_xmm_xmm: { avx }
flags for vhsubpd_ymm_ymm_m256: { avx }
flags for vhsubpd_ymm_ymm_ymm: { avx }
flags for vhsubps_xmm_xmm_m128: { avx }
flags for vhsubps_xmm_xmm_xmm: { avx }
flags for vhsubps_ymm_ymm_m256: { avx }
flags for vhsubps_ymm_ymm_ymm: { avx }
flags for vinsertf128_ymm_ymm_m128_imm8: { avx }
flags for vinsertf128_ymm_ymm_xmm_imm8: { avx }
flags for vinserti128_ymm_ymm_m128_imm8: { avx2 }
flags for vinserti128_ymm_ymm_xmm_imm8: { avx2 }
flags for vinsertps_xmm_xmm_m32_imm8: { avx }
flags for vinsertps_xmm_xmm_xmm_imm8: { avx }
flags for vlddqu_xmm_m128: { avx }
flags for vlddqu_ymm_m256: { avx }
flags for vmaskmovpd_m128_xmm_xmm: { avx }
flags for vmaskmovpd_m256_ymm_ymm: { avx }
flags for vmaskmovpd_xmm_xmm_m128: { avx }
flags for vmaskmovpd_ymm_ymm_m256: { avx }
flags for vmaskmovps_m128_xmm_xmm: { avx }
flags for vmaskmovps_m256_ymm_ymm: { avx }
flags for vmaskmovps_xmm_xmm_m128: { avx }
flags for vmaskmovps_ymm_ymm_m256: { avx }
flags for vmaxpd_xmm_xmm_m128: { avx }
flags for vmaxpd_xmm_xmm_xmm: { avx }
flags for vmaxpd_ymm_ymm_m256: { avx }
flags for vmaxpd_ymm_ymm_ymm: { avx }
flags for vmaxps_xmm_xmm_m128: { avx }
flags for vmaxps_xmm_xmm_xmm: { avx }
flags for vmaxps_ymm_ymm_m256: { avx }
flags for vmaxps_ymm_ymm_ymm: { avx }
flags for vmaxsd_xmm_xmm_m64: { avx }
flags for vmaxsd_xmm_xmm_xmm: { avx }
flags for vmaxss_xmm_xmm_m32: { avx }
flags for vmaxss_xmm_xmm_xmm: { avx }
flags for vminpd_xmm_xmm_m128: { avx }
flags for vminpd_xmm_xmm_xmm: { avx }
flags for vminpd_ymm_ymm_m256: { avx }
flags for vminpd_ymm_ymm_ymm: { avx }
flags for vminps_xmm_xmm_m128: { avx }
flags for vminps_xmm_xmm_xmm: { avx }
flags for vminps_ymm_ymm_m256: { avx }
flags for vminps_ymm_ymm_ymm: { avx }
flags for vminsd_xmm_xmm_m64: { avx }
flags for vminsd_xmm_xmm_xmm: { avx }
flags for vminss_xmm_xmm_m32: { avx }
flags for vminss_xmm_xmm_xmm: { avx }
flags for vmovapd_m128_xmm: { avx }
flags for vmovapd_m256_ymm: { avx }
flags for vmovapd_xmm_m128: { avx }
flags for vmovapd_xmm_xmm: { avx }
flags for vmovapd_xmm_xmm_1: { avx }
flags for vmovapd_ymm_m256: { avx }
flags for vmovapd_ymm_ymm: { avx }
flags for vmovapd_ymm_ymm_1: { avx }
flags for vmovaps_m128_xmm: { avx }
flags for vmovaps_m256_ymm: { avx }
flags for vmovaps_xmm_m128: { avx }
flags for vmovaps_xmm_xmm: { avx }
flags for vmovaps_xmm_xmm_1: { avx }
flags for vmovaps_ymm_m256: { avx }
flags for vmovaps_ymm_ymm: { avx }
flags for vmovaps_ymm_ymm_1: { avx }
flags for vmovd_m32_xmm: { avx }
flags for vmovd_r32_xmm: { avx }
flags for vmovd_xmm_m32: { avx }
flags for vmovd_xmm_r32: { avx }
flags for vmovddup_xmm_m64: { avx }
flags for vmovddup_xmm_xmm: { avx }
flags for vmovddup_ymm_m256: { avx }
flags for vmovddup_ymm_ymm: { avx }
flags for vmovdqa_m128_xmm: { avx }
flags for vmovdqa_m256_ymm: { avx }
flags for vmovdqa_xmm_m128: { avx }
flags for vmovdqa_xmm_xmm: { avx }
flags for vmovdqa_xmm_xmm_1: { avx }
flags for vmovdqa_ymm_m256: { avx }
flags for vmovdqa_ymm_ymm: { avx }
flags for vmovdqa_ymm_ymm_1: { avx }
flags for vmovdqu_m128_xmm: { avx }
flags for vmovdqu_m256_ymm: { avx }
flags for vmovdqu_xmm_m128: { avx }
flags for vmovdqu_xmm_xmm: { avx }
flags for vmovdqu_xmm_xmm_1: { avx }
flags for vmovdqu_ymm_m256: { avx }
flags for vmovdqu_ymm_ymm: { avx }
flags for vmovdqu_ymm_ymm_1: { avx }
flags for vmovhlps_xmm_xmm_xmm: { avx }
flags for vmovhpd_m64_xmm: { avx }
flags for vmovhpd_xmm_xmm_m64: { avx }
flags for vmovhps_m64_xmm: { avx }
flags for vmovhps_xmm_xmm_m64: { avx }
flags for vmovlhps_xmm_xmm_xmm: { avx }
flags for vmovlpd_m64_xmm: { avx }
flags for vmovlpd_xmm_xmm_m64: { avx }
flags for vmovlps_m64_xmm: { avx }
flags for vmovlps_xmm_xmm_m64: { avx }
flags for vmovmskpd_r32_xmm: { avx }
flags for vmovmskpd_r32_ymm: { avx }
flags for vmovmskpd_r64_xmm: { avx }
flags for vmovmskpd_r64_ymm: { avx }
flags for vmovmskps_r32_xmm: { avx }
flags for vmovmskps_r32_ymm: { avx }
flags for vmovmskps_r64_xmm: { avx }
flags for vmovmskps_r64_ymm: { avx }
flags for vmovntdqa_m128_xmm: { avx }
flags for vmovntdqa_xmm_m128: { avx }
flags for vmovntdqa_ymm_m256: { avx2 }
flags for vmovntpd_m128_xmm: { avx }
flags for vmovntpd_m256_ymm: { avx }
flags for vmovntps_m128_xmm: { avx }
flags for vmovntps_m256_ymm: { avx }
flags for vmovq_m64_xmm: { avx }
flags for vmovq_m64_xmm_1: { avx }
flags for vmovq_r64_xmm: { avx }
flags for vmovq_xmm_m64: { avx }
flags for vmovq_xmm_m64_1: { avx }
flags for vmovq_xmm_r64: { avx }
flags for vmovq_xmm_xmm: { avx }
flags for vmovq_xmm_xmm_1: { avx }
flags for vmovsd_m64_xmm: { avx }
flags for vmovsd_xmm_m64: { avx }
flags for vmovsd_xmm_xmm_xmm: { avx }
flags for vmovsd_xmm_xmm_xmm_1: { avx }
flags for vmovshdup_xmm_m128: { avx }
flags for vmovshdup_xmm_xmm: { avx }
flags for vmovshdup_ymm_m256: { avx }
flags for vmovshdup_ymm_ymm: { avx }
flags for vmovsldup_xmm_m128: { avx }
flags for vmovsldup_xmm_xmm: { avx }
flags for vmovsldup_ymm_m256: { avx }
flags for vmovsldup_ymm_ymm: { avx }
flags for vmovss_m32_xmm: { avx }
flags for vmovss_xmm_m32: { avx }
flags for vmovss_xmm_xmm_xmm: { avx }
flags for vmovss_xmm_xmm_xmm_1: { avx }
flags for vmovupd_m128_xmm: { avx }
flags for vmovupd_m256_ymm: { avx }
flags for vmovupd_xmm_m128: { avx }
flags for vmovupd_xmm_xmm: { avx }
flags for vmovupd_xmm_xmm_1: { avx }
flags for vmovupd_ymm_m256: { avx }
flags for vmovupd_ymm_ymm: { avx }
flags for vmovupd_ymm_ymm_1: { avx }
flags for vmovups_m128_xmm: { avx }
flags for vmovups_m256_ymm: { avx }
flags for vmovups_xmm_m128: { avx }
flags for vmovups_xmm_xmm: { avx }
flags for vmovups_xmm_xmm_1: { avx }
flags for vmovups_ymm_m256: { avx }
flags for vmovups_ymm_ymm: { avx }
flags for vmovups_ymm_ymm_1: { avx }
flags for vmpsadbw_xmm_xmm_m128_imm8: { avx }
flags for vmpsadbw_xmm_xmm_xmm_imm8: { avx }
flags for vmpsadbw_ymm_ymm_m256_imm8: { avx2 }
flags for vmpsadbw_ymm_ymm_ymm_imm8: { avx2 }
flags for vmulpd_xmm_xmm_m128: { avx }
flags for vmulpd_xmm_xmm_xmm: { avx }
flags for vmulpd_ymm_ymm_m256: { avx }
flags for vmulpd_ymm_ymm_ymm: { avx }
flags for vmulps_xmm_xmm_m128: { avx }
flags for vmulps_xmm_xmm_xmm: { avx }
flags for vmulps_ymm_ymm_m256: { avx }
flags for vmulps_ymm_ymm_ymm: { avx }
flags for vmulsd_xmm_xmm_m64: { avx }
flags for vmulsd_xmm_xmm_xmm: { avx }
flags for vmulss_xmm_xmm_m32: { avx }
flags for vmulss_xmm_xmm_xmm: { avx }
flags for vorpd_xmm_xmm_m128: { avx }
flags for vorpd_xmm_xmm_xmm: { avx }
flags for vorpd_ymm_ymm_m256: { avx }
flags for vorpd_ymm_ymm_ymm: { avx }
flags for vorps_xmm_xmm_m128: { avx }
flags for vorps_xmm_xmm_xmm: { avx }
flags for vorps_ymm_ymm_m256: { avx }
flags for vorps_ymm_ymm_ymm: { avx }
flags for vpabsb_xmm_m128: { avx }
flags for vpabsb_xmm_xmm: { avx }
flags for vpabsb_ymm_m256: { avx2 }
flags for vpabsb_ymm_ymm: { avx2 }
flags for vpabsd_xmm_m128: { avx }
flags for vpabsd_xmm_xmm: { avx }
flags for vpabsd_ymm_m256: { avx2 }
flags for vpabsd_ymm_ymm: { avx2 }
flags for vpabsw_xmm_m128: { avx }
flags for vpabsw_xmm_xmm: { avx }
flags for vpabsw_ymm_m256: { avx2 }
flags for vpabsw_ymm_ymm: { avx2 }
flags for vpackssdw_xmm_xmm_m128: { avx }
flags for vpackssdw_xmm_xmm_xmm: { avx }
flags for vpackssdw_ymm_ymm_m256: { avx2 }
flags for vpackssdw_ymm_ymm_ymm: { avx2 }
flags for vpacksswb_xmm_xmm_m128: { avx }
flags for vpacksswb_xmm_xmm_xmm: { avx }
flags for vpacksswb_ymm_ymm_m256: { avx2 }
flags for vpacksswb_ymm_ymm_ymm: { avx2 }
flags for vpackusdw_xmm_xmm_m128: { avx }
flags for vpackusdw_xmm_xmm_xmm: { avx }
flags for vpackusdw_ymm_ymm_m256: { avx2 }
flags for vpackusdw_ymm_ymm_ymm: { avx2 }
flags for vpackuswb_xmm_xmm_m128: { avx }
flags for vpackuswb_xmm_xmm_xmm: { avx }
flags for vpackuswb_ymm_ymm_m256: { avx2 }
flags for vpackuswb_ymm_ymm_ymm: { avx2 }
flags for vpaddb_xmm_xmm_m128: { avx }
flags for vpaddb_xmm_xmm_xmm: { avx }
flags for vpaddb_ymm_ymm_m256: { avx2 }
flags for vpaddb_ymm_ymm_ymm: { avx2 }
flags for vpaddd_xmm_xmm_m128: { avx }
flags for vpaddd_xmm_xmm_xmm: { avx }
flags for vpaddd_ymm_ymm_m256: { avx2 }
flags for vpaddd_ymm_ymm_ymm: { avx2 }
flags for vpaddq_xmm_xmm_m128: { avx }
flags for vpaddq_xmm_xmm_xmm: { avx }
flags for vpaddq_ymm_ymm_m256: { avx2 }
flags for vpaddq_ymm_ymm_ymm: { avx2 }
flags for vpaddsb_xmm_xmm_m128: { avx }
flags for vpaddsb_xmm_xmm_xmm: { avx }
flags for vpaddsb_ymm_ymm_m256: { avx2 }
flags for vpaddsb_ymm_ymm_ymm: { avx2 }
flags for vpaddsw_xmm_xmm_m128: { avx }
flags for vpaddsw_xmm_xmm_xmm: { avx }
flags for vpaddsw_ymm_ymm_m256: { avx2 }
flags for vpaddsw_ymm_ymm_ymm: { avx2 }
flags for vpaddusb_xmm_xmm_m128: { avx }
flags for vpaddusb_xmm_xmm_xmm: { avx }
flags for vpaddusb_ymm_ymm_m256: { avx2 }
flags for vpaddusb_ymm_ymm_ymm: { avx2 }
flags for vpaddusw_xmm_xmm_m128: { avx }
flags for vpaddusw_xmm_xmm_xmm: { avx }
flags for vpaddusw_ymm_ymm_m256: { avx2 }
flags for vpaddusw_ymm_ymm_ymm: { avx2 }
flags for vpaddw_xmm_xmm_m128: { avx }
flags for vpaddw_xmm_xmm_xmm: { avx }
flags for vpaddw_ymm_ymm_m256: { avx2 }
flags for vpaddw_ymm_ymm_ymm: { avx2 }
flags for vpalignr_xmm_xmm_m128_imm8: { avx }
flags for vpalignr_xmm_xmm_xmm_imm8: { avx }
flags for vpalignr_ymm_ymm_m256_imm8: { avx2 }
flags for vpalignr_ymm_ymm_ymm_imm8: { avx2 }
flags for vpand_xmm_xmm_m128: { avx }
flags for vpand_xmm_xmm_xmm: { avx }
flags for vpand_ymm_ymm_m256: { avx2 }
flags for vpand_ymm_ymm_ymm: { avx2 }
flags for vpandn_xmm_xmm_m128: { avx }
flags for vpandn_xmm_xmm_xmm: { avx }
flags for vpandn_ymm_ymm_m256: { avx2 }
flags for vpandn_ymm_ymm_ymm: { avx2 }
flags for vpavgb_xmm_xmm_m128: { avx }
flags for vpavgb_xmm_xmm_xmm: { avx }
flags for vpavgb_ymm_ymm_m256: { avx2 }
flags for vpavgb_ymm_ymm_ymm: { avx2 }
flags for vpavgw_xmm_xmm_m128: { avx }
flags for vpavgw_xmm_xmm_xmm: { avx }
flags for vpavgw_ymm_ymm_m256: { avx2 }
flags for vpavgw_ymm_ymm_ymm: { avx2 }
flags for vpblendd_xmm_xmm_m128_imm8: { avx2 }
flags for vpblendd_xmm_xmm_xmm_imm8: { avx2 }
flags for vpblendd_ymm_ymm_m256_imm8: { avx2 }
flags for vpblendd_ymm_ymm_ymm_imm8: { avx2 }
flags for vpblendvb_xmm_xmm_m128_xmm: { avx }
flags for vpblendvb_xmm_xmm_xmm_xmm: { avx }
flags for vpblendvb_ymm_ymm_m256_ymm: { avx2 }
flags for vpblendvb_ymm_ymm_ymm_ymm: { avx2 }
flags for vpblendw_xmm_xmm_m128_imm8: { avx }
flags for vpblendw_xmm_xmm_xmm_imm8: { avx }
flags for vpblendw_ymm_ymm_m256_imm8: { avx2 }
flags for vpblendw_ymm_ymm_ymm_imm8: { avx2 }
flags for vpbroadcastb_xmm_m8: { avx2 }
flags for vpbroadcastb_xmm_xmm: { avx2 }
flags for vpbroadcastb_ymm_m8: { avx2 }
flags for vpbroadcastb_ymm_xmm: { avx2 }
flags for vpbroadcastd_xmm_m32: { avx2 }
flags for vpbroadcastd_xmm_xmm: { avx2 }
flags for vpbroadcastd_ymm_m32: { avx2 }
flags for vpbroadcastd_ymm_xmm: { avx2 }
flags for vpbroadcastq_xmm_m64: { avx2 }
flags for vpbroadcastq_xmm_xmm: { avx2 }
flags for vpbroadcastq_ymm_m64: { avx2 }
flags for vpbroadcastq_ymm_xmm: { avx2 }
flags for vpbroadcastw_xmm_m16: { avx2 }
flags for vpbroadcastw_xmm_xmm: { avx2 }
flags for vpbroadcastw_ymm_m16: { avx2 }
flags for vpbroadcastw_ymm_xmm: { avx2 }
flags for vpclmulqdq_xmm_xmm_m128_imm8: { pclmulqdq avx }
flags for vpclmulqdq_xmm_xmm_xmm_imm8: { pclmulqdq avx }
flags for vpcmpeqb_xmm_xmm_m128: { avx }
flags for vpcmpeqb_xmm_xmm_xmm: { avx }
flags for vpcmpeqb_ymm_ymm_m256: { avx2 }
flags for vpcmpeqb_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqd_xmm_xmm_m128: { avx }
flags for vpcmpeqd_xmm_xmm_xmm: { avx }
flags for vpcmpeqd_ymm_ymm_m256: { avx2 }
flags for vpcmpeqd_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqq_xmm_xmm_m128: { avx }
flags for vpcmpeqq_xmm_xmm_xmm: { avx }
flags for vpcmpeqq_ymm_ymm_m256: { avx2 }
flags for vpcmpeqq_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqw_xmm_xmm_m128: { avx }
flags for vpcmpeqw_xmm_xmm_xmm: { avx }
flags for vpcmpeqw_ymm_ymm_m256: { avx2 }
flags for vpcmpeqw_ymm_ymm_ymm: { avx2 }
flags for vpcmpestri_xmm_m128_imm8: { avx }
flags for vpcmpestri_xmm_xmm_imm8: { avx }
flags for vpcmpestrm_xmm_m128_imm8: { avx }
flags for vpcmpestrm_xmm_xmm_imm8: { avx }
flags for vpcmpgtb_xmm_xmm_m128: { avx }
flags for vpcmpgtb_xmm_xmm_xmm: { avx }
flags for vpcmpgtb_ymm_ymm_m256: { avx }
flags for vpcmpgtb_ymm_ymm_ymm: { avx }
flags for vpcmpgtd_xmm_xmm_m128: { avx }
flags for vpcmpgtd_xmm_xmm_xmm: { avx }
flags for vpcmpgtd_ymm_ymm_m256: { avx2 }
flags for vpcmpgtd_ymm_ymm_ymm: { avx2 }
flags for vpcmpgtq_xmm_xmm_m128: { avx }
flags for vpcmpgtq_xmm_xmm_xmm: { avx }
flags for vpvmpgtq_ymm_ymm_m256: { avx2 }
flags for vpvmpgtq_ymm_ymm_ymm: { avx2 }
flags for vpcmpgtw_xmm_xmm_m128: { avx }
flags for vpcmpgtw_xmm_xmm_xmm: { avx }
flags for vpcmpgtw_ymm_ymm_m256: { avx2 }
flags for vpcmpgtw_ymm_ymm_ymm: { avx2 }
flags for vpcmpistri_xmm_m128_imm8: { avx }
flags for vpcmpistri_xmm_xmm_imm8: { avx }
flags for vpcmpistrm_xmm_m128_imm8: { avx }
flags for vpcmpistrm_xmm_xmm_imm8: { avx }
flags for vperm2f128_ymm_ymm_m256_imm8: { avx }
flags for vperm2f128_ymm_ymm_ymm_imm8: { avx }
flags for vperm2i128_ymm_ymm_m256_imm8: { avx2 }
flags for vperm2i128_ymm_ymm_ymm_imm8: { avx2 }
flags for vpermd_ymm_ymm_m256: { avx2 }
flags for vpermd_ymm_ymm_ymm: { avx2 }
flags for vpermilpd_xmm_m128_imm8: { avx }
flags for vpermilpd_xmm_xmm_imm8: { avx }
flags for vpermilpd_xmm_xmm_m128: { avx }
flags for vpermilpd_xmm_xmm_xmm: { avx }
flags for vpermilpd_ymm_m256_imm8: { avx }
flags for vpermilpd_ymm_ymm_imm8: { avx }
flags for vpermilpd_ymm_ymm_m256: { avx }
flags for vpermilpd_ymm_ymm_ymm: { avx }
flags for vpermilps_xmm_m128_imm8: { avx }
flags for vpermilps_xmm_xmm_imm8: { avx }
flags for vpermilps_xmm_xmm_m128: { avx }
flags for vpermilps_xmm_xmm_xmm: { avx }
flags for vpermilps_ymm_m256_imm8: { avx }
flags for vpermilps_ymm_ymm_imm8: { avx }
flags for vpermilps_ymm_ymm_m256: { avx }
flags for vpermilps_ymm_ymm_ymm: { avx }
flags for vpermpd_ymm_m256_imm8: { avx2 }
flags for vpermpd_ymm_ymm_imm8: { avx2 }
flags for vpermps_ymm_ymm_m256: { avx2 }
flags for vpermps_ymm_ymm_ymm: { avx2 }
flags for vpermq_ymm_m256_imm8: { avx2 }
flags for vpermq_ymm_ymm_imm8: { avx2 }
flags for vpextrb_m8_xmm_imm8: { avx }
flags for vpextrb_r32_xmm_imm8: { avx }
flags for vpextrb_r64_xmm_imm8: { avx }
flags for vpextrd_m32_xmm_imm8: { avx }
flags for vpextrd_r32_xmm_imm8: { avx }
flags for vpextrq_m64_xmm_imm8: { avx }
flags for vpextrq_r64_xmm_imm8: { avx }
flags for vpextrw_m16_xmm_imm8: { avx }
flags for vpextrw_r32_xmm_imm8: { avx }
flags for vpextrw_r32_xmm_imm8_1: { avx }
flags for vpextrw_r64_xmm_imm8: { avx }
flags for vpextrw_r64_xmm_imm8_1: { avx }
flags for vpgatherdd_xmm_m32_xmm: { avx2 }
flags for vpgatherdd_ymm_m32_ymm: { avx2 }
flags for vpgatherdq_xmm_m32_xmm: { avx2 }
flags for vpgatherdq_ymm_m32_ymm: { avx2 }
flags for vpgatherqd_xmm_m64_xmm: { avx2 }
flags for vpgatherqd_xmm_m64_xmm_1: { avx2 }
flags for vpgatherqq_xmm_m64_xmm: { avx2 }
flags for vpgatherqq_ymm_m64_ymm: { avx2 }
flags for vphaddd_xmm_xmm_m128: { avx }
flags for vphaddd_xmm_xmm_xmm: { avx }
flags for vphaddd_ymm_ymm_m256: { avx2 }
flags for vphaddd_ymm_ymm_ymm: { avx2 }
flags for vphaddsw_xmm_xmm_m128: { avx }
flags for vphaddsw_xmm_xmm_xmm: { avx }
flags for vphaddsw_ymm_ymm_m256: { avx2 }
flags for vphaddsw_ymm_ymm_ymm: { avx2 }
flags for vphaddw_xmm_xmm_m128: { avx }
flags for vphaddw_xmm_xmm_xmm: { avx }
flags for vphaddw_ymm_ymm_m256: { avx2 }
flags for vphaddw_ymm_ymm_ymm: { avx2 }
flags for vphminposuw_xmm_m128: { avx }
flags for vphminposuw_xmm_xmm: { avx }
flags for vphsubd_xmm_xmm_m128: { avx }
flags for vphsubd_xmm_xmm_xmm: { avx }
flags for vphsubd_ymm_ymm_m256: { avx2 }
flags for vphsubd_ymm_ymm_ymm: { avx2 }
flags for vphsubsw_xmm_xmm_m128: { avx }
flags for vphsubsw_xmm_xmm_xmm: { avx }
flags for vphsubsw_ymm_ymm_m256: { avx2 }
flags for vphsubsw_ymm_ymm_ymm: { avx2 }
flags for vphsubw_xmm_xmm_m128: { avx }
flags for vphsubw_xmm_xmm_xmm: { avx }
flags for vphsubw_ymm_ymm_m256: { avx2 }
flags for vphsubw_ymm_ymm_ymm: { avx2 }
flags for vpinsrb_xmm_xmm_m8_imm8: { avx }
flags for vpinsrb_xmm_xmm_r32_imm8: { avx }
flags for vpinsrd_xmm_xmm_m32_imm8: { avx }
flags for vpinsrd_xmm_xmm_r32_imm8: { avx }
flags for vpinsrq_xmm_xmm_m64_imm8: { avx }
flags for vpinsrq_xmm_xmm_r64_imm8: { avx }
flags for vpinsrw_xmm_xmm_m16_imm8: { avx }
flags for vpinsrw_xmm_xmm_r32_imm8: { avx }
flags for vpmaddubsw_xmm_xmm_m128: { avx }
flags for vpmaddubsw_xmm_xmm_xmm: { avx }
flags for vpmaddubsw_ymm_ymm_m256: { avx2 }
flags for vpmaddubsw_ymm_ymm_ymm: { avx2 }
flags for vpmaddwd_xmm_xmm_m128: { avx }
flags for vpmaddwd_xmm_xmm_xmm: { avx }
flags for vpmaddwd_ymm_ymm_m256: { avx2 }
flags for vpmaddwd_ymm_ymm_ymm: { avx2 }
flags for vpmaskmovd_m128_xmm_xmm: { avx2 }
flags for vpmaskmovd_m256_ymm_ymm: { avx2 }
flags for vpmaskmovd_xmm_xmm_m128: { avx2 }
flags for vpmaskmovd_ymm_ymm_m256: { avx2 }
flags for vpmaskmovq_m128_xmm_xmm: { avx2 }
flags for vpmaskmovq_m256_ymm_ymm: { avx2 }
flags for vpmaskmovq_xmm_xmm_m128: { avx2 }
flags for vpmaskmovq_ymm_ymm_m256: { avx2 }
flags for vpmaxsb_xmm_xmm_m128: { avx }
flags for vpmaxsb_xmm_xmm_xmm: { avx }
flags for vpmaxsb_ymm_ymm_m256: { avx2 }
flags for vpmaxsb_ymm_ymm_ymm: { avx2 }
flags for vpmaxsd_xmm_xmm_m128: { avx }
flags for vpmaxsd_xmm_xmm_xmm: { avx }
flags for vpmaxsd_ymm_ymm_m256: { avx2 }
flags for vpmaxsd_ymm_ymm_ymm: { avx2 }
flags for vpmaxsw_xmm_xmm_m128: { avx }
flags for vpmaxsw_xmm_xmm_xmm: { avx }
flags for vpmaxsw_ymm_ymm_m256: { avx2 }
flags for vpmaxsw_ymm_ymm_ymm: { avx2 }
flags for vpmaxub_xmm_xmm_m128: { avx }
flags for vpmaxub_xmm_xmm_xmm: { avx }
flags for vpmaxub_ymm_ymm_m256: { avx2 }
flags for vpmaxub_ymm_ymm_ymm: { avx2 }
flags for vpmaxud_xmm_xmm_m128: { avx }
flags for vpmaxud_xmm_xmm_xmm: { avx }
flags for vpmaxud_ymm_ymm_m256: { avx2 }
flags for vpmaxud_ymm_ymm_ymm: { avx2 }
flags for vpmaxuw_xmm_xmm_m128: { avx }
flags for vpmaxuw_xmm_xmm_xmm: { avx }
flags for vpmaxuw_ymm_ymm_m256: { avx2 }
flags for vpmaxuw_ymm_ymm_ymm: { avx2 }
flags for vpminsb_xmm_xmm_m128: { avx }
flags for vpminsb_xmm_xmm_xmm: { avx }
flags for vpminsb_ymm_ymm_m256: { avx2 }
flags for vpminsb_ymm_ymm_ymm: { avx2 }
flags for vpminsd_xmm_xmm_m128: { avx }
flags for vpminsd_xmm_xmm_xmm: { avx }
flags for vpminsd_ymm_ymm_m256: { avx2 }
flags for vpminsd_ymm_ymm_ymm: { avx2 }
flags for vpminsw_xmm_xmm_m128: { avx }
flags for vpminsw_xmm_xmm_xmm: { avx }
flags for vpminub_xmm_xmm_m128: { avx }
flags for vpminub_xmm_xmm_xmm: { avx }
flags for vpminub_ymm_ymm_m256: { avx2 }
flags for vpminub_ymm_ymm_ymm: { avx2 }
flags for vpminud_xmm_xmm_m128: { avx }
flags for vpminud_xmm_xmm_xmm: { avx }
flags for vpminud_ymm_ymm_m256: { avx2 }
flags for vpminud_ymm_ymm_ymm: { avx2 }
flags for vpminuw_xmm_xmm_m128: { avx }
flags for vpminuw_xmm_xmm_xmm: { avx }
flags for vpminuw_ymm_ymm_m256: { avx2 }
flags for vpminuw_ymm_ymm_ymm: { avx2 }
flags for vpmovmskb_r32_xmm: { avx }
flags for vpmovmskb_r32_ymm: { avx2 }
flags for vpmovmskb_r64_xmm: { avx }
flags for vpmovmskb_r64_ymm: { avx2 }
flags for vpmovsxbd_xmm_m32: { avx }
flags for vpmovsxbd_xmm_xmm: { avx }
flags for vpmovsxbd_ymm_m64: { avx2 }
flags for vpmovsxbd_ymm_xmm: { avx2 }
flags for vpmovsxbq_xmm_m16: { avx }
flags for vpmovsxbq_xmm_xmm: { avx }
flags for vpmovsxbq_ymm_m32: { avx2 }
flags for vpmovsxbq_ymm_xmm: { avx2 }
flags for vpmovsxbw_xmm_m64: { avx }
flags for vpmovsxbw_xmm_xmm: { avx }
flags for vpmovsxbw_ymm_m128: { avx2 }
flags for vpmovsxbw_ymm_xmm: { avx2 }
flags for vpmovsxdq_xmm_m64: { avx }
flags for vpmovsxdq_xmm_xmm: { avx }
flags for vpmovsxdq_ymm_m128: { avx2 }
flags for vpmovsxdq_ymm_xmm: { avx2 }
flags for vpmovsxwd_xmm_m64: { avx }
flags for vpmovsxwd_xmm_xmm: { avx }
flags for vpmovsxwd_ymm_m128: { avx2 }
flags for vpmovsxwd_ymm_xmm: { avx2 }
flags for vpmovsxwq_xmm_m32: { avx }
flags for vpmovsxwq_xmm_xmm: { avx }
flags for vpmovsxwq_ymm_m64: { avx2 }
flags for vpmovsxwq_ymm_xmm: { avx2 }
flags for vpmovzxbd_xmm_m32: { avx }
flags for vpmovzxbd_xmm_xmm: { avx }
flags for vpmovzxbd_ymm_m64: { avx2 }
flags for vpmovzxbd_ymm_xmm: { avx2 }
flags for vpmovzxbq_xmm_m16: { avx }
flags for vpmovzxbq_xmm_xmm: { avx }
flags for vpmovzxbq_ymm_m32: { avx2 }
flags for vpmovzxbq_ymm_xmm: { avx2 }
flags for vpmovzxbw_xmm_m64: { avx }
flags for vpmovzxbw_xmm_xmm: { avx }
flags for vpmovzxbw_ymm_m128: { avx2 }
flags for vpmovzxbw_ymm_xmm: { avx2 }
flags for vpmovzxdq_xmm_m64: { avx }
flags for vpmovzxdq_xmm_xmm: { avx }
flags for vpmovzxdq_ymm_m128: { avx2 }
flags for vpmovzxdq_ymm_xmm: { avx2 }
flags for vpmovzxwd_xmm_m64: { avx }
flags for vpmovzxwd_xmm_xmm: { avx }
flags for vpmovzxwd_ymm_m128: { avx2 }
flags for vpmovzxwd_ymm_xmm: { avx2 }
flags for vpmovzxwq_xmm_m32: { avx }
flags for vpmovzxwq_xmm_xmm: { avx }
flags for vpmovzxwq_ymm_m64: { avx2 }
flags for vpmovzxwq_ymm_xmm: { avx2 }
flags for vpmuldq_xmm_xmm_m128: { avx }
flags for vpmuldq_xmm_xmm_xmm: { avx }
flags for vpmuldq_ymm_ymm_m256: { avx2 }
flags for vpmuldq_ymm_ymm_ymm: { avx2 }
flags for vpmulhrsw_xmm_xmm_m128: { avx }
flags for vpmulhrsw_xmm_xmm_xmm: { avx }
flags for vpmulhrsw_ymm_ymm_m256: { avx2 }
flags for vpmulhrsw_ymm_ymm_ymm: { avx2 }
flags for vpmulhuw_xmm_xmm_m128: { avx }
flags for vpmulhuw_xmm_xmm_xmm: { avx }
flags for vpmulhuw_ymm_ymm_m256: { avx2 }
flags for vpmulhuw_ymm_ymm_ymm: { avx2 }
flags for vpmulhw_xmm_xmm_m128: { avx }
flags for vpmulhw_xmm_xmm_xmm: { avx }
flags for vpmulhw_ymm_ymm_m256: { avx2 }
flags for vpmulhw_ymm_ymm_ymm: { avx2 }
flags for vpmulld_xmm_xmm_m128: { avx }
flags for vpmulld_xmm_xmm_xmm: { avx }
flags for vpmulld_ymm_ymm_m256: { avx2 }
flags for vpmulld_ymm_ymm_ymm: { avx2 }
flags for vpmullw_xmm_xmm_m128: { avx }
flags for vpmullw_xmm_xmm_xmm: { avx }
flags for vpmullw_ymm_ymm_m256: { avx2 }
flags for vpmullw_ymm_ymm_ymm: { avx2 }
flags for vpmuludq_xmm_xmm_m128: { avx }
flags for vpmuludq_xmm_xmm_xmm: { avx }
flags for vpmuludq_ymm_ymm_m256: { avx2 }
flags for vpmuludq_ymm_ymm_ymm: { avx2 }
flags for vpor_xmm_xmm_m128: { avx }
flags for vpor_xmm_xmm_xmm: { avx }
flags for vpor_ymm_ymm_m256: { avx2 }
flags for vpor_ymm_ymm_ymm: { avx2 }
flags for vpsadbw_xmm_xmm_m128: { avx }
flags for vpsadbw_xmm_xmm_xmm: { avx }
flags for vpsadbw_ymm_ymm_m256: { avx2 }
flags for vpsadbw_ymm_ymm_ymm: { avx2 }
flags for vpshufb_xmm_xmm_m128: { avx }
flags for vpshufb_xmm_xmm_xmm: { avx }
flags for vpshufb_ymm_ymm_m256: { avx2 }
flags for vpshufb_ymm_ymm_ymm: { avx2 }
flags for vpshufd_xmm_m128_imm8: { avx }
flags for vpshufd_xmm_xmm_imm8: { avx }
flags for vpshufd_ymm_m256_imm8: { avx2 }
flags for vpshufd_ymm_ymm_imm8: { avx2 }
flags for vpshufhw_xmm_m128_imm8: { avx }
flags for vpshufhw_xmm_xmm_imm8: { avx }
flags for vpshufhw_ymm_m256_imm8: { avx2 }
flags for vpshufhw_ymm_ymm_imm8: { avx2 }
flags for vpshuflw_xmm_m128_imm8: { avx }
flags for vpshuflw_xmm_xmm_imm8: { avx }
flags for vpshuflw_ymm_m256_imm8: { avx2 }
flags for vpshuflw_ymm_ymm_imm8: { avx2 }
flags for vpsignb_xmm_xmm_m128: { avx }
flags for vpsignb_xmm_xmm_xmm: { avx }
flags for vpsignd_xmm_xmm_m128: { avx }
flags for vpsignd_xmm_xmm_xmm: { avx }
flags for vpsignw_xmm_xmm_m128: { avx }
flags for vpsignw_xmm_xmm_xmm: { avx }
flags for vpslld_xmm_xmm_imm8: { avx }
flags for vpslld_xmm_xmm_m128: { avx }
flags for vpslld_xmm_xmm_xmm: { avx }
flags for vpslld_ymm_ymm_imm8: { avx2 }
flags for vpslld_ymm_ymm_m128: { avx2 }
flags for vpslld_ymm_ymm_xmm: { avx2 }
flags for vpslldq_xmm_xmm_imm8: { avx }
flags for vpslldq_ymm_ymm_imm8: { avx2 }
flags for vpsllq_xmm_xmm_imm8: { avx }
flags for vpsllq_xmm_xmm_m128: { avx }
flags for vpsllq_xmm_xmm_xmm: { avx }
flags for vpsllq_ymm_ymm_imm8: { avx2 }
flags for vpsllq_ymm_ymm_m128: { avx2 }
flags for vpsllq_ymm_ymm_xmm: { avx2 }
flags for vpsllvd_xmm_xmm_m128: { avx2 }
flags for vpsllvd_xmm_xmm_xmm: { avx2 }
flags for vpsllvd_ymm_ymm_m256: { avx2 }
flags for vpsllvd_ymm_ymm_ymm: { avx2 }
flags for vpsllvq_xmm_xmm_m128: { avx2 }
flags for vpsllvq_xmm_xmm_xmm: { avx2 }
flags for vpsllvq_ymm_ymm_m256: { avx2 }
flags for vpsllvq_ymm_ymm_ymm: { avx2 }
flags for vpsllw_xmm_xmm_imm8: { avx }
flags for vpsllw_xmm_xmm_m128: { avx }
flags for vpsllw_xmm_xmm_xmm: { avx }
flags for vpsllw_ymm_ymm_imm8: { avx2 }
flags for vpsllw_ymm_ymm_m128: { avx2 }
flags for vpsllw_ymm_ymm_xmm: { avx2 }
flags for vpsrad_xmm_xmm_imm8: { avx }
flags for vpsrad_xmm_xmm_m128: { avx }
flags for vpsrad_xmm_xmm_xmm: { avx }
flags for vpsrad_ymm_ymm_imm8: { avx2 }
flags for vpsrad_ymm_ymm_m128: { avx2 }
flags for vpsrad_ymm_ymm_xmm: { avx2 }
flags for vpsravd_xmm_xmm_m128: { avx2 }
flags for vpsravd_xmm_xmm_xmm: { avx2 }
flags for vpsravd_ymm_ymm_m256: { avx2 }
flags for vpsravd_ymm_ymm_ymm: { avx2 }
flags for vpsraw_xmm_xmm_imm8: { avx }
flags for vpsraw_xmm_xmm_m128: { avx }
flags for vpsraw_xmm_xmm_xmm: { avx }
flags for vpsraw_ymm_ymm_imm8: { avx2 }
flags for vpsraw_ymm_ymm_m128: { avx2 }
flags for vpsraw_ymm_ymm_xmm: { avx2 }
flags for vpsrld_xmm_xmm_imm8: { avx }
flags for vpsrld_xmm_xmm_m128: { avx }
flags for vpsrld_xmm_xmm_xmm: { avx }
flags for vpsrld_ymm_ymm_imm8: { avx2 }
flags for vpsrld_ymm_ymm_m128: { avx2 }
flags for vpsrld_ymm_ymm_xmm: { avx2 }
flags for vpsrldq_xmm_xmm_imm8: { avx }
flags for vpsrldq_ymm_ymm_imm8: { avx2 }
flags for vpsrlq_xmm_xmm_imm8: { avx }
flags for vpsrlq_xmm_xmm_m128: { avx }
flags for vpsrlq_xmm_xmm_xmm: { avx }
flags for vpsrlq_ymm_ymm_imm8: { avx2 }
flags for vpsrlq_ymm_ymm_m128: { avx2 }
flags for vpsrlq_ymm_ymm_xmm: { avx2 }
flags for vpsrlvd_xmm_xmm_m128: { avx2 }
flags for vpsrlvd_xmm_xmm_xmm: { avx2 }
flags for vpsrlvd_ymm_ymm_m256: { avx2 }
flags for vpsrlvd_ymm_ymm_ymm: { avx2 }
flags for vpsrlvq_xmm_xmm_m128: { avx2 }
flags for vpsrlvq_xmm_xmm_xmm: { avx2 }
flags for vpsrlvq_ymm_ymm_m256: { avx2 }
flags for vpsrlvq_ymm_ymm_ymm: { avx2 }
flags for vpsrlw_xmm_xmm_imm8: { avx }
flags for vpsrlw_xmm_xmm_m128: { avx }
flags for vpsrlw_xmm_xmm_xmm: { avx }
flags for vpsrlw_ymm_ymm_imm8: { avx2 }
flags for vpsrlw_ymm_ymm_m128: { avx2 }
flags for vpsrlw_ymm_ymm_xmm: { avx2 }
flags for vpsubb_xmm_xmm_m128: { avx }
flags for vpsubb_xmm_xmm_xmm: { avx }
flags for vpsubb_ymm_ymm_m256: { avx2 }
flags for vpsubb_ymm_ymm_ymm: { avx2 }
flags for vpsubd_xmm_xmm_m128: { avx }
flags for vpsubd_xmm_xmm_xmm: { avx }
flags for vpsubd_ymm_ymm_m256: { avx2 }
flags for vpsubd_ymm_ymm_ymm: { avx2 }
flags for vpsubq_xmm_xmm_m128: { avx }
flags for vpsubq_xmm_xmm_xmm: { avx }
flags for vpsubq_ymm_ymm_m256: { avx2 }
flags for vpsubq_ymm_ymm_ymm: { avx2 }
flags for vpsubsb_xmm_xmm_m128: { avx }
flags for vpsubsb_xmm_xmm_xmm: { avx }
flags for vpsubsb_ymm_ymm_m256: { avx2 }
flags for vpsubsb_ymm_ymm_ymm: { avx2 }
flags for vpsubsw_xmm_xmm_m128: { avx }
flags for vpsubsw_xmm_xmm_xmm: { avx }
flags for vpsubsw_ymm_ymm_m256: { avx2 }
flags for vpsubsw_ymm_ymm_ymm: { avx2 }
flags for vpsubusb_xmm_xmm_m128: { avx }
flags for vpsubusb_xmm_xmm_xmm: { avx }
flags for vpsubusb_ymm_ymm_m256: { avx2 }
flags for vpsubusb_ymm_ymm_ymm: { avx2 }
flags for vpsubusw_xmm_xmm_m128: { avx }
flags for vpsubusw_xmm_xmm_xmm: { avx }
flags for vpsubusw_ymm_ymm_m256: { avx2 }
flags for vpsubusw_ymm_ymm_ymm: { avx2 }
flags for vpsubw_xmm_xmm_m128: { avx }
flags for vpsubw_xmm_xmm_xmm: { avx }
flags for vpsubw_ymm_ymm_m256: { avx2 }
flags for vpsubw_ymm_ymm_ymm: { avx2 }
flags for vptest_xmm_m128: { avx }
flags for vptest_xmm_xmm: { avx }
flags for vptest_ymm_m256: { avx }
flags for vptest_ymm_ymm: { avx }
flags for vpunpckhbw_xmm_xmm_m128: { avx }
flags for vpunpckhbw_xmm_xmm_xmm: { avx }
flags for vpunpckhbw_ymm_ymm_m256: { avx2 }
flags for vpunpckhbw_ymm_ymm_ymm: { avx2 }
flags for vpunpckhdq_xmm_xmm_m128: { avx }
flags for vpunpckhdq_xmm_xmm_xmm: { avx }
flags for vpunpckhdq_ymm_ymm_m256: { avx2 }
flags for vpunpckhdq_ymm_ymm_ymm: { avx2 }
flags for vpunpckhqdq_xmm_xmm_m128: { avx }
flags for vpunpckhqdq_xmm_xmm_xmm: { avx }
flags for vpunpckhqdq_ymm_ymm_m256: { avx2 }
flags for vpunpckhqdq_ymm_ymm_ymm: { avx2 }
flags for vpunpckhwd_xmm_xmm_m128: { avx }
flags for vpunpckhwd_xmm_xmm_xmm: { avx }
flags for vpunpckhwd_ymm_ymm_m256: { avx2 }
flags for vpunpckhwd_ymm_ymm_ymm: { avx2 }
flags for vpunpcklbw_xmm_xmm_m128: { avx }
flags for vpunpcklbw_xmm_xmm_xmm: { avx }
flags for vpunpcklbw_ymm_ymm_m256: { avx2 }
flags for vpunpcklbw_ymm_ymm_ymm: { avx2 }
flags for vpunpckldq_xmm_xmm_m128: { avx }
flags for vpunpckldq_xmm_xmm_xmm: { avx }
flags for vpunpckldq_ymm_ymm_m256: { avx2 }
flags for vpunpckldq_ymm_ymm_ymm: { avx2 }
flags for vpunpcklqdq_xmm_xmm_m128: { avx }
flags for vpunpcklqdq_xmm_xmm_xmm: { avx }
flags for vpunpcklqdq_ymm_ymm_m256: { avx2 }
flags for vpunpcklqdq_ymm_ymm_ymm: { avx2 }
flags for vpunpcklwd_xmm_xmm_m128: { avx }
flags for vpunpcklwd_xmm_xmm_xmm: { avx }
flags for vpunpcklwd_ymm_ymm_m256: { avx2 }
flags for vpunpcklwd_ymm_ymm_ymm: { avx2 }
flags for vpxor_xmm_xmm_m128: { avx }
flags for vpxor_xmm_xmm_xmm: { avx }
flags for vpxor_ymm_ymm_m256: { avx2 }
flags for vpxor_ymm_ymm_ymm: { avx2 }
flags for vrcpps_xmm_m128: { avx }
flags for vrcpps_xmm_xmm: { avx }
flags for vrcpps_ymm_m256: { avx }
flags for vrcpps_ymm_ymm: { avx }
flags for vrcpss_xmm_xmm_m32: { avx }
flags for vrcpss_xmm_xmm_xmm: { avx }
flags for vroundpd_xmm_m128_imm8: { avx }
flags for vroundpd_xmm_xmm_imm8: { avx }
flags for vroundpd_ymm_m256_imm8: { avx }
flags for vroundpd_ymm_ymm_imm8: { avx }
flags for vroundps_xmm_m128_imm8: { avx }
flags for vroundps_xmm_xmm_imm8: { avx }
flags for vroundps_ymm_m256_imm8: { avx }
flags for vroundps_ymm_ymm_imm8: { avx }
flags for vroundsd_xmm_xmm_m64_imm8: { avx }
flags for vroundsd_xmm_xmm_xmm_imm8: { avx }
flags for vroundss_xmm_xmm_m32_imm8: { avx }
flags for vroundss_xmm_xmm_xmm_imm8: { avx }
flags for vrsqrtps_xmm_m128: { avx }
flags for vrsqrtps_xmm_xmm: { avx }
flags for vrsqrtps_ymm_m256: { avx }
flags for vrsqrtps_ymm_ymm: { avx }
flags for vrsqrtss_xmm_xmm_m32: { avx }
flags for vrsqrtss_xmm_xmm_xmm: { avx }
flags for vshufpd_xmm_xmm_m128_imm8: { avx }
flags for vshufpd_xmm_xmm_xmm_imm8: { avx }
flags for vshufpd_ymm_ymm_m256_imm8: { avx }
flags for vshufpd_ymm_ymm_ymm_imm8: { avx }
flags for vshufps_xmm_xmm_m128_imm8: { avx }
flags for vshufps_xmm_xmm_xmm_imm8: { avx }
flags for vshufps_ymm_ymm_m256_imm8: { avx }
flags for vshufps_ymm_ymm_ymm_imm8: { avx }
flags for vsqrtpd_xmm_m128: { avx }
flags for vsqrtpd_xmm_xmm: { avx }
flags for vsqrtpd_ymm_m256: { avx }
flags for vsqrtpd_ymm_ymm: { avx }
flags for vsqrtps_xmm_m128: { avx }
flags for vsqrtps_xmm_xmm: { avx }
flags for vsqrtps_ymm_m256: { avx }
flags for vsqrtps_ymm_ymm: { avx }
flags for vsqrtsd_xmm_xmm_m64: { avx }
flags for vsqrtsd_xmm_xmm_xmm: { avx }
flags for vsqrtss_xmm_xmm_m32: { avx }
flags for vsqrtss_xmm_xmm_xmm: { avx }
flags for vsubpd_xmm_xmm_m128: { avx }
flags for vsubpd_xmm_xmm_xmm: { avx }
flags for vsubpd_ymm_ymm_m256: { avx }
flags for vsubpd_ymm_ymm_ymm: { avx }
flags for vsubps_xmm_xmm_m128: { avx }
flags for vsubps_xmm_xmm_xmm: { avx }
flags for vsubps_ymm_ymm_m256: { avx }
flags for vsubps_ymm_ymm_ymm: { avx }
flags for vsubsd_xmm_xmm_m64: { avx }
flags for vsubsd_xmm_xmm_xmm: { avx }
flags for vsubss_xmm_xmm_m32: { avx }
flags for vsubss_xmm_xmm_xmm: { avx }
flags for vtestpd_xmm_m128: { avx }
flags for vtestpd_xmm_xmm: { avx }
flags for vtestpd_ymm_m256: { avx }
flags for vtestpd_ymm_ymm: { avx }
flags for vtestps_xmm_m128: { avx }
flags for vtestps_xmm_xmm: { avx }
flags for vtestps_ymm_m256: { avx }
flags for vtestps_ymm_ymm: { avx }
flags for vucomisd_xmm_m64: { avx }
flags for vucomisd_xmm_xmm: { avx }
flags for vucomiss_xmm_m32: { avx }
flags for vucomiss_xmm_xmm: { avx }
flags for vunpckhpd_xmm_xmm_m128: { avx }
flags for vunpckhpd_xmm_xmm_xmm: { avx }
flags for vunpckhpd_ymm_ymm_m256: { avx }
flags for vunpckhpd_ymm_ymm_ymm: { avx }
flags for vunpckhps_xmm_xmm_m128: { avx }
flags for vunpckhps_xmm_xmm_xmm: { avx }
flags for vunpckhps_ymm_ymm_m256: { avx }
flags for vunpckhps_ymm_ymm_ymm: { avx }
flags for vunpcklpd_xmm_xmm_m128: { avx }
flags for vunpcklpd_xmm_xmm_xmm: { avx }
flags for vunpcklpd_ymm_ymm_m256: { avx }
flags for vunpcklpd_ymm_ymm_ymm: { avx }
flags for vunpcklps_xmm_xmm_m128: { avx }
flags for vunpcklps_xmm_xmm_xmm: { avx }
flags for vunpcklps_ymm_ymm_m256: { avx }
flags for vunpcklps_ymm_ymm_ymm: { avx }
flags for vxorpd_xmm_xmm_m128: { avx }
flags for vxorpd_xmm_xmm_xmm: { avx }
flags for vxorpd_ymm_ymm_m256: { avx }
flags for vxorpd_ymm_ymm_ymm: { avx }
flags for vxorps_xmm_xmm_m128: { avx }
flags for vxorps_xmm_xmm_xmm: { avx }
flags for vxorps_ymm_ymm_m256: { avx }
flags for vxorps_ymm_ymm_ymm: { avx }
flags for vzeroall: { avx }
flags for vzeroupper: { avx }
flags for wait: { fpu }
flags for xabort_imm8: { rtm }
flags for xacquire: { hle }
flags for xbegin_label: { rtm }
flags for xend: { rtm }
flags for xorb_al_imm8: { }
flags for xorw_ax_imm16: { }
flags for xorl_eax_imm32: { }
flags for xorw_m16_imm16: { }
flags for xorw_m16_imm8: { }
flags for xorw_m16_r16: { }
flags for xorl_m32_imm32: { }
flags for xorl_m32_imm8: { }
flags for xorl_m32_r32: { }
flags for xorq_m64_imm32: { }
flags for xorq_m64_imm8: { }
flags for xorq_m64_r64: { }
flags for xorb_m8_imm8: { }
flags for xorb_m8_r8: { }
flags for xorb_m8_rh: { }
flags for xorw_r16_imm16: { }
flags for xorw_r16_imm8: { }
flags for xorw_r16_m16: { }
flags for xorw_r16_r16: { }
flags for xorw_r16_r16_1: { }
flags for xorl_r32_imm32: { }
flags for xorl_r32_imm8: { }
flags for xorl_r32_m32: { }
flags for xorl_r32_r32: { }
flags for xorl_r32_r32_1: { }
flags for xorq_r64_imm32: { }
flags for xorq_r64_imm8: { }
flags for xorq_r64_m64: { }
flags for xorq_r64_r64: { }
flags for xorq_r64_r64_1: { }
flags for xorb_r8_imm8: { }
flags for xorb_r8_m8: { }
flags for xorb_r8_r8: { }
flags for xorb_r8_r8_1: { }
flags for xorb_r8_rh: { }
flags for xorb_r8_rh_1: { }
flags for xorq_rax_imm32: { }
flags for xorb_rh_imm8: { }
flags for xorb_rh_m8: { }
flags for xorb_rh_r8: { }
flags for xorb_rh_r8_1: { }
flags for xorb_rh_rh: { }
flags for xorb_rh_rh_1: { }
flags for xorpd_xmm_m128: { sse2 }
flags for xorpd_xmm_xmm: { sse2 }
flags for xorps_xmm_m128: { sse }
flags for xorps_xmm_xmm: { sse }
flags for xrelease: { hle }
flags for xtest: { rtm }
Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (42)                                                Lowest Known Correct Cost (52)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  movq %rdi, %rdx           #  2     0x2   3      OPC=movq_r64_r64           xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x5   2      OPC=movl_r32_r32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x7   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  xorl %eax, %eax           #  5     0xb   2      OPC=xorl_r32_r32           movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %r15d, %edi         #  6     0xd   3      OPC=testl_r32_r32          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0x10  2      OPC=je_label               je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x12  1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x13  1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x14  1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x15  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x16  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x17  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x18  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x19  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x1a  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1b  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1c  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1d  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1e  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1f  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>                nop                       #  22    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8        .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32           addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  testl %eax, %eax          #  24    0x27  2      OPC=testl_r32_r32          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  25    0x29  2      OPC=jne_label              movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  addl %edx, %eax           #  26    0x2b  2      OPC=addl_r32_r32_1         testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  subl %edi, %eax           #  27    0x2d  2      OPC=subl_r32_r32           jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  sarl $0x2, %eax           #  28    0x2f  3      OPC=sarl_r32_imm8          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x32  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x33  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x34  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x35  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x36  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x37  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x38  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x39  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x3a  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3b  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3c  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3d  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
.L_142ce0:                  #        0x3e  0      OPC=<label>                nop                       #  41    0x3e  1      OPC=nop                 
  popq %r11                 #  41    0x3e  2      OPC=popq_r64_1             nop                       #  42    0x3f  1      OPC=nop                 
  andl $0xe0, %r11d         #  42    0x40  4      OPC=andl_r32_imm8        .L_142ce0:                  #        0x40  0      OPC=<label>             
  addq %r15, %r11           #  43    0x44  3      OPC=addq_r64_r64           popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  jmpq %r11                 #  44    0x47  3      OPC=jmpq_r64               andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
                                                                             addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
.size wcslen, .-wcslen                                                       jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                     
                                                                           .size wcslen, .-wcslen                                                    
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (41)                                                Lowest Known Correct Cost (52)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  movq %rdi, %rdx           #  2     0x2   3      OPC=movq_r64_r64           xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x5   2      OPC=movl_r32_r32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x7   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  xorl %eax, %eax           #  5     0xb   2      OPC=xorl_r32_r32           movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %r15d, %edi         #  6     0xd   3      OPC=testl_r32_r32          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0x10  2      OPC=je_label               je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x12  1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x13  1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x14  1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x15  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x16  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x17  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x18  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x19  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x1a  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1b  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1c  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1d  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1e  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1f  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>                nop                       #  22    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8        .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32           addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  testl %eax, %eax          #  24    0x27  2      OPC=testl_r32_r32          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  25    0x29  2      OPC=jne_label              movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  addl %edx, %eax           #  26    0x2b  2      OPC=addl_r32_r32_1         testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  subl %edi, %eax           #  27    0x2d  2      OPC=subl_r32_r32           jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  sarl $0x2, %eax           #  28    0x2f  3      OPC=sarl_r32_imm8          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x32  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x33  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x34  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x35  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x36  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x37  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x38  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x39  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x3a  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3b  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3c  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3d  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3e  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
.L_142ce0:                  #        0x3f  0      OPC=<label>                nop                       #  42    0x3f  1      OPC=nop                 
  popq %r11                 #  42    0x3f  2      OPC=popq_r64_1           .L_142ce0:                  #        0x40  0      OPC=<label>             
  andl $0xe0, %r11d         #  43    0x41  4      OPC=andl_r32_imm8          popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  addq %r15, %r11           #  44    0x45  3      OPC=addq_r64_r64           andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  jmpq %r11                 #  45    0x48  3      OPC=jmpq_r64               addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
                                                                             jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
.size wcslen, .-wcslen                                                                                                                               
                                                                           .size wcslen, .-wcslen                                                    
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (40)                                                Lowest Known Correct Cost (40)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32         
  movq %rdi, %rdx           #  2     0x2   3      OPC=movq_r64_r64           movq %rdi, %rdx           #  2     0x2   3      OPC=movq_r64_r64         
  movl %edi, %edi           #  3     0x5   2      OPC=movl_r32_r32           movl %edi, %edi           #  3     0x5   2      OPC=movl_r32_r32         
  movl (%r15,%rdi,1), %ecx  #  4     0x7   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  4     0x7   4      OPC=movl_r32_m32         
  xorl %eax, %eax           #  5     0xb   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  5     0xb   2      OPC=xorl_r32_r32         
  testl %r15d, %edi         #  6     0xd   3      OPC=testl_r32_r32          testl %r15d, %edi         #  6     0xd   3      OPC=testl_r32_r32        
  je .L_142ce0              #  7     0x10  2      OPC=je_label               je .L_142ce0              #  7     0x10  2      OPC=je_label             
  nop                       #  8     0x12  1      OPC=nop                    nop                       #  8     0x12  1      OPC=nop                  
  nop                       #  9     0x13  1      OPC=nop                    nop                       #  9     0x13  1      OPC=nop                  
  nop                       #  10    0x14  1      OPC=nop                    nop                       #  10    0x14  1      OPC=nop                  
  nop                       #  11    0x15  1      OPC=nop                    nop                       #  11    0x15  1      OPC=nop                  
  nop                       #  12    0x16  1      OPC=nop                    nop                       #  12    0x16  1      OPC=nop                  
  nop                       #  13    0x17  1      OPC=nop                    nop                       #  13    0x17  1      OPC=nop                  
  nop                       #  14    0x18  1      OPC=nop                    nop                       #  14    0x18  1      OPC=nop                  
  nop                       #  15    0x19  1      OPC=nop                    nop                       #  15    0x19  1      OPC=nop                  
  nop                       #  16    0x1a  1      OPC=nop                    nop                       #  16    0x1a  1      OPC=nop                  
  nop                       #  17    0x1b  1      OPC=nop                    nop                       #  17    0x1b  1      OPC=nop                  
  nop                       #  18    0x1c  1      OPC=nop                    nop                       #  18    0x1c  1      OPC=nop                  
  nop                       #  19    0x1d  1      OPC=nop                    nop                       #  19    0x1d  1      OPC=nop                  
  nop                       #  20    0x1e  1      OPC=nop                    nop                       #  20    0x1e  1      OPC=nop                  
  nop                       #  21    0x1f  1      OPC=nop                    nop                       #  21    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32         
  testl %eax, %eax          #  24    0x27  2      OPC=testl_r32_r32          testl %eax, %eax          #  24    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  25    0x29  2      OPC=jne_label              jne .L_142cc0             #  25    0x29  2      OPC=jne_label            
  addl %edx, %eax           #  26    0x2b  2      OPC=addl_r32_r32_1         addl %edx, %eax           #  26    0x2b  2      OPC=addl_r32_r32_1       
  subl %edi, %eax           #  27    0x2d  2      OPC=subl_r32_r32           subl %edi, %eax           #  27    0x2d  2      OPC=subl_r32_r32         
  sarl $0x2, %eax           #  28    0x2f  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  28    0x2f  3      OPC=sarl_r32_imm8        
  nop                       #  29    0x32  1      OPC=nop                    nop                       #  29    0x32  1      OPC=nop                  
  nop                       #  30    0x33  1      OPC=nop                    nop                       #  30    0x33  1      OPC=nop                  
  nop                       #  31    0x34  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                  
  nop                       #  32    0x35  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                  
  nop                       #  33    0x36  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                  
  nop                       #  34    0x37  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                  
  nop                       #  35    0x38  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                  
  nop                       #  36    0x39  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                  
  nop                       #  37    0x3a  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                  
  nop                       #  38    0x3b  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                  
  nop                       #  39    0x3c  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                  
  nop                       #  40    0x3d  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                  
  nop                       #  41    0x3e  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                  
  nop                       #  42    0x3f  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  popq %r11                 #  43    0x40  2      OPC=popq_r64_1             popq %r11                 #  43    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64           addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64               jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  97.8987s
Iterations/s:                  1021.46

Starting cost:                 52
Lowest cost:                   40
Lowest correct cost:           40

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.363%       7.99%         7.732%       
Operand         8.354%       4.645%        1.986%       
Local Swap      8.426%       4.304%        3.664%       
Global Swap     8.439%       7.657%        7.002%       
Global Copy     8.242%       7.71%         7.71%        
ReplaceNop      8.284%       7.893%        7.539%       
Rotate          8.311%       7.695%        5.884%       
Delete          8.229%       7.871%        6.705%       
OpcodeWidth     8.249%       7.684%        7.501%       
Add Nops        8.41%        8.41%         6.664%       
Instruction     8.311%       4.603%        0.502%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.382%       1.704%        0.001%       
                                                        
Total           100%         78.166%       62.89%       

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  240.409s
Iterations/s:                  831.915

Starting cost:                 52
Lowest cost:                   40
Lowest correct cost:           40

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.368%       8.104%        7.922%       
Operand         8.285%       4.8465%       2.221%       
Local Swap      8.4145%      4.272%        3.603%       
Global Swap     8.411%       7.852%        7.3425%      
Global Copy     8.322%       7.9475%       7.9475%      
ReplaceNop      8.3495%      8.078%        7.83%        
Rotate          8.2655%      7.824%        6.469%       
Delete          8.367%       8.1225%       7.1635%      
OpcodeWidth     8.2695%      7.8505%       7.711%       
Add Nops        8.2705%      8.2705%       7.001%       
Instruction     8.3305%      4.5905%       0.55%        
2xWeighted      0%           0%            0%           
Memory+Swap     8.347%       1.763%        0.0005%      
                                                        
Total           100%         79.521%       65.761%      

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  436.607s
Iterations/s:                  687.117

Starting cost:                 52
Lowest cost:                   40
Lowest correct cost:           40

Move Type       Proposed     Succeeded     Accepted         
                                                            
Opcode          8.38733%     8.176%        8.02733%         
Operand         8.301%       4.929%        2.30267%         
Local Swap      8.41167%     4.316%        3.64367%         
Global Swap     8.38333%     7.94333%      7.52733%         
Global Copy     8.32933%     8.03033%      8.03033%         
ReplaceNop      8.28967%     8.07833%      7.88433%         
Rotate          8.25467%     7.901%        6.71067%         
Delete          8.313%       8.11667%      7.232%           
OpcodeWidth     8.24867%     7.90767%      7.79167%         
Add Nops        8.315%       8.315%        7.15233%         
Instruction     8.36833%     4.58167%      0.529%           
2xWeighted      0%           0%            0%               
Memory+Swap     8.398%       1.86167%      0.000333333%     
                                                            
Total           100%         80.1567%      66.8317%         

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  664.285s
Iterations/s:                  602.152

Starting cost:                 52
Lowest cost:                   40
Lowest correct cost:           40

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.36775%     8.1885%       8.061%       
Operand         8.35725%     5.029%        2.433%       
Local Swap      8.38475%     4.24175%      3.551%       
Global Swap     8.3945%      8.01475%      7.648%       
Global Copy     8.351%       8.097%        8.097%       
ReplaceNop      8.306%       8.128%        7.9615%      
Rotate          8.294%       7.98775%      6.887%       
Delete          8.28475%     8.11525%      7.25%        
OpcodeWidth     8.2325%      7.935%        7.832%       
Add Nops        8.28075%     8.28075%      7.165%       
Instruction     8.363%       4.586%        0.53175%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.38375%     1.90875%      0.00025%     
                                                        
Total           100%         80.5125%      67.4175%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  987.614s
Iterations/s:                  506.271

Starting cost:                 52
Lowest cost:                   40
Lowest correct cost:           40

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3526%      8.1974%       8.0882%      
Operand         8.343%       5.1434%       2.6168%      
Local Swap      8.385%       4.2636%       3.522%       
Global Swap     8.3682%      8.038%        7.7096%      
Global Copy     8.3552%      8.135%        8.135%       
ReplaceNop      8.3142%      8.1554%       8.0114%      
Rotate          8.2946%      8.0278%       6.9554%      
Delete          8.2856%      8.1364%       7.2214%      
OpcodeWidth     8.2716%      8.003%        7.9064%      
Add Nops        8.2998%      8.2998%       7.1692%      
Instruction     8.361%       4.6192%       0.5588%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3692%      2.0148%       0.0002%      
                                                        
Total           100%         81.0338%      67.8944%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     e6 00 48 a4 3e 0d 77 e8
%rcx     c0 d2 80 52 aa 2f 67 31
%rdx     aa c6 dc 79 e6 cf d9 db
%rbx     78 0c 57 90 85 38 57 85
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 04 e0 0a c0
%rdi     00 00 00 00 02 e5 0d c0
%r8      7d 01 36 5e 6e dd a7 0c
%r9      37 ab 1f 4e c7 ee 3e be
%r10     ec 5e a7 05 fc 9a 75 20
%r11     44 f2 54 37 88 64 44 ec
%r12     c5 d7 b3 06 59 b2 d0 fb
%r13     05 77 37 e5 40 8c c5 f1
%r14     a4 9d 5f b8 b1 01 11 ac
%r15     00 00 00 00 0c 2d e0 b0

%ymm0    d6 1f 30 e7 cf 11 c8 79 35 9c 78 91 f7 da 32 3f 29 30 2d 7d 2b b6 46 46 76 ba 81 84 f5 aa d1 ef
%ymm1    29 39 2e 27 62 0f f7 7b 40 e6 b2 c6 b0 16 4e 1f 1f 74 ed e0 4a bc b2 cd 91 fc 86 4a 86 cc c9 02
%ymm2    a1 7a 3d a9 51 04 7b 29 a2 6c 32 27 2c 4c 74 65 9c 5e 17 7d 3f a3 90 5f 58 d3 ac 8b 42 b0 05 f8
%ymm3    95 a4 d4 52 02 5a 15 59 09 10 de df 6e 72 ad 47 46 60 d3 e0 c4 75 c9 47 36 26 b7 d7 ce e4 2a 42
%ymm4    6f 17 c9 70 82 25 9b 2f 22 41 1a c9 38 0a eb 59 9b 79 ac 54 33 4b 81 53 87 0c 89 3f d6 63 88 ff
%ymm5    1a 5c ae c9 ed 97 00 7d 15 db e2 e6 b8 a0 cb ef 68 c1 03 0f 26 8a 63 d2 56 17 51 03 90 45 7a 51
%ymm6    e1 75 e6 b9 5b 89 0a 92 9c 73 92 1e 5d b7 3c 77 ff 9c ac 10 34 ea 0c 25 c4 82 c2 f2 2c aa a1 28
%ymm7    c5 c2 59 3d e0 e3 57 27 88 ce 1d f5 32 aa 63 13 4c ab d7 d5 ac 3b 29 9c 07 3e 90 e2 7a 0d 20 87
%ymm8    ea e1 59 71 1c 97 18 df b6 34 87 8f ac b9 72 b7 87 c8 54 74 7b a8 9d a6 fc 62 7d 5f 5b 3f cf 79
%ymm9    58 8b 5d 2f a1 7c d6 30 5f 3f 18 80 89 e4 f9 fa 37 3f 88 80 b8 c0 2c 44 44 84 a7 9e 88 45 20 28
%ymm10   e3 c9 a2 65 71 17 08 41 75 8c 6b 45 2c 2b 2c ac a2 48 b3 a8 11 73 20 90 bb 60 64 77 1c e0 d0 7e
%ymm11   0a 82 dd 97 9e 14 f5 39 a3 de 31 62 68 a5 f7 23 78 cb f7 cc 29 ae 19 80 9d a6 60 0d ea ff a9 73
%ymm12   cb d7 29 45 cd a7 67 35 08 53 40 cf af 62 9e 4d fa f9 56 d6 81 8b df b4 62 31 9b e1 93 f5 81 86
%ymm13   87 97 bd dd cc e5 b4 87 18 0d 1f e3 04 cc a2 35 1d 40 96 cf 46 9d 79 6f 1c ee 90 67 8c 5f cc aa
%ymm14   46 9f 3d bc 18 a6 ff 3b da 1a 87 53 01 7a 33 1e 75 67 7c 40 4a 3c aa 7a f6 0d 01 86 f1 13 f6 89
%ymm15   58 a4 97 24 5e f8 e6 a2 e0 40 a2 a5 66 88 1e 13 87 a4 e0 68 2e 79 ec ee 2f b0 44 b4 ba 37 b3 34

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   8a 79 6a 5c b6 4a 5d a4 
00000006 fffffff0   v v v v v v v v   6f 12 4c ca 7b 28 6c 83 
00000006 ffffffe8   v v v v v v v v   41 ca a3 01 27 fe 9a 9f 
00000006 ffffffe0   v v v v v v v v   e0 87 18 3c a7 af 0d 2e 

[ 00000000 0f12ee88 - 00000000 0f12ee60 ]
[ 1 valid rows shown ]

00000000 0f12ee70   . . . . v v v v   00 00 00 00 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (39)                                               Lowest Known Correct Cost (48)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32          movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x4   1      OPC=nop                   movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl %edi, %edi           #  4     0x5   2      OPC=movl_r32_r32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl (%r15,%rdi,1), %ecx  #  5     0x7   4      OPC=movl_r32_m32          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  addb %ah, %cl             #  6     0xb   2      OPC=addb_r8_rh            testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xd   1      OPC=nop                   je .L_142ce0              #  7     0xf   2      OPC=je_label            
  movq %rdi, %rdx           #  8     0xe   3      OPC=movq_r64_r64          nop                       #  8     0x11  1      OPC=nop                 
  je .L_142ce0              #  9     0x11  2      OPC=je_label              nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x13  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32         movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label             testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  sarl $0x2, %eax           #  29    0x2f  3      OPC=sarl_r32_imm8         subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x32  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x33  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x34  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x35  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x38  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x39  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3a  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3b  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3e  1      OPC=nop                   nop                       #  42    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x3f  0      OPC=<label>             .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  43    0x3f  2      OPC=popq_r64_1            popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  44    0x41  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  45    0x45  3      OPC=addq_r64_r64          addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  46    0x48  3      OPC=jmpq_r64              jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (39)                                               Lowest Known Correct Cost (39)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32          nop                       #  1     0     1      OPC=nop                 
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32        
  nop                       #  3     0x4   1      OPC=nop                   nop                       #  3     0x3   1      OPC=nop                 
  movl %edi, %edi           #  4     0x5   2      OPC=movl_r32_r32          movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  5     0x7   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32        
  addb %ah, %cl             #  6     0xb   2      OPC=addb_r8_rh            addb %ah, %cl             #  6     0xa   2      OPC=addb_r8_rh          
  nop                       #  7     0xd   1      OPC=nop                   nop                       #  7     0xc   1      OPC=nop                 
  movq %rdi, %rdx           #  8     0xe   3      OPC=movq_r64_r64          movq %rdi, %rdx           #  8     0xd   3      OPC=movq_r64_r64        
  je .L_142ce0              #  9     0x11  2      OPC=je_label              nop                       #  9     0x10  1      OPC=nop                 
  nop                       #  10    0x13  1      OPC=nop                   je .L_142ce0              #  10    0x11  2      OPC=je_label            
  nop                       #  11    0x14  1      OPC=nop                   nop                       #  11    0x13  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                   nop                       #  12    0x14  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                   nop                       #  13    0x15  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                   nop                       #  14    0x16  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                   nop                       #  15    0x17  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                   nop                       #  16    0x18  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                   nop                       #  17    0x19  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                   nop                       #  18    0x1a  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                   nop                       #  19    0x1b  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                   nop                       #  20    0x1c  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                   nop                       #  21    0x1d  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                   nop                       #  22    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>               nop                       #  23    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32          addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8       
  testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32         movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32        
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label             testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32       
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32          jne .L_142cc0             #  27    0x29  2      OPC=jne_label           
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32          movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32        
  sarl $0x2, %eax           #  29    0x2f  3      OPC=sarl_r32_imm8         subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32        
  nop                       #  30    0x32  1      OPC=nop                   sarl $0x2, %eax           #  30    0x2f  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x33  1      OPC=nop                   nop                       #  31    0x32  1      OPC=nop                 
  nop                       #  32    0x34  1      OPC=nop                   nop                       #  32    0x33  1      OPC=nop                 
  nop                       #  33    0x35  1      OPC=nop                   nop                       #  33    0x34  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                   nop                       #  34    0x35  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                   nop                       #  35    0x36  1      OPC=nop                 
  nop                       #  36    0x38  1      OPC=nop                   nop                       #  36    0x37  1      OPC=nop                 
  nop                       #  37    0x39  1      OPC=nop                   nop                       #  37    0x38  1      OPC=nop                 
  nop                       #  38    0x3a  1      OPC=nop                   nop                       #  38    0x39  1      OPC=nop                 
  nop                       #  39    0x3b  1      OPC=nop                   nop                       #  39    0x3a  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                   nop                       #  40    0x3b  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                   nop                       #  41    0x3c  1      OPC=nop                 
  nop                       #  42    0x3e  1      OPC=nop                   nop                       #  42    0x3d  1      OPC=nop                 
.L_142ce0:                  #        0x3f  0      OPC=<label>               nop                       #  43    0x3e  1      OPC=nop                 
  popq %r11                 #  43    0x3f  2      OPC=popq_r64_1            nop                       #  44    0x3f  1      OPC=nop                 
  andl $0xe0, %r11d         #  44    0x41  4      OPC=andl_r32_imm8       .L_142ce0:                  #        0x40  0      OPC=<label>             
  addq %r15, %r11           #  45    0x45  3      OPC=addq_r64_r64          popq %r11                 #  45    0x40  2      OPC=popq_r64_1          
  jmpq %r11                 #  46    0x48  3      OPC=jmpq_r64              andl $0xe0, %r11d         #  46    0x42  4      OPC=andl_r32_imm8       
                                                                            addq %r15, %r11           #  47    0x46  3      OPC=addq_r64_r64        
.size wcslen, .-wcslen                                                      jmpq %r11                 #  48    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (38)                                               Lowest Known Correct Cost (38)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   nop                       #  1     0     1      OPC=nop                 
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32        
  nop                       #  3     0x3   1      OPC=nop                   nop                       #  3     0x3   1      OPC=nop                 
  movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32          movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32        
  addb %ah, %cl             #  6     0xa   2      OPC=addb_r8_rh            addb %ah, %cl             #  6     0xa   2      OPC=addb_r8_rh          
  nop                       #  7     0xc   1      OPC=nop                   nop                       #  7     0xc   1      OPC=nop                 
  movq %rdi, %rdx           #  8     0xd   3      OPC=movq_r64_r64          movq %rdi, %rdx           #  8     0xd   3      OPC=movq_r64_r64        
  nop                       #  9     0x10  1      OPC=nop                   nop                       #  9     0x10  1      OPC=nop                 
  nop                       #  10    0x11  1      OPC=nop                   nop                       #  10    0x11  1      OPC=nop                 
  je .L_142ce0              #  11    0x12  2      OPC=je_label              je .L_142ce0              #  11    0x12  2      OPC=je_label            
  nop                       #  12    0x14  1      OPC=nop                   nop                       #  12    0x14  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                   nop                       #  13    0x15  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                   nop                       #  14    0x16  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                   nop                       #  15    0x17  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                   nop                       #  16    0x18  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                   nop                       #  17    0x19  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                   nop                       #  18    0x1a  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                   nop                       #  19    0x1b  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                   nop                       #  20    0x1c  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                   nop                       #  21    0x1d  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                   nop                       #  22    0x1e  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                   nop                       #  23    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32          movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32        
  testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32         testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label             jne .L_142cc0             #  27    0x29  2      OPC=jne_label           
  movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32          movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32          subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32        
  sarl $0x2, %eax           #  30    0x2f  3      OPC=sarl_r32_imm8         sarl $0x2, %eax           #  30    0x2f  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x32  1      OPC=nop                   nop                       #  31    0x32  1      OPC=nop                 
  nop                       #  32    0x33  1      OPC=nop                   nop                       #  32    0x33  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                   nop                       #  33    0x34  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                   nop                       #  34    0x35  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                   nop                       #  35    0x36  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                   nop                       #  36    0x37  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                   nop                       #  37    0x38  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                   nop                       #  38    0x39  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                   nop                       #  39    0x3a  1      OPC=nop                 
  nop                       #  40    0x3b  1      OPC=nop                   nop                       #  40    0x3b  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                   nop                       #  41    0x3c  1      OPC=nop                 
  nop                       #  42    0x3d  1      OPC=nop                   nop                       #  42    0x3d  1      OPC=nop                 
  nop                       #  43    0x3e  1      OPC=nop                   nop                       #  43    0x3e  1      OPC=nop                 
  nop                       #  44    0x3f  1      OPC=nop                   nop                       #  44    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>             .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  45    0x40  2      OPC=popq_r64_1            popq %r11                 #  45    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  46    0x42  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  46    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  47    0x46  3      OPC=addq_r64_r64          addq %r15, %r11           #  47    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  48    0x49  3      OPC=jmpq_r64              jmpq %r11                 #  48    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  106.097s
Iterations/s:                  942.534

Starting cost:                 48
Lowest cost:                   38
Lowest correct cost:           38

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.228%       7.926%        7.746%       
Operand         8.24%        4.831%        2.176%       
Local Swap      8.319%       4.066%        3.349%       
Global Swap     8.219%       7.613%        7.013%       
Global Copy     8.515%       8.142%        8.142%       
ReplaceNop      8.452%       8.158%        7.866%       
Rotate          8.409%       7.888%        6.425%       
Delete          8.315%       7.989%        7.079%       
OpcodeWidth     8.252%       7.751%        7.573%       
Add Nops        8.454%       8.454%        7.038%       
Instruction     8.326%       4.934%        0.658%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.271%       1.473%        0.012%       
                                                        
Total           100%         79.225%       65.077%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  248.006s
Iterations/s:                  806.431

Starting cost:                 48
Lowest cost:                   38
Lowest correct cost:           38

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3075%      8.0735%       7.944%       
Operand         8.2505%      4.843%        2.25%        
Local Swap      8.3275%      4.0565%       3.2865%      
Global Swap     8.308%       7.822%        7.3715%      
Global Copy     8.4525%      8.15%         8.15%        
ReplaceNop      8.429%       8.1965%       7.976%       
Rotate          8.322%       7.9325%       6.6565%      
Delete          8.409%       8.16%         7.316%       
OpcodeWidth     8.275%       7.8845%       7.743%       
Add Nops        8.3875%      8.3875%       7.158%       
Instruction     8.294%       4.799%        0.634%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.2375%      1.546%        0.009%       
                                                        
Total           100%         79.851%       66.4945%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  499.793s
Iterations/s:                  600.249

Starting cost:                 48
Lowest cost:                   38
Lowest correct cost:           38

Move Type       Proposed     Succeeded     Accepted        
                                                           
Opcode          8.335%       8.13867%      8.02067%        
Operand         8.28%        4.795%        2.311%          
Local Swap      8.32533%     4.13867%      3.389%          
Global Swap     8.33533%     7.90467%      7.49567%        
Global Copy     8.39733%     8.125%        8.125%          
ReplaceNop      8.33967%     8.13367%      7.94167%        
Rotate          8.31433%     7.966%        6.72267%        
Delete          8.40333%     8.19167%      7.339%          
OpcodeWidth     8.29967%     7.942%        7.81%           
Add Nops        8.317%       8.317%        7.13233%        
Instruction     8.35033%     4.88267%      0.654333%       
2xWeighted      0%           0%            0%              
Memory+Swap     8.30267%     1.56267%      0.00666667%     
                                                           
Total           100%         80.0977%      66.948%         

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  846.812s
Iterations/s:                  472.36

Starting cost:                 48
Lowest cost:                   38
Lowest correct cost:           38

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.37325%     8.2035%       8.0985%      
Operand         8.30525%     4.91175%      2.48725%     
Local Swap      8.335%       4.25075%      3.5125%      
Global Swap     8.3255%      7.94075%      7.5565%      
Global Copy     8.386%       8.14125%      8.14125%     
ReplaceNop      8.31625%     8.1345%       7.9655%      
Rotate          8.31925%     8.002%        6.758%       
Delete          8.4015%      8.21725%      7.32825%     
OpcodeWidth     8.269%       7.938%        7.8185%      
Add Nops        8.3195%      8.3195%       7.115%       
Instruction     8.356%       4.926%        0.6625%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.2935%      1.5575%       0.005%       
                                                        
Total           100%         80.5427%      67.4488%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  1081.86s
Iterations/s:                  462.168

Starting cost:                 48
Lowest cost:                   38
Lowest correct cost:           38

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3804%      8.2322%       8.1332%      
Operand         8.2794%      5.062%        2.6716%      
Local Swap      8.3186%      4.3034%       3.5468%      
Global Swap     8.3262%      7.9716%       7.6022%      
Global Copy     8.3668%      8.146%        8.146%       
ReplaceNop      8.3318%      8.1658%       8.0136%      
Rotate          8.329%       8.038%        6.8136%      
Delete          8.4274%      8.2614%       7.3374%      
OpcodeWidth     8.2694%      7.9586%       7.8444%      
Add Nops        8.3002%      8.3002%       7.0846%      
Instruction     8.361%       4.944%        0.7022%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3098%      1.6158%       0.004%       
                                                        
Total           100%         80.999%       67.8996%     

********************************************************************************

TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
nop 
xorl %eax, %eax
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
addb %ah, %cl
nop 
movq %rdi, %rdx
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 2
SAME MAP
     0 1 
------------------
0  |   1 
1  |     

NEXT MAP
     0 1 
------------------
0  |   0 
1  |     

TOTAL CELLS: 1
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
ALIASING CASES: 1
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
nop 
xorl %eax, %eax
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
addb %ah, %cl
nop 
movq %rdi, %rdx
nop 
nop 
nop 
shrb $0x1, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   1 0 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
nop 
xorl %eax, %eax
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
addb %ah, %cl
nop 
movq %rdi, %rdx
nop 
nop 
nop 
shrb $0x1, %ch
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   1 0 0 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
Access 3 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
nop 
xorl %eax, %eax
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
addb %ah, %cl
nop 
movq %rdi, %rdx
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   0 1 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     00 00 00 00 00 00 00 00
%rcx     00 00 00 00 00 00 00 00
%rdx     00 00 00 00 00 00 00 00
%rbx     00 00 00 00 00 00 00 00
%rsp     00 00 00 00 00 00 00 00
%rbp     00 00 00 00 00 00 00 00
%rsi     00 00 00 00 00 00 00 00
%rdi     00 00 00 00 ff ff ff ff
%r8      00 00 00 00 00 00 00 00
%r9      00 00 00 00 00 00 00 00
%r10     00 00 00 00 00 00 00 00
%r11     00 00 00 00 00 00 00 00
%r12     00 00 00 00 00 00 00 00
%r13     00 00 00 00 00 00 00 00
%r14     00 00 00 00 00 00 00 00
%r15     7f ff ff ff ff ff ff ed

%ymm0    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm1    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm2    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm3    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm4    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm5    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm6    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm7    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm8    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm9    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm10   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm11   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm12   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm13   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm14   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm15   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 80000000 fffffff0 - 80000000 ffffffe0 ]
[ 1 valid rows shown ]

80000000 ffffffe8   v v v v . . . .   40 00 00 00 00 00 00 00 

[ 7fffffff fffffff8 - 7fffffff ffffffe0 ]
[ 1 valid rows shown ]

7fffffff fffffff0   . . . . v v v v   00 00 00 00 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (36)                                               Lowest Known Correct Cost (44)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x1   1      OPC=nop                   xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0xa   1      OPC=nop                   testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  testl %ecx, %ecx          #  7     0xb   2      OPC=testl_r32_r32         je .L_142ce0              #  7     0xf   2      OPC=je_label            
  je .L_142ce0              #  8     0xd   2      OPC=je_label              nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0xf   1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x10  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x11  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x12  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  movq %rdi, %rdx           #  13    0x13  3      OPC=movq_r64_r64          nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                 .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x20  0      OPC=<label>               addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8         movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32          movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32         testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label             jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2d  1      OPC=nop                   subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32          sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  sarl $0x2, %eax           #  31    0x30  3      OPC=sarl_r32_imm8         nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x33  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nopl %eax                 #  36    0x37  3      OPC=nopl_r32              nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x3a  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3b  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3c  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3d  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3e  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
.L_142ce0:                  #        0x3f  0      OPC=<label>               nop                       #  42    0x3f  1      OPC=nop                 
  popq %r11                 #  42    0x3f  2      OPC=popq_r64_1          .L_142ce0:                  #        0x40  0      OPC=<label>             
  andl $0xe0, %r11d         #  43    0x41  4      OPC=andl_r32_imm8         popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  addq %r15, %r11           #  44    0x45  3      OPC=addq_r64_r64          andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  jmpq %r11                 #  45    0x48  3      OPC=jmpq_r64              addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
                                                                            jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
.size wcslen, .-wcslen                                                                                                                              
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (35)                                               Lowest Known Correct Cost (35)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   nop                       #  1     0     1      OPC=nop                 
  nop                       #  2     0x1   1      OPC=nop                   nop                       #  2     0x1   1      OPC=nop                 
  xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32          movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32        
  nop                       #  6     0xa   1      OPC=nop                   nop                       #  6     0xa   1      OPC=nop                 
  testl %ecx, %ecx          #  7     0xb   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  7     0xb   2      OPC=testl_r32_r32       
  je .L_142ce0              #  8     0xd   2      OPC=je_label              je .L_142ce0              #  8     0xd   2      OPC=je_label            
  nop                       #  9     0xf   1      OPC=nop                   nop                       #  9     0xf   1      OPC=nop                 
  nop                       #  10    0x10  1      OPC=nop                   nop                       #  10    0x10  1      OPC=nop                 
  nop                       #  11    0x11  1      OPC=nop                   nop                       #  11    0x11  1      OPC=nop                 
  nop                       #  12    0x12  1      OPC=nop                   nop                       #  12    0x12  1      OPC=nop                 
  movq %rdi, %rdx           #  13    0x13  3      OPC=movq_r64_r64          movq %rdi, %rdx           #  13    0x13  3      OPC=movq_r64_r64        
  nop                       #  14    0x16  1      OPC=nop                   nop                       #  14    0x16  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                   nop                       #  15    0x17  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                   nop                       #  16    0x18  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                   nop                       #  17    0x19  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                   nop                       #  18    0x1a  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                   nop                       #  19    0x1b  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                   nop                       #  20    0x1c  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                   nop                       #  21    0x1d  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                   nop                       #  22    0x1e  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                   nop                       #  23    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32          movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32        
  testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32         testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label             jne .L_142cc0             #  27    0x29  2      OPC=jne_label           
  movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32          movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32        
  nop                       #  29    0x2d  1      OPC=nop                   nop                       #  29    0x2d  1      OPC=nop                 
  subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32          subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32        
  sarl $0x2, %eax           #  31    0x30  3      OPC=sarl_r32_imm8         sarl $0x2, %eax           #  31    0x30  3      OPC=sarl_r32_imm8       
  nop                       #  32    0x33  1      OPC=nop                   nop                       #  32    0x33  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                   nop                       #  33    0x34  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                   nop                       #  34    0x35  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                   nop                       #  35    0x36  1      OPC=nop                 
  nopl %eax                 #  36    0x37  3      OPC=nopl_r32              nopl %eax                 #  36    0x37  3      OPC=nopl_r32            
  nop                       #  37    0x3a  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3b  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3c  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3d  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3e  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3f  1      OPC=nop                   nop                       #  42    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>             .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  43    0x40  2      OPC=popq_r64_1            popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64          addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64              jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (34)                                                Lowest Known Correct Cost (34)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  movl %edi, %edi           #  2     0x2   2      OPC=movl_r32_r32           movl %edi, %edi           #  2     0x2   2      OPC=movl_r32_r32         
  movl (%r15,%rdi,1), %ecx  #  3     0x4   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  3     0x4   4      OPC=movl_r32_m32         
  nop                       #  4     0x8   1      OPC=nop                    nop                       #  4     0x8   1      OPC=nop                  
  testl %ecx, %ecx          #  5     0x9   2      OPC=testl_r32_r32          testl %ecx, %ecx          #  5     0x9   2      OPC=testl_r32_r32        
  nop                       #  6     0xb   1      OPC=nop                    nop                       #  6     0xb   1      OPC=nop                  
  nop                       #  7     0xc   1      OPC=nop                    nop                       #  7     0xc   1      OPC=nop                  
  je .L_142ce0              #  8     0xd   2      OPC=je_label               je .L_142ce0              #  8     0xd   2      OPC=je_label             
  nop                       #  9     0xf   1      OPC=nop                    nop                       #  9     0xf   1      OPC=nop                  
  nop                       #  10    0x10  1      OPC=nop                    nop                       #  10    0x10  1      OPC=nop                  
  nop                       #  11    0x11  1      OPC=nop                    nop                       #  11    0x11  1      OPC=nop                  
  nop                       #  12    0x12  1      OPC=nop                    nop                       #  12    0x12  1      OPC=nop                  
  nop                       #  13    0x13  1      OPC=nop                    nop                       #  13    0x13  1      OPC=nop                  
  nop                       #  14    0x14  1      OPC=nop                    nop                       #  14    0x14  1      OPC=nop                  
  movq %rdi, %rdx           #  15    0x15  3      OPC=movq_r64_r64           movq %rdi, %rdx           #  15    0x15  3      OPC=movq_r64_r64         
  nopl %eax                 #  16    0x18  3      OPC=nopl_r32               nopl %eax                 #  16    0x18  3      OPC=nopl_r32             
  nop                       #  17    0x1b  1      OPC=nop                    nop                       #  17    0x1b  1      OPC=nop                  
  nop                       #  18    0x1c  1      OPC=nop                    nop                       #  18    0x1c  1      OPC=nop                  
  nop                       #  19    0x1d  1      OPC=nop                    nop                       #  19    0x1d  1      OPC=nop                  
  nop                       #  20    0x1e  1      OPC=nop                    nop                       #  20    0x1e  1      OPC=nop                  
  nop                       #  21    0x1f  1      OPC=nop                    nop                       #  21    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32         
  testl %edi, %eax          #  24    0x27  2      OPC=testl_r32_r32          testl %edi, %eax          #  24    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  25    0x29  2      OPC=jne_label              jne .L_142cc0             #  25    0x29  2      OPC=jne_label            
  movl %edx, %eax           #  26    0x2b  2      OPC=movl_r32_r32           movl %edx, %eax           #  26    0x2b  2      OPC=movl_r32_r32         
  subl %edi, %eax           #  27    0x2d  2      OPC=subl_r32_r32_1         subl %edi, %eax           #  27    0x2d  2      OPC=subl_r32_r32_1       
  nop                       #  28    0x2f  1      OPC=nop                    nop                       #  28    0x2f  1      OPC=nop                  
  nop                       #  29    0x30  1      OPC=nop                    nop                       #  29    0x30  1      OPC=nop                  
  nop                       #  30    0x31  1      OPC=nop                    nop                       #  30    0x31  1      OPC=nop                  
  nop                       #  31    0x32  1      OPC=nop                    nop                       #  31    0x32  1      OPC=nop                  
  nop                       #  32    0x33  1      OPC=nop                    nop                       #  32    0x33  1      OPC=nop                  
  nop                       #  33    0x34  1      OPC=nop                    nop                       #  33    0x34  1      OPC=nop                  
  nop                       #  34    0x35  1      OPC=nop                    nop                       #  34    0x35  1      OPC=nop                  
  nop                       #  35    0x36  1      OPC=nop                    nop                       #  35    0x36  1      OPC=nop                  
  nop                       #  36    0x37  1      OPC=nop                    nop                       #  36    0x37  1      OPC=nop                  
  nop                       #  37    0x38  1      OPC=nop                    nop                       #  37    0x38  1      OPC=nop                  
  sarl $0x2, %eax           #  38    0x39  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  38    0x39  3      OPC=sarl_r32_imm8        
  movsbw %al, %ax           #  39    0x3c  4      OPC=movsbw_r16_r8          movsbw %al, %ax           #  39    0x3c  4      OPC=movsbw_r16_r8        
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  popq %r11                 #  40    0x40  2      OPC=popq_r64_1             popq %r11                 #  40    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  41    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  41    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  42    0x46  3      OPC=addq_r64_r64           addq %r15, %r11           #  42    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                 #  43    0x49  3      OPC=jmpq_r64               jmpq %r11                 #  43    0x49  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  106.697s
Iterations/s:                  937.236

Starting cost:                 44
Lowest cost:                   34
Lowest correct cost:           34

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.32%        7.956%        7.771%       
Operand         8.307%       4.461%        1.849%       
Local Swap      8.3%         4.178%        3.395%       
Global Swap     8.486%       7.829%        7.23%        
Global Copy     8.33%        7.927%        7.927%       
ReplaceNop      8.236%       7.92%         7.648%       
Rotate          8.26%        7.705%        6.064%       
Delete          8.356%       8.026%        7.038%       
OpcodeWidth     8.372%       7.833%        7.661%       
Add Nops        8.317%       8.317%        6.981%       
Instruction     8.417%       5.023%        0.589%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.299%       1.594%        0.009%       
                                                        
Total           100%         78.769%       64.162%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  284.562s
Iterations/s:                  702.835

Starting cost:                 44
Lowest cost:                   34
Lowest correct cost:           34

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3215%      8.085%        7.9545%      
Operand         8.3395%      4.5865%       2.1355%      
Local Swap      8.3235%      4.1605%       3.3765%      
Global Swap     8.3805%      7.9155%       7.477%       
Global Copy     8.348%       8.0575%       8.0575%      
ReplaceNop      8.239%       8.018%        7.8235%      
Rotate          8.3745%      7.991%        6.6395%      
Delete          8.3295%      8.1%          7.17%        
OpcodeWidth     8.34%        7.9585%       7.837%       
Add Nops        8.3535%      8.3535%       7.1365%      
Instruction     8.3935%      4.9555%       0.608%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.257%       1.617%        0.0045%      
                                                        
Total           100%         79.7985%      66.22%       

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  615.647s
Iterations/s:                  487.293

Starting cost:                 44
Lowest cost:                   34
Lowest correct cost:           34

Move Type       Proposed     Succeeded     Accepted      
                                                         
Opcode          8.32533%     8.13733%      8.02867%      
Operand         8.317%       4.79367%      2.33567%      
Local Swap      8.35%        4.20267%      3.408%        
Global Swap     8.317%       7.95133%      7.59767%      
Global Copy     8.33%        8.10467%      8.10467%      
ReplaceNop      8.302%       8.12367%      7.973%        
Rotate          8.366%       8.062%        6.90367%      
Delete          8.29767%     8.11733%      7.23833%      
OpcodeWidth     8.34367%     8.03933%      7.93633%      
Add Nops        8.377%       8.377%        7.238%        
Instruction     8.4%         4.97133%      0.635667%     
2xWeighted      0%           0%            0%            
Memory+Swap     8.27433%     1.61733%      0.003%        
                                                         
Total           100%         80.4977%      67.4027%      

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  933.303s
Iterations/s:                  428.585

Starting cost:                 44
Lowest cost:                   34
Lowest correct cost:           34

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3055%      8.1505%       8.05675%     
Operand         8.31625%     5.031%        2.556%       
Local Swap      8.335%       4.253%        3.429%       
Global Swap     8.36175%     8.048%        7.7365%      
Global Copy     8.36775%     8.17525%      8.17525%     
ReplaceNop      8.29825%     8.151%        8.02575%     
Rotate          8.35025%     8.097%        6.98025%     
Delete          8.29675%     8.14775%      7.22%        
OpcodeWidth     8.3475%      8.0835%       7.99025%     
Add Nops        8.352%       8.352%        7.17125%     
Instruction     8.36475%     4.9525%       0.641%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.30425%     1.62825%      0.00225%     
                                                        
Total           100%         81.0697%      67.9843%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  1344.93s
Iterations/s:                  371.767

Starting cost:                 44
Lowest cost:                   34
Lowest correct cost:           34

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3104%      8.1768%       8.0942%      
Operand         8.3062%      5.1584%       2.7224%      
Local Swap      8.3086%      4.2808%       3.4498%      
Global Swap     8.3662%      8.0866%       7.7972%      
Global Copy     8.3832%      8.2146%       8.2146%      
ReplaceNop      8.3026%      8.1724%       8.061%       
Rotate          8.3394%      8.119%        6.9648%      
Delete          8.3408%      8.2088%       7.1622%      
OpcodeWidth     8.341%       8.0984%       8.0072%      
Add Nops        8.3766%      8.3766%       7.0908%      
Instruction     8.3438%      4.9824%       0.6638%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.2812%      1.634%        0.0024%      
                                                        
Total           100%         81.5088%      68.2304%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     6a 55 21 1e 7e 54 54 ea
%rcx     94 b5 ac b4 71 32 cf b6
%rdx     21 52 ee d1 71 03 1b 9c
%rbx     fb f3 58 2a c0 24 b5 2a
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 3e eb ae d3
%rdi     00 00 00 00 3e eb b4 77
%r8      15 d8 9c 3c 51 3c 7a ab
%r9      be fb a7 2b fb ba 44 4b
%r10     8a 92 71 fc 45 32 05 1a
%r11     15 61 53 e0 a2 c2 af fc
%r12     3f 1a 77 10 9b c8 ce 07
%r13     53 3c 1c cd bf cf 75 d8
%r14     16 f7 62 46 b2 54 6a 59
%r15     00 00 00 00 0a 19 c1 50

%ymm0    80 14 73 f6 3a 89 46 ce 75 89 e9 a7 48 52 89 8e fc b0 99 fd ae 10 2e de 1b bf a1 32 77 8b 38 36
%ymm1    fc 84 02 08 ce 28 63 3b 22 f0 b2 c7 be e0 e7 48 3b 82 16 14 b3 7d e4 a3 b5 02 74 67 b5 30 ab b1
%ymm2    e5 fc a9 ad 34 86 6e 1b 81 26 1e 24 e5 f0 0f 05 46 8e 2c 21 57 67 e1 36 9a 22 c8 d2 9e 1b 12 e3
%ymm3    29 d1 96 64 35 30 d9 a0 66 9b f4 35 3c 6e 04 0e de 82 17 04 0d be 93 60 74 14 d0 d2 95 35 58 c0
%ymm4    b5 05 37 91 e0 35 ce cb d4 b8 60 04 27 22 3e 51 2c 4d ed f6 f2 e9 b9 f5 e4 b9 c2 9d 18 96 16 6f
%ymm5    c8 78 d9 c4 b0 e1 21 41 74 12 93 b0 34 13 72 74 ad 4c 0c 72 1e be 7a db 58 a5 e5 25 a1 d2 f0 17
%ymm6    32 6c f5 01 a9 70 8b 76 a9 ae 1d ba 11 c2 f5 b2 9d 56 05 b5 ff a4 1d f7 ee fa 16 df b8 ca 1c 87
%ymm7    27 3d 39 ec 97 b5 92 da bf b8 8d f9 f2 f3 ab db 91 c5 bf 87 fb 3a 3a 7f 45 dd 09 55 45 e4 93 59
%ymm8    d0 47 47 11 32 10 77 56 44 16 ff 48 b5 45 29 a3 14 c8 be 2a 9d 32 f8 3b ab e9 d6 12 bb 53 19 8d
%ymm9    4b f8 88 e7 d7 dd 24 d2 22 2a a7 b8 4f 42 f1 cb d3 e9 a1 79 56 1b 99 b3 fe d2 eb f0 7a 41 be 5c
%ymm10   f9 f1 e1 57 48 7b ba 76 50 84 4a db 97 f3 06 cb 24 42 2d 65 13 8f a5 a8 53 f7 69 c7 04 b4 53 6a
%ymm11   fb 80 d9 df 3b be b3 85 08 e0 47 aa 41 84 b2 89 48 18 42 a9 25 d0 25 78 76 b7 2e 2f ff 6b 2a 83
%ymm12   5a d3 37 0a 80 55 4a 4a 62 a8 ec f1 8d 70 49 ec 2e bc eb 8f 28 93 31 09 32 9d d4 1a 49 d1 f0 d4
%ymm13   83 07 36 96 8d 61 92 61 5c 3b 65 6d f2 c9 6e e5 08 0d 27 83 b0 72 43 78 f1 42 19 3a 62 de b6 49
%ymm14   bf 27 a5 a6 24 54 3d d9 7f 0d 74 20 88 f4 c5 0d a0 72 1b ff 4b d0 7f f5 f8 25 29 d7 b1 f3 cb 31
%ymm15   df c7 9a 43 ec d8 da 13 74 34 fa d8 23 dd 03 7e 1c c4 de 24 6a 3c 82 a8 54 d7 d1 54 9b 12 5b 78

%cf      1 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   43 50 d1 6b 6c 35 87 a6 
00000006 fffffff0   v v v v v v v v   82 90 77 a4 ef 0a fc 8b 
00000006 ffffffe8   v v v v v v v v   69 6c 33 ec 49 a0 a1 bc 
00000006 ffffffe0   v v v v v v v v   f5 53 3d dc af 06 f4 f4 

[ 00000000 49057998 - 00000000 49056980 ]
[ 71 valid rows shown ]

00000000 490577f0   . . . . . v v v   00 00 00 00 00 00 00 00 
00000000 490577e8   v v v v v v v v   00 9d a0 21 b0 b9 38 c8 
00000000 490577e0   v v v v v v v v   8a ad c0 fb 7d f6 f0 08 
00000000 490577d8   v v v v v v v v   f0 11 98 7e 97 4f 38 66 
00000000 490577d0   v v v v v v v v   16 cf a3 2a ee 93 8b 95 
00000000 490577c8   v v v v v v v v   ed e7 e9 e7 2f 8a 08 8f 
00000000 490577c0   v v v v v v v v   30 ca 0a 74 05 df 70 72 
00000000 490577b8   v v v v v v v v   7a 48 46 31 39 69 c2 ec 
00000000 490577b0   v v v v v v v v   e1 10 9e 59 a5 a4 ab 06 
00000000 490577a8   v v v v v v v v   b7 5f df a0 5a 3e 84 bc 
00000000 490577a0   v v v v v v v v   c4 2b 04 93 65 28 2c 49 
00000000 49057798   v v v v v v v v   0f dd 6e 4d 88 b2 4d 87 
00000000 49057790   v v v v v v v v   6b fa ae 9f ed 4c 27 17 
00000000 49057788   v v v v v v v v   05 a0 1c 9e 7a 59 b8 31 
00000000 49057780   v v v v v v v v   c5 dc 67 1c 19 4f da c1 
00000000 49057778   v v v v v v v v   55 bc 00 00 47 53 d9 cb 
00000000 49057770   v v v v v v v v   0d 61 78 d6 47 86 fb 67 
00000000 49057768   v v v v v v v v   26 c2 e6 49 94 dc c9 a9 
00000000 49057760   v v v v v v v v   c3 18 42 57 fa 1e c1 54 
00000000 49057758   v v v v v v v v   75 ac 27 7b 46 78 53 37 
00000000 49057750   v v v v v v v v   1a f2 db e0 60 38 81 dd 
00000000 49057748   v v v v v v v v   2e 0a 7f eb 19 b1 67 6b 
00000000 49057740   v v v v v v v v   1e 24 96 a5 a8 15 2d fa 
00000000 49057738   v v v v v v v v   66 af 28 0f 5e 61 5c 39 
00000000 49057730   v v v v v v v v   92 a2 5f 82 0a 77 5e 43 
00000000 49057728   v v v v v v v v   f1 ce 84 ad 92 43 d5 79 
00000000 49057720   v v v v v v v v   7b 81 78 ae af 7e d1 56 
00000000 49057718   v v v v v v v v   51 c7 b3 24 cf b9 da 0f 
00000000 49057710   v v v v v v v v   98 e8 24 c6 86 8f bf 43 
00000000 49057708   v v v v v v v v   3c 41 d8 19 c7 54 01 cd 
00000000 49057700   v v v v v v v v   d2 f9 dd 58 2d 0a a3 2c 
00000000 490576f8   v v v v v v v v   f8 fa 4a bf 21 f1 eb d2 
00000000 490576f0   v v v v v v v v   62 95 07 42 53 7e 6b 22 
00000000 490576e8   v v v v v v v v   79 83 18 fa 82 07 f0 79 
00000000 490576e0   v v v v v v v v   cc d3 b5 01 11 a9 e2 39 
00000000 490576d8   v v v v v v v v   d9 59 d4 4f 8f 56 cb 20 
00000000 490576d0   v v v v v v v v   41 88 d7 31 05 e8 0a 7f 
00000000 490576c8   v v v v v v v v   01 11 0a 09 3b 1d c4 cb 
00000000 490576c0   v v v v v v v v   c1 0c 1f d8 d0 89 64 8a 
00000000 490576b8   v v v v v v v v   ca 7e 84 6f 14 42 49 10 
00000000 490576b0   v v v v v v v v   83 ef 27 86 e7 f9 74 f8 
00000000 490576a8   v v v v v v v v   d5 ed 45 70 5b b7 ac e9 
00000000 490576a0   v v v v v v v v   3c 96 74 46 bf e6 06 5b 
00000000 49057698   v v v v v v v v   6a 41 26 04 bf 5a e9 fd 
00000000 49057690   v v v v v v v v   08 2e 11 ef 23 87 b3 65 
00000000 49057688   v v v v v v v v   92 8d c4 72 7b 16 75 f6 
00000000 49057680   v v v v v v v v   d7 8e 40 64 7c c4 35 66 
00000000 49057678   v v v v v v v v   82 cc 1a c1 52 bb ec 19 
00000000 49057670   v v v v v v v v   0a 8a 3c be f5 25 a0 1f 
00000000 49057668   v v v v v v v v   12 ae fd 84 3f e7 b6 73 
00000000 49057660   v v v v v v v v   12 7b 2f 16 42 69 4b c1 
00000000 49057658   v v v v v v v v   7a 5f d5 39 b1 61 dd 4c 
00000000 49057650   v v v v v v v v   95 16 1e d5 13 f2 22 8e 
00000000 49057648   v v v v v v v v   6f 16 ce cc d5 3b 44 fc 
00000000 49057640   v v v v v v v v   39 c6 ca 81 ef ec eb 41 
00000000 49057638   v v v v v v v v   ae 74 5c 65 cc c6 2e c0 
00000000 49057630   v v v v v v v v   03 2c b3 85 82 0b c0 a3 
00000000 49057628   v v v v v v v v   41 93 88 d9 01 7e 31 b8 
00000000 49057620   v v v v v v v v   d7 de 95 ae 3e 77 e5 49 
00000000 49057618   v v v v v v v v   a8 95 37 0c c3 02 0c 7e 
00000000 49057610   v v v v v v v v   a9 a8 c5 df ca 2d 1b 68 
00000000 49057608   v v v v v v v v   91 0a a7 49 a7 53 23 29 
00000000 49057600   v v v v v v v v   9f 1e c9 f5 cf 4f 12 9c 
00000000 490575f8   v v v v v v v v   d2 35 ff 44 58 64 b9 ca 
00000000 490575f0   v v v v v v v v   de 98 c3 61 9b 11 c1 48 
00000000 490575e8   v v v v v v v v   63 54 26 7e b4 05 60 aa 
00000000 490575e0   v v v v v v v v   4e 79 e3 33 7d dd 9c 8e 
00000000 490575d8   v v v v v v v v   dc 9b 8b 8e 86 21 07 7c 
00000000 490575d0   v v v v v v v v   fc b2 a0 53 ae 6d 22 e5 
00000000 490575c8   v v v v v v v v   a0 21 1e 0a b6 e6 c6 1b 
00000000 490575c0   v . . . . . . .   fc 00 00 00 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (69)                                               Lowest Known Correct Cost (84)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x1   1      OPC=nop                   xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movq %rdi, %rdx           #  4     0x4   3      OPC=movq_r64_r64          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl (%r15,%rdx,1), %ecx  #  5     0x7   4      OPC=movl_r32_m32          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %edx, %ecx          #  6     0xb   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xd   2      OPC=je_label              je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xf   1      OPC=nop                   nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x10  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x11  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x12  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x13  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x14  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x15  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x16  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x17  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x18  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x19  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1a  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  movl %edi, %edi           #  20    0x1b  2      OPC=movl_r32_r32          nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                 .L_142cc0:                  #        0x20  0      OPC=<label>             
  nop                       #  24    0x20  1      OPC=nop                   addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  nop                       #  25    0x21  1      OPC=nop                   movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
.L_142cc0:                  #        0x22  0      OPC=<label>               movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  addl $0x4, %edx           #  26    0x22  3      OPC=addl_r32_imm8         testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  movl (%r15,%rdx,1), %eax  #  27    0x25  4      OPC=movl_r32_m32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  shll $0x1, %eax           #  28    0x29  2      OPC=shll_r32_one          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  29    0x2b  2      OPC=jne_label             subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  movl %edx, %eax           #  30    0x2d  2      OPC=movl_r32_r32          sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x2f  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x30  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x31  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x32  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x33  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x34  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  subl %edi, %eax           #  37    0x35  2      OPC=subl_r32_r32          nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x37  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x38  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x39  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3a  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3b  1      OPC=nop                   nop                       #  42    0x3f  1      OPC=nop                 
  sarl $0x2, %eax           #  43    0x3c  3      OPC=sarl_r32_imm8       .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  44    0x3f  1      OPC=nop                   popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
.L_142ce0:                  #        0x40  0      OPC=<label>               andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  popq %r11                 #  45    0x40  2      OPC=popq_r64_1            addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  andl $0xe0, %r11d         #  46    0x42  4      OPC=andl_r32_imm8         jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  addq %r15, %r11           #  47    0x46  3      OPC=addq_r64_r64                                                                                  
  jmpq %r11                 #  48    0x49  3      OPC=jmpq_r64            .size wcslen, .-wcslen                                                    
                                                                                                                                                    
.size wcslen, .-wcslen                                                                                                                              
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (68)                                               Lowest Known Correct Cost (84)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x1   1      OPC=nop                   xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movq %rdi, %rdx           #  4     0x4   3      OPC=movq_r64_r64          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl (%r15,%rdx,1), %ecx  #  5     0x7   4      OPC=movl_r32_m32          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %edx, %ecx          #  6     0xb   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xd   2      OPC=je_label              je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xf   1      OPC=nop                   nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x10  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x11  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x12  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x13  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x14  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x15  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x16  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x17  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x18  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x19  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1a  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  movl %edi, %edi           #  20    0x1b  2      OPC=movl_r32_r32          nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                 .L_142cc0:                  #        0x20  0      OPC=<label>             
  nop                       #  24    0x20  1      OPC=nop                   addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  nop                       #  25    0x21  1      OPC=nop                   movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
.L_142cc0:                  #        0x22  0      OPC=<label>               movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  addl $0x4, %edx           #  26    0x22  3      OPC=addl_r32_imm8         testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  movl (%r15,%rdx,1), %eax  #  27    0x25  4      OPC=movl_r32_m32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  shll $0x1, %eax           #  28    0x29  2      OPC=shll_r32_one          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  29    0x2b  2      OPC=jne_label             subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  movl %edx, %eax           #  30    0x2d  2      OPC=movl_r32_r32          sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x2f  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x30  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x31  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x32  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nopl %eax                 #  35    0x33  3      OPC=nopl_r32              nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x36  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  subl %edi, %eax           #  37    0x37  2      OPC=subl_r32_r32          nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3b  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3d  1      OPC=nop                   nop                       #  42    0x3f  1      OPC=nop                 
  sarl $0x2, %eax           #  43    0x3e  3      OPC=sarl_r32_imm8       .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  44    0x41  1      OPC=nop                   popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
.L_142ce0:                  #        0x42  0      OPC=<label>               andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  popq %r11                 #  45    0x42  2      OPC=popq_r64_1            addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  andl $0xe0, %r11d         #  46    0x44  4      OPC=andl_r32_imm8         jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  addq %r15, %r11           #  47    0x48  3      OPC=addq_r64_r64                                                                                  
  jmpq %r11                 #  48    0x4b  3      OPC=jmpq_r64            .size wcslen, .-wcslen                                                    
                                                                                                                                                    
.size wcslen, .-wcslen                                                                                                                              
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (67)                                               Lowest Known Correct Cost (84)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x1   1      OPC=nop                   xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movq %rdi, %rdx           #  4     0x4   3      OPC=movq_r64_r64          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl (%r15,%rdx,1), %ecx  #  5     0x7   4      OPC=movl_r32_m32          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %edx, %ecx          #  6     0xb   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xd   2      OPC=je_label              je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xf   1      OPC=nop                   nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x10  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x11  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x12  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x13  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x14  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x15  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x16  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x17  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x18  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x19  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  movl %edi, %edi           #  19    0x1a  2      OPC=movl_r32_r32          nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                 .L_142cc0:                  #        0x20  0      OPC=<label>             
  nop                       #  24    0x20  1      OPC=nop                   addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
.L_142cc0:                  #        0x21  0      OPC=<label>               movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  addl $0x4, %edx           #  25    0x21  3      OPC=addl_r32_imm8         movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl (%r15,%rdx,1), %eax  #  26    0x24  4      OPC=movl_r32_m32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  shll $0x1, %eax           #  27    0x28  2      OPC=shll_r32_one          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  jne .L_142cc0             #  28    0x2a  2      OPC=jne_label             movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  movl %edx, %eax           #  29    0x2c  2      OPC=movl_r32_r32          subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2e  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x2f  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x30  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x31  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nopl %eax                 #  34    0x32  3      OPC=nopl_r32              nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x35  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  subl %edi, %eax           #  36    0x36  2      OPC=subl_r32_r32          nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3b  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
  sarl $0x2, %eax           #  42    0x3d  3      OPC=sarl_r32_imm8         nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  43    0x40  1      OPC=nop                 .L_142ce0:                  #        0x40  0      OPC=<label>             
.L_142ce0:                  #        0x41  0      OPC=<label>               popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  popq %r11                 #  44    0x41  2      OPC=popq_r64_1            andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  andl $0xe0, %r11d         #  45    0x43  4      OPC=andl_r32_imm8         addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  addq %r15, %r11           #  46    0x47  3      OPC=addq_r64_r64          jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  jmpq %r11                 #  47    0x4a  3      OPC=jmpq_r64                                                                                      
                                                                          .size wcslen, .-wcslen                                                    
.size wcslen, .-wcslen                                                                                                                              
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (66)                                               Lowest Known Correct Cost (84)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movq %rdi, %rdx           #  3     0x3   3      OPC=movq_r64_r64          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  testl %edx, %ecx          #  5     0xa   2      OPC=testl_r32_r32         movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  je .L_142ce0              #  6     0xc   2      OPC=je_label              testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xe   1      OPC=nop                   je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xf   1      OPC=nop                   nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x10  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x11  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x12  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x13  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x14  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x15  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x16  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x17  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x18  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  movl %edi, %edi           #  18    0x19  2      OPC=movl_r32_r32          nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                 .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x20  0      OPC=<label>               addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8         movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32          movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  shll $0x1, %eax           #  26    0x27  2      OPC=shll_r32_one          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label             jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2d  1      OPC=nop                   subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2e  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x2f  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x30  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nopl %eax                 #  33    0x31  3      OPC=nopl_r32              nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x34  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  subl %edi, %eax           #  35    0x35  2      OPC=subl_r32_r32          nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3b  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  sarl $0x2, %eax           #  41    0x3c  3      OPC=sarl_r32_imm8         nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3f  1      OPC=nop                   nop                       #  42    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>             .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  43    0x40  2      OPC=popq_r64_1            popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64          addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64              jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (65)                                               Lowest Known Correct Cost (84)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x1   1      OPC=nop                   xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x2   1      OPC=nop                   movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x3   1      OPC=nop                   movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0x4   1      OPC=nop                   movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0x5   1      OPC=nop                   testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0x6   1      OPC=nop                   je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x7   1      OPC=nop                   nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x8   1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  xorl %eax, %eax           #  10    0x9   2      OPC=xorl_r32_r32          nop                       #  10    0x13  1      OPC=nop                 
  movq %rdi, %rdx           #  11    0xb   3      OPC=movq_r64_r64          nop                       #  11    0x14  1      OPC=nop                 
  movl (%r15,%rdx,1), %ecx  #  12    0xe   4      OPC=movl_r32_m32          nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x12  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  testl %edx, %ecx          #  14    0x13  2      OPC=testl_r32_r32         nop                       #  14    0x17  1      OPC=nop                 
  je .L_142ce0              #  15    0x15  2      OPC=je_label              nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x17  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x18  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x19  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1a  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1b  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1c  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1d  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1e  1      OPC=nop                 .L_142cc0:                  #        0x20  0      OPC=<label>             
  nop                       #  24    0x1f  1      OPC=nop                   addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
.L_142cc0:                  #        0x20  0      OPC=<label>               movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  addl $0x4, %edx           #  25    0x20  3      OPC=addl_r32_imm8         movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl (%r15,%rdx,1), %eax  #  26    0x23  4      OPC=movl_r32_m32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  shlb $0x1, %al            #  27    0x27  2      OPC=shlb_r8_one           jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  jne .L_142cc0             #  28    0x29  2      OPC=jne_label             movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  movl %edx, %eax           #  29    0x2b  2      OPC=movl_r32_r32          subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2d  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x2e  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x2f  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x30  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x31  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x32  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x33  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  subl %edi, %eax           #  37    0x34  2      OPC=subl_r32_r32          nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x36  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x37  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x38  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x39  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3a  1      OPC=nop                   nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  43    0x3b  1      OPC=nop                 .L_142ce0:                  #        0x40  0      OPC=<label>             
  sarl $0x2, %eax           #  44    0x3c  3      OPC=sarl_r32_imm8         popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  nop                       #  45    0x3f  1      OPC=nop                   andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
.L_142ce0:                  #        0x40  0      OPC=<label>               addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  popq %r11                 #  46    0x40  2      OPC=popq_r64_1            jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  andl $0xe0, %r11d         #  47    0x42  4      OPC=andl_r32_imm8                                                                                 
  addq %r15, %r11           #  48    0x46  3      OPC=addq_r64_r64        .size wcslen, .-wcslen                                                    
  jmpq %r11                 #  49    0x49  3      OPC=jmpq_r64                                                                                      
                                                                                                                                                    
.size wcslen, .-wcslen                                                                                                                              
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (65)                                               Lowest Known Correct Cost (66)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                     #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                   #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                   movl %edi, %r9d          #  1     0     3      OPC=movl_r32_r32         
  nop                       #  2     0x1   1      OPC=nop                   movl (%r15,%r9,1), %ecx  #  2     0x3   4      OPC=movl_r32_m32         
  nop                       #  3     0x2   1      OPC=nop                   xorq %rax, %rax          #  3     0x7   3      OPC=xorq_r64_r64         
  nop                       #  4     0x3   1      OPC=nop                   nop                      #  4     0xa   1      OPC=nop                  
  nop                       #  5     0x4   1      OPC=nop                   nop                      #  5     0xb   1      OPC=nop                  
  nop                       #  6     0x5   1      OPC=nop                   nop                      #  6     0xc   1      OPC=nop                  
  nop                       #  7     0x6   1      OPC=nop                   nop                      #  7     0xd   1      OPC=nop                  
  nop                       #  8     0x7   1      OPC=nop                   nop                      #  8     0xe   1      OPC=nop                  
  nop                       #  9     0x8   1      OPC=nop                   salq $0x1, %rcx          #  9     0xf   3      OPC=salq_r64_one         
  xorl %eax, %eax           #  10    0x9   2      OPC=xorl_r32_r32          je .L_142ce0             #  10    0x12  2      OPC=je_label             
  movq %rdi, %rdx           #  11    0xb   3      OPC=movq_r64_r64          nop                      #  11    0x14  1      OPC=nop                  
  movl (%r15,%rdx,1), %ecx  #  12    0xe   4      OPC=movl_r32_m32          nop                      #  12    0x15  1      OPC=nop                  
  nop                       #  13    0x12  1      OPC=nop                   nop                      #  13    0x16  1      OPC=nop                  
  testl %edx, %ecx          #  14    0x13  2      OPC=testl_r32_r32         nop                      #  14    0x17  1      OPC=nop                  
  je .L_142ce0              #  15    0x15  2      OPC=je_label              nop                      #  15    0x18  1      OPC=nop                  
  nop                       #  16    0x17  1      OPC=nop                   nop                      #  16    0x19  1      OPC=nop                  
  nop                       #  17    0x18  1      OPC=nop                   movq %rdi, %rdx          #  17    0x1a  3      OPC=movq_r64_r64_1       
  nop                       #  18    0x19  1      OPC=nop                   nop                      #  18    0x1d  1      OPC=nop                  
  nop                       #  19    0x1a  1      OPC=nop                   nop                      #  19    0x1e  1      OPC=nop                  
  nop                       #  20    0x1b  1      OPC=nop                   nop                      #  20    0x1f  1      OPC=nop                  
  nop                       #  21    0x1c  1      OPC=nop                 .L_142cc0:                 #        0x20  0      OPC=<label>              
  nop                       #  22    0x1d  1      OPC=nop                   addl $0x4, %edx          #  21    0x20  3      OPC=addl_r32_imm8        
  nop                       #  23    0x1e  1      OPC=nop                   movw (%r15,%rdx,1), %ax  #  22    0x23  5      OPC=movw_r16_m16         
  nop                       #  24    0x1f  1      OPC=nop                   salw $0x8, %ax           #  23    0x28  4      OPC=salw_r16_imm8        
.L_142cc0:                  #        0x20  0      OPC=<label>               jne .L_142cc0            #  24    0x2c  2      OPC=jne_label            
  addl $0x4, %edx           #  25    0x20  3      OPC=addl_r32_imm8         nop                      #  25    0x2e  1      OPC=nop                  
  movl (%r15,%rdx,1), %eax  #  26    0x23  4      OPC=movl_r32_m32          subq %r9, %rdx           #  26    0x2f  3      OPC=subq_r64_r64_1       
  shlb $0x1, %al            #  27    0x27  2      OPC=shlb_r8_one           nop                      #  27    0x32  1      OPC=nop                  
  jne .L_142cc0             #  28    0x29  2      OPC=jne_label             nop                      #  28    0x33  1      OPC=nop                  
  movl %edx, %eax           #  29    0x2b  2      OPC=movl_r32_r32          nop                      #  29    0x34  1      OPC=nop                  
  nop                       #  30    0x2d  1      OPC=nop                   nop                      #  30    0x35  1      OPC=nop                  
  nop                       #  31    0x2e  1      OPC=nop                   nop                      #  31    0x36  1      OPC=nop                  
  nop                       #  32    0x2f  1      OPC=nop                   nop                      #  32    0x37  1      OPC=nop                  
  nop                       #  33    0x30  1      OPC=nop                   nop                      #  33    0x38  1      OPC=nop                  
  nop                       #  34    0x31  1      OPC=nop                   xorw %dx, %ax            #  34    0x39  3      OPC=xorw_r16_r16         
  nop                       #  35    0x32  1      OPC=nop                   nop                      #  35    0x3c  1      OPC=nop                  
  nop                       #  36    0x33  1      OPC=nop                   nop                      #  36    0x3d  1      OPC=nop                  
  subl %edi, %eax           #  37    0x34  2      OPC=subl_r32_r32          nop                      #  37    0x3e  1      OPC=nop                  
  nop                       #  38    0x36  1      OPC=nop                   nop                      #  38    0x3f  1      OPC=nop                  
  nop                       #  39    0x37  1      OPC=nop                 .L_142ce0:                 #        0x40  0      OPC=<label>              
  nop                       #  40    0x38  1      OPC=nop                   nop                      #  39    0x40  1      OPC=nop                  
  nop                       #  41    0x39  1      OPC=nop                   nop                      #  40    0x41  1      OPC=nop                  
  nop                       #  42    0x3a  1      OPC=nop                   nop                      #  41    0x42  1      OPC=nop                  
  nop                       #  43    0x3b  1      OPC=nop                   nop                      #  42    0x43  1      OPC=nop                  
  sarl $0x2, %eax           #  44    0x3c  3      OPC=sarl_r32_imm8         nop                      #  43    0x44  1      OPC=nop                  
  nop                       #  45    0x3f  1      OPC=nop                   nop                      #  44    0x45  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>               nop                      #  45    0x46  1      OPC=nop                  
  popq %r11                 #  46    0x40  2      OPC=popq_r64_1            nop                      #  46    0x47  1      OPC=nop                  
  andl $0xe0, %r11d         #  47    0x42  4      OPC=andl_r32_imm8         nop                      #  47    0x48  1      OPC=nop                  
  addq %r15, %r11           #  48    0x46  3      OPC=addq_r64_r64          nop                      #  48    0x49  1      OPC=nop                  
  jmpq %r11                 #  49    0x49  3      OPC=jmpq_r64              nop                      #  49    0x4a  1      OPC=nop                  
                                                                            nop                      #  50    0x4b  1      OPC=nop                  
.size wcslen, .-wcslen                                                      nop                      #  51    0x4c  1      OPC=nop                  
                                                                            nop                      #  52    0x4d  1      OPC=nop                  
                                                                            sarw $0x2, %ax           #  53    0x4e  4      OPC=sarw_r16_imm8        
                                                                            popq %r11                #  54    0x52  2      OPC=popq_r64_1           
                                                                            andl $0xe0, %r11d        #  55    0x54  4      OPC=andl_r32_imm8        
                                                                            addq %r15, %r11          #  56    0x58  3      OPC=addq_r64_r64         
                                                                            jmpq %r11                #  57    0x5b  3      OPC=jmpq_r64             
                                                                                                                                                    
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (65)                                               Lowest Known Correct Cost (65)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                     #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                   #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                   movl %edi, %r9d          #  1     0     3      OPC=movl_r32_r32         
  nop                       #  2     0x1   1      OPC=nop                   movl (%r15,%r9,1), %ecx  #  2     0x3   4      OPC=movl_r32_m32         
  nop                       #  3     0x2   1      OPC=nop                   nop                      #  3     0x7   1      OPC=nop                  
  nop                       #  4     0x3   1      OPC=nop                   nop                      #  4     0x8   1      OPC=nop                  
  nop                       #  5     0x4   1      OPC=nop                   nop                      #  5     0x9   1      OPC=nop                  
  nop                       #  6     0x5   1      OPC=nop                   nop                      #  6     0xa   1      OPC=nop                  
  nop                       #  7     0x6   1      OPC=nop                   xorq %rax, %rax          #  7     0xb   3      OPC=xorq_r64_r64         
  nop                       #  8     0x7   1      OPC=nop                   sarq $0x1, %rcx          #  8     0xe   3      OPC=sarq_r64_one         
  nop                       #  9     0x8   1      OPC=nop                   je .L_142ce0             #  9     0x11  2      OPC=je_label             
  xorl %eax, %eax           #  10    0x9   2      OPC=xorl_r32_r32          nop                      #  10    0x13  1      OPC=nop                  
  movq %rdi, %rdx           #  11    0xb   3      OPC=movq_r64_r64          nop                      #  11    0x14  1      OPC=nop                  
  movl (%r15,%rdx,1), %ecx  #  12    0xe   4      OPC=movl_r32_m32          nop                      #  12    0x15  1      OPC=nop                  
  nop                       #  13    0x12  1      OPC=nop                   nop                      #  13    0x16  1      OPC=nop                  
  testl %edx, %ecx          #  14    0x13  2      OPC=testl_r32_r32         nop                      #  14    0x17  1      OPC=nop                  
  je .L_142ce0              #  15    0x15  2      OPC=je_label              nop                      #  15    0x18  1      OPC=nop                  
  nop                       #  16    0x17  1      OPC=nop                   movq %r9, %rdx           #  16    0x19  3      OPC=movq_r64_r64_1       
  nop                       #  17    0x18  1      OPC=nop                   nop                      #  17    0x1c  1      OPC=nop                  
  nop                       #  18    0x19  1      OPC=nop                   nop                      #  18    0x1d  1      OPC=nop                  
  nop                       #  19    0x1a  1      OPC=nop                   nop                      #  19    0x1e  1      OPC=nop                  
  nop                       #  20    0x1b  1      OPC=nop                   nop                      #  20    0x1f  1      OPC=nop                  
  nop                       #  21    0x1c  1      OPC=nop                 .L_142cc0:                 #        0x20  0      OPC=<label>              
  nop                       #  22    0x1d  1      OPC=nop                   addl $0x4, %edx          #  21    0x20  3      OPC=addl_r32_imm8        
  nop                       #  23    0x1e  1      OPC=nop                   movw (%r15,%rdx,1), %ax  #  22    0x23  5      OPC=movw_r16_m16         
  nop                       #  24    0x1f  1      OPC=nop                   salw $0x5, %ax           #  23    0x28  4      OPC=salw_r16_imm8        
.L_142cc0:                  #        0x20  0      OPC=<label>               jne .L_142cc0            #  24    0x2c  2      OPC=jne_label            
  addl $0x4, %edx           #  25    0x20  3      OPC=addl_r32_imm8         subq %rdi, %rdx          #  25    0x2e  3      OPC=subq_r64_r64_1       
  movl (%r15,%rdx,1), %eax  #  26    0x23  4      OPC=movl_r32_m32          nop                      #  26    0x31  1      OPC=nop                  
  shlb $0x1, %al            #  27    0x27  2      OPC=shlb_r8_one           nop                      #  27    0x32  1      OPC=nop                  
  jne .L_142cc0             #  28    0x29  2      OPC=jne_label             nop                      #  28    0x33  1      OPC=nop                  
  movl %edx, %eax           #  29    0x2b  2      OPC=movl_r32_r32          nop                      #  29    0x34  1      OPC=nop                  
  nop                       #  30    0x2d  1      OPC=nop                   xorw %dx, %ax            #  30    0x35  3      OPC=xorw_r16_r16         
  nop                       #  31    0x2e  1      OPC=nop                   nop                      #  31    0x38  1      OPC=nop                  
  nop                       #  32    0x2f  1      OPC=nop                   nop                      #  32    0x39  1      OPC=nop                  
  nop                       #  33    0x30  1      OPC=nop                   nop                      #  33    0x3a  1      OPC=nop                  
  nop                       #  34    0x31  1      OPC=nop                   nop                      #  34    0x3b  1      OPC=nop                  
  nop                       #  35    0x32  1      OPC=nop                   nop                      #  35    0x3c  1      OPC=nop                  
  nop                       #  36    0x33  1      OPC=nop                   nop                      #  36    0x3d  1      OPC=nop                  
  subl %edi, %eax           #  37    0x34  2      OPC=subl_r32_r32          nop                      #  37    0x3e  1      OPC=nop                  
  nop                       #  38    0x36  1      OPC=nop                   nop                      #  38    0x3f  1      OPC=nop                  
  nop                       #  39    0x37  1      OPC=nop                 .L_142ce0:                 #        0x40  0      OPC=<label>              
  nop                       #  40    0x38  1      OPC=nop                   nop                      #  39    0x40  1      OPC=nop                  
  nop                       #  41    0x39  1      OPC=nop                   nop                      #  40    0x41  1      OPC=nop                  
  nop                       #  42    0x3a  1      OPC=nop                   nop                      #  41    0x42  1      OPC=nop                  
  nop                       #  43    0x3b  1      OPC=nop                   nop                      #  42    0x43  1      OPC=nop                  
  sarl $0x2, %eax           #  44    0x3c  3      OPC=sarl_r32_imm8         nop                      #  43    0x44  1      OPC=nop                  
  nop                       #  45    0x3f  1      OPC=nop                   nop                      #  44    0x45  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>               nop                      #  45    0x46  1      OPC=nop                  
  popq %r11                 #  46    0x40  2      OPC=popq_r64_1            nop                      #  46    0x47  1      OPC=nop                  
  andl $0xe0, %r11d         #  47    0x42  4      OPC=andl_r32_imm8         nop                      #  47    0x48  1      OPC=nop                  
  addq %r15, %r11           #  48    0x46  3      OPC=addq_r64_r64          sarw $0x2, %ax           #  48    0x49  4      OPC=sarw_r16_imm8        
  jmpq %r11                 #  49    0x49  3      OPC=jmpq_r64              nop                      #  49    0x4d  1      OPC=nop                  
                                                                            nop                      #  50    0x4e  1      OPC=nop                  
.size wcslen, .-wcslen                                                      popq %r11                #  51    0x4f  2      OPC=popq_r64_1           
                                                                            andl $0xe0, %r11d        #  52    0x51  4      OPC=andl_r32_imm8        
                                                                            addq %r15, %r11          #  53    0x55  3      OPC=addq_r64_r64         
                                                                            jmpq %r11                #  54    0x58  3      OPC=jmpq_r64             
                                                                                                                                                    
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (64)                                               Lowest Known Correct Cost (64)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                     #  Line  RIP   Bytes  Opcode                   # Text                     #  Line  RIP   Bytes  Opcode                   
.wcslen:                   #        0     0      OPC=<label>              .wcslen:                   #        0     0      OPC=<label>              
  movl %edi, %r9d          #  1     0     3      OPC=movl_r32_r32           movl %edi, %r9d          #  1     0     3      OPC=movl_r32_r32         
  movl (%r15,%r9,1), %ecx  #  2     0x3   4      OPC=movl_r32_m32           movl (%r15,%r9,1), %ecx  #  2     0x3   4      OPC=movl_r32_m32         
  nop                      #  3     0x7   1      OPC=nop                    nop                      #  3     0x7   1      OPC=nop                  
  nop                      #  4     0x8   1      OPC=nop                    nop                      #  4     0x8   1      OPC=nop                  
  nop                      #  5     0x9   1      OPC=nop                    nop                      #  5     0x9   1      OPC=nop                  
  nop                      #  6     0xa   1      OPC=nop                    nop                      #  6     0xa   1      OPC=nop                  
  nop                      #  7     0xb   1      OPC=nop                    nop                      #  7     0xb   1      OPC=nop                  
  nop                      #  8     0xc   1      OPC=nop                    nop                      #  8     0xc   1      OPC=nop                  
  nop                      #  9     0xd   1      OPC=nop                    nop                      #  9     0xd   1      OPC=nop                  
  xorq %rax, %rax          #  10    0xe   3      OPC=xorq_r64_r64           xorq %rax, %rax          #  10    0xe   3      OPC=xorq_r64_r64         
  sarq $0x1, %rcx          #  11    0x11  3      OPC=sarq_r64_one           sarq $0x1, %rcx          #  11    0x11  3      OPC=sarq_r64_one         
  je .L_142ce0             #  12    0x14  2      OPC=je_label               je .L_142ce0             #  12    0x14  2      OPC=je_label             
  nop                      #  13    0x16  1      OPC=nop                    nop                      #  13    0x16  1      OPC=nop                  
  movq %r9, %rdx           #  14    0x17  3      OPC=movq_r64_r64_1         movq %r9, %rdx           #  14    0x17  3      OPC=movq_r64_r64_1       
  nop                      #  15    0x1a  1      OPC=nop                    nop                      #  15    0x1a  1      OPC=nop                  
  nop                      #  16    0x1b  1      OPC=nop                    nop                      #  16    0x1b  1      OPC=nop                  
  nop                      #  17    0x1c  1      OPC=nop                    nop                      #  17    0x1c  1      OPC=nop                  
  nop                      #  18    0x1d  1      OPC=nop                    nop                      #  18    0x1d  1      OPC=nop                  
  nop                      #  19    0x1e  1      OPC=nop                    nop                      #  19    0x1e  1      OPC=nop                  
  nop                      #  20    0x1f  1      OPC=nop                    nop                      #  20    0x1f  1      OPC=nop                  
.L_142cc0:                 #        0x20  0      OPC=<label>              .L_142cc0:                 #        0x20  0      OPC=<label>              
  addl $0x4, %edx          #  21    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx          #  21    0x20  3      OPC=addl_r32_imm8        
  movw (%r15,%rdx,1), %ax  #  22    0x23  5      OPC=movw_r16_m16           movw (%r15,%rdx,1), %ax  #  22    0x23  5      OPC=movw_r16_m16         
  salw $0x5, %ax           #  23    0x28  4      OPC=salw_r16_imm8          salw $0x5, %ax           #  23    0x28  4      OPC=salw_r16_imm8        
  jne .L_142cc0            #  24    0x2c  2      OPC=jne_label              jne .L_142cc0            #  24    0x2c  2      OPC=jne_label            
  subq %rdi, %rdx          #  25    0x2e  3      OPC=subq_r64_r64_1         subq %rdi, %rdx          #  25    0x2e  3      OPC=subq_r64_r64_1       
  nop                      #  26    0x31  1      OPC=nop                    nop                      #  26    0x31  1      OPC=nop                  
  nop                      #  27    0x32  1      OPC=nop                    nop                      #  27    0x32  1      OPC=nop                  
  nop                      #  28    0x33  1      OPC=nop                    nop                      #  28    0x33  1      OPC=nop                  
  nop                      #  29    0x34  1      OPC=nop                    nop                      #  29    0x34  1      OPC=nop                  
  nop                      #  30    0x35  1      OPC=nop                    nop                      #  30    0x35  1      OPC=nop                  
  nop                      #  31    0x36  1      OPC=nop                    nop                      #  31    0x36  1      OPC=nop                  
  nop                      #  32    0x37  1      OPC=nop                    nop                      #  32    0x37  1      OPC=nop                  
  nop                      #  33    0x38  1      OPC=nop                    nop                      #  33    0x38  1      OPC=nop                  
  nop                      #  34    0x39  1      OPC=nop                    nop                      #  34    0x39  1      OPC=nop                  
  nop                      #  35    0x3a  1      OPC=nop                    nop                      #  35    0x3a  1      OPC=nop                  
  nop                      #  36    0x3b  1      OPC=nop                    nop                      #  36    0x3b  1      OPC=nop                  
  nop                      #  37    0x3c  1      OPC=nop                    nop                      #  37    0x3c  1      OPC=nop                  
  xorw %dx, %ax            #  38    0x3d  3      OPC=xorw_r16_r16           xorw %dx, %ax            #  38    0x3d  3      OPC=xorw_r16_r16         
.L_142ce0:                 #        0x40  0      OPC=<label>              .L_142ce0:                 #        0x40  0      OPC=<label>              
  nop                      #  39    0x40  1      OPC=nop                    nop                      #  39    0x40  1      OPC=nop                  
  nop                      #  40    0x41  1      OPC=nop                    nop                      #  40    0x41  1      OPC=nop                  
  nop                      #  41    0x42  1      OPC=nop                    nop                      #  41    0x42  1      OPC=nop                  
  nop                      #  42    0x43  1      OPC=nop                    nop                      #  42    0x43  1      OPC=nop                  
  nop                      #  43    0x44  1      OPC=nop                    nop                      #  43    0x44  1      OPC=nop                  
  sarw $0x2, %ax           #  44    0x45  4      OPC=sarw_r16_imm8          sarw $0x2, %ax           #  44    0x45  4      OPC=sarw_r16_imm8        
  nop                      #  45    0x49  1      OPC=nop                    nop                      #  45    0x49  1      OPC=nop                  
  nop                      #  46    0x4a  1      OPC=nop                    nop                      #  46    0x4a  1      OPC=nop                  
  nop                      #  47    0x4b  1      OPC=nop                    nop                      #  47    0x4b  1      OPC=nop                  
  nop                      #  48    0x4c  1      OPC=nop                    nop                      #  48    0x4c  1      OPC=nop                  
  nop                      #  49    0x4d  1      OPC=nop                    nop                      #  49    0x4d  1      OPC=nop                  
  nop                      #  50    0x4e  1      OPC=nop                    nop                      #  50    0x4e  1      OPC=nop                  
  nop                      #  51    0x4f  1      OPC=nop                    nop                      #  51    0x4f  1      OPC=nop                  
  nop                      #  52    0x50  1      OPC=nop                    nop                      #  52    0x50  1      OPC=nop                  
  popq %r11                #  53    0x51  2      OPC=popq_r64_1             popq %r11                #  53    0x51  2      OPC=popq_r64_1           
  andl $0xe0, %r11d        #  54    0x53  4      OPC=andl_r32_imm8          andl $0xe0, %r11d        #  54    0x53  4      OPC=andl_r32_imm8        
  addq %r15, %r11          #  55    0x57  3      OPC=addq_r64_r64           addq %r15, %r11          #  55    0x57  3      OPC=addq_r64_r64         
  jmpq %r11                #  56    0x5a  3      OPC=jmpq_r64               jmpq %r11                #  56    0x5a  3      OPC=jmpq_r64             
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  121.03s
Iterations/s:                  826.242

Starting cost:                 84
Lowest cost:                   64
Lowest correct cost:           64

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.158%       7.669%        7.386%       
Operand         8.281%       4.168%        1.674%       
Local Swap      8.598%       4.038%        3.359%       
Global Swap     8.307%       7.309%        6.493%       
Global Copy     8.346%       7.724%        7.724%       
ReplaceNop      8.352%       7.833%        7.387%       
Rotate          8.317%       7.475%        5.523%       
Delete          8.387%       7.905%        6.658%       
OpcodeWidth     8.15%        7.363%        7.116%       
Add Nops        8.325%       8.325%        6.469%       
Instruction     8.452%       4.799%        0.595%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.327%       1.446%        0.003%       
                                                        
Total           100%         76.054%       60.387%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  344.078s
Iterations/s:                  581.264

Starting cost:                 84
Lowest cost:                   64
Lowest correct cost:           64

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.2055%      7.869%        7.665%       
Operand         8.3115%      4.442%        1.8665%      
Local Swap      8.4515%      4.0585%       3.346%       
Global Swap     8.366%       7.6655%       7.0395%      
Global Copy     8.338%       7.9025%       7.9025%      
ReplaceNop      8.3645%      8.0025%       7.694%       
Rotate          8.33%        7.734%        6.199%       
Delete          8.3875%      8.041%        7.053%       
OpcodeWidth     8.2%         7.6265%       7.4395%      
Add Nops        8.294%       8.294%        6.896%       
Instruction     8.418%       4.867%        0.614%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.3335%      1.5655%       0.0035%      
                                                        
Total           100%         78.068%       63.7185%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  660.219s
Iterations/s:                  454.394

Starting cost:                 84
Lowest cost:                   64
Lowest correct cost:           64

Move Type       Proposed     Succeeded     Accepted        
                                                           
Opcode          8.27133%     8.00267%      7.84167%        
Operand         8.26033%     4.594%        2.00733%        
Local Swap      8.39433%     4.081%        3.34267%        
Global Swap     8.35867%     7.81233%      7.30233%        
Global Copy     8.33967%     7.99567%      7.99567%        
ReplaceNop      8.384%       8.09933%      7.85867%        
Rotate          8.32567%     7.855%        6.536%          
Delete          8.34367%     8.07033%      7.21167%        
OpcodeWidth     8.24967%     7.80667%      7.65067%        
Add Nops        8.33867%     8.33867%      7.12667%        
Instruction     8.39367%     4.85033%      0.605667%       
2xWeighted      0%           0%            0%              
Memory+Swap     8.34033%     1.56067%      0.00266667%     
                                                           
Total           100%         79.0667%      65.4817%        

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  940.548s
Iterations/s:                  425.284

Starting cost:                 84
Lowest cost:                   64
Lowest correct cost:           64

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.26075%     8.0415%       7.90925%     
Operand         8.29825%     4.83225%      2.23075%     
Local Swap      8.39275%     4.1625%       3.39825%     
Global Swap     8.3675%      7.91275%      7.48225%     
Global Copy     8.35475%     8.0745%       8.0745%      
ReplaceNop      8.3475%      8.11525%      7.9165%      
Rotate          8.284%       7.9005%       6.6765%      
Delete          8.35275%     8.128%        7.24675%     
OpcodeWidth     8.256%       7.8795%       7.744%       
Add Nops        8.3365%      8.3365%       7.1905%      
Instruction     8.3555%      4.8255%       0.6%         
2xWeighted      0%           0%            0%           
Memory+Swap     8.39375%     1.5885%       0.002%       
                                                        
Total           100%         79.7973%      66.4712%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  1305.7s
Iterations/s:                  382.936

Starting cost:                 84
Lowest cost:                   64
Lowest correct cost:           64

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.2686%      8.0818%       7.9672%      
Operand         8.3174%      4.9916%       2.4348%      
Local Swap      8.3888%      4.2042%       3.4104%      
Global Swap     8.3572%      7.9678%       7.589%       
Global Copy     8.3326%      8.0952%       8.0952%      
ReplaceNop      8.3594%      8.1598%       7.9912%      
Rotate          8.2774%      7.9526%       6.8032%      
Delete          8.3372%      8.1422%       7.2314%      
OpcodeWidth     8.289%       7.959%        7.8396%      
Add Nops        8.3386%      8.3386%       7.178%       
Instruction     8.3584%      4.8192%       0.6104%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3754%      1.5886%       0.0016%      
                                                        
Total           100%         80.3006%      67.152%      

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     50 3b 2f d6 dd bf 2b bb
%rcx     30 c6 68 be e0 84 e9 8c
%rdx     87 5f 3f 73 14 e7 7c 4e
%rbx     7e ad 58 eb a9 79 be dd
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 47 12 08 c8
%rdi     00 00 00 00 47 12 0b 5b
%r8      7d 59 9d b8 9e 92 0b dc
%r9      6c 7a a7 34 be c9 d2 39
%r10     b4 7a e9 b4 26 a5 4b ef
%r11     dd 3e 23 82 59 f7 ac 9c
%r12     9b ee 38 03 5c c6 91 fa
%r13     e6 1b ed d7 c3 1a 07 77
%r14     e2 94 d3 c4 60 74 cf 39
%r15     00 00 00 00 08 6d 66 e0

%ymm0    bc ab be a3 7a 7d 3d 30 9e 82 18 b8 e1 cf d5 f8 14 04 13 e4 13 56 57 56 90 e1 33 c3 91 9c 74 d9
%ymm1    dc 9f af 49 be dc 92 ea 53 b7 35 38 e3 4e 1a f5 b5 2a 79 bc f1 33 63 fe 7c f1 43 c1 43 51 94 84
%ymm2    79 50 33 65 ba a1 0f 07 07 af 16 76 32 86 51 73 65 6d 34 bb b8 e8 5d 16 c2 5a 62 0d 0e b9 19 df
%ymm3    3e 02 63 c8 98 48 3a 41 a7 63 a0 f6 47 62 47 47 91 e3 4b 18 e9 96 89 ea 78 bc 56 35 bc dc 53 2a
%ymm4    fb fe 68 32 2d 76 7a 54 4f 11 74 28 22 14 03 88 32 d5 16 62 e7 8d f0 3e 50 f0 b9 e7 ac 16 fa 80
%ymm5    8c 5c 22 51 59 53 28 2e 4d 17 da 0c 28 fc c0 34 03 06 d8 a9 93 87 4e 99 c6 ad f2 60 7f b6 fb 45
%ymm6    3d e9 39 9d a2 f3 d3 13 34 07 ef 10 ff fd 15 97 d0 69 4f ef c4 c2 ca 3f 67 80 e9 9a 23 d8 db 92
%ymm7    b8 60 3a ef c4 23 37 af 80 1f 86 a6 c1 6e 7e 8f da e9 be 3c c8 6a 94 4f 27 71 a4 62 66 43 af a3
%ymm8    a7 e4 ee be 79 43 88 74 c9 91 9a 21 0a a6 ac ea 89 5b 29 c5 bc 1f e6 03 86 10 22 12 27 12 50 73
%ymm9    47 dd d8 08 8d 7e d5 11 61 60 19 2a 6d d3 9e 9f ef 52 5a 4d 4d cc ec 3f cb b6 46 70 7d c8 f3 05
%ymm10   1a 63 35 f1 e1 c8 2a 95 93 96 62 82 87 0f c8 4b 3f 05 27 fc b7 54 86 58 67 d1 07 c5 13 02 ba 3c
%ymm11   3d 30 c0 4d cc a9 eb ab d2 ba ae 98 de 23 94 03 e8 bf 78 14 23 11 f2 9a 47 e3 cf 93 4d bf 4d 5c
%ymm12   fc 07 fc 87 3b 77 7b e1 83 54 be b0 ba 02 32 e8 8b 66 38 22 0f b6 fa 75 38 7a 43 b7 71 44 76 2b
%ymm13   71 86 12 f9 8c 06 13 f7 6a ad 4f f4 68 e3 4a 2b 80 53 aa 0a 39 b3 a2 a1 2c 7f 2d 26 5c e2 4f 7e
%ymm14   3c 35 db b1 b7 cc 91 74 67 d5 94 c4 58 42 b6 d1 34 09 a1 a9 0b dd 79 83 73 68 32 2a 45 98 0a b7
%ymm15   fd e5 c8 b6 44 82 a5 ba 02 87 91 e1 a7 7d da 98 c9 4e 33 f6 15 43 fb c0 94 c4 72 6d d3 ee c6 fd

%cf      1 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   19 6d 6b cc 22 92 8d 3d 
00000006 fffffff0   v v v v v v v v   a7 bf cc 7d 3e 5d 27 f2 
00000006 ffffffe8   v v v v v v v v   07 db b5 8a 1f 12 fe 95 
00000006 ffffffe0   v v v v v v v v   33 1d cd e4 ea 66 0a 2c 

[ 00000000 4f7f76f8 - 00000000 4f7f6ee0 ]
[ 52 valid rows shown ]

00000000 4f7f73d0   . v v v v v v v   00 00 00 00 00 c3 96 ff 
00000000 4f7f73c8   v v v v v v v v   ec 92 95 44 2f 2f 5c 0c 
00000000 4f7f73c0   v v v v v v v v   e6 42 af bd 28 33 b3 11 
00000000 4f7f73b8   v v v v v v v v   ea 85 a7 14 c2 c8 4f 7b 
00000000 4f7f73b0   v v v v v v v v   32 aa f3 93 d7 04 6a a8 
00000000 4f7f73a8   v v v v v v v v   62 65 e8 23 49 1a 5d 29 
00000000 4f7f73a0   v v v v v v v v   19 7b 09 17 49 2e 6a d6 
00000000 4f7f7398   v v v v v v v v   c3 df c5 47 95 a5 87 9f 
00000000 4f7f7390   v v v v v v v v   d3 ef 29 2f a2 04 c0 3f 
00000000 4f7f7388   v v v v v v v v   1c ce c6 20 00 e1 1f 02 
00000000 4f7f7380   v v v v v v v v   32 db ac 73 6b 8b 11 7c 
00000000 4f7f7378   v v v v v v v v   49 1f bf f6 d2 98 76 a4 
00000000 4f7f7370   v v v v v v v v   4d 24 6f 63 e8 f2 78 fb 
00000000 4f7f7368   v v v v v v v v   cd e5 01 fe af 44 56 bf 
00000000 4f7f7360   v v v v v v v v   6f 21 62 ef 42 f1 bc 53 
00000000 4f7f7358   v v v v v v v v   4d 27 7f 2e 4b 52 35 ea 
00000000 4f7f7350   v v v v v v v v   3c 7d ea ed 24 93 fa cf 
00000000 4f7f7348   v v v v v v v v   36 bc a8 ef d5 35 5d 80 
00000000 4f7f7340   v v v v v v v v   df 70 33 ee a4 95 d4 1e 
00000000 4f7f7338   v v v v v v v v   db 2d f9 61 16 b8 ff 4f 
00000000 4f7f7330   v v v v v v v v   58 57 f2 55 5d 3e 27 46 
00000000 4f7f7328   v v v v v v v v   e7 73 92 55 56 ed 4d f0 
00000000 4f7f7320   v v v v v v v v   cc 9d 1a 86 ba a6 25 7a 
00000000 4f7f7318   v v v v v v v v   17 41 62 c7 5f a8 5c 03 
00000000 4f7f7310   v v v v v v v v   f9 b4 2d 17 56 b4 b4 92 
00000000 4f7f7308   v v v v v v v v   1d a5 08 65 21 af d6 46 
00000000 4f7f7300   v v v v v v v v   e3 74 61 40 8f e3 18 50 
00000000 4f7f72f8   v v v v v v v v   e2 b9 6a 5c af a8 d6 e2 
00000000 4f7f72f0   v v v v v v v v   5e 79 62 c4 97 0f 8a b7 
00000000 4f7f72e8   v v v v v v v v   84 58 8f db cc 62 e5 a3 
00000000 4f7f72e0   v v v v v v v v   e5 7d 28 3e 01 5e e6 86 
00000000 4f7f72d8   v v v v v v v v   0a c2 86 cc 4a 5d 80 9a 
00000000 4f7f72d0   v v v v v v v v   e1 53 39 e0 8b 32 28 a9 
00000000 4f7f72c8   v v v v v v v v   8c 2d f6 28 7d 67 7b a6 
00000000 4f7f72c0   v v v v v v v v   7c c9 58 7b 54 23 00 3e 
00000000 4f7f72b8   v v v v v v v v   78 29 4c b0 7b 2d 60 01 
00000000 4f7f72b0   v v v v v v v v   c7 07 b8 e2 a5 fa b3 64 
00000000 4f7f72a8   v v v v v v v v   b0 8e ad d6 eb b2 4e 00 
00000000 4f7f72a0   v v v v v v v v   75 35 7b 16 ab d7 f1 c8 
00000000 4f7f7298   v v v v v v v v   ad 1f 4f 7a 65 59 49 e5 
00000000 4f7f7290   v v v v v v v v   62 bd 2f 41 4a 24 b7 da 
00000000 4f7f7288   v v v v v v v v   a3 fb 88 eb 3c 19 85 5f 
00000000 4f7f7280   v v v v v v v v   8a a4 24 e2 29 d2 79 33 
00000000 4f7f7278   v v v v v v v v   ba f6 30 80 f7 8c b5 20 
00000000 4f7f7270   v v v v v v v v   73 0b 8a 70 81 bc 51 b8 
00000000 4f7f7268   v v v v v v v v   be 6f 66 dd 8f e0 3b a7 
00000000 4f7f7260   v v v v v v v v   7b 52 69 f6 18 82 03 39 
00000000 4f7f7258   v v v v v v v v   ff a4 cb d6 18 aa 96 03 
00000000 4f7f7250   v v v v v v v v   89 ce 1e c9 fd e2 52 e1 
00000000 4f7f7248   v v v v v v v v   e0 85 a2 e7 65 e8 3e 85 
00000000 4f7f7240   v v v v v v v v   3a e7 f3 de 83 5e 6e 29 
00000000 4f7f7238   v v v v v . . .   8c 20 40 15 21 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (87)                                               Lowest Known Correct Cost (107)                                           
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movq %rdi, %rdx           #  3     0x3   3      OPC=movq_r64_r64          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl %edi, %edi           #  5     0xa   2      OPC=movl_r32_r32          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %edx          #  6     0xc   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xe   2      OPC=je_label              je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x10  1      OPC=nop                   nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x11  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x12  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x13  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  xorl $0xfb, %ecx          #  15    0x17  3      OPC=xorl_r32_imm8         nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x1a  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1b  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1c  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1d  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1e  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
.L_142cc0:                  #        0x1f  0      OPC=<label>               nop                       #  21    0x1e  1      OPC=nop                 
  addl $0x4, %edx           #  21    0x1f  3      OPC=addl_r32_imm8         nop                       #  22    0x1f  1      OPC=nop                 
  movl (%r15,%rdx,1), %eax  #  22    0x22  4      OPC=movl_r32_m32        .L_142cc0:                  #        0x20  0      OPC=<label>             
  testl %eax, %ecx          #  23    0x26  2      OPC=testl_r32_r32         addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  jne .L_142cc0             #  24    0x28  2      OPC=jne_label             movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl %edx, %eax           #  25    0x2a  2      OPC=movl_r32_r32          movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  subl %edi, %eax           #  26    0x2c  2      OPC=subl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  nop                       #  27    0x2e  1      OPC=nop                   jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  nop                       #  28    0x2f  1      OPC=nop                   movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x30  1      OPC=nop                   subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x31  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x32  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x33  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  sarw $0x2, %ax            #  34    0x35  4      OPC=sarw_r16_imm8         nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x39  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x3a  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x3b  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3c  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
.L_142ce0:                  #        0x3d  0      OPC=<label>               nop                       #  39    0x3c  1      OPC=nop                 
  popq %r11                 #  39    0x3d  2      OPC=popq_r64_1            nop                       #  40    0x3d  1      OPC=nop                 
  andl $0xe0, %r11d         #  40    0x3f  4      OPC=andl_r32_imm8         nop                       #  41    0x3e  1      OPC=nop                 
  addq %r15, %r11           #  41    0x43  3      OPC=addq_r64_r64          nop                       #  42    0x3f  1      OPC=nop                 
  jmpq %r11                 #  42    0x46  3      OPC=jmpq_r64            .L_142ce0:                  #        0x40  0      OPC=<label>             
                                                                            popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
.size wcslen, .-wcslen                                                      andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
                                                                            addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
                                                                            jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (86)                                               Lowest Known Correct Cost (107)                                           
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movq %rdi, %rdx           #  3     0x3   3      OPC=movq_r64_r64          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl %edi, %edi           #  5     0xa   2      OPC=movl_r32_r32          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %edx          #  6     0xc   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xe   2      OPC=je_label              je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x10  1      OPC=nop                   nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x11  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x12  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x13  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  orl $0xfb, %ecx           #  15    0x17  3      OPC=orl_r32_imm8          nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x1a  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1b  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1c  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1d  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1e  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
.L_142cc0:                  #        0x1f  0      OPC=<label>               nop                       #  21    0x1e  1      OPC=nop                 
  addl $0x4, %edx           #  21    0x1f  3      OPC=addl_r32_imm8         nop                       #  22    0x1f  1      OPC=nop                 
  movl (%r15,%rdx,1), %eax  #  22    0x22  4      OPC=movl_r32_m32        .L_142cc0:                  #        0x20  0      OPC=<label>             
  testl %eax, %ecx          #  23    0x26  2      OPC=testl_r32_r32         addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  jne .L_142cc0             #  24    0x28  2      OPC=jne_label             movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl %edx, %eax           #  25    0x2a  2      OPC=movl_r32_r32          movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  subl %edi, %eax           #  26    0x2c  2      OPC=subl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  nop                       #  27    0x2e  1      OPC=nop                   jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  nop                       #  28    0x2f  1      OPC=nop                   movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x30  1      OPC=nop                   subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x31  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x32  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x33  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  sarw $0x2, %ax            #  35    0x36  4      OPC=sarw_r16_imm8         nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x3a  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x3b  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3c  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3d  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
.L_142ce0:                  #        0x3e  0      OPC=<label>               nop                       #  40    0x3d  1      OPC=nop                 
  popq %r11                 #  40    0x3e  2      OPC=popq_r64_1            nop                       #  41    0x3e  1      OPC=nop                 
  andl $0xe0, %r11d         #  41    0x40  4      OPC=andl_r32_imm8         nop                       #  42    0x3f  1      OPC=nop                 
  addq %r15, %r11           #  42    0x44  3      OPC=addq_r64_r64        .L_142ce0:                  #        0x40  0      OPC=<label>             
  jmpq %r11                 #  43    0x47  3      OPC=jmpq_r64              popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
                                                                            andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
.size wcslen, .-wcslen                                                      addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
                                                                            jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (85)                                               Lowest Known Correct Cost (107)                                           
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movq %rdi, %rdx           #  3     0x3   3      OPC=movq_r64_r64          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl %edi, %edi           #  5     0xa   2      OPC=movl_r32_r32          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %edx          #  6     0xc   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xe   2      OPC=je_label              je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x10  1      OPC=nop                   nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x11  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x12  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x13  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  orl $0xfb, %ecx           #  15    0x17  3      OPC=orl_r32_imm8          nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x1a  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1b  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1c  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1d  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1e  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1f  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>               nop                       #  22    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8       .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32          addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  testl %eax, %ecx          #  24    0x27  2      OPC=testl_r32_r32         movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  25    0x29  2      OPC=jne_label             movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl %edx, %eax           #  26    0x2b  2      OPC=movl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  subl %edi, %eax           #  27    0x2d  2      OPC=subl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  nop                       #  28    0x2f  1      OPC=nop                   movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x30  1      OPC=nop                   subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x31  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x32  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x33  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  sarw $0x2, %ax            #  36    0x37  4      OPC=sarw_r16_imm8         nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x3b  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3c  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3d  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3e  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
.L_142ce0:                  #        0x3f  0      OPC=<label>               nop                       #  41    0x3e  1      OPC=nop                 
  popq %r11                 #  41    0x3f  2      OPC=popq_r64_1            nop                       #  42    0x3f  1      OPC=nop                 
  andl $0xe0, %r11d         #  42    0x41  4      OPC=andl_r32_imm8       .L_142ce0:                  #        0x40  0      OPC=<label>             
  addq %r15, %r11           #  43    0x45  3      OPC=addq_r64_r64          popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  jmpq %r11                 #  44    0x48  3      OPC=jmpq_r64              andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
                                                                            addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
.size wcslen, .-wcslen                                                      jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (84)                                               Lowest Known Correct Cost (107)                                           
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movq %rdi, %rdx           #  3     0x3   3      OPC=movq_r64_r64          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0xa   1      OPC=nop                   movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0xb   1      OPC=nop                   testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  testl %ecx, %edi          #  7     0xc   2      OPC=testl_r32_r32         je .L_142ce0              #  7     0xf   2      OPC=je_label            
  je .L_142ce0              #  8     0xe   2      OPC=je_label              nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x10  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x11  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x12  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x13  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  andl $0xfb, %ecx          #  13    0x14  3      OPC=andl_r32_imm8         nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  testl %eax, %ecx          #  25    0x27  2      OPC=testl_r32_r32         movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label             testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2f  1      OPC=nop                   subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x30  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x31  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x32  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x33  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x34  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x35  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x36  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x37  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x38  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  sarw $0x2, %ax            #  39    0x39  4      OPC=sarw_r16_imm8         nop                       #  39    0x3c  1      OPC=nop                 
  nopl %eax                 #  40    0x3d  3      OPC=nopl_r32              nop                       #  40    0x3d  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>               nop                       #  41    0x3e  1      OPC=nop                 
  popq %r11                 #  41    0x40  2      OPC=popq_r64_1            nop                       #  42    0x3f  1      OPC=nop                 
  andl $0xe0, %r11d         #  42    0x42  4      OPC=andl_r32_imm8       .L_142ce0:                  #        0x40  0      OPC=<label>             
  addq %r15, %r11           #  43    0x46  3      OPC=addq_r64_r64          popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  jmpq %r11                 #  44    0x49  3      OPC=jmpq_r64              andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
                                                                            addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
.size wcslen, .-wcslen                                                      jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (83)                                               Lowest Known Correct Cost (107)                                           
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movq %rdi, %rdx           #  3     0x3   3      OPC=movq_r64_r64          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0xa   1      OPC=nop                   movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0xb   1      OPC=nop                   testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  testl %ecx, %edi          #  7     0xc   2      OPC=testl_r32_r32         je .L_142ce0              #  7     0xf   2      OPC=je_label            
  je .L_142ce0              #  8     0xe   2      OPC=je_label              nop                       #  8     0x11  1      OPC=nop                 
  andl $0xfb, %ecx          #  9     0x10  3      OPC=andl_r32_imm8         nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x13  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  testl %eax, %ecx          #  25    0x27  2      OPC=testl_r32_r32         movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label             testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2f  1      OPC=nop                   subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x30  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x31  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x32  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x33  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x34  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x35  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x36  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x37  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x38  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  sarw $0x2, %ax            #  39    0x39  4      OPC=sarw_r16_imm8         nop                       #  39    0x3c  1      OPC=nop                 
  nopl %eax                 #  40    0x3d  3      OPC=nopl_r32              nop                       #  40    0x3d  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>               nop                       #  41    0x3e  1      OPC=nop                 
  popq %r11                 #  41    0x40  2      OPC=popq_r64_1            nop                       #  42    0x3f  1      OPC=nop                 
  andl $0xe0, %r11d         #  42    0x42  4      OPC=andl_r32_imm8       .L_142ce0:                  #        0x40  0      OPC=<label>             
  addq %r15, %r11           #  43    0x46  3      OPC=addq_r64_r64          popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  jmpq %r11                 #  44    0x49  3      OPC=jmpq_r64              andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
                                                                            addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
.size wcslen, .-wcslen                                                      jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (82)                                                Lowest Known Correct Cost (107)                                           
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                    movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x1   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x2   1      OPC=nop                    movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x3   1      OPC=nop                    movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0x4   1      OPC=nop                    movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0x5   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0x6   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x7   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x8   1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  movq %rdi, %rdx           #  10    0x9   3      OPC=movq_r64_r64_1         nop                       #  10    0x13  1      OPC=nop                 
  movl (%r15,%rdx,1), %ecx  #  11    0xc   4      OPC=movl_r32_m32           nop                       #  11    0x14  1      OPC=nop                 
  xorl %eax, %eax           #  12    0x10  2      OPC=xorl_r32_r32           nop                       #  12    0x15  1      OPC=nop                 
  testl %r15d, %ecx         #  13    0x12  3      OPC=testl_r32_r32          nop                       #  13    0x16  1      OPC=nop                 
  je .L_142ce0              #  14    0x15  2      OPC=je_label               nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x20  0      OPC=<label>                addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  testl %eax, %ecx          #  26    0x27  2      OPC=testl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  xorl %edx, %eax           #  28    0x2b  2      OPC=xorl_r32_r32_1         movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2d  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2e  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  subl %edi, %eax           #  31    0x2f  2      OPC=subl_r32_r32           nop                       #  31    0x34  1      OPC=nop                 
  sarw $0x2, %ax            #  32    0x31  4      OPC=sarw_r16_imm8          nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x35  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x38  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x39  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3a  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3b  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3e  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  43    0x3f  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
.L_142ce0:                  #        0x40  0      OPC=<label>                popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  popq %r11                 #  44    0x40  2      OPC=popq_r64_1             andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8          addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64           jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64                                                                                       
                                                                           .size wcslen, .-wcslen                                                    
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (82)                                                Lowest Known Correct Cost (84)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x2   1      OPC=nop                  
  nop                       #  4     0x3   1      OPC=nop                    nop                       #  4     0x3   1      OPC=nop                  
  nop                       #  5     0x4   1      OPC=nop                    nop                       #  5     0x4   1      OPC=nop                  
  nop                       #  6     0x5   1      OPC=nop                    nop                       #  6     0x5   1      OPC=nop                  
  nop                       #  7     0x6   1      OPC=nop                    nop                       #  7     0x6   1      OPC=nop                  
  nop                       #  8     0x7   1      OPC=nop                    nop                       #  8     0x7   1      OPC=nop                  
  nop                       #  9     0x8   1      OPC=nop                    nop                       #  9     0x8   1      OPC=nop                  
  movq %rdi, %rdx           #  10    0x9   3      OPC=movq_r64_r64_1         xorl %eax, %eax           #  10    0x9   2      OPC=xorl_r32_r32         
  movl (%r15,%rdx,1), %ecx  #  11    0xc   4      OPC=movl_r32_m32           nop                       #  11    0xb   1      OPC=nop                  
  xorl %eax, %eax           #  12    0x10  2      OPC=xorl_r32_r32           nop                       #  12    0xc   1      OPC=nop                  
  testl %r15d, %ecx         #  13    0x12  3      OPC=testl_r32_r32          nop                       #  13    0xd   1      OPC=nop                  
  je .L_142ce0              #  14    0x15  2      OPC=je_label               nop                       #  14    0xe   1      OPC=nop                  
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0xf   1      OPC=nop                  
  nop                       #  16    0x18  1      OPC=nop                    movl %edi, %edx           #  16    0x10  2      OPC=movl_r32_r32         
  nop                       #  17    0x19  1      OPC=nop                    movl (%r15,%rdx,1), %ecx  #  17    0x12  4      OPC=movl_r32_m32         
  nop                       #  18    0x1a  1      OPC=nop                    testl %ecx, %ecx          #  18    0x16  2      OPC=testl_r32_r32        
  nop                       #  19    0x1b  1      OPC=nop                    je .L_142ce0              #  19    0x18  2      OPC=je_label             
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1a  1      OPC=nop                  
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1b  1      OPC=nop                  
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1c  1      OPC=nop                  
  nop                       #  23    0x1f  1      OPC=nop                    nop                       #  23    0x1d  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>                orb %cl, %ch              #  24    0x1e  2      OPC=orb_rh_r8_1          
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8        .L_142cc0:                  #        0x20  0      OPC=<label>              
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           addl $0x4, %edx           #  25    0x20  3      OPC=addl_r32_imm8        
  testl %eax, %ecx          #  26    0x27  2      OPC=testl_r32_r32          movl (%r15,%rdx,1), %eax  #  26    0x23  4      OPC=movl_r32_m32         
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              testl %eax, %ecx          #  27    0x27  2      OPC=testl_r32_r32        
  xorl %edx, %eax           #  28    0x2b  2      OPC=xorl_r32_r32_1         jne .L_142cc0             #  28    0x29  2      OPC=jne_label            
  nop                       #  29    0x2d  1      OPC=nop                    subl %edi, %eax           #  29    0x2b  2      OPC=subl_r32_r32_1       
  nop                       #  30    0x2e  1      OPC=nop                    nop                       #  30    0x2d  1      OPC=nop                  
  subl %edi, %eax           #  31    0x2f  2      OPC=subl_r32_r32           nop                       #  31    0x2e  1      OPC=nop                  
  sarw $0x2, %ax            #  32    0x31  4      OPC=sarw_r16_imm8          nop                       #  32    0x2f  1      OPC=nop                  
  nop                       #  33    0x35  1      OPC=nop                    nop                       #  33    0x30  1      OPC=nop                  
  nop                       #  34    0x36  1      OPC=nop                    nop                       #  34    0x31  1      OPC=nop                  
  nop                       #  35    0x37  1      OPC=nop                    addl %edx, %eax           #  35    0x32  2      OPC=addl_r32_r32_1       
  nop                       #  36    0x38  1      OPC=nop                    nop                       #  36    0x34  1      OPC=nop                  
  nop                       #  37    0x39  1      OPC=nop                    nop                       #  37    0x35  1      OPC=nop                  
  nop                       #  38    0x3a  1      OPC=nop                    shrl $0x2, %eax           #  38    0x36  3      OPC=shrl_r32_imm8        
  nop                       #  39    0x3b  1      OPC=nop                    nop                       #  39    0x39  1      OPC=nop                  
  nop                       #  40    0x3c  1      OPC=nop                    nop                       #  40    0x3a  1      OPC=nop                  
  nop                       #  41    0x3d  1      OPC=nop                    nop                       #  41    0x3b  1      OPC=nop                  
  nop                       #  42    0x3e  1      OPC=nop                    nop                       #  42    0x3c  1      OPC=nop                  
  nop                       #  43    0x3f  1      OPC=nop                    nop                       #  43    0x3d  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>                nop                       #  44    0x3e  1      OPC=nop                  
  popq %r11                 #  44    0x40  2      OPC=popq_r64_1             nop                       #  45    0x3f  1      OPC=nop                  
  andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8        .L_142ce0:                  #        0x40  0      OPC=<label>              
  addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64           nop                       #  46    0x40  1      OPC=nop                  
  jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64               nop                       #  47    0x41  1      OPC=nop                  
                                                                             nop                       #  48    0x42  1      OPC=nop                  
.size wcslen, .-wcslen                                                       nop                       #  49    0x43  1      OPC=nop                  
                                                                             nop                       #  50    0x44  1      OPC=nop                  
                                                                             nop                       #  51    0x45  1      OPC=nop                  
                                                                             nop                       #  52    0x46  1      OPC=nop                  
                                                                             nop                       #  53    0x47  1      OPC=nop                  
                                                                             nop                       #  54    0x48  1      OPC=nop                  
                                                                             nop                       #  55    0x49  1      OPC=nop                  
                                                                             nop                       #  56    0x4a  1      OPC=nop                  
                                                                             nop                       #  57    0x4b  1      OPC=nop                  
                                                                             nop                       #  58    0x4c  1      OPC=nop                  
                                                                             nopl %eax                 #  59    0x4d  3      OPC=nopl_r32             
                                                                             nop                       #  60    0x50  1      OPC=nop                  
                                                                             nop                       #  61    0x51  1      OPC=nop                  
                                                                             nop                       #  62    0x52  1      OPC=nop                  
                                                                             popq %r11                 #  63    0x53  2      OPC=popq_r64_1           
                                                                             andl $0xe0, %r11d         #  64    0x55  4      OPC=andl_r32_imm8        
                                                                             addq %r15, %r11           #  65    0x59  3      OPC=addq_r64_r64         
                                                                             jmpq %r11                 #  66    0x5c  3      OPC=jmpq_r64             
                                                                                                                                                      
                                                                           .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (82)                                                Lowest Known Correct Cost (83)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32         
  nop                       #  4     0x3   1      OPC=nop                    nop                       #  4     0x4   1      OPC=nop                  
  nop                       #  5     0x4   1      OPC=nop                    nop                       #  5     0x5   1      OPC=nop                  
  nop                       #  6     0x5   1      OPC=nop                    nop                       #  6     0x6   1      OPC=nop                  
  nop                       #  7     0x6   1      OPC=nop                    nop                       #  7     0x7   1      OPC=nop                  
  nop                       #  8     0x7   1      OPC=nop                    nop                       #  8     0x8   1      OPC=nop                  
  nop                       #  9     0x8   1      OPC=nop                    nop                       #  9     0x9   1      OPC=nop                  
  movq %rdi, %rdx           #  10    0x9   3      OPC=movq_r64_r64_1         nop                       #  10    0xa   1      OPC=nop                  
  movl (%r15,%rdx,1), %ecx  #  11    0xc   4      OPC=movl_r32_m32           nop                       #  11    0xb   1      OPC=nop                  
  xorl %eax, %eax           #  12    0x10  2      OPC=xorl_r32_r32           nop                       #  12    0xc   1      OPC=nop                  
  testl %r15d, %ecx         #  13    0x12  3      OPC=testl_r32_r32          nop                       #  13    0xd   1      OPC=nop                  
  je .L_142ce0              #  14    0x15  2      OPC=je_label               nop                       #  14    0xe   1      OPC=nop                  
  nop                       #  15    0x17  1      OPC=nop                    movl %edi, %edx           #  15    0xf   2      OPC=movl_r32_r32         
  nop                       #  16    0x18  1      OPC=nop                    movl (%r15,%rdx,1), %ecx  #  16    0x11  4      OPC=movl_r32_m32         
  nop                       #  17    0x19  1      OPC=nop                    testl %edi, %ecx          #  17    0x15  2      OPC=testl_r32_r32        
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x17  1      OPC=nop                  
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x18  1      OPC=nop                  
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x19  1      OPC=nop                  
  nop                       #  21    0x1d  1      OPC=nop                    je .L_142ce0              #  21    0x1a  2      OPC=je_label             
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1c  1      OPC=nop                  
  nop                       #  23    0x1f  1      OPC=nop                    nop                       #  23    0x1d  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>                nop                       #  24    0x1e  1      OPC=nop                  
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          nop                       #  25    0x1f  1      OPC=nop                  
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32         .L_142cc0:                  #        0x20  0      OPC=<label>              
  testl %eax, %ecx          #  26    0x27  2      OPC=testl_r32_r32          addl $0x4, %edx           #  26    0x20  3      OPC=addl_r32_imm8        
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              movl (%r15,%rdx,1), %eax  #  27    0x23  4      OPC=movl_r32_m32         
  xorl %edx, %eax           #  28    0x2b  2      OPC=xorl_r32_r32_1         testl %eax, %edx          #  28    0x27  2      OPC=testl_r32_r32        
  nop                       #  29    0x2d  1      OPC=nop                    jne .L_142cc0             #  29    0x29  2      OPC=jne_label            
  nop                       #  30    0x2e  1      OPC=nop                    nop                       #  30    0x2b  1      OPC=nop                  
  subl %edi, %eax           #  31    0x2f  2      OPC=subl_r32_r32           nop                       #  31    0x2c  1      OPC=nop                  
  sarw $0x2, %ax            #  32    0x31  4      OPC=sarw_r16_imm8          nop                       #  32    0x2d  1      OPC=nop                  
  nop                       #  33    0x35  1      OPC=nop                    nop                       #  33    0x2e  1      OPC=nop                  
  nop                       #  34    0x36  1      OPC=nop                    nop                       #  34    0x2f  1      OPC=nop                  
  nop                       #  35    0x37  1      OPC=nop                    nop                       #  35    0x30  1      OPC=nop                  
  nop                       #  36    0x38  1      OPC=nop                    subl %edi, %edx           #  36    0x31  2      OPC=subl_r32_r32_1       
  nop                       #  37    0x39  1      OPC=nop                    addl %edx, %eax           #  37    0x33  2      OPC=addl_r32_r32_1       
  nop                       #  38    0x3a  1      OPC=nop                    nop                       #  38    0x35  1      OPC=nop                  
  nop                       #  39    0x3b  1      OPC=nop                    nop                       #  39    0x36  1      OPC=nop                  
  nop                       #  40    0x3c  1      OPC=nop                    nop                       #  40    0x37  1      OPC=nop                  
  nop                       #  41    0x3d  1      OPC=nop                    nop                       #  41    0x38  1      OPC=nop                  
  nop                       #  42    0x3e  1      OPC=nop                    nop                       #  42    0x39  1      OPC=nop                  
  nop                       #  43    0x3f  1      OPC=nop                    nop                       #  43    0x3a  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>                nop                       #  44    0x3b  1      OPC=nop                  
  popq %r11                 #  44    0x40  2      OPC=popq_r64_1             nop                       #  45    0x3c  1      OPC=nop                  
  andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8          sarl $0x2, %eax           #  46    0x3d  3      OPC=sarl_r32_imm8        
  addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64         .L_142ce0:                  #        0x40  0      OPC=<label>              
  jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64               nop                       #  47    0x40  1      OPC=nop                  
                                                                             nop                       #  48    0x41  1      OPC=nop                  
.size wcslen, .-wcslen                                                       nop                       #  49    0x42  1      OPC=nop                  
                                                                             andb %ch, %ah             #  50    0x43  2      OPC=andb_rh_rh           
                                                                             nop                       #  51    0x45  1      OPC=nop                  
                                                                             nop                       #  52    0x46  1      OPC=nop                  
                                                                             nop                       #  53    0x47  1      OPC=nop                  
                                                                             nop                       #  54    0x48  1      OPC=nop                  
                                                                             nop                       #  55    0x49  1      OPC=nop                  
                                                                             nop                       #  56    0x4a  1      OPC=nop                  
                                                                             nop                       #  57    0x4b  1      OPC=nop                  
                                                                             nop                       #  58    0x4c  1      OPC=nop                  
                                                                             nop                       #  59    0x4d  1      OPC=nop                  
                                                                             nop                       #  60    0x4e  1      OPC=nop                  
                                                                             nop                       #  61    0x4f  1      OPC=nop                  
                                                                             popq %r11                 #  62    0x50  2      OPC=popq_r64_1           
                                                                             andl $0xe0, %r11d         #  63    0x52  4      OPC=andl_r32_imm8        
                                                                             addq %r15, %r11           #  64    0x56  3      OPC=addq_r64_r64         
                                                                             jmpq %r11                 #  65    0x59  3      OPC=jmpq_r64             
                                                                                                                                                      
                                                                           .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (82)                                                Lowest Known Correct Cost (82)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x2   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x3   1      OPC=nop                  
  nop                       #  4     0x3   1      OPC=nop                    nop                       #  4     0x4   1      OPC=nop                  
  nop                       #  5     0x4   1      OPC=nop                    nop                       #  5     0x5   1      OPC=nop                  
  nop                       #  6     0x5   1      OPC=nop                    nop                       #  6     0x6   1      OPC=nop                  
  nop                       #  7     0x6   1      OPC=nop                    nop                       #  7     0x7   1      OPC=nop                  
  nop                       #  8     0x7   1      OPC=nop                    nop                       #  8     0x8   1      OPC=nop                  
  nop                       #  9     0x8   1      OPC=nop                    nop                       #  9     0x9   1      OPC=nop                  
  movq %rdi, %rdx           #  10    0x9   3      OPC=movq_r64_r64_1         nop                       #  10    0xa   1      OPC=nop                  
  movl (%r15,%rdx,1), %ecx  #  11    0xc   4      OPC=movl_r32_m32           nop                       #  11    0xb   1      OPC=nop                  
  xorl %eax, %eax           #  12    0x10  2      OPC=xorl_r32_r32           nop                       #  12    0xc   1      OPC=nop                  
  testl %r15d, %ecx         #  13    0x12  3      OPC=testl_r32_r32          nop                       #  13    0xd   1      OPC=nop                  
  je .L_142ce0              #  14    0x15  2      OPC=je_label               nop                       #  14    0xe   1      OPC=nop                  
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0xf   1      OPC=nop                  
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x10  1      OPC=nop                  
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x11  1      OPC=nop                  
  nop                       #  18    0x1a  1      OPC=nop                    movl %edi, %edx           #  18    0x12  2      OPC=movl_r32_r32_1       
  nop                       #  19    0x1b  1      OPC=nop                    movl (%r15,%rdx,1), %ecx  #  19    0x14  4      OPC=movl_r32_m32         
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x18  1      OPC=nop                  
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x19  1      OPC=nop                  
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1a  1      OPC=nop                  
  nop                       #  23    0x1f  1      OPC=nop                    nop                       #  23    0x1b  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>                xorl %ecx, %eax           #  24    0x1c  2      OPC=xorl_r32_r32_1       
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          je .L_142ce0              #  25    0x1e  2      OPC=je_label             
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32         .L_142cc0:                  #        0x20  0      OPC=<label>              
  testl %eax, %ecx          #  26    0x27  2      OPC=testl_r32_r32          addl $0x4, %edx           #  26    0x20  3      OPC=addl_r32_imm8        
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              movl (%r15,%rdx,1), %eax  #  27    0x23  4      OPC=movl_r32_m32         
  xorl %edx, %eax           #  28    0x2b  2      OPC=xorl_r32_r32_1         andl $0xffffff80, %eax    #  28    0x27  5      OPC=andl_eax_imm32       
  nop                       #  29    0x2d  1      OPC=nop                    jne .L_142cc0             #  29    0x2c  2      OPC=jne_label            
  nop                       #  30    0x2e  1      OPC=nop                    subl %edi, %edx           #  30    0x2e  2      OPC=subl_r32_r32         
  subl %edi, %eax           #  31    0x2f  2      OPC=subl_r32_r32           nop                       #  31    0x30  1      OPC=nop                  
  sarw $0x2, %ax            #  32    0x31  4      OPC=sarw_r16_imm8          nop                       #  32    0x31  1      OPC=nop                  
  nop                       #  33    0x35  1      OPC=nop                    nop                       #  33    0x32  1      OPC=nop                  
  nop                       #  34    0x36  1      OPC=nop                    xorq %rdx, %rax           #  34    0x33  3      OPC=xorq_r64_r64         
  nop                       #  35    0x37  1      OPC=nop                    nop                       #  35    0x36  1      OPC=nop                  
  nop                       #  36    0x38  1      OPC=nop                    nop                       #  36    0x37  1      OPC=nop                  
  nop                       #  37    0x39  1      OPC=nop                    nop                       #  37    0x38  1      OPC=nop                  
  nop                       #  38    0x3a  1      OPC=nop                    nop                       #  38    0x39  1      OPC=nop                  
  nop                       #  39    0x3b  1      OPC=nop                    nop                       #  39    0x3a  1      OPC=nop                  
  nop                       #  40    0x3c  1      OPC=nop                    nop                       #  40    0x3b  1      OPC=nop                  
  nop                       #  41    0x3d  1      OPC=nop                    sarw $0x2, %ax            #  41    0x3c  4      OPC=sarw_r16_imm8        
  nop                       #  42    0x3e  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  43    0x3f  1      OPC=nop                    nop                       #  42    0x40  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>                nop                       #  43    0x41  1      OPC=nop                  
  popq %r11                 #  44    0x40  2      OPC=popq_r64_1             nop                       #  44    0x42  1      OPC=nop                  
  andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8          nop                       #  45    0x43  1      OPC=nop                  
  addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64           nop                       #  46    0x44  1      OPC=nop                  
  jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64               nop                       #  47    0x45  1      OPC=nop                  
                                                                             nop                       #  48    0x46  1      OPC=nop                  
.size wcslen, .-wcslen                                                       nop                       #  49    0x47  1      OPC=nop                  
                                                                             nop                       #  50    0x48  1      OPC=nop                  
                                                                             nop                       #  51    0x49  1      OPC=nop                  
                                                                             popq %r11                 #  52    0x4a  2      OPC=popq_r64_1           
                                                                             andl $0xe0, %r11d         #  53    0x4c  4      OPC=andl_r32_imm8        
                                                                             addq %r15, %r11           #  54    0x50  3      OPC=addq_r64_r64         
                                                                             jmpq %r11                 #  55    0x53  3      OPC=jmpq_r64             
                                                                                                                                                      
                                                                           .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  103.283s
Iterations/s:                  968.214

Starting cost:                 107
Lowest cost:                   82
Lowest correct cost:           82

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.369%       7.863%        7.598%       
Operand         8.406%       4.256%        1.757%       
Local Swap      8.216%       4.179%        3.463%       
Global Swap     8.351%       7.296%        6.46%        
Global Copy     8.245%       7.633%        7.633%       
ReplaceNop      8.335%       7.83%         7.384%       
Rotate          8.388%       7.517%        5.412%       
Delete          8.307%       7.833%        6.571%       
OpcodeWidth     8.259%       7.468%        7.264%       
Add Nops        8.333%       8.333%        6.357%       
Instruction     8.418%       4.885%        0.56%        
2xWeighted      0%           0%            0%           
Memory+Swap     8.373%       1.531%        0.003%       
                                                        
Total           100%         76.624%       60.462%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  232.343s
Iterations/s:                  860.796

Starting cost:                 107
Lowest cost:                   82
Lowest correct cost:           82

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.359%       7.9895%       7.7735%      
Operand         8.4215%      4.4355%       1.8285%      
Local Swap      8.242%       4.185%        3.454%       
Global Swap     8.4255%      7.6265%       6.9485%      
Global Copy     8.2625%      7.7805%       7.7805%      
ReplaceNop      8.293%       7.9175%       7.582%       
Rotate          8.3985%      7.7495%       6.0055%      
Delete          8.348%       7.9905%       6.945%       
OpcodeWidth     8.3595%      7.74%         7.5675%      
Add Nops        8.2885%      8.2885%       6.6845%      
Instruction     8.2925%      4.8265%       0.5325%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3095%      1.4965%       0.0015%      
                                                        
Total           100%         78.026%       63.1035%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  403.472s
Iterations/s:                  743.546

Starting cost:                 107
Lowest cost:                   82
Lowest correct cost:           82

Move Type       Proposed     Succeeded     Accepted        
                                                           
Opcode          8.34133%     8.03767%      7.85233%        
Operand         8.39467%     4.58233%      1.94933%        
Local Swap      8.28667%     4.16233%      3.41767%        
Global Swap     8.42933%     7.783%        7.21233%        
Global Copy     8.28867%     7.90067%      7.90067%        
ReplaceNop      8.28467%     7.98567%      7.71767%        
Rotate          8.349%       7.833%        6.353%          
Delete          8.34767%     8.05033%      7.11567%        
OpcodeWidth     8.33367%     7.82533%      7.68433%        
Add Nops        8.30833%     8.30833%      6.93867%        
Instruction     8.31367%     4.816%        0.537%          
2xWeighted      0%           0%            0%              
Memory+Swap     8.32233%     1.54233%      0.00233333%     
                                                           
Total           100%         78.827%       64.681%         

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  629.877s
Iterations/s:                  635.045

Starting cost:                 107
Lowest cost:                   82
Lowest correct cost:           82

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.32425%     8.07175%      7.9165%      
Operand         8.3715%      4.7585%       2.13875%     
Local Swap      8.30625%     4.14775%      3.36775%     
Global Swap     8.391%       7.8405%       7.35025%     
Global Copy     8.29725%     7.976%        7.976%       
ReplaceNop      8.32475%     8.06825%      7.84825%     
Rotate          8.3345%      7.9055%       6.56025%     
Delete          8.362%       8.11%         7.201%       
OpcodeWidth     8.3225%      7.88675%      7.76125%     
Add Nops        8.2875%      8.2875%       7.024%       
Instruction     8.32625%     4.859%        0.56025%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.35225%     1.58025%      0.00175%     
                                                        
Total           100%         79.4917%      65.706%      

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  927.625s
Iterations/s:                  539.011

Starting cost:                 107
Lowest cost:                   82
Lowest correct cost:           82

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3296%      8.1108%       7.9784%      
Operand         8.37%        4.9312%       2.379%       
Local Swap      8.3286%      4.201%        3.394%       
Global Swap     8.3652%      7.888%        7.4564%      
Global Copy     8.3006%      8.0236%       8.0236%      
ReplaceNop      8.333%       8.1082%       7.9186%      
Rotate          8.3474%      7.9806%       6.6794%      
Delete          8.3364%      8.1156%       7.1552%      
OpcodeWidth     8.3258%      7.9388%       7.8208%      
Add Nops        8.2634%      8.2634%       6.9922%      
Instruction     8.3288%      4.9044%       0.5988%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3712%      1.5872%       0.0016%      
                                                        
Total           100%         80.0528%      66.398%      

********************************************************************************

TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
nop 
nop 
nop 
xorl %ecx, %eax
nop 
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 2
SAME MAP
     0 1 
------------------
0  |   1 
1  |     

NEXT MAP
     0 1 
------------------
0  |   0 
1  |     

TOTAL CELLS: 1
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
ALIASING CASES: 1
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
nop 
nop 
nop 
xorl %ecx, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
andl $0xffffff80, %eax
nop 
subl %edi, %edx
nop 
nop 
nop 
xorq %rdx, %rax
nop 
nop 
nop 
nop 
nop 
nop 
sarw $0x2, %ax
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   1 0 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
nop 
nop 
nop 
xorl %ecx, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
andl $0xffffff80, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
andl $0xffffff80, %eax
nop 
subl %edi, %edx
nop 
nop 
nop 
xorq %rdx, %rax
nop 
nop 
nop 
nop 
nop 
nop 
sarw $0x2, %ax
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   1 0 0 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
Access 3 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
nop 
nop 
nop 
xorl %ecx, %eax
nop 
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   0 1 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
nop 
nop 
nop 
xorl %ecx, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
andl $0xffffff80, %eax
nop 
subl %edi, %edx
nop 
nop 
nop 
xorq %rdx, %rax
nop 
nop 
nop 
nop 
nop 
nop 
sarw $0x2, %ax
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 1 0 
1  |     0 1 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
nop 
nop 
nop 
xorl %ecx, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
andl $0xffffff80, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
andl $0xffffff80, %eax
nop 
subl %edi, %edx
nop 
nop 
nop 
xorq %rdx, %rax
nop 
nop 
nop 
nop 
nop 
nop 
sarw $0x2, %ax
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 1 0 0 
1  |     0 1 0 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 4)
Access 4 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
nop 
nop 
nop 
xorl %ecx, %eax
nop 
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 0 1 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
nop 
nop 
nop 
nop 
xorl %ecx, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
andl $0xffffff80, %eax
nop 
subl %edi, %edx
nop 
nop 
nop 
xorq %rdx, %rax
nop 
nop 
nop 
nop 
nop 
nop 
sarw $0x2, %ax
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 0 1 0 
1  |     0 0 1 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 4 (cell size 4)
Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     00 00 00 00 00 00 00 00
%rcx     00 00 00 00 00 00 00 00
%rdx     00 00 00 00 00 00 00 00
%rbx     00 00 00 00 00 00 00 00
%rsp     00 00 00 00 00 00 00 00
%rbp     00 00 00 00 00 00 00 00
%rsi     00 00 00 00 00 00 00 00
%rdi     00 00 00 00 f2 d3 7f f9
%r8      00 00 00 00 00 00 00 00
%r9      00 00 00 00 00 00 00 00
%r10     00 00 00 00 00 00 00 00
%r11     00 00 00 00 00 00 00 00
%r12     00 00 00 00 00 00 00 00
%r13     00 00 00 00 00 00 00 00
%r14     00 00 00 00 00 00 00 00
%r15     7f ff ff ff c0 00 40 05

%ymm0    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm1    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm2    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm3    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm4    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm5    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm6    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm7    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm8    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm9    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm10   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm11   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm12   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm13   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm14   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm15   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000007 00000000 ]
[ 0 valid rows shown ]

[ 80000000 b2d3c010 - 80000000 b2d3bfe0 ]
[ 3 valid rows shown ]

80000000 b2d3c008   . . . . . . v v   00 00 00 00 00 00 00 00 
80000000 b2d3c000   v v v v v v v v   00 00 00 00 00 20 ff ff 
80000000 b2d3bff8   v v . . . . . .   ff ff 00 00 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (80)                                                Lowest Known Correct Cost (100)                                           
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                    movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x1   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x2   1      OPC=nop                    movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  4     0x3   2      OPC=xorl_r32_r32           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl %edi, %edi           #  5     0x5   2      OPC=movl_r32_r32_1         movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  movl (%r15,%rdi,1), %ecx  #  6     0x7   4      OPC=movl_r32_m32           testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xb   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  movq %rdi, %rdx           #  8     0xc   3      OPC=movq_r64_r64           nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0xf   1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x10  1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x11  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  testl %ecx, %ecx          #  12    0x12  2      OPC=testl_r32_r32          nop                       #  12    0x15  1      OPC=nop                 
  je .L_142ce0              #  13    0x14  2      OPC=je_label               nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x1e  0      OPC=<label>                nop                       #  22    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  22    0x1e  3      OPC=addl_r32_imm8        .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  23    0x21  4      OPC=movl_r32_m32           addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  testl %eax, %ecx          #  24    0x25  2      OPC=testl_r32_r32          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  25    0x27  2      OPC=jne_label              movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl %edx, %eax           #  26    0x29  2      OPC=movl_r32_r32           testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  nop                       #  27    0x2b  1      OPC=nop                    jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  subl %edi, %eax           #  28    0x2c  2      OPC=subl_r32_r32           movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2e  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2f  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x32  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x33  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x34  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x35  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x36  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x37  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x38  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x39  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  sarl $0x2, %eax           #  41    0x3a  3      OPC=sarl_r32_imm8          nop                       #  41    0x3e  1      OPC=nop                 
.L_142ce0:                  #        0x3d  0      OPC=<label>                nop                       #  42    0x3f  1      OPC=nop                 
  popq %r11                 #  42    0x3d  2      OPC=popq_r64_1           .L_142ce0:                  #        0x40  0      OPC=<label>             
  andl $0xe0, %r11d         #  43    0x3f  4      OPC=andl_r32_imm8          popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  addq %r15, %r11           #  44    0x43  3      OPC=addq_r64_r64           andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  jmpq %r11                 #  45    0x46  3      OPC=jmpq_r64               addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
                                                                             jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
.size wcslen, .-wcslen                                                                                                                               
                                                                           .size wcslen, .-wcslen                                                    
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (79)                                                Lowest Known Correct Cost (100)                                           
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                    movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  andb %dil, %dil           #  2     0x1   3      OPC=andb_r8_r8_1           xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x4   1      OPC=nop                    movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x5   1      OPC=nop                    movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  xorl %eax, %eax           #  5     0x6   2      OPC=xorl_r32_r32           movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  movl %edi, %edi           #  6     0x8   2      OPC=movl_r32_r32_1         testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  movl (%r15,%rdi,1), %ecx  #  7     0xa   4      OPC=movl_r32_m32           je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xe   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0xf   1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x10  1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x11  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  testl %edi, %ecx          #  12    0x12  2      OPC=testl_r32_r32          nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x14  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x15  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  je .L_142ce0              #  15    0x16  2      OPC=je_label               nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  movq %rdi, %rdx           #  21    0x1d  3      OPC=movq_r64_r64           nop                       #  21    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>                nop                       #  22    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8        .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32           addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  testl %eax, %edx          #  24    0x27  2      OPC=testl_r32_r32          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  25    0x29  2      OPC=jne_label              movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl %edx, %eax           #  26    0x2b  2      OPC=movl_r32_r32           testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  nop                       #  27    0x2d  1      OPC=nop                    jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  subl %edi, %eax           #  28    0x2e  2      OPC=subl_r32_r32           movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x30  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x31  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x32  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x33  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  sarl $0x2, %eax           #  41    0x3c  3      OPC=sarl_r32_imm8          nop                       #  41    0x3e  1      OPC=nop                 
.L_142ce0:                  #        0x3f  0      OPC=<label>                nop                       #  42    0x3f  1      OPC=nop                 
  popq %r11                 #  42    0x3f  2      OPC=popq_r64_1           .L_142ce0:                  #        0x40  0      OPC=<label>             
  andl $0xe0, %r11d         #  43    0x41  4      OPC=andl_r32_imm8          popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  addq %r15, %r11           #  44    0x45  3      OPC=addq_r64_r64           andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  jmpq %r11                 #  45    0x48  3      OPC=jmpq_r64               addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
                                                                             jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
.size wcslen, .-wcslen                                                                                                                               
                                                                           .size wcslen, .-wcslen                                                    
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (78)                                                Lowest Known Correct Cost (78)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  andb %dil, %dil           #  2     0x1   3      OPC=andb_r8_r8_1           andb %dil, %dil           #  2     0x1   3      OPC=andb_r8_r8_1         
  nop                       #  3     0x4   1      OPC=nop                    nop                       #  3     0x4   1      OPC=nop                  
  nop                       #  4     0x5   1      OPC=nop                    nop                       #  4     0x5   1      OPC=nop                  
  xorl %eax, %eax           #  5     0x6   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  5     0x6   2      OPC=xorl_r32_r32         
  movl %edi, %edi           #  6     0x8   2      OPC=movl_r32_r32_1         movl %edi, %edi           #  6     0x8   2      OPC=movl_r32_r32_1       
  movl (%r15,%rdi,1), %ecx  #  7     0xa   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  7     0xa   4      OPC=movl_r32_m32         
  nop                       #  8     0xe   1      OPC=nop                    nop                       #  8     0xe   1      OPC=nop                  
  nop                       #  9     0xf   1      OPC=nop                    nop                       #  9     0xf   1      OPC=nop                  
  nop                       #  10    0x10  1      OPC=nop                    nop                       #  10    0x10  1      OPC=nop                  
  nop                       #  11    0x11  1      OPC=nop                    nop                       #  11    0x11  1      OPC=nop                  
  testl %edi, %ecx          #  12    0x12  2      OPC=testl_r32_r32          testl %edi, %ecx          #  12    0x12  2      OPC=testl_r32_r32        
  nop                       #  13    0x14  1      OPC=nop                    nop                       #  13    0x14  1      OPC=nop                  
  nop                       #  14    0x15  1      OPC=nop                    nop                       #  14    0x15  1      OPC=nop                  
  je .L_142ce0              #  15    0x16  2      OPC=je_label               je .L_142ce0              #  15    0x16  2      OPC=je_label             
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x18  1      OPC=nop                  
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x19  1      OPC=nop                  
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1a  1      OPC=nop                  
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1b  1      OPC=nop                  
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1c  1      OPC=nop                  
  movq %rdi, %rdx           #  21    0x1d  3      OPC=movq_r64_r64           movq %rdi, %rdx           #  21    0x1d  3      OPC=movq_r64_r64         
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32         
  testl %eax, %edx          #  24    0x27  2      OPC=testl_r32_r32          testl %eax, %edx          #  24    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  25    0x29  2      OPC=jne_label              jne .L_142cc0             #  25    0x29  2      OPC=jne_label            
  movl %edx, %eax           #  26    0x2b  2      OPC=movl_r32_r32           movl %edx, %eax           #  26    0x2b  2      OPC=movl_r32_r32         
  nop                       #  27    0x2d  1      OPC=nop                    nop                       #  27    0x2d  1      OPC=nop                  
  subl %edi, %eax           #  28    0x2e  2      OPC=subl_r32_r32           subl %edi, %eax           #  28    0x2e  2      OPC=subl_r32_r32         
  nop                       #  29    0x30  1      OPC=nop                    nop                       #  29    0x30  1      OPC=nop                  
  nop                       #  30    0x31  1      OPC=nop                    nop                       #  30    0x31  1      OPC=nop                  
  nop                       #  31    0x32  1      OPC=nop                    nop                       #  31    0x32  1      OPC=nop                  
  nop                       #  32    0x33  1      OPC=nop                    nop                       #  32    0x33  1      OPC=nop                  
  nop                       #  33    0x34  1      OPC=nop                    nop                       #  33    0x34  1      OPC=nop                  
  nop                       #  34    0x35  1      OPC=nop                    nop                       #  34    0x35  1      OPC=nop                  
  nop                       #  35    0x36  1      OPC=nop                    nop                       #  35    0x36  1      OPC=nop                  
  nop                       #  36    0x37  1      OPC=nop                    nop                       #  36    0x37  1      OPC=nop                  
  nop                       #  37    0x38  1      OPC=nop                    nop                       #  37    0x38  1      OPC=nop                  
  nop                       #  38    0x39  1      OPC=nop                    nop                       #  38    0x39  1      OPC=nop                  
  nop                       #  39    0x3a  1      OPC=nop                    nop                       #  39    0x3a  1      OPC=nop                  
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3b  1      OPC=nop                  
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3c  1      OPC=nop                  
  sarl $0x2, %eax           #  42    0x3d  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  42    0x3d  3      OPC=sarl_r32_imm8        
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  popq %r11                 #  43    0x40  2      OPC=popq_r64_1             popq %r11                 #  43    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64           addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64               jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (77)                                                Lowest Known Correct Cost (77)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32         
  nop                       #  4     0x4   1      OPC=nop                    nop                       #  4     0x4   1      OPC=nop                  
  nop                       #  5     0x5   1      OPC=nop                    nop                       #  5     0x5   1      OPC=nop                  
  nop                       #  6     0x6   1      OPC=nop                    nop                       #  6     0x6   1      OPC=nop                  
  nop                       #  7     0x7   1      OPC=nop                    nop                       #  7     0x7   1      OPC=nop                  
  nop                       #  8     0x8   1      OPC=nop                    nop                       #  8     0x8   1      OPC=nop                  
  movl %edi, %edi           #  9     0x9   2      OPC=movl_r32_r32_1         movl %edi, %edi           #  9     0x9   2      OPC=movl_r32_r32_1       
  movl (%r15,%rdi,1), %ecx  #  10    0xb   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  10    0xb   4      OPC=movl_r32_m32         
  nop                       #  11    0xf   1      OPC=nop                    nop                       #  11    0xf   1      OPC=nop                  
  nop                       #  12    0x10  1      OPC=nop                    nop                       #  12    0x10  1      OPC=nop                  
  nop                       #  13    0x11  1      OPC=nop                    nop                       #  13    0x11  1      OPC=nop                  
  nop                       #  14    0x12  1      OPC=nop                    nop                       #  14    0x12  1      OPC=nop                  
  nop                       #  15    0x13  1      OPC=nop                    nop                       #  15    0x13  1      OPC=nop                  
  testl %r15d, %ecx         #  16    0x14  3      OPC=testl_r32_r32          testl %r15d, %ecx         #  16    0x14  3      OPC=testl_r32_r32        
  je .L_142ce0              #  17    0x17  2      OPC=je_label               je .L_142ce0              #  17    0x17  2      OPC=je_label             
  nop                       #  18    0x19  1      OPC=nop                    nop                       #  18    0x19  1      OPC=nop                  
  nop                       #  19    0x1a  1      OPC=nop                    nop                       #  19    0x1a  1      OPC=nop                  
  nop                       #  20    0x1b  1      OPC=nop                    nop                       #  20    0x1b  1      OPC=nop                  
  nop                       #  21    0x1c  1      OPC=nop                    nop                       #  21    0x1c  1      OPC=nop                  
  movq %rdi, %rdx           #  22    0x1d  3      OPC=movq_r64_r64           movq %rdi, %rdx           #  22    0x1d  3      OPC=movq_r64_r64         
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32         
  testl %eax, %edx          #  25    0x27  2      OPC=testl_r32_r32          testl %eax, %edx          #  25    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label              jne .L_142cc0             #  26    0x29  2      OPC=jne_label            
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32           movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32         
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32           subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32         
  nop                       #  29    0x2f  1      OPC=nop                    nop                       #  29    0x2f  1      OPC=nop                  
  sarq $0x2, %rax           #  30    0x30  4      OPC=sarq_r64_imm8          sarq $0x2, %rax           #  30    0x30  4      OPC=sarq_r64_imm8        
  nop                       #  31    0x34  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                  
  nop                       #  32    0x35  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                  
  nop                       #  33    0x36  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                  
  nop                       #  34    0x37  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                  
  nop                       #  35    0x38  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                  
  nop                       #  36    0x39  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                  
  nop                       #  37    0x3a  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                  
  nop                       #  38    0x3b  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                  
  nop                       #  39    0x3c  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                  
  nop                       #  40    0x3d  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                  
  nop                       #  41    0x3e  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                  
  nop                       #  42    0x3f  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  popq %r11                 #  43    0x40  2      OPC=popq_r64_1             popq %r11                 #  43    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64           addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64               jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  112.222s
Iterations/s:                  891.088

Starting cost:                 100
Lowest cost:                   77
Lowest correct cost:           77

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.323%       7.798%        7.541%       
Operand         8.359%       4.328%        1.86%        
Local Swap      8.203%       3.972%        3.088%       
Global Swap     8.3%         7.288%        6.524%       
Global Copy     8.25%        7.585%        7.585%       
ReplaceNop      8.249%       7.773%        7.352%       
Rotate          8.292%       7.515%        5.665%       
Delete          8.338%       7.862%        6.634%       
OpcodeWidth     8.487%       7.659%        7.453%       
Add Nops        8.374%       8.374%        6.55%        
Instruction     8.322%       4.814%        0.599%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.503%       1.471%        0.001%       
                                                        
Total           100%         76.439%       60.852%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  285.811s
Iterations/s:                  699.763

Starting cost:                 100
Lowest cost:                   77
Lowest correct cost:           77

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.2485%      7.927%        7.748%       
Operand         8.3765%      4.6785%       2.16%        
Local Swap      8.269%       3.895%        2.9725%      
Global Swap     8.331%       7.671%        7.135%       
Global Copy     8.2695%      7.8395%       7.8395%      
ReplaceNop      8.274%       7.948%        7.671%       
Rotate          8.299%       7.78%         6.3835%      
Delete          8.3585%      8.0495%       7.08%        
OpcodeWidth     8.4515%      7.8885%       7.7435%      
Add Nops        8.3435%      8.3435%       6.983%       
Instruction     8.357%       4.829%        0.6235%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.422%       1.531%        0.0005%      
                                                        
Total           100%         78.3805%      64.34%       

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  503.09s
Iterations/s:                  596.315

Starting cost:                 100
Lowest cost:                   77
Lowest correct cost:           77

Move Type       Proposed     Succeeded     Accepted        
                                                           
Opcode          8.28133%     8.038%        7.90167%        
Operand         8.39233%     4.90967%      2.32%           
Local Swap      8.268%       3.928%        3.02%           
Global Swap     8.32167%     7.79933%      7.366%          
Global Copy     8.30133%     7.97133%      7.97133%        
ReplaceNop      8.28667%     8.03%         7.818%          
Rotate          8.29967%     7.88733%      6.68733%        
Delete          8.33%        8.09%         7.21367%        
OpcodeWidth     8.43567%     7.99533%      7.87267%        
Add Nops        8.3%         8.3%          7.11233%        
Instruction     8.39133%     4.827%        0.623667%       
2xWeighted      0%           0%            0%              
Memory+Swap     8.392%       1.501%        0.00133333%     
                                                           
Total           100%         79.277%       65.908%         

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  755.163s
Iterations/s:                  529.687

Starting cost:                 100
Lowest cost:                   77
Lowest correct cost:           77

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.2835%      8.0805%       7.9645%      
Operand         8.40175%     5.0405%       2.4265%      
Local Swap      8.304%       3.977%        3.07625%     
Global Swap     8.27575%     7.83375%      7.46375%     
Global Copy     8.287%       8.00875%      8.00875%     
ReplaceNop      8.26475%     8.053%        7.8765%      
Rotate          8.317%       7.9685%       6.8565%      
Delete          8.35025%     8.14475%      7.28775%     
OpcodeWidth     8.406%       8.03125%      7.92075%     
Add Nops        8.30975%     8.30975%      7.182%       
Instruction     8.3815%      4.82175%      0.6235%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.41875%     1.51875%      0.0015%      
                                                        
Total           100%         79.7883%      66.6882%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  1025.24s
Iterations/s:                  487.69

Starting cost:                 100
Lowest cost:                   77
Lowest correct cost:           77

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.3074%      8.1318%       8.0296%      
Operand         8.3792%      5.1036%       2.525%       
Local Swap      8.3322%      4.0424%       3.1252%      
Global Swap     8.2582%      7.8686%       7.5382%      
Global Copy     8.29%        8.0456%       8.0456%      
ReplaceNop      8.2852%      8.0984%       7.9452%      
Rotate          8.2854%      7.9786%       6.9282%      
Delete          8.3604%      8.1796%       7.3366%      
OpcodeWidth     8.3996%      8.069%        7.969%       
Add Nops        8.2926%      8.2926%       7.2096%      
Instruction     8.3784%      4.8372%       0.6232%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.4314%      1.5412%       0.0012%      
                                                        
Total           100%         80.1886%      67.2766%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     31 59 1a b3 85 1a c1 be
%rcx     11 73 b3 0e 0a dd 9e e6
%rdx     c1 5a 16 14 85 1a 50 0b
%rbx     e1 70 a1 64 09 72 ae da
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 01 45 37 bd
%rdi     00 00 00 00 01 45 3d 53
%r8      b6 97 1d 62 7b 15 fe 23
%r9      7a 27 16 f4 ab 45 ba d9
%r10     34 29 ee 7c d5 f4 20 a8
%r11     7f ce 09 f5 9e 3c 57 32
%r12     7e 41 b1 05 9b 09 fb c8
%r13     d0 c6 0e b1 38 fb bb b0
%r14     fe 66 f9 30 0f 75 d1 1f
%r15     00 00 00 00 01 29 92 c0

%ymm0    51 a4 b6 7a e6 45 93 12 90 59 9a 63 08 3f f3 6b 22 fa 9c b4 31 e3 4a f0 9e da 8b d5 38 60 c5 dd
%ymm1    df 45 91 27 0d c1 43 67 09 b7 fc 95 f7 da df 83 8e c0 ce 79 a1 5e aa 18 89 db 8e e2 0c 52 a2 a5
%ymm2    6d 01 1c 23 8f 1f 46 3c 9c 82 00 53 d8 df 3a 11 0b b8 e5 f1 0d 07 b8 64 af ad 18 08 79 87 11 a7
%ymm3    fb 8f b1 d3 b5 7f eb 73 e5 07 33 69 2b b3 ec 07 13 f3 36 2e b0 6d 98 b7 b4 9a 58 83 ba 3e bf bd
%ymm4    c3 6f 32 63 94 a9 bb 9e 41 ec 7d ca 5b 03 9d 3f 70 59 f3 37 b7 0c 21 a7 78 c6 7d 77 15 90 69 32
%ymm5    80 34 c0 87 e4 6e 53 b9 ba 97 d2 62 3c 3a 4c 97 4e c2 60 45 ca 76 5f 84 58 9d 0e 2a 15 74 89 24
%ymm6    ce 31 a9 71 19 4e 4b 22 c2 ca 26 f8 8e 1b 4e d2 ae 85 59 35 b8 e5 0a 19 0c 28 0a 3d 1a ea d7 1c
%ymm7    21 43 15 1f a7 73 fa 67 1a 7d f3 21 68 70 8e 59 b8 e9 d0 00 5b a7 a9 ef 2d e4 f2 42 4a 3f 20 d2
%ymm8    52 6a 1c b7 79 9c ea 2b 37 48 cf 49 74 51 b3 eb b3 00 2e 36 0f 1d 22 22 41 61 47 91 7f 2d 7b e5
%ymm9    76 0f 21 7c 37 f8 3e 16 05 18 04 8e ea ff 9f 57 74 21 1e 98 03 16 9b 17 87 29 aa 9c af 33 ee 80
%ymm10   fa d1 ab 7c 54 b2 41 ce c6 0f fa df d3 85 95 58 dd d7 49 09 5e a4 28 dd 75 02 b6 e6 82 58 c2 df
%ymm11   70 33 a6 d6 df 52 06 e4 a6 9d 9c 95 36 c5 89 fe ce 8a 84 bd 2f 04 6e ff 6e 1d 12 9c c3 ed dc c3
%ymm12   e0 ba ae 53 2c 43 ed 71 a6 c0 d0 55 18 40 0d 77 8b 88 2b 0d 27 6b e3 de 18 ca 26 b3 f8 05 06 9b
%ymm13   9a 81 07 2d 3a 41 12 20 61 9a 71 34 78 18 b9 95 74 52 e1 de cf c5 4a d0 ad 29 26 18 ab 10 58 47
%ymm14   7c 81 2a 84 ea 61 9b 8f 52 eb 6e 30 44 83 c5 bf c7 86 12 c0 7b d1 2e 44 a7 0b c9 90 4e 0d 03 6f
%ymm15   71 38 8c dd fa 92 23 7f 33 4b cd 68 87 9a ae 4b 50 59 f6 2a 9c 8e 45 43 c7 93 71 fc 49 f4 89 6d

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   d8 bf e7 e3 4f 1d 13 d7 
00000006 fffffff0   v v v v v v v v   f3 dc fb 09 68 f9 f5 89 
00000006 ffffffe8   v v v v v v v v   4f 80 6f 89 8f 70 ed 9a 
00000006 ffffffe0   v v v v v v v v   df 44 6f 0f ee 74 1c e8 

[ 00000000 026ed228 - 00000000 026eca20 ]
[ 36 valid rows shown ]

00000000 026ed128   . v v v v v v v   00 00 00 00 00 8a 4a d3 
00000000 026ed120   v v v v v v v v   93 79 3d 19 9b a3 33 eb 
00000000 026ed118   v v v v v v v v   67 87 3c bd 04 92 fd 99 
00000000 026ed110   v v v v v v v v   9f f2 b3 26 2c cc a8 73 
00000000 026ed108   v v v v v v v v   5d 3d 6b 6f f7 d1 96 79 
00000000 026ed100   v v v v v v v v   dd 9a e6 b0 3c ac ae a9 
00000000 026ed0f8   v v v v v v v v   83 aa c0 6b f3 0b e6 78 
00000000 026ed0f0   v v v v v v v v   c6 e6 7e b8 6f 6a 08 ee 
00000000 026ed0e8   v v v v v v v v   46 9a d9 7d f4 fc 93 2d 
00000000 026ed0e0   v v v v v v v v   5e 3a 02 92 28 04 e9 18 
00000000 026ed0d8   v v v v v v v v   b6 b5 85 7b 44 ff fa 0e 
00000000 026ed0d0   v v v v v v v v   77 14 b0 81 24 6e 14 c9 
00000000 026ed0c8   v v v v v v v v   a6 dd ea c7 9e 59 2b cb 
00000000 026ed0c0   v v v v v v v v   11 fd a9 10 4e 34 93 3b 
00000000 026ed0b8   v v v v v v v v   70 85 81 36 88 e6 5d f6 
00000000 026ed0b0   v v v v v v v v   f0 42 6c 5b c8 37 df df 
00000000 026ed0a8   v v v v v v v v   3f 90 9c d2 48 2d 22 01 
00000000 026ed0a0   v v v v v v v v   af 74 7c 12 c4 0e ba 3a 
00000000 026ed098   v v v v v v v v   fd 9b d9 91 f6 1b 8a 95 
00000000 026ed090   v v v v v v v v   7a 35 7c e9 f7 4e 43 6d 
00000000 026ed088   v v v v v v v v   48 6e b0 46 7e ae 85 9d 
00000000 026ed080   v v v v v v v v   b0 6e 58 8a 10 1f 61 6c 
00000000 026ed078   v v v v v v v v   a5 be 07 61 a0 54 19 91 
00000000 026ed070   v v v v v v v v   3e 2d a6 8a 06 d4 bd 02 
00000000 026ed068   v v v v v v v v   f0 02 c1 e1 fd 16 45 26 
00000000 026ed060   v v v v v v v v   5e 38 29 a4 7a a3 64 44 
00000000 026ed058   v v v v v v v v   1d b3 48 0f 16 eb eb b3 
00000000 026ed050   v v v v v v v v   27 d1 cd 04 e4 bb 40 0f 
00000000 026ed048   v v v v v v v v   04 ab 9c d7 b8 0c fd b9 
00000000 026ed040   v v v v v v v v   be 86 40 36 85 b1 fc 0e 
00000000 026ed038   v v v v v v v v   9c 5c 23 63 c4 1a e6 23 
00000000 026ed030   v v v v v v v v   ed 12 c3 d4 b6 95 73 2d 
00000000 026ed028   v v v v v v v v   f2 8f d9 ff 4e 77 79 87 
00000000 026ed020   v v v v v v v v   00 8e 3a 77 15 9f eb 39 
00000000 026ed018   v v v v v v v v   98 09 7d a0 2c d3 60 19 
00000000 026ed010   v v v v v . . .   5c 2e 61 89 a3 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (87)                                               Lowest Known Correct Cost (112)                                           
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32          movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xf   2      OPC=je_label              je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x11  1      OPC=nop                   nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x12  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x13  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32         movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label             testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  sarl $0x2, %eax           #  29    0x2f  3      OPC=sarl_r32_imm8         subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x32  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x33  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x34  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x35  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x38  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x39  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3a  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3b  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
.L_142ce0:                  #        0x3e  0      OPC=<label>               nop                       #  42    0x3f  1      OPC=nop                 
  popq %r11                 #  42    0x3e  2      OPC=popq_r64_1          .L_142ce0:                  #        0x40  0      OPC=<label>             
  andl $0xe0, %r11d         #  43    0x40  4      OPC=andl_r32_imm8         popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  addq %r15, %r11           #  44    0x44  3      OPC=addq_r64_r64          andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  jmpq %r11                 #  45    0x47  3      OPC=jmpq_r64              addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
                                                                            jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
.size wcslen, .-wcslen                                                                                                                              
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (87)                                               Lowest Known Correct Cost (87)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32          xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32        
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32          nop                       #  2     0x2   1      OPC=nop                 
  movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32          movl %edi, %edi           #  3     0x3   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  4     0x5   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64          movq %rdi, %rdx           #  5     0x9   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  6     0xc   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xf   2      OPC=je_label              je .L_142ce0              #  7     0xe   2      OPC=je_label            
  nop                       #  8     0x11  1      OPC=nop                   nop                       #  8     0x10  1      OPC=nop                 
  nop                       #  9     0x12  1      OPC=nop                   nop                       #  9     0x11  1      OPC=nop                 
  nop                       #  10    0x13  1      OPC=nop                   nop                       #  10    0x12  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                   nop                       #  11    0x13  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                   nop                       #  12    0x14  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                   nop                       #  13    0x15  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                   nop                       #  14    0x16  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                   nop                       #  15    0x17  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                   nop                       #  16    0x18  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                   nop                       #  17    0x19  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                   nop                       #  18    0x1a  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                   nop                       #  19    0x1b  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                   nop                       #  20    0x1c  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                   nop                       #  21    0x1d  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                   nop                       #  22    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>               nop                       #  23    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32          addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8       
  testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32         movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32        
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label             testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32       
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32          jne .L_142cc0             #  27    0x29  2      OPC=jne_label           
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32          movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32        
  sarl $0x2, %eax           #  29    0x2f  3      OPC=sarl_r32_imm8         subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32        
  nop                       #  30    0x32  1      OPC=nop                   sarl $0x2, %eax           #  30    0x2f  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x33  1      OPC=nop                   nop                       #  31    0x32  1      OPC=nop                 
  nop                       #  32    0x34  1      OPC=nop                   nop                       #  32    0x33  1      OPC=nop                 
  nop                       #  33    0x35  1      OPC=nop                   nop                       #  33    0x34  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                   nop                       #  34    0x35  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                   nop                       #  35    0x36  1      OPC=nop                 
  nop                       #  36    0x38  1      OPC=nop                   nop                       #  36    0x37  1      OPC=nop                 
  nop                       #  37    0x39  1      OPC=nop                   nop                       #  37    0x38  1      OPC=nop                 
  nop                       #  38    0x3a  1      OPC=nop                   nop                       #  38    0x39  1      OPC=nop                 
  nop                       #  39    0x3b  1      OPC=nop                   nopl %eax                 #  39    0x3a  3      OPC=nopl_r32            
  nop                       #  40    0x3c  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
.L_142ce0:                  #        0x3e  0      OPC=<label>               nop                       #  42    0x3f  1      OPC=nop                 
  popq %r11                 #  42    0x3e  2      OPC=popq_r64_1          .L_142ce0:                  #        0x40  0      OPC=<label>             
  andl $0xe0, %r11d         #  43    0x40  4      OPC=andl_r32_imm8         nop                       #  43    0x40  1      OPC=nop                 
  addq %r15, %r11           #  44    0x44  3      OPC=addq_r64_r64          nop                       #  44    0x41  1      OPC=nop                 
  jmpq %r11                 #  45    0x47  3      OPC=jmpq_r64              nop                       #  45    0x42  1      OPC=nop                 
                                                                            popq %r11                 #  46    0x43  2      OPC=popq_r64_1          
.size wcslen, .-wcslen                                                      andl $0xe0, %r11d         #  47    0x45  4      OPC=andl_r32_imm8       
                                                                            addq %r15, %r11           #  48    0x49  3      OPC=addq_r64_r64        
                                                                            jmpq %r11                 #  49    0x4c  3      OPC=jmpq_r64            
                                                                                                                                                    
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  127.671s
Iterations/s:                  783.261

Starting cost:                 112
Lowest cost:                   87
Lowest correct cost:           87

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.35%        7.945%        7.755%       
Operand         8.395%       4.287%        1.801%       
Local Swap      8.267%       4.192%        3.431%       
Global Swap     8.283%       7.543%        6.886%       
Global Copy     8.164%       7.704%        7.704%       
ReplaceNop      8.323%       7.946%        7.619%       
Rotate          8.276%       7.638%        5.963%       
Delete          8.389%       8.029%        6.983%       
OpcodeWidth     8.379%       7.752%        7.586%       
Add Nops        8.468%       8.468%        6.883%       
Instruction     8.384%       4.988%        0.546%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.322%       1.432%        0.004%       
                                                        
Total           100%         77.924%       63.161%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  313.598s
Iterations/s:                  637.76

Starting cost:                 112
Lowest cost:                   87
Lowest correct cost:           87

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.342%       8.068%        7.9185%      
Operand         8.3775%      4.5715%       2.0725%      
Local Swap      8.3175%      4.2175%       3.4485%      
Global Swap     8.3165%      7.7755%       7.3015%      
Global Copy     8.2435%      7.919%        7.919%       
ReplaceNop      8.3615%      8.0955%       7.8545%      
Rotate          8.2905%      7.838%        6.4725%      
Delete          8.347%       8.09%         7.2275%      
OpcodeWidth     8.284%       7.8405%       7.7095%      
Add Nops        8.365%       8.365%        7.0975%      
Instruction     8.409%       4.893%        0.577%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.346%       1.548%        0.004%       
                                                        
Total           100%         79.2215%      65.6025%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  578.886s
Iterations/s:                  518.237

Starting cost:                 112
Lowest cost:                   87
Lowest correct cost:           87

Move Type       Proposed     Succeeded     Accepted        
                                                           
Opcode          8.333%       8.11433%      7.985%          
Operand         8.38867%     4.82467%      2.338%          
Local Swap      8.31833%     4.30167%      3.52667%        
Global Swap     8.283%       7.83933%      7.42467%        
Global Copy     8.291%       8.02467%      8.02467%        
ReplaceNop      8.37867%     8.161%        7.96533%        
Rotate          8.30167%     7.93433%      6.67267%        
Delete          8.34367%     8.12733%      7.281%          
OpcodeWidth     8.30533%     7.93367%      7.81033%        
Add Nops        8.355%       8.355%        7.15067%        
Instruction     8.40267%     4.873%        0.589333%       
2xWeighted      0%           0%            0%              
Memory+Swap     8.299%       1.63967%      0.00333333%     
                                                           
Total           100%         80.1287%      66.7717%        

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  885.381s
Iterations/s:                  451.783

Starting cost:                 112
Lowest cost:                   87
Lowest correct cost:           87

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.314%       8.13025%      8.0195%      
Operand         8.376%       5.02925%      2.5025%      
Local Swap      8.313%       4.374%        3.55375%     
Global Swap     8.3005%      7.909%        7.53675%     
Global Copy     8.27975%     8.05375%      8.05375%     
ReplaceNop      8.3215%      8.13475%      7.9665%      
Rotate          8.332%       8.016%        6.822%       
Delete          8.36425%     8.17925%      7.2995%      
OpcodeWidth     8.30825%     7.98125%      7.866%       
Add Nops        8.318%       8.318%        7.12925%     
Instruction     8.43325%     4.9005%       0.58375%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.3395%      1.65925%      0.0025%      
                                                        
Total           100%         80.6852%      67.3358%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  1199.85s
Iterations/s:                  416.718

Starting cost:                 112
Lowest cost:                   87
Lowest correct cost:           87

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.343%       8.1808%       8.0844%      
Operand         8.3514%      5.1076%       2.6346%      
Local Swap      8.2894%      4.3762%       3.551%       
Global Swap     8.3204%      7.9742%       7.637%       
Global Copy     8.3028%      8.1058%       8.1058%      
ReplaceNop      8.3322%      8.1666%       8.021%       
Rotate          8.3398%      8.0588%       6.8826%      
Delete          8.331%       8.17%         7.2708%      
OpcodeWidth     8.285%       7.9918%       7.8838%      
Add Nops        8.3368%      8.3368%       7.1252%      
Instruction     8.4034%      4.8724%       0.5732%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3648%      1.6564%       0.0028%      
                                                        
Total           100%         80.9974%      67.7722%     

********************************************************************************

TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
nop 
nop 
nop 
retq 
Total accesses: 2
SAME MAP
     0 1 
------------------
0  |   1 
1  |     

NEXT MAP
     0 1 
------------------
0  |   0 
1  |     

TOTAL CELLS: 1
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
ALIASING CASES: 1
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
salb $0xf8, %ch
nop 
nop 
nop 
.L_142ce0:
nop 
nop 
nop 
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   1 0 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
salb $0xf8, %ch
nop 
nop 
nop 
.L_142ce0:
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   1 0 0 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
Access 3 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
nop 
nop 
nop 
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   0 1 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
salb $0xf8, %ch
nop 
nop 
nop 
.L_142ce0:
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 1 0 
1  |     0 1 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
salb $0xf8, %ch
nop 
nop 
nop 
.L_142ce0:
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 1 0 0 
1  |     0 1 0 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 4)
Access 4 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 0 1 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
salb $0xf8, %ch
nop 
nop 
nop 
.L_142ce0:
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 0 1 0 
1  |     0 0 1 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
salb $0xf8, %ch
nop 
nop 
nop 
.L_142ce0:
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 1 0 0 
1  |     0 0 1 0 
2  |       0 0 1 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 0 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 4 (cell size 4)
Access 5 cell 2 offset 0 size 4 (cell size 4)
################################################################################

Final update:

Total search iterations:       3500000
Number of attempted searches:  7
Total search time:             7872.84s
Total time:                    7894.79s

Statistics of last search

Iterations:                    500000
Elapsed Time:                  1199.85s
Iterations/s:                  416.718

Starting cost:                 112
Lowest cost:                   87
Lowest correct cost:           87

Move Type       Proposed     Succeeded     Accepted     
                                                        
Opcode          8.343%       8.1808%       8.0844%      
Operand         8.3514%      5.1076%       2.6346%      
Local Swap      8.2894%      4.3762%       3.551%       
Global Swap     8.3204%      7.9742%       7.637%       
Global Copy     8.3028%      8.1058%       8.1058%      
ReplaceNop      8.3322%      8.1666%       8.021%       
Rotate          8.3398%      8.0588%       6.8826%      
Delete          8.331%       8.17%         7.2708%      
OpcodeWidth     8.285%       7.9918%       7.8838%      
Add Nops        8.3368%      8.3368%       7.1252%      
Instruction     8.4034%      4.8724%       0.5732%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3648%      1.6564%       0.0028%      
                                                        
Total           100%         80.9974%      67.7722%     

Lowest Cost Discovered (87)                                               
                                                                          
  .text                                                                   
  .globl wcslen                                                           
  .type wcslen, @function                                                 
                                                                          
#! file-offset 0                                                          
#! rip-offset  0                                                          
#! capacity    0 bytes                                                    
                                                                          
# Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32        
  testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label           
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32        
  sarl $0x2, %eax           #  29    0x2f  3      OPC=sarl_r32_imm8       
  nop                       #  30    0x32  1      OPC=nop                 
  nop                       #  31    0x33  1      OPC=nop                 
  nop                       #  32    0x34  1      OPC=nop                 
  nop                       #  33    0x35  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                 
  nop                       #  36    0x38  1      OPC=nop                 
  nop                       #  37    0x39  1      OPC=nop                 
  nop                       #  38    0x3a  1      OPC=nop                 
  nop                       #  39    0x3b  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                 
.L_142ce0:                  #        0x3e  0      OPC=<label>             
  popq %r11                 #  42    0x3e  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  43    0x40  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  44    0x44  3      OPC=addq_r64_r64        
  jmpq %r11                 #  45    0x47  3      OPC=jmpq_r64            
                                                                          
.size wcslen, .-wcslen                                                    
Lowest Known Correct Cost (87)                                            
                                                                          
  .text                                                                   
  .globl wcslen                                                           
  .type wcslen, @function                                                 
                                                                          
#! file-offset 0                                                          
#! rip-offset  0                                                          
#! capacity    0 bytes                                                    
                                                                          
# Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32        
  nop                       #  2     0x2   1      OPC=nop                 
  movl %edi, %edi           #  3     0x3   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x5   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0x9   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  6     0xc   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xe   2      OPC=je_label            
  nop                       #  8     0x10  1      OPC=nop                 
  nop                       #  9     0x11  1      OPC=nop                 
  nop                       #  10    0x12  1      OPC=nop                 
  nop                       #  11    0x13  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32        
  testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label           
  movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32        
  sarl $0x2, %eax           #  30    0x2f  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x32  1      OPC=nop                 
  nop                       #  32    0x33  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                 
  nopl %eax                 #  39    0x3a  3      OPC=nopl_r32            
  nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  43    0x40  1      OPC=nop                 
  nop                       #  44    0x41  1      OPC=nop                 
  nop                       #  45    0x42  1      OPC=nop                 
  popq %r11                 #  46    0x43  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  47    0x45  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  48    0x49  3      OPC=addq_r64_r64        
  jmpq %r11                 #  49    0x4c  3      OPC=jmpq_r64            
                                                                          
.size wcslen, .-wcslen                                                    
                                                                          

################################################################################

Search terminated successfully with a verified rewrite!
