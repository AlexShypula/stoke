time stoke debug verify --config verify.conf
Computing reference outputs for 0 testcases
Computing reference outputs for 0 testcases
Target                       Rewrite                      
                                                          
.strcpy:                     .strcpy:                     
movl %esi, %esi              movl %edi, %eax              
movl %edi, %eax              nop                          
movl %esi, %edi              nop                          
movq %rsi, %rdx              movq %rax, %rcx              
movq %rax, %rcx              movq %rsi, %rdx              
orl %eax, %edi               nop                          
andl $0x3, %edi              nop                          
jne .L_126860                nop                          
movl %esi, %esi              nop                          
movl (%r15,%rsi,1), %r8d     nop                          
movl %r8d, %esi              nop                          
leal -0x1010101(%r8), %edi   nop                          
notl %esi                    andl $0x2, %edi              
andl %edi, %esi              jne .L_126860                
andl $0x80808080, %esi       movl %esi, %esi              
jne .L_126860                movl (%r15,%rsi,1), %r8d     
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
.L_126820:                   nop                          
addl $0x4, %edx              nop                          
movl %ecx, %ecx              nop                          
movl %r8d, (%r15,%rcx,1)     nop                          
addl $0x4, %ecx              nop                          
movl %edx, %edx              jne .L_126860                
movl (%r15,%rdx,1), %r8d     nopl %eax                    
movl %r8d, %r9d              nop                          
leal -0x1010101(%r8), %esi   nop                          
notl %r9d                    nop                          
nop                          nop                          
andl %esi, %r9d              nop                          
andl $0x80808080, %r9d       nop                          
je .L_126820                 nop                          
nop                          nop                          
nop                          nop                          
nop                          .L_126820:                   
nop                          addl $0x4, %edx              
nop                          andl %ecx, %ecx              
nop                          movl %r8d, (%r15,%rcx,1)     
nop                          addl $0x4, %ecx              
nop                          orl %edx, %edx               
nop                          movl (%r15,%rdx,1), %r8d     
nop                          movl %r8d, %r9d              
nop                          notq %r9                     
nop                          leal -0x1010101(%r8), %esi   
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
.L_126860:                   andl $0x80808080, %r9d       
movl %edx, %edx              andl %esi, %r9d              
movzbl (%r15,%rdx,1), %esi   je .L_126820                 
addl $0x1, %edx              nop                          
movl %ecx, %ecx              nop                          
movb %sil, (%r15,%rcx,1)     nop                          
addl $0x1, %ecx              nop                          
testb %sil, %sil             nop                          
jne .L_126860                nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
retq                         nop                          
nop                          nop                          
nop                          .L_126860:                   
nop                          movl %edx, %edx              
nop                          movsbw (%r15,%rdx,1), %si    
nop                          addw $0x1, %dx               
nop                          andl %ecx, %ecx              
nop                          movb %sil, (%r15,%rcx,1)     
nop                          addw $0x1, %cx               
nop                          testb %sil, %sil             
nop                          jne .L_126860                
nop                          nop                          
nop                          nop                          
nop                          nop                          
                             nop                          
                             retq                         
                                                          
===========================================
Working on pair / P: 1 6 7 Q: 1 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 1 0 
1  |     0 1 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 1)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 0 offset 0 size 1 (cell size 1)
Access 3 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 1 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
17 -> 0 (size 1 / cell size 1 / offset 0
20 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_8_4|8> <TMP_BV_8_6|8>)) (== <TMP_BV_8_5|8> <TMP_BV_8_7|8>))

CONSTRAINTS

(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_8_6|8>))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_8_6|8>))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_4|8>))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_4|8>))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_8_4|8> <TMP_BV_8_6|8>)) (== <TMP_BV_8_5|8> <TMP_BV_8_7|8>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 1 1 0 
1  |     0 0 1 
2  |       1 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
16 -> 0 (size 4 / cell size 4 / offset 0
34 -> 0 (size 1 / cell size 4 / offset 0
37 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_32_13|32> <TMP_BV_32_15|32>)) (== <TMP_BV_8_14|8> <TMP_BV_8_16|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_15|32>[7:0]))[7:0] (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_15|32>[7:0]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_13|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_13|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_13|32> <TMP_BV_32_15|32>)) (== <TMP_BV_8_14|8> <TMP_BV_8_16|8>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 1 0 0 0 
1  |     0 1 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 0 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 1)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 0 offset 0 size 1 (cell size 1)
Access 3 cell 1 offset 0 size 1 (cell size 1)
Access 4 cell 2 offset 0 size 1 (cell size 1)
Access 5 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 1 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
17 -> 0 (size 1 / cell size 1 / offset 0
20 -> 1 (size 1 / cell size 1 / offset 0
26 -> 2 (size 1 / cell size 1 / offset 0
29 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_8_23|8> <TMP_BV_8_25|8>)) (== <TMP_BV_8_24|8> <TMP_BV_8_26|8>)) (== <TMP_BV_8_29|8> <TMP_BV_8_27|8>)) (== <TMP_BV_8_30|8> <TMP_BV_8_28|8>))

CONSTRAINTS

(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_8_25|8>))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_8_25|8>))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_8_25|8>))[63:16] (sign-extend-16 <TMP_BV_8_27|8>))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_8_25|8>))[63:16] (sign-extend-16 <TMP_BV_8_27|8>))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_23|8>))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_23|8>))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_8_23|8> <TMP_BV_8_25|8>)) (== <TMP_BV_8_24|8> <TMP_BV_8_26|8>)) (== <TMP_BV_8_29|8> <TMP_BV_8_27|8>)) (== <TMP_BV_8_30|8> <TMP_BV_8_28|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 1 0 0 0 
1  |     0 0 1 0 0 
2  |       1 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 1 offset 0 size 1 (cell size 1)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
16 -> 0 (size 4 / cell size 4 / offset 0
34 -> 0 (size 1 / cell size 4 / offset 0
37 -> 1 (size 1 / cell size 1 / offset 0
43 -> 2 (size 1 / cell size 1 / offset 0
46 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_38|32> <TMP_BV_32_40|32>)) (== <TMP_BV_8_39|8> <TMP_BV_8_41|8>)) (== <TMP_BV_8_44|8> <TMP_BV_8_42|8>)) (== <TMP_BV_8_45|8> <TMP_BV_8_43|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_40|32>[7:0]))[7:0] (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_40|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_40|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_42|8>))[7:0] (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_40|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_42|8>))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_38|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_38|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_38|32> <TMP_BV_32_40|32>)) (== <TMP_BV_8_39|8> <TMP_BV_8_41|8>)) (== <TMP_BV_8_44|8> <TMP_BV_8_42|8>)) (== <TMP_BV_8_45|8> <TMP_BV_8_43|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 0 0 0 0 
1  |     0 1 0 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           1 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 0 0 
2  |       0 1 1 0 
3  |         0 0 1 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 8)
Access 1 cell 1 offset 0 size 1 (cell size 5)
Access 2 cell 0 offset 0 size 4 (cell size 8)
Access 3 cell 1 offset 0 size 4 (cell size 5)
Access 4 cell 0 offset 4 size 4 (cell size 8)
Access 5 cell 0 offset 4 size 1 (cell size 8)
Access 6 cell 1 offset 4 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 8 / offset 0
14 -> 1 (size 1 / cell size 5 / offset 0
REWRITE MAP:
16 -> 0 (size 4 / cell size 8 / offset 0
45 -> 1 (size 4 / cell size 5 / offset 0
48 -> 0 (size 4 / cell size 8 / offset 4
74 -> 0 (size 1 / cell size 8 / offset 4
77 -> 1 (size 1 / cell size 5 / offset 4
Start memory constraint: (and (and TRUE (== <TMP_BV_64_52|64> <TMP_BV_64_54|64>)) (== <TMP_BV_40_53|40> <TMP_BV_40_55|40>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_54|64>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_54|64>[63:32]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_54|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_54|64>[39:32]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_54|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_54|64>[39:32]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_52|64>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_52|64>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_52|64> <TMP_BV_64_54|64>)) (== <TMP_BV_40_53|40> <TMP_BV_40_55|40>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           1 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 
3  |         0 0 1 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 8)
Access 1 cell 1 offset 0 size 1 (cell size 5)
Access 2 cell 0 offset 0 size 4 (cell size 8)
Access 3 cell 1 offset 0 size 4 (cell size 5)
Access 4 cell 0 offset 4 size 4 (cell size 8)
Access 5 cell 0 offset 4 size 1 (cell size 8)
Access 6 cell 1 offset 4 size 1 (cell size 5)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 8 / offset 0
14 -> 1 (size 1 / cell size 5 / offset 0
REWRITE MAP:
16 -> 0 (size 4 / cell size 8 / offset 0
45 -> 1 (size 4 / cell size 5 / offset 0
48 -> 0 (size 4 / cell size 8 / offset 4
74 -> 0 (size 1 / cell size 8 / offset 4
77 -> 1 (size 1 / cell size 5 / offset 4
83 -> 2 (size 1 / cell size 1 / offset 0
86 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_64|64> <TMP_BV_64_66|64>)) (== <TMP_BV_40_65|40> <TMP_BV_40_67|40>)) (== <TMP_BV_8_70|8> <TMP_BV_8_68|8>)) (== <TMP_BV_8_71|8> <TMP_BV_8_69|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_66|64>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_66|64>[63:32]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_66|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_66|64>[39:32]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_66|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_66|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_66|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_66|64>[39:32]))[63:16] (sign-extend-16 <TMP_BV_8_68|8>))[7:0] (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_66|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_66|64>[39:32]))[63:16] (sign-extend-16 <TMP_BV_8_68|8>))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_64|64>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_64|64>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_64|64> <TMP_BV_64_66|64>)) (== <TMP_BV_40_65|40> <TMP_BV_40_67|40>)) (== <TMP_BV_8_70|8> <TMP_BV_8_68|8>)) (== <TMP_BV_8_71|8> <TMP_BV_8_69|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 4 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               1 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 
3  |         0 1 0 0 0 
4  |           0 1 1 0 
5  |             0 0 1 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 12)
Access 1 cell 1 offset 0 size 1 (cell size 9)
Access 2 cell 0 offset 0 size 4 (cell size 12)
Access 3 cell 1 offset 0 size 4 (cell size 9)
Access 4 cell 0 offset 4 size 4 (cell size 12)
Access 5 cell 1 offset 4 size 4 (cell size 9)
Access 6 cell 0 offset 8 size 4 (cell size 12)
Access 7 cell 0 offset 8 size 1 (cell size 12)
Access 8 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 12 / offset 0
14 -> 1 (size 1 / cell size 9 / offset 0
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 9 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
62 -> 1 (size 4 / cell size 9 / offset 4
65 -> 0 (size 4 / cell size 12 / offset 8
91 -> 0 (size 1 / cell size 12 / offset 8
94 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and TRUE (== <TMP_BV_96_79|96> <TMP_BV_96_81|96>)) (== <TMP_BV_72_80|72> <TMP_BV_72_82|72>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_81|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_81|96>[63:32]))[31:0])[31:0]) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_81|96>[95:64])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_81|96>[95:64]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_81|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_81|96>[71:64]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_81|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_81|96>[71:64]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_79|96>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_79|96>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_79|96> <TMP_BV_96_81|96>)) (== <TMP_BV_72_80|72> <TMP_BV_72_82|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 4 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               1 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 
4  |           0 1 1 0 0 0 
5  |             0 0 1 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 12)
Access 1 cell 1 offset 0 size 1 (cell size 9)
Access 2 cell 0 offset 0 size 4 (cell size 12)
Access 3 cell 1 offset 0 size 4 (cell size 9)
Access 4 cell 0 offset 4 size 4 (cell size 12)
Access 5 cell 1 offset 4 size 4 (cell size 9)
Access 6 cell 0 offset 8 size 4 (cell size 12)
Access 7 cell 0 offset 8 size 1 (cell size 12)
Access 8 cell 1 offset 8 size 1 (cell size 9)
Access 9 cell 2 offset 0 size 1 (cell size 1)
Access 10 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 12 / offset 0
14 -> 1 (size 1 / cell size 9 / offset 0
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 9 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
62 -> 1 (size 4 / cell size 9 / offset 4
65 -> 0 (size 4 / cell size 12 / offset 8
91 -> 0 (size 1 / cell size 12 / offset 8
94 -> 1 (size 1 / cell size 9 / offset 8
100 -> 2 (size 1 / cell size 1 / offset 0
103 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_92|96> <TMP_BV_96_94|96>)) (== <TMP_BV_72_93|72> <TMP_BV_72_95|72>)) (== <TMP_BV_8_98|8> <TMP_BV_8_96|8>)) (== <TMP_BV_8_99|8> <TMP_BV_8_97|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_94|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_94|96>[63:32]))[31:0])[31:0]) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_94|96>[95:64])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_94|96>[95:64]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_94|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_94|96>[71:64]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_94|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_94|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_94|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_94|96>[71:64]))[63:16] (sign-extend-16 <TMP_BV_8_96|8>))[7:0] (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_94|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_94|96>[71:64]))[63:16] (sign-extend-16 <TMP_BV_8_96|8>))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_92|96>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_92|96>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_92|96> <TMP_BV_96_94|96>)) (== <TMP_BV_72_93|72> <TMP_BV_72_95|72>)) (== <TMP_BV_8_98|8> <TMP_BV_8_96|8>)) (== <TMP_BV_8_99|8> <TMP_BV_8_97|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   1 0 1 0 
1  |     0 1 0 
2  |       0 1 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
17 -> 0 (size 1 / cell size 4 / offset 0
20 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_32_105|32> <TMP_BV_32_107|32>)) (== <TMP_BV_8_106|8> <TMP_BV_8_108|8>))

CONSTRAINTS

(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_107|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_107|32>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_105|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_105|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_105|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_105|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_105|32> <TMP_BV_32_107|32>)) (== <TMP_BV_8_106|8> <TMP_BV_8_108|8>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   1 0 1 1 0 
1  |     0 1 1 0 
2  |       0 0 1 
3  |         1 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 0 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 0 offset 0 size 1 (cell size 4)
Access 5 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
16 -> 0 (size 4 / cell size 4 / offset 0
34 -> 0 (size 1 / cell size 4 / offset 0
37 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_32_115|32> <TMP_BV_32_117|32>)) (== <TMP_BV_8_116|8> <TMP_BV_8_118|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_117|32>[7:0]))[7:0] (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_117|32>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_115|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_115|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_115|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_115|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_115|32> <TMP_BV_32_117|32>)) (== <TMP_BV_8_116|8> <TMP_BV_8_118|8>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   1 0 1 0 0 0 
1  |     0 1 0 0 0 
2  |       0 1 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 1 offset 0 size 1 (cell size 1)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
17 -> 0 (size 1 / cell size 4 / offset 0
20 -> 1 (size 1 / cell size 1 / offset 0
26 -> 2 (size 1 / cell size 1 / offset 0
29 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_126|32> <TMP_BV_32_128|32>)) (== <TMP_BV_8_127|8> <TMP_BV_8_129|8>)) (== <TMP_BV_8_132|8> <TMP_BV_8_130|8>)) (== <TMP_BV_8_133|8> <TMP_BV_8_131|8>))

CONSTRAINTS

(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_128|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_128|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_128|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_130|8>))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_128|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_130|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_126|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_126|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_126|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_126|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_126|32> <TMP_BV_32_128|32>)) (== <TMP_BV_8_127|8> <TMP_BV_8_129|8>)) (== <TMP_BV_8_132|8> <TMP_BV_8_130|8>)) (== <TMP_BV_8_133|8> <TMP_BV_8_131|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   1 0 1 1 0 0 0 
1  |     0 1 1 0 0 0 
2  |       0 0 1 0 0 
3  |         1 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 0 offset 0 size 1 (cell size 4)
Access 5 cell 1 offset 0 size 1 (cell size 1)
Access 6 cell 2 offset 0 size 1 (cell size 1)
Access 7 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
16 -> 0 (size 4 / cell size 4 / offset 0
34 -> 0 (size 1 / cell size 4 / offset 0
37 -> 1 (size 1 / cell size 1 / offset 0
43 -> 2 (size 1 / cell size 1 / offset 0
46 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_142|32> <TMP_BV_32_144|32>)) (== <TMP_BV_8_143|8> <TMP_BV_8_145|8>)) (== <TMP_BV_8_148|8> <TMP_BV_8_146|8>)) (== <TMP_BV_8_149|8> <TMP_BV_8_147|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_144|32>[7:0]))[7:0] (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_144|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_144|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_146|8>))[7:0] (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_144|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_146|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_142|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_142|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_142|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_142|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_142|32> <TMP_BV_32_144|32>)) (== <TMP_BV_8_143|8> <TMP_BV_8_145|8>)) (== <TMP_BV_8_148|8> <TMP_BV_8_146|8>)) (== <TMP_BV_8_149|8> <TMP_BV_8_147|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   1 0 1 0 0 0 0 
1  |     0 1 0 0 0 0 
2  |       0 1 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             1 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 1 1 0 
1  |     0 0 0 0 0 0 
2  |       0 0 0 0 0 
3  |         0 1 1 0 
4  |           0 0 1 
5  |             0 0 
6  |               0 
7  |                 

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 0 offset 0 size 1 (cell size 8)
Access 2 cell 1 offset 0 size 1 (cell size 5)
Access 3 cell 0 offset 0 size 4 (cell size 8)
Access 4 cell 1 offset 0 size 4 (cell size 5)
Access 5 cell 0 offset 4 size 4 (cell size 8)
Access 6 cell 0 offset 4 size 1 (cell size 8)
Access 7 cell 1 offset 4 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
19 -> 0 (size 1 / cell size 8 / offset 0
22 -> 1 (size 1 / cell size 5 / offset 0
REWRITE MAP:
16 -> 0 (size 4 / cell size 8 / offset 0
45 -> 1 (size 4 / cell size 5 / offset 0
48 -> 0 (size 4 / cell size 8 / offset 4
74 -> 0 (size 1 / cell size 8 / offset 4
77 -> 1 (size 1 / cell size 5 / offset 4
Start memory constraint: (and (and TRUE (== <TMP_BV_64_157|64> <TMP_BV_64_159|64>)) (== <TMP_BV_40_158|40> <TMP_BV_40_160|40>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_159|64>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_159|64>[63:32]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_159|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_159|64>[39:32]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_159|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_159|64>[39:32]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_157|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_157|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_157|64>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_157|64>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_157|64> <TMP_BV_64_159|64>)) (== <TMP_BV_40_158|40> <TMP_BV_40_160|40>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   1 0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             1 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 1 1 0 0 0 
1  |     0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 1 1 0 0 0 
4  |           0 0 1 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 0 offset 0 size 1 (cell size 8)
Access 2 cell 1 offset 0 size 1 (cell size 5)
Access 3 cell 0 offset 0 size 4 (cell size 8)
Access 4 cell 1 offset 0 size 4 (cell size 5)
Access 5 cell 0 offset 4 size 4 (cell size 8)
Access 6 cell 0 offset 4 size 1 (cell size 8)
Access 7 cell 1 offset 4 size 1 (cell size 5)
Access 8 cell 2 offset 0 size 1 (cell size 1)
Access 9 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
19 -> 0 (size 1 / cell size 8 / offset 0
22 -> 1 (size 1 / cell size 5 / offset 0
REWRITE MAP:
16 -> 0 (size 4 / cell size 8 / offset 0
45 -> 1 (size 4 / cell size 5 / offset 0
48 -> 0 (size 4 / cell size 8 / offset 4
74 -> 0 (size 1 / cell size 8 / offset 4
77 -> 1 (size 1 / cell size 5 / offset 4
83 -> 2 (size 1 / cell size 1 / offset 0
86 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_170|64> <TMP_BV_64_172|64>)) (== <TMP_BV_40_171|40> <TMP_BV_40_173|40>)) (== <TMP_BV_8_176|8> <TMP_BV_8_174|8>)) (== <TMP_BV_8_177|8> <TMP_BV_8_175|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_172|64>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_172|64>[63:32]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_172|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_172|64>[39:32]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_172|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_172|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_172|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_172|64>[39:32]))[63:16] (sign-extend-16 <TMP_BV_8_174|8>))[7:0] (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_172|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_172|64>[39:32]))[63:16] (sign-extend-16 <TMP_BV_8_174|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_170|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_170|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_170|64>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_170|64>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_170|64> <TMP_BV_64_172|64>)) (== <TMP_BV_40_171|40> <TMP_BV_40_173|40>)) (== <TMP_BV_8_176|8> <TMP_BV_8_174|8>)) (== <TMP_BV_8_177|8> <TMP_BV_8_175|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 4 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   1 0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 1 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 1 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 
4  |           0 1 0 0 0 
5  |             0 1 1 0 
6  |               0 0 1 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 0 offset 0 size 1 (cell size 12)
Access 2 cell 1 offset 0 size 1 (cell size 9)
Access 3 cell 0 offset 0 size 4 (cell size 12)
Access 4 cell 1 offset 0 size 4 (cell size 9)
Access 5 cell 0 offset 4 size 4 (cell size 12)
Access 6 cell 1 offset 4 size 4 (cell size 9)
Access 7 cell 0 offset 8 size 4 (cell size 12)
Access 8 cell 0 offset 8 size 1 (cell size 12)
Access 9 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
19 -> 0 (size 1 / cell size 12 / offset 0
22 -> 1 (size 1 / cell size 9 / offset 0
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 9 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
62 -> 1 (size 4 / cell size 9 / offset 4
65 -> 0 (size 4 / cell size 12 / offset 8
91 -> 0 (size 1 / cell size 12 / offset 8
94 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and TRUE (== <TMP_BV_96_186|96> <TMP_BV_96_188|96>)) (== <TMP_BV_72_187|72> <TMP_BV_72_189|72>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_188|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_188|96>[63:32]))[31:0])[31:0]) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_188|96>[95:64])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_188|96>[95:64]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_188|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_188|96>[71:64]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_188|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_188|96>[71:64]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_186|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_186|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_186|96>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_186|96>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_186|96> <TMP_BV_96_188|96>)) (== <TMP_BV_72_187|72> <TMP_BV_72_189|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 4 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   1 0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 1 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 
5  |             0 1 1 0 0 0 
6  |               0 0 1 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 0 offset 0 size 1 (cell size 12)
Access 2 cell 1 offset 0 size 1 (cell size 9)
Access 3 cell 0 offset 0 size 4 (cell size 12)
Access 4 cell 1 offset 0 size 4 (cell size 9)
Access 5 cell 0 offset 4 size 4 (cell size 12)
Access 6 cell 1 offset 4 size 4 (cell size 9)
Access 7 cell 0 offset 8 size 4 (cell size 12)
Access 8 cell 0 offset 8 size 1 (cell size 12)
Access 9 cell 1 offset 8 size 1 (cell size 9)
Access 10 cell 2 offset 0 size 1 (cell size 1)
Access 11 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
19 -> 0 (size 1 / cell size 12 / offset 0
22 -> 1 (size 1 / cell size 9 / offset 0
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 9 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
62 -> 1 (size 4 / cell size 9 / offset 4
65 -> 0 (size 4 / cell size 12 / offset 8
91 -> 0 (size 1 / cell size 12 / offset 8
94 -> 1 (size 1 / cell size 9 / offset 8
100 -> 2 (size 1 / cell size 1 / offset 0
103 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_200|96> <TMP_BV_96_202|96>)) (== <TMP_BV_72_201|72> <TMP_BV_72_203|72>)) (== <TMP_BV_8_206|8> <TMP_BV_8_204|8>)) (== <TMP_BV_8_207|8> <TMP_BV_8_205|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_202|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_202|96>[63:32]))[31:0])[31:0]) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_202|96>[95:64])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_202|96>[95:64]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_202|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_202|96>[71:64]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_202|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_202|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_202|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_202|96>[71:64]))[63:16] (sign-extend-16 <TMP_BV_8_204|8>))[7:0] (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_202|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_202|96>[71:64]))[63:16] (sign-extend-16 <TMP_BV_8_204|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_200|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_200|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_200|96>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_200|96>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_200|96> <TMP_BV_96_202|96>)) (== <TMP_BV_72_201|72> <TMP_BV_72_203|72>)) (== <TMP_BV_8_206|8> <TMP_BV_8_204|8>)) (== <TMP_BV_8_207|8> <TMP_BV_8_205|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 1 0 
1  |     0 0 0 1 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 1 0 0 0 
1  |     0 1 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 1 (cell size 2)
Access 5 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
17 -> 0 (size 1 / cell size 2 / offset 0
20 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_16_214|16> <TMP_BV_16_216|16>)) (== <TMP_BV_16_215|16> <TMP_BV_16_217|16>))

CONSTRAINTS

(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_216|16>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_216|16>[7:0]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_214|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_214|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_214|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_214|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_16_214|16> <TMP_BV_16_216|16>)) (== <TMP_BV_16_215|16> <TMP_BV_16_217|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 1 1 0 
1  |     0 0 0 0 1 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           1 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 0 0 0 0 
1  |     0 1 0 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 4)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 4 (cell size 4)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 4 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
16 -> 0 (size 4 / cell size 4 / offset 0
34 -> 0 (size 1 / cell size 4 / offset 0
37 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_32_225|32> <TMP_BV_32_227|32>)) (== <TMP_BV_16_226|16> <TMP_BV_16_228|16>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_227|32>[7:0]))[7:0] (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_227|32>[7:0]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_225|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_225|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_225|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_225|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_225|32> <TMP_BV_32_227|32>)) (== <TMP_BV_16_226|16> <TMP_BV_16_228|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 1 0 0 0 
1  |     0 0 0 1 0 0 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 1 0 0 0 0 0 
1  |     0 1 0 0 0 0 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 1 (cell size 2)
Access 5 cell 1 offset 0 size 1 (cell size 2)
Access 6 cell 2 offset 0 size 1 (cell size 1)
Access 7 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
17 -> 0 (size 1 / cell size 2 / offset 0
20 -> 1 (size 1 / cell size 2 / offset 0
26 -> 2 (size 1 / cell size 1 / offset 0
29 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_16_237|16> <TMP_BV_16_239|16>)) (== <TMP_BV_16_238|16> <TMP_BV_16_240|16>)) (== <TMP_BV_8_243|8> <TMP_BV_8_241|8>)) (== <TMP_BV_8_244|8> <TMP_BV_8_242|8>))

CONSTRAINTS

(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_239|16>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_239|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_239|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_241|8>))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_16_239|16>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_241|8>))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_237|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_237|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_237|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_237|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_16_237|16> <TMP_BV_16_239|16>)) (== <TMP_BV_16_238|16> <TMP_BV_16_240|16>)) (== <TMP_BV_8_243|8> <TMP_BV_8_241|8>)) (== <TMP_BV_8_244|8> <TMP_BV_8_242|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 1 1 0 0 0 
1  |     0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           1 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 4)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 4 (cell size 4)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 1 offset 0 size 1 (cell size 2)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 4 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
16 -> 0 (size 4 / cell size 4 / offset 0
34 -> 0 (size 1 / cell size 4 / offset 0
37 -> 1 (size 1 / cell size 2 / offset 0
43 -> 2 (size 1 / cell size 1 / offset 0
46 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_254|32> <TMP_BV_32_256|32>)) (== <TMP_BV_16_255|16> <TMP_BV_16_257|16>)) (== <TMP_BV_8_260|8> <TMP_BV_8_258|8>)) (== <TMP_BV_8_261|8> <TMP_BV_8_259|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_256|32>[7:0]))[7:0] (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_256|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_256|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_258|8>))[7:0] (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_256|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_258|8>))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_254|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_254|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_254|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_254|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_254|32> <TMP_BV_32_256|32>)) (== <TMP_BV_16_255|16> <TMP_BV_16_257|16>)) (== <TMP_BV_8_260|8> <TMP_BV_8_258|8>)) (== <TMP_BV_8_261|8> <TMP_BV_8_259|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 1 0 0 0 0 
1  |     0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               1 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 1 1 0 
5  |             0 0 1 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 8)
Access 1 cell 1 offset 0 size 1 (cell size 5)
Access 2 cell 0 offset 1 size 1 (cell size 8)
Access 3 cell 1 offset 1 size 1 (cell size 5)
Access 4 cell 0 offset 0 size 4 (cell size 8)
Access 5 cell 1 offset 0 size 4 (cell size 5)
Access 6 cell 0 offset 4 size 4 (cell size 8)
Access 7 cell 0 offset 4 size 1 (cell size 8)
Access 8 cell 1 offset 4 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 8 / offset 0
14 -> 1 (size 1 / cell size 5 / offset 0
20 -> 0 (size 1 / cell size 8 / offset 1
23 -> 1 (size 1 / cell size 5 / offset 1
REWRITE MAP:
16 -> 0 (size 4 / cell size 8 / offset 0
45 -> 1 (size 4 / cell size 5 / offset 0
48 -> 0 (size 4 / cell size 8 / offset 4
74 -> 0 (size 1 / cell size 8 / offset 4
77 -> 1 (size 1 / cell size 5 / offset 4
Start memory constraint: (and (and TRUE (== <TMP_BV_64_270|64> <TMP_BV_64_272|64>)) (== <TMP_BV_40_271|40> <TMP_BV_40_273|40>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_272|64>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_272|64>[63:32]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_272|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_272|64>[39:32]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_272|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_272|64>[39:32]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_270|64>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_270|64>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_270|64>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_270|64>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_270|64> <TMP_BV_64_272|64>)) (== <TMP_BV_40_271|40> <TMP_BV_40_273|40>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               1 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 1 1 0 0 0 
5  |             0 0 1 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 8)
Access 1 cell 1 offset 0 size 1 (cell size 5)
Access 2 cell 0 offset 1 size 1 (cell size 8)
Access 3 cell 1 offset 1 size 1 (cell size 5)
Access 4 cell 0 offset 0 size 4 (cell size 8)
Access 5 cell 1 offset 0 size 4 (cell size 5)
Access 6 cell 0 offset 4 size 4 (cell size 8)
Access 7 cell 0 offset 4 size 1 (cell size 8)
Access 8 cell 1 offset 4 size 1 (cell size 5)
Access 9 cell 2 offset 0 size 1 (cell size 1)
Access 10 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 8 / offset 0
14 -> 1 (size 1 / cell size 5 / offset 0
20 -> 0 (size 1 / cell size 8 / offset 1
23 -> 1 (size 1 / cell size 5 / offset 1
REWRITE MAP:
16 -> 0 (size 4 / cell size 8 / offset 0
45 -> 1 (size 4 / cell size 5 / offset 0
48 -> 0 (size 4 / cell size 8 / offset 4
74 -> 0 (size 1 / cell size 8 / offset 4
77 -> 1 (size 1 / cell size 5 / offset 4
83 -> 2 (size 1 / cell size 1 / offset 0
86 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_284|64> <TMP_BV_64_286|64>)) (== <TMP_BV_40_285|40> <TMP_BV_40_287|40>)) (== <TMP_BV_8_290|8> <TMP_BV_8_288|8>)) (== <TMP_BV_8_291|8> <TMP_BV_8_289|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_286|64>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_286|64>[63:32]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_286|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_286|64>[39:32]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_286|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_286|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_286|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_286|64>[39:32]))[63:16] (sign-extend-16 <TMP_BV_8_288|8>))[7:0] (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_286|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_286|64>[39:32]))[63:16] (sign-extend-16 <TMP_BV_8_288|8>))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_284|64>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_284|64>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_284|64>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_284|64>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_284|64> <TMP_BV_64_286|64>)) (== <TMP_BV_40_285|40> <TMP_BV_40_287|40>)) (== <TMP_BV_8_290|8> <TMP_BV_8_288|8>)) (== <TMP_BV_8_291|8> <TMP_BV_8_289|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 4 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   1 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 
5  |             0 1 0 0 0 
6  |               0 1 1 0 
7  |                 0 0 1 
8  |                   0 0 
9  |                     0 
10 |                       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 12)
Access 1 cell 1 offset 0 size 1 (cell size 9)
Access 2 cell 0 offset 1 size 1 (cell size 12)
Access 3 cell 1 offset 1 size 1 (cell size 9)
Access 4 cell 0 offset 0 size 4 (cell size 12)
Access 5 cell 1 offset 0 size 4 (cell size 9)
Access 6 cell 0 offset 4 size 4 (cell size 12)
Access 7 cell 1 offset 4 size 4 (cell size 9)
Access 8 cell 0 offset 8 size 4 (cell size 12)
Access 9 cell 0 offset 8 size 1 (cell size 12)
Access 10 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 12 / offset 0
14 -> 1 (size 1 / cell size 9 / offset 0
20 -> 0 (size 1 / cell size 12 / offset 1
23 -> 1 (size 1 / cell size 9 / offset 1
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 9 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
62 -> 1 (size 4 / cell size 9 / offset 4
65 -> 0 (size 4 / cell size 12 / offset 8
91 -> 0 (size 1 / cell size 12 / offset 8
94 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and TRUE (== <TMP_BV_96_301|96> <TMP_BV_96_303|96>)) (== <TMP_BV_72_302|72> <TMP_BV_72_304|72>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_303|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_303|96>[63:32]))[31:0])[31:0]) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_303|96>[95:64])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_303|96>[95:64]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_303|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_303|96>[71:64]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_303|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_303|96>[71:64]))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_301|96>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_301|96>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_301|96>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_301|96>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_301|96> <TMP_BV_96_303|96>)) (== <TMP_BV_72_302|72> <TMP_BV_72_304|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 4 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 13
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   1 0 0 0 
9  |                     0 0 0 
10 |                       0 0 
11 |                         0 
12 |                           

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 
6  |               0 1 1 0 0 0 
7  |                 0 0 1 0 0 
8  |                   0 0 0 0 
9  |                     0 0 0 
10 |                       0 0 
11 |                         0 
12 |                           

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 12)
Access 1 cell 1 offset 0 size 1 (cell size 9)
Access 2 cell 0 offset 1 size 1 (cell size 12)
Access 3 cell 1 offset 1 size 1 (cell size 9)
Access 4 cell 0 offset 0 size 4 (cell size 12)
Access 5 cell 1 offset 0 size 4 (cell size 9)
Access 6 cell 0 offset 4 size 4 (cell size 12)
Access 7 cell 1 offset 4 size 4 (cell size 9)
Access 8 cell 0 offset 8 size 4 (cell size 12)
Access 9 cell 0 offset 8 size 1 (cell size 12)
Access 10 cell 1 offset 8 size 1 (cell size 9)
Access 11 cell 2 offset 0 size 1 (cell size 1)
Access 12 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 12 / offset 0
14 -> 1 (size 1 / cell size 9 / offset 0
20 -> 0 (size 1 / cell size 12 / offset 1
23 -> 1 (size 1 / cell size 9 / offset 1
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 9 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
62 -> 1 (size 4 / cell size 9 / offset 4
65 -> 0 (size 4 / cell size 12 / offset 8
91 -> 0 (size 1 / cell size 12 / offset 8
94 -> 1 (size 1 / cell size 9 / offset 8
100 -> 2 (size 1 / cell size 1 / offset 0
103 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_316|96> <TMP_BV_96_318|96>)) (== <TMP_BV_72_317|72> <TMP_BV_72_319|72>)) (== <TMP_BV_8_322|8> <TMP_BV_8_320|8>)) (== <TMP_BV_8_323|8> <TMP_BV_8_321|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_318|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_318|96>[63:32]))[31:0])[31:0]) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_318|96>[95:64])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_318|96>[95:64]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_318|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_318|96>[71:64]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_318|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_318|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_318|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_318|96>[71:64]))[63:16] (sign-extend-16 <TMP_BV_8_320|8>))[7:0] (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_318|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_318|96>[71:64]))[63:16] (sign-extend-16 <TMP_BV_8_320|8>))[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_316|96>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_316|96>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_316|96>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_316|96>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_316|96> <TMP_BV_96_318|96>)) (== <TMP_BV_72_317|72> <TMP_BV_72_319|72>)) (== <TMP_BV_8_322|8> <TMP_BV_8_320|8>)) (== <TMP_BV_8_323|8> <TMP_BV_8_321|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   1 0 0 0 1 0 
1  |     0 0 0 1 0 
2  |       0 0 0 1 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 1 0 0 0 
2  |       0 1 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
17 -> 0 (size 1 / cell size 4 / offset 0
20 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_32_331|32> <TMP_BV_32_333|32>)) (== <TMP_BV_16_332|16> <TMP_BV_16_334|16>))

CONSTRAINTS

(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_333|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_333|32>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_331|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_331|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_331|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_331|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_331|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_331|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_331|32> <TMP_BV_32_333|32>)) (== <TMP_BV_16_332|16> <TMP_BV_16_334|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   1 0 0 0 1 1 0 
1  |     0 0 0 1 1 0 
2  |       0 0 0 0 1 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             1 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 
2  |       0 1 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 4 (cell size 4)
Access 6 cell 0 offset 0 size 1 (cell size 4)
Access 7 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
16 -> 0 (size 4 / cell size 4 / offset 0
34 -> 0 (size 1 / cell size 4 / offset 0
37 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_32_343|32> <TMP_BV_32_345|32>)) (== <TMP_BV_16_344|16> <TMP_BV_16_346|16>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_345|32>[7:0]))[7:0] (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_345|32>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_343|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_343|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_343|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_343|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_343|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_343|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_343|32> <TMP_BV_32_345|32>)) (== <TMP_BV_16_344|16> <TMP_BV_16_346|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   1 0 0 0 1 0 0 0 
1  |     0 0 0 1 0 0 0 
2  |       0 0 0 1 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 1 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 1 offset 0 size 1 (cell size 2)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
17 -> 0 (size 1 / cell size 4 / offset 0
20 -> 1 (size 1 / cell size 2 / offset 0
26 -> 2 (size 1 / cell size 1 / offset 0
29 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_356|32> <TMP_BV_32_358|32>)) (== <TMP_BV_16_357|16> <TMP_BV_16_359|16>)) (== <TMP_BV_8_362|8> <TMP_BV_8_360|8>)) (== <TMP_BV_8_363|8> <TMP_BV_8_361|8>))

CONSTRAINTS

(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_358|32>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_358|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_358|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_360|8>))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_32_358|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_360|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_356|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_356|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_356|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_356|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_356|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_356|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_356|32> <TMP_BV_32_358|32>)) (== <TMP_BV_16_357|16> <TMP_BV_16_359|16>)) (== <TMP_BV_8_362|8> <TMP_BV_8_360|8>)) (== <TMP_BV_8_363|8> <TMP_BV_8_361|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   1 0 0 0 1 1 0 0 0 
1  |     0 0 0 1 1 0 0 0 
2  |       0 0 0 0 1 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             1 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 4 (cell size 4)
Access 6 cell 0 offset 0 size 1 (cell size 4)
Access 7 cell 1 offset 0 size 1 (cell size 2)
Access 8 cell 2 offset 0 size 1 (cell size 1)
Access 9 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
16 -> 0 (size 4 / cell size 4 / offset 0
34 -> 0 (size 1 / cell size 4 / offset 0
37 -> 1 (size 1 / cell size 2 / offset 0
43 -> 2 (size 1 / cell size 1 / offset 0
46 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_374|32> <TMP_BV_32_376|32>)) (== <TMP_BV_16_375|16> <TMP_BV_16_377|16>)) (== <TMP_BV_8_380|8> <TMP_BV_8_378|8>)) (== <TMP_BV_8_381|8> <TMP_BV_8_379|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_376|32>[7:0]))[7:0] (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_376|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_376|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_378|8>))[7:0] (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_32_376|32>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_378|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_374|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_374|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_374|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_374|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_374|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_374|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_374|32> <TMP_BV_32_376|32>)) (== <TMP_BV_16_375|16> <TMP_BV_16_377|16>)) (== <TMP_BV_8_380|8> <TMP_BV_8_378|8>)) (== <TMP_BV_8_381|8> <TMP_BV_8_379|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   1 0 0 0 1 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 
2  |       0 0 0 1 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 1 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 1 1 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 1 1 0 
6  |               0 0 1 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 0 offset 0 size 1 (cell size 8)
Access 2 cell 1 offset 0 size 1 (cell size 5)
Access 3 cell 0 offset 1 size 1 (cell size 8)
Access 4 cell 1 offset 1 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 1 offset 0 size 4 (cell size 5)
Access 7 cell 0 offset 4 size 4 (cell size 8)
Access 8 cell 0 offset 4 size 1 (cell size 8)
Access 9 cell 1 offset 4 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
19 -> 0 (size 1 / cell size 8 / offset 0
22 -> 1 (size 1 / cell size 5 / offset 0
28 -> 0 (size 1 / cell size 8 / offset 1
31 -> 1 (size 1 / cell size 5 / offset 1
REWRITE MAP:
16 -> 0 (size 4 / cell size 8 / offset 0
45 -> 1 (size 4 / cell size 5 / offset 0
48 -> 0 (size 4 / cell size 8 / offset 4
74 -> 0 (size 1 / cell size 8 / offset 4
77 -> 1 (size 1 / cell size 5 / offset 4
Start memory constraint: (and (and TRUE (== <TMP_BV_64_391|64> <TMP_BV_64_393|64>)) (== <TMP_BV_40_392|40> <TMP_BV_40_394|40>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_393|64>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_393|64>[63:32]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_393|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_393|64>[39:32]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_393|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_393|64>[39:32]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_391|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_391|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_391|64>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_391|64>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_391|64>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_391|64>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_391|64> <TMP_BV_64_393|64>)) (== <TMP_BV_40_392|40> <TMP_BV_40_394|40>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   1 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 0 
2  |       0 0 0 1 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 1 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 1 1 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 1 1 0 0 0 
6  |               0 0 1 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 0 offset 0 size 1 (cell size 8)
Access 2 cell 1 offset 0 size 1 (cell size 5)
Access 3 cell 0 offset 1 size 1 (cell size 8)
Access 4 cell 1 offset 1 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 1 offset 0 size 4 (cell size 5)
Access 7 cell 0 offset 4 size 4 (cell size 8)
Access 8 cell 0 offset 4 size 1 (cell size 8)
Access 9 cell 1 offset 4 size 1 (cell size 5)
Access 10 cell 2 offset 0 size 1 (cell size 1)
Access 11 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
19 -> 0 (size 1 / cell size 8 / offset 0
22 -> 1 (size 1 / cell size 5 / offset 0
28 -> 0 (size 1 / cell size 8 / offset 1
31 -> 1 (size 1 / cell size 5 / offset 1
REWRITE MAP:
16 -> 0 (size 4 / cell size 8 / offset 0
45 -> 1 (size 4 / cell size 5 / offset 0
48 -> 0 (size 4 / cell size 8 / offset 4
74 -> 0 (size 1 / cell size 8 / offset 4
77 -> 1 (size 1 / cell size 5 / offset 4
83 -> 2 (size 1 / cell size 1 / offset 0
86 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_406|64> <TMP_BV_64_408|64>)) (== <TMP_BV_40_407|40> <TMP_BV_40_409|40>)) (== <TMP_BV_8_412|8> <TMP_BV_8_410|8>)) (== <TMP_BV_8_413|8> <TMP_BV_8_411|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_408|64>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_408|64>[63:32]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_408|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_408|64>[39:32]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_408|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_408|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_408|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_408|64>[39:32]))[63:16] (sign-extend-16 <TMP_BV_8_410|8>))[7:0] (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_408|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_408|64>[39:32]))[63:16] (sign-extend-16 <TMP_BV_8_410|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_406|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_406|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_406|64>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_406|64>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_406|64>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_406|64>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_406|64> <TMP_BV_64_408|64>)) (== <TMP_BV_40_407|40> <TMP_BV_40_409|40>)) (== <TMP_BV_8_412|8> <TMP_BV_8_410|8>)) (== <TMP_BV_8_413|8> <TMP_BV_8_411|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 4 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   1 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 0 
2  |       0 0 0 1 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     1 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 
6  |               0 1 0 0 0 
7  |                 0 1 1 0 
8  |                   0 0 1 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 0 offset 0 size 1 (cell size 12)
Access 2 cell 1 offset 0 size 1 (cell size 9)
Access 3 cell 0 offset 1 size 1 (cell size 12)
Access 4 cell 1 offset 1 size 1 (cell size 9)
Access 5 cell 0 offset 0 size 4 (cell size 12)
Access 6 cell 1 offset 0 size 4 (cell size 9)
Access 7 cell 0 offset 4 size 4 (cell size 12)
Access 8 cell 1 offset 4 size 4 (cell size 9)
Access 9 cell 0 offset 8 size 4 (cell size 12)
Access 10 cell 0 offset 8 size 1 (cell size 12)
Access 11 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
19 -> 0 (size 1 / cell size 12 / offset 0
22 -> 1 (size 1 / cell size 9 / offset 0
28 -> 0 (size 1 / cell size 12 / offset 1
31 -> 1 (size 1 / cell size 9 / offset 1
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 9 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
62 -> 1 (size 4 / cell size 9 / offset 4
65 -> 0 (size 4 / cell size 12 / offset 8
91 -> 0 (size 1 / cell size 12 / offset 8
94 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and TRUE (== <TMP_BV_96_424|96> <TMP_BV_96_426|96>)) (== <TMP_BV_72_425|72> <TMP_BV_72_427|72>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_426|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_426|96>[63:32]))[31:0])[31:0]) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_426|96>[95:64])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_426|96>[95:64]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_426|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_426|96>[71:64]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_426|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_426|96>[71:64]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_424|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_424|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_424|96>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_424|96>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_424|96>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_424|96>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_424|96> <TMP_BV_96_426|96>)) (== <TMP_BV_72_425|72> <TMP_BV_72_427|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 4 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   1 0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 0 0 0 
2  |       0 0 0 1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     1 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 
7  |                 0 1 1 0 0 0 
8  |                   0 0 1 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 0 offset 0 size 1 (cell size 12)
Access 2 cell 1 offset 0 size 1 (cell size 9)
Access 3 cell 0 offset 1 size 1 (cell size 12)
Access 4 cell 1 offset 1 size 1 (cell size 9)
Access 5 cell 0 offset 0 size 4 (cell size 12)
Access 6 cell 1 offset 0 size 4 (cell size 9)
Access 7 cell 0 offset 4 size 4 (cell size 12)
Access 8 cell 1 offset 4 size 4 (cell size 9)
Access 9 cell 0 offset 8 size 4 (cell size 12)
Access 10 cell 0 offset 8 size 1 (cell size 12)
Access 11 cell 1 offset 8 size 1 (cell size 9)
Access 12 cell 2 offset 0 size 1 (cell size 1)
Access 13 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
19 -> 0 (size 1 / cell size 12 / offset 0
22 -> 1 (size 1 / cell size 9 / offset 0
28 -> 0 (size 1 / cell size 12 / offset 1
31 -> 1 (size 1 / cell size 9 / offset 1
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 9 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
62 -> 1 (size 4 / cell size 9 / offset 4
65 -> 0 (size 4 / cell size 12 / offset 8
91 -> 0 (size 1 / cell size 12 / offset 8
94 -> 1 (size 1 / cell size 9 / offset 8
100 -> 2 (size 1 / cell size 1 / offset 0
103 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_440|96> <TMP_BV_96_442|96>)) (== <TMP_BV_72_441|72> <TMP_BV_72_443|72>)) (== <TMP_BV_8_446|8> <TMP_BV_8_444|8>)) (== <TMP_BV_8_447|8> <TMP_BV_8_445|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_442|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_442|96>[63:32]))[31:0])[31:0]) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_442|96>[95:64])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_442|96>[95:64]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_442|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_442|96>[71:64]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_442|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_442|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_442|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_442|96>[71:64]))[63:16] (sign-extend-16 <TMP_BV_8_444|8>))[7:0] (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_442|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_442|96>[71:64]))[63:16] (sign-extend-16 <TMP_BV_8_444|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_440|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_440|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_440|96>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_440|96>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_440|96>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_440|96>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_440|96> <TMP_BV_96_442|96>)) (== <TMP_BV_72_441|72> <TMP_BV_72_443|72>)) (== <TMP_BV_8_446|8> <TMP_BV_8_444|8>)) (== <TMP_BV_8_447|8> <TMP_BV_8_445|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 1 0 
1  |     0 0 0 0 1 
2  |       1 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 1 0 0 0 
1  |     0 0 1 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 1 (cell size 8)
Access 6 cell 1 offset 0 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
17 -> 0 (size 1 / cell size 8 / offset 0
20 -> 1 (size 1 / cell size 5 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_64_454|64> <TMP_BV_64_456|64>)) (== <TMP_BV_40_455|40> <TMP_BV_40_457|40>))

CONSTRAINTS

(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_456|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_456|64>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_454|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_454|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_454|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_454|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_454|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_454|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_454|64> <TMP_BV_64_456|64>)) (== <TMP_BV_40_455|40> <TMP_BV_40_457|40>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 1 1 0 
1  |     0 0 0 0 0 1 
2  |       1 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             1 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 1 1 0 0 0 0 
1  |     0 0 1 0 0 0 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 0 offset 0 size 1 (cell size 8)
Access 7 cell 1 offset 0 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
16 -> 0 (size 4 / cell size 8 / offset 0
34 -> 0 (size 1 / cell size 8 / offset 0
37 -> 1 (size 1 / cell size 5 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_64_465|64> <TMP_BV_64_467|64>)) (== <TMP_BV_40_466|40> <TMP_BV_40_468|40>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_64_467|64>[7:0]))[7:0] (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_64_467|64>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_465|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_465|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_465|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_465|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_465|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_465|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_465|64> <TMP_BV_64_467|64>)) (== <TMP_BV_40_466|40> <TMP_BV_40_468|40>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 1 0 0 0 
1  |     0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 1 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 1 (cell size 8)
Access 6 cell 1 offset 0 size 1 (cell size 5)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
17 -> 0 (size 1 / cell size 8 / offset 0
20 -> 1 (size 1 / cell size 5 / offset 0
26 -> 2 (size 1 / cell size 1 / offset 0
29 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_477|64> <TMP_BV_64_479|64>)) (== <TMP_BV_40_478|40> <TMP_BV_40_480|40>)) (== <TMP_BV_8_483|8> <TMP_BV_8_481|8>)) (== <TMP_BV_8_484|8> <TMP_BV_8_482|8>))

CONSTRAINTS

(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_479|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_479|64>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_479|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_481|8>))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_479|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_481|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_477|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_477|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_477|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_477|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_477|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_477|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_477|64> <TMP_BV_64_479|64>)) (== <TMP_BV_40_478|40> <TMP_BV_40_480|40>)) (== <TMP_BV_8_483|8> <TMP_BV_8_481|8>)) (== <TMP_BV_8_484|8> <TMP_BV_8_482|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 1 1 0 0 0 
1  |     0 0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             1 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 1 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 0 offset 0 size 1 (cell size 8)
Access 7 cell 1 offset 0 size 1 (cell size 5)
Access 8 cell 2 offset 0 size 1 (cell size 1)
Access 9 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
16 -> 0 (size 4 / cell size 8 / offset 0
34 -> 0 (size 1 / cell size 8 / offset 0
37 -> 1 (size 1 / cell size 5 / offset 0
43 -> 2 (size 1 / cell size 1 / offset 0
46 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_494|64> <TMP_BV_64_496|64>)) (== <TMP_BV_40_495|40> <TMP_BV_40_497|40>)) (== <TMP_BV_8_500|8> <TMP_BV_8_498|8>)) (== <TMP_BV_8_501|8> <TMP_BV_8_499|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_64_496|64>[7:0]))[7:0] (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_64_496|64>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_64_496|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_498|8>))[7:0] (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_64_496|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_498|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_494|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_494|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_494|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_494|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_494|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_494|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_494|64> <TMP_BV_64_496|64>)) (== <TMP_BV_40_495|40> <TMP_BV_40_497|40>)) (== <TMP_BV_8_500|8> <TMP_BV_8_498|8>)) (== <TMP_BV_8_501|8> <TMP_BV_8_499|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 1 0 0 0 0 
1  |     0 0 0 0 1 0 0 0 
2  |       1 0 0 0 1 1 0 
3  |         0 0 0 1 1 0 
4  |           0 0 0 0 1 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 1 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 1 0 0 0 1 1 0 
1  |     0 0 1 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 1 1 0 
6  |               0 0 1 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 1 offset 0 size 4 (cell size 5)
Access 7 cell 0 offset 4 size 4 (cell size 8)
Access 8 cell 0 offset 4 size 1 (cell size 8)
Access 9 cell 1 offset 4 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
16 -> 0 (size 4 / cell size 8 / offset 0
45 -> 1 (size 4 / cell size 5 / offset 0
48 -> 0 (size 4 / cell size 8 / offset 4
74 -> 0 (size 1 / cell size 8 / offset 4
77 -> 1 (size 1 / cell size 5 / offset 4
Start memory constraint: (and (and TRUE (== <TMP_BV_64_510|64> <TMP_BV_64_512|64>)) (== <TMP_BV_40_511|40> <TMP_BV_40_513|40>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_512|64>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_512|64>[63:32]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_512|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_512|64>[39:32]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_512|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_512|64>[39:32]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_510|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_510|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_510|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_510|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_510|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_510|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_510|64> <TMP_BV_64_512|64>)) (== <TMP_BV_40_511|40> <TMP_BV_40_513|40>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 1 0 0 0 0 0 
2  |       1 0 0 0 1 1 0 0 0 
3  |         0 0 0 1 1 0 0 0 
4  |           0 0 0 0 1 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 1 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 1 0 0 0 1 1 0 0 0 
1  |     0 0 1 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 1 1 0 0 0 
6  |               0 0 1 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 1 offset 0 size 4 (cell size 5)
Access 7 cell 0 offset 4 size 4 (cell size 8)
Access 8 cell 0 offset 4 size 1 (cell size 8)
Access 9 cell 1 offset 4 size 1 (cell size 5)
Access 10 cell 2 offset 0 size 1 (cell size 1)
Access 11 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
16 -> 0 (size 4 / cell size 8 / offset 0
45 -> 1 (size 4 / cell size 5 / offset 0
48 -> 0 (size 4 / cell size 8 / offset 4
74 -> 0 (size 1 / cell size 8 / offset 4
77 -> 1 (size 1 / cell size 5 / offset 4
83 -> 2 (size 1 / cell size 1 / offset 0
86 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_524|64> <TMP_BV_64_526|64>)) (== <TMP_BV_40_525|40> <TMP_BV_40_527|40>)) (== <TMP_BV_8_530|8> <TMP_BV_8_528|8>)) (== <TMP_BV_8_531|8> <TMP_BV_8_529|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_526|64>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_526|64>[63:32]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_526|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_526|64>[39:32]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_526|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_526|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_526|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_526|64>[39:32]))[63:16] (sign-extend-16 <TMP_BV_8_528|8>))[7:0] (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_526|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_526|64>[39:32]))[63:16] (sign-extend-16 <TMP_BV_8_528|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_524|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_524|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_524|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_524|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_524|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_524|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_524|64> <TMP_BV_64_526|64>)) (== <TMP_BV_40_525|40> <TMP_BV_40_527|40>)) (== <TMP_BV_8_530|8> <TMP_BV_8_528|8>)) (== <TMP_BV_8_531|8> <TMP_BV_8_529|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 4 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 1 0 0 0 0 0 
2  |       1 0 0 0 1 0 0 0 0 
3  |         0 0 0 1 0 0 0 0 
4  |           0 0 0 1 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     1 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 1 0 0 0 1 0 0 0 0 
1  |     0 0 1 0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 1 1 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 
6  |               0 1 0 0 0 
7  |                 0 1 1 0 
8  |                   0 0 1 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 0 offset 4 size 1 (cell size 12)
Access 4 cell 1 offset 4 size 1 (cell size 9)
Access 5 cell 0 offset 0 size 4 (cell size 12)
Access 6 cell 1 offset 0 size 4 (cell size 9)
Access 7 cell 0 offset 4 size 4 (cell size 12)
Access 8 cell 1 offset 4 size 4 (cell size 9)
Access 9 cell 0 offset 8 size 4 (cell size 12)
Access 10 cell 0 offset 8 size 1 (cell size 12)
Access 11 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
58 -> 0 (size 1 / cell size 12 / offset 4
61 -> 1 (size 1 / cell size 9 / offset 4
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 9 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
62 -> 1 (size 4 / cell size 9 / offset 4
65 -> 0 (size 4 / cell size 12 / offset 8
91 -> 0 (size 1 / cell size 12 / offset 8
94 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and TRUE (== <TMP_BV_96_541|96> <TMP_BV_96_543|96>)) (== <TMP_BV_72_542|72> <TMP_BV_72_544|72>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_543|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_543|96>[63:32]))[31:0])[31:0]) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_543|96>[95:64])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_543|96>[95:64]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_543|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_543|96>[71:64]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_543|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_543|96>[71:64]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_541|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_541|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_541|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_541|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_541|96>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_541|96>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_541|96> <TMP_BV_96_543|96>)) (== <TMP_BV_72_542|72> <TMP_BV_72_544|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 4 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 1 0 0 0 0 0 0 0 
2  |       1 0 0 0 1 0 0 0 0 0 0 
3  |         0 0 0 1 0 0 0 0 0 0 
4  |           0 0 0 1 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     1 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 1 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 1 1 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 
7  |                 0 1 1 0 0 0 
8  |                   0 0 1 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 0 offset 4 size 1 (cell size 12)
Access 4 cell 1 offset 4 size 1 (cell size 9)
Access 5 cell 0 offset 0 size 4 (cell size 12)
Access 6 cell 1 offset 0 size 4 (cell size 9)
Access 7 cell 0 offset 4 size 4 (cell size 12)
Access 8 cell 1 offset 4 size 4 (cell size 9)
Access 9 cell 0 offset 8 size 4 (cell size 12)
Access 10 cell 0 offset 8 size 1 (cell size 12)
Access 11 cell 1 offset 8 size 1 (cell size 9)
Access 12 cell 2 offset 0 size 1 (cell size 1)
Access 13 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
58 -> 0 (size 1 / cell size 12 / offset 4
61 -> 1 (size 1 / cell size 9 / offset 4
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 9 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
62 -> 1 (size 4 / cell size 9 / offset 4
65 -> 0 (size 4 / cell size 12 / offset 8
91 -> 0 (size 1 / cell size 12 / offset 8
94 -> 1 (size 1 / cell size 9 / offset 8
100 -> 2 (size 1 / cell size 1 / offset 0
103 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_556|96> <TMP_BV_96_558|96>)) (== <TMP_BV_72_557|72> <TMP_BV_72_559|72>)) (== <TMP_BV_8_562|8> <TMP_BV_8_560|8>)) (== <TMP_BV_8_563|8> <TMP_BV_8_561|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_558|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_558|96>[63:32]))[31:0])[31:0]) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_558|96>[95:64])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_558|96>[95:64]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_558|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_558|96>[71:64]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_558|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_558|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_558|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_558|96>[71:64]))[63:16] (sign-extend-16 <TMP_BV_8_560|8>))[7:0] (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_558|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_558|96>[71:64]))[63:16] (sign-extend-16 <TMP_BV_8_560|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_556|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_556|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_556|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_556|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_556|96>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_556|96>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_556|96> <TMP_BV_96_558|96>)) (== <TMP_BV_72_557|72> <TMP_BV_72_559|72>)) (== <TMP_BV_8_562|8> <TMP_BV_8_560|8>)) (== <TMP_BV_8_563|8> <TMP_BV_8_561|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 1 
2  |       1 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 1 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 1 0 0 0 
4  |           0 1 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 1 (cell size 8)
Access 8 cell 1 offset 0 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
17 -> 0 (size 1 / cell size 8 / offset 0
20 -> 1 (size 1 / cell size 6 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_64_572|64> <TMP_BV_64_574|64>)) (== <TMP_BV_48_573|48> <TMP_BV_48_575|48>))

CONSTRAINTS

(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_574|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_574|64>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_572|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_572|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_572|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_572|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_572|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_572|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_572|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_572|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_572|64> <TMP_BV_64_574|64>)) (== <TMP_BV_48_573|48> <TMP_BV_48_575|48>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 1 1 0 
1  |     0 0 0 0 0 0 0 1 
2  |       1 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 1 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 1 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 
4  |           0 1 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 4 (cell size 8)
Access 8 cell 0 offset 0 size 1 (cell size 8)
Access 9 cell 1 offset 0 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
16 -> 0 (size 4 / cell size 8 / offset 0
34 -> 0 (size 1 / cell size 8 / offset 0
37 -> 1 (size 1 / cell size 6 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_64_585|64> <TMP_BV_64_587|64>)) (== <TMP_BV_48_586|48> <TMP_BV_48_588|48>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_64_587|64>[7:0]))[7:0] (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_64_587|64>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_585|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_585|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_585|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_585|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_585|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_585|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_585|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_585|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_585|64> <TMP_BV_64_587|64>)) (== <TMP_BV_48_586|48> <TMP_BV_48_588|48>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 
4  |           0 1 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 1 (cell size 8)
Access 8 cell 1 offset 0 size 1 (cell size 6)
Access 9 cell 2 offset 0 size 1 (cell size 1)
Access 10 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
17 -> 0 (size 1 / cell size 8 / offset 0
20 -> 1 (size 1 / cell size 6 / offset 0
26 -> 2 (size 1 / cell size 1 / offset 0
29 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_599|64> <TMP_BV_64_601|64>)) (== <TMP_BV_48_600|48> <TMP_BV_48_602|48>)) (== <TMP_BV_8_605|8> <TMP_BV_8_603|8>)) (== <TMP_BV_8_606|8> <TMP_BV_8_604|8>))

CONSTRAINTS

(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_601|64>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_601|64>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_601|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_603|8>))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_64_601|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_603|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_599|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_599|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_599|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_599|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_599|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_599|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_599|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_599|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_599|64> <TMP_BV_64_601|64>)) (== <TMP_BV_48_600|48> <TMP_BV_48_602|48>)) (== <TMP_BV_8_605|8> <TMP_BV_8_603|8>)) (== <TMP_BV_8_606|8> <TMP_BV_8_604|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 1 1 0 0 0 
1  |     0 0 0 0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 1 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 4 (cell size 8)
Access 8 cell 0 offset 0 size 1 (cell size 8)
Access 9 cell 1 offset 0 size 1 (cell size 6)
Access 10 cell 2 offset 0 size 1 (cell size 1)
Access 11 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
16 -> 0 (size 4 / cell size 8 / offset 0
34 -> 0 (size 1 / cell size 8 / offset 0
37 -> 1 (size 1 / cell size 6 / offset 0
43 -> 2 (size 1 / cell size 1 / offset 0
46 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_618|64> <TMP_BV_64_620|64>)) (== <TMP_BV_48_619|48> <TMP_BV_48_621|48>)) (== <TMP_BV_8_624|8> <TMP_BV_8_622|8>)) (== <TMP_BV_8_625|8> <TMP_BV_8_623|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_64_620|64>[7:0]))[7:0] (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_64_620|64>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_64_620|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_622|8>))[7:0] (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_64_620|64>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_622|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_618|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_618|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_618|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_618|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_618|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_618|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_618|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_618|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_618|64> <TMP_BV_64_620|64>)) (== <TMP_BV_48_619|48> <TMP_BV_48_621|48>)) (== <TMP_BV_8_624|8> <TMP_BV_8_622|8>)) (== <TMP_BV_8_625|8> <TMP_BV_8_623|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 
2  |       1 0 0 0 0 0 1 1 0 
3  |         0 0 0 0 0 1 1 0 
4  |           0 0 0 0 0 0 1 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     1 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 1 0 0 0 0 0 1 1 0 
1  |     0 0 1 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 1 1 0 
8  |                   0 0 1 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 4 (cell size 8)
Access 8 cell 1 offset 0 size 4 (cell size 6)
Access 9 cell 0 offset 4 size 4 (cell size 8)
Access 10 cell 0 offset 4 size 1 (cell size 8)
Access 11 cell 1 offset 4 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
16 -> 0 (size 4 / cell size 8 / offset 0
45 -> 1 (size 4 / cell size 6 / offset 0
48 -> 0 (size 4 / cell size 8 / offset 4
74 -> 0 (size 1 / cell size 8 / offset 4
77 -> 1 (size 1 / cell size 6 / offset 4
Start memory constraint: (and (and TRUE (== <TMP_BV_64_636|64> <TMP_BV_64_638|64>)) (== <TMP_BV_48_637|48> <TMP_BV_48_639|48>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_638|64>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_638|64>[63:32]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_638|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_638|64>[39:32]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_638|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_638|64>[39:32]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_636|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_636|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_636|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_636|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_636|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_636|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_636|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_636|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_636|64> <TMP_BV_64_638|64>)) (== <TMP_BV_48_637|48> <TMP_BV_48_639|48>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 
2  |       1 0 0 0 0 0 1 1 0 0 0 
3  |         0 0 0 0 0 1 1 0 0 0 
4  |           0 0 0 0 0 0 1 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     1 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 1 0 0 0 0 0 1 1 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 1 1 0 0 0 
8  |                   0 0 1 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 4 (cell size 8)
Access 8 cell 1 offset 0 size 4 (cell size 6)
Access 9 cell 0 offset 4 size 4 (cell size 8)
Access 10 cell 0 offset 4 size 1 (cell size 8)
Access 11 cell 1 offset 4 size 1 (cell size 6)
Access 12 cell 2 offset 0 size 1 (cell size 1)
Access 13 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
16 -> 0 (size 4 / cell size 8 / offset 0
45 -> 1 (size 4 / cell size 6 / offset 0
48 -> 0 (size 4 / cell size 8 / offset 4
74 -> 0 (size 1 / cell size 8 / offset 4
77 -> 1 (size 1 / cell size 6 / offset 4
83 -> 2 (size 1 / cell size 1 / offset 0
86 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_652|64> <TMP_BV_64_654|64>)) (== <TMP_BV_48_653|48> <TMP_BV_48_655|48>)) (== <TMP_BV_8_658|8> <TMP_BV_8_656|8>)) (== <TMP_BV_8_659|8> <TMP_BV_8_657|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_654|64>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_654|64>[63:32]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_654|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_654|64>[39:32]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_654|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_654|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_654|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_654|64>[39:32]))[63:16] (sign-extend-16 <TMP_BV_8_656|8>))[7:0] (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_654|64>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_64_654|64>[39:32]))[63:16] (sign-extend-16 <TMP_BV_8_656|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_652|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_652|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_652|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_652|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_652|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_652|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_652|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_652|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_652|64> <TMP_BV_64_654|64>)) (== <TMP_BV_48_653|48> <TMP_BV_48_655|48>)) (== <TMP_BV_8_658|8> <TMP_BV_8_656|8>)) (== <TMP_BV_8_659|8> <TMP_BV_8_657|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 4 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 
2  |       1 0 0 0 0 0 1 0 0 0 0 
3  |         0 0 0 0 0 1 0 0 0 0 
4  |           0 0 0 0 0 1 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         1 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 1 0 0 0 0 0 1 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 0 0 1 1 0 
3  |         0 1 0 0 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 1 0 0 0 0 
8  |                   0 1 0 0 0 
9  |                     0 1 1 0 
10 |                       0 0 1 
11 |                         0 0 
12 |                           0 
13 |                             

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 0 offset 4 size 1 (cell size 12)
Access 4 cell 1 offset 4 size 1 (cell size 9)
Access 5 cell 0 offset 5 size 1 (cell size 12)
Access 6 cell 1 offset 5 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 1 offset 0 size 4 (cell size 9)
Access 9 cell 0 offset 4 size 4 (cell size 12)
Access 10 cell 1 offset 4 size 4 (cell size 9)
Access 11 cell 0 offset 8 size 4 (cell size 12)
Access 12 cell 0 offset 8 size 1 (cell size 12)
Access 13 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
58 -> 0 (size 1 / cell size 12 / offset 4
61 -> 1 (size 1 / cell size 9 / offset 4
67 -> 0 (size 1 / cell size 12 / offset 5
70 -> 1 (size 1 / cell size 9 / offset 5
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 9 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
62 -> 1 (size 4 / cell size 9 / offset 4
65 -> 0 (size 4 / cell size 12 / offset 8
91 -> 0 (size 1 / cell size 12 / offset 8
94 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and TRUE (== <TMP_BV_96_671|96> <TMP_BV_96_673|96>)) (== <TMP_BV_72_672|72> <TMP_BV_72_674|72>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_673|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_673|96>[63:32]))[31:0])[31:0]) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_673|96>[95:64])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_673|96>[95:64]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_673|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_673|96>[71:64]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_673|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_673|96>[71:64]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_671|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_671|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_671|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_671|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_671|96>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_671|96>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_671|96>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_671|96>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_671|96> <TMP_BV_96_673|96>)) (== <TMP_BV_72_672|72> <TMP_BV_72_674|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 4 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 16
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 0 0 
2  |       1 0 0 0 0 0 1 0 0 0 0 0 0 
3  |         0 0 0 0 0 1 0 0 0 0 0 0 
4  |           0 0 0 0 0 1 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 0 0 0 
11 |                         1 0 0 0 
12 |                           0 0 0 
13 |                             0 0 
14 |                               0 
15 |                                 

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 1 1 0 0 0 
3  |         0 1 0 0 0 0 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 0 0 
7  |                 0 1 0 0 0 0 0 0 
8  |                   0 1 0 0 0 0 0 
9  |                     0 1 1 0 0 0 
10 |                       0 0 1 0 0 
11 |                         0 0 0 0 
12 |                           0 0 0 
13 |                             0 0 
14 |                               0 
15 |                                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 0 offset 4 size 1 (cell size 12)
Access 4 cell 1 offset 4 size 1 (cell size 9)
Access 5 cell 0 offset 5 size 1 (cell size 12)
Access 6 cell 1 offset 5 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 1 offset 0 size 4 (cell size 9)
Access 9 cell 0 offset 4 size 4 (cell size 12)
Access 10 cell 1 offset 4 size 4 (cell size 9)
Access 11 cell 0 offset 8 size 4 (cell size 12)
Access 12 cell 0 offset 8 size 1 (cell size 12)
Access 13 cell 1 offset 8 size 1 (cell size 9)
Access 14 cell 2 offset 0 size 1 (cell size 1)
Access 15 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
58 -> 0 (size 1 / cell size 12 / offset 4
61 -> 1 (size 1 / cell size 9 / offset 4
67 -> 0 (size 1 / cell size 12 / offset 5
70 -> 1 (size 1 / cell size 9 / offset 5
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 9 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
62 -> 1 (size 4 / cell size 9 / offset 4
65 -> 0 (size 4 / cell size 12 / offset 8
91 -> 0 (size 1 / cell size 12 / offset 8
94 -> 1 (size 1 / cell size 9 / offset 8
100 -> 2 (size 1 / cell size 1 / offset 0
103 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_688|96> <TMP_BV_96_690|96>)) (== <TMP_BV_72_689|72> <TMP_BV_72_691|72>)) (== <TMP_BV_8_694|8> <TMP_BV_8_692|8>)) (== <TMP_BV_8_695|8> <TMP_BV_8_693|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_690|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_690|96>[63:32]))[31:0])[31:0]) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_690|96>[95:64])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_690|96>[95:64]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_690|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_690|96>[71:64]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_690|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_690|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_690|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_690|96>[71:64]))[63:16] (sign-extend-16 <TMP_BV_8_692|8>))[7:0] (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_690|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_690|96>[71:64]))[63:16] (sign-extend-16 <TMP_BV_8_692|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_688|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_688|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_688|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_688|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_688|96>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_688|96>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_688|96>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_688|96>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_688|96> <TMP_BV_96_690|96>)) (== <TMP_BV_72_689|72> <TMP_BV_72_691|72>)) (== <TMP_BV_8_694|8> <TMP_BV_8_692|8>)) (== <TMP_BV_8_695|8> <TMP_BV_8_693|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           1 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 1 1 0 0 0 
3  |         0 0 1 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 1 (cell size 12)
Access 8 cell 1 offset 0 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
17 -> 0 (size 1 / cell size 12 / offset 0
20 -> 1 (size 1 / cell size 9 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_96_703|96> <TMP_BV_96_705|96>)) (== <TMP_BV_72_704|72> <TMP_BV_72_706|72>))

CONSTRAINTS

(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_705|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_705|96>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_703|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_703|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_703|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_703|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_703|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_703|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_703|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_703|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_703|96> <TMP_BV_96_705|96>)) (== <TMP_BV_72_704|72> <TMP_BV_72_706|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 1 1 0 
1  |     0 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           1 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 1 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 
3  |         0 0 1 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 0 offset 0 size 1 (cell size 12)
Access 9 cell 1 offset 0 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
34 -> 0 (size 1 / cell size 12 / offset 0
37 -> 1 (size 1 / cell size 9 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_96_715|96> <TMP_BV_96_717|96>)) (== <TMP_BV_72_716|72> <TMP_BV_72_718|72>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_96_717|96>[7:0]))[7:0] (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_96_717|96>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_715|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_715|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_715|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_715|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_715|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_715|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_715|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_715|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_715|96> <TMP_BV_96_717|96>)) (== <TMP_BV_72_716|72> <TMP_BV_72_718|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 1 (cell size 12)
Access 8 cell 1 offset 0 size 1 (cell size 9)
Access 9 cell 2 offset 0 size 1 (cell size 1)
Access 10 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
17 -> 0 (size 1 / cell size 12 / offset 0
20 -> 1 (size 1 / cell size 9 / offset 0
26 -> 2 (size 1 / cell size 1 / offset 0
29 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_728|96> <TMP_BV_96_730|96>)) (== <TMP_BV_72_729|72> <TMP_BV_72_731|72>)) (== <TMP_BV_8_734|8> <TMP_BV_8_732|8>)) (== <TMP_BV_8_735|8> <TMP_BV_8_733|8>))

CONSTRAINTS

(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_730|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_730|96>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_730|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_732|8>))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_730|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_732|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_728|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_728|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_728|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_728|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_728|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_728|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_728|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_728|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_728|96> <TMP_BV_96_730|96>)) (== <TMP_BV_72_729|72> <TMP_BV_72_731|72>)) (== <TMP_BV_8_734|8> <TMP_BV_8_732|8>)) (== <TMP_BV_8_735|8> <TMP_BV_8_733|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 1 1 0 0 0 
1  |     0 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 1 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 0 offset 0 size 1 (cell size 12)
Access 9 cell 1 offset 0 size 1 (cell size 9)
Access 10 cell 2 offset 0 size 1 (cell size 1)
Access 11 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
34 -> 0 (size 1 / cell size 12 / offset 0
37 -> 1 (size 1 / cell size 9 / offset 0
43 -> 2 (size 1 / cell size 1 / offset 0
46 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_746|96> <TMP_BV_96_748|96>)) (== <TMP_BV_72_747|72> <TMP_BV_72_749|72>)) (== <TMP_BV_8_752|8> <TMP_BV_8_750|8>)) (== <TMP_BV_8_753|8> <TMP_BV_8_751|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_96_748|96>[7:0]))[7:0] (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_96_748|96>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_96_748|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_750|8>))[7:0] (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_96_748|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_750|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_746|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_746|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_746|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_746|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_746|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_746|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_746|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_746|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_746|96> <TMP_BV_96_748|96>)) (== <TMP_BV_72_747|72> <TMP_BV_72_749|72>)) (== <TMP_BV_8_752|8> <TMP_BV_8_750|8>)) (== <TMP_BV_8_753|8> <TMP_BV_8_751|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 1 1 0 
3  |         0 0 0 0 0 0 0 1 
4  |           1 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     1 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 0 0 0 0 0 0 1 1 0 
1  |     0 1 0 0 0 0 0 0 0 1 
2  |       0 1 1 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 1 1 0 
8  |                   0 0 1 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 1 offset 0 size 4 (cell size 9)
Access 9 cell 0 offset 4 size 4 (cell size 12)
Access 10 cell 0 offset 4 size 1 (cell size 12)
Access 11 cell 1 offset 4 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 9 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
74 -> 0 (size 1 / cell size 12 / offset 4
77 -> 1 (size 1 / cell size 9 / offset 4
Start memory constraint: (and (and TRUE (== <TMP_BV_96_763|96> <TMP_BV_96_765|96>)) (== <TMP_BV_72_764|72> <TMP_BV_72_766|72>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_765|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_765|96>[63:32]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_765|96>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_765|96>[39:32]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_765|96>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_765|96>[39:32]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_763|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_763|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_763|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_763|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_763|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_763|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_763|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_763|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_763|96> <TMP_BV_96_765|96>)) (== <TMP_BV_72_764|72> <TMP_BV_72_766|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 1 1 0 0 0 
3  |         0 0 0 0 0 0 0 1 0 0 
4  |           1 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     1 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 0 0 0 0 0 0 1 1 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 1 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 1 1 0 0 0 
8  |                   0 0 1 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 1 offset 0 size 4 (cell size 9)
Access 9 cell 0 offset 4 size 4 (cell size 12)
Access 10 cell 0 offset 4 size 1 (cell size 12)
Access 11 cell 1 offset 4 size 1 (cell size 9)
Access 12 cell 2 offset 0 size 1 (cell size 1)
Access 13 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 9 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
74 -> 0 (size 1 / cell size 12 / offset 4
77 -> 1 (size 1 / cell size 9 / offset 4
83 -> 2 (size 1 / cell size 1 / offset 0
86 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_778|96> <TMP_BV_96_780|96>)) (== <TMP_BV_72_779|72> <TMP_BV_72_781|72>)) (== <TMP_BV_8_784|8> <TMP_BV_8_782|8>)) (== <TMP_BV_8_785|8> <TMP_BV_8_783|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_780|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_780|96>[63:32]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_780|96>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_780|96>[39:32]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_780|96>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_780|96>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_780|96>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_780|96>[39:32]))[63:16] (sign-extend-16 <TMP_BV_8_782|8>))[7:0] (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_780|96>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_780|96>[39:32]))[63:16] (sign-extend-16 <TMP_BV_8_782|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_778|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_778|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_778|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_778|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_778|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_778|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_778|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_778|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_778|96> <TMP_BV_96_780|96>)) (== <TMP_BV_72_779|72> <TMP_BV_72_781|72>)) (== <TMP_BV_8_784|8> <TMP_BV_8_782|8>)) (== <TMP_BV_8_785|8> <TMP_BV_8_783|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 4 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 1 0 0 0 0 
3  |         0 0 0 0 0 0 1 0 0 0 
4  |           1 0 0 0 0 0 1 1 0 
5  |             0 0 0 0 0 1 1 0 
6  |               0 0 0 0 0 0 1 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         1 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 0 0 0 0 0 0 1 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 1 0 0 0 
2  |       0 1 1 0 0 0 0 0 1 1 0 
3  |         0 0 1 0 0 0 0 0 0 1 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 1 0 0 0 0 
8  |                   0 1 0 0 0 
9  |                     0 1 1 0 
10 |                       0 0 1 
11 |                         0 0 
12 |                           0 
13 |                             

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 1 offset 0 size 4 (cell size 9)
Access 9 cell 0 offset 4 size 4 (cell size 12)
Access 10 cell 1 offset 4 size 4 (cell size 9)
Access 11 cell 0 offset 8 size 4 (cell size 12)
Access 12 cell 0 offset 8 size 1 (cell size 12)
Access 13 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 9 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
62 -> 1 (size 4 / cell size 9 / offset 4
65 -> 0 (size 4 / cell size 12 / offset 8
91 -> 0 (size 1 / cell size 12 / offset 8
94 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and TRUE (== <TMP_BV_96_796|96> <TMP_BV_96_798|96>)) (== <TMP_BV_72_797|72> <TMP_BV_72_799|72>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_798|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_798|96>[63:32]))[31:0])[31:0]) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_798|96>[95:64])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_798|96>[95:64]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_798|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_798|96>[71:64]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_798|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_798|96>[71:64]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_796|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_796|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_796|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_796|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_796|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_796|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_796|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_796|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_796|96> <TMP_BV_96_798|96>)) (== <TMP_BV_72_797|72> <TMP_BV_72_799|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 4 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 16
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 1 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 1 0 0 0 0 0 
4  |           1 0 0 0 0 0 1 1 0 0 0 
5  |             0 0 0 0 0 1 1 0 0 0 
6  |               0 0 0 0 0 0 1 0 0 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 0 0 0 
11 |                         1 0 0 0 
12 |                           0 0 0 
13 |                             0 0 
14 |                               0 
15 |                                 

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 1 1 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 1 0 0 
4  |           0 0 0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 0 0 
7  |                 0 1 0 0 0 0 0 0 
8  |                   0 1 0 0 0 0 0 
9  |                     0 1 1 0 0 0 
10 |                       0 0 1 0 0 
11 |                         0 0 0 0 
12 |                           0 0 0 
13 |                             0 0 
14 |                               0 
15 |                                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 1 offset 0 size 4 (cell size 9)
Access 9 cell 0 offset 4 size 4 (cell size 12)
Access 10 cell 1 offset 4 size 4 (cell size 9)
Access 11 cell 0 offset 8 size 4 (cell size 12)
Access 12 cell 0 offset 8 size 1 (cell size 12)
Access 13 cell 1 offset 8 size 1 (cell size 9)
Access 14 cell 2 offset 0 size 1 (cell size 1)
Access 15 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 9 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
62 -> 1 (size 4 / cell size 9 / offset 4
65 -> 0 (size 4 / cell size 12 / offset 8
91 -> 0 (size 1 / cell size 12 / offset 8
94 -> 1 (size 1 / cell size 9 / offset 8
100 -> 2 (size 1 / cell size 1 / offset 0
103 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_812|96> <TMP_BV_96_814|96>)) (== <TMP_BV_72_813|72> <TMP_BV_72_815|72>)) (== <TMP_BV_8_818|8> <TMP_BV_8_816|8>)) (== <TMP_BV_8_819|8> <TMP_BV_8_817|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_814|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_814|96>[63:32]))[31:0])[31:0]) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_814|96>[95:64])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_814|96>[95:64]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_814|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_814|96>[71:64]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_814|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_814|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_814|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_814|96>[71:64]))[63:16] (sign-extend-16 <TMP_BV_8_816|8>))[7:0] (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_814|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_814|96>[71:64]))[63:16] (sign-extend-16 <TMP_BV_8_816|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_812|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_812|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_812|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_812|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_812|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_812|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_812|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_812|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_812|96> <TMP_BV_96_814|96>)) (== <TMP_BV_72_813|72> <TMP_BV_72_815|72>)) (== <TMP_BV_8_818|8> <TMP_BV_8_816|8>)) (== <TMP_BV_8_819|8> <TMP_BV_8_817|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 1 0 0 0 
6  |               0 1 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 1 (cell size 12)
Access 10 cell 1 offset 0 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
17 -> 0 (size 1 / cell size 12 / offset 0
20 -> 1 (size 1 / cell size 10 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_96_829|96> <TMP_BV_96_831|96>)) (== <TMP_BV_80_830|80> <TMP_BV_80_832|80>))

CONSTRAINTS

(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_831|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_831|96>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_829|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_829|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_829|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_829|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_829|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_829|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_829|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_829|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_829|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_829|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_829|96> <TMP_BV_96_831|96>)) (== <TMP_BV_80_830|80> <TMP_BV_80_832|80>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 1 1 0 
1  |     0 0 0 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     1 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 
6  |               0 1 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 0 offset 0 size 1 (cell size 12)
Access 11 cell 1 offset 0 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
34 -> 0 (size 1 / cell size 12 / offset 0
37 -> 1 (size 1 / cell size 10 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_96_843|96> <TMP_BV_96_845|96>)) (== <TMP_BV_80_844|80> <TMP_BV_80_846|80>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_96_845|96>[7:0]))[7:0] (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_96_845|96>[7:0]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_843|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_843|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_843|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_843|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_843|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_843|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_843|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_843|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_843|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_843|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_843|96> <TMP_BV_96_845|96>)) (== <TMP_BV_80_844|80> <TMP_BV_80_846|80>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 13
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   0 0 0 0 
9  |                     0 0 0 
10 |                       0 0 
11 |                         0 
12 |                           

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 
6  |               0 1 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   0 0 0 0 
9  |                     0 0 0 
10 |                       0 0 
11 |                         0 
12 |                           

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 1 (cell size 12)
Access 10 cell 1 offset 0 size 1 (cell size 10)
Access 11 cell 2 offset 0 size 1 (cell size 1)
Access 12 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
17 -> 0 (size 1 / cell size 12 / offset 0
20 -> 1 (size 1 / cell size 10 / offset 0
26 -> 2 (size 1 / cell size 1 / offset 0
29 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_858|96> <TMP_BV_96_860|96>)) (== <TMP_BV_80_859|80> <TMP_BV_80_861|80>)) (== <TMP_BV_8_864|8> <TMP_BV_8_862|8>)) (== <TMP_BV_8_865|8> <TMP_BV_8_863|8>))

CONSTRAINTS

(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_860|96>[7:0]))[7:0] (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_860|96>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_860|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_862|8>))[7:0] (concat (concat <%rsi_2_INIT|64>[63:16] (sign-extend-16 <TMP_BV_96_860|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_862|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_858|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_858|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_858|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_858|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_858|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_858|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_858|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_858|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_858|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_858|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_858|96> <TMP_BV_96_860|96>)) (== <TMP_BV_80_859|80> <TMP_BV_80_861|80>)) (== <TMP_BV_8_864|8> <TMP_BV_8_862|8>)) (== <TMP_BV_8_865|8> <TMP_BV_8_863|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 0 0 1 1 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     1 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 0 offset 0 size 1 (cell size 12)
Access 11 cell 1 offset 0 size 1 (cell size 10)
Access 12 cell 2 offset 0 size 1 (cell size 1)
Access 13 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
34 -> 0 (size 1 / cell size 12 / offset 0
37 -> 1 (size 1 / cell size 10 / offset 0
43 -> 2 (size 1 / cell size 1 / offset 0
46 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_878|96> <TMP_BV_96_880|96>)) (== <TMP_BV_80_879|80> <TMP_BV_80_881|80>)) (== <TMP_BV_8_884|8> <TMP_BV_8_882|8>)) (== <TMP_BV_8_885|8> <TMP_BV_8_883|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_96_880|96>[7:0]))[7:0] (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_96_880|96>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_96_880|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_882|8>))[7:0] (concat (concat (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[63:16] (sign-extend-16 <TMP_BV_96_880|96>[7:0]))[63:16] (sign-extend-16 <TMP_BV_8_882|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_878|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_878|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_878|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_878|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_878|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_878|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_878|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_878|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_878|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_878|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_878|96> <TMP_BV_96_880|96>)) (== <TMP_BV_80_879|80> <TMP_BV_80_881|80>)) (== <TMP_BV_8_884|8> <TMP_BV_8_882|8>)) (== <TMP_BV_8_885|8> <TMP_BV_8_883|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 0 0 1 1 0 
3  |         0 0 0 0 0 0 0 0 0 1 
4  |           1 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         1 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 1 1 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 1 
2  |       0 1 1 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 1 1 0 
10 |                       0 0 1 
11 |                         0 0 
12 |                           0 
13 |                             

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 1 offset 0 size 4 (cell size 10)
Access 11 cell 0 offset 4 size 4 (cell size 12)
Access 12 cell 0 offset 4 size 1 (cell size 12)
Access 13 cell 1 offset 4 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 10 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
74 -> 0 (size 1 / cell size 12 / offset 4
77 -> 1 (size 1 / cell size 10 / offset 4
Start memory constraint: (and (and TRUE (== <TMP_BV_96_897|96> <TMP_BV_96_899|96>)) (== <TMP_BV_80_898|80> <TMP_BV_80_900|80>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_899|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_899|96>[63:32]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_899|96>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_899|96>[39:32]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_899|96>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_899|96>[39:32]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_897|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_897|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_897|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_897|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_897|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_897|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_897|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_897|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_897|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_897|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_897|96> <TMP_BV_96_899|96>)) (== <TMP_BV_80_898|80> <TMP_BV_80_900|80>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 16
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 1 1 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 1 0 0 
4  |           1 0 0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 0 0 0 
11 |                         1 0 0 0 
12 |                           0 0 0 
13 |                             0 0 
14 |                               0 
15 |                                 

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 1 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 1 1 0 0 0 
10 |                       0 0 1 0 0 
11 |                         0 0 0 0 
12 |                           0 0 0 
13 |                             0 0 
14 |                               0 
15 |                                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 1 offset 0 size 4 (cell size 10)
Access 11 cell 0 offset 4 size 4 (cell size 12)
Access 12 cell 0 offset 4 size 1 (cell size 12)
Access 13 cell 1 offset 4 size 1 (cell size 10)
Access 14 cell 2 offset 0 size 1 (cell size 1)
Access 15 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 10 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
74 -> 0 (size 1 / cell size 12 / offset 4
77 -> 1 (size 1 / cell size 10 / offset 4
83 -> 2 (size 1 / cell size 1 / offset 0
86 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_914|96> <TMP_BV_96_916|96>)) (== <TMP_BV_80_915|80> <TMP_BV_80_917|80>)) (== <TMP_BV_8_920|8> <TMP_BV_8_918|8>)) (== <TMP_BV_8_921|8> <TMP_BV_8_919|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_916|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_916|96>[63:32]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_916|96>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_916|96>[39:32]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_916|96>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_916|96>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_916|96>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_916|96>[39:32]))[63:16] (sign-extend-16 <TMP_BV_8_918|8>))[7:0] (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_916|96>[63:32]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_916|96>[39:32]))[63:16] (sign-extend-16 <TMP_BV_8_918|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_914|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_914|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_914|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_914|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_914|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_914|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_914|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_914|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_914|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_914|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_914|96> <TMP_BV_96_916|96>)) (== <TMP_BV_80_915|80> <TMP_BV_80_917|80>)) (== <TMP_BV_8_920|8> <TMP_BV_8_918|8>)) (== <TMP_BV_8_921|8> <TMP_BV_8_919|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 4 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 16
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 1 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 1 0 0 0 
4  |           1 0 0 0 0 0 0 0 1 1 0 
5  |             0 0 0 0 0 0 0 1 1 0 
6  |               0 0 0 0 0 0 0 0 1 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 0 0 0 
11 |                         0 0 0 0 
12 |                           0 0 0 
13 |                             1 0 
14 |                               0 
15 |                                 

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 1 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 1 1 0 
3  |         0 0 1 0 0 0 0 0 0 0 0 1 
4  |           0 0 0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 1 0 0 0 0 
10 |                       0 1 0 0 0 
11 |                         0 1 1 0 
12 |                           0 0 1 
13 |                             0 0 
14 |                               0 
15 |                                 

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 1 offset 0 size 4 (cell size 10)
Access 11 cell 0 offset 4 size 4 (cell size 12)
Access 12 cell 1 offset 4 size 4 (cell size 10)
Access 13 cell 0 offset 8 size 4 (cell size 12)
Access 14 cell 0 offset 8 size 1 (cell size 12)
Access 15 cell 1 offset 8 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 10 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
62 -> 1 (size 4 / cell size 10 / offset 4
65 -> 0 (size 4 / cell size 12 / offset 8
91 -> 0 (size 1 / cell size 12 / offset 8
94 -> 1 (size 1 / cell size 10 / offset 8
Start memory constraint: (and (and TRUE (== <TMP_BV_96_934|96> <TMP_BV_96_936|96>)) (== <TMP_BV_80_935|80> <TMP_BV_80_937|80>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_936|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_936|96>[63:32]))[31:0])[31:0]) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_936|96>[95:64])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_936|96>[95:64]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_936|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_936|96>[71:64]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_936|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_936|96>[71:64]))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_934|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_934|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_934|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_934|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_934|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_934|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_934|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_934|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_934|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_934|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_934|96> <TMP_BV_96_936|96>)) (== <TMP_BV_80_935|80> <TMP_BV_80_937|80>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 4 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movl %edi, %eax
nop 
nop 
movq %rax, %rcx
movq %rsi, %rdx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
andl $0x2, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
.L_126820:
addl $0x4, %edx
andl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
orl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
notq %r9
leal -0x1010101(%r8), %esi
nop 
nop 
nop 
nop 
andl $0x80808080, %r9d
andl %esi, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movsbw (%r15,%rdx,1), %si
addw $0x1, %dx
andl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addw $0x1, %cx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 18
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 1 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 1 1 0 0 0 
5  |             0 0 0 0 0 0 0 1 1 0 0 0 
6  |               0 0 0 0 0 0 0 0 1 0 0 
7  |                 0 0 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 0 0 
10 |                       0 0 0 0 0 0 0 
11 |                         0 0 0 0 0 0 
12 |                           0 0 0 0 0 
13 |                             1 0 0 0 
14 |                               0 0 0 
15 |                                 0 0 
16 |                                   0 
17 |                                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 1 1 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 0 1 0 0 
4  |           0 0 0 0 0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 0 0 
9  |                     0 1 0 0 0 0 0 0 
10 |                       0 1 0 0 0 0 0 
11 |                         0 1 1 0 0 0 
12 |                           0 0 1 0 0 
13 |                             0 0 0 0 
14 |                               0 0 0 
15 |                                 0 0 
16 |                                   0 
17 |                                     

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 1 offset 0 size 4 (cell size 10)
Access 11 cell 0 offset 4 size 4 (cell size 12)
Access 12 cell 1 offset 4 size 4 (cell size 10)
Access 13 cell 0 offset 8 size 4 (cell size 12)
Access 14 cell 0 offset 8 size 1 (cell size 12)
Access 15 cell 1 offset 8 size 1 (cell size 10)
Access 16 cell 2 offset 0 size 1 (cell size 1)
Access 17 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
16 -> 0 (size 4 / cell size 12 / offset 0
45 -> 1 (size 4 / cell size 10 / offset 0
48 -> 0 (size 4 / cell size 12 / offset 4
62 -> 1 (size 4 / cell size 10 / offset 4
65 -> 0 (size 4 / cell size 12 / offset 8
91 -> 0 (size 1 / cell size 12 / offset 8
94 -> 1 (size 1 / cell size 10 / offset 8
100 -> 2 (size 1 / cell size 1 / offset 0
103 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_952|96> <TMP_BV_96_954|96>)) (== <TMP_BV_80_953|80> <TMP_BV_80_955|80>)) (== <TMP_BV_8_958|8> <TMP_BV_8_956|8>)) (== <TMP_BV_8_959|8> <TMP_BV_8_957|8>))

CONSTRAINTS

(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and <%rdi_2_INIT|64>[31:0] (sign-extend-32 <0x2|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_954|96>[63:32])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_954|96>[63:32]))[31:0])[31:0]) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_954|96>[95:64])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_954|96>[95:64]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_954|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_954|96>[71:64]))[7:0] (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_954|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_954|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0])[15:0]))[15:0])[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (== (and (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_954|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_954|96>[71:64]))[63:16] (sign-extend-16 <TMP_BV_8_956|8>))[7:0] (concat (concat (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_954|96>[95:64]))[31:0])[63:16] (sign-extend-16 <TMP_BV_96_954|96>[71:64]))[63:16] (sign-extend-16 <TMP_BV_8_956|8>))[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_952|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_952|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_952|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_952|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_952|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_952|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_952|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_952|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_952|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_952|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_952|96> <TMP_BV_96_954|96>)) (== <TMP_BV_80_953|80> <TMP_BV_80_955|80>)) (== <TMP_BV_8_958|8> <TMP_BV_8_956|8>)) (== <TMP_BV_8_959|8> <TMP_BV_8_957|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
Equivalent: yes
