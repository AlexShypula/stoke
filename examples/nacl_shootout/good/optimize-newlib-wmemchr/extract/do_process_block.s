  .text
  .globl do_process_block
  .type do_process_block, @function

#! file-offset 0x61300
#! rip-offset  0x21300
#! capacity    448 bytes

# Text                            #  Line  RIP      Bytes  Opcode              
.do_process_block:                #        0x21300  0      OPC=<label>         
  pushq %r14                      #  1     0x21300  2      OPC=pushq_r64_1     
  pushq %r13                      #  2     0x21302  2      OPC=pushq_r64_1     
  pushq %r12                      #  3     0x21304  2      OPC=pushq_r64_1     
  pushq %rbx                      #  4     0x21306  1      OPC=pushq_r64_1     
  subl $0x58, %esp                #  5     0x21307  3      OPC=subl_r32_imm8   
  addq %r15, %rsp                 #  6     0x2130a  3      OPC=addq_r64_r64    
  movl %edi, %edi                 #  7     0x2130d  2      OPC=movl_r32_r32    
  movq %rdi, 0x40(%rsp)           #  8     0x2130f  5      OPC=movq_m64_r64    
  movl %esi, %esi                 #  9     0x21314  2      OPC=movl_r32_r32    
  movl %edx, %edx                 #  10    0x21316  2      OPC=movl_r32_r32    
  movq %rdx, 0x28(%rsp)           #  11    0x21318  5      OPC=movq_m64_r64    
  movl %ecx, %r13d                #  12    0x2131d  3      OPC=movl_r32_r32    
  movl %r8d, %r8d                 #  13    0x21320  3      OPC=movl_r32_r32    
  movq %r8, 0x30(%rsp)            #  14    0x21323  5      OPC=movq_m64_r64    
  movl %r9d, %r9d                 #  15    0x21328  3      OPC=movl_r32_r32    
  movq %r9, 0x38(%rsp)            #  16    0x2132b  5      OPC=movq_m64_r64    
  movl 0x80(%rsp), %eax           #  17    0x21330  7      OPC=movl_r32_m32    
  movq %rax, 0x48(%rsp)           #  18    0x21337  5      OPC=movq_m64_r64    
  movl %r13d, %r12d               #  19    0x2133c  3      OPC=movl_r32_r32    
  nop                             #  20    0x2133f  1      OPC=nop             
  subl 0x28(%rsp), %r12d          #  21    0x21340  5      OPC=subl_r32_m32    
  movslq %r12d, %r12              #  22    0x21345  3      OPC=movslq_r64_r32  
  movq %r12, %rax                 #  23    0x21348  3      OPC=movq_r64_r64    
  shlq $0x4, %rax                 #  24    0x2134b  4      OPC=shlq_r64_imm8   
  subq %r12, %rax                 #  25    0x2134f  3      OPC=subq_r64_r64    
  leaq (%r12,%rax,4), %rdx        #  26    0x21352  4      OPC=leaq_r64_m16    
  movq $0x8888888888888889, %r14  #  27    0x21356  10     OPC=movq_r64_imm64  
  movq %rdx, %rax                 #  28    0x21360  3      OPC=movq_r64_r64    
  mulq %r14                       #  29    0x21363  3      OPC=mulq_r64        
  shrq $0x5, %rdx                 #  30    0x21366  4      OPC=shrq_r64_imm8   
  leal 0x3c(%rdx), %edi           #  31    0x2136a  3      OPC=leal_r32_m16    
  movq %rsi, 0x20(%rsp)           #  32    0x2136d  5      OPC=movq_m64_r64    
  nop                             #  33    0x21372  1      OPC=nop             
  nop                             #  34    0x21373  1      OPC=nop             
  nop                             #  35    0x21374  1      OPC=nop             
  nop                             #  36    0x21375  1      OPC=nop             
  nop                             #  37    0x21376  1      OPC=nop             
  nop                             #  38    0x21377  1      OPC=nop             
  nop                             #  39    0x21378  1      OPC=nop             
  nop                             #  40    0x21379  1      OPC=nop             
  nop                             #  41    0x2137a  1      OPC=nop             
  callq .malloc                   #  42    0x2137b  5      OPC=callq_label     
  movl %eax, %ebx                 #  43    0x21380  2      OPC=movl_r32_r32    
  testq %rbx, %rbx                #  44    0x21382  3      OPC=testq_r64_r64   
  movq 0x20(%rsp), %rsi           #  45    0x21385  5      OPC=movq_r64_m64    
  je .L_214a0                     #  46    0x2138a  6      OPC=je_label_1      
  shrq $0x1, %r12                 #  47    0x21390  3      OPC=shrq_r64_one    
  movl %r12d, %r12d               #  48    0x21393  3      OPC=movl_r32_r32    
  movq %r12, %rax                 #  49    0x21396  3      OPC=movq_r64_r64    
  shlq $0x4, %rax                 #  50    0x21399  4      OPC=shlq_r64_imm8   
  addq %r12, %rax                 #  51    0x2139d  3      OPC=addq_r64_r64    
  movq %rax, %rdx                 #  52    0x213a0  3      OPC=movq_r64_r64    
  shlq $0x8, %rdx                 #  53    0x213a3  4      OPC=shlq_r64_imm8   
  addq %rdx, %rax                 #  54    0x213a7  3      OPC=addq_r64_r64    
  movq %rax, %rdx                 #  55    0x213aa  3      OPC=movq_r64_r64    
  shlq $0x10, %rdx                #  56    0x213ad  4      OPC=shlq_r64_imm8   
  addq %rdx, %rax                 #  57    0x213b1  3      OPC=addq_r64_r64    
  leaq (%r12,%rax,8), %r12        #  58    0x213b4  4      OPC=leaq_r64_m16    
  shrq $0x20, %r12                #  59    0x213b8  4      OPC=shrq_r64_imm8   
  shrl $0x5, %r12d                #  60    0x213bc  4      OPC=shrl_r32_imm8   
  leal (,%r12,4), %eax            #  61    0x213c0  8      OPC=leal_r32_m16    
  shll $0x6, %r12d                #  62    0x213c8  4      OPC=shll_r32_imm8   
  subl %eax, %r12d                #  63    0x213cc  3      OPC=subl_r32_r32    
  movl %r13d, %r10d               #  64    0x213cf  3      OPC=movl_r32_r32    
  subl %r12d, %r10d               #  65    0x213d2  3      OPC=subl_r32_r32    
  movl $0x1, 0x10(%rsp)           #  66    0x213d5  8      OPC=movl_m32_imm32  
  nop                             #  67    0x213dd  1      OPC=nop             
  nop                             #  68    0x213de  1      OPC=nop             
  nop                             #  69    0x213df  1      OPC=nop             
  movl %ebx, 0x8(%rsp)            #  70    0x213e0  4      OPC=movl_m32_r32    
  movl 0x48(%rsp), %eax           #  71    0x213e4  4      OPC=movl_r32_m32    
  movl %eax, (%rsp)               #  72    0x213e8  3      OPC=movl_m32_r32    
  movl 0x38(%rsp), %r9d           #  73    0x213eb  5      OPC=movl_r32_m32    
  movl 0x30(%rsp), %r8d           #  74    0x213f0  5      OPC=movl_r32_m32    
  movl %r13d, %ecx                #  75    0x213f5  3      OPC=movl_r32_r32    
  movl %r10d, %edx                #  76    0x213f8  3      OPC=movl_r32_r32    
  movl 0x40(%rsp), %edi           #  77    0x213fb  4      OPC=movl_r32_m32    
  nop                             #  78    0x213ff  1      OPC=nop             
  movq %r10, 0x20(%rsp)           #  79    0x21400  5      OPC=movq_m64_r64    
  nop                             #  80    0x21405  1      OPC=nop             
  nop                             #  81    0x21406  1      OPC=nop             
  nop                             #  82    0x21407  1      OPC=nop             
  nop                             #  83    0x21408  1      OPC=nop             
  nop                             #  84    0x21409  1      OPC=nop             
  nop                             #  85    0x2140a  1      OPC=nop             
  nop                             #  86    0x2140b  1      OPC=nop             
  nop                             #  87    0x2140c  1      OPC=nop             
  nop                             #  88    0x2140d  1      OPC=nop             
  nop                             #  89    0x2140e  1      OPC=nop             
  nop                             #  90    0x2140f  1      OPC=nop             
  nop                             #  91    0x21410  1      OPC=nop             
  nop                             #  92    0x21411  1      OPC=nop             
  nop                             #  93    0x21412  1      OPC=nop             
  nop                             #  94    0x21413  1      OPC=nop             
  nop                             #  95    0x21414  1      OPC=nop             
  nop                             #  96    0x21415  1      OPC=nop             
  nop                             #  97    0x21416  1      OPC=nop             
  nop                             #  98    0x21417  1      OPC=nop             
  nop                             #  99    0x21418  1      OPC=nop             
  nop                             #  100   0x21419  1      OPC=nop             
  nop                             #  101   0x2141a  1      OPC=nop             
  callq .detach_job               #  102   0x2141b  5      OPC=callq_label     
  movl %eax, %ecx                 #  103   0x21420  2      OPC=movl_r32_r32    
  movl $0x0, 0x10(%rsp)           #  104   0x21422  8      OPC=movl_m32_imm32  
  movl %r12d, %r12d               #  105   0x2142a  3      OPC=movl_r32_r32    
  movq %r12, %rax                 #  106   0x2142d  3      OPC=movq_r64_r64    
  shlq $0x4, %rax                 #  107   0x21430  4      OPC=shlq_r64_imm8   
  subq %r12, %rax                 #  108   0x21434  3      OPC=subq_r64_r64    
  leaq (%r12,%rax,4), %rdx        #  109   0x21437  4      OPC=leaq_r64_m16    
  movq %rdx, %rax                 #  110   0x2143b  3      OPC=movq_r64_r64    
  xchgw %ax, %ax                  #  111   0x2143e  2      OPC=xchgw_ax_r16    
  mulq %r14                       #  112   0x21440  3      OPC=mulq_r64        
  shrq $0x5, %rdx                 #  113   0x21443  4      OPC=shrq_r64_imm8   
  addl %edx, %ebx                 #  114   0x21447  2      OPC=addl_r32_r32    
  movl %ebx, 0x8(%rsp)            #  115   0x21449  4      OPC=movl_m32_r32    
  movl %ecx, (%rsp)               #  116   0x2144d  3      OPC=movl_m32_r32    
  movl 0x38(%rsp), %r9d           #  117   0x21450  5      OPC=movl_r32_m32    
  movl 0x30(%rsp), %r8d           #  118   0x21455  5      OPC=movl_r32_m32    
  movq 0x20(%rsp), %r10           #  119   0x2145a  5      OPC=movq_r64_m64    
  nop                             #  120   0x2145f  1      OPC=nop             
  movl %r10d, %ecx                #  121   0x21460  3      OPC=movl_r32_r32    
  movl 0x28(%rsp), %edx           #  122   0x21463  4      OPC=movl_r32_m32    
  xorl %esi, %esi                 #  123   0x21467  2      OPC=xorl_r32_r32    
  xorl %edi, %edi                 #  124   0x21469  2      OPC=xorl_r32_r32    
  nop                             #  125   0x2146b  1      OPC=nop             
  nop                             #  126   0x2146c  1      OPC=nop             
  nop                             #  127   0x2146d  1      OPC=nop             
  nop                             #  128   0x2146e  1      OPC=nop             
  nop                             #  129   0x2146f  1      OPC=nop             
  nop                             #  130   0x21470  1      OPC=nop             
  nop                             #  131   0x21471  1      OPC=nop             
  nop                             #  132   0x21472  1      OPC=nop             
  nop                             #  133   0x21473  1      OPC=nop             
  nop                             #  134   0x21474  1      OPC=nop             
  nop                             #  135   0x21475  1      OPC=nop             
  nop                             #  136   0x21476  1      OPC=nop             
  nop                             #  137   0x21477  1      OPC=nop             
  nop                             #  138   0x21478  1      OPC=nop             
  nop                             #  139   0x21479  1      OPC=nop             
  nop                             #  140   0x2147a  1      OPC=nop             
  callq .detach_job               #  141   0x2147b  5      OPC=callq_label     
  movl %eax, %eax                 #  142   0x21480  2      OPC=movl_r32_r32    
  addl $0x58, %esp                #  143   0x21482  3      OPC=addl_r32_imm8   
  addq %r15, %rsp                 #  144   0x21485  3      OPC=addq_r64_r64    
  popq %rbx                       #  145   0x21488  1      OPC=popq_r64_1      
  popq %r12                       #  146   0x21489  2      OPC=popq_r64_1      
  popq %r13                       #  147   0x2148b  2      OPC=popq_r64_1      
  popq %r14                       #  148   0x2148d  2      OPC=popq_r64_1      
  popq %r11                       #  149   0x2148f  2      OPC=popq_r64_1      
  andl $0xffffffe0, %r11d         #  150   0x21491  7      OPC=andl_r32_imm32  
  nop                             #  151   0x21498  1      OPC=nop             
  nop                             #  152   0x21499  1      OPC=nop             
  nop                             #  153   0x2149a  1      OPC=nop             
  nop                             #  154   0x2149b  1      OPC=nop             
  addq %r15, %r11                 #  155   0x2149c  3      OPC=addq_r64_r64    
  jmpq %r11                       #  156   0x2149f  3      OPC=jmpq_r64        
  nop                             #  157   0x214a2  1      OPC=nop             
  nop                             #  158   0x214a3  1      OPC=nop             
  nop                             #  159   0x214a4  1      OPC=nop             
  nop                             #  160   0x214a5  1      OPC=nop             
  nop                             #  161   0x214a6  1      OPC=nop             
.L_214a0:                         #        0x214a7  0      OPC=<label>         
  movl $0x10020396, %ecx          #  162   0x214a7  5      OPC=movl_r32_imm32  
  movl $0x10020430, %edx          #  163   0x214ac  5      OPC=movl_r32_imm32  
  movl $0xe4, %esi                #  164   0x214b1  5      OPC=movl_r32_imm32  
  movl $0x1002038c, %edi          #  165   0x214b6  5      OPC=movl_r32_imm32  
  nop                             #  166   0x214bb  1      OPC=nop             
  nop                             #  167   0x214bc  1      OPC=nop             
  nop                             #  168   0x214bd  1      OPC=nop             
  nop                             #  169   0x214be  1      OPC=nop             
  nop                             #  170   0x214bf  1      OPC=nop             
  nop                             #  171   0x214c0  1      OPC=nop             
  nop                             #  172   0x214c1  1      OPC=nop             
  callq .__assert_func            #  173   0x214c2  5      OPC=callq_label     
                                                                               
.size do_process_block, .-do_process_block

