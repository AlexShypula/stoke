Training TCs: 6
flags for addb_al_imm8: { }
flags for addw_ax_imm16: { }
flags for addl_eax_imm32: { }
flags for addw_m16_imm16: { }
flags for addw_m16_imm8: { }
flags for addw_m16_r16: { }
flags for addl_m32_imm32: { }
flags for addl_m32_imm8: { }
flags for addl_m32_r32: { }
flags for addq_m64_imm32: { }
flags for addq_m64_imm8: { }
flags for addq_m64_r64: { }
flags for addb_m8_imm8: { }
flags for addb_m8_r8: { }
flags for addb_m8_rh: { }
flags for addw_r16_imm16: { }
flags for addw_r16_imm8: { }
flags for addw_r16_m16: { }
flags for addw_r16_r16: { }
flags for addw_r16_r16_1: { }
flags for addl_r32_imm32: { }
flags for addl_r32_imm8: { }
flags for addl_r32_m32: { }
flags for addl_r32_r32: { }
flags for addl_r32_r32_1: { }
flags for addq_r64_imm32: { }
flags for addq_r64_imm8: { }
flags for addq_r64_m64: { }
flags for addq_r64_r64: { }
flags for addq_r64_r64_1: { }
flags for addb_r8_imm8: { }
flags for addb_r8_m8: { }
flags for addb_r8_r8: { }
flags for addb_r8_r8_1: { }
flags for addb_r8_rh: { }
flags for addb_r8_rh_1: { }
flags for addq_rax_imm32: { }
flags for addb_rh_imm8: { }
flags for addb_rh_m8: { }
flags for addb_rh_r8: { }
flags for addb_rh_r8_1: { }
flags for addb_rh_rh: { }
flags for addb_rh_rh_1: { }
flags for addpd_xmm_m128: { sse2 }
flags for addpd_xmm_xmm: { sse2 }
flags for addps_xmm_m128: { sse }
flags for addps_xmm_xmm: { sse }
flags for addsd_xmm_m64: { sse2 }
flags for addsd_xmm_xmm: { sse2 }
flags for addss_xmm_m32: { sse }
flags for addss_xmm_xmm: { sse }
flags for addsubpd_xmm_m128: { pni }
flags for addsubpd_xmm_xmm: { pni }
flags for addsubps_xmm_m128: { pni }
flags for addsubps_xmm_xmm: { pni }
flags for aesdec_xmm_m128: { aes }
flags for aesdec_xmm_xmm: { aes }
flags for aesdeclast_xmm_m128: { aes }
flags for aesdeclast_xmm_xmm: { aes }
flags for aesenc_xmm_m128: { aes }
flags for aesenc_xmm_xmm: { aes }
flags for aesenclast_xmm_m128: { aes }
flags for aesenclast_xmm_xmm: { aes }
flags for aesimc_xmm_m128: { aes }
flags for aesimc_xmm_xmm: { aes }
flags for aeskeygenassist_xmm_m128_imm8: { aes }
flags for aeskeygenassist_xmm_xmm_imm8: { aes }
flags for andb_al_imm8: { }
flags for andw_ax_imm16: { }
flags for andl_eax_imm32: { }
flags for andw_m16_imm16: { }
flags for andw_m16_imm8: { }
flags for andw_m16_r16: { }
flags for andl_m32_imm32: { }
flags for andl_m32_imm8: { }
flags for andl_m32_r32: { }
flags for andq_m64_imm32: { }
flags for andq_m64_imm8: { }
flags for andq_m64_r64: { }
flags for andb_m8_imm8: { }
flags for andb_m8_r8: { }
flags for andb_m8_rh: { }
flags for andw_r16_imm16: { }
flags for andw_r16_imm8: { }
flags for andw_r16_m16: { }
flags for andw_r16_r16: { }
flags for andw_r16_r16_1: { }
flags for andl_r32_imm32: { }
flags for andl_r32_imm8: { }
flags for andl_r32_m32: { }
flags for andl_r32_r32: { }
flags for andl_r32_r32_1: { }
flags for andq_r64_imm32: { }
flags for andq_r64_imm8: { }
flags for andq_r64_m64: { }
flags for andq_r64_r64: { }
flags for andq_r64_r64_1: { }
flags for andb_r8_imm8: { }
flags for andb_r8_m8: { }
flags for andb_r8_r8: { }
flags for andb_r8_r8_1: { }
flags for andb_r8_rh: { }
flags for andb_r8_rh_1: { }
flags for andq_rax_imm32: { }
flags for andb_rh_imm8: { }
flags for andb_rh_m8: { }
flags for andb_rh_r8: { }
flags for andb_rh_r8_1: { }
flags for andb_rh_rh: { }
flags for andb_rh_rh_1: { }
flags for andnl_r32_r32_m32: { bmi1 }
flags for andnl_r32_r32_r32: { bmi1 }
flags for andnq_r64_r64_m64: { bmi1 }
flags for andnq_r64_r64_r64: { bmi1 }
flags for andnpd_xmm_m128: { sse2 }
flags for andnpd_xmm_xmm: { sse2 }
flags for andnps_xmm_m128: { sse }
flags for andnps_xmm_xmm: { sse }
flags for andpd_xmm_m128: { sse2 }
flags for andpd_xmm_xmm: { sse2 }
flags for andps_xmm_m128: { sse }
flags for andps_xmm_xmm: { sse }
flags for bextrl_r32_m32_r32: { bmi1 }
flags for bextrl_r32_r32_r32: { bmi1 }
flags for bextrq_r64_m64_r64: { bmi1 }
flags for bextrq_r64_r64_r64: { bmi1 }
flags for blendpd_xmm_m128_imm8: { sse4_1 }
flags for blendpd_xmm_xmm_imm8: { sse4_1 }
flags for blendps_xmm_m128_imm8: { sse4_1 }
flags for blendps_xmm_xmm_imm8: { sse4_1 }
flags for blendvpd_xmm_m128_xmm0: { sse4_1 }
flags for blendvpd_xmm_xmm_xmm0: { sse4_1 }
flags for blendvps_xmm_m128_xmm0: { sse4_1 }
flags for blendvps_xmm_xmm_xmm0: { sse4_1 }
flags for blsil_r32_m32: { bmi1 }
flags for blsil_r32_r32: { bmi1 }
flags for blsiq_r64_m64: { bmi1 }
flags for blsiq_r64_r64: { bmi1 }
flags for blsmskl_r32_m32: { bmi1 }
flags for blsmskl_r32_r32: { bmi1 }
flags for blsmskq_r64_m64: { bmi1 }
flags for blsmskq_r64_r64: { bmi1 }
flags for blsrl_r32_m32: { bmi1 }
flags for blsrl_r32_r32: { bmi1 }
flags for blsrq_r64_m64: { bmi1 }
flags for blsrq_r64_r64: { bmi1 }
flags for bzhil_r32_m32_r32: { bmi2 }
flags for bzhil_r32_r32_r32: { bmi2 }
flags for bzhiq_r64_m64_r64: { bmi2 }
flags for bzhiq_r64_r64_r64: { bmi2 }
flags for cmovaw_r16_m16: { cmov }
flags for cmovaw_r16_r16: { cmov }
flags for cmoval_r32_m32: { cmov }
flags for cmoval_r32_r32: { cmov }
flags for cmovaq_r64_m64: { cmov }
flags for cmovaq_r64_r64: { cmov }
flags for cmovaew_r16_m16: { cmov }
flags for cmovaew_r16_r16: { cmov }
flags for cmovael_r32_m32: { cmov }
flags for cmovael_r32_r32: { cmov }
flags for cmovaeq_r64_m64: { cmov }
flags for cmovaeq_r64_r64: { cmov }
flags for cmovbw_r16_m16: { cmov }
flags for cmovbw_r16_r16: { cmov }
flags for cmovbl_r32_m32: { cmov }
flags for cmovbl_r32_r32: { cmov }
flags for cmovbq_r64_m64: { cmov }
flags for cmovbq_r64_r64: { cmov }
flags for cmovbew_r16_m16: { cmov }
flags for cmovbew_r16_r16: { cmov }
flags for cmovbel_r32_m32: { cmov }
flags for cmovbel_r32_r32: { cmov }
flags for cmovbeq_r64_m64: { cmov }
flags for cmovbeq_r64_r64: { cmov }
flags for cmovcw_r16_m16: { cmov }
flags for cmovcw_r16_r16: { cmov }
flags for cmovcl_r32_m32: { cmov }
flags for cmovcl_r32_r32: { cmov }
flags for cmovcq_r64_m64: { cmov }
flags for cmovcq_r64_r64: { cmov }
flags for cmovew_r16_m16: { cmov }
flags for cmovew_r16_r16: { cmov }
flags for cmovel_r32_m32: { cmov }
flags for cmovel_r32_r32: { cmov }
flags for cmoveq_r64_m64: { cmov }
flags for cmoveq_r64_r64: { cmov }
flags for cmovgw_r16_m16: { cmov }
flags for cmovgw_r16_r16: { cmov }
flags for cmovgl_r32_m32: { cmov }
flags for cmovgl_r32_r32: { cmov }
flags for cmovgq_r64_m64: { cmov }
flags for cmovgq_r64_r64: { cmov }
flags for cmovgew_r16_m16: { cmov }
flags for cmovgew_r16_r16: { cmov }
flags for cmovgel_r32_m32: { cmov }
flags for cmovgel_r32_r32: { cmov }
flags for cmovgeq_r64_m64: { cmov }
flags for cmovgeq_r64_r64: { cmov }
flags for cmovlw_r16_m16: { cmov }
flags for cmovlw_r16_r16: { cmov }
flags for cmovll_r32_m32: { cmov }
flags for cmovll_r32_r32: { cmov }
flags for cmovlq_r64_m64: { cmov }
flags for cmovlq_r64_r64: { cmov }
flags for cmovlew_r16_m16: { cmov }
flags for cmovlew_r16_r16: { cmov }
flags for cmovlel_r32_m32: { cmov }
flags for cmovlel_r32_r32: { cmov }
flags for cmovleq_r64_m64: { cmov }
flags for cmovleq_r64_r64: { cmov }
flags for cmovnaw_r16_m16: { cmov }
flags for cmovnaw_r16_r16: { cmov }
flags for cmovnal_r32_m32: { cmov }
flags for cmovnal_r32_r32: { cmov }
flags for cmovnaq_r64_m64: { cmov }
flags for cmovnaq_r64_r64: { cmov }
flags for cmovnaew_r16_m16: { cmov }
flags for cmovnaew_r16_r16: { cmov }
flags for cmovnael_r32_m32: { cmov }
flags for cmovnael_r32_r32: { cmov }
flags for cmovnaeq_r64_m64: { cmov }
flags for cmovnaeq_r64_r64: { cmov }
flags for cmovnbw_r16_m16: { cmov }
flags for cmovnbw_r16_r16: { cmov }
flags for cmovnbl_r32_m32: { cmov }
flags for cmovnbl_r32_r32: { cmov }
flags for cmovnbq_r64_m64: { cmov }
flags for cmovnbq_r64_r64: { cmov }
flags for cmovnbew_r16_m16: { cmov }
flags for cmovnbew_r16_r16: { cmov }
flags for cmovnbel_r32_m32: { cmov }
flags for cmovnbel_r32_r32: { cmov }
flags for cmovnbeq_r64_m64: { cmov }
flags for cmovnbeq_r64_r64: { cmov }
flags for cmovncw_r16_m16: { cmov }
flags for cmovncw_r16_r16: { cmov }
flags for cmovncl_r32_m32: { cmov }
flags for cmovncl_r32_r32: { cmov }
flags for cmovncq_r64_m64: { cmov }
flags for cmovncq_r64_r64: { cmov }
flags for cmovnew_r16_m16: { cmov }
flags for cmovnew_r16_r16: { cmov }
flags for cmovnel_r32_m32: { cmov }
flags for cmovnel_r32_r32: { cmov }
flags for cmovneq_r64_m64: { cmov }
flags for cmovneq_r64_r64: { cmov }
flags for cmovngw_r16_m16: { cmov }
flags for cmovngw_r16_r16: { cmov }
flags for cmovngl_r32_m32: { cmov }
flags for cmovngl_r32_r32: { cmov }
flags for cmovngq_r64_m64: { cmov }
flags for cmovngq_r64_r64: { cmov }
flags for cmovngew_r16_m16: { cmov }
flags for cmovngew_r16_r16: { cmov }
flags for cmovngel_r32_m32: { cmov }
flags for cmovngel_r32_r32: { cmov }
flags for cmovngeq_r64_m64: { cmov }
flags for cmovngeq_r64_r64: { cmov }
flags for cmovnlw_r16_m16: { cmov }
flags for cmovnlw_r16_r16: { cmov }
flags for cmovnll_r32_m32: { cmov }
flags for cmovnll_r32_r32: { cmov }
flags for cmovnlq_r64_m64: { cmov }
flags for cmovnlq_r64_r64: { cmov }
flags for cmovnlew_r16_m16: { cmov }
flags for cmovnlew_r16_r16: { cmov }
flags for cmovnlel_r32_m32: { cmov }
flags for cmovnlel_r32_r32: { cmov }
flags for cmovnleq_r64_m64: { cmov }
flags for cmovnleq_r64_r64: { cmov }
flags for cmovnow_r16_m16: { cmov }
flags for cmovnow_r16_r16: { cmov }
flags for cmovnol_r32_m32: { cmov }
flags for cmovnol_r32_r32: { cmov }
flags for cmovnoq_r64_m64: { cmov }
flags for cmovnoq_r64_r64: { cmov }
flags for cmovnpw_r16_m16: { cmov }
flags for cmovnpw_r16_r16: { cmov }
flags for cmovnpl_r32_m32: { cmov }
flags for cmovnpl_r32_r32: { cmov }
flags for cmovnpq_r64_m64: { cmov }
flags for cmovnpq_r64_r64: { cmov }
flags for cmovnsw_r16_m16: { cmov }
flags for cmovnsw_r16_r16: { cmov }
flags for cmovnsl_r32_m32: { cmov }
flags for cmovnsl_r32_r32: { cmov }
flags for cmovnsq_r64_m64: { cmov }
flags for cmovnsq_r64_r64: { cmov }
flags for cmovnzw_r16_m16: { cmov }
flags for cmovnzw_r16_r16: { cmov }
flags for cmovnzl_r32_m32: { cmov }
flags for cmovnzl_r32_r32: { cmov }
flags for cmovnzq_r64_m64: { cmov }
flags for cmovnzq_r64_r64: { cmov }
flags for cmovow_r16_m16: { cmov }
flags for cmovow_r16_r16: { cmov }
flags for cmovol_r32_m32: { cmov }
flags for cmovol_r32_r32: { cmov }
flags for cmovoq_r64_m64: { cmov }
flags for cmovoq_r64_r64: { cmov }
flags for cmovpw_r16_m16: { cmov }
flags for cmovpw_r16_r16: { cmov }
flags for cmovpl_r32_m32: { cmov }
flags for cmovpl_r32_r32: { cmov }
flags for cmovpq_r64_m64: { cmov }
flags for cmovpq_r64_r64: { cmov }
flags for cmovpew_r16_m16: { cmov }
flags for cmovpew_r16_r16: { cmov }
flags for cmovpel_r32_m32: { cmov }
flags for cmovpel_r32_r32: { cmov }
flags for cmovpeq_r64_m64: { cmov }
flags for cmovpeq_r64_r64: { cmov }
flags for cmovpow_r16_m16: { cmov }
flags for cmovpow_r16_r16: { cmov }
flags for cmovpol_r32_m32: { cmov }
flags for cmovpol_r32_r32: { cmov }
flags for cmovpoq_r64_m64: { cmov }
flags for cmovpoq_r64_r64: { cmov }
flags for cmovsw_r16_m16: { cmov }
flags for cmovsw_r16_r16: { cmov }
flags for cmovsl_r32_m32: { cmov }
flags for cmovsl_r32_r32: { cmov }
flags for cmovsq_r64_m64: { cmov }
flags for cmovsq_r64_r64: { cmov }
flags for cmovzw_r16_m16: { cmov }
flags for cmovzw_r16_r16: { cmov }
flags for cmovzl_r32_m32: { cmov }
flags for cmovzl_r32_r32: { cmov }
flags for cmovzq_r64_m64: { cmov }
flags for cmovzq_r64_r64: { cmov }
flags for comisd_xmm_m64: { sse2 }
flags for comisd_xmm_xmm: { sse2 }
flags for comiss_xmm_m32: { sse }
flags for comiss_xmm_xmm: { sse }
flags for cvtdq2pd_xmm_m64: { sse2 }
flags for cvtdq2pd_xmm_xmm: { sse2 }
flags for cvtdq2ps_xmm_m128: { sse2 }
flags for cvtdq2ps_xmm_xmm: { sse2 }
flags for cvtpd2dq_xmm_m128: { sse2 }
flags for cvtpd2dq_xmm_xmm: { sse2 }
flags for cvtpd2pi_mm_m128: { }
flags for cvtpd2pi_mm_xmm: { }
flags for cvtpd2ps_xmm_m128: { sse2 }
flags for cvtpd2ps_xmm_xmm: { sse2 }
flags for cvtpi2pd_xmm_m64: { }
flags for cvtpi2pd_xmm_mm: { }
flags for cvtpi2ps_xmm_m64: { }
flags for cvtpi2ps_xmm_mm: { }
flags for cvtps2dq_xmm_m128: { sse2 }
flags for cvtps2dq_xmm_xmm: { sse2 }
flags for cvtps2pd_xmm_m64: { sse2 }
flags for cvtps2pd_xmm_xmm: { sse2 }
flags for cvtps2pi_mm_m64: { }
flags for cvtps2pi_mm_xmm: { }
flags for cvtsd2si_r32_m64: { sse2 }
flags for cvtsd2si_r32_xmm: { sse2 }
flags for cvtsd2si_r64_m64: { sse2 }
flags for cvtsd2si_r64_xmm: { sse2 }
flags for cvtsd2ss_xmm_m64: { sse2 }
flags for cvtsd2ss_xmm_xmm: { sse2 }
flags for cvtsi2sdl_xmm_m32: { sse2 }
flags for cvtsi2sdq_xmm_m64: { sse2 }
flags for cvtsi2sdl_xmm_r32: { sse2 }
flags for cvtsi2sdq_xmm_r64: { sse2 }
flags for cvtsi2ssl_xmm_m32: { sse }
flags for cvtsi2ssq_xmm_m64: { sse }
flags for cvtsi2ssl_xmm_r32: { sse }
flags for cvtsi2ssq_xmm_r64: { sse }
flags for cvtss2sd_xmm_m32: { sse2 }
flags for cvtss2sd_xmm_xmm: { sse2 }
flags for cvtss2sil_r32_m32: { sse }
flags for cvtss2sil_r32_xmm: { sse }
flags for cvtss2siq_r64_m32: { sse }
flags for cvtss2siq_r64_xmm: { sse }
flags for cvttpd2dq_xmm_m128: { sse2 }
flags for cvttpd2dq_xmm_xmm: { sse2 }
flags for cvttpd2pi_mm_m128: { }
flags for cvttpd2pi_mm_xmm: { }
flags for cvttps2dq_xmm_m128: { sse2 }
flags for cvttps2dq_xmm_xmm: { sse2 }
flags for cvttps2pi_mm_m64: { }
flags for cvttps2pi_mm_xmm: { }
flags for cvttsd2si_r32_m64: { sse2 }
flags for cvttsd2si_r32_xmm: { sse2 }
flags for cvttsd2siq_r64_m64: { sse2 }
flags for cvttsd2siq_r64_xmm: { sse2 }
flags for cvttss2si_r32_m32: { sse }
flags for cvttss2si_r32_xmm: { sse }
flags for cvttss2siq_r64_m32: { sse }
flags for cvttss2siq_r64_xmm: { sse }
flags for decw_m16: { }
flags for decl_m32: { }
flags for decq_m64: { }
flags for decb_m8: { }
flags for decw_r16: { }
flags for decl_r32: { }
flags for decq_r64: { }
flags for decb_r8: { }
flags for decb_rh: { }
flags for dppd_xmm_m128_imm8: { sse4_1 }
flags for dppd_xmm_xmm_imm8: { sse4_1 }
flags for dpps_xmm_m128_imm8: { sse4_1 }
flags for dpps_xmm_xmm_imm8: { sse4_1 }
flags for extractps_m32_xmm_imm8: { sse4_1 }
flags for extractps_r32_xmm_imm8: { sse4_1 }
flags for extractps_r64_xmm_imm8: { sse4_1 }
flags for f2xm1: { fpu }
flags for fabs: { fpu }
flags for fadds_m32fp: { fpu }
flags for faddl_m64fp: { fpu }
flags for faddp: { fpu }
flags for fbld_m80bcd: { fpu }
flags for fbstp_m80bcd: { fpu }
flags for fchs: { fpu }
flags for fclex: { fpu }
flags for fcom: { fpu }
flags for fcoms_m32fp: { fpu }
flags for fcoml_m64fp: { fpu }
flags for fcomp: { fpu }
flags for fcomps_m32fp: { fpu }
flags for fcompl_m64fp: { fpu }
flags for fcompp: { fpu }
flags for fcos: { fpu }
flags for fdecstp: { fpu }
flags for fdivs_m32fp: { fpu }
flags for fdivl_m64fp: { fpu }
flags for fdivp: { fpu }
flags for fdivrs_m32fp: { fpu }
flags for fdivrl_m64fp: { fpu }
flags for fdivrp: { fpu }
flags for fiadd_m16int: { fpu }
flags for fiaddl_m32int: { fpu }
flags for ficom_m16int: { fpu }
flags for ficoml_m32int: { fpu }
flags for ficomp_m16int: { fpu }
flags for ficompl_m32int: { fpu }
flags for fidiv_m16int: { fpu }
flags for fidivl_m32int: { fpu }
flags for fidivr_m16int: { fpu }
flags for fidivrl_m32int: { fpu }
flags for fild_m16int: { fpu }
flags for fildl_m32int: { fpu }
flags for fildll_m64int: { fpu }
flags for fimul_m16int: { fpu }
flags for fimull_m32int: { fpu }
flags for fincstp: { fpu }
flags for finit: { fpu }
flags for fist_m16int: { fpu }
flags for fistl_m32int: { fpu }
flags for fistp_m16int: { fpu }
flags for fistpl_m32int: { fpu }
flags for fistpll_m64int: { fpu }
flags for fisttp_m16int: { fpu }
flags for fisttpl_m32int: { fpu }
flags for fisttpll_m64int: { fpu }
flags for fisub_m16int: { fpu }
flags for fisubl_m32int: { fpu }
flags for fisubr_m16int: { fpu }
flags for fisubrl_m32int: { fpu }
flags for flds_m32fp: { fpu }
flags for fldl_m64fp: { fpu }
flags for fldt_m80fp: { fpu }
flags for fld1: { fpu }
flags for fldl2e: { fpu }
flags for fldl2t: { fpu }
flags for fldlg2: { fpu }
flags for fldln2: { fpu }
flags for fldpi: { fpu }
flags for fldz: { fpu }
flags for fmuls_m32fp: { fpu }
flags for fmull_m64fp: { fpu }
flags for fmulp: { fpu }
flags for fnclex: { fpu }
flags for fninit: { fpu }
flags for fnop: { fpu }
flags for fnstsw_ax: { fpu }
flags for fpatan: { fpu }
flags for fprem: { fpu }
flags for fprem1: { fpu }
flags for fptan: { fpu }
flags for frndint: { fpu }
flags for fscale: { fpu }
flags for fsin: { fpu }
flags for fsincos: { fpu }
flags for fsqrt: { fpu }
flags for fsts_m32fp: { fpu }
flags for fstl_m64fp: { fpu }
flags for fstps_m32fp: { fpu }
flags for fstpl_m64fp: { fpu }
flags for fstpt_m80fp: { fpu }
flags for fstsw_ax: { fpu }
flags for fsubs_m32fp: { fpu }
flags for fsubl_m64fp: { fpu }
flags for fsubp: { fpu }
flags for fsubrs_m32fp: { fpu }
flags for fsubrl_m64fp: { fpu }
flags for fsubrp: { fpu }
flags for ftst: { fpu }
flags for fucom: { fpu }
flags for fucomp: { fpu }
flags for fucompp: { fpu }
flags for fwait: { fpu }
flags for fxam: { fpu }
flags for fxch: { fpu }
flags for fxtract: { fpu }
flags for fyl2x: { fpu }
flags for fyl2xp1: { fpu }
flags for haddpd_xmm_m128: { pni }
flags for haddpd_xmm_xmm: { pni }
flags for haddps_xmm_m128: { pni }
flags for haddps_xmm_xmm: { pni }
flags for hsubpd_xmm_m128: { pni }
flags for hsubpd_xmm_xmm: { pni }
flags for hsubps_xmm_m128: { pni }
flags for hsubps_xmm_xmm: { pni }
flags for incw_m16: { }
flags for incl_m32: { }
flags for incq_m64: { }
flags for incb_m8: { }
flags for incw_r16: { }
flags for incl_r32: { }
flags for incq_r64: { }
flags for incb_r8: { }
flags for incb_rh: { }
flags for insertps_xmm_m32_imm8: { sse4_1 }
flags for insertps_xmm_xmm_imm8: { sse4_1 }
flags for int_imm8: { }
flags for int_three: { }
flags for lahf: { lahf_lm }
flags for lddqu_xmm_m128: { pni }
flags for leaw_r16_m16: { }
flags for leaw_r16_m32: { }
flags for leaw_r16_m64: { }
flags for leal_r32_m16: { }
flags for leal_r32_m32: { }
flags for leal_r32_m64: { }
flags for leaq_r64_m16: { }
flags for leaq_r64_m32: { }
flags for leaq_r64_m64: { }
flags for lzcntw_r16_m16: { bmi1 }
flags for lzcntw_r16_r16: { bmi1 }
flags for lzcntl_r32_m32: { bmi1 }
flags for lzcntl_r32_r32: { bmi1 }
flags for lzcntq_r64_m64: { bmi1 }
flags for lzcntq_r64_r64: { bmi1 }
flags for maxpd_xmm_m128: { sse2 }
flags for maxpd_xmm_xmm: { sse2 }
flags for maxps_xmm_m128: { sse }
flags for maxps_xmm_xmm: { sse }
flags for maxsd_xmm_m64: { sse2 }
flags for maxsd_xmm_xmm: { sse2 }
flags for maxss_xmm_m32: { sse }
flags for maxss_xmm_xmm: { sse }
flags for minpd_xmm_m128: { sse2 }
flags for minpd_xmm_xmm: { sse2 }
flags for minps_xmm_m128: { sse }
flags for minps_xmm_xmm: { sse }
flags for minsd_xmm_m64: { sse2 }
flags for minsd_xmm_xmm: { sse2 }
flags for minss_xmm_m32: { sse }
flags for minss_xmm_xmm: { sse }
flags for movw_m16_imm16: { }
flags for movw_m16_r16: { }
flags for movl_m32_imm32: { }
flags for movl_m32_r32: { }
flags for movq_m64_imm32: { }
flags for movq_m64_r64: { }
flags for movb_m8_imm8: { }
flags for movb_m8_r8: { }
flags for movb_m8_rh: { }
flags for movw_r16_imm16: { }
flags for movw_r16_imm16_1: { }
flags for movw_r16_m16: { }
flags for movw_r16_r16: { }
flags for movw_r16_r16_1: { }
flags for movl_r32_imm32: { }
flags for movl_r32_imm32_1: { }
flags for movl_r32_m32: { }
flags for movl_r32_r32: { }
flags for movl_r32_r32_1: { }
flags for movq_r64_imm32: { }
flags for movq_r64_imm64: { }
flags for movq_r64_m64: { }
flags for movq_r64_r64: { }
flags for movq_r64_r64_1: { }
flags for movb_r8_imm8: { }
flags for movb_r8_imm8_1: { }
flags for movb_r8_m8: { }
flags for movb_r8_r8: { }
flags for movb_r8_r8_1: { }
flags for movb_r8_rh: { }
flags for movb_r8_rh_1: { }
flags for movb_rh_imm8: { }
flags for movb_rh_imm8_1: { }
flags for movb_rh_m8: { }
flags for movb_rh_r8: { }
flags for movb_rh_r8_1: { }
flags for movb_rh_rh: { }
flags for movb_rh_rh_1: { }
flags for movapd_m128_xmm: { sse2 }
flags for movapd_xmm_m128: { sse2 }
flags for movapd_xmm_xmm: { sse2 }
flags for movapd_xmm_xmm_1: { sse2 }
flags for movaps_m128_xmm: { sse }
flags for movaps_xmm_m128: { sse }
flags for movaps_xmm_xmm: { sse }
flags for movaps_xmm_xmm_1: { sse }
flags for movbew_m16_r16: { movbe }
flags for movbel_m32_r32: { movbe }
flags for movbeq_m64_r64: { movbe }
flags for movbew_r16_m16: { movbe }
flags for movbel_r32_m32: { movbe }
flags for movbeq_r64_m64: { movbe }
flags for movd_m32_mm: { mmx }
flags for movd_m32_xmm: { sse2 }
flags for movd_mm_m32: { mmx }
flags for movd_mm_r32: { mmx }
flags for movd_r32_mm: { mmx }
flags for movd_r32_xmm: { sse2 }
flags for movd_xmm_m32: { sse2 }
flags for movd_xmm_r32: { sse2 }
flags for movddup_xmm_m64: { pni }
flags for movddup_xmm_xmm: { pni }
flags for movdq2q_mm_xmm: { mmx }
flags for movdqa_m128_xmm: { sse2 }
flags for movdqa_xmm_m128: { sse2 }
flags for movdqa_xmm_xmm: { sse2 }
flags for movdqa_xmm_xmm_1: { sse2 }
flags for movdqu_m128_xmm: { sse2 }
flags for movdqu_xmm_m128: { sse2 }
flags for movdqu_xmm_xmm: { sse2 }
flags for movdqu_xmm_xmm_1: { sse2 }
flags for movhlps_xmm_xmm: { sse }
flags for movhpd_m64_xmm: { sse2 }
flags for movhpd_xmm_m64: { sse2 }
flags for movhps_m64_xmm: { sse }
flags for movhps_xmm_m64: { sse }
flags for movlhps_xmm_xmm: { sse }
flags for movlpd_m64_xmm: { sse2 }
flags for movlpd_xmm_m64: { sse2 }
flags for movlps_m64_xmm: { sse }
flags for movlps_xmm_m64: { sse }
flags for movmskpd_r32_xmm: { sse2 }
flags for movmskpd_r64_xmm: { sse2 }
flags for movmskps_r32_xmm: { sse }
flags for movmskps_r64_xmm: { sse }
flags for movntdq_m128_xmm: { sse2 }
flags for movntdq_m256_ymm: { avx }
flags for movntdqa_xmm_m128: { sse4_1 }
flags for movnti_m32_r32: { }
flags for movnti_m64_r64: { }
flags for movntpd_m128_xmm: { sse2 }
flags for movntps_m128_xmm: { sse }
flags for movntq_m64_mm: { }
flags for movq_m64_mm: { mmx }
flags for movq_m64_mm_1: { mmx }
flags for movq_m64_xmm: { sse2 }
flags for movq_m64_xmm_1: { sse2 }
flags for movq_mm_m64: { mmx }
flags for movq_mm_m64_1: { mmx }
flags for movq_mm_mm: { mmx }
flags for movq_mm_mm_1: { mmx }
flags for movq_mm_r64: { mmx }
flags for movq_r64_mm: { mmx }
flags for movq_r64_xmm: { sse2 }
flags for movq_xmm_m64: { sse2 }
flags for movq_xmm_m64_1: { sse2 }
flags for movq_xmm_r64: { sse2 }
flags for movq_xmm_xmm: { sse2 }
flags for movq_xmm_xmm_1: { sse2 }
flags for movq2dq_xmm_mm: { mmx }
flags for movsd_m64_xmm: { sse2 }
flags for movsd_xmm_m64: { sse2 }
flags for movsd_xmm_xmm: { sse2 }
flags for movsd_xmm_xmm_1: { sse2 }
flags for movshdup_xmm_m128: { pni }
flags for movshdup_xmm_xmm: { pni }
flags for movsldup_xmm_m128: { pni }
flags for movsldup_xmm_xmm: { pni }
flags for movss_m32_xmm: { sse }
flags for movss_xmm_m32: { sse }
flags for movss_xmm_xmm: { sse }
flags for movss_xmm_xmm_1: { sse }
flags for movsbw_r16_m8: { }
flags for movsbw_r16_r8: { }
flags for movsbw_r16_rh: { }
flags for movswl_r32_m16: { }
flags for movsbl_r32_m8: { }
flags for movswl_r32_r16: { }
flags for movsbl_r32_r8: { }
flags for movsbl_r32_rh: { }
flags for movswq_r64_m16: { }
flags for movsbq_r64_m8: { }
flags for movswq_r64_r16: { }
flags for movsbq_r64_r8: { }
flags for movslq_r64_m32: { }
flags for movslq_r64_r32: { }
flags for movupd_m128_xmm: { sse2 }
flags for movupd_xmm_m128: { sse2 }
flags for movupd_xmm_xmm: { sse2 }
flags for movupd_xmm_xmm_1: { sse2 }
flags for movups_m128_xmm: { sse }
flags for movups_xmm_m128: { sse }
flags for movups_xmm_xmm: { sse }
flags for movups_xmm_xmm_1: { sse }
flags for movzbw_r16_m8: { }
flags for movzbw_r16_r8: { }
flags for movzbw_r16_rh: { }
flags for movzwl_r32_m16: { }
flags for movzbl_r32_m8: { }
flags for movzwl_r32_r16: { }
flags for movzbl_r32_r8: { }
flags for movzbl_r32_rh: { }
flags for movzwq_r64_m16: { }
flags for movzbq_r64_m8: { }
flags for movzwq_r64_r16: { }
flags for movzbq_r64_r8: { }
flags for mpsadbw_xmm_m128_imm8: { sse4_1 }
flags for mpsadbw_xmm_xmm_imm8: { sse4_1 }
flags for negw_m16: { }
flags for negl_m32: { }
flags for negq_m64: { }
flags for negb_m8: { }
flags for negw_r16: { }
flags for negl_r32: { }
flags for negq_r64: { }
flags for negb_r8: { }
flags for negb_rh: { }
flags for nop: { }
flags for nopw_m16: { nopl }
flags for nopl_m32: { nopl }
flags for nopw_r16: { nopl }
flags for nopl_r32: { nopl }
flags for notw_m16: { }
flags for notl_m32: { }
flags for notq_m64: { }
flags for notb_m8: { }
flags for notw_r16: { }
flags for notl_r32: { }
flags for notq_r64: { }
flags for notb_r8: { }
flags for notb_rh: { }
flags for orb_al_imm8: { }
flags for orw_ax_imm16: { }
flags for orl_eax_imm32: { }
flags for orw_m16_imm16: { }
flags for orw_m16_imm8: { }
flags for orw_m16_r16: { }
flags for orl_m32_imm32: { }
flags for orl_m32_imm8: { }
flags for orl_m32_r32: { }
flags for orq_m64_imm32: { }
flags for orq_m64_imm8: { }
flags for orq_m64_r64: { }
flags for orb_m8_imm8: { }
flags for orb_m8_r8: { }
flags for orb_m8_rh: { }
flags for orw_r16_imm16: { }
flags for orw_r16_imm8: { }
flags for orw_r16_m16: { }
flags for orw_r16_r16: { }
flags for orw_r16_r16_1: { }
flags for orl_r32_imm32: { }
flags for orl_r32_imm8: { }
flags for orl_r32_m32: { }
flags for orl_r32_r32: { }
flags for orl_r32_r32_1: { }
flags for orq_r64_imm32: { }
flags for orq_r64_imm8: { }
flags for orq_r64_m64: { }
flags for orq_r64_r64: { }
flags for orq_r64_r64_1: { }
flags for orb_r8_imm8: { }
flags for orb_r8_m8: { }
flags for orb_r8_r8: { }
flags for orb_r8_r8_1: { }
flags for orb_r8_rh: { }
flags for orb_r8_rh_1: { }
flags for orq_rax_imm32: { }
flags for orb_rh_imm8: { }
flags for orb_rh_m8: { }
flags for orb_rh_r8: { }
flags for orb_rh_r8_1: { }
flags for orb_rh_rh: { }
flags for orb_rh_rh_1: { }
flags for orpd_xmm_m128: { sse2 }
flags for orpd_xmm_xmm: { sse2 }
flags for orps_xmm_m128: { sse }
flags for orps_xmm_xmm: { sse }
flags for pabsb_mm_m64: { ssse3 }
flags for pabsb_mm_mm: { ssse3 }
flags for pabsb_xmm_m128: { ssse3 }
flags for pabsb_xmm_xmm: { ssse3 }
flags for pabsd_mm_m64: { ssse3 }
flags for pabsd_mm_mm: { ssse3 }
flags for pabsd_xmm_m128: { ssse3 }
flags for pabsd_xmm_xmm: { ssse3 }
flags for pabsw_mm_m64: { ssse3 }
flags for pabsw_mm_mm: { ssse3 }
flags for pabsw_xmm_m128: { ssse3 }
flags for pabsw_xmm_xmm: { ssse3 }
flags for packssdw_mm_m64: { mmx }
flags for packssdw_mm_mm: { mmx }
flags for packssdw_xmm_m128: { sse2 }
flags for packssdw_xmm_xmm: { sse2 }
flags for packsswb_mm_m64: { mmx }
flags for packsswb_mm_mm: { mmx }
flags for packsswb_xmm_m128: { sse2 }
flags for packsswb_xmm_xmm: { sse2 }
flags for packusdw_xmm_m128: { sse4_1 }
flags for packusdw_xmm_xmm: { sse4_1 }
flags for packuswb_mm_m64: { mmx }
flags for packuswb_mm_mm: { mmx }
flags for packuswb_xmm_m128: { sse2 }
flags for packuswb_xmm_xmm: { sse2 }
flags for paddb_mm_m64: { mmx }
flags for paddb_mm_mm: { mmx }
flags for paddb_xmm_m128: { sse2 }
flags for paddb_xmm_xmm: { sse2 }
flags for paddd_mm_m64: { mmx }
flags for paddd_mm_mm: { mmx }
flags for paddd_xmm_m128: { sse2 }
flags for paddd_xmm_xmm: { sse2 }
flags for paddq_mm_m64: { sse2 }
flags for paddq_mm_mm: { sse2 }
flags for paddq_xmm_m128: { sse2 }
flags for paddq_xmm_xmm: { sse2 }
flags for paddsb_mm_m64: { mmx }
flags for paddsb_mm_mm: { mmx }
flags for paddsb_xmm_m128: { sse2 }
flags for paddsb_xmm_xmm: { sse2 }
flags for paddsw_mm_m64: { mmx }
flags for paddsw_mm_mm: { mmx }
flags for paddsw_xmm_m128: { sse2 }
flags for paddsw_xmm_xmm: { sse2 }
flags for paddusb_mm_m64: { mmx }
flags for paddusb_mm_mm: { mmx }
flags for paddusb_xmm_m128: { sse2 }
flags for paddusb_xmm_xmm: { sse2 }
flags for paddusw_mm_m64: { mmx }
flags for paddusw_mm_mm: { mmx }
flags for paddusw_xmm_m128: { sse2 }
flags for paddusw_xmm_xmm: { sse2 }
flags for paddw_mm_m64: { mmx }
flags for paddw_mm_mm: { mmx }
flags for paddw_xmm_m128: { sse2 }
flags for paddw_xmm_xmm: { sse2 }
flags for palignr_mm_m64_imm8: { ssse3 }
flags for palignr_mm_mm_imm8: { ssse3 }
flags for palignr_xmm_m128_imm8: { ssse3 }
flags for palignr_xmm_xmm_imm8: { ssse3 }
flags for pand_mm_m64: { mmx }
flags for pand_mm_mm: { mmx }
flags for pand_xmm_m128: { sse2 }
flags for pand_xmm_xmm: { sse2 }
flags for pandn_mm_m64: { mmx }
flags for pandn_mm_mm: { mmx }
flags for pandn_xmm_m128: { sse2 }
flags for pandn_xmm_xmm: { sse2 }
flags for pavgb_mm_m64: { sse }
flags for pavgb_mm_mm: { sse }
flags for pavgb_xmm_m128: { sse2 }
flags for pavgb_xmm_xmm: { sse2 }
flags for pavgw_mm_m64: { sse }
flags for pavgw_mm_mm: { sse }
flags for pavgw_xmm_m128: { sse2 }
flags for pavgw_xmm_xmm: { sse2 }
flags for pblendvb_xmm_m128_xmm0: { sse4_1 }
flags for pblendvb_xmm_xmm_xmm0: { sse4_1 }
flags for pblendw_xmm_m128_imm8: { sse4_1 }
flags for pblendw_xmm_xmm_imm8: { sse4_1 }
flags for pclmulqdq_xmm_m128_imm8: { pclmulqdq }
flags for pclmulqdq_xmm_xmm_imm8: { pclmulqdq }
flags for pcmpeqb_mm_m64: { mmx }
flags for pcmpeqb_mm_mm: { mmx }
flags for pcmpeqb_xmm_m128: { sse2 }
flags for pcmpeqb_xmm_xmm: { sse2 }
flags for pcmpeqd_mm_m64: { mmx }
flags for pcmpeqd_mm_mm: { mmx }
flags for pcmpeqd_xmm_m128: { sse2 }
flags for pcmpeqd_xmm_xmm: { sse2 }
flags for pcmpeqq_xmm_m128: { sse4_1 }
flags for pcmpeqq_xmm_xmm: { sse4_1 }
flags for pcmpeqw_mm_m64: { mmx }
flags for pcmpeqw_mm_mm: { mmx }
flags for pcmpeqw_xmm_m128: { sse2 }
flags for pcmpeqw_xmm_xmm: { sse2 }
flags for pcmpestri_xmm_m128_imm8: { sse4_2 }
flags for pcmpestri_xmm_xmm_imm8: { sse4_2 }
flags for pcmpestrm_xmm_m128_imm8: { sse4_2 }
flags for pcmpestrm_xmm_xmm_imm8: { sse4_2 }
flags for pcmpgtb_mm_m64: { mmx }
flags for pcmpgtb_mm_mm: { mmx }
flags for pcmpgtb_xmm_m128: { sse2 }
flags for pcmpgtb_xmm_xmm: { sse2 }
flags for pcmpgtd_mm_m64: { mmx }
flags for pcmpgtd_mm_mm: { mmx }
flags for pcmpgtd_xmm_m128: { sse2 }
flags for pcmpgtd_xmm_xmm: { sse2 }
flags for pcmpgtq_xmm_m128: { sse4_2 }
flags for pcmpgtq_xmm_xmm: { sse4_2 }
flags for pcmpgtw_mm_m64: { mmx }
flags for pcmpgtw_mm_mm: { mmx }
flags for pcmpgtw_xmm_m128: { sse2 }
flags for pcmpgtw_xmm_xmm: { sse2 }
flags for pcmpistri_xmm_m128_imm8: { sse4_2 }
flags for pcmpistri_xmm_xmm_imm8: { sse4_2 }
flags for pcmpistrm_xmm_m128_imm8: { sse4_2 }
flags for pcmpistrm_xmm_xmm_imm8: { sse4_2 }
flags for pdepl_r32_r32_m32: { bmi2 }
flags for pdepl_r32_r32_r32: { bmi2 }
flags for pdepq_r64_r64_m64: { bmi2 }
flags for pdepq_r64_r64_r64: { bmi2 }
flags for pextl_r32_r32_m32: { bmi2 }
flags for pextl_r32_r32_r32: { bmi2 }
flags for pextq_r64_r64_m64: { bmi2 }
flags for pextq_r64_r64_r64: { bmi2 }
flags for pextrb_m8_xmm_imm8: { sse4_1 }
flags for pextrb_r32_xmm_imm8: { sse4_1 }
flags for pextrb_r64_xmm_imm8: { sse4_1 }
flags for pextrd_m32_xmm_imm8: { sse4_1 }
flags for pextrd_r32_xmm_imm8: { sse4_1 }
flags for pextrq_m64_xmm_imm8: { sse4_1 }
flags for pextrq_r64_xmm_imm8: { sse4_1 }
flags for pextrw_m16_xmm_imm8: { sse4_1 }
flags for pextrw_r32_mm_imm8: { sse }
flags for pextrw_r32_xmm_imm8: { sse2 }
flags for pextrw_r32_xmm_imm8_1: { sse4_1 }
flags for pextrw_r64_mm_imm8: { sse }
flags for pextrw_r64_xmm_imm8: { sse2 }
flags for pextrw_r64_xmm_imm8_1: { sse4_1 }
flags for phaddd_mm_m64: { ssse3 }
flags for phaddd_mm_mm: { ssse3 }
flags for phaddd_xmm_m128: { ssse3 }
flags for phaddd_xmm_xmm: { ssse3 }
flags for phaddsw_mm_m64: { ssse3 }
flags for phaddsw_mm_mm: { ssse3 }
flags for phaddsw_xmm_m128: { ssse3 }
flags for phaddsw_xmm_xmm: { ssse3 }
flags for phaddw_mm_m64: { ssse3 }
flags for phaddw_mm_mm: { ssse3 }
flags for phaddw_xmm_m128: { ssse3 }
flags for phaddw_xmm_xmm: { ssse3 }
flags for phminposuw_xmm_m128: { sse4_1 }
flags for phminposuw_xmm_xmm: { sse4_1 }
flags for phsubd_mm_m64: { ssse3 }
flags for phsubd_mm_mm: { ssse3 }
flags for phsubd_xmm_m128: { ssse3 }
flags for phsubd_xmm_xmm: { ssse3 }
flags for phsubsw_mm_m64: { ssse3 }
flags for phsubsw_mm_mm: { ssse3 }
flags for phsubsw_xmm_m128: { ssse3 }
flags for phsubsw_xmm_xmm: { ssse3 }
flags for phsubw_mm_m64: { ssse3 }
flags for phsubw_mm_mm: { ssse3 }
flags for phsubw_xmm_m128: { ssse3 }
flags for phsubw_xmm_xmm: { ssse3 }
flags for pinsrb_xmm_m8_imm8: { sse4_1 }
flags for pinsrb_xmm_r32_imm8: { sse4_1 }
flags for pinsrd_xmm_m32_imm8: { sse4_1 }
flags for pinsrd_xmm_r32_imm8: { sse4_1 }
flags for pinsrw_mm_m16_imm8: { sse }
flags for pinsrw_mm_r32_imm8: { sse }
flags for pinsrw_xmm_m16_imm8: { sse2 }
flags for pinsrw_xmm_r32_imm8: { sse2 }
flags for pmaddubsw_mm_m64: { mmx ssse3 }
flags for pmaddubsw_mm_mm: { mmx ssse3 }
flags for pmaddubsw_xmm_m128: { ssse3 }
flags for pmaddubsw_xmm_xmm: { ssse3 }
flags for pmaddwd_mm_m64: { mmx }
flags for pmaddwd_mm_mm: { mmx }
flags for pmaddwd_xmm_m128: { sse2 }
flags for pmaddwd_xmm_xmm: { sse2 }
flags for pmaxsb_xmm_m128: { sse4_1 }
flags for pmaxsb_xmm_xmm: { sse4_1 }
flags for pmaxsd_xmm_m128: { sse4_1 }
flags for pmaxsd_xmm_xmm: { sse4_1 }
flags for pmaxsw_mm_m64: { sse }
flags for pmaxsw_mm_mm: { sse }
flags for pmaxsw_xmm_m128: { sse2 }
flags for pmaxsw_xmm_xmm: { sse2 }
flags for pmaxub_mm_m64: { sse }
flags for pmaxub_mm_mm: { sse }
flags for pmaxub_xmm_m128: { sse2 }
flags for pmaxub_xmm_xmm: { sse2 }
flags for pmaxud_xmm_m128: { sse4_1 }
flags for pmaxud_xmm_xmm: { sse4_1 }
flags for pmaxuw_xmm_m128: { sse4_1 }
flags for pmaxuw_xmm_xmm: { sse4_1 }
flags for pminsb_xmm_m128: { sse4_1 }
flags for pminsb_xmm_xmm: { sse4_1 }
flags for pminsd_xmm_m128: { sse4_1 }
flags for pminsd_xmm_xmm: { sse4_1 }
flags for pminsw_mm_m64: { sse }
flags for pminsw_mm_mm: { sse }
flags for pminsw_xmm_m128: { sse2 }
flags for pminsw_xmm_xmm: { sse2 }
flags for pminub_mm_m64: { sse }
flags for pminub_mm_mm: { sse }
flags for pminub_xmm_m128: { sse2 }
flags for pminub_xmm_xmm: { sse2 }
flags for pminud_xmm_m128: { sse4_1 }
flags for pminud_xmm_xmm: { sse4_1 }
flags for pminuw_xmm_m128: { sse4_1 }
flags for pminuw_xmm_xmm: { sse4_1 }
flags for pmovmskb_r32_mm: { sse }
flags for pmovmskb_r32_xmm: { sse2 }
flags for pmovmskb_r64_mm: { sse }
flags for pmovmskb_r64_xmm: { sse2 }
flags for pmovsxbd_xmm_m32: { sse4_1 }
flags for pmovsxbd_xmm_xmm: { sse4_1 }
flags for pmovsxbq_xmm_m16: { sse4_1 }
flags for pmovsxbq_xmm_xmm: { sse4_1 }
flags for pmovsxbw_xmm_m64: { sse4_1 }
flags for pmovsxbw_xmm_xmm: { sse4_1 }
flags for pmovsxdq_xmm_m64: { sse4_1 }
flags for pmovsxdq_xmm_xmm: { sse4_1 }
flags for pmovsxwd_xmm_m64: { sse4_1 }
flags for pmovsxwd_xmm_xmm: { sse4_1 }
flags for pmovsxwq_xmm_m32: { sse4_1 }
flags for pmovsxwq_xmm_xmm: { sse4_1 }
flags for pmovzxbd_xmm_m32: { sse4_1 }
flags for pmovzxbd_xmm_xmm: { sse4_1 }
flags for pmovzxbq_xmm_m16: { sse4_1 }
flags for pmovzxbq_xmm_xmm: { sse4_1 }
flags for pmovzxbw_xmm_m64: { sse4_1 }
flags for pmovzxbw_xmm_xmm: { sse4_1 }
flags for pmovzxdq_xmm_m64: { sse4_1 }
flags for pmovzxdq_xmm_xmm: { sse4_1 }
flags for pmovzxwd_xmm_m64: { sse4_1 }
flags for pmovzxwd_xmm_xmm: { sse4_1 }
flags for pmovzxwq_xmm_m32: { sse4_1 }
flags for pmovzxwq_xmm_xmm: { sse4_1 }
flags for pmuldq_xmm_m128: { sse4_1 }
flags for pmuldq_xmm_xmm: { sse4_1 }
flags for pmulhrsw_mm_m64: { ssse3 }
flags for pmulhrsw_mm_mm: { ssse3 }
flags for pmulhrsw_xmm_m128: { ssse3 }
flags for pmulhrsw_xmm_xmm: { ssse3 }
flags for pmulhuw_mm_m64: { sse }
flags for pmulhuw_mm_mm: { sse }
flags for pmulhuw_xmm_m128: { sse2 }
flags for pmulhuw_xmm_xmm: { sse2 }
flags for pmulhw_mm_m64: { mmx }
flags for pmulhw_mm_mm: { mmx }
flags for pmulhw_xmm_m128: { sse2 }
flags for pmulhw_xmm_xmm: { sse2 }
flags for pmulld_xmm_m128: { sse4_1 }
flags for pmulld_xmm_xmm: { sse4_1 }
flags for pmullw_mm_m64: { mmx }
flags for pmullw_mm_mm: { mmx }
flags for pmullw_xmm_m128: { sse2 }
flags for pmullw_xmm_xmm: { sse2 }
flags for pmuludq_mm_m64: { sse2 }
flags for pmuludq_mm_mm: { sse2 }
flags for pmuludq_xmm_m128: { sse2 }
flags for pmuludq_xmm_xmm: { sse2 }
flags for popw_m16: { }
flags for popq_m64: { }
flags for popw_r16: { }
flags for popw_r16_1: { }
flags for popq_r64: { }
flags for popq_r64_1: { }
flags for popcntw_r16_m16: { popcnt }
flags for popcntw_r16_r16: { popcnt }
flags for popcntl_r32_m32: { popcnt }
flags for popcntl_r32_r32: { popcnt }
flags for popcntq_r64_m64: { popcnt }
flags for popcntq_r64_r64: { popcnt }
flags for popf: { }
flags for popfq: { }
flags for por_mm_m64: { mmx }
flags for por_mm_mm: { mmx }
flags for por_xmm_m128: { sse2 }
flags for por_xmm_xmm: { sse2 }
flags for psadbw_mm_m64: { sse }
flags for psadbw_mm_mm: { sse }
flags for psadbw_xmm_m128: { sse2 }
flags for psadbw_xmm_xmm: { sse2 }
flags for pshufb_mm_m64: { ssse3 }
flags for pshufb_mm_mm: { ssse3 }
flags for pshufb_xmm_m128: { ssse3 }
flags for pshufb_xmm_xmm: { ssse3 }
flags for pshufd_xmm_m128_imm8: { sse2 }
flags for pshufd_xmm_xmm_imm8: { sse2 }
flags for pshufhw_xmm_m128_imm8: { sse2 }
flags for pshufhw_xmm_xmm_imm8: { sse2 }
flags for pshuflw_xmm_m128_imm8: { sse2 }
flags for pshuflw_xmm_xmm_imm8: { sse2 }
flags for pshufw_mm_m64_imm8: { }
flags for pshufw_mm_mm_imm8: { }
flags for psignb_mm_m64: { ssse3 }
flags for psignb_mm_mm: { ssse3 }
flags for psignb_xmm_m128: { ssse3 }
flags for psignb_xmm_xmm: { ssse3 }
flags for psignd_mm_m64: { ssse3 }
flags for psignd_mm_mm: { ssse3 }
flags for psignd_xmm_m128: { ssse3 }
flags for psignd_xmm_xmm: { ssse3 }
flags for psignw_mm_m64: { ssse3 }
flags for psignw_mm_mm: { ssse3 }
flags for psignw_xmm_m128: { ssse3 }
flags for psignw_xmm_xmm: { ssse3 }
flags for pslld_mm_imm8: { mmx }
flags for pslld_mm_m64: { mmx }
flags for pslld_mm_mm: { mmx }
flags for pslld_xmm_imm8: { sse2 }
flags for pslld_xmm_m128: { sse2 }
flags for pslld_xmm_xmm: { sse2 }
flags for pslldq_xmm_imm8: { sse2 }
flags for psllq_mm_imm8: { mmx }
flags for psllq_mm_m64: { mmx }
flags for psllq_mm_mm: { mmx }
flags for psllq_xmm_imm8: { sse2 }
flags for psllq_xmm_m128: { sse2 }
flags for psllq_xmm_xmm: { sse2 }
flags for psllw_mm_imm8: { mmx }
flags for psllw_mm_m64: { mmx }
flags for psllw_mm_mm: { mmx }
flags for psllw_xmm_imm8: { sse2 }
flags for psllw_xmm_m128: { sse2 }
flags for psllw_xmm_xmm: { sse2 }
flags for psrad_mm_imm8: { mmx }
flags for psrad_mm_m64: { mmx }
flags for psrad_mm_mm: { mmx }
flags for psrad_xmm_imm8: { sse2 }
flags for psrad_xmm_m128: { sse2 }
flags for psrad_xmm_xmm: { sse2 }
flags for psraw_mm_imm8: { mmx }
flags for psraw_mm_m64: { mmx }
flags for psraw_mm_mm: { mmx }
flags for psraw_xmm_imm8: { sse2 }
flags for psraw_xmm_m128: { sse2 }
flags for psraw_xmm_xmm: { sse2 }
flags for psrld_mm_imm8: { mmx }
flags for psrld_mm_m64: { mmx }
flags for psrld_mm_mm: { mmx }
flags for psrld_xmm_imm8: { sse2 }
flags for psrld_xmm_m128: { sse2 }
flags for psrld_xmm_xmm: { sse2 }
flags for psrldq_xmm_imm8: { sse2 }
flags for psrlq_mm_imm8: { mmx }
flags for psrlq_mm_m64: { mmx }
flags for psrlq_mm_mm: { mmx }
flags for psrlq_xmm_imm8: { sse2 }
flags for psrlq_xmm_m128: { sse2 }
flags for psrlq_xmm_xmm: { sse2 }
flags for psrlw_mm_imm8: { mmx }
flags for psrlw_mm_m64: { mmx }
flags for psrlw_mm_mm: { mmx }
flags for psrlw_xmm_imm8: { sse2 }
flags for psrlw_xmm_m128: { sse2 }
flags for psrlw_xmm_xmm: { sse2 }
flags for psubb_mm_m64: { mmx }
flags for psubb_mm_mm: { mmx }
flags for psubb_xmm_m128: { sse2 }
flags for psubb_xmm_xmm: { sse2 }
flags for psubd_mm_m64: { mmx }
flags for psubd_mm_mm: { mmx }
flags for psubd_xmm_m128: { sse2 }
flags for psubd_xmm_xmm: { sse2 }
flags for psubq_mm_m64: { sse2 }
flags for psubq_mm_mm: { sse2 }
flags for psubq_xmm_m128: { sse2 }
flags for psubq_xmm_xmm: { sse2 }
flags for psubsb_mm_m64: { mmx }
flags for psubsb_mm_mm: { mmx }
flags for psubsb_xmm_m128: { sse2 }
flags for psubsb_xmm_xmm: { sse2 }
flags for psubsw_mm_m64: { mmx }
flags for psubsw_mm_mm: { mmx }
flags for psubsw_xmm_m128: { sse2 }
flags for psubsw_xmm_xmm: { sse2 }
flags for psubusb_mm_m64: { mmx }
flags for psubusb_mm_mm: { mmx }
flags for psubusb_xmm_m128: { sse2 }
flags for psubusb_xmm_xmm: { sse2 }
flags for psubusw_mm_m64: { mmx }
flags for psubusw_mm_mm: { mmx }
flags for psubusw_xmm_m128: { sse2 }
flags for psubusw_xmm_xmm: { sse2 }
flags for psubw_mm_m64: { mmx }
flags for psubw_mm_mm: { mmx }
flags for psubw_xmm_m128: { sse2 }
flags for psubw_xmm_xmm: { sse2 }
flags for ptest_xmm_m128: { sse4_1 }
flags for ptest_xmm_xmm: { sse4_1 }
flags for punpckhbw_mm_m64: { mmx }
flags for punpckhbw_mm_mm: { mmx }
flags for punpckhbw_xmm_m128: { sse2 }
flags for punpckhbw_xmm_xmm: { sse2 }
flags for punpckhdq_mm_m64: { mmx }
flags for punpckhdq_mm_mm: { mmx }
flags for punpckhdq_xmm_m128: { sse2 }
flags for punpckhdq_xmm_xmm: { sse2 }
flags for punpckhqdq_xmm_m128: { sse2 }
flags for punpckhqdq_xmm_xmm: { sse2 }
flags for punpckhwd_mm_m64: { mmx }
flags for punpckhwd_mm_mm: { mmx }
flags for punpckhwd_xmm_m128: { sse2 }
flags for punpckhwd_xmm_xmm: { sse2 }
flags for punpcklbw_mm_m32: { mmx }
flags for punpcklbw_mm_mm: { mmx }
flags for punpcklbw_xmm_m128: { sse2 }
flags for punpcklbw_xmm_xmm: { sse2 }
flags for punpckldq_mm_m32: { mmx }
flags for punpckldq_mm_mm: { mmx }
flags for punpckldq_xmm_m128: { sse2 }
flags for punpckldq_xmm_xmm: { sse2 }
flags for punpcklqdq_xmm_m128: { sse2 }
flags for punpcklqdq_xmm_xmm: { sse2 }
flags for punpcklwd_mm_m32: { mmx }
flags for punpcklwd_mm_mm: { mmx }
flags for punpcklwd_xmm_m128: { sse2 }
flags for punpcklwd_xmm_xmm: { sse2 }
flags for pushq_imm16: { }
flags for pushq_imm32: { }
flags for pushq_imm8: { }
flags for pushw_m16: { }
flags for pushq_m64: { }
flags for pushw_r16: { }
flags for pushw_r16_1: { }
flags for pushq_r64: { }
flags for pushq_r64_1: { }
flags for pushf: { }
flags for pushfq: { }
flags for pxor_mm_m64: { mmx }
flags for pxor_mm_mm: { mmx }
flags for pxor_xmm_m128: { sse2 }
flags for pxor_xmm_xmm: { sse2 }
flags for rcpps_xmm_m128: { sse }
flags for rcpps_xmm_xmm: { sse }
flags for rcpss_xmm_m32: { sse }
flags for rcpss_xmm_xmm: { sse }
flags for rdrand_r16: { rdrand }
flags for rdrand_r32: { rdrand }
flags for rdrand_r64: { rdrand }
flags for repz scasb_m8_1: { rep_good }
flags for roundpd_xmm_m128_imm8: { sse4_1 }
flags for roundpd_xmm_xmm_imm8: { sse4_1 }
flags for roundps_xmm_m128_imm8: { sse4_1 }
flags for roundps_xmm_xmm_imm8: { sse4_1 }
flags for roundsd_xmm_m64_imm8: { sse4_1 }
flags for roundsd_xmm_xmm_imm8: { sse4_1 }
flags for roundss_xmm_m32_imm8: { sse4_1 }
flags for roundss_xmm_xmm_imm8: { sse4_1 }
flags for rsqrtps_xmm_m128: { sse }
flags for rsqrtps_xmm_xmm: { sse }
flags for rsqrtss_xmm_m32: { sse }
flags for rsqrtss_xmm_xmm: { sse }
flags for sahf: { lahf_lm }
flags for salw_m16_cl: { }
flags for salw_m16_imm8: { }
flags for salw_m16_one: { }
flags for sall_m32_cl: { }
flags for sall_m32_imm8: { }
flags for sall_m32_one: { }
flags for salq_m64_cl: { }
flags for salq_m64_imm8: { }
flags for salq_m64_one: { }
flags for salb_m8_cl: { }
flags for salb_m8_imm8: { }
flags for salb_m8_one: { }
flags for salw_r16_cl: { }
flags for salw_r16_imm8: { }
flags for salw_r16_one: { }
flags for sall_r32_cl: { }
flags for sall_r32_imm8: { }
flags for sall_r32_one: { }
flags for salq_r64_cl: { }
flags for salq_r64_imm8: { }
flags for salq_r64_one: { }
flags for salb_r8_cl: { }
flags for salb_r8_imm8: { }
flags for salb_r8_one: { }
flags for salb_rh_cl: { }
flags for salb_rh_imm8: { }
flags for salb_rh_one: { }
flags for sarw_m16_cl: { }
flags for sarw_m16_imm8: { }
flags for sarw_m16_one: { }
flags for sarl_m32_cl: { }
flags for sarl_m32_imm8: { }
flags for sarl_m32_one: { }
flags for sarq_m64_cl: { }
flags for sarq_m64_imm8: { }
flags for sarq_m64_one: { }
flags for sarb_m8_cl: { }
flags for sarb_m8_imm8: { }
flags for sarb_m8_one: { }
flags for sarw_r16_cl: { }
flags for sarw_r16_imm8: { }
flags for sarw_r16_one: { }
flags for sarl_r32_cl: { }
flags for sarl_r32_imm8: { }
flags for sarl_r32_one: { }
flags for sarq_r64_cl: { }
flags for sarq_r64_imm8: { }
flags for sarq_r64_one: { }
flags for sarb_r8_cl: { }
flags for sarb_r8_imm8: { }
flags for sarb_r8_one: { }
flags for sarb_rh_cl: { }
flags for sarb_rh_imm8: { }
flags for sarb_rh_one: { }
flags for sarxl_r32_m32_r32: { bmi2 }
flags for sarxl_r32_r32_r32: { bmi2 }
flags for sarxq_r64_m64_r64: { bmi2 }
flags for sarxq_r64_r64_r64: { bmi2 }
flags for shlw_m16_cl: { }
flags for shlw_m16_imm8: { }
flags for shlw_m16_one: { }
flags for shll_m32_cl: { }
flags for shll_m32_imm8: { }
flags for shll_m32_one: { }
flags for shlq_m64_cl: { }
flags for shlq_m64_imm8: { }
flags for shlq_m64_one: { }
flags for shlb_m8_cl: { }
flags for shlb_m8_imm8: { }
flags for shlb_m8_one: { }
flags for shlw_r16_cl: { }
flags for shlw_r16_imm8: { }
flags for shlw_r16_one: { }
flags for shll_r32_cl: { }
flags for shll_r32_imm8: { }
flags for shll_r32_one: { }
flags for shlq_r64_cl: { }
flags for shlq_r64_imm8: { }
flags for shlq_r64_one: { }
flags for shlb_r8_cl: { }
flags for shlb_r8_imm8: { }
flags for shlb_r8_one: { }
flags for shlb_rh_cl: { }
flags for shlb_rh_imm8: { }
flags for shlb_rh_one: { }
flags for shldw_m16_r16_cl: { }
flags for shldw_m16_r16_imm8: { }
flags for shldl_m32_r32_cl: { }
flags for shldl_m32_r32_imm8: { }
flags for shldq_m64_r64_cl: { }
flags for shldq_m64_r64_imm8: { }
flags for shldw_r16_r16_cl: { }
flags for shldw_r16_r16_imm8: { }
flags for shldl_r32_r32_cl: { }
flags for shldl_r32_r32_imm8: { }
flags for shldq_r64_r64_cl: { }
flags for shldq_r64_r64_imm8: { }
flags for shlxl_r32_m32_r32: { bmi2 }
flags for shlxl_r32_r32_r32: { bmi2 }
flags for shlxq_r64_m64_r64: { bmi2 }
flags for shlxq_r64_r64_r64: { bmi2 }
flags for shrw_m16_cl: { }
flags for shrw_m16_imm8: { }
flags for shrw_m16_one: { }
flags for shrl_m32_cl: { }
flags for shrl_m32_imm8: { }
flags for shrl_m32_one: { }
flags for shrq_m64_cl: { }
flags for shrq_m64_imm8: { }
flags for shrq_m64_one: { }
flags for shrb_m8_cl: { }
flags for shrb_m8_imm8: { }
flags for shrb_m8_one: { }
flags for shrw_r16_cl: { }
flags for shrw_r16_imm8: { }
flags for shrw_r16_one: { }
flags for shrl_r32_cl: { }
flags for shrl_r32_imm8: { }
flags for shrl_r32_one: { }
flags for shrq_r64_cl: { }
flags for shrq_r64_imm8: { }
flags for shrq_r64_one: { }
flags for shrb_r8_cl: { }
flags for shrb_r8_imm8: { }
flags for shrb_r8_one: { }
flags for shrb_rh_cl: { }
flags for shrb_rh_imm8: { }
flags for shrb_rh_one: { }
flags for shrxl_r32_m32_r32: { bmi2 }
flags for shrxl_r32_r32_r32: { bmi2 }
flags for shrxq_r64_m64_r64: { bmi2 }
flags for shrxq_r64_r64_r64: { bmi2 }
flags for shufpd_xmm_m128_imm8: { sse2 }
flags for shufpd_xmm_xmm_imm8: { sse2 }
flags for shufps_xmm_m128_imm8: { sse }
flags for shufps_xmm_xmm_imm8: { sse }
flags for sqrtpd_xmm_m128: { sse2 }
flags for sqrtpd_xmm_xmm: { sse2 }
flags for sqrtps_xmm_m128: { sse }
flags for sqrtps_xmm_xmm: { sse }
flags for sqrtsd_xmm_m64: { sse2 }
flags for sqrtsd_xmm_xmm: { sse2 }
flags for sqrtss_xmm_m32: { sse }
flags for sqrtss_xmm_xmm: { sse }
flags for subb_al_imm8: { }
flags for subw_ax_imm16: { }
flags for subl_eax_imm32: { }
flags for subw_m16_imm16: { }
flags for subw_m16_imm8: { }
flags for subw_m16_r16: { }
flags for subl_m32_imm32: { }
flags for subl_m32_imm8: { }
flags for subl_m32_r32: { }
flags for subq_m64_imm32: { }
flags for subq_m64_imm8: { }
flags for subq_m64_r64: { }
flags for subb_m8_imm8: { }
flags for subb_m8_r8: { }
flags for subb_m8_rh: { }
flags for subw_r16_imm16: { }
flags for subw_r16_imm8: { }
flags for subw_r16_m16: { }
flags for subw_r16_r16: { }
flags for subw_r16_r16_1: { }
flags for subl_r32_imm32: { }
flags for subl_r32_imm8: { }
flags for subl_r32_m32: { }
flags for subl_r32_r32: { }
flags for subl_r32_r32_1: { }
flags for subq_r64_imm32: { }
flags for subq_r64_imm8: { }
flags for subq_r64_m64: { }
flags for subq_r64_r64: { }
flags for subq_r64_r64_1: { }
flags for subb_r8_imm8: { }
flags for subb_r8_m8: { }
flags for subb_r8_r8: { }
flags for subb_r8_r8_1: { }
flags for subb_r8_rh: { }
flags for subb_r8_rh_1: { }
flags for subq_rax_imm32: { }
flags for subb_rh_imm8: { }
flags for subb_rh_m8: { }
flags for subb_rh_r8: { }
flags for subb_rh_r8_1: { }
flags for subb_rh_rh: { }
flags for subb_rh_rh_1: { }
flags for subpd_xmm_m128: { sse2 }
flags for subpd_xmm_xmm: { sse2 }
flags for subps_xmm_m128: { sse }
flags for subps_xmm_xmm: { sse }
flags for subsd_xmm_m64: { sse2 }
flags for subsd_xmm_xmm: { sse2 }
flags for subss_xmm_m32: { sse }
flags for subss_xmm_xmm: { sse }
flags for tzcntw_r16_m16: { bmi1 }
flags for tzcntw_r16_r16: { bmi1 }
flags for tzcntl_r32_m32: { bmi1 }
flags for tzcntl_r32_r32: { bmi1 }
flags for tzcntq_r64_m64: { bmi1 }
flags for tzcntq_r64_r64: { bmi1 }
flags for ucomisd_xmm_m64: { sse2 }
flags for ucomisd_xmm_xmm: { sse2 }
flags for ucomiss_xmm_m32: { sse }
flags for ucomiss_xmm_xmm: { sse }
flags for unpckhpd_xmm_m128: { sse2 }
flags for unpckhpd_xmm_xmm: { sse2 }
flags for unpckhps_xmm_m128: { sse }
flags for unpckhps_xmm_xmm: { sse }
flags for unpcklpd_xmm_m128: { sse2 }
flags for unpcklpd_xmm_xmm: { sse2 }
flags for unpcklps_xmm_m128: { sse }
flags for unpcklps_xmm_xmm: { sse }
flags for vaddpd_xmm_xmm_m128: { avx }
flags for vaddpd_xmm_xmm_xmm: { avx }
flags for vaddpd_ymm_ymm_m256: { avx }
flags for vaddpd_ymm_ymm_ymm: { avx }
flags for vaddps_xmm_xmm_m128: { avx }
flags for vaddps_xmm_xmm_xmm: { avx }
flags for vaddps_ymm_ymm_m256: { avx }
flags for vaddps_ymm_ymm_ymm: { avx }
flags for vaddsd_xmm_xmm_m64: { avx }
flags for vaddsd_xmm_xmm_xmm: { avx }
flags for vaddss_xmm_xmm_m32: { avx }
flags for vaddss_xmm_xmm_xmm: { avx }
flags for vaddsubpd_xmm_xmm_m128: { avx }
flags for vaddsubpd_xmm_xmm_xmm: { avx }
flags for vaddsubpd_ymm_ymm_m256: { avx }
flags for vaddsubpd_ymm_ymm_ymm: { avx }
flags for vaddsubps_xmm_xmm_m128: { avx }
flags for vaddsubps_xmm_xmm_xmm: { avx }
flags for vaddsubps_ymm_ymm_m256: { avx }
flags for vaddsubps_ymm_ymm_ymm: { avx }
flags for vaesdec_xmm_xmm_m128: { aes avx }
flags for vaesdec_xmm_xmm_xmm: { aes avx }
flags for vaesdeclast_xmm_xmm_m128: { aes avx }
flags for vaesdeclast_xmm_xmm_xmm: { aes avx }
flags for vaesenc_xmm_xmm_m128: { aes avx }
flags for vaesenc_xmm_xmm_xmm: { aes avx }
flags for vaesenclast_xmm_xmm_m128: { aes avx }
flags for vaesenclast_xmm_xmm_xmm: { aes avx }
flags for vaesimc_xmm_m128: { aes avx }
flags for vaesimc_xmm_xmm: { aes avx }
flags for vaeskeygenassist_xmm_m128_imm8: { aes avx }
flags for vaeskeygenassist_xmm_xmm_imm8: { aes avx }
flags for vandnpd_xmm_xmm_m128: { avx }
flags for vandnpd_xmm_xmm_xmm: { avx }
flags for vandnpd_ymm_ymm_m256: { avx }
flags for vandnpd_ymm_ymm_ymm: { avx }
flags for vandnps_xmm_xmm_m128: { avx }
flags for vandnps_xmm_xmm_xmm: { avx }
flags for vandnps_ymm_ymm_m256: { avx }
flags for vandnps_ymm_ymm_ymm: { avx }
flags for vandpd_xmm_xmm_m128: { avx }
flags for vandpd_xmm_xmm_xmm: { avx }
flags for vandpd_ymm_ymm_m256: { avx }
flags for vandpd_ymm_ymm_ymm: { avx }
flags for vandps_xmm_xmm_m128: { avx }
flags for vandps_xmm_xmm_xmm: { avx }
flags for vandps_ymm_ymm_m256: { avx }
flags for vandps_ymm_ymm_ymm: { avx }
flags for vblendpd_xmm_xmm_m128_imm8: { avx }
flags for vblendpd_xmm_xmm_xmm_imm8: { avx }
flags for vblendpd_ymm_ymm_m256_imm8: { avx }
flags for vblendpd_ymm_ymm_ymm_imm8: { avx }
flags for vblendps_xmm_xmm_m128_imm8: { avx }
flags for vblendps_xmm_xmm_xmm_imm8: { avx }
flags for vblendps_ymm_ymm_m256_imm8: { avx }
flags for vblendps_ymm_ymm_ymm_imm8: { avx }
flags for vblendvpd_xmm_xmm_m128_xmm: { avx }
flags for vblendvpd_xmm_xmm_xmm_xmm: { avx }
flags for vblendvpd_ymm_ymm_m256_ymm: { avx }
flags for vblendvpd_ymm_ymm_ymm_ymm: { avx }
flags for vblendvps_xmm_xmm_m128_xmm: { avx }
flags for vblendvps_xmm_xmm_xmm_xmm: { avx }
flags for vblendvps_ymm_ymm_m256_ymm: { avx }
flags for vblendvps_ymm_ymm_ymm_ymm: { avx }
flags for vbroadcastf128_ymm_m128: { avx }
flags for vpbroadcasti128_ymm_m128: { avx2 }
flags for vbroadcastsd_ymm_m64: { avx }
flags for vbroadcastsd_ymm_xmm: { avx2 }
flags for vbroadcastss_xmm_m32: { avx }
flags for vbroadcastss_xmm_xmm: { avx2 }
flags for vbroadcastss_ymm_m32: { avx }
flags for vbroadcastss_ymm_xmm: { avx2 }
flags for vcmppd_xmm_xmm_m128_imm8: { avx }
flags for vcmppd_xmm_xmm_xmm_imm8: { avx }
flags for vcmppd_ymm_ymm_m256_imm8: { avx }
flags for vcmppd_ymm_ymm_ymm_imm8: { avx }
flags for vcmpps_xmm_xmm_m128_imm8: { avx }
flags for vcmpps_xmm_xmm_xmm_imm8: { avx }
flags for vcmpps_ymm_ymm_m256_imm8: { avx }
flags for vcmpps_ymm_ymm_ymm_imm8: { avx }
flags for vcmpsd_xmm_xmm_m64_imm8: { avx }
flags for vcmpsd_xmm_xmm_xmm_imm8: { avx }
flags for vcmpss_xmm_xmm_m32_imm8: { avx }
flags for vcmpss_xmm_xmm_xmm_imm8: { avx }
flags for vcomisd_xmm_m64: { avx }
flags for vcomisd_xmm_xmm: { avx }
flags for vcomiss_xmm_m32: { avx }
flags for vcomiss_xmm_xmm: { avx }
flags for vcvtdq2pd_xmm_m64: { avx }
flags for vcvtdq2pd_xmm_xmm: { avx }
flags for vcvtdq2pd_ymm_m128: { avx }
flags for vcvtdq2pd_ymm_ymm: { avx }
flags for vcvtdq2ps_xmm_m128: { avx }
flags for vcvtdq2ps_xmm_xmm: { avx }
flags for vcvtdq2ps_ymm_m256: { avx }
flags for vcvtdq2ps_ymm_ymm: { avx }
flags for vcvtpd2dqx_xmm_m128: { avx }
flags for vcvtpd2dq_xmm_m256: { avx }
flags for vcvtpd2dqx_xmm_xmm: { avx }
flags for vcvtpd2dq_xmm_ymm: { avx }
flags for vcvtpd2ps_xmm_m128: { avx }
flags for vcvtpd2ps_xmm_m256: { avx }
flags for vcvtpd2ps_xmm_xmm: { avx }
flags for vcvtpd2ps_xmm_ymm: { avx }
flags for vcvtph2ps_xmm_m64: { f16c }
flags for vcvtph2ps_xmm_xmm: { f16c }
flags for vcvtph2ps_ymm_m128: { f16c }
flags for vcvtph2ps_ymm_xmm: { f16c }
flags for vcvtps2dq_xmm_m128: { avx }
flags for vcvtps2dq_xmm_xmm: { avx }
flags for vcvtps2dq_ymm_m256: { avx }
flags for vcvtps2dq_ymm_ymm: { avx }
flags for vcvtps2pd_xmm_m64: { avx }
flags for vcvtps2pd_xmm_xmm: { avx }
flags for vcvtps2pd_ymm_m128: { avx }
flags for vcvtps2pd_ymm_xmm: { avx }
flags for vcvtps2ph_m128_ymm_imm8: { f16c }
flags for vcvtps2ph_m64_xmm_imm8: { f16c }
flags for vcvtps2ph_xmm_xmm_imm8: { f16c }
flags for vcvtps2ph_xmm_ymm_imm8: { f16c }
flags for vcvtsd2sil_r32_m64: { avx }
flags for vcvtsd2sil_r32_xmm: { avx }
flags for vcvtsd2siq_r64_m64: { avx }
flags for vcvtsd2siq_r64_xmm: { avx }
flags for vcvtsd2ss_xmm_xmm_m64: { avx }
flags for vcvtsd2ss_xmm_xmm_xmm: { avx }
flags for vcvtsi2sdl_xmm_xmm_m32: { avx }
flags for vcvtsi2sdq_xmm_xmm_m64: { avx }
flags for vcvtsi2sdl_xmm_xmm_r32: { avx }
flags for vcvtsi2sdq_xmm_xmm_r64: { avx }
flags for vcvtsi2ssl_xmm_xmm_m32: { avx }
flags for vcvtsi2ssq_xmm_xmm_m64: { avx }
flags for vcvtsi2ssl_xmm_xmm_r32: { avx }
flags for vcvtsi2ssq_xmm_xmm_r64: { avx }
flags for vcvtss2sd_xmm_xmm_m32: { avx }
flags for vcvtss2sd_xmm_xmm_xmm: { avx }
flags for vcvtss2sil_r32_m32: { avx }
flags for vcvtss2sil_r32_xmm: { avx }
flags for vcvtss2siq_r64_m32: { avx }
flags for vcvtss2siq_r64_xmm: { avx }
flags for vcvttpd2dq_xmm_m128: { avx }
flags for vcvttpd2dq_xmm_m256: { avx }
flags for vcvttpd2dq_xmm_xmm: { avx }
flags for vcvttpd2dq_xmm_ymm: { avx }
flags for vcvttps2dq_xmm_m128: { avx }
flags for vcvttps2dq_xmm_xmm: { avx }
flags for vcvttps2dq_ymm_m256: { avx }
flags for vcvttps2dq_ymm_ymm: { avx }
flags for vcvttsd2si_r32_m64: { avx }
flags for vcvttsd2si_r32_xmm: { avx }
flags for vcvttsd2siq_r64_m64: { avx }
flags for vcvttsd2siq_r64_xmm: { avx }
flags for vcvttss2si_r32_m32: { avx }
flags for vcvttss2si_r32_xmm: { avx }
flags for vcvttss2siq_r64_m32: { avx }
flags for vcvttss2siq_r64_xmm: { avx }
flags for vdivpd_xmm_xmm_m128: { avx }
flags for vdivpd_xmm_xmm_xmm: { avx }
flags for vdivpd_ymm_ymm_m256: { avx }
flags for vdivpd_ymm_ymm_ymm: { avx }
flags for vdivps_xmm_xmm_m128: { avx }
flags for vdivps_xmm_xmm_xmm: { avx }
flags for vdivps_ymm_ymm_m256: { avx }
flags for vdivps_ymm_ymm_ymm: { avx }
flags for vdivsd_xmm_xmm_m64: { avx }
flags for vdivsd_xmm_xmm_xmm: { avx }
flags for vdivss_xmm_xmm_m32: { avx }
flags for vdivss_xmm_xmm_xmm: { avx }
flags for vdppd_xmm_xmm_m128_imm8: { avx }
flags for vdppd_xmm_xmm_xmm_imm8: { avx }
flags for vdpps_xmm_xmm_m128_imm8: { avx }
flags for vdpps_xmm_xmm_xmm_imm8: { avx }
flags for vdpps_ymm_ymm_m256_imm8: { avx }
flags for vdpps_ymm_ymm_ymm_imm8: { avx }
flags for vextractf128_m128_ymm_imm8: { avx }
flags for vextractf128_xmm_ymm_imm8: { avx }
flags for vextracti128_m128_ymm_imm8: { avx2 }
flags for vextracti128_xmm_ymm_imm8: { avx2 }
flags for vextractps_m32_xmm_imm8: { avx }
flags for vextractps_r32_xmm_imm8: { avx }
flags for vfmadd132pd_xmm_xmm_m128: { fma }
flags for vfmadd132pd_xmm_xmm_xmm: { fma }
flags for vfmadd132pd_ymm_ymm_m256: { fma }
flags for vfmadd132pd_ymm_ymm_ymm: { fma }
flags for vfmadd132ps_xmm_xmm_m128: { fma }
flags for vfmadd132ps_xmm_xmm_xmm: { fma }
flags for vfmadd132ps_ymm_ymm_m256: { fma }
flags for vfmadd132ps_ymm_ymm_ymm: { fma }
flags for vfmadd132sd_xmm_xmm_m64: { fma }
flags for vfmadd132sd_xmm_xmm_xmm: { fma }
flags for vfmadd132ss_xmm_xmm_m32: { fma }
flags for vfmadd132ss_xmm_xmm_xmm: { fma }
flags for vfmadd213pd_xmm_xmm_m128: { fma }
flags for vfmadd213pd_xmm_xmm_xmm: { fma }
flags for vfmadd213pd_ymm_ymm_m256: { fma }
flags for vfmadd213pd_ymm_ymm_ymm: { fma }
flags for vfmadd213ps_xmm_xmm_m128: { fma }
flags for vfmadd213ps_xmm_xmm_xmm: { fma }
flags for vfmadd213ps_ymm_ymm_m256: { fma }
flags for vfmadd213ps_ymm_ymm_ymm: { fma }
flags for vfmadd213sd_xmm_xmm_m64: { fma }
flags for vfmadd213sd_xmm_xmm_xmm: { fma }
flags for vfmadd213ss_xmm_xmm_m32: { fma }
flags for vfmadd213ss_xmm_xmm_xmm: { fma }
flags for vfmadd231pd_xmm_xmm_m128: { fma }
flags for vfmadd231pd_xmm_xmm_xmm: { fma }
flags for vfmadd231pd_ymm_ymm_m256: { fma }
flags for vfmadd231pd_ymm_ymm_ymm: { fma }
flags for vfmadd231ps_xmm_xmm_m128: { fma }
flags for vfmadd231ps_xmm_xmm_xmm: { fma }
flags for vfmadd231ps_ymm_ymm_m256: { fma }
flags for vfmadd231ps_ymm_ymm_ymm: { fma }
flags for vfmadd231sd_xmm_xmm_m64: { fma }
flags for vfmadd231sd_xmm_xmm_xmm: { fma }
flags for vfmadd231ss_xmm_xmm_m32: { fma }
flags for vfmadd231ss_xmm_xmm_xmm: { fma }
flags for vfmaddsub132pd_xmm_xmm_m128: { fma }
flags for vfmaddsub132pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub132pd_ymm_ymm_m256: { fma }
flags for vfmaddsub132pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub132ps_xmm_xmm_m128: { fma }
flags for vfmaddsub132ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub132ps_ymm_ymm_m256: { fma }
flags for vfmaddsub132ps_ymm_ymm_ymm: { fma }
flags for vfmaddsub213pd_xmm_xmm_m128: { fma }
flags for vfmaddsub213pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub213pd_ymm_ymm_m256: { fma }
flags for vfmaddsub213pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub213ps_xmm_xmm_m128: { fma }
flags for vfmaddsub213ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub213ps_ymm_ymm_m256: { fma }
flags for vfmaddsub213ps_ymm_ymm_ymm: { fma }
flags for vfmaddsub231pd_xmm_xmm_m128: { fma }
flags for vfmaddsub231pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub231pd_ymm_ymm_m256: { fma }
flags for vfmaddsub231pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub231ps_xmm_xmm_m128: { fma }
flags for vfmaddsub231ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub231ps_ymm_ymm_m256: { fma }
flags for vfmaddsub231ps_ymm_ymm_ymm: { fma }
flags for vfmsub132pd_xmm_xmm_m128: { fma }
flags for vfmsub132pd_xmm_xmm_xmm: { fma }
flags for vfmsub132pd_ymm_ymm_m256: { fma }
flags for vfmsub132pd_ymm_ymm_ymm: { fma }
flags for vfmsub132ps_xmm_xmm_m128: { fma }
flags for vfmsub132ps_xmm_xmm_xmm: { fma }
flags for vfmsub132ps_ymm_ymm_m256: { fma }
flags for vfmsub132ps_ymm_ymm_ymm: { fma }
flags for vfmsub132sd_xmm_xmm_m64: { fma }
flags for vfmsub132sd_xmm_xmm_xmm: { fma }
flags for vfmsub132ss_xmm_xmm_m32: { fma }
flags for vfmsub132ss_xmm_xmm_xmm: { fma }
flags for vfmsub213pd_xmm_xmm_m128: { fma }
flags for vfmsub213pd_xmm_xmm_xmm: { fma }
flags for vfmsub213pd_ymm_ymm_m256: { fma }
flags for vfmsub213pd_ymm_ymm_ymm: { fma }
flags for vfmsub213ps_xmm_xmm_m128: { fma }
flags for vfmsub213ps_xmm_xmm_xmm: { fma }
flags for vfmsub213ps_ymm_ymm_m256: { fma }
flags for vfmsub213ps_ymm_ymm_ymm: { fma }
flags for vfmsub213sd_xmm_xmm_m64: { fma }
flags for vfmsub213sd_xmm_xmm_xmm: { fma }
flags for vfmsub213ss_xmm_xmm_m32: { fma }
flags for vfmsub213ss_xmm_xmm_xmm: { fma }
flags for vfmsub231pd_xmm_xmm_m128: { fma }
flags for vfmsub231pd_xmm_xmm_xmm: { fma }
flags for vfmsub231pd_ymm_ymm_m256: { fma }
flags for vfmsub231pd_ymm_ymm_ymm: { fma }
flags for vfmsub231ps_xmm_xmm_m128: { fma }
flags for vfmsub231ps_xmm_xmm_xmm: { fma }
flags for vfmsub231ps_ymm_ymm_m256: { fma }
flags for vfmsub231ps_ymm_ymm_ymm: { fma }
flags for vfmsub231sd_xmm_xmm_m64: { fma }
flags for vfmsub231sd_xmm_xmm_xmm: { fma }
flags for vfmsub231ss_xmm_xmm_m32: { fma }
flags for vfmsub231ss_xmm_xmm_xmm: { fma }
flags for vfmsubadd132pd_xmm_xmm_m128: { fma }
flags for vfmsubadd132pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd132pd_ymm_ymm_m256: { fma }
flags for vfmsubadd132pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd132ps_xmm_xmm_m128: { fma }
flags for vfmsubadd132ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd132ps_ymm_ymm_m256: { fma }
flags for vfmsubadd132ps_ymm_ymm_ymm: { fma }
flags for vfmsubadd213pd_xmm_xmm_m128: { fma }
flags for vfmsubadd213pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd213pd_ymm_ymm_m256: { fma }
flags for vfmsubadd213pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd213ps_xmm_xmm_m128: { fma }
flags for vfmsubadd213ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd213ps_ymm_ymm_m256: { fma }
flags for vfmsubadd213ps_ymm_ymm_ymm: { fma }
flags for vfmsubadd231pd_xmm_xmm_m128: { fma }
flags for vfmsubadd231pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd231pd_ymm_ymm_m256: { fma }
flags for vfmsubadd231pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd231ps_xmm_xmm_m128: { fma }
flags for vfmsubadd231ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd231ps_ymm_ymm_m256: { fma }
flags for vfmsubadd231ps_ymm_ymm_ymm: { fma }
flags for vfnmadd132pd_xmm_xmm_m128: { fma }
flags for vfnmadd132pd_xmm_xmm_xmm: { fma }
flags for vfnmadd132pd_ymm_ymm_m256: { fma }
flags for vfnmadd132pd_ymm_ymm_ymm: { fma }
flags for vfnmadd132ps_xmm_xmm_m128: { fma }
flags for vfnmadd132ps_xmm_xmm_xmm: { fma }
flags for vfnmadd132ps_ymm_ymm_m256: { fma }
flags for vfnmadd132ps_ymm_ymm_ymm: { fma }
flags for vfnmadd132sd_xmm_xmm_m64: { fma }
flags for vfnmadd132sd_xmm_xmm_xmm: { fma }
flags for vfnmadd132ss_xmm_xmm_m32: { fma }
flags for vfnmadd132ss_xmm_xmm_xmm: { fma }
flags for vfnmadd213pd_xmm_xmm_m128: { fma }
flags for vfnmadd213pd_xmm_xmm_xmm: { fma }
flags for vfnmadd213pd_ymm_ymm_m256: { fma }
flags for vfnmadd213pd_ymm_ymm_ymm: { fma }
flags for vfnmadd213ps_xmm_xmm_m128: { fma }
flags for vfnmadd213ps_xmm_xmm_xmm: { fma }
flags for vfnmadd213ps_ymm_ymm_m256: { fma }
flags for vfnmadd213ps_ymm_ymm_ymm: { fma }
flags for vfnmadd213sd_xmm_xmm_m64: { fma }
flags for vfnmadd213sd_xmm_xmm_xmm: { fma }
flags for vfnmadd213ss_xmm_xmm_m32: { fma }
flags for vfnmadd213ss_xmm_xmm_xmm: { fma }
flags for vfnmadd231pd_xmm_xmm_m128: { fma }
flags for vfnmadd231pd_xmm_xmm_xmm: { fma }
flags for vfnmadd231pd_ymm_ymm_m256: { fma }
flags for vfnmadd231pd_ymm_ymm_ymm: { fma }
flags for vfnmadd231ps_xmm_xmm_m128: { fma }
flags for vfnmadd231ps_xmm_xmm_xmm: { fma }
flags for vfnmadd231ps_ymm_ymm_m256: { fma }
flags for vfnmadd231ps_ymm_ymm_ymm: { fma }
flags for vfnmadd231sd_xmm_xmm_m64: { fma }
flags for vfnmadd231sd_xmm_xmm_xmm: { fma }
flags for vfnmadd231ss_xmm_xmm_m32: { fma }
flags for vfnmadd231ss_xmm_xmm_xmm: { fma }
flags for vfnmsub132pd_xmm_xmm_m128: { fma }
flags for vfnmsub132pd_xmm_xmm_xmm: { fma }
flags for vfnmsub132pd_ymm_ymm_m256: { fma }
flags for vfnmsub132pd_ymm_ymm_ymm: { fma }
flags for vfnmsub132ps_xmm_xmm_m128: { fma }
flags for vfnmsub132ps_xmm_xmm_xmm: { fma }
flags for vfnmsub132ps_ymm_ymm_m256: { fma }
flags for vfnmsub132ps_ymm_ymm_ymm: { fma }
flags for vfnmsub132sd_xmm_xmm_m64: { fma }
flags for vfnmsub132sd_xmm_xmm_xmm: { fma }
flags for vfnmsub132ss_xmm_xmm_m32: { fma }
flags for vfnmsub132ss_xmm_xmm_xmm: { fma }
flags for vfnmsub213pd_xmm_xmm_m128: { fma }
flags for vfnmsub213pd_xmm_xmm_xmm: { fma }
flags for vfnmsub213pd_ymm_ymm_m256: { fma }
flags for vfnmsub213pd_ymm_ymm_ymm: { fma }
flags for vfnmsub213ps_xmm_xmm_m128: { fma }
flags for vfnmsub213ps_xmm_xmm_xmm: { fma }
flags for vfnmsub213ps_ymm_ymm_m256: { fma }
flags for vfnmsub213ps_ymm_ymm_ymm: { fma }
flags for vfnmsub213sd_xmm_xmm_m64: { fma }
flags for vfnmsub213sd_xmm_xmm_xmm: { fma }
flags for vfnmsub213ss_xmm_xmm_m32: { fma }
flags for vfnmsub213ss_xmm_xmm_xmm: { fma }
flags for vfnmsub231pd_xmm_xmm_m128: { fma }
flags for vfnmsub231pd_xmm_xmm_xmm: { fma }
flags for vfnmsub231pd_ymm_ymm_m256: { fma }
flags for vfnmsub231pd_ymm_ymm_ymm: { fma }
flags for vfnmsub231ps_xmm_xmm_m128: { fma }
flags for vfnmsub231ps_xmm_xmm_xmm: { fma }
flags for vfnmsub231ps_ymm_ymm_m256: { fma }
flags for vfnmsub231ps_ymm_ymm_ymm: { fma }
flags for vfnmsub231sd_xmm_xmm_m64: { fma }
flags for vfnmsub231sd_xmm_xmm_xmm: { fma }
flags for vfnmsub231ss_xmm_xmm_m32: { fma }
flags for vfnmsub231ss_xmm_xmm_xmm: { fma }
flags for vgatherdpd_xmm_m32_xmm: { avx2 }
flags for vgatherdpd_ymm_m32_ymm: { avx2 }
flags for vgatherdps_xmm_m32_xmm: { avx2 }
flags for vgatherdps_ymm_m32_ymm: { avx2 }
flags for vgatherqpd_xmm_m64_xmm: { avx2 }
flags for vgatherqpd_ymm_m64_ymm: { avx2 }
flags for vgatherqps_xmm_m64_xmm: { avx2 }
flags for vgatherqps_xmm_m64_xmm_1: { avx2 }
flags for vhaddpd_xmm_xmm_m128: { avx }
flags for vhaddpd_xmm_xmm_xmm: { avx }
flags for vhaddpd_ymm_ymm_m256: { avx }
flags for vhaddpd_ymm_ymm_ymm: { avx }
flags for vhaddps_xmm_xmm_m128: { avx }
flags for vhaddps_xmm_xmm_xmm: { avx }
flags for vhaddps_ymm_ymm_m256: { avx }
flags for vhaddps_ymm_ymm_ymm: { avx }
flags for vhsubpd_xmm_xmm_m128: { avx }
flags for vhsubpd_xmm_xmm_xmm: { avx }
flags for vhsubpd_ymm_ymm_m256: { avx }
flags for vhsubpd_ymm_ymm_ymm: { avx }
flags for vhsubps_xmm_xmm_m128: { avx }
flags for vhsubps_xmm_xmm_xmm: { avx }
flags for vhsubps_ymm_ymm_m256: { avx }
flags for vhsubps_ymm_ymm_ymm: { avx }
flags for vinsertf128_ymm_ymm_m128_imm8: { avx }
flags for vinsertf128_ymm_ymm_xmm_imm8: { avx }
flags for vinserti128_ymm_ymm_m128_imm8: { avx2 }
flags for vinserti128_ymm_ymm_xmm_imm8: { avx2 }
flags for vinsertps_xmm_xmm_m32_imm8: { avx }
flags for vinsertps_xmm_xmm_xmm_imm8: { avx }
flags for vlddqu_xmm_m128: { avx }
flags for vlddqu_ymm_m256: { avx }
flags for vmaskmovpd_m128_xmm_xmm: { avx }
flags for vmaskmovpd_m256_ymm_ymm: { avx }
flags for vmaskmovpd_xmm_xmm_m128: { avx }
flags for vmaskmovpd_ymm_ymm_m256: { avx }
flags for vmaskmovps_m128_xmm_xmm: { avx }
flags for vmaskmovps_m256_ymm_ymm: { avx }
flags for vmaskmovps_xmm_xmm_m128: { avx }
flags for vmaskmovps_ymm_ymm_m256: { avx }
flags for vmaxpd_xmm_xmm_m128: { avx }
flags for vmaxpd_xmm_xmm_xmm: { avx }
flags for vmaxpd_ymm_ymm_m256: { avx }
flags for vmaxpd_ymm_ymm_ymm: { avx }
flags for vmaxps_xmm_xmm_m128: { avx }
flags for vmaxps_xmm_xmm_xmm: { avx }
flags for vmaxps_ymm_ymm_m256: { avx }
flags for vmaxps_ymm_ymm_ymm: { avx }
flags for vmaxsd_xmm_xmm_m64: { avx }
flags for vmaxsd_xmm_xmm_xmm: { avx }
flags for vmaxss_xmm_xmm_m32: { avx }
flags for vmaxss_xmm_xmm_xmm: { avx }
flags for vminpd_xmm_xmm_m128: { avx }
flags for vminpd_xmm_xmm_xmm: { avx }
flags for vminpd_ymm_ymm_m256: { avx }
flags for vminpd_ymm_ymm_ymm: { avx }
flags for vminps_xmm_xmm_m128: { avx }
flags for vminps_xmm_xmm_xmm: { avx }
flags for vminps_ymm_ymm_m256: { avx }
flags for vminps_ymm_ymm_ymm: { avx }
flags for vminsd_xmm_xmm_m64: { avx }
flags for vminsd_xmm_xmm_xmm: { avx }
flags for vminss_xmm_xmm_m32: { avx }
flags for vminss_xmm_xmm_xmm: { avx }
flags for vmovapd_m128_xmm: { avx }
flags for vmovapd_m256_ymm: { avx }
flags for vmovapd_xmm_m128: { avx }
flags for vmovapd_xmm_xmm: { avx }
flags for vmovapd_xmm_xmm_1: { avx }
flags for vmovapd_ymm_m256: { avx }
flags for vmovapd_ymm_ymm: { avx }
flags for vmovapd_ymm_ymm_1: { avx }
flags for vmovaps_m128_xmm: { avx }
flags for vmovaps_m256_ymm: { avx }
flags for vmovaps_xmm_m128: { avx }
flags for vmovaps_xmm_xmm: { avx }
flags for vmovaps_xmm_xmm_1: { avx }
flags for vmovaps_ymm_m256: { avx }
flags for vmovaps_ymm_ymm: { avx }
flags for vmovaps_ymm_ymm_1: { avx }
flags for vmovd_m32_xmm: { avx }
flags for vmovd_r32_xmm: { avx }
flags for vmovd_xmm_m32: { avx }
flags for vmovd_xmm_r32: { avx }
flags for vmovddup_xmm_m64: { avx }
flags for vmovddup_xmm_xmm: { avx }
flags for vmovddup_ymm_m256: { avx }
flags for vmovddup_ymm_ymm: { avx }
flags for vmovdqa_m128_xmm: { avx }
flags for vmovdqa_m256_ymm: { avx }
flags for vmovdqa_xmm_m128: { avx }
flags for vmovdqa_xmm_xmm: { avx }
flags for vmovdqa_xmm_xmm_1: { avx }
flags for vmovdqa_ymm_m256: { avx }
flags for vmovdqa_ymm_ymm: { avx }
flags for vmovdqa_ymm_ymm_1: { avx }
flags for vmovdqu_m128_xmm: { avx }
flags for vmovdqu_m256_ymm: { avx }
flags for vmovdqu_xmm_m128: { avx }
flags for vmovdqu_xmm_xmm: { avx }
flags for vmovdqu_xmm_xmm_1: { avx }
flags for vmovdqu_ymm_m256: { avx }
flags for vmovdqu_ymm_ymm: { avx }
flags for vmovdqu_ymm_ymm_1: { avx }
flags for vmovhlps_xmm_xmm_xmm: { avx }
flags for vmovhpd_m64_xmm: { avx }
flags for vmovhpd_xmm_xmm_m64: { avx }
flags for vmovhps_m64_xmm: { avx }
flags for vmovhps_xmm_xmm_m64: { avx }
flags for vmovlhps_xmm_xmm_xmm: { avx }
flags for vmovlpd_m64_xmm: { avx }
flags for vmovlpd_xmm_xmm_m64: { avx }
flags for vmovlps_m64_xmm: { avx }
flags for vmovlps_xmm_xmm_m64: { avx }
flags for vmovmskpd_r32_xmm: { avx }
flags for vmovmskpd_r32_ymm: { avx }
flags for vmovmskpd_r64_xmm: { avx }
flags for vmovmskpd_r64_ymm: { avx }
flags for vmovmskps_r32_xmm: { avx }
flags for vmovmskps_r32_ymm: { avx }
flags for vmovmskps_r64_xmm: { avx }
flags for vmovmskps_r64_ymm: { avx }
flags for vmovntdqa_m128_xmm: { avx }
flags for vmovntdqa_xmm_m128: { avx }
flags for vmovntdqa_ymm_m256: { avx2 }
flags for vmovntpd_m128_xmm: { avx }
flags for vmovntpd_m256_ymm: { avx }
flags for vmovntps_m128_xmm: { avx }
flags for vmovntps_m256_ymm: { avx }
flags for vmovq_m64_xmm: { avx }
flags for vmovq_m64_xmm_1: { avx }
flags for vmovq_r64_xmm: { avx }
flags for vmovq_xmm_m64: { avx }
flags for vmovq_xmm_m64_1: { avx }
flags for vmovq_xmm_r64: { avx }
flags for vmovq_xmm_xmm: { avx }
flags for vmovq_xmm_xmm_1: { avx }
flags for vmovsd_m64_xmm: { avx }
flags for vmovsd_xmm_m64: { avx }
flags for vmovsd_xmm_xmm_xmm: { avx }
flags for vmovsd_xmm_xmm_xmm_1: { avx }
flags for vmovshdup_xmm_m128: { avx }
flags for vmovshdup_xmm_xmm: { avx }
flags for vmovshdup_ymm_m256: { avx }
flags for vmovshdup_ymm_ymm: { avx }
flags for vmovsldup_xmm_m128: { avx }
flags for vmovsldup_xmm_xmm: { avx }
flags for vmovsldup_ymm_m256: { avx }
flags for vmovsldup_ymm_ymm: { avx }
flags for vmovss_m32_xmm: { avx }
flags for vmovss_xmm_m32: { avx }
flags for vmovss_xmm_xmm_xmm: { avx }
flags for vmovss_xmm_xmm_xmm_1: { avx }
flags for vmovupd_m128_xmm: { avx }
flags for vmovupd_m256_ymm: { avx }
flags for vmovupd_xmm_m128: { avx }
flags for vmovupd_xmm_xmm: { avx }
flags for vmovupd_xmm_xmm_1: { avx }
flags for vmovupd_ymm_m256: { avx }
flags for vmovupd_ymm_ymm: { avx }
flags for vmovupd_ymm_ymm_1: { avx }
flags for vmovups_m128_xmm: { avx }
flags for vmovups_m256_ymm: { avx }
flags for vmovups_xmm_m128: { avx }
flags for vmovups_xmm_xmm: { avx }
flags for vmovups_xmm_xmm_1: { avx }
flags for vmovups_ymm_m256: { avx }
flags for vmovups_ymm_ymm: { avx }
flags for vmovups_ymm_ymm_1: { avx }
flags for vmpsadbw_xmm_xmm_m128_imm8: { avx }
flags for vmpsadbw_xmm_xmm_xmm_imm8: { avx }
flags for vmpsadbw_ymm_ymm_m256_imm8: { avx2 }
flags for vmpsadbw_ymm_ymm_ymm_imm8: { avx2 }
flags for vmulpd_xmm_xmm_m128: { avx }
flags for vmulpd_xmm_xmm_xmm: { avx }
flags for vmulpd_ymm_ymm_m256: { avx }
flags for vmulpd_ymm_ymm_ymm: { avx }
flags for vmulps_xmm_xmm_m128: { avx }
flags for vmulps_xmm_xmm_xmm: { avx }
flags for vmulps_ymm_ymm_m256: { avx }
flags for vmulps_ymm_ymm_ymm: { avx }
flags for vmulsd_xmm_xmm_m64: { avx }
flags for vmulsd_xmm_xmm_xmm: { avx }
flags for vmulss_xmm_xmm_m32: { avx }
flags for vmulss_xmm_xmm_xmm: { avx }
flags for vorpd_xmm_xmm_m128: { avx }
flags for vorpd_xmm_xmm_xmm: { avx }
flags for vorpd_ymm_ymm_m256: { avx }
flags for vorpd_ymm_ymm_ymm: { avx }
flags for vorps_xmm_xmm_m128: { avx }
flags for vorps_xmm_xmm_xmm: { avx }
flags for vorps_ymm_ymm_m256: { avx }
flags for vorps_ymm_ymm_ymm: { avx }
flags for vpabsb_xmm_m128: { avx }
flags for vpabsb_xmm_xmm: { avx }
flags for vpabsb_ymm_m256: { avx2 }
flags for vpabsb_ymm_ymm: { avx2 }
flags for vpabsd_xmm_m128: { avx }
flags for vpabsd_xmm_xmm: { avx }
flags for vpabsd_ymm_m256: { avx2 }
flags for vpabsd_ymm_ymm: { avx2 }
flags for vpabsw_xmm_m128: { avx }
flags for vpabsw_xmm_xmm: { avx }
flags for vpabsw_ymm_m256: { avx2 }
flags for vpabsw_ymm_ymm: { avx2 }
flags for vpackssdw_xmm_xmm_m128: { avx }
flags for vpackssdw_xmm_xmm_xmm: { avx }
flags for vpackssdw_ymm_ymm_m256: { avx2 }
flags for vpackssdw_ymm_ymm_ymm: { avx2 }
flags for vpacksswb_xmm_xmm_m128: { avx }
flags for vpacksswb_xmm_xmm_xmm: { avx }
flags for vpacksswb_ymm_ymm_m256: { avx2 }
flags for vpacksswb_ymm_ymm_ymm: { avx2 }
flags for vpackusdw_xmm_xmm_m128: { avx }
flags for vpackusdw_xmm_xmm_xmm: { avx }
flags for vpackusdw_ymm_ymm_m256: { avx2 }
flags for vpackusdw_ymm_ymm_ymm: { avx2 }
flags for vpackuswb_xmm_xmm_m128: { avx }
flags for vpackuswb_xmm_xmm_xmm: { avx }
flags for vpackuswb_ymm_ymm_m256: { avx2 }
flags for vpackuswb_ymm_ymm_ymm: { avx2 }
flags for vpaddb_xmm_xmm_m128: { avx }
flags for vpaddb_xmm_xmm_xmm: { avx }
flags for vpaddb_ymm_ymm_m256: { avx2 }
flags for vpaddb_ymm_ymm_ymm: { avx2 }
flags for vpaddd_xmm_xmm_m128: { avx }
flags for vpaddd_xmm_xmm_xmm: { avx }
flags for vpaddd_ymm_ymm_m256: { avx2 }
flags for vpaddd_ymm_ymm_ymm: { avx2 }
flags for vpaddq_xmm_xmm_m128: { avx }
flags for vpaddq_xmm_xmm_xmm: { avx }
flags for vpaddq_ymm_ymm_m256: { avx2 }
flags for vpaddq_ymm_ymm_ymm: { avx2 }
flags for vpaddsb_xmm_xmm_m128: { avx }
flags for vpaddsb_xmm_xmm_xmm: { avx }
flags for vpaddsb_ymm_ymm_m256: { avx2 }
flags for vpaddsb_ymm_ymm_ymm: { avx2 }
flags for vpaddsw_xmm_xmm_m128: { avx }
flags for vpaddsw_xmm_xmm_xmm: { avx }
flags for vpaddsw_ymm_ymm_m256: { avx2 }
flags for vpaddsw_ymm_ymm_ymm: { avx2 }
flags for vpaddusb_xmm_xmm_m128: { avx }
flags for vpaddusb_xmm_xmm_xmm: { avx }
flags for vpaddusb_ymm_ymm_m256: { avx2 }
flags for vpaddusb_ymm_ymm_ymm: { avx2 }
flags for vpaddusw_xmm_xmm_m128: { avx }
flags for vpaddusw_xmm_xmm_xmm: { avx }
flags for vpaddusw_ymm_ymm_m256: { avx2 }
flags for vpaddusw_ymm_ymm_ymm: { avx2 }
flags for vpaddw_xmm_xmm_m128: { avx }
flags for vpaddw_xmm_xmm_xmm: { avx }
flags for vpaddw_ymm_ymm_m256: { avx2 }
flags for vpaddw_ymm_ymm_ymm: { avx2 }
flags for vpalignr_xmm_xmm_m128_imm8: { avx }
flags for vpalignr_xmm_xmm_xmm_imm8: { avx }
flags for vpalignr_ymm_ymm_m256_imm8: { avx2 }
flags for vpalignr_ymm_ymm_ymm_imm8: { avx2 }
flags for vpand_xmm_xmm_m128: { avx }
flags for vpand_xmm_xmm_xmm: { avx }
flags for vpand_ymm_ymm_m256: { avx2 }
flags for vpand_ymm_ymm_ymm: { avx2 }
flags for vpandn_xmm_xmm_m128: { avx }
flags for vpandn_xmm_xmm_xmm: { avx }
flags for vpandn_ymm_ymm_m256: { avx2 }
flags for vpandn_ymm_ymm_ymm: { avx2 }
flags for vpavgb_xmm_xmm_m128: { avx }
flags for vpavgb_xmm_xmm_xmm: { avx }
flags for vpavgb_ymm_ymm_m256: { avx2 }
flags for vpavgb_ymm_ymm_ymm: { avx2 }
flags for vpavgw_xmm_xmm_m128: { avx }
flags for vpavgw_xmm_xmm_xmm: { avx }
flags for vpavgw_ymm_ymm_m256: { avx2 }
flags for vpavgw_ymm_ymm_ymm: { avx2 }
flags for vpblendd_xmm_xmm_m128_imm8: { avx2 }
flags for vpblendd_xmm_xmm_xmm_imm8: { avx2 }
flags for vpblendd_ymm_ymm_m256_imm8: { avx2 }
flags for vpblendd_ymm_ymm_ymm_imm8: { avx2 }
flags for vpblendvb_xmm_xmm_m128_xmm: { avx }
flags for vpblendvb_xmm_xmm_xmm_xmm: { avx }
flags for vpblendvb_ymm_ymm_m256_ymm: { avx2 }
flags for vpblendvb_ymm_ymm_ymm_ymm: { avx2 }
flags for vpblendw_xmm_xmm_m128_imm8: { avx }
flags for vpblendw_xmm_xmm_xmm_imm8: { avx }
flags for vpblendw_ymm_ymm_m256_imm8: { avx2 }
flags for vpblendw_ymm_ymm_ymm_imm8: { avx2 }
flags for vpbroadcastb_xmm_m8: { avx2 }
flags for vpbroadcastb_xmm_xmm: { avx2 }
flags for vpbroadcastb_ymm_m8: { avx2 }
flags for vpbroadcastb_ymm_xmm: { avx2 }
flags for vpbroadcastd_xmm_m32: { avx2 }
flags for vpbroadcastd_xmm_xmm: { avx2 }
flags for vpbroadcastd_ymm_m32: { avx2 }
flags for vpbroadcastd_ymm_xmm: { avx2 }
flags for vpbroadcastq_xmm_m64: { avx2 }
flags for vpbroadcastq_xmm_xmm: { avx2 }
flags for vpbroadcastq_ymm_m64: { avx2 }
flags for vpbroadcastq_ymm_xmm: { avx2 }
flags for vpbroadcastw_xmm_m16: { avx2 }
flags for vpbroadcastw_xmm_xmm: { avx2 }
flags for vpbroadcastw_ymm_m16: { avx2 }
flags for vpbroadcastw_ymm_xmm: { avx2 }
flags for vpclmulqdq_xmm_xmm_m128_imm8: { pclmulqdq avx }
flags for vpclmulqdq_xmm_xmm_xmm_imm8: { pclmulqdq avx }
flags for vpcmpeqb_xmm_xmm_m128: { avx }
flags for vpcmpeqb_xmm_xmm_xmm: { avx }
flags for vpcmpeqb_ymm_ymm_m256: { avx2 }
flags for vpcmpeqb_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqd_xmm_xmm_m128: { avx }
flags for vpcmpeqd_xmm_xmm_xmm: { avx }
flags for vpcmpeqd_ymm_ymm_m256: { avx2 }
flags for vpcmpeqd_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqq_xmm_xmm_m128: { avx }
flags for vpcmpeqq_xmm_xmm_xmm: { avx }
flags for vpcmpeqq_ymm_ymm_m256: { avx2 }
flags for vpcmpeqq_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqw_xmm_xmm_m128: { avx }
flags for vpcmpeqw_xmm_xmm_xmm: { avx }
flags for vpcmpeqw_ymm_ymm_m256: { avx2 }
flags for vpcmpeqw_ymm_ymm_ymm: { avx2 }
flags for vpcmpestri_xmm_m128_imm8: { avx }
flags for vpcmpestri_xmm_xmm_imm8: { avx }
flags for vpcmpestrm_xmm_m128_imm8: { avx }
flags for vpcmpestrm_xmm_xmm_imm8: { avx }
flags for vpcmpgtb_xmm_xmm_m128: { avx }
flags for vpcmpgtb_xmm_xmm_xmm: { avx }
flags for vpcmpgtb_ymm_ymm_m256: { avx }
flags for vpcmpgtb_ymm_ymm_ymm: { avx }
flags for vpcmpgtd_xmm_xmm_m128: { avx }
flags for vpcmpgtd_xmm_xmm_xmm: { avx }
flags for vpcmpgtd_ymm_ymm_m256: { avx2 }
flags for vpcmpgtd_ymm_ymm_ymm: { avx2 }
flags for vpcmpgtq_xmm_xmm_m128: { avx }
flags for vpcmpgtq_xmm_xmm_xmm: { avx }
flags for vpvmpgtq_ymm_ymm_m256: { avx2 }
flags for vpvmpgtq_ymm_ymm_ymm: { avx2 }
flags for vpcmpgtw_xmm_xmm_m128: { avx }
flags for vpcmpgtw_xmm_xmm_xmm: { avx }
flags for vpcmpgtw_ymm_ymm_m256: { avx2 }
flags for vpcmpgtw_ymm_ymm_ymm: { avx2 }
flags for vpcmpistri_xmm_m128_imm8: { avx }
flags for vpcmpistri_xmm_xmm_imm8: { avx }
flags for vpcmpistrm_xmm_m128_imm8: { avx }
flags for vpcmpistrm_xmm_xmm_imm8: { avx }
flags for vperm2f128_ymm_ymm_m256_imm8: { avx }
flags for vperm2f128_ymm_ymm_ymm_imm8: { avx }
flags for vperm2i128_ymm_ymm_m256_imm8: { avx2 }
flags for vperm2i128_ymm_ymm_ymm_imm8: { avx2 }
flags for vpermd_ymm_ymm_m256: { avx2 }
flags for vpermd_ymm_ymm_ymm: { avx2 }
flags for vpermilpd_xmm_m128_imm8: { avx }
flags for vpermilpd_xmm_xmm_imm8: { avx }
flags for vpermilpd_xmm_xmm_m128: { avx }
flags for vpermilpd_xmm_xmm_xmm: { avx }
flags for vpermilpd_ymm_m256_imm8: { avx }
flags for vpermilpd_ymm_ymm_imm8: { avx }
flags for vpermilpd_ymm_ymm_m256: { avx }
flags for vpermilpd_ymm_ymm_ymm: { avx }
flags for vpermilps_xmm_m128_imm8: { avx }
flags for vpermilps_xmm_xmm_imm8: { avx }
flags for vpermilps_xmm_xmm_m128: { avx }
flags for vpermilps_xmm_xmm_xmm: { avx }
flags for vpermilps_ymm_m256_imm8: { avx }
flags for vpermilps_ymm_ymm_imm8: { avx }
flags for vpermilps_ymm_ymm_m256: { avx }
flags for vpermilps_ymm_ymm_ymm: { avx }
flags for vpermpd_ymm_m256_imm8: { avx2 }
flags for vpermpd_ymm_ymm_imm8: { avx2 }
flags for vpermps_ymm_ymm_m256: { avx2 }
flags for vpermps_ymm_ymm_ymm: { avx2 }
flags for vpermq_ymm_m256_imm8: { avx2 }
flags for vpermq_ymm_ymm_imm8: { avx2 }
flags for vpextrb_m8_xmm_imm8: { avx }
flags for vpextrb_r32_xmm_imm8: { avx }
flags for vpextrb_r64_xmm_imm8: { avx }
flags for vpextrd_m32_xmm_imm8: { avx }
flags for vpextrd_r32_xmm_imm8: { avx }
flags for vpextrq_m64_xmm_imm8: { avx }
flags for vpextrq_r64_xmm_imm8: { avx }
flags for vpextrw_m16_xmm_imm8: { avx }
flags for vpextrw_r32_xmm_imm8: { avx }
flags for vpextrw_r32_xmm_imm8_1: { avx }
flags for vpextrw_r64_xmm_imm8: { avx }
flags for vpextrw_r64_xmm_imm8_1: { avx }
flags for vpgatherdd_xmm_m32_xmm: { avx2 }
flags for vpgatherdd_ymm_m32_ymm: { avx2 }
flags for vpgatherdq_xmm_m32_xmm: { avx2 }
flags for vpgatherdq_ymm_m32_ymm: { avx2 }
flags for vpgatherqd_xmm_m64_xmm: { avx2 }
flags for vpgatherqd_xmm_m64_xmm_1: { avx2 }
flags for vpgatherqq_xmm_m64_xmm: { avx2 }
flags for vpgatherqq_ymm_m64_ymm: { avx2 }
flags for vphaddd_xmm_xmm_m128: { avx }
flags for vphaddd_xmm_xmm_xmm: { avx }
flags for vphaddd_ymm_ymm_m256: { avx2 }
flags for vphaddd_ymm_ymm_ymm: { avx2 }
flags for vphaddsw_xmm_xmm_m128: { avx }
flags for vphaddsw_xmm_xmm_xmm: { avx }
flags for vphaddsw_ymm_ymm_m256: { avx2 }
flags for vphaddsw_ymm_ymm_ymm: { avx2 }
flags for vphaddw_xmm_xmm_m128: { avx }
flags for vphaddw_xmm_xmm_xmm: { avx }
flags for vphaddw_ymm_ymm_m256: { avx2 }
flags for vphaddw_ymm_ymm_ymm: { avx2 }
flags for vphminposuw_xmm_m128: { avx }
flags for vphminposuw_xmm_xmm: { avx }
flags for vphsubd_xmm_xmm_m128: { avx }
flags for vphsubd_xmm_xmm_xmm: { avx }
flags for vphsubd_ymm_ymm_m256: { avx2 }
flags for vphsubd_ymm_ymm_ymm: { avx2 }
flags for vphsubsw_xmm_xmm_m128: { avx }
flags for vphsubsw_xmm_xmm_xmm: { avx }
flags for vphsubsw_ymm_ymm_m256: { avx2 }
flags for vphsubsw_ymm_ymm_ymm: { avx2 }
flags for vphsubw_xmm_xmm_m128: { avx }
flags for vphsubw_xmm_xmm_xmm: { avx }
flags for vphsubw_ymm_ymm_m256: { avx2 }
flags for vphsubw_ymm_ymm_ymm: { avx2 }
flags for vpinsrb_xmm_xmm_m8_imm8: { avx }
flags for vpinsrb_xmm_xmm_r32_imm8: { avx }
flags for vpinsrd_xmm_xmm_m32_imm8: { avx }
flags for vpinsrd_xmm_xmm_r32_imm8: { avx }
flags for vpinsrq_xmm_xmm_m64_imm8: { avx }
flags for vpinsrq_xmm_xmm_r64_imm8: { avx }
flags for vpinsrw_xmm_xmm_m16_imm8: { avx }
flags for vpinsrw_xmm_xmm_r32_imm8: { avx }
flags for vpmaddubsw_xmm_xmm_m128: { avx }
flags for vpmaddubsw_xmm_xmm_xmm: { avx }
flags for vpmaddubsw_ymm_ymm_m256: { avx2 }
flags for vpmaddubsw_ymm_ymm_ymm: { avx2 }
flags for vpmaddwd_xmm_xmm_m128: { avx }
flags for vpmaddwd_xmm_xmm_xmm: { avx }
flags for vpmaddwd_ymm_ymm_m256: { avx2 }
flags for vpmaddwd_ymm_ymm_ymm: { avx2 }
flags for vpmaskmovd_m128_xmm_xmm: { avx2 }
flags for vpmaskmovd_m256_ymm_ymm: { avx2 }
flags for vpmaskmovd_xmm_xmm_m128: { avx2 }
flags for vpmaskmovd_ymm_ymm_m256: { avx2 }
flags for vpmaskmovq_m128_xmm_xmm: { avx2 }
flags for vpmaskmovq_m256_ymm_ymm: { avx2 }
flags for vpmaskmovq_xmm_xmm_m128: { avx2 }
flags for vpmaskmovq_ymm_ymm_m256: { avx2 }
flags for vpmaxsb_xmm_xmm_m128: { avx }
flags for vpmaxsb_xmm_xmm_xmm: { avx }
flags for vpmaxsb_ymm_ymm_m256: { avx2 }
flags for vpmaxsb_ymm_ymm_ymm: { avx2 }
flags for vpmaxsd_xmm_xmm_m128: { avx }
flags for vpmaxsd_xmm_xmm_xmm: { avx }
flags for vpmaxsd_ymm_ymm_m256: { avx2 }
flags for vpmaxsd_ymm_ymm_ymm: { avx2 }
flags for vpmaxsw_xmm_xmm_m128: { avx }
flags for vpmaxsw_xmm_xmm_xmm: { avx }
flags for vpmaxsw_ymm_ymm_m256: { avx2 }
flags for vpmaxsw_ymm_ymm_ymm: { avx2 }
flags for vpmaxub_xmm_xmm_m128: { avx }
flags for vpmaxub_xmm_xmm_xmm: { avx }
flags for vpmaxub_ymm_ymm_m256: { avx2 }
flags for vpmaxub_ymm_ymm_ymm: { avx2 }
flags for vpmaxud_xmm_xmm_m128: { avx }
flags for vpmaxud_xmm_xmm_xmm: { avx }
flags for vpmaxud_ymm_ymm_m256: { avx2 }
flags for vpmaxud_ymm_ymm_ymm: { avx2 }
flags for vpmaxuw_xmm_xmm_m128: { avx }
flags for vpmaxuw_xmm_xmm_xmm: { avx }
flags for vpmaxuw_ymm_ymm_m256: { avx2 }
flags for vpmaxuw_ymm_ymm_ymm: { avx2 }
flags for vpminsb_xmm_xmm_m128: { avx }
flags for vpminsb_xmm_xmm_xmm: { avx }
flags for vpminsb_ymm_ymm_m256: { avx2 }
flags for vpminsb_ymm_ymm_ymm: { avx2 }
flags for vpminsd_xmm_xmm_m128: { avx }
flags for vpminsd_xmm_xmm_xmm: { avx }
flags for vpminsd_ymm_ymm_m256: { avx2 }
flags for vpminsd_ymm_ymm_ymm: { avx2 }
flags for vpminsw_xmm_xmm_m128: { avx }
flags for vpminsw_xmm_xmm_xmm: { avx }
flags for vpminub_xmm_xmm_m128: { avx }
flags for vpminub_xmm_xmm_xmm: { avx }
flags for vpminub_ymm_ymm_m256: { avx2 }
flags for vpminub_ymm_ymm_ymm: { avx2 }
flags for vpminud_xmm_xmm_m128: { avx }
flags for vpminud_xmm_xmm_xmm: { avx }
flags for vpminud_ymm_ymm_m256: { avx2 }
flags for vpminud_ymm_ymm_ymm: { avx2 }
flags for vpminuw_xmm_xmm_m128: { avx }
flags for vpminuw_xmm_xmm_xmm: { avx }
flags for vpminuw_ymm_ymm_m256: { avx2 }
flags for vpminuw_ymm_ymm_ymm: { avx2 }
flags for vpmovmskb_r32_xmm: { avx }
flags for vpmovmskb_r32_ymm: { avx2 }
flags for vpmovmskb_r64_xmm: { avx }
flags for vpmovmskb_r64_ymm: { avx2 }
flags for vpmovsxbd_xmm_m32: { avx }
flags for vpmovsxbd_xmm_xmm: { avx }
flags for vpmovsxbd_ymm_m64: { avx2 }
flags for vpmovsxbd_ymm_xmm: { avx2 }
flags for vpmovsxbq_xmm_m16: { avx }
flags for vpmovsxbq_xmm_xmm: { avx }
flags for vpmovsxbq_ymm_m32: { avx2 }
flags for vpmovsxbq_ymm_xmm: { avx2 }
flags for vpmovsxbw_xmm_m64: { avx }
flags for vpmovsxbw_xmm_xmm: { avx }
flags for vpmovsxbw_ymm_m128: { avx2 }
flags for vpmovsxbw_ymm_xmm: { avx2 }
flags for vpmovsxdq_xmm_m64: { avx }
flags for vpmovsxdq_xmm_xmm: { avx }
flags for vpmovsxdq_ymm_m128: { avx2 }
flags for vpmovsxdq_ymm_xmm: { avx2 }
flags for vpmovsxwd_xmm_m64: { avx }
flags for vpmovsxwd_xmm_xmm: { avx }
flags for vpmovsxwd_ymm_m128: { avx2 }
flags for vpmovsxwd_ymm_xmm: { avx2 }
flags for vpmovsxwq_xmm_m32: { avx }
flags for vpmovsxwq_xmm_xmm: { avx }
flags for vpmovsxwq_ymm_m64: { avx2 }
flags for vpmovsxwq_ymm_xmm: { avx2 }
flags for vpmovzxbd_xmm_m32: { avx }
flags for vpmovzxbd_xmm_xmm: { avx }
flags for vpmovzxbd_ymm_m64: { avx2 }
flags for vpmovzxbd_ymm_xmm: { avx2 }
flags for vpmovzxbq_xmm_m16: { avx }
flags for vpmovzxbq_xmm_xmm: { avx }
flags for vpmovzxbq_ymm_m32: { avx2 }
flags for vpmovzxbq_ymm_xmm: { avx2 }
flags for vpmovzxbw_xmm_m64: { avx }
flags for vpmovzxbw_xmm_xmm: { avx }
flags for vpmovzxbw_ymm_m128: { avx2 }
flags for vpmovzxbw_ymm_xmm: { avx2 }
flags for vpmovzxdq_xmm_m64: { avx }
flags for vpmovzxdq_xmm_xmm: { avx }
flags for vpmovzxdq_ymm_m128: { avx2 }
flags for vpmovzxdq_ymm_xmm: { avx2 }
flags for vpmovzxwd_xmm_m64: { avx }
flags for vpmovzxwd_xmm_xmm: { avx }
flags for vpmovzxwd_ymm_m128: { avx2 }
flags for vpmovzxwd_ymm_xmm: { avx2 }
flags for vpmovzxwq_xmm_m32: { avx }
flags for vpmovzxwq_xmm_xmm: { avx }
flags for vpmovzxwq_ymm_m64: { avx2 }
flags for vpmovzxwq_ymm_xmm: { avx2 }
flags for vpmuldq_xmm_xmm_m128: { avx }
flags for vpmuldq_xmm_xmm_xmm: { avx }
flags for vpmuldq_ymm_ymm_m256: { avx2 }
flags for vpmuldq_ymm_ymm_ymm: { avx2 }
flags for vpmulhrsw_xmm_xmm_m128: { avx }
flags for vpmulhrsw_xmm_xmm_xmm: { avx }
flags for vpmulhrsw_ymm_ymm_m256: { avx2 }
flags for vpmulhrsw_ymm_ymm_ymm: { avx2 }
flags for vpmulhuw_xmm_xmm_m128: { avx }
flags for vpmulhuw_xmm_xmm_xmm: { avx }
flags for vpmulhuw_ymm_ymm_m256: { avx2 }
flags for vpmulhuw_ymm_ymm_ymm: { avx2 }
flags for vpmulhw_xmm_xmm_m128: { avx }
flags for vpmulhw_xmm_xmm_xmm: { avx }
flags for vpmulhw_ymm_ymm_m256: { avx2 }
flags for vpmulhw_ymm_ymm_ymm: { avx2 }
flags for vpmulld_xmm_xmm_m128: { avx }
flags for vpmulld_xmm_xmm_xmm: { avx }
flags for vpmulld_ymm_ymm_m256: { avx2 }
flags for vpmulld_ymm_ymm_ymm: { avx2 }
flags for vpmullw_xmm_xmm_m128: { avx }
flags for vpmullw_xmm_xmm_xmm: { avx }
flags for vpmullw_ymm_ymm_m256: { avx2 }
flags for vpmullw_ymm_ymm_ymm: { avx2 }
flags for vpmuludq_xmm_xmm_m128: { avx }
flags for vpmuludq_xmm_xmm_xmm: { avx }
flags for vpmuludq_ymm_ymm_m256: { avx2 }
flags for vpmuludq_ymm_ymm_ymm: { avx2 }
flags for vpor_xmm_xmm_m128: { avx }
flags for vpor_xmm_xmm_xmm: { avx }
flags for vpor_ymm_ymm_m256: { avx2 }
flags for vpor_ymm_ymm_ymm: { avx2 }
flags for vpsadbw_xmm_xmm_m128: { avx }
flags for vpsadbw_xmm_xmm_xmm: { avx }
flags for vpsadbw_ymm_ymm_m256: { avx2 }
flags for vpsadbw_ymm_ymm_ymm: { avx2 }
flags for vpshufb_xmm_xmm_m128: { avx }
flags for vpshufb_xmm_xmm_xmm: { avx }
flags for vpshufb_ymm_ymm_m256: { avx2 }
flags for vpshufb_ymm_ymm_ymm: { avx2 }
flags for vpshufd_xmm_m128_imm8: { avx }
flags for vpshufd_xmm_xmm_imm8: { avx }
flags for vpshufd_ymm_m256_imm8: { avx2 }
flags for vpshufd_ymm_ymm_imm8: { avx2 }
flags for vpshufhw_xmm_m128_imm8: { avx }
flags for vpshufhw_xmm_xmm_imm8: { avx }
flags for vpshufhw_ymm_m256_imm8: { avx2 }
flags for vpshufhw_ymm_ymm_imm8: { avx2 }
flags for vpshuflw_xmm_m128_imm8: { avx }
flags for vpshuflw_xmm_xmm_imm8: { avx }
flags for vpshuflw_ymm_m256_imm8: { avx2 }
flags for vpshuflw_ymm_ymm_imm8: { avx2 }
flags for vpsignb_xmm_xmm_m128: { avx }
flags for vpsignb_xmm_xmm_xmm: { avx }
flags for vpsignd_xmm_xmm_m128: { avx }
flags for vpsignd_xmm_xmm_xmm: { avx }
flags for vpsignw_xmm_xmm_m128: { avx }
flags for vpsignw_xmm_xmm_xmm: { avx }
flags for vpslld_xmm_xmm_imm8: { avx }
flags for vpslld_xmm_xmm_m128: { avx }
flags for vpslld_xmm_xmm_xmm: { avx }
flags for vpslld_ymm_ymm_imm8: { avx2 }
flags for vpslld_ymm_ymm_m128: { avx2 }
flags for vpslld_ymm_ymm_xmm: { avx2 }
flags for vpslldq_xmm_xmm_imm8: { avx }
flags for vpslldq_ymm_ymm_imm8: { avx2 }
flags for vpsllq_xmm_xmm_imm8: { avx }
flags for vpsllq_xmm_xmm_m128: { avx }
flags for vpsllq_xmm_xmm_xmm: { avx }
flags for vpsllq_ymm_ymm_imm8: { avx2 }
flags for vpsllq_ymm_ymm_m128: { avx2 }
flags for vpsllq_ymm_ymm_xmm: { avx2 }
flags for vpsllvd_xmm_xmm_m128: { avx2 }
flags for vpsllvd_xmm_xmm_xmm: { avx2 }
flags for vpsllvd_ymm_ymm_m256: { avx2 }
flags for vpsllvd_ymm_ymm_ymm: { avx2 }
flags for vpsllvq_xmm_xmm_m128: { avx2 }
flags for vpsllvq_xmm_xmm_xmm: { avx2 }
flags for vpsllvq_ymm_ymm_m256: { avx2 }
flags for vpsllvq_ymm_ymm_ymm: { avx2 }
flags for vpsllw_xmm_xmm_imm8: { avx }
flags for vpsllw_xmm_xmm_m128: { avx }
flags for vpsllw_xmm_xmm_xmm: { avx }
flags for vpsllw_ymm_ymm_imm8: { avx2 }
flags for vpsllw_ymm_ymm_m128: { avx2 }
flags for vpsllw_ymm_ymm_xmm: { avx2 }
flags for vpsrad_xmm_xmm_imm8: { avx }
flags for vpsrad_xmm_xmm_m128: { avx }
flags for vpsrad_xmm_xmm_xmm: { avx }
flags for vpsrad_ymm_ymm_imm8: { avx2 }
flags for vpsrad_ymm_ymm_m128: { avx2 }
flags for vpsrad_ymm_ymm_xmm: { avx2 }
flags for vpsravd_xmm_xmm_m128: { avx2 }
flags for vpsravd_xmm_xmm_xmm: { avx2 }
flags for vpsravd_ymm_ymm_m256: { avx2 }
flags for vpsravd_ymm_ymm_ymm: { avx2 }
flags for vpsraw_xmm_xmm_imm8: { avx }
flags for vpsraw_xmm_xmm_m128: { avx }
flags for vpsraw_xmm_xmm_xmm: { avx }
flags for vpsraw_ymm_ymm_imm8: { avx2 }
flags for vpsraw_ymm_ymm_m128: { avx2 }
flags for vpsraw_ymm_ymm_xmm: { avx2 }
flags for vpsrld_xmm_xmm_imm8: { avx }
flags for vpsrld_xmm_xmm_m128: { avx }
flags for vpsrld_xmm_xmm_xmm: { avx }
flags for vpsrld_ymm_ymm_imm8: { avx2 }
flags for vpsrld_ymm_ymm_m128: { avx2 }
flags for vpsrld_ymm_ymm_xmm: { avx2 }
flags for vpsrldq_xmm_xmm_imm8: { avx }
flags for vpsrldq_ymm_ymm_imm8: { avx2 }
flags for vpsrlq_xmm_xmm_imm8: { avx }
flags for vpsrlq_xmm_xmm_m128: { avx }
flags for vpsrlq_xmm_xmm_xmm: { avx }
flags for vpsrlq_ymm_ymm_imm8: { avx2 }
flags for vpsrlq_ymm_ymm_m128: { avx2 }
flags for vpsrlq_ymm_ymm_xmm: { avx2 }
flags for vpsrlvd_xmm_xmm_m128: { avx2 }
flags for vpsrlvd_xmm_xmm_xmm: { avx2 }
flags for vpsrlvd_ymm_ymm_m256: { avx2 }
flags for vpsrlvd_ymm_ymm_ymm: { avx2 }
flags for vpsrlvq_xmm_xmm_m128: { avx2 }
flags for vpsrlvq_xmm_xmm_xmm: { avx2 }
flags for vpsrlvq_ymm_ymm_m256: { avx2 }
flags for vpsrlvq_ymm_ymm_ymm: { avx2 }
flags for vpsrlw_xmm_xmm_imm8: { avx }
flags for vpsrlw_xmm_xmm_m128: { avx }
flags for vpsrlw_xmm_xmm_xmm: { avx }
flags for vpsrlw_ymm_ymm_imm8: { avx2 }
flags for vpsrlw_ymm_ymm_m128: { avx2 }
flags for vpsrlw_ymm_ymm_xmm: { avx2 }
flags for vpsubb_xmm_xmm_m128: { avx }
flags for vpsubb_xmm_xmm_xmm: { avx }
flags for vpsubb_ymm_ymm_m256: { avx2 }
flags for vpsubb_ymm_ymm_ymm: { avx2 }
flags for vpsubd_xmm_xmm_m128: { avx }
flags for vpsubd_xmm_xmm_xmm: { avx }
flags for vpsubd_ymm_ymm_m256: { avx2 }
flags for vpsubd_ymm_ymm_ymm: { avx2 }
flags for vpsubq_xmm_xmm_m128: { avx }
flags for vpsubq_xmm_xmm_xmm: { avx }
flags for vpsubq_ymm_ymm_m256: { avx2 }
flags for vpsubq_ymm_ymm_ymm: { avx2 }
flags for vpsubsb_xmm_xmm_m128: { avx }
flags for vpsubsb_xmm_xmm_xmm: { avx }
flags for vpsubsb_ymm_ymm_m256: { avx2 }
flags for vpsubsb_ymm_ymm_ymm: { avx2 }
flags for vpsubsw_xmm_xmm_m128: { avx }
flags for vpsubsw_xmm_xmm_xmm: { avx }
flags for vpsubsw_ymm_ymm_m256: { avx2 }
flags for vpsubsw_ymm_ymm_ymm: { avx2 }
flags for vpsubusb_xmm_xmm_m128: { avx }
flags for vpsubusb_xmm_xmm_xmm: { avx }
flags for vpsubusb_ymm_ymm_m256: { avx2 }
flags for vpsubusb_ymm_ymm_ymm: { avx2 }
flags for vpsubusw_xmm_xmm_m128: { avx }
flags for vpsubusw_xmm_xmm_xmm: { avx }
flags for vpsubusw_ymm_ymm_m256: { avx2 }
flags for vpsubusw_ymm_ymm_ymm: { avx2 }
flags for vpsubw_xmm_xmm_m128: { avx }
flags for vpsubw_xmm_xmm_xmm: { avx }
flags for vpsubw_ymm_ymm_m256: { avx2 }
flags for vpsubw_ymm_ymm_ymm: { avx2 }
flags for vptest_xmm_m128: { avx }
flags for vptest_xmm_xmm: { avx }
flags for vptest_ymm_m256: { avx }
flags for vptest_ymm_ymm: { avx }
flags for vpunpckhbw_xmm_xmm_m128: { avx }
flags for vpunpckhbw_xmm_xmm_xmm: { avx }
flags for vpunpckhbw_ymm_ymm_m256: { avx2 }
flags for vpunpckhbw_ymm_ymm_ymm: { avx2 }
flags for vpunpckhdq_xmm_xmm_m128: { avx }
flags for vpunpckhdq_xmm_xmm_xmm: { avx }
flags for vpunpckhdq_ymm_ymm_m256: { avx2 }
flags for vpunpckhdq_ymm_ymm_ymm: { avx2 }
flags for vpunpckhqdq_xmm_xmm_m128: { avx }
flags for vpunpckhqdq_xmm_xmm_xmm: { avx }
flags for vpunpckhqdq_ymm_ymm_m256: { avx2 }
flags for vpunpckhqdq_ymm_ymm_ymm: { avx2 }
flags for vpunpckhwd_xmm_xmm_m128: { avx }
flags for vpunpckhwd_xmm_xmm_xmm: { avx }
flags for vpunpckhwd_ymm_ymm_m256: { avx2 }
flags for vpunpckhwd_ymm_ymm_ymm: { avx2 }
flags for vpunpcklbw_xmm_xmm_m128: { avx }
flags for vpunpcklbw_xmm_xmm_xmm: { avx }
flags for vpunpcklbw_ymm_ymm_m256: { avx2 }
flags for vpunpcklbw_ymm_ymm_ymm: { avx2 }
flags for vpunpckldq_xmm_xmm_m128: { avx }
flags for vpunpckldq_xmm_xmm_xmm: { avx }
flags for vpunpckldq_ymm_ymm_m256: { avx2 }
flags for vpunpckldq_ymm_ymm_ymm: { avx2 }
flags for vpunpcklqdq_xmm_xmm_m128: { avx }
flags for vpunpcklqdq_xmm_xmm_xmm: { avx }
flags for vpunpcklqdq_ymm_ymm_m256: { avx2 }
flags for vpunpcklqdq_ymm_ymm_ymm: { avx2 }
flags for vpunpcklwd_xmm_xmm_m128: { avx }
flags for vpunpcklwd_xmm_xmm_xmm: { avx }
flags for vpunpcklwd_ymm_ymm_m256: { avx2 }
flags for vpunpcklwd_ymm_ymm_ymm: { avx2 }
flags for vpxor_xmm_xmm_m128: { avx }
flags for vpxor_xmm_xmm_xmm: { avx }
flags for vpxor_ymm_ymm_m256: { avx2 }
flags for vpxor_ymm_ymm_ymm: { avx2 }
flags for vrcpps_xmm_m128: { avx }
flags for vrcpps_xmm_xmm: { avx }
flags for vrcpps_ymm_m256: { avx }
flags for vrcpps_ymm_ymm: { avx }
flags for vrcpss_xmm_xmm_m32: { avx }
flags for vrcpss_xmm_xmm_xmm: { avx }
flags for vroundpd_xmm_m128_imm8: { avx }
flags for vroundpd_xmm_xmm_imm8: { avx }
flags for vroundpd_ymm_m256_imm8: { avx }
flags for vroundpd_ymm_ymm_imm8: { avx }
flags for vroundps_xmm_m128_imm8: { avx }
flags for vroundps_xmm_xmm_imm8: { avx }
flags for vroundps_ymm_m256_imm8: { avx }
flags for vroundps_ymm_ymm_imm8: { avx }
flags for vroundsd_xmm_xmm_m64_imm8: { avx }
flags for vroundsd_xmm_xmm_xmm_imm8: { avx }
flags for vroundss_xmm_xmm_m32_imm8: { avx }
flags for vroundss_xmm_xmm_xmm_imm8: { avx }
flags for vrsqrtps_xmm_m128: { avx }
flags for vrsqrtps_xmm_xmm: { avx }
flags for vrsqrtps_ymm_m256: { avx }
flags for vrsqrtps_ymm_ymm: { avx }
flags for vrsqrtss_xmm_xmm_m32: { avx }
flags for vrsqrtss_xmm_xmm_xmm: { avx }
flags for vshufpd_xmm_xmm_m128_imm8: { avx }
flags for vshufpd_xmm_xmm_xmm_imm8: { avx }
flags for vshufpd_ymm_ymm_m256_imm8: { avx }
flags for vshufpd_ymm_ymm_ymm_imm8: { avx }
flags for vshufps_xmm_xmm_m128_imm8: { avx }
flags for vshufps_xmm_xmm_xmm_imm8: { avx }
flags for vshufps_ymm_ymm_m256_imm8: { avx }
flags for vshufps_ymm_ymm_ymm_imm8: { avx }
flags for vsqrtpd_xmm_m128: { avx }
flags for vsqrtpd_xmm_xmm: { avx }
flags for vsqrtpd_ymm_m256: { avx }
flags for vsqrtpd_ymm_ymm: { avx }
flags for vsqrtps_xmm_m128: { avx }
flags for vsqrtps_xmm_xmm: { avx }
flags for vsqrtps_ymm_m256: { avx }
flags for vsqrtps_ymm_ymm: { avx }
flags for vsqrtsd_xmm_xmm_m64: { avx }
flags for vsqrtsd_xmm_xmm_xmm: { avx }
flags for vsqrtss_xmm_xmm_m32: { avx }
flags for vsqrtss_xmm_xmm_xmm: { avx }
flags for vsubpd_xmm_xmm_m128: { avx }
flags for vsubpd_xmm_xmm_xmm: { avx }
flags for vsubpd_ymm_ymm_m256: { avx }
flags for vsubpd_ymm_ymm_ymm: { avx }
flags for vsubps_xmm_xmm_m128: { avx }
flags for vsubps_xmm_xmm_xmm: { avx }
flags for vsubps_ymm_ymm_m256: { avx }
flags for vsubps_ymm_ymm_ymm: { avx }
flags for vsubsd_xmm_xmm_m64: { avx }
flags for vsubsd_xmm_xmm_xmm: { avx }
flags for vsubss_xmm_xmm_m32: { avx }
flags for vsubss_xmm_xmm_xmm: { avx }
flags for vtestpd_xmm_m128: { avx }
flags for vtestpd_xmm_xmm: { avx }
flags for vtestpd_ymm_m256: { avx }
flags for vtestpd_ymm_ymm: { avx }
flags for vtestps_xmm_m128: { avx }
flags for vtestps_xmm_xmm: { avx }
flags for vtestps_ymm_m256: { avx }
flags for vtestps_ymm_ymm: { avx }
flags for vucomisd_xmm_m64: { avx }
flags for vucomisd_xmm_xmm: { avx }
flags for vucomiss_xmm_m32: { avx }
flags for vucomiss_xmm_xmm: { avx }
flags for vunpckhpd_xmm_xmm_m128: { avx }
flags for vunpckhpd_xmm_xmm_xmm: { avx }
flags for vunpckhpd_ymm_ymm_m256: { avx }
flags for vunpckhpd_ymm_ymm_ymm: { avx }
flags for vunpckhps_xmm_xmm_m128: { avx }
flags for vunpckhps_xmm_xmm_xmm: { avx }
flags for vunpckhps_ymm_ymm_m256: { avx }
flags for vunpckhps_ymm_ymm_ymm: { avx }
flags for vunpcklpd_xmm_xmm_m128: { avx }
flags for vunpcklpd_xmm_xmm_xmm: { avx }
flags for vunpcklpd_ymm_ymm_m256: { avx }
flags for vunpcklpd_ymm_ymm_ymm: { avx }
flags for vunpcklps_xmm_xmm_m128: { avx }
flags for vunpcklps_xmm_xmm_xmm: { avx }
flags for vunpcklps_ymm_ymm_m256: { avx }
flags for vunpcklps_ymm_ymm_ymm: { avx }
flags for vxorpd_xmm_xmm_m128: { avx }
flags for vxorpd_xmm_xmm_xmm: { avx }
flags for vxorpd_ymm_ymm_m256: { avx }
flags for vxorpd_ymm_ymm_ymm: { avx }
flags for vxorps_xmm_xmm_m128: { avx }
flags for vxorps_xmm_xmm_xmm: { avx }
flags for vxorps_ymm_ymm_m256: { avx }
flags for vxorps_ymm_ymm_ymm: { avx }
flags for vzeroall: { avx }
flags for vzeroupper: { avx }
flags for wait: { fpu }
flags for xabort_imm8: { rtm }
flags for xacquire: { hle }
flags for xbegin_label: { rtm }
flags for xend: { rtm }
flags for xorb_al_imm8: { }
flags for xorw_ax_imm16: { }
flags for xorl_eax_imm32: { }
flags for xorw_m16_imm16: { }
flags for xorw_m16_imm8: { }
flags for xorw_m16_r16: { }
flags for xorl_m32_imm32: { }
flags for xorl_m32_imm8: { }
flags for xorl_m32_r32: { }
flags for xorq_m64_imm32: { }
flags for xorq_m64_imm8: { }
flags for xorq_m64_r64: { }
flags for xorb_m8_imm8: { }
flags for xorb_m8_r8: { }
flags for xorb_m8_rh: { }
flags for xorw_r16_imm16: { }
flags for xorw_r16_imm8: { }
flags for xorw_r16_m16: { }
flags for xorw_r16_r16: { }
flags for xorw_r16_r16_1: { }
flags for xorl_r32_imm32: { }
flags for xorl_r32_imm8: { }
flags for xorl_r32_m32: { }
flags for xorl_r32_r32: { }
flags for xorl_r32_r32_1: { }
flags for xorq_r64_imm32: { }
flags for xorq_r64_imm8: { }
flags for xorq_r64_m64: { }
flags for xorq_r64_r64: { }
flags for xorq_r64_r64_1: { }
flags for xorb_r8_imm8: { }
flags for xorb_r8_m8: { }
flags for xorb_r8_r8: { }
flags for xorb_r8_r8_1: { }
flags for xorb_r8_rh: { }
flags for xorb_r8_rh_1: { }
flags for xorq_rax_imm32: { }
flags for xorb_rh_imm8: { }
flags for xorb_rh_m8: { }
flags for xorb_rh_r8: { }
flags for xorb_rh_r8_1: { }
flags for xorb_rh_rh: { }
flags for xorb_rh_rh_1: { }
flags for xorpd_xmm_m128: { sse2 }
flags for xorpd_xmm_xmm: { sse2 }
flags for xorps_xmm_m128: { sse }
flags for xorps_xmm_xmm: { sse }
flags for xrelease: { hle }
flags for xtest: { rtm }
Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (10)                                                     Lowest Known Correct Cost (11)                                            
                                                                                                                                                          
  .text                                                                           .text                                                                   
  .globl wcslen                                                                   .globl wcslen                                                           
  .type wcslen, @function                                                         .type wcslen, @function                                                 
                                                                                                                                                          
#! file-offset 0                                                                #! file-offset 0                                                          
#! rip-offset  0                                                                #! rip-offset  0                                                          
#! capacity    0 bytes                                                          #! capacity    0 bytes                                                    
                                                                                                                                                          
# Text                           #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                         #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  nop                            #  1     0     1      OPC=nop                    movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                            #  2     0x1   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                            #  3     0x2   1      OPC=nop                    movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                            #  4     0x3   1      OPC=nop                    movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                            #  5     0x4   1      OPC=nop                    movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                            #  6     0x5   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                            #  7     0x6   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                            #  8     0x7   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  nop                            #  9     0x8   1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                            #  10    0x9   1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  nop                            #  11    0xa   1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                            #  12    0xb   1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                            #  13    0xc   1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                            #  14    0xd   1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                            #  15    0xe   1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                            #  16    0xf   1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                            #  17    0x10  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  leaq -0x20(%rdi,%rdi,4), %rax  #  18    0x11  5      OPC=leaq_r64_m64           nop                       #  18    0x1b  1      OPC=nop                 
  orq $0xfb, %rax                #  19    0x16  4      OPC=orq_r64_imm8           nop                       #  19    0x1c  1      OPC=nop                 
  movq %rdi, %rdx                #  20    0x1a  3      OPC=movq_r64_r64           nop                       #  20    0x1d  1      OPC=nop                 
  nop                            #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  je .L_142ce0                   #  22    0x1e  2      OPC=je_label               nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                       #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>             
  addq $0x4, %rdx                #  23    0x20  4      OPC=addq_r64_imm8          addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax       #  24    0x24  4      OPC=movl_r32_m32           movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  orb %ah, %ah                   #  25    0x28  2      OPC=orb_rh_rh_1            movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  jne .L_142cc0                  #  26    0x2a  2      OPC=jne_label              testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  subl %edi, %edx                #  27    0x2c  2      OPC=subl_r32_r32_1         jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  movq %rdx, %rax                #  28    0x2e  3      OPC=movq_r64_r64_1         movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                            #  29    0x31  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                            #  30    0x32  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                            #  31    0x33  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                            #  32    0x34  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                            #  33    0x35  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                            #  34    0x36  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                            #  35    0x37  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                            #  36    0x38  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                            #  37    0x39  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                            #  38    0x3a  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                            #  39    0x3b  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                            #  40    0x3c  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                            #  41    0x3d  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                            #  42    0x3e  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
  nop                            #  43    0x3f  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
.L_142ce0:                       #        0x40  0      OPC=<label>                popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  sarq $0x2, %rax                #  44    0x40  4      OPC=sarq_r64_imm8          andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  nop                            #  45    0x44  1      OPC=nop                    addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  nop                            #  46    0x45  1      OPC=nop                    jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  nopl %eax                      #  47    0x46  3      OPC=nopl_r32                                                                                       
  nop                            #  48    0x49  1      OPC=nop                  .size wcslen, .-wcslen                                                    
  nop                            #  49    0x4a  1      OPC=nop                                                                                            
  nop                            #  50    0x4b  1      OPC=nop                                                                                            
  nop                            #  51    0x4c  1      OPC=nop                                                                                            
  nop                            #  52    0x4d  1      OPC=nop                                                                                            
  nop                            #  53    0x4e  1      OPC=nop                                                                                            
  nop                            #  54    0x4f  1      OPC=nop                                                                                            
  nop                            #  55    0x50  1      OPC=nop                                                                                            
  nop                            #  56    0x51  1      OPC=nop                                                                                            
  nop                            #  57    0x52  1      OPC=nop                                                                                            
  popq %r11                      #  58    0x53  2      OPC=popq_r64_1                                                                                     
  andl $0xe0, %r11d              #  59    0x55  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11                #  60    0x59  3      OPC=addq_r64_r64                                                                                   
  jmpq %r11                      #  61    0x5c  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                          
.size wcslen, .-wcslen                                                                                                                                    
                                                                                                                                                          

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  51.9101s
Iterations/s:                  1926.41

Starting cost:                 11
Lowest cost:                   10
Lowest correct cost:           11

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.351%       5.279%        4.499%       
Operand         8.393%       4.36%         1.899%       
Opcode          8.382%       7.479%        6.872%       
Global Copy     8.219%       6.818%        6.818%       
Global Swap     8.298%       6.103%        4.96%        
Rotate          8.407%       6.554%        3.977%       
ReplaceNop      8.286%       7.193%        6.424%       
Delete          8.345%       7.236%        4.686%       
Instruction     8.44%        4.737%        0.521%       
Add Nops        8.177%       8.177%        4.229%       
OpcodeWidth     8.348%       6.871%        6.542%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.354%       1.516%        0.002%       
                                                        
Total           100%         72.323%       51.429%      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (10)                                                     Lowest Known Correct Cost (10)                                             
                                                                                                                                                           
  .text                                                                           .text                                                                    
  .globl wcslen                                                                   .globl wcslen                                                            
  .type wcslen, @function                                                         .type wcslen, @function                                                  
                                                                                                                                                           
#! file-offset 0                                                                #! file-offset 0                                                           
#! rip-offset  0                                                                #! rip-offset  0                                                           
#! capacity    0 bytes                                                          #! capacity    0 bytes                                                     
                                                                                                                                                           
# Text                           #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                         #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                            #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                            #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                            #  3     0x2   1      OPC=nop                    nop                       #  3     0x2   1      OPC=nop                  
  nop                            #  4     0x3   1      OPC=nop                    nop                       #  4     0x3   1      OPC=nop                  
  nop                            #  5     0x4   1      OPC=nop                    nop                       #  5     0x4   1      OPC=nop                  
  nop                            #  6     0x5   1      OPC=nop                    nop                       #  6     0x5   1      OPC=nop                  
  nop                            #  7     0x6   1      OPC=nop                    nop                       #  7     0x6   1      OPC=nop                  
  nop                            #  8     0x7   1      OPC=nop                    nop                       #  8     0x7   1      OPC=nop                  
  nop                            #  9     0x8   1      OPC=nop                    nop                       #  9     0x8   1      OPC=nop                  
  nop                            #  10    0x9   1      OPC=nop                    nop                       #  10    0x9   1      OPC=nop                  
  nop                            #  11    0xa   1      OPC=nop                    movl %edi, %edx           #  11    0xa   2      OPC=movl_r32_r32_1       
  nop                            #  12    0xb   1      OPC=nop                    nop                       #  12    0xc   1      OPC=nop                  
  nop                            #  13    0xc   1      OPC=nop                    nop                       #  13    0xd   1      OPC=nop                  
  nop                            #  14    0xd   1      OPC=nop                    nop                       #  14    0xe   1      OPC=nop                  
  nop                            #  15    0xe   1      OPC=nop                    nop                       #  15    0xf   1      OPC=nop                  
  nop                            #  16    0xf   1      OPC=nop                    orl %edx, %edi            #  16    0x10  2      OPC=orl_r32_r32_1        
  nop                            #  17    0x10  1      OPC=nop                    nop                       #  17    0x12  1      OPC=nop                  
  leaq -0x20(%rdi,%rdi,4), %rax  #  18    0x11  5      OPC=leaq_r64_m64           nop                       #  18    0x13  1      OPC=nop                  
  orq $0xfb, %rax                #  19    0x16  4      OPC=orq_r64_imm8           nop                       #  19    0x14  1      OPC=nop                  
  movq %rdi, %rdx                #  20    0x1a  3      OPC=movq_r64_r64           nop                       #  20    0x15  1      OPC=nop                  
  nop                            #  21    0x1d  1      OPC=nop                    nop                       #  21    0x16  1      OPC=nop                  
  je .L_142ce0                   #  22    0x1e  2      OPC=je_label               nop                       #  22    0x17  1      OPC=nop                  
.L_142cc0:                       #        0x20  0      OPC=<label>                nop                       #  23    0x18  1      OPC=nop                  
  addq $0x4, %rdx                #  23    0x20  4      OPC=addq_r64_imm8          nop                       #  24    0x19  1      OPC=nop                  
  movl (%r15,%rdx,1), %eax       #  24    0x24  4      OPC=movl_r32_m32           nop                       #  25    0x1a  1      OPC=nop                  
  orb %ah, %ah                   #  25    0x28  2      OPC=orb_rh_rh_1            nop                       #  26    0x1b  1      OPC=nop                  
  jne .L_142cc0                  #  26    0x2a  2      OPC=jne_label              je .L_142ce0              #  27    0x1c  2      OPC=je_label             
  subl %edi, %edx                #  27    0x2c  2      OPC=subl_r32_r32_1         nop                       #  28    0x1e  1      OPC=nop                  
  movq %rdx, %rax                #  28    0x2e  3      OPC=movq_r64_r64_1         nop                       #  29    0x1f  1      OPC=nop                  
  nop                            #  29    0x31  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>              
  nop                            #  30    0x32  1      OPC=nop                    addl $0x4, %edx           #  30    0x20  6      OPC=addl_r32_imm32       
  nop                            #  31    0x33  1      OPC=nop                    movl (%r15,%rdx,1), %eax  #  31    0x26  4      OPC=movl_r32_m32         
  nop                            #  32    0x34  1      OPC=nop                    subb %al, %ah             #  32    0x2a  2      OPC=subb_rh_r8           
  nop                            #  33    0x35  1      OPC=nop                    jne .L_142cc0             #  33    0x2c  2      OPC=jne_label            
  nop                            #  34    0x36  1      OPC=nop                    nop                       #  34    0x2e  1      OPC=nop                  
  nop                            #  35    0x37  1      OPC=nop                    nop                       #  35    0x2f  1      OPC=nop                  
  nop                            #  36    0x38  1      OPC=nop                    nop                       #  36    0x30  1      OPC=nop                  
  nop                            #  37    0x39  1      OPC=nop                    nopl %eax                 #  37    0x31  3      OPC=nopl_r32             
  nop                            #  38    0x3a  1      OPC=nop                    nop                       #  38    0x34  1      OPC=nop                  
  nop                            #  39    0x3b  1      OPC=nop                    nop                       #  39    0x35  1      OPC=nop                  
  nop                            #  40    0x3c  1      OPC=nop                    nop                       #  40    0x36  1      OPC=nop                  
  nop                            #  41    0x3d  1      OPC=nop                    nop                       #  41    0x37  1      OPC=nop                  
  nop                            #  42    0x3e  1      OPC=nop                    nop                       #  42    0x38  1      OPC=nop                  
  nop                            #  43    0x3f  1      OPC=nop                    nop                       #  43    0x39  1      OPC=nop                  
.L_142ce0:                       #        0x40  0      OPC=<label>                nop                       #  44    0x3a  1      OPC=nop                  
  sarq $0x2, %rax                #  44    0x40  4      OPC=sarq_r64_imm8          nop                       #  45    0x3b  1      OPC=nop                  
  nop                            #  45    0x44  1      OPC=nop                    subl %edi, %edx           #  46    0x3c  2      OPC=subl_r32_r32         
  nop                            #  46    0x45  1      OPC=nop                    movb %dl, %dl             #  47    0x3e  2      OPC=movb_r8_r8           
  nopl %eax                      #  47    0x46  3      OPC=nopl_r32             .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                            #  48    0x49  1      OPC=nop                    nop                       #  48    0x40  1      OPC=nop                  
  nop                            #  49    0x4a  1      OPC=nop                    nop                       #  49    0x41  1      OPC=nop                  
  nop                            #  50    0x4b  1      OPC=nop                    movl %edx, %eax           #  50    0x42  2      OPC=movl_r32_r32         
  nop                            #  51    0x4c  1      OPC=nop                    nop                       #  51    0x44  1      OPC=nop                  
  nop                            #  52    0x4d  1      OPC=nop                    nop                       #  52    0x45  1      OPC=nop                  
  nop                            #  53    0x4e  1      OPC=nop                    nop                       #  53    0x46  1      OPC=nop                  
  nop                            #  54    0x4f  1      OPC=nop                    nop                       #  54    0x47  1      OPC=nop                  
  nop                            #  55    0x50  1      OPC=nop                    nop                       #  55    0x48  1      OPC=nop                  
  nop                            #  56    0x51  1      OPC=nop                    nop                       #  56    0x49  1      OPC=nop                  
  nop                            #  57    0x52  1      OPC=nop                    nop                       #  57    0x4a  1      OPC=nop                  
  popq %r11                      #  58    0x53  2      OPC=popq_r64_1             nop                       #  58    0x4b  1      OPC=nop                  
  andl $0xe0, %r11d              #  59    0x55  4      OPC=andl_r32_imm8          nop                       #  59    0x4c  1      OPC=nop                  
  addq %r15, %r11                #  60    0x59  3      OPC=addq_r64_r64           nop                       #  60    0x4d  1      OPC=nop                  
  jmpq %r11                      #  61    0x5c  3      OPC=jmpq_r64               shrb $0x2, %al            #  61    0x4e  3      OPC=shrb_r8_imm8         
                                                                                  nop                       #  62    0x51  1      OPC=nop                  
.size wcslen, .-wcslen                                                            nop                       #  63    0x52  1      OPC=nop                  
                                                                                  nop                       #  64    0x53  1      OPC=nop                  
                                                                                  popq %r11                 #  65    0x54  2      OPC=popq_r64_1           
                                                                                  andl $0xe0, %r11d         #  66    0x56  4      OPC=andl_r32_imm8        
                                                                                  addq %r15, %r11           #  67    0x5a  3      OPC=addq_r64_r64         
                                                                                  jmpq %r11                 #  68    0x5d  3      OPC=jmpq_r64             
                                                                                                                                                           
                                                                                .size wcslen, .-wcslen                                                     
                                                                                                                                                           

********************************************************************************

Progress Update: 

Lowest Cost Discovered (9)                                                 Lowest Known Correct Cost (9)                                              
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x2   1      OPC=nop                  
  nop                       #  4     0x3   1      OPC=nop                    nop                       #  4     0x3   1      OPC=nop                  
  nop                       #  5     0x4   1      OPC=nop                    nop                       #  5     0x4   1      OPC=nop                  
  nop                       #  6     0x5   1      OPC=nop                    nop                       #  6     0x5   1      OPC=nop                  
  nop                       #  7     0x6   1      OPC=nop                    nop                       #  7     0x6   1      OPC=nop                  
  nop                       #  8     0x7   1      OPC=nop                    nop                       #  8     0x7   1      OPC=nop                  
  nop                       #  9     0x8   1      OPC=nop                    nop                       #  9     0x8   1      OPC=nop                  
  nop                       #  10    0x9   1      OPC=nop                    nop                       #  10    0x9   1      OPC=nop                  
  nop                       #  11    0xa   1      OPC=nop                    nop                       #  11    0xa   1      OPC=nop                  
  nop                       #  12    0xb   1      OPC=nop                    nop                       #  12    0xb   1      OPC=nop                  
  nop                       #  13    0xc   1      OPC=nop                    nop                       #  13    0xc   1      OPC=nop                  
  nop                       #  14    0xd   1      OPC=nop                    nop                       #  14    0xd   1      OPC=nop                  
  nop                       #  15    0xe   1      OPC=nop                    nop                       #  15    0xe   1      OPC=nop                  
  nop                       #  16    0xf   1      OPC=nop                    nop                       #  16    0xf   1      OPC=nop                  
  movl %edi, %edx           #  17    0x10  2      OPC=movl_r32_r32_1         movl %edi, %edx           #  17    0x10  2      OPC=movl_r32_r32_1       
  nop                       #  18    0x12  1      OPC=nop                    nop                       #  18    0x12  1      OPC=nop                  
  nop                       #  19    0x13  1      OPC=nop                    nop                       #  19    0x13  1      OPC=nop                  
  nop                       #  20    0x14  1      OPC=nop                    nop                       #  20    0x14  1      OPC=nop                  
  andl %edx, %edx           #  21    0x15  2      OPC=andl_r32_r32_1         andl %edx, %edx           #  21    0x15  2      OPC=andl_r32_r32_1       
  je .L_142ce0              #  22    0x17  2      OPC=je_label               je .L_142ce0              #  22    0x17  2      OPC=je_label             
  nop                       #  23    0x19  1      OPC=nop                    nop                       #  23    0x19  1      OPC=nop                  
  nop                       #  24    0x1a  1      OPC=nop                    nop                       #  24    0x1a  1      OPC=nop                  
  nop                       #  25    0x1b  1      OPC=nop                    nop                       #  25    0x1b  1      OPC=nop                  
  nop                       #  26    0x1c  1      OPC=nop                    nop                       #  26    0x1c  1      OPC=nop                  
  nop                       #  27    0x1d  1      OPC=nop                    nop                       #  27    0x1d  1      OPC=nop                  
  nop                       #  28    0x1e  1      OPC=nop                    nop                       #  28    0x1e  1      OPC=nop                  
  nop                       #  29    0x1f  1      OPC=nop                    nop                       #  29    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  30    0x20  6      OPC=addl_r32_imm32         addl $0x4, %edx           #  30    0x20  6      OPC=addl_r32_imm32       
  movl (%r15,%rdx,1), %eax  #  31    0x26  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  31    0x26  4      OPC=movl_r32_m32         
  xorb $0x0, %ah            #  32    0x2a  3      OPC=xorb_rh_imm8           xorb $0x0, %ah            #  32    0x2a  3      OPC=xorb_rh_imm8         
  jne .L_142cc0             #  33    0x2d  2      OPC=jne_label              jne .L_142cc0             #  33    0x2d  2      OPC=jne_label            
  nop                       #  34    0x2f  1      OPC=nop                    nop                       #  34    0x2f  1      OPC=nop                  
  nop                       #  35    0x30  1      OPC=nop                    nop                       #  35    0x30  1      OPC=nop                  
  nop                       #  36    0x31  1      OPC=nop                    nop                       #  36    0x31  1      OPC=nop                  
  nop                       #  37    0x32  1      OPC=nop                    nop                       #  37    0x32  1      OPC=nop                  
  nop                       #  38    0x33  1      OPC=nop                    nop                       #  38    0x33  1      OPC=nop                  
  nop                       #  39    0x34  1      OPC=nop                    nop                       #  39    0x34  1      OPC=nop                  
  subl %edi, %edx           #  40    0x35  2      OPC=subl_r32_r32           subl %edi, %edx           #  40    0x35  2      OPC=subl_r32_r32         
  nop                       #  41    0x37  1      OPC=nop                    nop                       #  41    0x37  1      OPC=nop                  
  nop                       #  42    0x38  1      OPC=nop                    nop                       #  42    0x38  1      OPC=nop                  
  nop                       #  43    0x39  1      OPC=nop                    nop                       #  43    0x39  1      OPC=nop                  
  nop                       #  44    0x3a  1      OPC=nop                    nop                       #  44    0x3a  1      OPC=nop                  
  nop                       #  45    0x3b  1      OPC=nop                    nop                       #  45    0x3b  1      OPC=nop                  
  nop                       #  46    0x3c  1      OPC=nop                    nop                       #  46    0x3c  1      OPC=nop                  
  nop                       #  47    0x3d  1      OPC=nop                    nop                       #  47    0x3d  1      OPC=nop                  
  nop                       #  48    0x3e  1      OPC=nop                    nop                       #  48    0x3e  1      OPC=nop                  
  nop                       #  49    0x3f  1      OPC=nop                    nop                       #  49    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  50    0x40  1      OPC=nop                    nop                       #  50    0x40  1      OPC=nop                  
  nop                       #  51    0x41  1      OPC=nop                    nop                       #  51    0x41  1      OPC=nop                  
  nop                       #  52    0x42  1      OPC=nop                    nop                       #  52    0x42  1      OPC=nop                  
  nop                       #  53    0x43  1      OPC=nop                    nop                       #  53    0x43  1      OPC=nop                  
  nop                       #  54    0x44  1      OPC=nop                    nop                       #  54    0x44  1      OPC=nop                  
  nop                       #  55    0x45  1      OPC=nop                    nop                       #  55    0x45  1      OPC=nop                  
  nop                       #  56    0x46  1      OPC=nop                    nop                       #  56    0x46  1      OPC=nop                  
  nop                       #  57    0x47  1      OPC=nop                    nop                       #  57    0x47  1      OPC=nop                  
  nop                       #  58    0x48  1      OPC=nop                    nop                       #  58    0x48  1      OPC=nop                  
  nop                       #  59    0x49  1      OPC=nop                    nop                       #  59    0x49  1      OPC=nop                  
  movl %edx, %eax           #  60    0x4a  2      OPC=movl_r32_r32           movl %edx, %eax           #  60    0x4a  2      OPC=movl_r32_r32         
  shrb $0x2, %al            #  61    0x4c  3      OPC=shrb_r8_imm8           shrb $0x2, %al            #  61    0x4c  3      OPC=shrb_r8_imm8         
  nop                       #  62    0x4f  1      OPC=nop                    nop                       #  62    0x4f  1      OPC=nop                  
  nop                       #  63    0x50  1      OPC=nop                    nop                       #  63    0x50  1      OPC=nop                  
  nop                       #  64    0x51  1      OPC=nop                    nop                       #  64    0x51  1      OPC=nop                  
  nop                       #  65    0x52  1      OPC=nop                    nop                       #  65    0x52  1      OPC=nop                  
  popq %r11                 #  66    0x53  2      OPC=popq_r64_1             popq %r11                 #  66    0x53  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  67    0x55  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  67    0x55  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  68    0x59  3      OPC=addq_r64_r64           addq %r15, %r11           #  68    0x59  3      OPC=addq_r64_r64         
  jmpq %r11                 #  69    0x5c  3      OPC=jmpq_r64               jmpq %r11                 #  69    0x5c  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  117.043s
Iterations/s:                  1708.77

Starting cost:                 11
Lowest cost:                   9
Lowest correct cost:           9

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.3625%      5.3345%       4.719%       
Operand         8.3675%      4.098%        1.849%       
Opcode          8.3595%      7.3915%       6.867%       
Global Copy     8.274%       6.863%        6.863%       
Global Swap     8.259%       5.9335%       4.983%       
Rotate          8.344%       6.433%        4.025%       
ReplaceNop      8.361%       7.184%        6.5135%      
Delete          8.4035%      7.214%        4.578%       
Instruction     8.408%       4.559%        0.4585%      
Add Nops        8.2545%      8.2545%       4.1845%      
OpcodeWidth     8.282%       6.768%        6.48%        
2xWeighted      0%           0%            0%           
Memory+Swap     8.3245%      1.116%        0.001%       
                                                        
Total           100%         71.149%       51.5215%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  219.576s
Iterations/s:                  1366.27

Starting cost:                 11
Lowest cost:                   9
Lowest correct cost:           9

Move Type       Proposed     Succeeded     Accepted        
                                                           
Local Swap      8.33667%     5.577%        4.99533%        
Operand         8.40933%     4.15633%      1.89033%        
Opcode          8.325%       7.43533%      6.97567%        
Global Copy     8.25167%     6.99933%      6.99933%        
Global Swap     8.289%       6.15%         5.297%          
Rotate          8.367%       6.63733%      4.205%          
ReplaceNop      8.31667%     7.22333%      6.64433%        
Delete          8.38867%     7.29467%      4.864%          
Instruction     8.35767%     4.524%        0.471333%       
Add Nops        8.316%       8.316%        4.46133%        
OpcodeWidth     8.32733%     6.93933%      6.69233%        
2xWeighted      0%           0%            0%              
Memory+Swap     8.315%       1.03233%      0.00133333%     
                                                           
Total           100%         72.285%       53.4973%        

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  319.96s
Iterations/s:                  1250.16

Starting cost:                 11
Lowest cost:                   9
Lowest correct cost:           9

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.31875%     5.69275%      5.14525%     
Operand         8.377%       4.198%        2.01975%     
Opcode          8.36125%     7.56025%      7.145%       
Global Copy     8.2795%      7.131%        7.131%       
Global Swap     8.27825%     6.3035%       5.5185%      
Rotate          8.39225%     6.799%        4.36725%     
ReplaceNop      8.2945%      7.30375%      6.8005%      
Delete          8.4%         7.4055%       5.11025%     
Instruction     8.30925%     4.50475%      0.504%       
Add Nops        8.296%       8.296%        4.68025%     
OpcodeWidth     8.35275%     7.05975%      6.83175%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.3405%      0.983%        0.00125%     
                                                        
Total           100%         73.2373%      55.2548%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  461.769s
Iterations/s:                  1082.79

Starting cost:                 11
Lowest cost:                   9
Lowest correct cost:           9

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.3384%      5.7978%       5.2658%      
Operand         8.3574%      4.284%        2.1644%      
Opcode          8.356%       7.6354%       7.267%       
Global Copy     8.2834%      7.252%        7.252%       
Global Swap     8.3442%      6.5356%       5.7966%      
Rotate          8.3406%      6.9036%       4.5788%      
ReplaceNop      8.2924%      7.3862%       6.9412%      
Delete          8.3674%      7.4714%       5.3234%      
Instruction     8.325%       4.6004%       0.5356%      
Add Nops        8.2842%      8.2842%       4.8908%      
OpcodeWidth     8.3718%      7.183%        6.9782%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3392%      1.0136%       0.001%       
                                                        
Total           100%         74.3472%      56.9948%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     e6 00 48 a4 3e 0d 77 e8
%rcx     c0 d2 80 52 aa 2f 67 31
%rdx     aa c6 dc 79 e6 cf d9 db
%rbx     78 0c 57 90 85 38 57 85
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 04 e0 0a c0
%rdi     00 00 00 00 02 e5 0d c0
%r8      7d 01 36 5e 6e dd a7 0c
%r9      37 ab 1f 4e c7 ee 3e be
%r10     ec 5e a7 05 fc 9a 75 20
%r11     44 f2 54 37 88 64 44 ec
%r12     c5 d7 b3 06 59 b2 d0 fb
%r13     05 77 37 e5 40 8c c5 f1
%r14     a4 9d 5f b8 b1 01 11 ac
%r15     00 00 00 00 0c 2d e0 b0

%ymm0    d6 1f 30 e7 cf 11 c8 79 35 9c 78 91 f7 da 32 3f 29 30 2d 7d 2b b6 46 46 76 ba 81 84 f5 aa d1 ef
%ymm1    29 39 2e 27 62 0f f7 7b 40 e6 b2 c6 b0 16 4e 1f 1f 74 ed e0 4a bc b2 cd 91 fc 86 4a 86 cc c9 02
%ymm2    a1 7a 3d a9 51 04 7b 29 a2 6c 32 27 2c 4c 74 65 9c 5e 17 7d 3f a3 90 5f 58 d3 ac 8b 42 b0 05 f8
%ymm3    95 a4 d4 52 02 5a 15 59 09 10 de df 6e 72 ad 47 46 60 d3 e0 c4 75 c9 47 36 26 b7 d7 ce e4 2a 42
%ymm4    6f 17 c9 70 82 25 9b 2f 22 41 1a c9 38 0a eb 59 9b 79 ac 54 33 4b 81 53 87 0c 89 3f d6 63 88 ff
%ymm5    1a 5c ae c9 ed 97 00 7d 15 db e2 e6 b8 a0 cb ef 68 c1 03 0f 26 8a 63 d2 56 17 51 03 90 45 7a 51
%ymm6    e1 75 e6 b9 5b 89 0a 92 9c 73 92 1e 5d b7 3c 77 ff 9c ac 10 34 ea 0c 25 c4 82 c2 f2 2c aa a1 28
%ymm7    c5 c2 59 3d e0 e3 57 27 88 ce 1d f5 32 aa 63 13 4c ab d7 d5 ac 3b 29 9c 07 3e 90 e2 7a 0d 20 87
%ymm8    ea e1 59 71 1c 97 18 df b6 34 87 8f ac b9 72 b7 87 c8 54 74 7b a8 9d a6 fc 62 7d 5f 5b 3f cf 79
%ymm9    58 8b 5d 2f a1 7c d6 30 5f 3f 18 80 89 e4 f9 fa 37 3f 88 80 b8 c0 2c 44 44 84 a7 9e 88 45 20 28
%ymm10   e3 c9 a2 65 71 17 08 41 75 8c 6b 45 2c 2b 2c ac a2 48 b3 a8 11 73 20 90 bb 60 64 77 1c e0 d0 7e
%ymm11   0a 82 dd 97 9e 14 f5 39 a3 de 31 62 68 a5 f7 23 78 cb f7 cc 29 ae 19 80 9d a6 60 0d ea ff a9 73
%ymm12   cb d7 29 45 cd a7 67 35 08 53 40 cf af 62 9e 4d fa f9 56 d6 81 8b df b4 62 31 9b e1 93 f5 81 86
%ymm13   87 97 bd dd cc e5 b4 87 18 0d 1f e3 04 cc a2 35 1d 40 96 cf 46 9d 79 6f 1c ee 90 67 8c 5f cc aa
%ymm14   46 9f 3d bc 18 a6 ff 3b da 1a 87 53 01 7a 33 1e 75 67 7c 40 4a 3c aa 7a f6 0d 01 86 f1 13 f6 89
%ymm15   58 a4 97 24 5e f8 e6 a2 e0 40 a2 a5 66 88 1e 13 87 a4 e0 68 2e 79 ec ee 2f b0 44 b4 ba 37 b3 34

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   8a 79 6a 5c b6 4a 5d a4 
00000006 fffffff0   v v v v v v v v   6f 12 4c ca 7b 28 6c 83 
00000006 ffffffe8   v v v v v v v v   41 ca a3 01 27 fe 9a 9f 
00000006 ffffffe0   v v v v v v v v   e0 87 18 3c a7 af 0d 2e 

[ 00000000 0f12ee88 - 00000000 0f12ee60 ]
[ 1 valid rows shown ]

00000000 0f12ee70   . . . . v v v v   00 00 00 00 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (8)                                                 Lowest Known Correct Cost (8)                                              
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  movl %edi, %edx           #  2     0x1   2      OPC=movl_r32_r32_1         movl %edi, %edx           #  2     0x1   2      OPC=movl_r32_r32_1       
  movl (%r15,%rdx,1), %ecx  #  3     0x3   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  3     0x3   4      OPC=movl_r32_m32         
  nop                       #  4     0x7   1      OPC=nop                    nop                       #  4     0x7   1      OPC=nop                  
  nop                       #  5     0x8   1      OPC=nop                    nop                       #  5     0x8   1      OPC=nop                  
  nop                       #  6     0x9   1      OPC=nop                    nop                       #  6     0x9   1      OPC=nop                  
  nop                       #  7     0xa   1      OPC=nop                    nop                       #  7     0xa   1      OPC=nop                  
  nop                       #  8     0xb   1      OPC=nop                    nop                       #  8     0xb   1      OPC=nop                  
  nop                       #  9     0xc   1      OPC=nop                    nop                       #  9     0xc   1      OPC=nop                  
  xorq %rax, %rax           #  10    0xd   3      OPC=xorq_r64_r64           xorq %rax, %rax           #  10    0xd   3      OPC=xorq_r64_r64         
  nop                       #  11    0x10  1      OPC=nop                    nop                       #  11    0x10  1      OPC=nop                  
  nop                       #  12    0x11  1      OPC=nop                    nop                       #  12    0x11  1      OPC=nop                  
  nop                       #  13    0x12  1      OPC=nop                    nop                       #  13    0x12  1      OPC=nop                  
  nop                       #  14    0x13  1      OPC=nop                    nop                       #  14    0x13  1      OPC=nop                  
  nop                       #  15    0x14  1      OPC=nop                    nop                       #  15    0x14  1      OPC=nop                  
  nop                       #  16    0x15  1      OPC=nop                    nop                       #  16    0x15  1      OPC=nop                  
  nop                       #  17    0x16  1      OPC=nop                    nop                       #  17    0x16  1      OPC=nop                  
  nop                       #  18    0x17  1      OPC=nop                    nop                       #  18    0x17  1      OPC=nop                  
  nop                       #  19    0x18  1      OPC=nop                    nop                       #  19    0x18  1      OPC=nop                  
  nop                       #  20    0x19  1      OPC=nop                    nop                       #  20    0x19  1      OPC=nop                  
  nop                       #  21    0x1a  1      OPC=nop                    nop                       #  21    0x1a  1      OPC=nop                  
  orb %ch, %ah              #  22    0x1b  2      OPC=orb_rh_rh_1            orb %ch, %ah              #  22    0x1b  2      OPC=orb_rh_rh_1          
  je .L_142ce0              #  23    0x1d  2      OPC=je_label               je .L_142ce0              #  23    0x1d  2      OPC=je_label             
  nop                       #  24    0x1f  1      OPC=nop                    nop                       #  24    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  25    0x20  6      OPC=addl_r32_imm32         addl $0x4, %edx           #  25    0x20  6      OPC=addl_r32_imm32       
  movw (%r15,%rdx,1), %ax   #  26    0x26  5      OPC=movw_r16_m16           movw (%r15,%rdx,1), %ax   #  26    0x26  5      OPC=movw_r16_m16         
  sarb $0x3, %ah            #  27    0x2b  3      OPC=sarb_rh_imm8           sarb $0x3, %ah            #  27    0x2b  3      OPC=sarb_rh_imm8         
  jne .L_142cc0             #  28    0x2e  2      OPC=jne_label              jne .L_142cc0             #  28    0x2e  2      OPC=jne_label            
  addq %rdx, %rax           #  29    0x30  3      OPC=addq_r64_r64           addq %rdx, %rax           #  29    0x30  3      OPC=addq_r64_r64         
  nop                       #  30    0x33  1      OPC=nop                    nop                       #  30    0x33  1      OPC=nop                  
  nop                       #  31    0x34  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                  
  nop                       #  32    0x35  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                  
  nop                       #  33    0x36  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                  
  nop                       #  34    0x37  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                  
  nop                       #  35    0x38  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                  
  nop                       #  36    0x39  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                  
  nop                       #  37    0x3a  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                  
  nop                       #  38    0x3b  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                  
  nop                       #  39    0x3c  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                  
  subq %rdi, %rax           #  40    0x3d  3      OPC=subq_r64_r64           subq %rdi, %rax           #  40    0x3d  3      OPC=subq_r64_r64         
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  41    0x40  1      OPC=nop                    nop                       #  41    0x40  1      OPC=nop                  
  sarw $0x2, %ax            #  42    0x41  4      OPC=sarw_r16_imm8          sarw $0x2, %ax            #  42    0x41  4      OPC=sarw_r16_imm8        
  nop                       #  43    0x45  1      OPC=nop                    nop                       #  43    0x45  1      OPC=nop                  
  nop                       #  44    0x46  1      OPC=nop                    nop                       #  44    0x46  1      OPC=nop                  
  nop                       #  45    0x47  1      OPC=nop                    nop                       #  45    0x47  1      OPC=nop                  
  nop                       #  46    0x48  1      OPC=nop                    nop                       #  46    0x48  1      OPC=nop                  
  nop                       #  47    0x49  1      OPC=nop                    nop                       #  47    0x49  1      OPC=nop                  
  nop                       #  48    0x4a  1      OPC=nop                    nop                       #  48    0x4a  1      OPC=nop                  
  nop                       #  49    0x4b  1      OPC=nop                    nop                       #  49    0x4b  1      OPC=nop                  
  nop                       #  50    0x4c  1      OPC=nop                    nop                       #  50    0x4c  1      OPC=nop                  
  nop                       #  51    0x4d  1      OPC=nop                    nop                       #  51    0x4d  1      OPC=nop                  
  popq %r11                 #  52    0x4e  2      OPC=popq_r64_1             popq %r11                 #  52    0x4e  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  53    0x50  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  53    0x50  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  54    0x54  3      OPC=addq_r64_r64           addq %r15, %r11           #  54    0x54  3      OPC=addq_r64_r64         
  jmpq %r11                 #  55    0x57  3      OPC=jmpq_r64               jmpq %r11                 #  55    0x57  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  80.4354s
Iterations/s:                  1243.23

Starting cost:                 9
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.12%        5.44%         4.547%       
Operand         8.26%        4.073%        1.524%       
Opcode          8.44%        7.335%        6.679%       
Global Copy     8.454%       6.971%        6.971%       
Global Swap     8.408%       6.069%        4.596%       
Rotate          8.477%       6.556%        3.704%       
ReplaceNop      8.196%       7.071%        6.125%       
Delete          8.272%       7.163%        4.516%       
Instruction     8.359%       5.186%        0.557%       
Add Nops        8.429%       8.429%        4.101%       
OpcodeWidth     8.311%       6.562%        6.165%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.274%       1.342%        0.002%       
                                                        
Total           100%         72.197%       49.487%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  156.079s
Iterations/s:                  1281.4

Starting cost:                 9
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.1765%      5.509%        4.6295%      
Operand         8.2655%      4.245%        1.6365%      
Opcode          8.379%       7.3975%       6.774%       
Global Copy     8.492%       7.151%        7.151%       
Global Swap     8.291%       6.198%        4.8365%      
Rotate          8.36%        6.641%        3.911%       
ReplaceNop      8.2295%      7.224%        6.365%       
Delete          8.314%       7.3155%       4.87%        
Instruction     8.342%       5.1675%       0.588%       
Add Nops        8.4425%      8.4425%       4.432%       
OpcodeWidth     8.3535%      6.72%         6.356%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.3545%      1.385%        0.001%       
                                                        
Total           100%         73.396%       51.5505%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  235.451s
Iterations/s:                  1274.15

Starting cost:                 9
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted      
                                                         
Local Swap      8.279%       5.691%        4.76833%      
Operand         8.25833%     4.361%        1.82867%      
Opcode          8.39967%     7.562%        7.031%        
Global Copy     8.406%       7.24933%      7.24933%      
Global Swap     8.295%       6.50533%      5.26367%      
Rotate          8.35233%     6.85733%      4.27533%      
ReplaceNop      8.26467%     7.39867%      6.658%        
Delete          8.34133%     7.47567%      5.308%        
Instruction     8.32033%     5.17267%      0.628667%     
Add Nops        8.423%       8.423%        4.82267%      
OpcodeWidth     8.335%       6.912%        6.596%        
2xWeighted      0%           0%            0%            
Memory+Swap     8.32533%     1.36%         0.001%        
                                                         
Total           100%         74.968%       54.4307%      

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  297.514s
Iterations/s:                  1344.48

Starting cost:                 9
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.28425%     5.71875%      4.7895%      
Operand         8.31025%     4.46825%      1.88925%     
Opcode          8.36%        7.59225%      7.10225%     
Global Copy     8.4205%      7.34725%      7.34725%     
Global Swap     8.286%       6.6395%       5.443%       
Rotate          8.34275%     6.9705%       4.44825%     
ReplaceNop      8.2705%      7.47375%      6.79%        
Delete          8.35525%     7.5575%       5.47975%     
Instruction     8.3%         5.16725%      0.64825%     
Add Nops        8.399%       8.399%        4.982%       
OpcodeWidth     8.32625%     7.00275%      6.707%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.34525%     1.32975%      0.00075%     
                                                        
Total           100%         75.6665%      55.6272%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  357.954s
Iterations/s:                  1396.83

Starting cost:                 9
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.2682%      5.735%        4.8172%      
Operand         8.3242%      4.535%        1.9426%      
Opcode          8.3354%      7.6214%       7.1536%      
Global Copy     8.4112%      7.399%        7.399%       
Global Swap     8.3066%      6.7456%       5.5858%      
Rotate          8.326%       7.0328%       4.5734%      
ReplaceNop      8.2828%      7.533%        6.8798%      
Delete          8.3374%      7.5768%       5.5936%      
Instruction     8.3284%      5.1888%       0.6506%      
Add Nops        8.3964%      8.3964%       5.0912%      
OpcodeWidth     8.3326%      7.0816%       6.7916%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3508%      1.3514%       0.0006%      
                                                        
Total           100%         76.1968%      56.479%      

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     87 ba a8 35 e9 d0 13 50
%rcx     1b 48 91 3f e9 4c e3 b0
%rdx     fa 15 54 22 93 a0 8e 61
%rbx     b8 6e d1 0a b1 9b 81 cf
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 0c 3e db eb
%rdi     00 00 00 00 0c 3e dc 1c
%r8      df cc 0d 93 cf 05 92 95
%r9      9b 72 97 d3 75 b7 22 35
%r10     79 d2 0e 58 1b 73 75 bb
%r11     7c 46 be 76 f6 4e b1 ea
%r12     1f 0e a7 98 07 b3 3a 7e
%r13     a9 4a fc d8 09 e6 d1 c6
%r14     55 cc b0 46 83 58 e0 dd
%r15     00 00 00 00 02 08 3e 30

%ymm0    d6 81 76 5d 5a 04 cb 2d bc 98 88 79 15 2b e3 33 89 f5 43 cd 70 cd 45 7b 55 b4 96 e1 61 42 2a b5
%ymm1    0c 1c b6 31 ac 8f c3 f7 9a c2 58 66 99 3b 66 3f 48 25 6e a8 02 e1 c1 c6 03 e1 ad 42 0b d4 42 8e
%ymm2    1f 0e 6a 30 d7 15 52 ea d1 58 f9 c7 5a da fc e8 ab 5d 0e 17 d1 59 e1 bc 8d 3c 78 b2 4b df 94 96
%ymm3    d8 2d 52 ca fe ab 18 1b b7 3a 6c d7 b4 8d 56 c1 d8 45 74 f7 0c 69 83 61 0c 66 2c 46 d1 6c 22 52
%ymm4    4d f5 90 28 2b 29 d2 cb 0c a7 eb 63 b3 f8 a2 36 db fb 9e 60 66 64 73 47 5d 0e f6 93 1c 92 78 30
%ymm5    46 96 7d 60 08 63 2b 3e 71 fd b2 7d 4c 65 e1 e7 2a de 48 fa 0b 04 17 00 01 82 aa df 51 47 8f ae
%ymm6    e7 25 83 f1 27 e3 59 2c 75 67 c9 4c 79 21 e7 f9 85 b1 bd 1a 39 f7 7d 10 f5 d2 79 f9 fc 4a d8 b2
%ymm7    3b d4 96 1f 9c 1d 9d 6a e3 a9 86 ae fa 52 e2 74 52 df a5 24 8b 23 be df ce 1b d6 5e ef 52 aa 39
%ymm8    c3 86 d3 a4 74 82 d8 b1 e7 19 d4 46 24 ef 1b f4 5e 89 29 d0 dc f3 b1 9a 6c bc 40 fe 4f 50 13 00
%ymm9    76 08 73 bc 57 65 97 49 c0 50 45 b2 20 de 72 33 2e 38 ac 25 6a 93 c0 38 56 a6 70 a5 8c 1c 81 b6
%ymm10   3f e3 bf 48 25 ba 00 40 c7 dc 72 ba 32 e4 b2 fb f7 dc 01 e3 c4 33 c5 78 0f ab 4c 5f 8d 3b 03 e4
%ymm11   cc 67 ed d3 7c 92 2d 4c ee c0 43 c1 85 9a 32 6e a3 ab f7 cb 70 a8 0a 5f df 28 3f 2d 39 cd 00 24
%ymm12   81 3e 67 56 70 3f 50 40 1d c9 86 fb 1a 84 5a 13 5b 53 aa 47 44 9d 9a 7a 98 59 9d 59 19 ab 6b 68
%ymm13   8f 50 ca 7e 6d 10 96 0e 8a ae 7b 7c 27 f2 48 3c 02 cc fc e1 72 dd b4 85 72 a3 0c 1d 1c dc 31 37
%ymm14   1d 85 58 5c ee a2 fa a0 8a fb 08 37 bd b2 3b f2 fb c3 89 f8 e1 83 c0 a9 f7 57 00 a7 ce 42 2b f9
%ymm15   7b ba 33 28 07 28 de 9b 5e 81 19 ed b1 ce 33 e1 b5 b7 2b 16 b6 7e 51 9d ca 47 1f d1 bc 8a 72 61

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   47 71 33 97 4c 3f a0 6f 
00000006 fffffff0   v v v v v v v v   86 16 e7 36 f3 e0 6a 07 
00000006 ffffffe8   v v v v v v v v   78 77 98 d1 e0 ec 70 64 
00000006 ffffffe0   v v v v v v v v   34 75 37 e7 ec b9 f5 78 

[ 00000000 0e471a78 - 00000000 0e4719e0 ]
[ 3 valid rows shown ]

00000000 0e471a58   . . . . v v v v   00 00 00 00 00 00 00 00 
00000000 0e471a50   v v v v v v v v   5c 65 cc c6 2e c0 03 2c 
00000000 0e471a48   v v v v . . . .   b3 85 82 0b 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (7)                                                 Lowest Known Correct Cost (7)                                              
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x2   1      OPC=nop                  
  nop                       #  4     0x3   1      OPC=nop                    nop                       #  4     0x3   1      OPC=nop                  
  nop                       #  5     0x4   1      OPC=nop                    nop                       #  5     0x4   1      OPC=nop                  
  nop                       #  6     0x5   1      OPC=nop                    nop                       #  6     0x5   1      OPC=nop                  
  nop                       #  7     0x6   1      OPC=nop                    nop                       #  7     0x6   1      OPC=nop                  
  nop                       #  8     0x7   1      OPC=nop                    nop                       #  8     0x7   1      OPC=nop                  
  nop                       #  9     0x8   1      OPC=nop                    nop                       #  9     0x8   1      OPC=nop                  
  nop                       #  10    0x9   1      OPC=nop                    nop                       #  10    0x9   1      OPC=nop                  
  nop                       #  11    0xa   1      OPC=nop                    nop                       #  11    0xa   1      OPC=nop                  
  xorl %eax, %eax           #  12    0xb   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  12    0xb   2      OPC=xorl_r32_r32         
  nop                       #  13    0xd   1      OPC=nop                    nop                       #  13    0xd   1      OPC=nop                  
  nop                       #  14    0xe   1      OPC=nop                    nop                       #  14    0xe   1      OPC=nop                  
  nop                       #  15    0xf   1      OPC=nop                    nop                       #  15    0xf   1      OPC=nop                  
  nop                       #  16    0x10  1      OPC=nop                    nop                       #  16    0x10  1      OPC=nop                  
  nop                       #  17    0x11  1      OPC=nop                    nop                       #  17    0x11  1      OPC=nop                  
  nop                       #  18    0x12  1      OPC=nop                    nop                       #  18    0x12  1      OPC=nop                  
  nop                       #  19    0x13  1      OPC=nop                    nop                       #  19    0x13  1      OPC=nop                  
  nop                       #  20    0x14  1      OPC=nop                    nop                       #  20    0x14  1      OPC=nop                  
  movl %edi, %edx           #  21    0x15  2      OPC=movl_r32_r32           movl %edi, %edx           #  21    0x15  2      OPC=movl_r32_r32         
  movl (%r15,%rdx,1), %ecx  #  22    0x17  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  22    0x17  4      OPC=movl_r32_m32         
  subl %ecx, %eax           #  23    0x1b  2      OPC=subl_r32_r32_1         subl %ecx, %eax           #  23    0x1b  2      OPC=subl_r32_r32_1       
  nop                       #  24    0x1d  1      OPC=nop                    nop                       #  24    0x1d  1      OPC=nop                  
  je .L_142ce0              #  25    0x1e  2      OPC=je_label               je .L_142ce0              #  25    0x1e  2      OPC=je_label             
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  26    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  26    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  27    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  27    0x23  4      OPC=movl_r32_m32         
  andb $0xfb, %al           #  28    0x27  2      OPC=andb_al_imm8           andb $0xfb, %al           #  28    0x27  2      OPC=andb_al_imm8         
  jne .L_142cc0             #  29    0x29  2      OPC=jne_label              jne .L_142cc0             #  29    0x29  2      OPC=jne_label            
  nop                       #  30    0x2b  1      OPC=nop                    nop                       #  30    0x2b  1      OPC=nop                  
  nop                       #  31    0x2c  1      OPC=nop                    nop                       #  31    0x2c  1      OPC=nop                  
  subb %dil, %dl            #  32    0x2d  3      OPC=subb_r8_r8_1           subb %dil, %dl            #  32    0x2d  3      OPC=subb_r8_r8_1         
  nop                       #  33    0x30  1      OPC=nop                    nop                       #  33    0x30  1      OPC=nop                  
  nopl %eax                 #  34    0x31  3      OPC=nopl_r32               nopl %eax                 #  34    0x31  3      OPC=nopl_r32             
  xorb %dl, %al             #  35    0x34  2      OPC=xorb_r8_r8             xorb %dl, %al             #  35    0x34  2      OPC=xorb_r8_r8           
  nop                       #  36    0x36  1      OPC=nop                    nop                       #  36    0x36  1      OPC=nop                  
  nop                       #  37    0x37  1      OPC=nop                    nop                       #  37    0x37  1      OPC=nop                  
  nop                       #  38    0x38  1      OPC=nop                    nop                       #  38    0x38  1      OPC=nop                  
  nop                       #  39    0x39  1      OPC=nop                    nop                       #  39    0x39  1      OPC=nop                  
  nop                       #  40    0x3a  1      OPC=nop                    nop                       #  40    0x3a  1      OPC=nop                  
  nop                       #  41    0x3b  1      OPC=nop                    nop                       #  41    0x3b  1      OPC=nop                  
  nop                       #  42    0x3c  1      OPC=nop                    nop                       #  42    0x3c  1      OPC=nop                  
  shrb $0x2, %al            #  43    0x3d  3      OPC=shrb_r8_imm8           shrb $0x2, %al            #  43    0x3d  3      OPC=shrb_r8_imm8         
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  44    0x40  1      OPC=nop                    nop                       #  44    0x40  1      OPC=nop                  
  nop                       #  45    0x41  1      OPC=nop                    nop                       #  45    0x41  1      OPC=nop                  
  nop                       #  46    0x42  1      OPC=nop                    nop                       #  46    0x42  1      OPC=nop                  
  nop                       #  47    0x43  1      OPC=nop                    nop                       #  47    0x43  1      OPC=nop                  
  nop                       #  48    0x44  1      OPC=nop                    nop                       #  48    0x44  1      OPC=nop                  
  nop                       #  49    0x45  1      OPC=nop                    nop                       #  49    0x45  1      OPC=nop                  
  nop                       #  50    0x46  1      OPC=nop                    nop                       #  50    0x46  1      OPC=nop                  
  popq %r11                 #  51    0x47  2      OPC=popq_r64_1             popq %r11                 #  51    0x47  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  52    0x49  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  52    0x49  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  53    0x4d  3      OPC=addq_r64_r64           addq %r15, %r11           #  53    0x4d  3      OPC=addq_r64_r64         
  jmpq %r11                 #  54    0x50  3      OPC=jmpq_r64               jmpq %r11                 #  54    0x50  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  91.1993s
Iterations/s:                  1096.5

Starting cost:                 8
Lowest cost:                   7
Lowest correct cost:           7

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.397%       4.509%        3.494%       
Operand         8.101%       4.557%        2.012%       
Opcode          8.275%       7.928%        7.73%        
Global Copy     8.274%       7.822%        7.822%       
Global Swap     8.483%       7.705%        7.019%       
Rotate          8.314%       7.715%        6.128%       
ReplaceNop      8.452%       8.08%         7.73%        
Delete          8.366%       8.015%        6.909%       
Instruction     8.254%       4.969%        0.708%       
Add Nops        8.373%       8.373%        6.873%       
OpcodeWidth     8.512%       7.864%        7.687%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.199%       1.539%        0.001%       
                                                        
Total           100%         79.076%       64.113%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  259.835s
Iterations/s:                  769.718

Starting cost:                 8
Lowest cost:                   7
Lowest correct cost:           7

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.366%       4.428%        3.48%        
Operand         8.259%       4.8855%       2.3315%      
Opcode          8.348%       8.124%        7.9875%      
Global Copy     8.2865%      7.983%        7.983%       
Global Swap     8.4625%      7.9365%       7.457%       
Rotate          8.2975%      7.897%        6.593%       
ReplaceNop      8.4055%      8.167%        7.939%       
Delete          8.3155%      8.0875%       7.154%       
Instruction     8.1795%      4.837%        0.677%       
Add Nops        8.389%       8.389%        7.143%       
OpcodeWidth     8.3235%      7.886%        7.7555%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3675%      1.6545%       0.0025%      
                                                        
Total           100%         80.275%       66.503%      

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  481.897s
Iterations/s:                  622.54

Starting cost:                 8
Lowest cost:                   7
Lowest correct cost:           7

Move Type       Proposed     Succeeded     Accepted      
                                                         
Local Swap      8.37233%     4.35933%      3.45667%      
Operand         8.26333%     5.02867%      2.49167%      
Opcode          8.35833%     8.18533%      8.07833%      
Global Copy     8.34533%     8.10433%      8.10433%      
Global Swap     8.41667%     8.00667%      7.61267%      
Rotate          8.29333%     7.974%        6.851%        
ReplaceNop      8.41167%     8.22633%      8.04467%      
Delete          8.324%       8.14567%      7.257%        
Instruction     8.21067%     4.79467%      0.654333%     
Add Nops        8.34433%     8.34433%      7.225%        
OpcodeWidth     8.31067%     7.95333%      7.846%        
2xWeighted      0%           0%            0%            
Memory+Swap     8.34933%     1.588%        0.003%        
                                                         
Total           100%         80.7107%      67.6247%      

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  717.711s
Iterations/s:                  557.328

Starting cost:                 8
Lowest cost:                   7
Lowest correct cost:           7

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.3405%      4.26225%      3.35975%     
Operand         8.32325%     5.1345%       2.61525%     
Opcode          8.30575%     8.15675%      8.06325%     
Global Copy     8.3665%      8.15975%      8.15975%     
Global Swap     8.38825%     8.043%        7.703%       
Rotate          8.32475%     8.0525%       7.00825%     
ReplaceNop      8.41275%     8.25225%      8.10025%     
Delete          8.34475%     8.18975%      7.3405%      
Instruction     8.2455%      4.81%         0.67925%     
Add Nops        8.3005%      8.3005%       7.2445%      
OpcodeWidth     8.3045%      7.98875%      7.89375%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.343%       1.548%        0.00225%     
                                                        
Total           100%         80.898%       68.1697%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  991.439s
Iterations/s:                  504.317

Starting cost:                 8
Lowest cost:                   7
Lowest correct cost:           7

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.3712%      4.328%        3.4092%      
Operand         8.3242%      5.1716%       2.7122%      
Opcode          8.3308%      8.1972%       8.1138%      
Global Copy     8.3492%      8.1666%       8.1666%      
Global Swap     8.384%       8.0774%       7.769%       
Rotate          8.2958%      8.057%        7.0622%      
ReplaceNop      8.3916%      8.251%        8.1182%      
Delete          8.3444%      8.2076%       7.36%        
Instruction     8.262%       4.8052%       0.6752%      
Add Nops        8.3108%      8.3108%       7.2796%      
OpcodeWidth     8.3256%      8.0388%       7.952%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.3104%      1.5192%       0.0018%      
                                                        
Total           100%         81.1304%      68.6198%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     dd db 10 b5 fa ce a3 de
%rcx     3e d7 99 80 57 84 13 54
%rdx     d7 07 e6 e4 8b 85 01 cb
%rbx     92 54 cc 77 54 5b a3 65
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 03 4c 05 c5
%rdi     00 00 00 00 03 4c 06 3d
%r8      ad 65 38 13 42 e3 80 92
%r9      4d 4d ef 38 23 95 42 09
%r10     a0 66 a5 d4 4c b9 50 1b
%r11     6c ee 8f dd 01 68 5b 97
%r12     f2 a7 8c b1 c3 66 cb a0
%r13     9f 0d a5 aa df e3 27 14
%r14     70 4c b0 64 ab 94 f5 9c
%r15     00 00 00 00 00 19 bb 60

%ymm0    a5 33 26 d6 bd 73 6c bf 7d 8f 70 07 e3 7b 3f 7d 2b 04 0d b9 63 1b 2e 2d 4a 3e 26 2e 68 e5 3f d5
%ymm1    f6 b9 f0 fd 9e c3 a3 57 89 49 0e 0a 73 0c 00 7e 1f 37 24 89 83 0b 05 af a9 48 42 8c 06 4f cf a6
%ymm2    ae a7 bc 6e 74 97 1a 3c ee 77 e4 93 4a 5e 9d 9f 2b c2 5c f9 3a ab 61 ed 08 e4 fc c8 35 46 ae aa
%ymm3    32 7a 6e 76 01 fb 60 d0 a0 dc e9 5f ea 40 c3 b7 a7 9b e2 1b 7f 83 08 ba 7c f1 a8 90 37 0f cd 31
%ymm4    aa 43 c1 a7 97 5d 8e 80 69 53 cf bf 95 2b ab 77 22 a4 27 1d b2 72 40 05 3b 8d fa d1 a8 09 ff 9c
%ymm5    26 e4 6b b5 b8 04 46 c0 a6 ff 16 e9 b7 5a 50 dd e5 9b 9f 52 0b c4 72 06 73 22 2e 7d 51 a1 49 98
%ymm6    aa f7 b5 57 a4 f1 15 c4 4f e7 6b fc 3d c8 cf f9 a5 13 e4 25 2a 0b 41 ea 76 f1 f4 6c 0d 1a 00 eb
%ymm7    28 4d 3a 63 77 af 07 1a c6 ca dc 76 b6 50 ce da ca 83 41 99 fb 09 8e cd 38 50 f2 98 8b c1 d6 50
%ymm8    83 77 15 60 a4 ba 80 81 ce 0f df cd 46 db 36 aa ad 7b ae 71 34 f1 ba fb 0c 77 d1 43 b8 db 8c fd
%ymm9    63 70 16 3a 80 45 28 f9 35 a4 97 da ae 86 5a 57 1d 81 48 10 76 89 8d ce 3d c8 db d0 7f 6a 75 6c
%ymm10   f6 56 20 75 f1 32 3f 1d 77 44 db f1 f8 1a dc 79 fc f2 03 c2 90 06 c8 29 88 24 c2 6e 85 fe 71 24
%ymm11   fd 6f 8d 03 b2 39 af c1 cc 77 20 dd f3 c0 8f 08 3e 23 6e 5e b5 be a4 c1 57 8a ca 17 6d ce 03 bb
%ymm12   9b 90 0c 26 58 75 7a b2 a5 5b 9f 58 89 27 15 6a 05 60 a8 9b 4b ec 04 db a8 c9 2a 9e 51 e1 5f 19
%ymm13   4a 6c c9 fa df 7a fd 27 ae 22 fb 11 28 da 19 49 9e 7f 57 9c be e4 0a 5a fa 3a f5 3e 37 b4 50 9f
%ymm14   58 02 2c 8c c3 4c fe 9b 6a 8c 31 ad 70 53 86 69 82 1b e0 f8 30 11 2e fe cd 55 3a c4 04 ee 17 7d
%ymm15   64 61 ca 27 84 81 d6 d6 f2 7a 21 66 ae ec ed f0 af 4f a8 27 32 84 0f cc e3 39 55 10 24 25 81 ff

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   ee fc 3b fb 70 6f e1 71 
00000006 fffffff0   v v v v v v v v   87 69 14 37 5d 66 03 4c 
00000006 ffffffe8   v v v v v v v v   5a 9c 96 99 34 3e eb c2 
00000006 ffffffe0   v v v v v v v v   1a 57 19 04 43 51 5c f0 

[ 00000000 0365c208 - 00000000 0365c100 ]
[ 5 valid rows shown ]

00000000 0365c1b8   . . . v v v v v   00 00 00 00 00 00 00 7b 
00000000 0365c1b0   v v v v v v v v   85 42 31 0a 5a ed 62 e6 
00000000 0365c1a8   v v v v v v v v   f4 ce bc fd b7 4a 6d 1c 
00000000 0365c1a0   v v v v v v v v   96 75 04 b8 34 43 c9 88 
00000000 0365c198   v v v . . . . .   d1 ad 95 00 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (10)                                                Lowest Known Correct Cost (10)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  movl %edi, %edx           #  2     0x2   2      OPC=movl_r32_r32           movl %edi, %edx           #  2     0x2   2      OPC=movl_r32_r32         
  movl (%r15,%rdx,1), %ecx  #  3     0x4   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  3     0x4   4      OPC=movl_r32_m32         
  xorb %cl, %al             #  4     0x8   2      OPC=xorb_r8_r8_1           xorb %cl, %al             #  4     0x8   2      OPC=xorb_r8_r8_1         
  nop                       #  5     0xa   1      OPC=nop                    nop                       #  5     0xa   1      OPC=nop                  
  nop                       #  6     0xb   1      OPC=nop                    nop                       #  6     0xb   1      OPC=nop                  
  nopl %eax                 #  7     0xc   3      OPC=nopl_r32               nopl %eax                 #  7     0xc   3      OPC=nopl_r32             
  je .L_142ce0              #  8     0xf   2      OPC=je_label               je .L_142ce0              #  8     0xf   2      OPC=je_label             
  nop                       #  9     0x11  1      OPC=nop                    nop                       #  9     0x11  1      OPC=nop                  
  nop                       #  10    0x12  1      OPC=nop                    nop                       #  10    0x12  1      OPC=nop                  
  nop                       #  11    0x13  1      OPC=nop                    nop                       #  11    0x13  1      OPC=nop                  
  nop                       #  12    0x14  1      OPC=nop                    nop                       #  12    0x14  1      OPC=nop                  
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x15  1      OPC=nop                  
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x16  1      OPC=nop                  
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x17  1      OPC=nop                  
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x18  1      OPC=nop                  
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x19  1      OPC=nop                  
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1a  1      OPC=nop                  
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1b  1      OPC=nop                  
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1c  1      OPC=nop                  
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1d  1      OPC=nop                  
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1e  1      OPC=nop                  
  nop                       #  23    0x1f  1      OPC=nop                    nop                       #  23    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32         
  testl %eax, %edi          #  26    0x27  2      OPC=testl_r32_r32          testl %eax, %edi          #  26    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x29  2      OPC=jne_label            
  subq %rdi, %rdx           #  28    0x2b  3      OPC=subq_r64_r64_1         subq %rdi, %rdx           #  28    0x2b  3      OPC=subq_r64_r64_1       
  nop                       #  29    0x2e  1      OPC=nop                    nop                       #  29    0x2e  1      OPC=nop                  
  nop                       #  30    0x2f  1      OPC=nop                    nop                       #  30    0x2f  1      OPC=nop                  
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x30  1      OPC=nop                  
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x31  1      OPC=nop                  
  nop                       #  33    0x32  1      OPC=nop                    nop                       #  33    0x32  1      OPC=nop                  
  nop                       #  34    0x33  1      OPC=nop                    nop                       #  34    0x33  1      OPC=nop                  
  nop                       #  35    0x34  1      OPC=nop                    nop                       #  35    0x34  1      OPC=nop                  
  nop                       #  36    0x35  1      OPC=nop                    nop                       #  36    0x35  1      OPC=nop                  
  nop                       #  37    0x36  1      OPC=nop                    nop                       #  37    0x36  1      OPC=nop                  
  orq %rdx, %rax            #  38    0x37  3      OPC=orq_r64_r64            orq %rdx, %rax            #  38    0x37  3      OPC=orq_r64_r64          
  nop                       #  39    0x3a  1      OPC=nop                    nop                       #  39    0x3a  1      OPC=nop                  
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3b  1      OPC=nop                  
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3c  1      OPC=nop                  
  nop                       #  42    0x3d  1      OPC=nop                    nop                       #  42    0x3d  1      OPC=nop                  
  nop                       #  43    0x3e  1      OPC=nop                    nop                       #  43    0x3e  1      OPC=nop                  
  nop                       #  44    0x3f  1      OPC=nop                    nop                       #  44    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  shrl $0x2, %eax           #  45    0x40  3      OPC=shrl_r32_imm8          shrl $0x2, %eax           #  45    0x40  3      OPC=shrl_r32_imm8        
  subl $0x0, %eax           #  46    0x43  5      OPC=subl_eax_imm32         subl $0x0, %eax           #  46    0x43  5      OPC=subl_eax_imm32       
  nop                       #  47    0x48  1      OPC=nop                    nop                       #  47    0x48  1      OPC=nop                  
  nop                       #  48    0x49  1      OPC=nop                    nop                       #  48    0x49  1      OPC=nop                  
  popq %r11                 #  49    0x4a  2      OPC=popq_r64_1             popq %r11                 #  49    0x4a  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  50    0x4c  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  50    0x4c  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  51    0x50  3      OPC=addq_r64_r64           addq %r15, %r11           #  51    0x50  3      OPC=addq_r64_r64         
  jmpq %r11                 #  52    0x53  3      OPC=jmpq_r64               jmpq %r11                 #  52    0x53  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (9)                                                 Lowest Known Correct Cost (9)                                              
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  movl %edi, %edx           #  2     0x2   2      OPC=movl_r32_r32_1         movl %edi, %edx           #  2     0x2   2      OPC=movl_r32_r32_1       
  movl (%r15,%rdx,1), %ecx  #  3     0x4   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  3     0x4   4      OPC=movl_r32_m32         
  orb %cl, %cl              #  4     0x8   2      OPC=orb_r8_r8              orb %cl, %cl              #  4     0x8   2      OPC=orb_r8_r8            
  nop                       #  5     0xa   1      OPC=nop                    nop                       #  5     0xa   1      OPC=nop                  
  nop                       #  6     0xb   1      OPC=nop                    nop                       #  6     0xb   1      OPC=nop                  
  nop                       #  7     0xc   1      OPC=nop                    nop                       #  7     0xc   1      OPC=nop                  
  nop                       #  8     0xd   1      OPC=nop                    nop                       #  8     0xd   1      OPC=nop                  
  nop                       #  9     0xe   1      OPC=nop                    nop                       #  9     0xe   1      OPC=nop                  
  je .L_142ce0              #  10    0xf   2      OPC=je_label               je .L_142ce0              #  10    0xf   2      OPC=je_label             
  nop                       #  11    0x11  1      OPC=nop                    nop                       #  11    0x11  1      OPC=nop                  
  nop                       #  12    0x12  1      OPC=nop                    nop                       #  12    0x12  1      OPC=nop                  
  nop                       #  13    0x13  1      OPC=nop                    nop                       #  13    0x13  1      OPC=nop                  
  nop                       #  14    0x14  1      OPC=nop                    nop                       #  14    0x14  1      OPC=nop                  
  nop                       #  15    0x15  1      OPC=nop                    nop                       #  15    0x15  1      OPC=nop                  
  nop                       #  16    0x16  1      OPC=nop                    nop                       #  16    0x16  1      OPC=nop                  
  nop                       #  17    0x17  1      OPC=nop                    nop                       #  17    0x17  1      OPC=nop                  
  nop                       #  18    0x18  1      OPC=nop                    nop                       #  18    0x18  1      OPC=nop                  
  nop                       #  19    0x19  1      OPC=nop                    nop                       #  19    0x19  1      OPC=nop                  
  nop                       #  20    0x1a  1      OPC=nop                    nop                       #  20    0x1a  1      OPC=nop                  
  nop                       #  21    0x1b  1      OPC=nop                    nop                       #  21    0x1b  1      OPC=nop                  
  nop                       #  22    0x1c  1      OPC=nop                    nop                       #  22    0x1c  1      OPC=nop                  
  nop                       #  23    0x1d  1      OPC=nop                    nop                       #  23    0x1d  1      OPC=nop                  
  nop                       #  24    0x1e  1      OPC=nop                    nop                       #  24    0x1e  1      OPC=nop                  
  nop                       #  25    0x1f  1      OPC=nop                    nop                       #  25    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  26    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  26    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  27    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  27    0x23  4      OPC=movl_r32_m32         
  subb %al, %ah             #  28    0x27  2      OPC=subb_rh_r8             subb %al, %ah             #  28    0x27  2      OPC=subb_rh_r8           
  jne .L_142cc0             #  29    0x29  2      OPC=jne_label              jne .L_142cc0             #  29    0x29  2      OPC=jne_label            
  subq %rdi, %rdx           #  30    0x2b  3      OPC=subq_r64_r64_1         subq %rdi, %rdx           #  30    0x2b  3      OPC=subq_r64_r64_1       
  nop                       #  31    0x2e  1      OPC=nop                    nop                       #  31    0x2e  1      OPC=nop                  
  nop                       #  32    0x2f  1      OPC=nop                    nop                       #  32    0x2f  1      OPC=nop                  
  nop                       #  33    0x30  1      OPC=nop                    nop                       #  33    0x30  1      OPC=nop                  
  nop                       #  34    0x31  1      OPC=nop                    nop                       #  34    0x31  1      OPC=nop                  
  nop                       #  35    0x32  1      OPC=nop                    nop                       #  35    0x32  1      OPC=nop                  
  nop                       #  36    0x33  1      OPC=nop                    nop                       #  36    0x33  1      OPC=nop                  
  nop                       #  37    0x34  1      OPC=nop                    nop                       #  37    0x34  1      OPC=nop                  
  nop                       #  38    0x35  1      OPC=nop                    nop                       #  38    0x35  1      OPC=nop                  
  nop                       #  39    0x36  1      OPC=nop                    nop                       #  39    0x36  1      OPC=nop                  
  nop                       #  40    0x37  1      OPC=nop                    nop                       #  40    0x37  1      OPC=nop                  
  nop                       #  41    0x38  1      OPC=nop                    nop                       #  41    0x38  1      OPC=nop                  
  orq %rdx, %rax            #  42    0x39  3      OPC=orq_r64_r64            orq %rdx, %rax            #  42    0x39  3      OPC=orq_r64_r64          
  nop                       #  43    0x3c  1      OPC=nop                    nop                       #  43    0x3c  1      OPC=nop                  
  nop                       #  44    0x3d  1      OPC=nop                    nop                       #  44    0x3d  1      OPC=nop                  
  nop                       #  45    0x3e  1      OPC=nop                    nop                       #  45    0x3e  1      OPC=nop                  
  nop                       #  46    0x3f  1      OPC=nop                    nop                       #  46    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  shrw $0x2, %ax            #  47    0x40  4      OPC=shrw_r16_imm8          shrw $0x2, %ax            #  47    0x40  4      OPC=shrw_r16_imm8        
  popq %r11                 #  48    0x44  2      OPC=popq_r64_1             popq %r11                 #  48    0x44  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  49    0x46  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  49    0x46  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  50    0x4a  3      OPC=addq_r64_r64           addq %r15, %r11           #  50    0x4a  3      OPC=addq_r64_r64         
  jmpq %r11                 #  51    0x4d  3      OPC=jmpq_r64               jmpq %r11                 #  51    0x4d  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  79.9628s
Iterations/s:                  1250.58

Starting cost:                 11
Lowest cost:                   9
Lowest correct cost:           9

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.185%       4.238%        3.398%       
Operand         8.562%       4.356%        1.841%       
Opcode          8.317%       7.897%        7.675%       
Global Copy     8.459%       7.94%         7.94%        
Global Swap     8.29%        7.453%        6.76%        
Rotate          8.328%       7.639%        5.882%       
ReplaceNop      8.144%       7.77%         7.457%       
Delete          8.219%       7.835%        6.771%       
Instruction     8.428%       4.93%         0.553%       
Add Nops        8.334%       8.334%        6.595%       
OpcodeWidth     8.376%       7.683%        7.47%        
2xWeighted      0%           0%            0%           
Memory+Swap     8.358%       1.333%        0.002%       
                                                        
Total           100%         77.408%       62.344%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  220.013s
Iterations/s:                  909.037

Starting cost:                 11
Lowest cost:                   9
Lowest correct cost:           9

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.251%       4.459%        3.593%       
Operand         8.442%       4.684%        2.1905%      
Opcode          8.2865%      8.0035%       7.84%        
Global Copy     8.389%       8.023%        8.023%       
Global Swap     8.2775%      7.6965%       7.176%       
Rotate          8.313%       7.837%        6.426%       
ReplaceNop      8.2845%      8.0155%       7.773%       
Delete          8.2435%      7.9805%       7.0685%      
Instruction     8.4395%      4.8475%       0.561%       
Add Nops        8.3315%      8.3315%       6.9625%      
OpcodeWidth     8.3875%      7.882%        7.725%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.3545%      1.541%        0.001%       
                                                        
Total           100%         79.301%       65.3395%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  424.868s
Iterations/s:                  706.102

Starting cost:                 11
Lowest cost:                   9
Lowest correct cost:           9

Move Type       Proposed     Succeeded     Accepted         
                                                            
Local Swap      8.31667%     4.53%         3.721%           
Operand         8.34733%     4.91767%      2.46067%         
Opcode          8.26233%     8.045%        7.91133%         
Global Copy     8.40033%     8.111%        8.111%           
Global Swap     8.28%        7.828%        7.40967%         
Rotate          8.348%       7.97167%      6.70567%         
ReplaceNop      8.30867%     8.09833%      7.90267%         
Delete          8.315%       8.10567%      7.21133%         
Instruction     8.403%       4.732%        0.553667%        
Add Nops        8.36433%     8.36433%      7.09667%         
OpcodeWidth     8.34233%     7.938%        7.81167%         
2xWeighted      0%           0%            0%               
Memory+Swap     8.312%       1.61967%      0.000666667%     
                                                            
Total           100%         80.2613%      66.896%          

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  660.256s
Iterations/s:                  605.826

Starting cost:                 11
Lowest cost:                   9
Lowest correct cost:           9

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.32325%     4.54425%      3.76825%     
Operand         8.30375%     5.08%         2.635%       
Opcode          8.3055%      8.121%        8.00625%     
Global Copy     8.41375%     8.171%        8.171%       
Global Swap     8.2835%      7.899%        7.52525%     
Rotate          8.3105%      7.9935%       6.77825%     
ReplaceNop      8.3025%      8.1245%       7.9595%      
Delete          8.30825%     8.12775%      7.21825%     
Instruction     8.388%       4.722%        0.58075%     
Add Nops        8.37275%     8.37275%      7.10975%     
OpcodeWidth     8.36425%     8.01675%      7.90275%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.324%       1.8155%       0.00075%     
                                                        
Total           100%         80.988%       67.6557%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  947.404s
Iterations/s:                  527.758

Starting cost:                 11
Lowest cost:                   9
Lowest correct cost:           9

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.308%       4.5342%       3.7796%      
Operand         8.3286%      5.2268%       2.7898%      
Opcode          8.3124%      8.1536%       8.0532%      
Global Copy     8.436%       8.223%        8.223%       
Global Swap     8.2902%      7.9464%       7.6084%      
Rotate          8.33%        8.0528%       6.8474%      
ReplaceNop      8.278%       8.1204%       7.9774%      
Delete          8.3436%      8.1852%       7.2212%      
Instruction     8.3764%      4.7708%       0.6012%      
Add Nops        8.3452%      8.3452%       7.0746%      
OpcodeWidth     8.3248%      8.012%        7.905%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.3268%      1.963%        0.0006%      
                                                        
Total           100%         81.5334%      68.0814%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     e9 b1 1e 46 08 f2 f8 c8
%rcx     69 73 9e 69 ae 6c c5 5c
%rdx     82 11 01 09 49 f0 ed 25
%rbx     eb b9 4f 6f f5 6c 60 5b
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 02 db 59 b3
%rdi     00 00 00 00 02 db 5e c2
%r8      06 d6 4e ed fb c1 39 6e
%r9      94 74 44 79 91 22 ba 9c
%r10     99 e0 04 35 4f 51 f7 da
%r11     56 1a 2a fe 9a 04 8b d2
%r12     b3 52 c1 69 e8 11 56 6c
%r13     b6 45 57 e6 c4 fc 19 b8
%r14     72 64 7a d8 81 dd f5 a9
%r15     00 00 00 00 01 23 c7 d0

%ymm0    70 9d a1 0b 4f f0 14 45 86 02 59 30 df e8 b3 93 16 12 3a fb 29 d7 a9 2f 2b 78 20 7a fc 4b aa 25
%ymm1    b1 a2 c4 62 41 93 38 14 23 0f c1 65 62 6e b4 fc 65 c1 77 5c 2a 5b d4 ef 6a ae 84 cd 51 cd a6 20
%ymm2    48 74 39 a5 72 0f 98 44 c3 7f 96 8e 8a 0c 1b 6e a4 67 52 18 ca 9e 3e 1f 0a 4e 8d 07 1a b3 32 12
%ymm3    c8 1f 1d 07 1d c3 2f 75 68 0e 3f 3d 42 35 5a 6a c7 cd 5d 5f c9 d0 f0 41 37 22 08 fa 92 ae e5 e1
%ymm4    10 8d 46 aa 6c 53 0f e8 e0 b1 c7 f7 50 d1 74 40 1d a4 bf 51 cb f6 0d 17 55 32 ef 34 13 de 18 88
%ymm5    eb f0 8b 21 87 26 0a df 20 2f 72 9b 4c e1 f7 a8 ef 99 5e f6 b3 2a be 36 4a da 3e 3f 16 0f 52 85
%ymm6    16 eb b3 70 ab a1 4d 75 46 a0 81 ad 32 d3 57 90 b5 e1 c3 24 c1 98 0f cf 5c 1e e3 5d 28 e0 cf e3
%ymm7    87 41 14 9a 91 5e a7 73 4f fd 86 72 13 b9 c7 b9 e6 df 06 af eb 8b b9 6e cc b9 51 20 2f f1 ad 19
%ymm8    1a 31 a8 ba 66 c8 e9 c2 aa 99 ca 4c 30 0e f9 41 5b 8c 22 ef e9 53 78 fe c6 93 62 3a 22 42 39 0e
%ymm9    f3 34 35 c9 81 e8 25 1e db 62 7f 68 dc 55 e6 3a 95 8f f5 7b 92 0c 62 e4 bd ac 7a 61 b3 35 da 27
%ymm10   3e 32 e6 0b 0a bf 3e d8 81 c8 58 ad 6e 5c 8c 95 e4 a3 fb 54 8c 30 44 54 1a b1 0c c3 1e 49 5e bf
%ymm11   77 62 47 d7 e2 a0 3f dc ce 58 cb 2a 6a 6f ce e6 1d 80 3d c2 6a 2f 1e 22 af df 55 f9 91 8b e9 83
%ymm12   4c 39 b9 66 a0 7c 35 99 ba 3e 25 dd f2 22 92 09 98 e9 30 a9 f1 33 b2 2a 7a 12 1d 8d 50 97 8c 21
%ymm13   15 b5 59 8c f7 61 76 95 a3 a5 bd 6b 37 dd 96 ae ad 2c 13 c1 2f 22 45 f7 60 2b fd 2e aa 0a 26 f3
%ymm14   83 e9 b6 3f 8f 88 68 bd 94 34 c0 5e d7 72 4e bc f5 f3 d4 25 a0 7d a6 b4 7d f2 2c 31 7a 9d b3 dc
%ymm15   9b 4b 48 ba b4 80 9d 87 ef 9a 82 cd 6c ae a2 9c f7 a3 72 24 33 e2 0d e2 7b 89 12 1f c7 cb 08 e9

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   7b 39 2e 1c e5 ad 37 c8 
00000006 fffffff0   v v v v v v v v   6e 88 ab 89 5d 80 6c 05 
00000006 ffffffe8   v v v v v v v v   00 31 89 87 2e c0 b9 dc 
00000006 ffffffe0   v v v v v v v v   86 5f 12 b0 b8 72 d4 a1 

[ 00000000 03ff2968 - 00000000 03ff2160 ]
[ 58 valid rows shown ]

00000000 03ff2858   . . . . . . v v   00 00 00 00 00 00 00 00 
00000000 03ff2850   v v v v v v v v   00 00 54 a4 a4 a1 14 7e 
00000000 03ff2848   v v v v v v v v   80 50 2c 96 0e d9 b2 5b 
00000000 03ff2840   v v v v v v v v   f3 77 9d 47 5b 9e e3 7c 
00000000 03ff2838   v v v v v v v v   81 1c 7c 74 5d cc 39 15 
00000000 03ff2830   v v v v v v v v   ba b3 90 26 21 c4 52 ea 
00000000 03ff2828   v v v v v v v v   41 52 e3 b3 e6 3b be ab 
00000000 03ff2820   v v v v v v v v   1c ff 64 df 1c c6 00 0d 
00000000 03ff2818   v v v v v v v v   bf af 3b 48 12 86 85 94 
00000000 03ff2810   v v v v v v v v   92 cb d4 37 83 ff 06 8e 
00000000 03ff2808   v v v v v v v v   6c a8 f5 3b 1f bf 47 3c 
00000000 03ff2800   v v v v v v v v   e2 9e df 0f 07 50 d2 76 
00000000 03ff27f8   v v v v v v v v   9d b5 c3 7d f3 b9 c0 5b 
00000000 03ff27f0   v v v v v v v v   48 d4 30 f5 93 5e 98 31 
00000000 03ff27e8   v v v v v v v v   89 36 f4 e2 dc a9 5d d3 
00000000 03ff27e0   v v v v v v v v   96 8f 3d 91 b3 1d b3 20 
00000000 03ff27d8   v v v v v v v v   c1 0a bd 98 71 ec 2b 53 
00000000 03ff27d0   v v v v v v v v   41 d2 5c 62 d4 62 3d a7 
00000000 03ff27c8   v v v v v v v v   5a 4b 85 09 12 ce 95 05 
00000000 03ff27c0   v v v v v v v v   dc 20 de 93 5b a9 63 29 
00000000 03ff27b8   v v v v v v v v   99 d1 6d 1d ab 58 f7 de 
00000000 03ff27b0   v v v v v v v v   fe fa 25 2d 08 f2 21 50 
00000000 03ff27a8   v v v v v v v v   38 b7 74 0d f2 75 27 49 
00000000 03ff27a0   v v v v v v v v   c5 35 30 32 10 92 bc 7b 
00000000 03ff2798   v v v v v v v v   26 14 26 cc 5a fc b9 d0 
00000000 03ff2790   v v v v v v v v   f2 33 0c b7 b9 6a dc 2b 
00000000 03ff2788   v v v v v v v v   c5 ff e5 a9 b0 f2 19 93 
00000000 03ff2780   v v v v v v v v   25 9e 75 94 6c a8 55 59 
00000000 03ff2778   v v v v v v v v   ba 2a 13 8a 0a 85 c4 3b 
00000000 03ff2770   v v v v v v v v   7a a2 db 8e a4 dd 46 1c 
00000000 03ff2768   v v v v v v v v   4f f3 90 1d cd 7b 1d 90 
00000000 03ff2760   v v v v v v v v   32 cd 3f 12 ee 2b 46 30 
00000000 03ff2758   v v v v v v v v   20 8e c5 cf 0b 22 60 ec 
00000000 03ff2750   v v v v v v v v   fd fd 48 88 8e 53 8c 32 
00000000 03ff2748   v v v v v v v v   25 15 ff 3d 49 50 51 1f 
00000000 03ff2740   v v v v v v v v   df 14 cc be 0b b8 6a 51 
00000000 03ff2738   v v v v v v v v   82 a3 6f 1f 25 62 a4 75 
00000000 03ff2730   v v v v v v v v   6f f5 fb 5c 2d 77 32 e8 
00000000 03ff2728   v v v v v v v v   cc af ec 29 70 3c 53 21 
00000000 03ff2720   v v v v v v v v   09 14 53 ba 35 c7 e2 63 
00000000 03ff2718   v v v v v v v v   7e 0c 7b af f3 af 7a 12 
00000000 03ff2710   v v v v v v v v   c7 84 2a 45 ab 83 fc a2 
00000000 03ff2708   v v v v v v v v   3f af d6 4f 33 3e ce 4f 
00000000 03ff2700   v v v v v v v v   df 8c d8 d2 49 d5 e7 ce 
00000000 03ff26f8   v v v v v v v v   19 cc 35 e1 e7 f6 e8 82 
00000000 03ff26f0   v v v v v v v v   d8 a7 48 09 44 4d cc f0 
00000000 03ff26e8   v v v v v v v v   7c 98 81 e3 5f 42 77 0c 
00000000 03ff26e0   v v v v v v v v   42 02 eb 7b bc 1b 99 38 
00000000 03ff26d8   v v v v v v v v   e5 3f f8 65 1d 41 3a cf 
00000000 03ff26d0   v v v v v v v v   63 fb 3d 54 d0 34 6f 99 
00000000 03ff26c8   v v v v v v v v   38 3f 6c 53 ff 75 21 c7 
00000000 03ff26c0   v v v v v v v v   46 d0 e2 84 36 59 3f 80 
00000000 03ff26b8   v v v v v v v v   22 b7 2b 4e de 3e 92 0f 
00000000 03ff26b0   v v v v v v v v   2b 09 e5 37 fb 30 2d e5 
00000000 03ff26a8   v v v v v v v v   3f f7 31 38 2f 51 e5 c1 
00000000 03ff26a0   v v v v v v v v   9a 88 45 b6 37 88 55 d4 
00000000 03ff2698   v v v v v v v v   d8 ec bb cf 13 89 2a f3 
00000000 03ff2690   v v v v v v . .   0d b5 0a 16 f0 36 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (36)                                               Lowest Known Correct Cost (46)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x3   1      OPC=nop                   movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  6     0xa   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xc   2      OPC=je_label              je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xe   1      OPC=nop                   nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0xf   1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x10  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x11  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x12  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x13  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x14  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x15  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x16  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x17  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x18  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x19  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1a  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  movq %rdi, %rdx           #  21    0x1b  3      OPC=movq_r64_r64          nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                 .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x20  0      OPC=<label>               addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8         movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32          movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  testl %eax, %edx          #  26    0x27  2      OPC=testl_r32_r32         testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label             jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32          subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2f  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  sarl $0x2, %eax           #  31    0x30  3      OPC=sarl_r32_imm8         nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x33  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3b  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3d  1      OPC=nop                   nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  43    0x3e  1      OPC=nop                 .L_142ce0:                  #        0x40  0      OPC=<label>             
.L_142ce0:                  #        0x3f  0      OPC=<label>               popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  popq %r11                 #  44    0x3f  2      OPC=popq_r64_1            andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  andl $0xe0, %r11d         #  45    0x41  4      OPC=andl_r32_imm8         addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  addq %r15, %r11           #  46    0x45  3      OPC=addq_r64_r64          jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  jmpq %r11                 #  47    0x48  3      OPC=jmpq_r64                                                                                      
                                                                          .size wcslen, .-wcslen                                                    
.size wcslen, .-wcslen                                                                                                                              
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (35)                                               Lowest Known Correct Cost (35)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   nop                       #  1     0     1      OPC=nop                 
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32        
  nop                       #  3     0x3   1      OPC=nop                   nop                       #  3     0x3   1      OPC=nop                 
  movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32          movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32        
  testl %ecx, %ecx          #  6     0xa   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  6     0xa   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xc   2      OPC=je_label              je .L_142ce0              #  7     0xc   2      OPC=je_label            
  nop                       #  8     0xe   1      OPC=nop                   nop                       #  8     0xe   1      OPC=nop                 
  nop                       #  9     0xf   1      OPC=nop                   nop                       #  9     0xf   1      OPC=nop                 
  nop                       #  10    0x10  1      OPC=nop                   nop                       #  10    0x10  1      OPC=nop                 
  nop                       #  11    0x11  1      OPC=nop                   nop                       #  11    0x11  1      OPC=nop                 
  nop                       #  12    0x12  1      OPC=nop                   nop                       #  12    0x12  1      OPC=nop                 
  nop                       #  13    0x13  1      OPC=nop                   nop                       #  13    0x13  1      OPC=nop                 
  nop                       #  14    0x14  1      OPC=nop                   nop                       #  14    0x14  1      OPC=nop                 
  nop                       #  15    0x15  1      OPC=nop                   nop                       #  15    0x15  1      OPC=nop                 
  nopl %eax                 #  16    0x16  3      OPC=nopl_r32              nopl %eax                 #  16    0x16  3      OPC=nopl_r32            
  nop                       #  17    0x19  1      OPC=nop                   nop                       #  17    0x19  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                   nop                       #  18    0x1a  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                   nop                       #  19    0x1b  1      OPC=nop                 
  movq %rdi, %rdx           #  20    0x1c  3      OPC=movq_r64_r64          movq %rdi, %rdx           #  20    0x1c  3      OPC=movq_r64_r64        
  nop                       #  21    0x1f  1      OPC=nop                   nop                       #  21    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32          movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32        
  testl %eax, %edx          #  24    0x27  2      OPC=testl_r32_r32         testl %eax, %edx          #  24    0x27  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  25    0x29  2      OPC=jne_label             jne .L_142cc0             #  25    0x29  2      OPC=jne_label           
  movl %edx, %eax           #  26    0x2b  2      OPC=movl_r32_r32          movl %edx, %eax           #  26    0x2b  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  27    0x2d  2      OPC=subl_r32_r32          subl %edi, %eax           #  27    0x2d  2      OPC=subl_r32_r32        
  nop                       #  28    0x2f  1      OPC=nop                   nop                       #  28    0x2f  1      OPC=nop                 
  sarl $0x2, %eax           #  29    0x30  3      OPC=sarl_r32_imm8         sarl $0x2, %eax           #  29    0x30  3      OPC=sarl_r32_imm8       
  nop                       #  30    0x33  1      OPC=nop                   nop                       #  30    0x33  1      OPC=nop                 
  nop                       #  31    0x34  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x35  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x36  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x37  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x38  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x39  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x3a  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3b  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3c  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3d  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3e  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3f  1      OPC=nop                   nop                       #  42    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>             .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  43    0x40  2      OPC=popq_r64_1            popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64          addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64              jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  115.313s
Iterations/s:                  867.206

Starting cost:                 46
Lowest cost:                   35
Lowest correct cost:           35

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.342%       4.139%        3.383%       
Operand         8.272%       4.448%        1.936%       
Opcode          8.203%       7.773%        7.48%        
Global Copy     8.461%       7.869%        7.869%       
Global Swap     8.212%       7.285%        6.471%       
Rotate          8.378%       7.553%        5.674%       
ReplaceNop      8.455%       7.996%        7.585%       
Delete          8.304%       7.823%        6.602%       
Instruction     8.235%       4.816%        0.701%       
Add Nops        8.356%       8.356%        6.455%       
OpcodeWidth     8.337%       7.556%        7.355%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.445%       1.552%        0.001%       
                                                        
Total           100%         77.166%       61.512%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  252.583s
Iterations/s:                  791.819

Starting cost:                 46
Lowest cost:                   35
Lowest correct cost:           35

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.2855%      4.15%         3.322%       
Operand         8.283%       4.766%        2.2145%      
Opcode          8.2735%      7.9805%       7.791%       
Global Copy     8.4315%      8.023%        8.023%       
Global Swap     8.381%       7.7315%       7.1295%      
Rotate          8.281%       7.727%        6.2335%      
ReplaceNop      8.344%       8.029%        7.7535%      
Delete          8.281%       7.9575%       6.9435%      
Instruction     8.328%       4.821%        0.718%       
Add Nops        8.303%       8.303%        6.7945%      
OpcodeWidth     8.393%       7.833%        7.6705%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.4155%      1.562%        0.0015%      
                                                        
Total           100%         78.8835%      64.595%      

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  432.16s
Iterations/s:                  694.188

Starting cost:                 46
Lowest cost:                   35
Lowest correct cost:           35

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.28967%     4.154%        3.324%       
Operand         8.335%       4.83167%      2.35467%     
Opcode          8.256%       8.025%        7.87567%     
Global Copy     8.42%        8.10133%      8.10133%     
Global Swap     8.31667%     7.815%        7.329%       
Rotate          8.31433%     7.881%        6.57333%     
ReplaceNop      8.34033%     8.094%        7.878%       
Delete          8.29967%     8.04967%      7.132%       
Instruction     8.297%       4.78233%      0.704%       
Add Nops        8.34767%     8.34767%      7.012%       
OpcodeWidth     8.34833%     7.89767%      7.76433%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.43533%     1.48467%      0.001%       
                                                        
Total           100%         79.464%       66.0493%     

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  750.687s
Iterations/s:                  532.845

Starting cost:                 46
Lowest cost:                   35
Lowest correct cost:           35

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.30475%     4.13225%      3.2795%      
Operand         8.29325%     4.95125%      2.529%       
Opcode          8.295%       8.10025%      7.97725%     
Global Copy     8.384%       8.11925%      8.11925%     
Global Swap     8.325%       7.90875%      7.4885%      
Rotate          8.34025%     7.97875%      6.74625%     
ReplaceNop      8.31275%     8.104%        7.921%       
Delete          8.34525%     8.13575%      7.191%       
Instruction     8.305%       4.75375%      0.69925%     
Add Nops        8.333%       8.333%        7.0385%      
OpcodeWidth     8.38775%     8.0015%       7.88225%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.374%       1.45775%      0.00075%     
                                                        
Total           100%         79.9762%      66.8725%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  1165.97s
Iterations/s:                  428.827

Starting cost:                 46
Lowest cost:                   35
Lowest correct cost:           35

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.3166%      4.2058%       3.3546%      
Operand         8.3122%      5.1068%       2.7158%      
Opcode          8.3072%      8.134%        8.027%       
Global Copy     8.3772%      8.142%        8.142%       
Global Swap     8.3296%      7.95%         7.5604%      
Rotate          8.3182%      7.9996%       6.7916%      
ReplaceNop      8.311%       8.125%        7.9654%      
Delete          8.3688%      8.1812%       7.2208%      
Instruction     8.3164%      4.8108%       0.7204%      
Add Nops        8.3188%      8.3188%       7.0316%      
OpcodeWidth     8.3642%      8.0154%       7.9022%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3598%      1.528%        0.0016%      
                                                        
Total           100%         80.5174%      67.4334%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     31 59 1a b3 85 1a c1 be
%rcx     11 73 b3 0e 0a dd 9e e6
%rdx     c1 5a 16 14 85 1a 50 0b
%rbx     e1 70 a1 64 09 72 ae da
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 01 45 37 bd
%rdi     00 00 00 00 01 45 3d 53
%r8      b6 97 1d 62 7b 15 fe 23
%r9      7a 27 16 f4 ab 45 ba d9
%r10     34 29 ee 7c d5 f4 20 a8
%r11     7f ce 09 f5 9e 3c 57 32
%r12     7e 41 b1 05 9b 09 fb c8
%r13     d0 c6 0e b1 38 fb bb b0
%r14     fe 66 f9 30 0f 75 d1 1f
%r15     00 00 00 00 01 29 92 c0

%ymm0    51 a4 b6 7a e6 45 93 12 90 59 9a 63 08 3f f3 6b 22 fa 9c b4 31 e3 4a f0 9e da 8b d5 38 60 c5 dd
%ymm1    df 45 91 27 0d c1 43 67 09 b7 fc 95 f7 da df 83 8e c0 ce 79 a1 5e aa 18 89 db 8e e2 0c 52 a2 a5
%ymm2    6d 01 1c 23 8f 1f 46 3c 9c 82 00 53 d8 df 3a 11 0b b8 e5 f1 0d 07 b8 64 af ad 18 08 79 87 11 a7
%ymm3    fb 8f b1 d3 b5 7f eb 73 e5 07 33 69 2b b3 ec 07 13 f3 36 2e b0 6d 98 b7 b4 9a 58 83 ba 3e bf bd
%ymm4    c3 6f 32 63 94 a9 bb 9e 41 ec 7d ca 5b 03 9d 3f 70 59 f3 37 b7 0c 21 a7 78 c6 7d 77 15 90 69 32
%ymm5    80 34 c0 87 e4 6e 53 b9 ba 97 d2 62 3c 3a 4c 97 4e c2 60 45 ca 76 5f 84 58 9d 0e 2a 15 74 89 24
%ymm6    ce 31 a9 71 19 4e 4b 22 c2 ca 26 f8 8e 1b 4e d2 ae 85 59 35 b8 e5 0a 19 0c 28 0a 3d 1a ea d7 1c
%ymm7    21 43 15 1f a7 73 fa 67 1a 7d f3 21 68 70 8e 59 b8 e9 d0 00 5b a7 a9 ef 2d e4 f2 42 4a 3f 20 d2
%ymm8    52 6a 1c b7 79 9c ea 2b 37 48 cf 49 74 51 b3 eb b3 00 2e 36 0f 1d 22 22 41 61 47 91 7f 2d 7b e5
%ymm9    76 0f 21 7c 37 f8 3e 16 05 18 04 8e ea ff 9f 57 74 21 1e 98 03 16 9b 17 87 29 aa 9c af 33 ee 80
%ymm10   fa d1 ab 7c 54 b2 41 ce c6 0f fa df d3 85 95 58 dd d7 49 09 5e a4 28 dd 75 02 b6 e6 82 58 c2 df
%ymm11   70 33 a6 d6 df 52 06 e4 a6 9d 9c 95 36 c5 89 fe ce 8a 84 bd 2f 04 6e ff 6e 1d 12 9c c3 ed dc c3
%ymm12   e0 ba ae 53 2c 43 ed 71 a6 c0 d0 55 18 40 0d 77 8b 88 2b 0d 27 6b e3 de 18 ca 26 b3 f8 05 06 9b
%ymm13   9a 81 07 2d 3a 41 12 20 61 9a 71 34 78 18 b9 95 74 52 e1 de cf c5 4a d0 ad 29 26 18 ab 10 58 47
%ymm14   7c 81 2a 84 ea 61 9b 8f 52 eb 6e 30 44 83 c5 bf c7 86 12 c0 7b d1 2e 44 a7 0b c9 90 4e 0d 03 6f
%ymm15   71 38 8c dd fa 92 23 7f 33 4b cd 68 87 9a ae 4b 50 59 f6 2a 9c 8e 45 43 c7 93 71 fc 49 f4 89 6d

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   d8 bf e7 e3 4f 1d 13 d7 
00000006 fffffff0   v v v v v v v v   f3 dc fb 09 68 f9 f5 89 
00000006 ffffffe8   v v v v v v v v   4f 80 6f 89 8f 70 ed 9a 
00000006 ffffffe0   v v v v v v v v   df 44 6f 0f ee 74 1c e8 

[ 00000000 026ed228 - 00000000 026eca20 ]
[ 36 valid rows shown ]

00000000 026ed128   . v v v v v v v   00 00 00 00 00 8a 4a d3 
00000000 026ed120   v v v v v v v v   93 79 3d 19 9b a3 33 eb 
00000000 026ed118   v v v v v v v v   67 87 3c bd 04 92 fd 99 
00000000 026ed110   v v v v v v v v   9f f2 b3 26 2c cc a8 73 
00000000 026ed108   v v v v v v v v   5d 3d 6b 6f f7 d1 96 79 
00000000 026ed100   v v v v v v v v   dd 9a e6 b0 3c ac ae a9 
00000000 026ed0f8   v v v v v v v v   83 aa c0 6b f3 0b e6 78 
00000000 026ed0f0   v v v v v v v v   c6 e6 7e b8 6f 6a 08 ee 
00000000 026ed0e8   v v v v v v v v   46 9a d9 7d f4 fc 93 2d 
00000000 026ed0e0   v v v v v v v v   5e 3a 02 92 28 04 e9 18 
00000000 026ed0d8   v v v v v v v v   b6 b5 85 7b 44 ff fa 0e 
00000000 026ed0d0   v v v v v v v v   77 14 b0 81 24 6e 14 c9 
00000000 026ed0c8   v v v v v v v v   a6 dd ea c7 9e 59 2b cb 
00000000 026ed0c0   v v v v v v v v   11 fd a9 10 4e 34 93 3b 
00000000 026ed0b8   v v v v v v v v   70 85 81 36 88 e6 5d f6 
00000000 026ed0b0   v v v v v v v v   f0 42 6c 5b c8 37 df df 
00000000 026ed0a8   v v v v v v v v   3f 90 9c d2 48 2d 22 01 
00000000 026ed0a0   v v v v v v v v   af 74 7c 12 c4 0e ba 3a 
00000000 026ed098   v v v v v v v v   fd 9b d9 91 f6 1b 8a 95 
00000000 026ed090   v v v v v v v v   7a 35 7c e9 f7 4e 43 6d 
00000000 026ed088   v v v v v v v v   48 6e b0 46 7e ae 85 9d 
00000000 026ed080   v v v v v v v v   b0 6e 58 8a 10 1f 61 6c 
00000000 026ed078   v v v v v v v v   a5 be 07 61 a0 54 19 91 
00000000 026ed070   v v v v v v v v   3e 2d a6 8a 06 d4 bd 02 
00000000 026ed068   v v v v v v v v   f0 02 c1 e1 fd 16 45 26 
00000000 026ed060   v v v v v v v v   5e 38 29 a4 7a a3 64 44 
00000000 026ed058   v v v v v v v v   1d b3 48 0f 16 eb eb b3 
00000000 026ed050   v v v v v v v v   27 d1 cd 04 e4 bb 40 0f 
00000000 026ed048   v v v v v v v v   04 ab 9c d7 b8 0c fd b9 
00000000 026ed040   v v v v v v v v   be 86 40 36 85 b1 fc 0e 
00000000 026ed038   v v v v v v v v   9c 5c 23 63 c4 1a e6 23 
00000000 026ed030   v v v v v v v v   ed 12 c3 d4 b6 95 73 2d 
00000000 026ed028   v v v v v v v v   f2 8f d9 ff 4e 77 79 87 
00000000 026ed020   v v v v v v v v   00 8e 3a 77 15 9f eb 39 
00000000 026ed018   v v v v v v v v   98 09 7d a0 2c d3 60 19 
00000000 026ed010   v v v v v . . .   5c 2e 61 89 a3 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (56)                                                Lowest Known Correct Cost (68)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                    movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  andl %edi, %edi           #  2     0x1   2      OPC=andl_r32_r32_1         xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  3     0x3   4      OPC=movl_r32_m32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x7   1      OPC=nop                    movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0x8   1      OPC=nop                    movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0x9   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xa   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  xorl %eax, %eax           #  8     0xb   2      OPC=xorl_r32_r32           nop                       #  8     0x11  1      OPC=nop                 
  testl %ecx, %ecx          #  9     0xd   2      OPC=testl_r32_r32          nop                       #  9     0x12  1      OPC=nop                 
  je .L_142ce0              #  10    0xf   2      OPC=je_label               nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x11  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x12  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x13  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x14  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  movq %rdi, %rdx           #  15    0x15  3      OPC=movq_r64_r64           nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
  nop                       #  24    0x20  1      OPC=nop                    addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
.L_142cc0:                  #        0x21  0      OPC=<label>                movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  addl $0x4, %edx           #  25    0x21  3      OPC=addl_r32_imm8          movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl (%r15,%rdx,1), %eax  #  26    0x24  4      OPC=movl_r32_m32           testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  testl %eax, %ecx          #  27    0x28  2      OPC=testl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  jne .L_142cc0             #  28    0x2a  2      OPC=jne_label              movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  movl %edx, %eax           #  29    0x2c  2      OPC=movl_r32_r32           subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32           sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  sarl $0x2, %eax           #  32    0x31  3      OPC=sarl_r32_imm8          nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3d  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  43    0x3e  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
.L_142ce0:                  #        0x3f  0      OPC=<label>                popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  nop                       #  44    0x3f  1      OPC=nop                    andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  nop                       #  45    0x40  1      OPC=nop                    addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  nop                       #  46    0x41  1      OPC=nop                    jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  nop                       #  47    0x42  1      OPC=nop                                                                                            
  nop                       #  48    0x43  1      OPC=nop                  .size wcslen, .-wcslen                                                    
  salb $0x3, %ah            #  49    0x44  3      OPC=salb_rh_imm8                                                                                   
  nop                       #  50    0x47  1      OPC=nop                                                                                            
  nop                       #  51    0x48  1      OPC=nop                                                                                            
  nop                       #  52    0x49  1      OPC=nop                                                                                            
  nop                       #  53    0x4a  1      OPC=nop                                                                                            
  nop                       #  54    0x4b  1      OPC=nop                                                                                            
  popq %r11                 #  55    0x4c  2      OPC=popq_r64_1                                                                                     
  andl $0xe0, %r11d         #  56    0x4e  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11           #  57    0x52  3      OPC=addq_r64_r64                                                                                   
  jmpq %r11                 #  58    0x55  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (55)                                                Lowest Known Correct Cost (68)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                    movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  andl %edi, %edi           #  2     0x1   2      OPC=andl_r32_r32_1         xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  3     0x3   4      OPC=movl_r32_m32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x7   1      OPC=nop                    movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  xorl %eax, %eax           #  5     0x8   2      OPC=xorl_r32_r32           movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0xa   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xb   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xc   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  testl %ecx, %ecx          #  9     0xd   2      OPC=testl_r32_r32          nop                       #  9     0x12  1      OPC=nop                 
  je .L_142ce0              #  10    0xf   2      OPC=je_label               nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x11  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x12  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x13  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x14  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  movq %rdi, %rdx           #  15    0x15  3      OPC=movq_r64_r64           nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x20  0      OPC=<label>                addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  testl %eax, %ecx          #  26    0x27  2      OPC=testl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32           movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32           subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2f  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  sarl $0x2, %eax           #  32    0x31  3      OPC=sarl_r32_imm8          nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3d  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x3e  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  43    0x3e  1      OPC=nop                    popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  nop                       #  44    0x3f  1      OPC=nop                    andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  nop                       #  45    0x40  1      OPC=nop                    addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  nop                       #  46    0x41  1      OPC=nop                    jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  nop                       #  47    0x42  1      OPC=nop                                                                                            
  nop                       #  48    0x43  1      OPC=nop                  .size wcslen, .-wcslen                                                    
  nop                       #  49    0x44  1      OPC=nop                                                                                            
  nop                       #  50    0x45  1      OPC=nop                                                                                            
  salb $0x3, %ah            #  51    0x46  3      OPC=salb_rh_imm8                                                                                   
  nop                       #  52    0x49  1      OPC=nop                                                                                            
  nop                       #  53    0x4a  1      OPC=nop                                                                                            
  nop                       #  54    0x4b  1      OPC=nop                                                                                            
  nop                       #  55    0x4c  1      OPC=nop                                                                                            
  popq %r11                 #  56    0x4d  2      OPC=popq_r64_1                                                                                     
  andl $0xe0, %r11d         #  57    0x4f  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11           #  58    0x53  3      OPC=addq_r64_r64                                                                                   
  jmpq %r11                 #  59    0x56  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (54)                                                Lowest Known Correct Cost (68)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                    movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  andl %edi, %edi           #  2     0x1   2      OPC=andl_r32_r32_1         xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  3     0x3   4      OPC=movl_r32_m32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x7   1      OPC=nop                    movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  xorl %eax, %eax           #  5     0x8   2      OPC=xorl_r32_r32           movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0xa   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xb   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xc   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  testl %ecx, %ecx          #  9     0xd   2      OPC=testl_r32_r32          nop                       #  9     0x12  1      OPC=nop                 
  je .L_142ce0              #  10    0xf   2      OPC=je_label               nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x11  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x12  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x13  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x14  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x15  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  movq %rdi, %rdx           #  16    0x16  3      OPC=movq_r64_r64           nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x20  0      OPC=<label>                addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  testl %eax, %ecx          #  26    0x27  2      OPC=testl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32           movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32           subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2f  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  sarl $0x2, %eax           #  32    0x31  3      OPC=sarl_r32_imm8          nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3d  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  43    0x3e  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
.L_142ce0:                  #        0x3f  0      OPC=<label>                popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  nop                       #  44    0x3f  1      OPC=nop                    andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  nop                       #  45    0x40  1      OPC=nop                    addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  nop                       #  46    0x41  1      OPC=nop                    jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  nop                       #  47    0x42  1      OPC=nop                                                                                            
  nop                       #  48    0x43  1      OPC=nop                  .size wcslen, .-wcslen                                                    
  nop                       #  49    0x44  1      OPC=nop                                                                                            
  nop                       #  50    0x45  1      OPC=nop                                                                                            
  nop                       #  51    0x46  1      OPC=nop                                                                                            
  nop                       #  52    0x47  1      OPC=nop                                                                                            
  salb $0x3, %ah            #  53    0x48  3      OPC=salb_rh_imm8                                                                                   
  nop                       #  54    0x4b  1      OPC=nop                                                                                            
  nop                       #  55    0x4c  1      OPC=nop                                                                                            
  nop                       #  56    0x4d  1      OPC=nop                                                                                            
  nop                       #  57    0x4e  1      OPC=nop                                                                                            
  popq %r11                 #  58    0x4f  2      OPC=popq_r64_1                                                                                     
  andl $0xe0, %r11d         #  59    0x51  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11           #  60    0x55  3      OPC=addq_r64_r64                                                                                   
  jmpq %r11                 #  61    0x58  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (53)                                                Lowest Known Correct Cost (53)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  andl %edi, %edi           #  2     0x1   2      OPC=andl_r32_r32_1         andl %edi, %edi           #  2     0x1   2      OPC=andl_r32_r32_1       
  movl (%r15,%rdi,1), %ecx  #  3     0x3   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  3     0x3   4      OPC=movl_r32_m32         
  nop                       #  4     0x7   1      OPC=nop                    nop                       #  4     0x7   1      OPC=nop                  
  nop                       #  5     0x8   1      OPC=nop                    nop                       #  5     0x8   1      OPC=nop                  
  xorl %eax, %eax           #  6     0x9   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  6     0x9   2      OPC=xorl_r32_r32         
  nop                       #  7     0xb   1      OPC=nop                    nop                       #  7     0xb   1      OPC=nop                  
  nop                       #  8     0xc   1      OPC=nop                    nop                       #  8     0xc   1      OPC=nop                  
  nop                       #  9     0xd   1      OPC=nop                    nop                       #  9     0xd   1      OPC=nop                  
  testl %ecx, %ecx          #  10    0xe   2      OPC=testl_r32_r32          testl %ecx, %ecx          #  10    0xe   2      OPC=testl_r32_r32        
  je .L_142ce0              #  11    0x10  2      OPC=je_label               je .L_142ce0              #  11    0x10  2      OPC=je_label             
  nop                       #  12    0x12  1      OPC=nop                    nop                       #  12    0x12  1      OPC=nop                  
  nop                       #  13    0x13  1      OPC=nop                    nop                       #  13    0x13  1      OPC=nop                  
  nop                       #  14    0x14  1      OPC=nop                    nop                       #  14    0x14  1      OPC=nop                  
  nop                       #  15    0x15  1      OPC=nop                    nop                       #  15    0x15  1      OPC=nop                  
  movq %rdi, %rdx           #  16    0x16  3      OPC=movq_r64_r64           movq %rdi, %rdx           #  16    0x16  3      OPC=movq_r64_r64         
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x19  1      OPC=nop                  
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1a  1      OPC=nop                  
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1b  1      OPC=nop                  
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1c  1      OPC=nop                  
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1d  1      OPC=nop                  
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1e  1      OPC=nop                  
  nop                       #  23    0x1f  1      OPC=nop                    nop                       #  23    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32         
  testl %eax, %ecx          #  26    0x27  2      OPC=testl_r32_r32          testl %eax, %ecx          #  26    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x29  2      OPC=jne_label            
  nop                       #  28    0x2b  1      OPC=nop                    nop                       #  28    0x2b  1      OPC=nop                  
  movl %edx, %eax           #  29    0x2c  2      OPC=movl_r32_r32           movl %edx, %eax           #  29    0x2c  2      OPC=movl_r32_r32         
  subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32           subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32         
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x30  1      OPC=nop                  
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x31  1      OPC=nop                  
  sarl $0x2, %eax           #  33    0x32  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  33    0x32  3      OPC=sarl_r32_imm8        
  nop                       #  34    0x35  1      OPC=nop                    nop                       #  34    0x35  1      OPC=nop                  
  nop                       #  35    0x36  1      OPC=nop                    nop                       #  35    0x36  1      OPC=nop                  
  nop                       #  36    0x37  1      OPC=nop                    nop                       #  36    0x37  1      OPC=nop                  
  nop                       #  37    0x38  1      OPC=nop                    nop                       #  37    0x38  1      OPC=nop                  
  nop                       #  38    0x39  1      OPC=nop                    nop                       #  38    0x39  1      OPC=nop                  
  nop                       #  39    0x3a  1      OPC=nop                    nop                       #  39    0x3a  1      OPC=nop                  
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3b  1      OPC=nop                  
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3c  1      OPC=nop                  
  nop                       #  42    0x3d  1      OPC=nop                    nop                       #  42    0x3d  1      OPC=nop                  
  nop                       #  43    0x3e  1      OPC=nop                    nop                       #  43    0x3e  1      OPC=nop                  
  nop                       #  44    0x3f  1      OPC=nop                    nop                       #  44    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  45    0x40  1      OPC=nop                    nop                       #  45    0x40  1      OPC=nop                  
  nop                       #  46    0x41  1      OPC=nop                    nop                       #  46    0x41  1      OPC=nop                  
  nop                       #  47    0x42  1      OPC=nop                    nop                       #  47    0x42  1      OPC=nop                  
  nop                       #  48    0x43  1      OPC=nop                    nop                       #  48    0x43  1      OPC=nop                  
  nop                       #  49    0x44  1      OPC=nop                    nop                       #  49    0x44  1      OPC=nop                  
  nop                       #  50    0x45  1      OPC=nop                    nop                       #  50    0x45  1      OPC=nop                  
  nop                       #  51    0x46  1      OPC=nop                    nop                       #  51    0x46  1      OPC=nop                  
  salb $0x3, %ah            #  52    0x47  3      OPC=salb_rh_imm8           salb $0x3, %ah            #  52    0x47  3      OPC=salb_rh_imm8         
  nop                       #  53    0x4a  1      OPC=nop                    nop                       #  53    0x4a  1      OPC=nop                  
  nop                       #  54    0x4b  1      OPC=nop                    nop                       #  54    0x4b  1      OPC=nop                  
  nop                       #  55    0x4c  1      OPC=nop                    nop                       #  55    0x4c  1      OPC=nop                  
  nop                       #  56    0x4d  1      OPC=nop                    nop                       #  56    0x4d  1      OPC=nop                  
  popq %r11                 #  57    0x4e  2      OPC=popq_r64_1             popq %r11                 #  57    0x4e  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  58    0x50  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  58    0x50  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  59    0x54  3      OPC=addq_r64_r64           addq %r15, %r11           #  59    0x54  3      OPC=addq_r64_r64         
  jmpq %r11                 #  60    0x57  3      OPC=jmpq_r64               jmpq %r11                 #  60    0x57  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (52)                                                Lowest Known Correct Cost (52)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  xorq %rax, %rax           #  1     0     3      OPC=xorq_r64_r64           xorq %rax, %rax           #  1     0     3      OPC=xorq_r64_r64         
  movl %edi, %ebx           #  2     0x3   2      OPC=movl_r32_r32           movl %edi, %ebx           #  2     0x3   2      OPC=movl_r32_r32         
  movl (%r15,%rbx,1), %ecx  #  3     0x5   4      OPC=movl_r32_m32           movl (%r15,%rbx,1), %ecx  #  3     0x5   4      OPC=movl_r32_m32         
  nop                       #  4     0x9   1      OPC=nop                    nop                       #  4     0x9   1      OPC=nop                  
  nop                       #  5     0xa   1      OPC=nop                    nop                       #  5     0xa   1      OPC=nop                  
  movl %ebx, %edx           #  6     0xb   2      OPC=movl_r32_r32_1         movl %ebx, %edx           #  6     0xb   2      OPC=movl_r32_r32_1       
  addq %rax, %rcx           #  7     0xd   3      OPC=addq_r64_r64           addq %rax, %rcx           #  7     0xd   3      OPC=addq_r64_r64         
  nop                       #  8     0x10  1      OPC=nop                    nop                       #  8     0x10  1      OPC=nop                  
  nop                       #  9     0x11  1      OPC=nop                    nop                       #  9     0x11  1      OPC=nop                  
  nop                       #  10    0x12  1      OPC=nop                    nop                       #  10    0x12  1      OPC=nop                  
  nop                       #  11    0x13  1      OPC=nop                    nop                       #  11    0x13  1      OPC=nop                  
  nop                       #  12    0x14  1      OPC=nop                    nop                       #  12    0x14  1      OPC=nop                  
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x15  1      OPC=nop                  
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x16  1      OPC=nop                  
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x17  1      OPC=nop                  
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x18  1      OPC=nop                  
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x19  1      OPC=nop                  
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1a  1      OPC=nop                  
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1b  1      OPC=nop                  
  je .L_142ce0              #  20    0x1c  2      OPC=je_label               je .L_142ce0              #  20    0x1c  2      OPC=je_label             
  nop                       #  21    0x1e  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                  
  nop                       #  22    0x1f  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8        
  movw (%r15,%rdx,1), %ax   #  24    0x23  5      OPC=movw_r16_m16           movw (%r15,%rdx,1), %ax   #  24    0x23  5      OPC=movw_r16_m16         
  negb %ah                  #  25    0x28  2      OPC=negb_rh                negb %ah                  #  25    0x28  2      OPC=negb_rh              
  jne .L_142cc0             #  26    0x2a  2      OPC=jne_label              jne .L_142cc0             #  26    0x2a  2      OPC=jne_label            
  subw %bx, %dx             #  27    0x2c  3      OPC=subw_r16_r16           subw %bx, %dx             #  27    0x2c  3      OPC=subw_r16_r16         
  nop                       #  28    0x2f  1      OPC=nop                    nop                       #  28    0x2f  1      OPC=nop                  
  nop                       #  29    0x30  1      OPC=nop                    nop                       #  29    0x30  1      OPC=nop                  
  nop                       #  30    0x31  1      OPC=nop                    nop                       #  30    0x31  1      OPC=nop                  
  nop                       #  31    0x32  1      OPC=nop                    nop                       #  31    0x32  1      OPC=nop                  
  nop                       #  32    0x33  1      OPC=nop                    nop                       #  32    0x33  1      OPC=nop                  
  xorw %dx, %ax             #  33    0x34  3      OPC=xorw_r16_r16_1         xorw %dx, %ax             #  33    0x34  3      OPC=xorw_r16_r16_1       
  nop                       #  34    0x37  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                  
  nop                       #  35    0x38  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                  
  nop                       #  36    0x39  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                  
  nop                       #  37    0x3a  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                  
  nop                       #  38    0x3b  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                  
  nop                       #  39    0x3c  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                  
  nop                       #  40    0x3d  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                  
  nop                       #  41    0x3e  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                  
  nop                       #  42    0x3f  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  43    0x40  1      OPC=nop                    nop                       #  43    0x40  1      OPC=nop                  
  nop                       #  44    0x41  1      OPC=nop                    nop                       #  44    0x41  1      OPC=nop                  
  nop                       #  45    0x42  1      OPC=nop                    nop                       #  45    0x42  1      OPC=nop                  
  nop                       #  46    0x43  1      OPC=nop                    nop                       #  46    0x43  1      OPC=nop                  
  nop                       #  47    0x44  1      OPC=nop                    nop                       #  47    0x44  1      OPC=nop                  
  sarl $0x2, %eax           #  48    0x45  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  48    0x45  3      OPC=sarl_r32_imm8        
  nopl %eax                 #  49    0x48  3      OPC=nopl_r32               nopl %eax                 #  49    0x48  3      OPC=nopl_r32             
  nop                       #  50    0x4b  1      OPC=nop                    nop                       #  50    0x4b  1      OPC=nop                  
  nop                       #  51    0x4c  1      OPC=nop                    nop                       #  51    0x4c  1      OPC=nop                  
  popq %r11                 #  52    0x4d  2      OPC=popq_r64_1             popq %r11                 #  52    0x4d  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  53    0x4f  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  53    0x4f  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  54    0x53  3      OPC=addq_r64_r64           addq %r15, %r11           #  54    0x53  3      OPC=addq_r64_r64         
  jmpq %r11                 #  55    0x56  3      OPC=jmpq_r64               jmpq %r11                 #  55    0x56  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  104.103s
Iterations/s:                  960.583

Starting cost:                 68
Lowest cost:                   52
Lowest correct cost:           52

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.473%       4.565%        3.819%       
Operand         8.311%       4.873%        2.229%       
Opcode          8.282%       7.918%        7.671%       
Global Copy     8.304%       7.785%        7.785%       
Global Swap     8.369%       7.551%        6.83%        
Rotate          8.346%       7.686%        5.833%       
ReplaceNop      8.497%       8.124%        7.78%        
Delete          8.246%       7.858%        6.745%       
Instruction     8.22%        4.978%        0.777%       
Add Nops        8.288%       8.288%        6.518%       
OpcodeWidth     8.336%       7.621%        7.406%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.328%       1.775%        0.007%       
                                                        
Total           100%         79.022%       63.4%        

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  423.03s
Iterations/s:                  472.779

Starting cost:                 68
Lowest cost:                   52
Lowest correct cost:           52

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.4225%      4.5255%       3.7035%      
Operand         8.3215%      5.012%        2.6075%      
Opcode          8.2675%      8.015%        7.847%       
Global Copy     8.342%       7.9775%       7.9775%      
Global Swap     8.3435%      7.772%        7.238%       
Rotate          8.399%       7.9525%       6.3195%      
ReplaceNop      8.4195%      8.1545%       7.9235%      
Delete          8.237%       7.9705%       6.9175%      
Instruction     8.2905%      4.949%        0.745%       
Add Nops        8.303%       8.303%        6.7005%      
OpcodeWidth     8.387%       7.884%        7.716%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.267%       1.632%        0.0035%      
                                                        
Total           100%         80.1475%      65.699%      

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  902.383s
Iterations/s:                  332.453

Starting cost:                 68
Lowest cost:                   52
Lowest correct cost:           52

Move Type       Proposed     Succeeded     Accepted        
                                                           
Local Swap      8.41267%     4.51267%      3.7%            
Operand         8.336%       5.224%        2.902%          
Opcode          8.28967%     8.095%        7.963%          
Global Copy     8.31333%     8.03767%      8.03767%        
Global Swap     8.32733%     7.88567%      7.453%          
Rotate          8.37533%     8.02667%      6.513%          
ReplaceNop      8.37833%     8.17%         7.997%          
Delete          8.22633%     8.015%        6.95233%        
Instruction     8.317%       5.024%        0.733333%       
Add Nops        8.33533%     8.33533%      6.79967%        
OpcodeWidth     8.36733%     7.96267%      7.81733%        
2xWeighted      0%           0%            0%              
Memory+Swap     8.32133%     1.579%        0.00233333%     
                                                           
Total           100%         80.8677%      66.8707%        

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  1251.97s
Iterations/s:                  319.497

Starting cost:                 68
Lowest cost:                   52
Lowest correct cost:           52

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.42725%     4.56075%      3.72925%     
Operand         8.31325%     5.3785%       3.121%       
Opcode          8.32%        8.15575%      8.04575%     
Global Copy     8.32025%     8.09125%      8.09125%     
Global Swap     8.34725%     7.9775%       7.59925%     
Rotate          8.36075%     8.0665%       6.57825%     
ReplaceNop      8.34625%     8.1745%       8.03525%     
Delete          8.24075%     8.06925%      6.93725%     
Instruction     8.3245%      5.03625%      0.736%       
Add Nops        8.3305%      8.3305%       6.786%       
OpcodeWidth     8.3485%      8.00275%      7.871%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.32075%     1.57225%      0.003%       
                                                        
Total           100%         81.4158%      67.5332%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  1665.14s
Iterations/s:                  300.276

Starting cost:                 68
Lowest cost:                   52
Lowest correct cost:           52

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.4402%      4.5648%       3.7398%      
Operand         8.3048%      5.4812%       3.2532%      
Opcode          8.3374%      8.1964%       8.1026%      
Global Copy     8.3152%      8.116%        8.116%       
Global Swap     8.307%       7.9862%       7.6448%      
Rotate          8.3502%      8.0952%       6.6186%      
ReplaceNop      8.3632%      8.2146%       8.094%       
Delete          8.244%       8.0952%       6.8858%      
Instruction     8.3562%      5.0638%       0.7486%      
Add Nops        8.3474%      8.3474%       6.7652%      
OpcodeWidth     8.3224%      8.0124%       7.8926%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.312%       1.577%        0.0032%      
                                                        
Total           100%         81.7502%      67.8644%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     17 40 5f 3a 8e c2 26 c3
%rcx     e6 17 8c 15 bb 40 32 6a
%rdx     ea a1 99 1e 5d 02 bc 67
%rbx     60 ed 3b 59 b7 66 54 48
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 3e eb a8 d1
%rdi     00 00 00 00 3e eb ac d2
%r8      fc 98 0a dd 0c 2d 01 e7
%r9      39 d4 cd 20 d4 47 b8 e8
%r10     e0 40 32 f9 94 a0 15 8d
%r11     e1 0e 4f 42 8b 67 91 94
%r12     3a 43 37 4b b4 3f c9 db
%r13     65 62 2d 2d 3a fe f5 24
%r14     14 50 2d 5e e7 10 a0 c1
%r15     00 00 00 00 0a 19 c1 50

%ymm0    71 3e 0d 30 fd c3 e1 24 5d 6a 7d 6b c9 95 a3 ee 19 b4 bf 73 d1 66 ba dc 5b 69 5f 7e e3 a4 3c 96
%ymm1    b7 13 a9 48 81 69 75 cc 89 17 f8 54 71 ea 35 4d 88 5a 36 22 df 53 e6 2c 1c e6 4e 08 5a 9b d6 8a
%ymm2    4a a1 e8 6e 21 c0 e3 8f a5 a0 1f e9 b7 57 c3 56 e0 63 b3 bb 0d 80 46 3f 67 00 92 02 b6 67 e2 3c
%ymm3    76 e2 9f 69 eb a5 76 97 f4 88 74 f6 90 42 5a 08 71 b1 be c9 fa 8b 77 dd 42 97 24 43 1c a3 85 f9
%ymm4    2d 6b 39 98 c4 df cb d4 91 18 2b 00 12 0b 15 ff 56 a5 71 c3 10 40 f9 71 51 9f 15 a0 b8 0f ea b7
%ymm5    09 6c 2e d3 53 b1 a3 a0 54 20 a9 82 8e 6e a9 c0 d9 de 89 e8 43 05 a0 fc 3a 48 8f de 05 73 f6 11
%ymm6    f2 85 85 8d 72 f9 b0 72 a2 59 54 d0 3f dc f1 48 33 05 43 a4 b6 cf dc a3 33 25 05 9d 74 59 91 33
%ymm7    a9 1f 1c 48 db eb fd 14 db 38 c3 2e 70 d7 97 5f cc b0 c5 8b db ec 4d 4a 2d a0 97 3b 06 05 a8 e7
%ymm8    38 9b bc 81 0a 41 19 3e 6a f7 f8 e1 68 a8 d2 e0 3c 7e c9 59 da a2 fa ce 1c b7 80 1e cc 51 11 b0
%ymm9    4f e5 cc 28 d4 40 30 b7 cb 66 ab 92 1c 2e d7 ec df b7 06 e1 d1 b5 02 e5 62 61 97 05 6f 1d f2 b2
%ymm10   d3 fe f2 04 05 62 30 04 94 8c 1c f6 dc 2c 8d e3 3d 8e e5 f3 ad 29 62 7a 7d d5 fd ec c7 a6 b2 72
%ymm11   07 05 3c 86 13 00 9d 0a e2 7b 06 33 ad e2 83 ca 99 93 9d 39 05 07 50 82 d4 80 17 90 bb dc 98 af
%ymm12   a5 cc 34 b7 e4 67 88 7e 25 ef 63 81 e5 6f 71 95 e5 ee c1 1a 36 13 c6 ca 11 8c 03 db 30 c8 25 30
%ymm13   10 b9 fb 3d d7 4a 29 ad 84 34 ea 96 b5 65 17 63 43 e5 4b a0 f3 ce 2c 5e 68 71 46 f3 b9 c0 29 05
%ymm14   35 62 bb a1 66 a7 96 5f 0b 8c 20 71 e2 16 fc e9 80 8c 24 a6 c9 89 9e 21 3e cd 8d ed 36 15 53 a2
%ymm15   a1 06 7b dc 03 00 51 67 b0 d8 ec 87 b9 37 1f 4d 24 2d 93 4e 7a 64 77 ac 0e e8 4b d9 fb 41 12 41

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   7f 97 6b da 12 25 4e 60 
00000006 fffffff0   v v v v v v v v   19 fd d4 4e 34 2a 6e d3 
00000006 ffffffe8   v v v v v v v v   3f ac e5 20 ad 24 a0 10 
00000006 ffffffe0   v v v v v v v v   49 6f ef b9 09 9a 5e 3b 

[ 00000000 49057198 - 00000000 49056980 ]
[ 15 valid rows shown ]

00000000 49056e90   . . . . . . v v   00 00 00 00 00 00 00 00 
00000000 49056e88   v v v v v v v v   00 00 f3 04 19 a3 28 46 
00000000 49056e80   v v v v v v v v   ee 0a bd 4c 99 31 a8 6a 
00000000 49056e78   v v v v v v v v   fd f3 c7 60 00 d9 5b d5 
00000000 49056e70   v v v v v v v v   89 08 70 28 2f 3a f5 ff 
00000000 49056e68   v v v v v v v v   be 50 dc d2 b5 1e 89 a2 
00000000 49056e60   v v v v v v v v   70 8b a3 2f 34 b5 a3 9c 
00000000 49056e58   v v v v v v v v   f3 ee 05 2b 4f 52 64 61 
00000000 49056e50   v v v v v v v v   d9 36 33 30 7b a5 23 ec 
00000000 49056e48   v v v v v v v v   9a be 49 13 ad fe fe 41 
00000000 49056e40   v v v v v v v v   57 ee 8c 98 c2 b4 97 c7 
00000000 49056e38   v v v v v v v v   9f b3 c7 ee 79 2e 2d a9 
00000000 49056e30   v v v v v v v v   bb 8e 0d 8f 0a 65 a3 87 
00000000 49056e28   v v v v v v v v   10 4b 15 6c a7 10 b5 bf 
00000000 49056e20   v v v v v v . .   2c d7 01 fa 15 e4 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (59)                                                Lowest Known Correct Cost (72)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %edi           #  2     0x2   2      OPC=xorl_r32_r32_1         xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  3     0x4   4      OPC=movl_r32_m32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movq %rdi, %rdx           #  4     0x8   3      OPC=movq_r64_r64           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0xb   1      OPC=nop                    movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0xc   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xd   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xe   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  andl %edx, %ecx           #  9     0xf   2      OPC=andl_r32_r32           nop                       #  9     0x12  1      OPC=nop                 
  testl %ecx, %edi          #  10    0x11  2      OPC=testl_r32_r32          nop                       #  10    0x13  1      OPC=nop                 
  je .L_142ce0              #  11    0x13  2      OPC=je_label               nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
.L_142cc0:                  #        0x1e  0      OPC=<label>                nop                       #  21    0x1e  1      OPC=nop                 
  addl $0x4, %edx           #  21    0x1e  3      OPC=addl_r32_imm8          nop                       #  22    0x1f  1      OPC=nop                 
  movl (%r15,%rdx,1), %eax  #  22    0x21  4      OPC=movl_r32_m32         .L_142cc0:                  #        0x20  0      OPC=<label>             
  shll $0x1, %eax           #  23    0x25  2      OPC=shll_r32_one           addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  jne .L_142cc0             #  24    0x27  2      OPC=jne_label              movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  nop                       #  25    0x29  1      OPC=nop                    movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  nop                       #  26    0x2a  1      OPC=nop                    testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  nop                       #  27    0x2b  1      OPC=nop                    jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  xorl %edx, %eax           #  28    0x2c  2      OPC=xorl_r32_r32_1         movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2e  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2f  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  subl %edi, %eax           #  33    0x32  2      OPC=subl_r32_r32           nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x34  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x35  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x36  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x37  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x38  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  shrl $0x2, %eax           #  39    0x39  3      OPC=shrl_r32_imm8          nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
.L_142ce0:                  #        0x3d  0      OPC=<label>                nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  42    0x3e  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  43    0x3f  1      OPC=nop                    popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  popq %r11                 #  44    0x40  2      OPC=popq_r64_1             andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8          addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64           jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64                                                                                       
                                                                           .size wcslen, .-wcslen                                                    
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (58)                                                Lowest Known Correct Cost (72)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %edi           #  2     0x2   2      OPC=xorl_r32_r32_1         xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  3     0x4   4      OPC=movl_r32_m32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movq %rdi, %rdx           #  4     0x8   3      OPC=movq_r64_r64           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0xb   1      OPC=nop                    movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0xc   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xd   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xe   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  andl %edx, %ecx           #  9     0xf   2      OPC=andl_r32_r32           nop                       #  9     0x12  1      OPC=nop                 
  testl %ecx, %edi          #  10    0x11  2      OPC=testl_r32_r32          nop                       #  10    0x13  1      OPC=nop                 
  je .L_142ce0              #  11    0x13  2      OPC=je_label               nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x1f  0      OPC=<label>                nop                       #  22    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  22    0x1f  3      OPC=addl_r32_imm8        .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  23    0x22  4      OPC=movl_r32_m32           addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  shll $0x1, %eax           #  24    0x26  2      OPC=shll_r32_one           movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  25    0x28  2      OPC=jne_label              movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  nop                       #  26    0x2a  1      OPC=nop                    testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  nop                       #  27    0x2b  1      OPC=nop                    jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  nop                       #  28    0x2c  1      OPC=nop                    movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  xorl %edx, %eax           #  29    0x2d  2      OPC=xorl_r32_r32_1         subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2f  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x32  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x33  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  subl %edi, %eax           #  35    0x34  2      OPC=subl_r32_r32           nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x36  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x37  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x38  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x39  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  shrl $0x2, %eax           #  40    0x3a  3      OPC=shrl_r32_imm8          nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
.L_142ce0:                  #        0x3e  0      OPC=<label>                nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  42    0x3e  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  43    0x3f  1      OPC=nop                    popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  nop                       #  44    0x40  1      OPC=nop                    andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  nop                       #  45    0x41  1      OPC=nop                    addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  popq %r11                 #  46    0x42  2      OPC=popq_r64_1             jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  andl $0xe0, %r11d         #  47    0x44  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11           #  48    0x48  3      OPC=addq_r64_r64         .size wcslen, .-wcslen                                                    
  jmpq %r11                 #  49    0x4b  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (57)                                                Lowest Known Correct Cost (72)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %edi           #  2     0x2   2      OPC=xorl_r32_r32_1         xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  3     0x4   4      OPC=movl_r32_m32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x8   1      OPC=nop                    movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0x9   1      OPC=nop                    movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0xa   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xb   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xc   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  movq %rdi, %rdx           #  9     0xd   3      OPC=movq_r64_r64           nop                       #  9     0x12  1      OPC=nop                 
  andl %edx, %ecx           #  10    0x10  2      OPC=andl_r32_r32           nop                       #  10    0x13  1      OPC=nop                 
  testl %ecx, %edi          #  11    0x12  2      OPC=testl_r32_r32          nop                       #  11    0x14  1      OPC=nop                 
  je .L_142ce0              #  12    0x14  2      OPC=je_label               nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x20  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x21  0      OPC=<label>                addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  addl $0x4, %edx           #  24    0x21  3      OPC=addl_r32_imm8          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %eax  #  25    0x24  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  shll $0x1, %eax           #  26    0x28  2      OPC=shll_r32_one           testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x2a  2      OPC=jne_label              jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  nop                       #  28    0x2c  1      OPC=nop                    movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2d  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2e  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  xorl %edx, %eax           #  31    0x2f  2      OPC=xorl_r32_r32_1         nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x32  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x33  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x34  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x35  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x36  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  subl %edi, %eax           #  38    0x37  2      OPC=subl_r32_r32           nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x39  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3a  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3b  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3c  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  43    0x3d  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
  shrl $0x2, %eax           #  44    0x3e  3      OPC=shrl_r32_imm8          popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
.L_142ce0:                  #        0x41  0      OPC=<label>                andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  nop                       #  45    0x41  1      OPC=nop                    addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  nop                       #  46    0x42  1      OPC=nop                    jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  nop                       #  47    0x43  1      OPC=nop                                                                                            
  nop                       #  48    0x44  1      OPC=nop                  .size wcslen, .-wcslen                                                    
  popq %r11                 #  49    0x45  2      OPC=popq_r64_1                                                                                     
  andl $0xe0, %r11d         #  50    0x47  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11           #  51    0x4b  3      OPC=addq_r64_r64                                                                                   
  jmpq %r11                 #  52    0x4e  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (56)                                                Lowest Known Correct Cost (56)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  xorl %eax, %edi           #  2     0x2   2      OPC=xorl_r32_r32_1         xorl %eax, %edi           #  2     0x2   2      OPC=xorl_r32_r32_1       
  movl (%r15,%rdi,1), %ecx  #  3     0x4   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  3     0x4   4      OPC=movl_r32_m32         
  nop                       #  4     0x8   1      OPC=nop                    nop                       #  4     0x8   1      OPC=nop                  
  nop                       #  5     0x9   1      OPC=nop                    nop                       #  5     0x9   1      OPC=nop                  
  nop                       #  6     0xa   1      OPC=nop                    nop                       #  6     0xa   1      OPC=nop                  
  nop                       #  7     0xb   1      OPC=nop                    nop                       #  7     0xb   1      OPC=nop                  
  nop                       #  8     0xc   1      OPC=nop                    nop                       #  8     0xc   1      OPC=nop                  
  movl %edi, %edx           #  9     0xd   2      OPC=movl_r32_r32           movl %edi, %edx           #  9     0xd   2      OPC=movl_r32_r32         
  andl %edx, %ecx           #  10    0xf   2      OPC=andl_r32_r32           andl %edx, %ecx           #  10    0xf   2      OPC=andl_r32_r32         
  testl %ecx, %edi          #  11    0x11  2      OPC=testl_r32_r32          testl %ecx, %edi          #  11    0x11  2      OPC=testl_r32_r32        
  je .L_142ce0              #  12    0x13  2      OPC=je_label               je .L_142ce0              #  12    0x13  2      OPC=je_label             
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x15  1      OPC=nop                  
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x16  1      OPC=nop                  
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x17  1      OPC=nop                  
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x18  1      OPC=nop                  
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x19  1      OPC=nop                  
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1a  1      OPC=nop                  
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1b  1      OPC=nop                  
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1c  1      OPC=nop                  
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1d  1      OPC=nop                  
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1e  1      OPC=nop                  
  nop                       #  23    0x1f  1      OPC=nop                    nop                       #  23    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32         
  shll $0x1, %eax           #  26    0x27  2      OPC=shll_r32_one           shll $0x1, %eax           #  26    0x27  2      OPC=shll_r32_one         
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x29  2      OPC=jne_label            
  nop                       #  28    0x2b  1      OPC=nop                    nop                       #  28    0x2b  1      OPC=nop                  
  nop                       #  29    0x2c  1      OPC=nop                    nop                       #  29    0x2c  1      OPC=nop                  
  nop                       #  30    0x2d  1      OPC=nop                    nop                       #  30    0x2d  1      OPC=nop                  
  nop                       #  31    0x2e  1      OPC=nop                    nop                       #  31    0x2e  1      OPC=nop                  
  xorl %edx, %eax           #  32    0x2f  2      OPC=xorl_r32_r32_1         xorl %edx, %eax           #  32    0x2f  2      OPC=xorl_r32_r32_1       
  nop                       #  33    0x31  1      OPC=nop                    nop                       #  33    0x31  1      OPC=nop                  
  nop                       #  34    0x32  1      OPC=nop                    nop                       #  34    0x32  1      OPC=nop                  
  nop                       #  35    0x33  1      OPC=nop                    nop                       #  35    0x33  1      OPC=nop                  
  nop                       #  36    0x34  1      OPC=nop                    nop                       #  36    0x34  1      OPC=nop                  
  nop                       #  37    0x35  1      OPC=nop                    nop                       #  37    0x35  1      OPC=nop                  
  subl %edi, %eax           #  38    0x36  2      OPC=subl_r32_r32           subl %edi, %eax           #  38    0x36  2      OPC=subl_r32_r32         
  nop                       #  39    0x38  1      OPC=nop                    nop                       #  39    0x38  1      OPC=nop                  
  nop                       #  40    0x39  1      OPC=nop                    nop                       #  40    0x39  1      OPC=nop                  
  nop                       #  41    0x3a  1      OPC=nop                    nop                       #  41    0x3a  1      OPC=nop                  
  nop                       #  42    0x3b  1      OPC=nop                    nop                       #  42    0x3b  1      OPC=nop                  
  nop                       #  43    0x3c  1      OPC=nop                    nop                       #  43    0x3c  1      OPC=nop                  
  shrl $0x2, %eax           #  44    0x3d  3      OPC=shrl_r32_imm8          shrl $0x2, %eax           #  44    0x3d  3      OPC=shrl_r32_imm8        
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  45    0x40  1      OPC=nop                    nop                       #  45    0x40  1      OPC=nop                  
  nop                       #  46    0x41  1      OPC=nop                    nop                       #  46    0x41  1      OPC=nop                  
  popq %r11                 #  47    0x42  2      OPC=popq_r64_1             popq %r11                 #  47    0x42  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  48    0x44  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  48    0x44  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  49    0x48  3      OPC=addq_r64_r64           addq %r15, %r11           #  49    0x48  3      OPC=addq_r64_r64         
  jmpq %r11                 #  50    0x4b  3      OPC=jmpq_r64               jmpq %r11                 #  50    0x4b  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (55)                                              Lowest Known Correct Cost (55)                                           
                                                                                                                                                  
  .text                                                                    .text                                                                  
  .globl wcslen                                                            .globl wcslen                                                          
  .type wcslen, @function                                                  .type wcslen, @function                                                
                                                                                                                                                  
#! file-offset 0                                                         #! file-offset 0                                                         
#! rip-offset  0                                                         #! rip-offset  0                                                         
#! capacity    0 bytes                                                   #! capacity    0 bytes                                                   
                                                                                                                                                  
# Text                     #  Line  RIP   Bytes  Opcode                  # Text                     #  Line  RIP   Bytes  Opcode                  
.wcslen:                   #        0     0      OPC=<label>             .wcslen:                   #        0     0      OPC=<label>             
  movl %edi, %edx          #  1     0     2      OPC=movl_r32_r32          movl %edi, %edx          #  1     0     2      OPC=movl_r32_r32        
  movw (%r15,%rdx,1), %cx  #  2     0x2   5      OPC=movw_r16_m16          movw (%r15,%rdx,1), %cx  #  2     0x2   5      OPC=movw_r16_m16        
  xorl %eax, %eax          #  3     0x7   2      OPC=xorl_r32_r32          xorl %eax, %eax          #  3     0x7   2      OPC=xorl_r32_r32        
  nop                      #  4     0x9   1      OPC=nop                   nop                      #  4     0x9   1      OPC=nop                 
  nop                      #  5     0xa   1      OPC=nop                   nop                      #  5     0xa   1      OPC=nop                 
  nop                      #  6     0xb   1      OPC=nop                   nop                      #  6     0xb   1      OPC=nop                 
  nop                      #  7     0xc   1      OPC=nop                   nop                      #  7     0xc   1      OPC=nop                 
  nop                      #  8     0xd   1      OPC=nop                   nop                      #  8     0xd   1      OPC=nop                 
  nop                      #  9     0xe   1      OPC=nop                   nop                      #  9     0xe   1      OPC=nop                 
  nop                      #  10    0xf   1      OPC=nop                   nop                      #  10    0xf   1      OPC=nop                 
  nop                      #  11    0x10  1      OPC=nop                   nop                      #  11    0x10  1      OPC=nop                 
  nop                      #  12    0x11  1      OPC=nop                   nop                      #  12    0x11  1      OPC=nop                 
  nop                      #  13    0x12  1      OPC=nop                   nop                      #  13    0x12  1      OPC=nop                 
  nop                      #  14    0x13  1      OPC=nop                   nop                      #  14    0x13  1      OPC=nop                 
  xorb %cl, %al            #  15    0x14  2      OPC=xorb_r8_r8            xorb %cl, %al            #  15    0x14  2      OPC=xorb_r8_r8          
  je .L_142ce0             #  16    0x16  2      OPC=je_label              je .L_142ce0             #  16    0x16  2      OPC=je_label            
  nop                      #  17    0x18  1      OPC=nop                   nop                      #  17    0x18  1      OPC=nop                 
  nop                      #  18    0x19  1      OPC=nop                   nop                      #  18    0x19  1      OPC=nop                 
  nop                      #  19    0x1a  1      OPC=nop                   nop                      #  19    0x1a  1      OPC=nop                 
  nop                      #  20    0x1b  1      OPC=nop                   nop                      #  20    0x1b  1      OPC=nop                 
  nop                      #  21    0x1c  1      OPC=nop                   nop                      #  21    0x1c  1      OPC=nop                 
  nop                      #  22    0x1d  1      OPC=nop                   nop                      #  22    0x1d  1      OPC=nop                 
  nop                      #  23    0x1e  1      OPC=nop                   nop                      #  23    0x1e  1      OPC=nop                 
  nop                      #  24    0x1f  1      OPC=nop                   nop                      #  24    0x1f  1      OPC=nop                 
.L_142cc0:                 #        0x20  0      OPC=<label>             .L_142cc0:                 #        0x20  0      OPC=<label>             
  sarq $0x20, %rax         #  25    0x20  4      OPC=sarq_r64_imm8         sarq $0x20, %rax         #  25    0x20  4      OPC=sarq_r64_imm8       
  addl $0x4, %edx          #  26    0x24  3      OPC=addl_r32_imm8         addl $0x4, %edx          #  26    0x24  3      OPC=addl_r32_imm8       
  xorw (%r15,%rdx,1), %ax  #  27    0x27  5      OPC=xorw_r16_m16          xorw (%r15,%rdx,1), %ax  #  27    0x27  5      OPC=xorw_r16_m16        
  jne .L_142cc0            #  28    0x2c  2      OPC=jne_label             jne .L_142cc0            #  28    0x2c  2      OPC=jne_label           
  nop                      #  29    0x2e  1      OPC=nop                   nop                      #  29    0x2e  1      OPC=nop                 
  subq %rdi, %rdx          #  30    0x2f  3      OPC=subq_r64_r64          subq %rdi, %rdx          #  30    0x2f  3      OPC=subq_r64_r64        
  nop                      #  31    0x32  1      OPC=nop                   nop                      #  31    0x32  1      OPC=nop                 
  orw %dx, %ax             #  32    0x33  3      OPC=orw_r16_r16           orw %dx, %ax             #  32    0x33  3      OPC=orw_r16_r16         
  nop                      #  33    0x36  1      OPC=nop                   nop                      #  33    0x36  1      OPC=nop                 
  nop                      #  34    0x37  1      OPC=nop                   nop                      #  34    0x37  1      OPC=nop                 
  nop                      #  35    0x38  1      OPC=nop                   nop                      #  35    0x38  1      OPC=nop                 
  nop                      #  36    0x39  1      OPC=nop                   nop                      #  36    0x39  1      OPC=nop                 
  nop                      #  37    0x3a  1      OPC=nop                   nop                      #  37    0x3a  1      OPC=nop                 
  nop                      #  38    0x3b  1      OPC=nop                   nop                      #  38    0x3b  1      OPC=nop                 
  nop                      #  39    0x3c  1      OPC=nop                   nop                      #  39    0x3c  1      OPC=nop                 
  nop                      #  40    0x3d  1      OPC=nop                   nop                      #  40    0x3d  1      OPC=nop                 
  nop                      #  41    0x3e  1      OPC=nop                   nop                      #  41    0x3e  1      OPC=nop                 
  nop                      #  42    0x3f  1      OPC=nop                   nop                      #  42    0x3f  1      OPC=nop                 
.L_142ce0:                 #        0x40  0      OPC=<label>             .L_142ce0:                 #        0x40  0      OPC=<label>             
  nop                      #  43    0x40  1      OPC=nop                   nop                      #  43    0x40  1      OPC=nop                 
  nop                      #  44    0x41  1      OPC=nop                   nop                      #  44    0x41  1      OPC=nop                 
  nop                      #  45    0x42  1      OPC=nop                   nop                      #  45    0x42  1      OPC=nop                 
  nop                      #  46    0x43  1      OPC=nop                   nop                      #  46    0x43  1      OPC=nop                 
  nop                      #  47    0x44  1      OPC=nop                   nop                      #  47    0x44  1      OPC=nop                 
  nop                      #  48    0x45  1      OPC=nop                   nop                      #  48    0x45  1      OPC=nop                 
  nop                      #  49    0x46  1      OPC=nop                   nop                      #  49    0x46  1      OPC=nop                 
  nop                      #  50    0x47  1      OPC=nop                   nop                      #  50    0x47  1      OPC=nop                 
  nop                      #  51    0x48  1      OPC=nop                   nop                      #  51    0x48  1      OPC=nop                 
  nop                      #  52    0x49  1      OPC=nop                   nop                      #  52    0x49  1      OPC=nop                 
  nop                      #  53    0x4a  1      OPC=nop                   nop                      #  53    0x4a  1      OPC=nop                 
  nop                      #  54    0x4b  1      OPC=nop                   nop                      #  54    0x4b  1      OPC=nop                 
  nop                      #  55    0x4c  1      OPC=nop                   nop                      #  55    0x4c  1      OPC=nop                 
  nop                      #  56    0x4d  1      OPC=nop                   nop                      #  56    0x4d  1      OPC=nop                 
  nop                      #  57    0x4e  1      OPC=nop                   nop                      #  57    0x4e  1      OPC=nop                 
  sarw $0x2, %ax           #  58    0x4f  4      OPC=sarw_r16_imm8         sarw $0x2, %ax           #  58    0x4f  4      OPC=sarw_r16_imm8       
  popq %r11                #  59    0x53  2      OPC=popq_r64_1            popq %r11                #  59    0x53  2      OPC=popq_r64_1          
  andl $0xe0, %r11d        #  60    0x55  4      OPC=andl_r32_imm8         andl $0xe0, %r11d        #  60    0x55  4      OPC=andl_r32_imm8       
  addq %r15, %r11          #  61    0x59  3      OPC=addq_r64_r64          addq %r15, %r11          #  61    0x59  3      OPC=addq_r64_r64        
  jmpq %r11                #  62    0x5c  3      OPC=jmpq_r64              jmpq %r11                #  62    0x5c  3      OPC=jmpq_r64            
                                                                                                                                                  
.size wcslen, .-wcslen                                                   .size wcslen, .-wcslen                                                   
                                                                                                                                                  

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  67.9077s
Iterations/s:                  1472.59

Starting cost:                 72
Lowest cost:                   55
Lowest correct cost:           55

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.415%       4.91%         4.127%       
Operand         8.295%       4.01%         1.471%       
Opcode          8.236%       7.255%        6.679%       
Global Copy     8.27%        6.983%        6.983%       
Global Swap     8.369%       6.234%        4.754%       
Rotate          8.239%       6.532%        3.71%        
ReplaceNop      8.293%       7.26%         6.36%        
Delete          8.375%       7.402%        4.911%       
Instruction     8.455%       4.967%        0.607%       
Add Nops        8.275%       8.275%        4.415%       
OpcodeWidth     8.343%       6.68%         6.314%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.435%       1.333%        0.002%       
                                                        
Total           100%         71.841%       50.333%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  142.975s
Iterations/s:                  1398.84

Starting cost:                 72
Lowest cost:                   55
Lowest correct cost:           55

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.329%       5.1555%       4.3375%      
Operand         8.2995%      3.972%        1.539%       
Opcode          8.325%       7.37%         6.823%       
Global Copy     8.3035%      6.989%        6.989%       
Global Swap     8.306%       6.229%        4.819%       
Rotate          8.2545%      6.5565%       3.798%       
ReplaceNop      8.269%       7.282%        6.4065%      
Delete          8.37%        7.367%        4.9485%      
Instruction     8.3695%      4.954%        0.6065%      
Add Nops        8.3585%      8.3585%       4.468%       
OpcodeWidth     8.398%       6.7495%       6.3765%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.4175%      1.431%        0.002%       
                                                        
Total           100%         72.414%       51.1135%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  223.673s
Iterations/s:                  1341.24

Starting cost:                 72
Lowest cost:                   55
Lowest correct cost:           55

Move Type       Proposed     Succeeded     Accepted        
                                                           
Local Swap      8.28267%     5.23133%      4.41633%        
Operand         8.335%       4.046%        1.59%           
Opcode          8.346%       7.44867%      6.91733%        
Global Copy     8.33533%     7.108%        7.108%          
Global Swap     8.30433%     6.379%        5.03267%        
Rotate          8.25267%     6.67133%      3.94267%        
ReplaceNop      8.35467%     7.43667%      6.61367%        
Delete          8.37233%     7.45167%      5.14333%        
Instruction     8.35167%     5.01733%      0.636333%       
Add Nops        8.33167%     8.33167%      4.652%          
OpcodeWidth     8.33367%     6.826%        6.46667%        
2xWeighted      0%           0%            0%              
Memory+Swap     8.4%         1.43233%      0.00133333%     
                                                           
Total           100%         73.38%        52.5203%        

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  311.875s
Iterations/s:                  1282.57

Starting cost:                 72
Lowest cost:                   55
Lowest correct cost:           55

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.28925%     5.3215%       4.51275%     
Operand         8.32725%     4.149%        1.684%       
Opcode          8.32875%     7.50625%      7.02%        
Global Copy     8.2845%      7.16875%      7.16875%     
Global Swap     8.336%       6.561%        5.286%       
Rotate          8.25925%     6.81475%      4.17775%     
ReplaceNop      8.3885%      7.549%        6.8025%      
Delete          8.35025%     7.507%        5.3455%      
Instruction     8.37775%     5.053%        0.65275%     
Add Nops        8.3075%      8.3075%       4.84275%     
OpcodeWidth     8.36375%     6.97775%      6.63425%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.38725%     1.42475%      0.00175%     
                                                        
Total           100%         74.3402%      54.1287%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  410.092s
Iterations/s:                  1219.24

Starting cost:                 72
Lowest cost:                   55
Lowest correct cost:           55

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.2742%      5.3904%       4.5862%      
Operand         8.3396%      4.2722%       1.8212%      
Opcode          8.3466%      7.5946%       7.1498%      
Global Copy     8.2806%      7.2522%       7.2522%      
Global Swap     8.352%       6.7332%       5.5296%      
Rotate          8.2928%      6.9776%       4.4238%      
ReplaceNop      8.358%       7.594%        6.919%       
Delete          8.3442%      7.5738%       5.55%        
Instruction     8.3766%      5.0714%       0.6652%      
Add Nops        8.3166%      8.3166%       5.0312%      
OpcodeWidth     8.3262%      7.0506%       6.731%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.3926%      1.425%        0.0014%      
                                                        
Total           100%         75.2516%      55.6606%     

********************************************************************************

TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edx
movw (%r15,%rdx,1), %cx
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
xorb %cl, %al
nop 
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sarw $0x2, %ax
retq 
Total accesses: 2
SAME MAP
     0 1 
------------------
0  |   1 
1  |     

NEXT MAP
     0 1 
------------------
0  |   0 
1  |     

TOTAL CELLS: 1
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 2 (cell size 4)
ALIASING CASES: 1
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edx
movw (%r15,%rdx,1), %cx
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
xorb %cl, %al
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
sarq $0x20, %rax
addl $0x4, %edx
xorw (%r15,%rdx,1), %ax
nop 
nop 
subq %rdi, %rdx
nop 
orw %dx, %ax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sarw $0x2, %ax
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   1 0 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 2 (cell size 4)
Access 2 cell 1 offset 0 size 2 (cell size 2)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edx
movw (%r15,%rdx,1), %cx
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
xorb %cl, %al
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
sarq $0x20, %rax
addl $0x4, %edx
xorw (%r15,%rdx,1), %ax
nop 
.L_142cc0:
sarq $0x20, %rax
addl $0x4, %edx
xorw (%r15,%rdx,1), %ax
nop 
nop 
subq %rdi, %rdx
nop 
orw %dx, %ax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sarw $0x2, %ax
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   1 0 0 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 2 (cell size 4)
Access 2 cell 1 offset 0 size 2 (cell size 2)
Access 3 cell 2 offset 0 size 2 (cell size 2)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edx
movw (%r15,%rdx,1), %cx
xorl %eax, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
xorb %cl, %al
nop 
.L_142ce0:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sarw $0x2, %ax
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   0 1 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 2 (cell size 4)
Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     00 00 00 00 00 00 00 00
%rcx     00 00 00 00 00 00 00 00
%rdx     00 00 00 00 00 00 00 00
%rbx     00 00 00 00 00 00 00 00
%rsp     00 00 00 00 00 00 00 00
%rbp     00 00 00 00 00 00 00 00
%rsi     00 00 00 00 00 00 00 00
%rdi     00 00 00 00 ff ff ff ff
%r8      00 00 00 00 00 00 00 00
%r9      00 00 00 00 00 00 00 00
%r10     00 00 00 00 00 00 00 00
%r11     00 00 00 00 00 00 00 00
%r12     00 00 00 00 00 00 00 00
%r13     00 00 00 00 00 00 00 00
%r14     00 00 00 00 00 00 00 00
%r15     7f ff ff ff ff ff ff ed

%ymm0    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm1    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm2    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm3    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm4    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm5    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm6    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm7    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm8    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm9    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm10   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm11   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm12   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm13   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm14   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm15   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 80000000 fffffff0 - 80000000 ffffffe0 ]
[ 1 valid rows shown ]

80000000 ffffffe8   v v v v . . . .   40 00 00 00 00 00 00 00 

[ 7fffffff fffffff8 - 7fffffff ffffffe0 ]
[ 1 valid rows shown ]

7fffffff fffffff0   . . . . v v v v   00 00 00 00 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (56)                                               Lowest Known Correct Cost (67)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  movq %rdi, %rdx           #  1     0     3      OPC=movq_r64_r64          movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x3   1      OPC=nop                   xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x4   1      OPC=nop                   movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  4     0x5   2      OPC=xorl_r32_r32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl %edi, %edi           #  5     0x7   2      OPC=movl_r32_r32          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  movl (%r15,%rdi,1), %ecx  #  6     0x9   4      OPC=movl_r32_m32          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xd   1      OPC=nop                   je .L_142ce0              #  7     0xf   2      OPC=je_label            
  testl %ecx, %ecx          #  8     0xe   2      OPC=testl_r32_r32         nop                       #  8     0x11  1      OPC=nop                 
  je .L_142ce0              #  9     0x10  2      OPC=je_label              nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x12  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x13  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                 .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x20  0      OPC=<label>               addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8         movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32          movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32         testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label             jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32          subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2f  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x30  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x31  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x32  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x33  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x34  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x35  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  sarl $0x2, %eax           #  37    0x36  3      OPC=sarl_r32_imm8         nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
.L_142ce0:                  #        0x3b  0      OPC=<label>               nop                       #  40    0x3d  1      OPC=nop                 
  popq %r11                 #  40    0x3b  2      OPC=popq_r64_1            nop                       #  41    0x3e  1      OPC=nop                 
  andl $0xe0, %r11d         #  41    0x3d  4      OPC=andl_r32_imm8         nop                       #  42    0x3f  1      OPC=nop                 
  addq %r15, %r11           #  42    0x41  3      OPC=addq_r64_r64        .L_142ce0:                  #        0x40  0      OPC=<label>             
  jmpq %r11                 #  43    0x44  3      OPC=jmpq_r64              popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
                                                                            andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
.size wcslen, .-wcslen                                                      addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
                                                                            jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (55)                                                Lowest Known Correct Cost (67)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  movq %rdi, %rdx           #  1     0     3      OPC=movq_r64_r64_1         movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x3   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x4   1      OPC=nop                    movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x5   1      OPC=nop                    movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0x6   1      OPC=nop                    movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  movl %edi, %edi           #  6     0x7   2      OPC=movl_r32_r32           testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  movl (%r15,%rdi,1), %ecx  #  7     0x9   4      OPC=movl_r32_m32           je .L_142ce0              #  7     0xf   2      OPC=je_label            
  xorl %eax, %eax           #  8     0xd   2      OPC=xorl_r32_r32           nop                       #  8     0x11  1      OPC=nop                 
  testl %ecx, %ecx          #  9     0xf   2      OPC=testl_r32_r32          nop                       #  9     0x12  1      OPC=nop                 
  je .L_142ce0              #  10    0x11  2      OPC=je_label               nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x13  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x20  0      OPC=<label>                addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32           movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32           subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2f  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x32  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x33  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x34  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x35  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x36  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  sarl $0x2, %eax           #  38    0x37  3      OPC=sarl_r32_imm8          nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
.L_142ce0:                  #        0x3c  0      OPC=<label>                nop                       #  41    0x3e  1      OPC=nop                 
  popq %r11                 #  41    0x3c  2      OPC=popq_r64_1             nop                       #  42    0x3f  1      OPC=nop                 
  andl $0xe0, %r11d         #  42    0x3e  4      OPC=andl_r32_imm8        .L_142ce0:                  #        0x40  0      OPC=<label>             
  addq %r15, %r11           #  43    0x42  3      OPC=addq_r64_r64           popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  jmpq %r11                 #  44    0x45  3      OPC=jmpq_r64               andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
                                                                             addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
.size wcslen, .-wcslen                                                       jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                     
                                                                           .size wcslen, .-wcslen                                                    
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (54)                                                Lowest Known Correct Cost (67)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  movq %rdi, %rdx           #  1     0     3      OPC=movq_r64_r64_1         movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x3   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x4   1      OPC=nop                    movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x5   1      OPC=nop                    movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0x6   1      OPC=nop                    movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  movl %edi, %edi           #  6     0x7   2      OPC=movl_r32_r32           testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  movl (%r15,%rdi,1), %ecx  #  7     0x9   4      OPC=movl_r32_m32           je .L_142ce0              #  7     0xf   2      OPC=je_label            
  xorl %eax, %eax           #  8     0xd   2      OPC=xorl_r32_r32           nop                       #  8     0x11  1      OPC=nop                 
  testl %ecx, %ecx          #  9     0xf   2      OPC=testl_r32_r32          nop                       #  9     0x12  1      OPC=nop                 
  je .L_142ce0              #  10    0x11  2      OPC=je_label               nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x13  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x20  0      OPC=<label>                addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32           movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32           subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2f  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x32  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x33  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x34  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x35  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x36  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x37  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  sarl $0x2, %eax           #  39    0x38  3      OPC=sarl_r32_imm8          nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
.L_142ce0:                  #        0x3d  0      OPC=<label>                nop                       #  42    0x3f  1      OPC=nop                 
  popq %r11                 #  42    0x3d  2      OPC=popq_r64_1           .L_142ce0:                  #        0x40  0      OPC=<label>             
  andl $0xe0, %r11d         #  43    0x3f  4      OPC=andl_r32_imm8          popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  addq %r15, %r11           #  44    0x43  3      OPC=addq_r64_r64           andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  jmpq %r11                 #  45    0x46  3      OPC=jmpq_r64               addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
                                                                             jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
.size wcslen, .-wcslen                                                                                                                               
                                                                           .size wcslen, .-wcslen                                                    
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (53)                                                Lowest Known Correct Cost (67)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  movq %rdi, %rdx           #  1     0     3      OPC=movq_r64_r64_1         movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x3   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x4   1      OPC=nop                    movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x5   1      OPC=nop                    movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0x6   1      OPC=nop                    movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0x7   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  movl %edi, %edi           #  7     0x8   2      OPC=movl_r32_r32           je .L_142ce0              #  7     0xf   2      OPC=je_label            
  movl (%r15,%rdi,1), %ecx  #  8     0xa   4      OPC=movl_r32_m32           nop                       #  8     0x11  1      OPC=nop                 
  xorl %eax, %eax           #  9     0xe   2      OPC=xorl_r32_r32           nop                       #  9     0x12  1      OPC=nop                 
  testl %ecx, %ecx          #  10    0x10  2      OPC=testl_r32_r32          nop                       #  10    0x13  1      OPC=nop                 
  je .L_142ce0              #  11    0x12  2      OPC=je_label               nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
  nop                       #  24    0x20  1      OPC=nop                    addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  nop                       #  25    0x21  1      OPC=nop                    movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
.L_142cc0:                  #        0x22  0      OPC=<label>                movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  addl $0x4, %edx           #  26    0x22  3      OPC=addl_r32_imm8          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  movl (%r15,%rdx,1), %eax  #  27    0x25  4      OPC=movl_r32_m32           jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  testl %eax, %eax          #  28    0x29  2      OPC=testl_r32_r32          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  29    0x2b  2      OPC=jne_label              subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  movl %edx, %eax           #  30    0x2d  2      OPC=movl_r32_r32           sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  subl %edi, %eax           #  31    0x2f  2      OPC=subl_r32_r32           nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x32  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x33  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x34  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x35  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x36  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x37  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x38  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x39  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nopl %eax                 #  41    0x3a  3      OPC=nopl_r32               nop                       #  41    0x3e  1      OPC=nop                 
  sarl $0x2, %eax           #  42    0x3d  3      OPC=sarl_r32_imm8          nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  43    0x40  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  44    0x41  1      OPC=nop                    popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
.L_142ce0:                  #        0x42  0      OPC=<label>                andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  nop                       #  45    0x42  1      OPC=nop                    addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  popq %r11                 #  46    0x43  2      OPC=popq_r64_1             jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  andl $0xe0, %r11d         #  47    0x45  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11           #  48    0x49  3      OPC=addq_r64_r64         .size wcslen, .-wcslen                                                    
  jmpq %r11                 #  49    0x4c  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (52)                                                Lowest Known Correct Cost (67)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  movq %rdi, %rdx           #  1     0     3      OPC=movq_r64_r64_1         movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x3   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x4   1      OPC=nop                    movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x5   1      OPC=nop                    movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0x6   1      OPC=nop                    movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0x7   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  movl %edi, %edi           #  7     0x8   2      OPC=movl_r32_r32           je .L_142ce0              #  7     0xf   2      OPC=je_label            
  movl (%r15,%rdi,1), %ecx  #  8     0xa   4      OPC=movl_r32_m32           nop                       #  8     0x11  1      OPC=nop                 
  xorl %eax, %eax           #  9     0xe   2      OPC=xorl_r32_r32           nop                       #  9     0x12  1      OPC=nop                 
  testl %ecx, %ecx          #  10    0x10  2      OPC=testl_r32_r32          nop                       #  10    0x13  1      OPC=nop                 
  je .L_142ce0              #  11    0x12  2      OPC=je_label               nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
  nop                       #  24    0x20  1      OPC=nop                    addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
.L_142cc0:                  #        0x21  0      OPC=<label>                movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  addl $0x4, %edx           #  25    0x21  3      OPC=addl_r32_imm8          movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl (%r15,%rdx,1), %eax  #  26    0x24  4      OPC=movl_r32_m32           testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  testl %eax, %eax          #  27    0x28  2      OPC=testl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  jne .L_142cc0             #  28    0x2a  2      OPC=jne_label              movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  movl %edx, %eax           #  29    0x2c  2      OPC=movl_r32_r32           subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32           sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x32  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x33  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x34  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x35  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x36  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x37  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x38  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x39  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  sarl $0x2, %eax           #  41    0x3a  3      OPC=sarl_r32_imm8          nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3d  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
  nopl %eax                 #  43    0x3e  3      OPC=nopl_r32             .L_142ce0:                  #        0x40  0      OPC=<label>             
.L_142ce0:                  #        0x41  0      OPC=<label>                popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  nop                       #  44    0x41  1      OPC=nop                    andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  popq %r11                 #  45    0x42  2      OPC=popq_r64_1             addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  andl $0xe0, %r11d         #  46    0x44  4      OPC=andl_r32_imm8          jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  addq %r15, %r11           #  47    0x48  3      OPC=addq_r64_r64                                                                                   
  jmpq %r11                 #  48    0x4b  3      OPC=jmpq_r64             .size wcslen, .-wcslen                                                    
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (52)                                                Lowest Known Correct Cost (52)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  movq %rdi, %rdx           #  1     0     3      OPC=movq_r64_r64_1         xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  nop                       #  2     0x3   1      OPC=nop                    nop                       #  2     0x2   1      OPC=nop                  
  nop                       #  3     0x4   1      OPC=nop                    nop                       #  3     0x3   1      OPC=nop                  
  nop                       #  4     0x5   1      OPC=nop                    movl %edi, %edx           #  4     0x4   2      OPC=movl_r32_r32_1       
  nop                       #  5     0x6   1      OPC=nop                    movl (%r15,%rdx,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32         
  nop                       #  6     0x7   1      OPC=nop                    nop                       #  6     0xa   1      OPC=nop                  
  movl %edi, %edi           #  7     0x8   2      OPC=movl_r32_r32           nop                       #  7     0xb   1      OPC=nop                  
  movl (%r15,%rdi,1), %ecx  #  8     0xa   4      OPC=movl_r32_m32           nop                       #  8     0xc   1      OPC=nop                  
  xorl %eax, %eax           #  9     0xe   2      OPC=xorl_r32_r32           nop                       #  9     0xd   1      OPC=nop                  
  testl %ecx, %ecx          #  10    0x10  2      OPC=testl_r32_r32          testl %ecx, %edi          #  10    0xe   2      OPC=testl_r32_r32        
  je .L_142ce0              #  11    0x12  2      OPC=je_label               je .L_142ce0              #  11    0x10  2      OPC=je_label             
  nop                       #  12    0x14  1      OPC=nop                    nopl %eax                 #  12    0x12  3      OPC=nopl_r32             
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x15  1      OPC=nop                  
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x16  1      OPC=nop                  
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x17  1      OPC=nop                  
  nop                       #  16    0x18  1      OPC=nop                    salw $0xc0, %di           #  16    0x18  4      OPC=salw_r16_imm8        
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1c  1      OPC=nop                  
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1d  1      OPC=nop                  
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1e  1      OPC=nop                  
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1f  1      OPC=nop                  
  nop                       #  21    0x1d  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>              
  nop                       #  22    0x1e  1      OPC=nop                    addl $0x4, %edx           #  21    0x20  3      OPC=addl_r32_imm8        
  nop                       #  23    0x1f  1      OPC=nop                    movl (%r15,%rdx,1), %eax  #  22    0x23  4      OPC=movl_r32_m32         
  nop                       #  24    0x20  1      OPC=nop                    testl %eax, %ecx          #  23    0x27  2      OPC=testl_r32_r32        
.L_142cc0:                  #        0x21  0      OPC=<label>                jne .L_142cc0             #  24    0x29  2      OPC=jne_label            
  addl $0x4, %edx           #  25    0x21  3      OPC=addl_r32_imm8          xorl %edx, %eax           #  25    0x2b  2      OPC=xorl_r32_r32_1       
  movl (%r15,%rdx,1), %eax  #  26    0x24  4      OPC=movl_r32_m32           nop                       #  26    0x2d  1      OPC=nop                  
  testl %eax, %eax          #  27    0x28  2      OPC=testl_r32_r32          nop                       #  27    0x2e  1      OPC=nop                  
  jne .L_142cc0             #  28    0x2a  2      OPC=jne_label              subl %edi, %eax           #  28    0x2f  2      OPC=subl_r32_r32         
  movl %edx, %eax           #  29    0x2c  2      OPC=movl_r32_r32           nop                       #  29    0x31  1      OPC=nop                  
  subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32           sarl $0x2, %eax           #  30    0x32  3      OPC=sarl_r32_imm8        
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x35  1      OPC=nop                  
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x36  1      OPC=nop                  
  nop                       #  33    0x32  1      OPC=nop                    nop                       #  33    0x37  1      OPC=nop                  
  nop                       #  34    0x33  1      OPC=nop                    nop                       #  34    0x38  1      OPC=nop                  
  nop                       #  35    0x34  1      OPC=nop                    nop                       #  35    0x39  1      OPC=nop                  
  nop                       #  36    0x35  1      OPC=nop                    nop                       #  36    0x3a  1      OPC=nop                  
  nop                       #  37    0x36  1      OPC=nop                    nop                       #  37    0x3b  1      OPC=nop                  
  nop                       #  38    0x37  1      OPC=nop                    nop                       #  38    0x3c  1      OPC=nop                  
  nop                       #  39    0x38  1      OPC=nop                    nop                       #  39    0x3d  1      OPC=nop                  
  nop                       #  40    0x39  1      OPC=nop                    nop                       #  40    0x3e  1      OPC=nop                  
  sarl $0x2, %eax           #  41    0x3a  3      OPC=sarl_r32_imm8          nop                       #  41    0x3f  1      OPC=nop                  
  nop                       #  42    0x3d  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>              
  nopl %eax                 #  43    0x3e  3      OPC=nopl_r32               nop                       #  42    0x40  1      OPC=nop                  
.L_142ce0:                  #        0x41  0      OPC=<label>                nop                       #  43    0x41  1      OPC=nop                  
  nop                       #  44    0x41  1      OPC=nop                    nop                       #  44    0x42  1      OPC=nop                  
  popq %r11                 #  45    0x42  2      OPC=popq_r64_1             nop                       #  45    0x43  1      OPC=nop                  
  andl $0xe0, %r11d         #  46    0x44  4      OPC=andl_r32_imm8          nop                       #  46    0x44  1      OPC=nop                  
  addq %r15, %r11           #  47    0x48  3      OPC=addq_r64_r64           nop                       #  47    0x45  1      OPC=nop                  
  jmpq %r11                 #  48    0x4b  3      OPC=jmpq_r64               nop                       #  48    0x46  1      OPC=nop                  
                                                                             nop                       #  49    0x47  1      OPC=nop                  
.size wcslen, .-wcslen                                                       nop                       #  50    0x48  1      OPC=nop                  
                                                                             nop                       #  51    0x49  1      OPC=nop                  
                                                                             nop                       #  52    0x4a  1      OPC=nop                  
                                                                             nop                       #  53    0x4b  1      OPC=nop                  
                                                                             nop                       #  54    0x4c  1      OPC=nop                  
                                                                             nop                       #  55    0x4d  1      OPC=nop                  
                                                                             nop                       #  56    0x4e  1      OPC=nop                  
                                                                             popq %r11                 #  57    0x4f  2      OPC=popq_r64_1           
                                                                             andl $0xe0, %r11d         #  58    0x51  4      OPC=andl_r32_imm8        
                                                                             addq %r15, %r11           #  59    0x55  3      OPC=addq_r64_r64         
                                                                             jmpq %r11                 #  60    0x58  3      OPC=jmpq_r64             
                                                                                                                                                      
                                                                           .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (51)                                                Lowest Known Correct Cost (51)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x2   1      OPC=nop                  
  nop                       #  4     0x3   1      OPC=nop                    nop                       #  4     0x3   1      OPC=nop                  
  nop                       #  5     0x4   1      OPC=nop                    nop                       #  5     0x4   1      OPC=nop                  
  nop                       #  6     0x5   1      OPC=nop                    nop                       #  6     0x5   1      OPC=nop                  
  movl %edi, %edx           #  7     0x6   2      OPC=movl_r32_r32_1         movl %edi, %edx           #  7     0x6   2      OPC=movl_r32_r32_1       
  movl (%r15,%rdx,1), %ecx  #  8     0x8   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  8     0x8   4      OPC=movl_r32_m32         
  xorl %eax, %eax           #  9     0xc   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  9     0xc   2      OPC=xorl_r32_r32         
  testl %ecx, %edx          #  10    0xe   2      OPC=testl_r32_r32          testl %ecx, %edx          #  10    0xe   2      OPC=testl_r32_r32        
  je .L_142ce0              #  11    0x10  2      OPC=je_label               je .L_142ce0              #  11    0x10  2      OPC=je_label             
  nop                       #  12    0x12  1      OPC=nop                    nop                       #  12    0x12  1      OPC=nop                  
  nop                       #  13    0x13  1      OPC=nop                    nop                       #  13    0x13  1      OPC=nop                  
  nop                       #  14    0x14  1      OPC=nop                    nop                       #  14    0x14  1      OPC=nop                  
  nop                       #  15    0x15  1      OPC=nop                    nop                       #  15    0x15  1      OPC=nop                  
  nop                       #  16    0x16  1      OPC=nop                    nop                       #  16    0x16  1      OPC=nop                  
  nop                       #  17    0x17  1      OPC=nop                    nop                       #  17    0x17  1      OPC=nop                  
  nop                       #  18    0x18  1      OPC=nop                    nop                       #  18    0x18  1      OPC=nop                  
  nop                       #  19    0x19  1      OPC=nop                    nop                       #  19    0x19  1      OPC=nop                  
  nop                       #  20    0x1a  1      OPC=nop                    nop                       #  20    0x1a  1      OPC=nop                  
  nop                       #  21    0x1b  1      OPC=nop                    nop                       #  21    0x1b  1      OPC=nop                  
  nop                       #  22    0x1c  1      OPC=nop                    nop                       #  22    0x1c  1      OPC=nop                  
  nop                       #  23    0x1d  1      OPC=nop                    nop                       #  23    0x1d  1      OPC=nop                  
  nop                       #  24    0x1e  1      OPC=nop                    nop                       #  24    0x1e  1      OPC=nop                  
  nop                       #  25    0x1f  1      OPC=nop                    nop                       #  25    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  26    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  26    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  27    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  27    0x23  4      OPC=movl_r32_m32         
  testl %eax, %ecx          #  28    0x27  2      OPC=testl_r32_r32          testl %eax, %ecx          #  28    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  29    0x29  2      OPC=jne_label              jne .L_142cc0             #  29    0x29  2      OPC=jne_label            
  nop                       #  30    0x2b  1      OPC=nop                    nop                       #  30    0x2b  1      OPC=nop                  
  movl %edx, %eax           #  31    0x2c  2      OPC=movl_r32_r32           movl %edx, %eax           #  31    0x2c  2      OPC=movl_r32_r32         
  subl %edi, %eax           #  32    0x2e  2      OPC=subl_r32_r32           subl %edi, %eax           #  32    0x2e  2      OPC=subl_r32_r32         
  nop                       #  33    0x30  1      OPC=nop                    nop                       #  33    0x30  1      OPC=nop                  
  nop                       #  34    0x31  1      OPC=nop                    nop                       #  34    0x31  1      OPC=nop                  
  nop                       #  35    0x32  1      OPC=nop                    nop                       #  35    0x32  1      OPC=nop                  
  nop                       #  36    0x33  1      OPC=nop                    nop                       #  36    0x33  1      OPC=nop                  
  nop                       #  37    0x34  1      OPC=nop                    nop                       #  37    0x34  1      OPC=nop                  
  nop                       #  38    0x35  1      OPC=nop                    nop                       #  38    0x35  1      OPC=nop                  
  nop                       #  39    0x36  1      OPC=nop                    nop                       #  39    0x36  1      OPC=nop                  
  nop                       #  40    0x37  1      OPC=nop                    nop                       #  40    0x37  1      OPC=nop                  
  nop                       #  41    0x38  1      OPC=nop                    nop                       #  41    0x38  1      OPC=nop                  
  sarl $0x2, %eax           #  42    0x39  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  42    0x39  3      OPC=sarl_r32_imm8        
  nop                       #  43    0x3c  1      OPC=nop                    nop                       #  43    0x3c  1      OPC=nop                  
  nop                       #  44    0x3d  1      OPC=nop                    nop                       #  44    0x3d  1      OPC=nop                  
  nop                       #  45    0x3e  1      OPC=nop                    nop                       #  45    0x3e  1      OPC=nop                  
  nop                       #  46    0x3f  1      OPC=nop                    nop                       #  46    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  47    0x40  1      OPC=nop                    nop                       #  47    0x40  1      OPC=nop                  
  nop                       #  48    0x41  1      OPC=nop                    nop                       #  48    0x41  1      OPC=nop                  
  nop                       #  49    0x42  1      OPC=nop                    nop                       #  49    0x42  1      OPC=nop                  
  nop                       #  50    0x43  1      OPC=nop                    nop                       #  50    0x43  1      OPC=nop                  
  nop                       #  51    0x44  1      OPC=nop                    nop                       #  51    0x44  1      OPC=nop                  
  nop                       #  52    0x45  1      OPC=nop                    nop                       #  52    0x45  1      OPC=nop                  
  nop                       #  53    0x46  1      OPC=nop                    nop                       #  53    0x46  1      OPC=nop                  
  nop                       #  54    0x47  1      OPC=nop                    nop                       #  54    0x47  1      OPC=nop                  
  nop                       #  55    0x48  1      OPC=nop                    nop                       #  55    0x48  1      OPC=nop                  
  nop                       #  56    0x49  1      OPC=nop                    nop                       #  56    0x49  1      OPC=nop                  
  popq %r11                 #  57    0x4a  2      OPC=popq_r64_1             popq %r11                 #  57    0x4a  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  58    0x4c  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  58    0x4c  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  59    0x50  3      OPC=addq_r64_r64           addq %r15, %r11           #  59    0x50  3      OPC=addq_r64_r64         
  jmpq %r11                 #  60    0x53  3      OPC=jmpq_r64               jmpq %r11                 #  60    0x53  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  67.7867s
Iterations/s:                  1475.22

Starting cost:                 67
Lowest cost:                   51
Lowest correct cost:           51

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.478%       5.229%        4.382%       
Operand         8.385%       4.146%        1.524%       
Opcode          8.394%       7.201%        6.585%       
Global Copy     8.35%        6.98%         6.98%        
Global Swap     8.263%       6.057%        4.605%       
Rotate          8.365%       6.487%        3.655%       
ReplaceNop      8.301%       7.258%        6.302%       
Delete          8.211%       7.115%        4.492%       
Instruction     8.198%       4.886%        0.59%        
Add Nops        8.331%       8.331%        4.035%       
OpcodeWidth     8.394%       6.655%        6.236%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.33%        1.422%        0.002%       
                                                        
Total           100%         71.767%       49.388%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  143.204s
Iterations/s:                  1396.61

Starting cost:                 67
Lowest cost:                   51
Lowest correct cost:           51

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.393%       5.352%        4.5215%      
Operand         8.4005%      4.1515%       1.6415%      
Opcode          8.409%       7.4075%       6.8495%      
Global Copy     8.305%       7.1005%       7.1005%      
Global Swap     8.1955%      6.261%        4.9315%      
Rotate          8.401%       6.734%        3.9715%      
ReplaceNop      8.382%       7.4475%       6.6245%      
Delete          8.2335%      7.2605%       4.939%       
Instruction     8.272%       4.991%        0.6355%      
Add Nops        8.408%       8.408%        4.4625%      
OpcodeWidth     8.3225%      6.775%        6.3785%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.278%       1.4265%       0.001%       
                                                        
Total           100%         73.315%       52.057%      

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  224.564s
Iterations/s:                  1335.92

Starting cost:                 67
Lowest cost:                   51
Lowest correct cost:           51

Move Type       Proposed     Succeeded     Accepted         
                                                            
Local Swap      8.37933%     5.429%        4.59233%         
Operand         8.33833%     4.22033%      1.70433%         
Opcode          8.43533%     7.55233%      7.03133%         
Global Copy     8.31%        7.19767%      7.19767%         
Global Swap     8.21533%     6.437%        5.18767%         
Rotate          8.393%       6.88733%      4.207%           
ReplaceNop      8.33867%     7.48567%      6.72633%         
Delete          8.291%       7.40933%      5.247%           
Instruction     8.29067%     5.03967%      0.657333%        
Add Nops        8.38967%     8.38967%      4.747%           
OpcodeWidth     8.29433%     6.89033%      6.52233%         
2xWeighted      0%           0%            0%               
Memory+Swap     8.32433%     1.46%         0.000666667%     
                                                            
Total           100%         74.3983%      53.821%          

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  313.628s
Iterations/s:                  1275.4

Starting cost:                 67
Lowest cost:                   51
Lowest correct cost:           51

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.339%       5.46475%      4.6515%      
Operand         8.3385%      4.3095%       1.826%       
Opcode          8.408%       7.61875%      7.1425%      
Global Copy     8.34275%     7.323%        7.323%       
Global Swap     8.2065%      6.58825%      5.4135%      
Rotate          8.37675%     7.0235%       4.4165%      
ReplaceNop      8.3525%      7.56525%      6.879%       
Delete          8.28025%     7.47275%      5.41775%     
Instruction     8.301%       5.0855%       0.6715%      
Add Nops        8.3925%      8.3925%       4.91225%     
OpcodeWidth     8.33025%     7.0465%       6.70375%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.332%       1.467%        0.0005%      
                                                        
Total           100%         75.3572%      55.3578%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  417.485s
Iterations/s:                  1197.65

Starting cost:                 67
Lowest cost:                   51
Lowest correct cost:           51

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.35%        5.4924%       4.6818%      
Operand         8.3414%      4.4096%       1.9494%      
Opcode          8.3984%      7.6874%       7.257%       
Global Copy     8.3414%      7.413%        7.413%       
Global Swap     8.2316%      6.7436%       5.6434%      
Rotate          8.338%       7.1052%       4.6348%      
ReplaceNop      8.362%       7.6412%       7.0174%      
Delete          8.2712%      7.5426%       5.6268%      
Instruction     8.325%       5.1164%       0.6804%      
Add Nops        8.3876%      8.3876%       5.1068%      
OpcodeWidth     8.3416%      7.1614%       6.8434%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3118%      1.46%         0.0008%      
                                                        
Total           100%         76.1604%      56.855%      

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     d9 a8 af be dc be bf 80
%rcx     21 2d f0 e4 ec f4 4a 28
%rdx     68 e9 0c 40 a5 a7 7b 39
%rbx     51 20 74 8e c1 9c 80 02
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 39 e7 43 d7
%rdi     00 00 00 00 39 e7 47 24
%r8      01 8d ad 1b 25 4f d2 22
%r9      b9 f7 c7 ee 1c 52 7a bd
%r10     e9 88 bb b0 87 75 62 ff
%r11     ab f1 94 20 83 5c 76 44
%r12     6e 02 99 ee 8a 4f 43 d4
%r13     3e db 7c dd 62 c4 05 03
%r14     1e b1 f9 18 bd 91 b8 31
%r15     00 00 00 00 09 5d f1 c0

%ymm0    e9 ad 62 58 f4 dc 32 29 0b 2a 8f 8a 77 32 6f 80 64 98 c1 58 cd 17 72 46 89 15 8f 8b 97 8d b1 32
%ymm1    d7 42 31 9c b4 a3 2a 29 e1 f4 e4 7c 7f a2 b3 07 d5 7b 0b c4 21 60 0f 19 60 3d e5 7a 5e 28 ce 3c
%ymm2    9b 58 10 53 0f 51 59 a5 d5 65 64 e9 64 42 0f 5f af 29 ef e1 4d cb c8 70 87 88 14 02 08 72 cd 8c
%ymm3    73 6c 94 b4 1b 56 b0 0b 70 18 3d 29 67 79 a2 d4 80 96 a0 11 f5 0c 9b 80 63 28 b6 3f 7b 15 47 66
%ymm4    81 0b f5 a5 2c ac 44 d9 c3 1c af ce 93 02 d4 33 67 78 9d 35 0f a1 0a 9e 04 ce 27 b8 83 46 99 6d
%ymm5    29 61 1a 1e 35 2d 83 4d c7 9a 57 f2 c6 90 9f e6 57 03 05 20 6d 0b 3f 68 51 8c 6a f8 f5 e7 80 4d
%ymm6    23 b9 d3 ca a1 d8 83 1a 02 9f 53 12 8d 34 81 fa b1 0b 6b 2d f6 61 28 0e f1 17 4d d0 ac 1c df fa
%ymm7    25 07 af b3 b3 0c 89 d1 f8 15 24 7b 20 db 7c cc 9c 8d c9 03 83 c9 1c b9 10 83 b2 21 51 14 49 dd
%ymm8    d7 bd 97 0a a5 57 9d d7 d5 85 58 db f4 ac ea 91 0c 09 fe ea 4a 49 6d d7 bb 17 1d 8c 69 40 bc 0f
%ymm9    04 7c 0f 21 5e 8f b8 4b bd 8c 83 2b 81 01 32 f3 f9 59 dd 98 7c be 0b 31 e8 22 b6 e1 94 8c 45 a8
%ymm10   f7 1d 87 41 08 d0 50 7f 2c f8 16 c4 d8 20 8f 1b 52 34 69 fb 14 9d ab 97 c6 63 3d da 48 ca 3e a0
%ymm11   d4 b3 2b d8 4d 46 d8 8a bc 79 7d d0 ff a8 1b 91 e0 f2 46 bc a5 d9 9d ec 4e 92 cc cf 20 0a 52 2c
%ymm12   02 f8 26 b1 73 9d 18 23 dd f4 66 ed f2 10 3d cd 9d 94 18 41 c6 24 22 11 cc b7 f2 89 97 91 3d a6
%ymm13   8e 0d 14 56 8e d6 9a 51 c1 cd e8 ba e8 63 47 2a 9b 6e 46 45 32 23 12 7d 67 4e 81 1f 07 fe a5 a1
%ymm14   44 e0 a5 5b c9 72 80 a1 76 e1 6d ea ea c4 90 ee e8 13 a2 21 6a 47 0b b9 f3 85 be b3 73 02 8c 60
%ymm15   30 4a 89 b3 aa 93 a5 37 5c 95 b1 75 79 8b 56 53 b1 f1 b8 8e db 90 29 f6 e3 ba 17 bb 8d 45 86 44

%cf      1 
%1       1 
%pf      1 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   1b d4 56 2a 1f c8 a0 80 
00000006 fffffff0   v v v v v v v v   90 b4 6e 55 27 2a ed bf 
00000006 ffffffe8   v v v v v v v v   a8 d4 3a 73 73 30 7f ef 
00000006 ffffffe0   v v v v v v v v   66 f2 e7 47 b7 88 7e 19 

[ 00000000 43453ab8 - 00000000 434532a0 ]
[ 43 valid rows shown ]

00000000 43453a30   v v v v v v v v   00 00 00 00 35 7c c6 bf 
00000000 43453a28   v v v v v v v v   31 0e 98 9f 83 ca 3b 2c 
00000000 43453a20   v v v v v v v v   5e 00 a6 b9 ae 9e 7a a8 
00000000 43453a18   v v v v v v v v   14 8f ec f1 f6 d8 b5 04 
00000000 43453a10   v v v v v v v v   49 73 18 76 4a b8 27 92 
00000000 43453a08   v v v v v v v v   8b cd 64 57 6c 3a 86 a5 
00000000 43453a00   v v v v v v v v   52 08 3f 05 8a eb bc 22 
00000000 434539f8   v v v v v v v v   98 14 3c f2 8f 41 ec d3 
00000000 434539f0   v v v v v v v v   29 60 4e b8 2c 5a 2e 34 
00000000 434539e8   v v v v v v v v   61 29 d1 c6 e8 7e 66 4d 
00000000 434539e0   v v v v v v v v   7e 54 49 67 52 a7 e6 a6 
00000000 434539d8   v v v v v v v v   85 fb 06 bc 18 8c 84 71 
00000000 434539d0   v v v v v v v v   33 f4 89 f8 f8 05 63 9b 
00000000 434539c8   v v v v v v v v   41 53 60 9b 00 12 03 16 
00000000 434539c0   v v v v v v v v   01 a2 81 ac 22 eb 9f c9 
00000000 434539b8   v v v v v v v v   e2 7a 37 a7 58 90 e7 3b 
00000000 434539b0   v v v v v v v v   fc 84 94 5d c3 10 3b a6 
00000000 434539a8   v v v v v v v v   53 4d 97 e9 11 61 95 55 
00000000 434539a0   v v v v v v v v   80 96 0d 58 08 25 92 3b 
00000000 43453998   v v v v v v v v   22 a7 c0 1d 94 63 a7 9e 
00000000 43453990   v v v v v v v v   c1 84 22 1d bd ed 0f 69 
00000000 43453988   v v v v v v v v   3c 36 54 bc e1 fe 48 27 
00000000 43453980   v v v v v v v v   8e e8 c6 cd 03 ea 7b 05 
00000000 43453978   v v v v v v v v   13 5d 76 f5 a2 23 7c a4 
00000000 43453970   v v v v v v v v   c6 35 0e 54 b1 d9 15 80 
00000000 43453968   v v v v v v v v   54 56 74 ba 70 60 61 c0 
00000000 43453960   v v v v v v v v   e5 dc 52 fe d7 1e 8f 1e 
00000000 43453958   v v v v v v v v   bb 53 79 fe 5c 47 96 72 
00000000 43453950   v v v v v v v v   84 35 3f 30 84 bf 0c 9a 
00000000 43453948   v v v v v v v v   e5 14 59 b0 7b 85 6e e7 
00000000 43453940   v v v v v v v v   05 34 6f b9 63 3c a4 bd 
00000000 43453938   v v v v v v v v   f6 32 68 ea c3 61 33 53 
00000000 43453930   v v v v v v v v   b0 80 24 ea d9 f8 41 35 
00000000 43453928   v v v v v v v v   99 d4 42 94 80 39 78 4c 
00000000 43453920   v v v v v v v v   d1 33 14 a6 45 72 55 0c 
00000000 43453918   v v v v v v v v   6f 07 b6 6f b0 b3 2f c6 
00000000 43453910   v v v v v v v v   a6 2b a8 a4 5f 6d f3 05 
00000000 43453908   v v v v v v v v   54 08 1c 34 68 45 37 2b 
00000000 43453900   v v v v v v v v   ed a2 51 39 02 4e 56 00 
00000000 434538f8   v v v v v v v v   56 03 40 ea 0d 04 1e 02 
00000000 434538f0   v v v v v v v v   cc 3b b0 5a 19 eb e9 20 
00000000 434538e8   v v v v v v v v   a0 d7 fc 3c 57 95 da b4 
00000000 434538e0   v v v v . . . .   a0 03 e3 02 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (69)                                                Lowest Known Correct Cost (87)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64_1         movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xf   2      OPC=je_label               je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x11  1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x12  1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x13  1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nopl %eax                 #  16    0x19  3      OPC=nopl_r32               nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1c  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1d  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1e  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1f  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x20  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x21  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x22  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  23    0x22  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  24    0x25  4      OPC=movl_r32_m32           movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  testl %eax, %eax          #  25    0x29  2      OPC=testl_r32_r32          movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  jne .L_142cc0             #  26    0x2b  2      OPC=jne_label              testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  movl %edx, %eax           #  27    0x2d  2      OPC=movl_r32_r32           jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  subl %edi, %eax           #  28    0x2f  2      OPC=subl_r32_r32           movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  sarl $0x2, %eax           #  29    0x31  3      OPC=sarl_r32_imm8          subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x34  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x35  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x36  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x37  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x38  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x39  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x3a  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x3b  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3c  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3d  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3e  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3f  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x40  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x41  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  43    0x41  2      OPC=popq_r64_1             popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  44    0x43  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  45    0x47  3      OPC=addq_r64_r64           addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  46    0x4a  3      OPC=jmpq_r64               jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                     
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                    
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (68)                                                Lowest Known Correct Cost (87)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64_1         movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xf   2      OPC=je_label               je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x11  1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x12  1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x13  1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nopl %eax                 #  16    0x19  3      OPC=nopl_r32               nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1c  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1d  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1e  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1f  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x20  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x21  0      OPC=<label>                nop                       #  22    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  22    0x21  3      OPC=addl_r32_imm8        .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  23    0x24  4      OPC=movl_r32_m32           addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  testl %eax, %eax          #  24    0x28  2      OPC=testl_r32_r32          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  25    0x2a  2      OPC=jne_label              movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl %edx, %eax           #  26    0x2c  2      OPC=movl_r32_r32           testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  subl %edi, %eax           #  27    0x2e  2      OPC=subl_r32_r32           jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  sarl $0x2, %eax           #  28    0x30  3      OPC=sarl_r32_imm8          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x33  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x34  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x35  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x36  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x37  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x38  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x39  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x3a  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x3b  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3c  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3d  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3e  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3f  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>                nop                       #  42    0x3f  1      OPC=nop                 
  popq %r11                 #  42    0x40  2      OPC=popq_r64_1           .L_142ce0:                  #        0x40  0      OPC=<label>             
  andl $0xe0, %r11d         #  43    0x42  4      OPC=andl_r32_imm8          popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  addq %r15, %r11           #  44    0x46  3      OPC=addq_r64_r64           andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  jmpq %r11                 #  45    0x49  3      OPC=jmpq_r64               addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
                                                                             jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
.size wcslen, .-wcslen                                                                                                                               
                                                                           .size wcslen, .-wcslen                                                    
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (67)                                                Lowest Known Correct Cost (87)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64_1         movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xf   2      OPC=je_label               je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x11  1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x12  1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x13  1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nopl %eax                 #  16    0x19  3      OPC=nopl_r32               nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1c  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1d  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1e  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1f  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>                nop                       #  21    0x1e  1      OPC=nop                 
  addl $0x4, %edx           #  21    0x20  3      OPC=addl_r32_imm8          nop                       #  22    0x1f  1      OPC=nop                 
  movl (%r15,%rdx,1), %eax  #  22    0x23  4      OPC=movl_r32_m32         .L_142cc0:                  #        0x20  0      OPC=<label>             
  testl %eax, %eax          #  23    0x27  2      OPC=testl_r32_r32          addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  jne .L_142cc0             #  24    0x29  2      OPC=jne_label              movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl %edx, %eax           #  25    0x2b  2      OPC=movl_r32_r32           movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  subl %edi, %eax           #  26    0x2d  2      OPC=subl_r32_r32           testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  sarl $0x2, %eax           #  27    0x2f  3      OPC=sarl_r32_imm8          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  nop                       #  28    0x32  1      OPC=nop                    movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x33  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x34  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x35  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x36  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x37  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x38  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x39  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x3a  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x3b  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3c  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3d  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3e  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
.L_142ce0:                  #        0x3f  0      OPC=<label>                nop                       #  41    0x3e  1      OPC=nop                 
  popq %r11                 #  41    0x3f  2      OPC=popq_r64_1             nop                       #  42    0x3f  1      OPC=nop                 
  andl $0xe0, %r11d         #  42    0x41  4      OPC=andl_r32_imm8        .L_142ce0:                  #        0x40  0      OPC=<label>             
  addq %r15, %r11           #  43    0x45  3      OPC=addq_r64_r64           popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  jmpq %r11                 #  44    0x48  3      OPC=jmpq_r64               andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
                                                                             addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
.size wcslen, .-wcslen                                                       jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                     
                                                                           .size wcslen, .-wcslen                                                    
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (66)                                                Lowest Known Correct Cost (66)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32         
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32         
  movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32         
  movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32         
  movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64_1         movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64_1       
  testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32        
  je .L_142ce0              #  7     0xf   2      OPC=je_label               je .L_142ce0              #  7     0xf   2      OPC=je_label             
  nop                       #  8     0x11  1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                  
  nop                       #  9     0x12  1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                  
  nop                       #  10    0x13  1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                  
  nop                       #  11    0x14  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                  
  nop                       #  12    0x15  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                  
  nop                       #  13    0x16  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                  
  nop                       #  14    0x17  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                  
  nop                       #  15    0x18  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                  
  nop                       #  16    0x19  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                  
  nop                       #  17    0x1a  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                  
  nop                       #  18    0x1b  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                  
  nop                       #  19    0x1c  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                  
  nop                       #  20    0x1d  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                  
  nop                       #  21    0x1e  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                  
  nop                       #  22    0x1f  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32         
  testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32          testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label              jne .L_142cc0             #  26    0x29  2      OPC=jne_label            
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32           movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32         
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32           subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32         
  sarl $0x2, %eax           #  29    0x2f  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  29    0x2f  3      OPC=sarl_r32_imm8        
  nop                       #  30    0x32  1      OPC=nop                    nop                       #  30    0x32  1      OPC=nop                  
  nop                       #  31    0x33  1      OPC=nop                    nop                       #  31    0x33  1      OPC=nop                  
  nop                       #  32    0x34  1      OPC=nop                    nop                       #  32    0x34  1      OPC=nop                  
  nop                       #  33    0x35  1      OPC=nop                    nop                       #  33    0x35  1      OPC=nop                  
  nop                       #  34    0x36  1      OPC=nop                    nop                       #  34    0x36  1      OPC=nop                  
  nop                       #  35    0x37  1      OPC=nop                    nop                       #  35    0x37  1      OPC=nop                  
  nop                       #  36    0x38  1      OPC=nop                    nop                       #  36    0x38  1      OPC=nop                  
  nop                       #  37    0x39  1      OPC=nop                    nop                       #  37    0x39  1      OPC=nop                  
  nop                       #  38    0x3a  1      OPC=nop                    nop                       #  38    0x3a  1      OPC=nop                  
  nop                       #  39    0x3b  1      OPC=nop                    nop                       #  39    0x3b  1      OPC=nop                  
  nop                       #  40    0x3c  1      OPC=nop                    nop                       #  40    0x3c  1      OPC=nop                  
  nop                       #  41    0x3d  1      OPC=nop                    nop                       #  41    0x3d  1      OPC=nop                  
  nop                       #  42    0x3e  1      OPC=nop                    nop                       #  42    0x3e  1      OPC=nop                  
  nop                       #  43    0x3f  1      OPC=nop                    nop                       #  43    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  popq %r11                 #  44    0x40  2      OPC=popq_r64_1             popq %r11                 #  44    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64           addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64               jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  98.3363s
Iterations/s:                  1016.92

Starting cost:                 87
Lowest cost:                   66
Lowest correct cost:           66

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.416%       4.448%        3.728%       
Operand         8.281%       4.376%        1.779%       
Opcode          8.26%        7.704%        7.4%         
Global Copy     8.237%       7.564%        7.564%       
Global Swap     8.363%       7.291%        6.33%        
Rotate          8.401%       7.517%        5.264%       
ReplaceNop      8.333%       7.818%        7.348%       
Delete          8.38%        7.842%        6.373%       
Instruction     8.398%       5.052%        0.619%       
Add Nops        8.278%       8.278%        6.108%       
OpcodeWidth     8.342%       7.475%        7.233%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.311%       1.711%        0.002%       
                                                        
Total           100%         77.076%       59.748%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  252.246s
Iterations/s:                  792.878

Starting cost:                 87
Lowest cost:                   66
Lowest correct cost:           66

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.3455%      4.483%        3.7605%      
Operand         8.323%       4.604%        2.1225%      
Opcode          8.265%       7.906%        7.697%       
Global Copy     8.2785%      7.8205%       7.8205%      
Global Swap     8.3725%      7.6555%       6.9665%      
Rotate          8.3765%      7.7935%       6.0255%      
ReplaceNop      8.3605%      8.014%        7.704%       
Delete          8.372%       8.0155%       6.8335%      
Instruction     8.357%       5.01%         0.637%       
Add Nops        8.277%       8.277%        6.5765%      
OpcodeWidth     8.3465%      7.7345%       7.551%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.326%       1.6435%       0.001%       
                                                        
Total           100%         78.957%       63.6955%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  586.423s
Iterations/s:                  511.576

Starting cost:                 87
Lowest cost:                   66
Lowest correct cost:           66

Move Type       Proposed     Succeeded     Accepted         
                                                            
Local Swap      8.32867%     4.47067%      3.72033%         
Operand         8.30267%     4.85333%      2.43567%         
Opcode          8.28633%     8.016%        7.85167%         
Global Copy     8.29767%     7.936%        7.936%           
Global Swap     8.32767%     7.76767%      7.23167%         
Rotate          8.36067%     7.91133%      6.40633%         
ReplaceNop      8.37333%     8.10267%      7.85867%         
Delete          8.35767%     8.078%        7.028%           
Instruction     8.36533%     5.01167%      0.668333%        
Add Nops        8.33333%     8.33333%      6.82933%         
OpcodeWidth     8.31333%     7.82733%      7.673%           
2xWeighted      0%           0%            0%               
Memory+Swap     8.35333%     1.64167%      0.000666667%     
                                                            
Total           100%         79.9497%      65.6397%         

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  1083.42s
Iterations/s:                  369.202

Starting cost:                 87
Lowest cost:                   66
Lowest correct cost:           66

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.3685%      4.49775%      3.73175%     
Operand         8.321%       4.99975%      2.63%        
Opcode          8.2585%      8.03575%      7.902%       
Global Copy     8.3105%      8.0155%       8.0155%      
Global Swap     8.32%        7.85525%      7.40275%     
Rotate          8.3695%      7.9945%       6.618%       
ReplaceNop      8.3335%      8.114%        7.9155%      
Delete          8.3385%      8.1055%       7.08975%     
Instruction     8.36375%     5.025%        0.6715%      
Add Nops        8.34075%     8.34075%      6.93225%     
OpcodeWidth     8.3475%      7.93275%      7.80075%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.328%       1.60525%      0.00075%     
                                                        
Total           100%         80.5217%      66.7105%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  1439.61s
Iterations/s:                  347.317

Starting cost:                 87
Lowest cost:                   66
Lowest correct cost:           66

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.362%       4.4772%       3.6894%      
Operand         8.3288%      5.106%        2.769%       
Opcode          8.2758%      8.0892%       7.9766%      
Global Copy     8.303%       8.049%        8.049%       
Global Swap     8.3152%      7.9164%       7.52%        
Rotate          8.342%       8.0218%       6.7122%      
ReplaceNop      8.3556%      8.169%        8.0016%      
Delete          8.3568%      8.159%        7.1022%      
Instruction     8.373%       4.9848%       0.6662%      
Add Nops        8.341%       8.341%        6.9676%      
OpcodeWidth     8.331%       7.9706%       7.852%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.3158%      1.5962%       0.0006%      
                                                        
Total           100%         80.8802%      67.3064%     

********************************************************************************

TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
Total accesses: 2
SAME MAP
     0 1 
------------------
0  |   1 
1  |     

NEXT MAP
     0 1 
------------------
0  |   0 
1  |     

TOTAL CELLS: 1
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
ALIASING CASES: 1
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   1 0 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   1 0 0 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
Access 3 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   0 1 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 1 0 
1  |     0 1 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 1 0 0 
1  |     0 1 0 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 4)
Access 4 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 0 1 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 0 1 0 
1  |     0 0 1 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 1 0 0 
1  |     0 0 1 0 
2  |       0 0 1 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 0 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 4 (cell size 4)
Access 5 cell 2 offset 0 size 4 (cell size 4)
################################################################################

Final update:

Total search iterations:       4500000
Number of attempted searches:  9
Total search time:             7856.87s
Total time:                    7870.2s

Statistics of last search

Iterations:                    500000
Elapsed Time:                  1439.61s
Iterations/s:                  347.317

Starting cost:                 87
Lowest cost:                   66
Lowest correct cost:           66

Move Type       Proposed     Succeeded     Accepted     
                                                        
Local Swap      8.362%       4.4772%       3.6894%      
Operand         8.3288%      5.106%        2.769%       
Opcode          8.2758%      8.0892%       7.9766%      
Global Copy     8.303%       8.049%        8.049%       
Global Swap     8.3152%      7.9164%       7.52%        
Rotate          8.342%       8.0218%       6.7122%      
ReplaceNop      8.3556%      8.169%        8.0016%      
Delete          8.3568%      8.159%        7.1022%      
Instruction     8.373%       4.9848%       0.6662%      
Add Nops        8.341%       8.341%        6.9676%      
OpcodeWidth     8.331%       7.9706%       7.852%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.3158%      1.5962%       0.0006%      
                                                        
Total           100%         80.8802%      67.3064%     

Lowest Cost Discovered (66)                                                
                                                                           
  .text                                                                    
  .globl wcslen                                                            
  .type wcslen, @function                                                  
                                                                           
#! file-offset 0                                                           
#! rip-offset  0                                                           
#! capacity    0 bytes                                                     
                                                                           
# Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32         
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32         
  movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32         
  movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32         
  movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64_1       
  testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32        
  je .L_142ce0              #  7     0xf   2      OPC=je_label             
  nop                       #  8     0x11  1      OPC=nop                  
  nop                       #  9     0x12  1      OPC=nop                  
  nop                       #  10    0x13  1      OPC=nop                  
  nop                       #  11    0x14  1      OPC=nop                  
  nop                       #  12    0x15  1      OPC=nop                  
  nop                       #  13    0x16  1      OPC=nop                  
  nop                       #  14    0x17  1      OPC=nop                  
  nop                       #  15    0x18  1      OPC=nop                  
  nop                       #  16    0x19  1      OPC=nop                  
  nop                       #  17    0x1a  1      OPC=nop                  
  nop                       #  18    0x1b  1      OPC=nop                  
  nop                       #  19    0x1c  1      OPC=nop                  
  nop                       #  20    0x1d  1      OPC=nop                  
  nop                       #  21    0x1e  1      OPC=nop                  
  nop                       #  22    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32         
  testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label            
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32         
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32         
  sarl $0x2, %eax           #  29    0x2f  3      OPC=sarl_r32_imm8        
  nop                       #  30    0x32  1      OPC=nop                  
  nop                       #  31    0x33  1      OPC=nop                  
  nop                       #  32    0x34  1      OPC=nop                  
  nop                       #  33    0x35  1      OPC=nop                  
  nop                       #  34    0x36  1      OPC=nop                  
  nop                       #  35    0x37  1      OPC=nop                  
  nop                       #  36    0x38  1      OPC=nop                  
  nop                       #  37    0x39  1      OPC=nop                  
  nop                       #  38    0x3a  1      OPC=nop                  
  nop                       #  39    0x3b  1      OPC=nop                  
  nop                       #  40    0x3c  1      OPC=nop                  
  nop                       #  41    0x3d  1      OPC=nop                  
  nop                       #  42    0x3e  1      OPC=nop                  
  nop                       #  43    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              
  popq %r11                 #  44    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64             
                                                                           
.size wcslen, .-wcslen                                                     
Lowest Known Correct Cost (66)                                             
                                                                           
  .text                                                                    
  .globl wcslen                                                            
  .type wcslen, @function                                                  
                                                                           
#! file-offset 0                                                           
#! rip-offset  0                                                           
#! capacity    0 bytes                                                     
                                                                           
# Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32         
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32         
  movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32         
  movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32         
  movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64_1       
  testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32        
  je .L_142ce0              #  7     0xf   2      OPC=je_label             
  nop                       #  8     0x11  1      OPC=nop                  
  nop                       #  9     0x12  1      OPC=nop                  
  nop                       #  10    0x13  1      OPC=nop                  
  nop                       #  11    0x14  1      OPC=nop                  
  nop                       #  12    0x15  1      OPC=nop                  
  nop                       #  13    0x16  1      OPC=nop                  
  nop                       #  14    0x17  1      OPC=nop                  
  nop                       #  15    0x18  1      OPC=nop                  
  nop                       #  16    0x19  1      OPC=nop                  
  nop                       #  17    0x1a  1      OPC=nop                  
  nop                       #  18    0x1b  1      OPC=nop                  
  nop                       #  19    0x1c  1      OPC=nop                  
  nop                       #  20    0x1d  1      OPC=nop                  
  nop                       #  21    0x1e  1      OPC=nop                  
  nop                       #  22    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32         
  testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label            
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32         
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32         
  sarl $0x2, %eax           #  29    0x2f  3      OPC=sarl_r32_imm8        
  nop                       #  30    0x32  1      OPC=nop                  
  nop                       #  31    0x33  1      OPC=nop                  
  nop                       #  32    0x34  1      OPC=nop                  
  nop                       #  33    0x35  1      OPC=nop                  
  nop                       #  34    0x36  1      OPC=nop                  
  nop                       #  35    0x37  1      OPC=nop                  
  nop                       #  36    0x38  1      OPC=nop                  
  nop                       #  37    0x39  1      OPC=nop                  
  nop                       #  38    0x3a  1      OPC=nop                  
  nop                       #  39    0x3b  1      OPC=nop                  
  nop                       #  40    0x3c  1      OPC=nop                  
  nop                       #  41    0x3d  1      OPC=nop                  
  nop                       #  42    0x3e  1      OPC=nop                  
  nop                       #  43    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              
  popq %r11                 #  44    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64             
                                                                           
.size wcslen, .-wcslen                                                     
                                                                           

################################################################################

Search terminated successfully with a verified rewrite!
