time stoke debug verify --config verify.conf
Computing reference outputs for 0 testcases
Computing reference outputs for 0 testcases
Target                       Rewrite                      
                                                          
.strcpy:                     .strcpy:                     
movl %esi, %esi              movq %rsi, %rdx              
movl %edi, %eax              nop                          
movl %esi, %edi              nop                          
movq %rsi, %rdx              movl %edi, %eax              
movq %rax, %rcx              movl %edx, %edi              
orl %eax, %edi               nop                          
andl $0x3, %edi              andl $0x3, %edi              
jne .L_126860                movq %rax, %rcx              
movl %esi, %esi              nop                          
movl (%r15,%rsi,1), %r8d     nop                          
movl %r8d, %esi              nop                          
leal -0x1010101(%r8), %edi   jne .L_126860                
notl %esi                    nop                          
andl %edi, %esi              movl %esi, %esi              
andl $0x80808080, %esi       movl (%r15,%rsi,1), %r8d     
jne .L_126860                nop                          
nop                          leal -0x1010101(%r8), %edi   
nop                          movl %r8d, %esi              
nop                          notl %esi                    
nop                          andl $0x80808080, %esi       
nop                          andl %edi, %esi              
nop                          jne .L_126860                
nop                          nop                          
nop                          nop                          
nop                          nop                          
.L_126820:                   nop                          
addl $0x4, %edx              nop                          
movl %ecx, %ecx              .L_126820:                   
movl %r8d, (%r15,%rcx,1)     addw $0x4, %dx               
addl $0x4, %ecx              movl %ecx, %ecx              
movl %edx, %edx              movl %r8d, (%r15,%rcx,1)     
movl (%r15,%rdx,1), %r8d     addl $0x4, %ecx              
movl %r8d, %r9d              andl %edx, %edx              
leal -0x1010101(%r8), %esi   movl (%r15,%rdx,1), %r8d     
notl %r9d                    movq %r8, %r9                
nop                          notl %r9d                    
andl %esi, %r9d              leal -0x1010101(%r8), %esi   
andl $0x80808080, %r9d       andl %esi, %r9d              
je .L_126820                 andl $0x80808080, %r9d       
nop                          je .L_126820                 
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
.L_126860:                   nop                          
movl %edx, %edx              .L_126860:                   
movzbl (%r15,%rdx,1), %esi   movl %edx, %edx              
addl $0x1, %edx              movzbq (%r15,%rdx,1), %rsi   
movl %ecx, %ecx              addl $0x1, %edx              
movb %sil, (%r15,%rcx,1)     orl %ecx, %ecx               
addl $0x1, %ecx              movb %sil, (%r15,%rcx,1)     
testb %sil, %sil             addl $0x1, %ecx              
jne .L_126860                testb %sil, %sil             
nop                          jne .L_126860                
nop                          nop                          
nop                          nop                          
nop                          nop                          
nop                          nop                          
retq                         retq                         
nop                                                       
nop                                                       
nop                                                       
nop                                                       
nop                                                       
nop                                                       
nop                                                       
nop                                                       
nop                                                       
nop                                                       
nop                                                       
nop                                                       
nop                                                       
                                                          
===========================================
Working on pair / P: 1 6 7 Q: 1 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 1 0 
1  |     0 1 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 1)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 0 offset 0 size 1 (cell size 1)
Access 3 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 1 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
15 -> 0 (size 1 / cell size 1 / offset 0
18 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_8_4|8> <TMP_BV_8_6|8>)) (== <TMP_BV_8_5|8> <TMP_BV_8_7|8>))

CONSTRAINTS

(not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_8_6|8>)[7:0] (concat <0x0|56> <TMP_BV_8_6|8>)[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_4|8>))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_4|8>))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_8_4|8> <TMP_BV_8_6|8>)) (== <TMP_BV_8_5|8> <TMP_BV_8_7|8>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 1 1 0 
1  |     0 0 1 
2  |       1 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
25 -> 0 (size 1 / cell size 4 / offset 0
28 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_32_13|32> <TMP_BV_32_15|32>)) (== <TMP_BV_8_14|8> <TMP_BV_8_16|8>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_15|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_15|32>))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_15|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_15|32>[7:0])[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_13|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_13|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_13|32> <TMP_BV_32_15|32>)) (== <TMP_BV_8_14|8> <TMP_BV_8_16|8>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 1 0 0 0 
1  |     0 1 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 1 0 
1  |     0 0 0 1 
2  |       0 1 0 
3  |         0 1 
4  |           0 
5  |             

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 0 size 1 (cell size 2)
Access 3 cell 1 offset 0 size 1 (cell size 2)
Access 4 cell 0 offset 1 size 1 (cell size 2)
Access 5 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
15 -> 0 (size 1 / cell size 2 / offset 0
18 -> 1 (size 1 / cell size 2 / offset 0
24 -> 0 (size 1 / cell size 2 / offset 1
27 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_16_23|16> <TMP_BV_16_25|16>)) (== <TMP_BV_16_24|16> <TMP_BV_16_26|16>))

CONSTRAINTS

(not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|56> <TMP_BV_16_25|16>[7:0])[7:0] (concat <0x0|56> <TMP_BV_16_25|16>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_16_25|16>[15:8])[7:0] (concat <0x0|56> <TMP_BV_16_25|16>[15:8])[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_23|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_23|16>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_16_23|16> <TMP_BV_16_25|16>)) (== <TMP_BV_16_24|16> <TMP_BV_16_26|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 1 0 0 0 
1  |     0 0 1 0 0 
2  |       1 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 1 0 
1  |     0 0 0 0 1 
2  |       0 0 0 0 
3  |         0 1 0 
4  |           0 1 
5  |             0 
6  |               

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 1 offset 0 size 1 (cell size 2)
Access 5 cell 0 offset 1 size 1 (cell size 4)
Access 6 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
25 -> 0 (size 1 / cell size 4 / offset 0
28 -> 1 (size 1 / cell size 2 / offset 0
34 -> 0 (size 1 / cell size 4 / offset 1
37 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_32_34|32> <TMP_BV_32_36|32>)) (== <TMP_BV_16_35|16> <TMP_BV_16_37|16>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_36|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_36|32>))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_36|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_36|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_36|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_36|32>[15:8])[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_34|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_34|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_34|32> <TMP_BV_32_36|32>)) (== <TMP_BV_16_35|16> <TMP_BV_16_37|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 0 0 0 0 
1  |     0 1 0 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           1 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 0 0 
2  |       0 0 0 0 
3  |         0 0 1 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 5)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 5)
Access 4 cell 2 offset 0 size 4 (cell size 4)
Access 5 cell 2 offset 0 size 1 (cell size 4)
Access 6 cell 1 offset 4 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 5 / offset 0
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
31 -> 1 (size 4 / cell size 5 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
59 -> 2 (size 1 / cell size 4 / offset 0
62 -> 1 (size 1 / cell size 5 / offset 4
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_44|32> <TMP_BV_32_46|32>)) (== <TMP_BV_40_45|40> <TMP_BV_40_47|40>)) (== <TMP_BV_32_49|32> <TMP_BV_32_48|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_46|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_46|32>))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_48|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_48|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_48|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_48|32>[7:0])[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_44|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_44|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_44|32> <TMP_BV_32_46|32>)) (== <TMP_BV_40_45|40> <TMP_BV_40_47|40>)) (== <TMP_BV_32_49|32> <TMP_BV_32_48|32>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           1 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 1 0 0 
4  |           0 0 0 0 
5  |             0 1 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 6)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 6)
Access 4 cell 2 offset 0 size 4 (cell size 4)
Access 5 cell 2 offset 0 size 1 (cell size 4)
Access 6 cell 1 offset 4 size 1 (cell size 6)
Access 7 cell 2 offset 1 size 1 (cell size 4)
Access 8 cell 1 offset 5 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 6 / offset 0
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
31 -> 1 (size 4 / cell size 6 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
59 -> 2 (size 1 / cell size 4 / offset 0
62 -> 1 (size 1 / cell size 6 / offset 4
68 -> 2 (size 1 / cell size 4 / offset 1
71 -> 1 (size 1 / cell size 6 / offset 5
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_58|32> <TMP_BV_32_60|32>)) (== <TMP_BV_48_59|48> <TMP_BV_48_61|48>)) (== <TMP_BV_32_63|32> <TMP_BV_32_62|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_60|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_60|32>))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_62|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_62|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_62|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_62|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_62|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_62|32>[15:8])[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_58|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_58|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_58|32> <TMP_BV_32_60|32>)) (== <TMP_BV_48_59|48> <TMP_BV_48_61|48>)) (== <TMP_BV_32_63|32> <TMP_BV_32_62|32>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 4 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               1 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 1 0 0 0 
4  |           0 0 0 0 
5  |             0 0 1 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 9)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 9)
Access 4 cell 2 offset 0 size 4 (cell size 4)
Access 5 cell 1 offset 4 size 4 (cell size 9)
Access 6 cell 3 offset 0 size 4 (cell size 4)
Access 7 cell 3 offset 0 size 1 (cell size 4)
Access 8 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 9 / offset 0
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
31 -> 1 (size 4 / cell size 9 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
44 -> 1 (size 4 / cell size 9 / offset 4
47 -> 3 (size 4 / cell size 4 / offset 0
72 -> 3 (size 1 / cell size 4 / offset 0
75 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_71|32> <TMP_BV_32_73|32>)) (== <TMP_BV_72_72|72> <TMP_BV_72_74|72>)) (== <TMP_BV_32_77|32> <TMP_BV_32_75|32>)) (== <TMP_BV_32_78|32> <TMP_BV_32_76|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_73|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_73|32>))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_75|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_75|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_76|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_76|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_76|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_76|32>[7:0])[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_71|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_71|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_71|32> <TMP_BV_32_73|32>)) (== <TMP_BV_72_72|72> <TMP_BV_72_74|72>)) (== <TMP_BV_32_77|32> <TMP_BV_32_75|32>)) (== <TMP_BV_32_78|32> <TMP_BV_32_76|32>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 4 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               1 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 1 0 0 
6  |               0 0 0 0 
7  |                 0 1 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 10)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 10)
Access 4 cell 2 offset 0 size 4 (cell size 4)
Access 5 cell 1 offset 4 size 4 (cell size 10)
Access 6 cell 3 offset 0 size 4 (cell size 4)
Access 7 cell 3 offset 0 size 1 (cell size 4)
Access 8 cell 1 offset 8 size 1 (cell size 10)
Access 9 cell 3 offset 1 size 1 (cell size 4)
Access 10 cell 1 offset 9 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 10 / offset 0
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
31 -> 1 (size 4 / cell size 10 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
44 -> 1 (size 4 / cell size 10 / offset 4
47 -> 3 (size 4 / cell size 4 / offset 0
72 -> 3 (size 1 / cell size 4 / offset 0
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 3 (size 1 / cell size 4 / offset 1
84 -> 1 (size 1 / cell size 10 / offset 9
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_88|32> <TMP_BV_32_90|32>)) (== <TMP_BV_80_89|80> <TMP_BV_80_91|80>)) (== <TMP_BV_32_94|32> <TMP_BV_32_92|32>)) (== <TMP_BV_32_95|32> <TMP_BV_32_93|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_90|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_90|32>))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_92|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_92|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_93|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_93|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_93|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_93|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_93|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_93|32>[15:8])[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_88|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_88|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_88|32> <TMP_BV_32_90|32>)) (== <TMP_BV_80_89|80> <TMP_BV_80_91|80>)) (== <TMP_BV_32_94|32> <TMP_BV_32_92|32>)) (== <TMP_BV_32_95|32> <TMP_BV_32_93|32>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   1 0 1 0 
1  |     0 1 0 
2  |       0 1 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
15 -> 0 (size 1 / cell size 4 / offset 0
18 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_32_101|32> <TMP_BV_32_103|32>)) (== <TMP_BV_8_102|8> <TMP_BV_8_104|8>))

CONSTRAINTS

(not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_103|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_103|32>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_101|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_101|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_101|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_101|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_101|32> <TMP_BV_32_103|32>)) (== <TMP_BV_8_102|8> <TMP_BV_8_104|8>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   1 0 1 1 0 
1  |     0 1 1 0 
2  |       0 0 1 
3  |         1 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 0 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 0 offset 0 size 1 (cell size 4)
Access 5 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
25 -> 0 (size 1 / cell size 4 / offset 0
28 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_32_111|32> <TMP_BV_32_113|32>)) (== <TMP_BV_8_112|8> <TMP_BV_8_114|8>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_113|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_113|32>))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_113|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_113|32>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_111|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_111|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_111|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_111|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_111|32> <TMP_BV_32_113|32>)) (== <TMP_BV_8_112|8> <TMP_BV_8_114|8>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   1 0 1 0 0 0 
1  |     0 1 0 0 0 
2  |       0 1 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 1 0 
2  |       0 0 0 1 
3  |         0 1 0 
4  |           0 1 
5  |             0 
6  |               

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 1 offset 0 size 1 (cell size 2)
Access 5 cell 0 offset 1 size 1 (cell size 4)
Access 6 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
15 -> 0 (size 1 / cell size 4 / offset 0
18 -> 1 (size 1 / cell size 2 / offset 0
24 -> 0 (size 1 / cell size 4 / offset 1
27 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_32_122|32> <TMP_BV_32_124|32>)) (== <TMP_BV_16_123|16> <TMP_BV_16_125|16>))

CONSTRAINTS

(not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_124|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_124|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_124|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_124|32>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_122|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_122|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_122|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_122|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_122|32> <TMP_BV_32_124|32>)) (== <TMP_BV_16_123|16> <TMP_BV_16_125|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   1 0 1 1 0 0 0 
1  |     0 1 1 0 0 0 
2  |       0 0 1 0 0 
3  |         1 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 0 0 0 1 0 
2  |       0 0 0 0 1 
3  |         0 0 0 0 
4  |           0 1 0 
5  |             0 1 
6  |               0 
7  |                 

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 0 offset 0 size 1 (cell size 4)
Access 5 cell 1 offset 0 size 1 (cell size 2)
Access 6 cell 0 offset 1 size 1 (cell size 4)
Access 7 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
25 -> 0 (size 1 / cell size 4 / offset 0
28 -> 1 (size 1 / cell size 2 / offset 0
34 -> 0 (size 1 / cell size 4 / offset 1
37 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_32_134|32> <TMP_BV_32_136|32>)) (== <TMP_BV_16_135|16> <TMP_BV_16_137|16>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_136|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_136|32>))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_136|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_136|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_136|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_136|32>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_134|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_134|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_134|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_134|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_134|32> <TMP_BV_32_136|32>)) (== <TMP_BV_16_135|16> <TMP_BV_16_137|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   1 0 1 0 0 0 0 
1  |     0 1 0 0 0 0 
2  |       0 1 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             1 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 1 
5  |             0 0 
6  |               0 
7  |                 

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 5)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 4 (cell size 5)
Access 5 cell 2 offset 0 size 4 (cell size 4)
Access 6 cell 2 offset 0 size 1 (cell size 4)
Access 7 cell 1 offset 4 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 5 / offset 0
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
31 -> 1 (size 4 / cell size 5 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
59 -> 2 (size 1 / cell size 4 / offset 0
62 -> 1 (size 1 / cell size 5 / offset 4
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_145|32> <TMP_BV_32_147|32>)) (== <TMP_BV_40_146|40> <TMP_BV_40_148|40>)) (== <TMP_BV_32_150|32> <TMP_BV_32_149|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_147|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_147|32>))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_149|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_149|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_149|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_149|32>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_145|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_145|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_145|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_145|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_145|32> <TMP_BV_32_147|32>)) (== <TMP_BV_40_146|40> <TMP_BV_40_148|40>)) (== <TMP_BV_32_150|32> <TMP_BV_32_149|32>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   1 0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             1 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 1 0 0 
5  |             0 0 0 0 
6  |               0 1 0 
7  |                 0 1 
8  |                   0 
9  |                     

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 6)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 4 (cell size 6)
Access 5 cell 2 offset 0 size 4 (cell size 4)
Access 6 cell 2 offset 0 size 1 (cell size 4)
Access 7 cell 1 offset 4 size 1 (cell size 6)
Access 8 cell 2 offset 1 size 1 (cell size 4)
Access 9 cell 1 offset 5 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 6 / offset 0
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
31 -> 1 (size 4 / cell size 6 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
59 -> 2 (size 1 / cell size 4 / offset 0
62 -> 1 (size 1 / cell size 6 / offset 4
68 -> 2 (size 1 / cell size 4 / offset 1
71 -> 1 (size 1 / cell size 6 / offset 5
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_160|32> <TMP_BV_32_162|32>)) (== <TMP_BV_48_161|48> <TMP_BV_48_163|48>)) (== <TMP_BV_32_165|32> <TMP_BV_32_164|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_162|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_162|32>))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_164|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_164|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_164|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_164|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_164|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_164|32>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_160|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_160|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_160|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_160|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_160|32> <TMP_BV_32_162|32>)) (== <TMP_BV_48_161|48> <TMP_BV_48_163|48>)) (== <TMP_BV_32_165|32> <TMP_BV_32_164|32>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 4 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   1 0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 1 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 1 0 0 0 
5  |             0 0 0 0 
6  |               0 0 1 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 9)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 4 (cell size 9)
Access 5 cell 2 offset 0 size 4 (cell size 4)
Access 6 cell 1 offset 4 size 4 (cell size 9)
Access 7 cell 3 offset 0 size 4 (cell size 4)
Access 8 cell 3 offset 0 size 1 (cell size 4)
Access 9 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 9 / offset 0
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
31 -> 1 (size 4 / cell size 9 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
44 -> 1 (size 4 / cell size 9 / offset 4
47 -> 3 (size 4 / cell size 4 / offset 0
72 -> 3 (size 1 / cell size 4 / offset 0
75 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_174|32> <TMP_BV_32_176|32>)) (== <TMP_BV_72_175|72> <TMP_BV_72_177|72>)) (== <TMP_BV_32_180|32> <TMP_BV_32_178|32>)) (== <TMP_BV_32_181|32> <TMP_BV_32_179|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_176|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_176|32>))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_178|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_178|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_179|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_179|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_179|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_179|32>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_174|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_174|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_174|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_174|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_174|32> <TMP_BV_32_176|32>)) (== <TMP_BV_72_175|72> <TMP_BV_72_177|72>)) (== <TMP_BV_32_180|32> <TMP_BV_32_178|32>)) (== <TMP_BV_32_181|32> <TMP_BV_32_179|32>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 4 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   1 0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 1 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 1 0 0 
7  |                 0 0 0 0 
8  |                   0 1 0 
9  |                     0 1 
10 |                       0 
11 |                         

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 10)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 4 (cell size 10)
Access 5 cell 2 offset 0 size 4 (cell size 4)
Access 6 cell 1 offset 4 size 4 (cell size 10)
Access 7 cell 3 offset 0 size 4 (cell size 4)
Access 8 cell 3 offset 0 size 1 (cell size 4)
Access 9 cell 1 offset 8 size 1 (cell size 10)
Access 10 cell 3 offset 1 size 1 (cell size 4)
Access 11 cell 1 offset 9 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 10 / offset 0
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
31 -> 1 (size 4 / cell size 10 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
44 -> 1 (size 4 / cell size 10 / offset 4
47 -> 3 (size 4 / cell size 4 / offset 0
72 -> 3 (size 1 / cell size 4 / offset 0
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 3 (size 1 / cell size 4 / offset 1
84 -> 1 (size 1 / cell size 10 / offset 9
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_192|32> <TMP_BV_32_194|32>)) (== <TMP_BV_80_193|80> <TMP_BV_80_195|80>)) (== <TMP_BV_32_198|32> <TMP_BV_32_196|32>)) (== <TMP_BV_32_199|32> <TMP_BV_32_197|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_194|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_194|32>))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_196|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_196|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_197|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_197|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_197|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_197|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_197|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_197|32>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_192|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_192|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_192|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_192|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_192|32> <TMP_BV_32_194|32>)) (== <TMP_BV_80_193|80> <TMP_BV_80_195|80>)) (== <TMP_BV_32_198|32> <TMP_BV_32_196|32>)) (== <TMP_BV_32_199|32> <TMP_BV_32_197|32>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 1 0 
1  |     0 0 0 1 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 1 0 0 0 
1  |     0 1 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 1 (cell size 2)
Access 5 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
15 -> 0 (size 1 / cell size 2 / offset 0
18 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_16_206|16> <TMP_BV_16_208|16>)) (== <TMP_BV_16_207|16> <TMP_BV_16_209|16>))

CONSTRAINTS

(not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_16_208|16>[7:0])[7:0] (concat <0x0|56> <TMP_BV_16_208|16>[7:0])[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_206|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_206|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_206|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_206|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_16_206|16> <TMP_BV_16_208|16>)) (== <TMP_BV_16_207|16> <TMP_BV_16_209|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 1 1 0 
1  |     0 0 0 0 1 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           1 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 0 0 0 0 
1  |     0 1 0 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 4)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 4 (cell size 4)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 4 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
25 -> 0 (size 1 / cell size 4 / offset 0
28 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_32_217|32> <TMP_BV_32_219|32>)) (== <TMP_BV_16_218|16> <TMP_BV_16_220|16>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_219|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_219|32>))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_219|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_219|32>[7:0])[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_217|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_217|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_217|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_217|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_217|32> <TMP_BV_32_219|32>)) (== <TMP_BV_16_218|16> <TMP_BV_16_220|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 1 0 0 0 
1  |     0 0 0 1 0 0 
2  |       0 0 0 1 0 
3  |         0 0 0 1 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 1 0 0 0 1 0 
1  |     0 1 0 0 0 1 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 1 0 
5  |             0 1 
6  |               0 
7  |                 

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 1 (cell size 2)
Access 5 cell 1 offset 0 size 1 (cell size 2)
Access 6 cell 0 offset 1 size 1 (cell size 2)
Access 7 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
15 -> 0 (size 1 / cell size 2 / offset 0
18 -> 1 (size 1 / cell size 2 / offset 0
24 -> 0 (size 1 / cell size 2 / offset 1
27 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_16_229|16> <TMP_BV_16_231|16>)) (== <TMP_BV_16_230|16> <TMP_BV_16_232|16>))

CONSTRAINTS

(not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|56> <TMP_BV_16_231|16>[7:0])[7:0] (concat <0x0|56> <TMP_BV_16_231|16>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_16_231|16>[15:8])[7:0] (concat <0x0|56> <TMP_BV_16_231|16>[15:8])[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_229|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_229|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_229|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_229|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_16_229|16> <TMP_BV_16_231|16>)) (== <TMP_BV_16_230|16> <TMP_BV_16_232|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 1 1 0 0 0 
1  |     0 0 0 0 1 0 0 
2  |       0 0 0 0 1 0 
3  |         0 0 0 0 1 
4  |           1 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 1 0 
1  |     0 1 0 0 0 0 1 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 1 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 4)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 4 (cell size 4)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 1 offset 0 size 1 (cell size 2)
Access 7 cell 0 offset 1 size 1 (cell size 4)
Access 8 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 4 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
25 -> 0 (size 1 / cell size 4 / offset 0
28 -> 1 (size 1 / cell size 2 / offset 0
34 -> 0 (size 1 / cell size 4 / offset 1
37 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_32_242|32> <TMP_BV_32_244|32>)) (== <TMP_BV_16_243|16> <TMP_BV_16_245|16>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_244|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_244|32>))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_244|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_244|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_244|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_244|32>[15:8])[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_242|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_242|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_242|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_242|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_242|32> <TMP_BV_32_244|32>)) (== <TMP_BV_16_243|16> <TMP_BV_16_245|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 1 0 0 0 0 
1  |     0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               1 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 1 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 5)
Access 2 cell 0 offset 1 size 1 (cell size 4)
Access 3 cell 1 offset 1 size 1 (cell size 5)
Access 4 cell 0 offset 0 size 4 (cell size 4)
Access 5 cell 1 offset 0 size 4 (cell size 5)
Access 6 cell 2 offset 0 size 4 (cell size 4)
Access 7 cell 2 offset 0 size 1 (cell size 4)
Access 8 cell 1 offset 4 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 5 / offset 0
20 -> 0 (size 1 / cell size 4 / offset 1
23 -> 1 (size 1 / cell size 5 / offset 1
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
31 -> 1 (size 4 / cell size 5 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
59 -> 2 (size 1 / cell size 4 / offset 0
62 -> 1 (size 1 / cell size 5 / offset 4
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_254|32> <TMP_BV_32_256|32>)) (== <TMP_BV_40_255|40> <TMP_BV_40_257|40>)) (== <TMP_BV_32_259|32> <TMP_BV_32_258|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_256|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_256|32>))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_258|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_258|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_258|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_258|32>[7:0])[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_254|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_254|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_254|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_254|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_254|32> <TMP_BV_32_256|32>)) (== <TMP_BV_40_255|40> <TMP_BV_40_257|40>)) (== <TMP_BV_32_259|32> <TMP_BV_32_258|32>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               1 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 1 0 0 
6  |               0 0 0 0 
7  |                 0 1 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 6)
Access 2 cell 0 offset 1 size 1 (cell size 4)
Access 3 cell 1 offset 1 size 1 (cell size 6)
Access 4 cell 0 offset 0 size 4 (cell size 4)
Access 5 cell 1 offset 0 size 4 (cell size 6)
Access 6 cell 2 offset 0 size 4 (cell size 4)
Access 7 cell 2 offset 0 size 1 (cell size 4)
Access 8 cell 1 offset 4 size 1 (cell size 6)
Access 9 cell 2 offset 1 size 1 (cell size 4)
Access 10 cell 1 offset 5 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 6 / offset 0
20 -> 0 (size 1 / cell size 4 / offset 1
23 -> 1 (size 1 / cell size 6 / offset 1
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
31 -> 1 (size 4 / cell size 6 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
59 -> 2 (size 1 / cell size 4 / offset 0
62 -> 1 (size 1 / cell size 6 / offset 4
68 -> 2 (size 1 / cell size 4 / offset 1
71 -> 1 (size 1 / cell size 6 / offset 5
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_270|32> <TMP_BV_32_272|32>)) (== <TMP_BV_48_271|48> <TMP_BV_48_273|48>)) (== <TMP_BV_32_275|32> <TMP_BV_32_274|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_272|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_272|32>))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_274|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_274|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_274|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_274|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_274|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_274|32>[15:8])[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_270|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_270|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_270|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_270|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_270|32> <TMP_BV_32_272|32>)) (== <TMP_BV_48_271|48> <TMP_BV_48_273|48>)) (== <TMP_BV_32_275|32> <TMP_BV_32_274|32>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 4 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   1 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 1 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 1 
8  |                   0 0 
9  |                     0 
10 |                       

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 9)
Access 2 cell 0 offset 1 size 1 (cell size 4)
Access 3 cell 1 offset 1 size 1 (cell size 9)
Access 4 cell 0 offset 0 size 4 (cell size 4)
Access 5 cell 1 offset 0 size 4 (cell size 9)
Access 6 cell 2 offset 0 size 4 (cell size 4)
Access 7 cell 1 offset 4 size 4 (cell size 9)
Access 8 cell 3 offset 0 size 4 (cell size 4)
Access 9 cell 3 offset 0 size 1 (cell size 4)
Access 10 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 9 / offset 0
20 -> 0 (size 1 / cell size 4 / offset 1
23 -> 1 (size 1 / cell size 9 / offset 1
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
31 -> 1 (size 4 / cell size 9 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
44 -> 1 (size 4 / cell size 9 / offset 4
47 -> 3 (size 4 / cell size 4 / offset 0
72 -> 3 (size 1 / cell size 4 / offset 0
75 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_285|32> <TMP_BV_32_287|32>)) (== <TMP_BV_72_286|72> <TMP_BV_72_288|72>)) (== <TMP_BV_32_291|32> <TMP_BV_32_289|32>)) (== <TMP_BV_32_292|32> <TMP_BV_32_290|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_287|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_287|32>))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_289|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_289|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_290|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_290|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_290|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_290|32>[7:0])[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_285|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_285|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_285|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_285|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_285|32> <TMP_BV_32_287|32>)) (== <TMP_BV_72_286|72> <TMP_BV_72_288|72>)) (== <TMP_BV_32_291|32> <TMP_BV_32_289|32>)) (== <TMP_BV_32_292|32> <TMP_BV_32_290|32>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 4 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 13
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   1 0 0 0 
9  |                     0 0 0 
10 |                       0 0 
11 |                         0 
12 |                           

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 
6  |               0 0 0 0 0 0 
7  |                 0 0 1 0 0 
8  |                   0 0 0 0 
9  |                     0 1 0 
10 |                       0 1 
11 |                         0 
12 |                           

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 10)
Access 2 cell 0 offset 1 size 1 (cell size 4)
Access 3 cell 1 offset 1 size 1 (cell size 10)
Access 4 cell 0 offset 0 size 4 (cell size 4)
Access 5 cell 1 offset 0 size 4 (cell size 10)
Access 6 cell 2 offset 0 size 4 (cell size 4)
Access 7 cell 1 offset 4 size 4 (cell size 10)
Access 8 cell 3 offset 0 size 4 (cell size 4)
Access 9 cell 3 offset 0 size 1 (cell size 4)
Access 10 cell 1 offset 8 size 1 (cell size 10)
Access 11 cell 3 offset 1 size 1 (cell size 4)
Access 12 cell 1 offset 9 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 10 / offset 0
20 -> 0 (size 1 / cell size 4 / offset 1
23 -> 1 (size 1 / cell size 10 / offset 1
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
31 -> 1 (size 4 / cell size 10 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
44 -> 1 (size 4 / cell size 10 / offset 4
47 -> 3 (size 4 / cell size 4 / offset 0
72 -> 3 (size 1 / cell size 4 / offset 0
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 3 (size 1 / cell size 4 / offset 1
84 -> 1 (size 1 / cell size 10 / offset 9
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_304|32> <TMP_BV_32_306|32>)) (== <TMP_BV_80_305|80> <TMP_BV_80_307|80>)) (== <TMP_BV_32_310|32> <TMP_BV_32_308|32>)) (== <TMP_BV_32_311|32> <TMP_BV_32_309|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_306|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_306|32>))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_308|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_308|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_309|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_309|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_309|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_309|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_309|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_309|32>[15:8])[7:0]) <0x0|8>)))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_304|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_304|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_304|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_304|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_304|32> <TMP_BV_32_306|32>)) (== <TMP_BV_80_305|80> <TMP_BV_80_307|80>)) (== <TMP_BV_32_310|32> <TMP_BV_32_308|32>)) (== <TMP_BV_32_311|32> <TMP_BV_32_309|32>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   1 0 0 0 1 0 
1  |     0 0 0 1 0 
2  |       0 0 0 1 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 1 0 0 0 
2  |       0 1 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
15 -> 0 (size 1 / cell size 4 / offset 0
18 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_32_319|32> <TMP_BV_32_321|32>)) (== <TMP_BV_16_320|16> <TMP_BV_16_322|16>))

CONSTRAINTS

(not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_321|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_321|32>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_319|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_319|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_319|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_319|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_319|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_319|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_319|32> <TMP_BV_32_321|32>)) (== <TMP_BV_16_320|16> <TMP_BV_16_322|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   1 0 0 0 1 1 0 
1  |     0 0 0 1 1 0 
2  |       0 0 0 0 1 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             1 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 
2  |       0 1 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 4 (cell size 4)
Access 6 cell 0 offset 0 size 1 (cell size 4)
Access 7 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
25 -> 0 (size 1 / cell size 4 / offset 0
28 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_32_331|32> <TMP_BV_32_333|32>)) (== <TMP_BV_16_332|16> <TMP_BV_16_334|16>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_333|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_333|32>))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_333|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_333|32>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_331|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_331|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_331|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_331|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_331|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_331|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_331|32> <TMP_BV_32_333|32>)) (== <TMP_BV_16_332|16> <TMP_BV_16_334|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   1 0 0 0 1 0 0 0 
1  |     0 0 0 1 0 0 0 
2  |       0 0 0 1 0 0 
3  |         0 0 0 1 0 
4  |           0 0 0 1 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 1 0 
2  |       0 1 0 0 0 1 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 1 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 1 offset 0 size 1 (cell size 2)
Access 7 cell 0 offset 1 size 1 (cell size 4)
Access 8 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
15 -> 0 (size 1 / cell size 4 / offset 0
18 -> 1 (size 1 / cell size 2 / offset 0
24 -> 0 (size 1 / cell size 4 / offset 1
27 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_32_344|32> <TMP_BV_32_346|32>)) (== <TMP_BV_16_345|16> <TMP_BV_16_347|16>))

CONSTRAINTS

(not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_346|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_346|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_346|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_346|32>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_344|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_344|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_344|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_344|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_344|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_344|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_344|32> <TMP_BV_32_346|32>)) (== <TMP_BV_16_345|16> <TMP_BV_16_347|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   1 0 0 0 1 1 0 0 0 
1  |     0 0 0 1 1 0 0 0 
2  |       0 0 0 0 1 0 0 
3  |         0 0 0 0 1 0 
4  |           0 0 0 0 1 
5  |             1 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 1 0 
2  |       0 1 0 0 0 0 1 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 1 0 
7  |                 0 1 
8  |                   0 
9  |                     

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 4 (cell size 4)
Access 6 cell 0 offset 0 size 1 (cell size 4)
Access 7 cell 1 offset 0 size 1 (cell size 2)
Access 8 cell 0 offset 1 size 1 (cell size 4)
Access 9 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
25 -> 0 (size 1 / cell size 4 / offset 0
28 -> 1 (size 1 / cell size 2 / offset 0
34 -> 0 (size 1 / cell size 4 / offset 1
37 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_32_358|32> <TMP_BV_32_360|32>)) (== <TMP_BV_16_359|16> <TMP_BV_16_361|16>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_360|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_360|32>))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_360|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_360|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_360|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_360|32>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_358|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_358|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_358|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_358|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_358|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_358|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_358|32> <TMP_BV_32_360|32>)) (== <TMP_BV_16_359|16> <TMP_BV_16_361|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   1 0 0 0 1 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 
2  |       0 0 0 1 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 1 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 1 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 5)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 4 (cell size 4)
Access 6 cell 1 offset 0 size 4 (cell size 5)
Access 7 cell 2 offset 0 size 4 (cell size 4)
Access 8 cell 2 offset 0 size 1 (cell size 4)
Access 9 cell 1 offset 4 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 5 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 5 / offset 1
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
31 -> 1 (size 4 / cell size 5 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
59 -> 2 (size 1 / cell size 4 / offset 0
62 -> 1 (size 1 / cell size 5 / offset 4
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_371|32> <TMP_BV_32_373|32>)) (== <TMP_BV_40_372|40> <TMP_BV_40_374|40>)) (== <TMP_BV_32_376|32> <TMP_BV_32_375|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_373|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_373|32>))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_375|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_375|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_375|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_375|32>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_371|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_371|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_371|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_371|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_371|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_371|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_371|32> <TMP_BV_32_373|32>)) (== <TMP_BV_40_372|40> <TMP_BV_40_374|40>)) (== <TMP_BV_32_376|32> <TMP_BV_32_375|32>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   1 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 0 
2  |       0 0 0 1 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 1 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 1 0 0 
7  |                 0 0 0 0 
8  |                   0 1 0 
9  |                     0 1 
10 |                       0 
11 |                         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 6)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 6)
Access 5 cell 0 offset 0 size 4 (cell size 4)
Access 6 cell 1 offset 0 size 4 (cell size 6)
Access 7 cell 2 offset 0 size 4 (cell size 4)
Access 8 cell 2 offset 0 size 1 (cell size 4)
Access 9 cell 1 offset 4 size 1 (cell size 6)
Access 10 cell 2 offset 1 size 1 (cell size 4)
Access 11 cell 1 offset 5 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 6 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 6 / offset 1
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
31 -> 1 (size 4 / cell size 6 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
59 -> 2 (size 1 / cell size 4 / offset 0
62 -> 1 (size 1 / cell size 6 / offset 4
68 -> 2 (size 1 / cell size 4 / offset 1
71 -> 1 (size 1 / cell size 6 / offset 5
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_388|32> <TMP_BV_32_390|32>)) (== <TMP_BV_48_389|48> <TMP_BV_48_391|48>)) (== <TMP_BV_32_393|32> <TMP_BV_32_392|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_390|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_390|32>))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_392|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_392|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_392|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_392|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_392|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_392|32>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_388|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_388|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_388|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_388|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_388|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_388|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_388|32> <TMP_BV_32_390|32>)) (== <TMP_BV_48_389|48> <TMP_BV_48_391|48>)) (== <TMP_BV_32_393|32> <TMP_BV_32_392|32>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 4 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   1 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 0 
2  |       0 0 0 1 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     1 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 1 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 1 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 9)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 9)
Access 5 cell 0 offset 0 size 4 (cell size 4)
Access 6 cell 1 offset 0 size 4 (cell size 9)
Access 7 cell 2 offset 0 size 4 (cell size 4)
Access 8 cell 1 offset 4 size 4 (cell size 9)
Access 9 cell 3 offset 0 size 4 (cell size 4)
Access 10 cell 3 offset 0 size 1 (cell size 4)
Access 11 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 9 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 9 / offset 1
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
31 -> 1 (size 4 / cell size 9 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
44 -> 1 (size 4 / cell size 9 / offset 4
47 -> 3 (size 4 / cell size 4 / offset 0
72 -> 3 (size 1 / cell size 4 / offset 0
75 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_404|32> <TMP_BV_32_406|32>)) (== <TMP_BV_72_405|72> <TMP_BV_72_407|72>)) (== <TMP_BV_32_410|32> <TMP_BV_32_408|32>)) (== <TMP_BV_32_411|32> <TMP_BV_32_409|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_406|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_406|32>))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_408|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_408|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_409|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_409|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_409|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_409|32>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_404|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_404|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_404|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_404|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_404|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_404|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_404|32> <TMP_BV_32_406|32>)) (== <TMP_BV_72_405|72> <TMP_BV_72_407|72>)) (== <TMP_BV_32_410|32> <TMP_BV_32_408|32>)) (== <TMP_BV_32_411|32> <TMP_BV_32_409|32>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 4 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   1 0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 0 0 0 
2  |       0 0 0 1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     1 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 1 0 0 
9  |                     0 0 0 0 
10 |                       0 1 0 
11 |                         0 1 
12 |                           0 
13 |                             

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 10)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 10)
Access 5 cell 0 offset 0 size 4 (cell size 4)
Access 6 cell 1 offset 0 size 4 (cell size 10)
Access 7 cell 2 offset 0 size 4 (cell size 4)
Access 8 cell 1 offset 4 size 4 (cell size 10)
Access 9 cell 3 offset 0 size 4 (cell size 4)
Access 10 cell 3 offset 0 size 1 (cell size 4)
Access 11 cell 1 offset 8 size 1 (cell size 10)
Access 12 cell 3 offset 1 size 1 (cell size 4)
Access 13 cell 1 offset 9 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 10 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 10 / offset 1
REWRITE MAP:
15 -> 0 (size 4 / cell size 4 / offset 0
31 -> 1 (size 4 / cell size 10 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
44 -> 1 (size 4 / cell size 10 / offset 4
47 -> 3 (size 4 / cell size 4 / offset 0
72 -> 3 (size 1 / cell size 4 / offset 0
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 3 (size 1 / cell size 4 / offset 1
84 -> 1 (size 1 / cell size 10 / offset 9
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_424|32> <TMP_BV_32_426|32>)) (== <TMP_BV_80_425|80> <TMP_BV_80_427|80>)) (== <TMP_BV_32_430|32> <TMP_BV_32_428|32>)) (== <TMP_BV_32_431|32> <TMP_BV_32_429|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_426|32>)[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_426|32>))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_428|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_428|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_429|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_429|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_429|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_429|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_429|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_429|32>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_424|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_424|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_424|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_424|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_424|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_424|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_424|32> <TMP_BV_32_426|32>)) (== <TMP_BV_80_425|80> <TMP_BV_80_427|80>)) (== <TMP_BV_32_430|32> <TMP_BV_32_428|32>)) (== <TMP_BV_32_431|32> <TMP_BV_32_429|32>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 1 0 
1  |     0 0 0 0 1 
2  |       1 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 1 0 0 0 
1  |     0 0 1 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 1 (cell size 8)
Access 6 cell 1 offset 0 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
15 -> 0 (size 1 / cell size 8 / offset 0
18 -> 1 (size 1 / cell size 5 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_64_438|64> <TMP_BV_64_440|64>)) (== <TMP_BV_40_439|40> <TMP_BV_40_441|40>))

CONSTRAINTS

(not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_64_440|64>[7:0])[7:0] (concat <0x0|56> <TMP_BV_64_440|64>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_438|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_438|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_438|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_438|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_438|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_438|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_438|64> <TMP_BV_64_440|64>)) (== <TMP_BV_40_439|40> <TMP_BV_40_441|40>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 1 1 0 
1  |     0 0 0 0 0 1 
2  |       1 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             1 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 1 1 0 0 0 0 
1  |     0 0 1 0 0 0 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 0 offset 0 size 1 (cell size 8)
Access 7 cell 1 offset 0 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
15 -> 0 (size 4 / cell size 8 / offset 0
25 -> 0 (size 1 / cell size 8 / offset 0
28 -> 1 (size 1 / cell size 5 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_64_449|64> <TMP_BV_64_451|64>)) (== <TMP_BV_40_450|40> <TMP_BV_40_452|40>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_451|64>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_451|64>[31:0]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_64_451|64>[7:0])[7:0] (concat <0x0|56> <TMP_BV_64_451|64>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_449|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_449|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_449|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_449|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_449|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_449|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_449|64> <TMP_BV_64_451|64>)) (== <TMP_BV_40_450|40> <TMP_BV_40_452|40>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 1 0 0 0 
1  |     0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 1 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 1 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 1 (cell size 8)
Access 6 cell 1 offset 0 size 1 (cell size 5)
Access 7 cell 0 offset 1 size 1 (cell size 8)
Access 8 cell 1 offset 1 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
15 -> 0 (size 1 / cell size 8 / offset 0
18 -> 1 (size 1 / cell size 5 / offset 0
24 -> 0 (size 1 / cell size 8 / offset 1
27 -> 1 (size 1 / cell size 5 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_64_461|64> <TMP_BV_64_463|64>)) (== <TMP_BV_40_462|40> <TMP_BV_40_464|40>))

CONSTRAINTS

(not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|56> <TMP_BV_64_463|64>[7:0])[7:0] (concat <0x0|56> <TMP_BV_64_463|64>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_64_463|64>[15:8])[7:0] (concat <0x0|56> <TMP_BV_64_463|64>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_461|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_461|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_461|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_461|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_461|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_461|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_461|64> <TMP_BV_64_463|64>)) (== <TMP_BV_40_462|40> <TMP_BV_40_464|40>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 1 1 0 0 0 
1  |     0 0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             1 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 1 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 1 0 
7  |                 0 1 
8  |                   0 
9  |                     

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 0 offset 0 size 1 (cell size 8)
Access 7 cell 1 offset 0 size 1 (cell size 5)
Access 8 cell 0 offset 1 size 1 (cell size 8)
Access 9 cell 1 offset 1 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
15 -> 0 (size 4 / cell size 8 / offset 0
25 -> 0 (size 1 / cell size 8 / offset 0
28 -> 1 (size 1 / cell size 5 / offset 0
34 -> 0 (size 1 / cell size 8 / offset 1
37 -> 1 (size 1 / cell size 5 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_64_474|64> <TMP_BV_64_476|64>)) (== <TMP_BV_40_475|40> <TMP_BV_40_477|40>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_476|64>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_476|64>[31:0]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|56> <TMP_BV_64_476|64>[7:0])[7:0] (concat <0x0|56> <TMP_BV_64_476|64>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_64_476|64>[15:8])[7:0] (concat <0x0|56> <TMP_BV_64_476|64>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_474|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_474|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_474|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_474|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_474|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_474|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_474|64> <TMP_BV_64_476|64>)) (== <TMP_BV_40_475|40> <TMP_BV_40_477|40>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 1 0 0 0 0 
1  |     0 0 0 0 1 0 0 0 
2  |       1 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 1 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 1 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 1 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 1 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 1 offset 0 size 4 (cell size 5)
Access 7 cell 2 offset 0 size 4 (cell size 4)
Access 8 cell 2 offset 0 size 1 (cell size 4)
Access 9 cell 1 offset 4 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
15 -> 0 (size 4 / cell size 8 / offset 0
31 -> 1 (size 4 / cell size 5 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
59 -> 2 (size 1 / cell size 4 / offset 0
62 -> 1 (size 1 / cell size 5 / offset 4
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_486|64> <TMP_BV_64_488|64>)) (== <TMP_BV_40_487|40> <TMP_BV_40_489|40>)) (== <TMP_BV_32_491|32> <TMP_BV_32_490|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_488|64>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_488|64>[31:0]))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_490|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_490|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_490|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_490|32>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_486|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_486|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_486|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_486|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_486|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_486|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_486|64> <TMP_BV_64_488|64>)) (== <TMP_BV_40_487|40> <TMP_BV_40_489|40>)) (== <TMP_BV_32_491|32> <TMP_BV_32_490|32>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 1 0 0 0 0 0 
2  |       1 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 1 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 1 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 1 
5  |             0 0 0 0 0 0 
6  |               0 0 1 0 0 
7  |                 0 0 0 0 
8  |                   0 1 0 
9  |                     0 1 
10 |                       0 
11 |                         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 1 offset 0 size 4 (cell size 6)
Access 7 cell 2 offset 0 size 4 (cell size 4)
Access 8 cell 2 offset 0 size 1 (cell size 4)
Access 9 cell 1 offset 4 size 1 (cell size 6)
Access 10 cell 2 offset 1 size 1 (cell size 4)
Access 11 cell 1 offset 5 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
REWRITE MAP:
15 -> 0 (size 4 / cell size 8 / offset 0
31 -> 1 (size 4 / cell size 6 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
59 -> 2 (size 1 / cell size 4 / offset 0
62 -> 1 (size 1 / cell size 6 / offset 4
68 -> 2 (size 1 / cell size 4 / offset 1
71 -> 1 (size 1 / cell size 6 / offset 5
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_502|64> <TMP_BV_64_504|64>)) (== <TMP_BV_48_503|48> <TMP_BV_48_505|48>)) (== <TMP_BV_32_507|32> <TMP_BV_32_506|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_504|64>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_504|64>[31:0]))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_506|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_506|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_506|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_506|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_506|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_506|32>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_502|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_502|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_502|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_502|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_502|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_502|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_502|64> <TMP_BV_64_504|64>)) (== <TMP_BV_48_503|48> <TMP_BV_48_505|48>)) (== <TMP_BV_32_507|32> <TMP_BV_32_506|32>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 4 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 1 0 0 0 0 0 
2  |       1 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 1 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     1 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 1 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 1 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 9)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 1 offset 0 size 4 (cell size 9)
Access 7 cell 2 offset 0 size 4 (cell size 4)
Access 8 cell 1 offset 4 size 4 (cell size 9)
Access 9 cell 3 offset 0 size 4 (cell size 4)
Access 10 cell 3 offset 0 size 1 (cell size 4)
Access 11 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 9 / offset 4
REWRITE MAP:
15 -> 0 (size 4 / cell size 8 / offset 0
31 -> 1 (size 4 / cell size 9 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
44 -> 1 (size 4 / cell size 9 / offset 4
47 -> 3 (size 4 / cell size 4 / offset 0
72 -> 3 (size 1 / cell size 4 / offset 0
75 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_517|64> <TMP_BV_64_519|64>)) (== <TMP_BV_72_518|72> <TMP_BV_72_520|72>)) (== <TMP_BV_32_523|32> <TMP_BV_32_521|32>)) (== <TMP_BV_32_524|32> <TMP_BV_32_522|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_519|64>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_519|64>[31:0]))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_521|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_521|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_522|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_522|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_522|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_522|32>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_517|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_517|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_517|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_517|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_517|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_517|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_517|64> <TMP_BV_64_519|64>)) (== <TMP_BV_72_518|72> <TMP_BV_72_520|72>)) (== <TMP_BV_32_523|32> <TMP_BV_32_521|32>)) (== <TMP_BV_32_524|32> <TMP_BV_32_522|32>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 4 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 1 0 0 0 0 0 0 0 
2  |       1 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 1 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     1 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 1 0 0 
9  |                     0 0 0 0 
10 |                       0 1 0 
11 |                         0 1 
12 |                           0 
13 |                             

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 10)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 1 offset 0 size 4 (cell size 10)
Access 7 cell 2 offset 0 size 4 (cell size 4)
Access 8 cell 1 offset 4 size 4 (cell size 10)
Access 9 cell 3 offset 0 size 4 (cell size 4)
Access 10 cell 3 offset 0 size 1 (cell size 4)
Access 11 cell 1 offset 8 size 1 (cell size 10)
Access 12 cell 3 offset 1 size 1 (cell size 4)
Access 13 cell 1 offset 9 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 10 / offset 4
REWRITE MAP:
15 -> 0 (size 4 / cell size 8 / offset 0
31 -> 1 (size 4 / cell size 10 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
44 -> 1 (size 4 / cell size 10 / offset 4
47 -> 3 (size 4 / cell size 4 / offset 0
72 -> 3 (size 1 / cell size 4 / offset 0
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 3 (size 1 / cell size 4 / offset 1
84 -> 1 (size 1 / cell size 10 / offset 9
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_536|64> <TMP_BV_64_538|64>)) (== <TMP_BV_80_537|80> <TMP_BV_80_539|80>)) (== <TMP_BV_32_542|32> <TMP_BV_32_540|32>)) (== <TMP_BV_32_543|32> <TMP_BV_32_541|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_538|64>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_538|64>[31:0]))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_540|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_540|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_541|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_541|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_541|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_541|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_541|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_541|32>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_536|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_536|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_536|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_536|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_536|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_536|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_536|64> <TMP_BV_64_538|64>)) (== <TMP_BV_80_537|80> <TMP_BV_80_539|80>)) (== <TMP_BV_32_542|32> <TMP_BV_32_540|32>)) (== <TMP_BV_32_543|32> <TMP_BV_32_541|32>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 1 
2  |       1 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 1 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 1 0 0 0 
4  |           0 1 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 1 (cell size 8)
Access 8 cell 1 offset 0 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
15 -> 0 (size 1 / cell size 8 / offset 0
18 -> 1 (size 1 / cell size 6 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_64_552|64> <TMP_BV_64_554|64>)) (== <TMP_BV_48_553|48> <TMP_BV_48_555|48>))

CONSTRAINTS

(not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_64_554|64>[7:0])[7:0] (concat <0x0|56> <TMP_BV_64_554|64>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_552|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_552|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_552|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_552|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_552|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_552|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_552|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_552|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_552|64> <TMP_BV_64_554|64>)) (== <TMP_BV_48_553|48> <TMP_BV_48_555|48>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 1 1 0 
1  |     0 0 0 0 0 0 0 1 
2  |       1 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 1 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 1 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 
4  |           0 1 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 4 (cell size 8)
Access 8 cell 0 offset 0 size 1 (cell size 8)
Access 9 cell 1 offset 0 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
15 -> 0 (size 4 / cell size 8 / offset 0
25 -> 0 (size 1 / cell size 8 / offset 0
28 -> 1 (size 1 / cell size 6 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_64_565|64> <TMP_BV_64_567|64>)) (== <TMP_BV_48_566|48> <TMP_BV_48_568|48>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_567|64>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_567|64>[31:0]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_64_567|64>[7:0])[7:0] (concat <0x0|56> <TMP_BV_64_567|64>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_565|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_565|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_565|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_565|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_565|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_565|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_565|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_565|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_565|64> <TMP_BV_64_567|64>)) (== <TMP_BV_48_566|48> <TMP_BV_48_568|48>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 
4  |           0 1 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 1 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 1 (cell size 8)
Access 8 cell 1 offset 0 size 1 (cell size 6)
Access 9 cell 0 offset 1 size 1 (cell size 8)
Access 10 cell 1 offset 1 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
15 -> 0 (size 1 / cell size 8 / offset 0
18 -> 1 (size 1 / cell size 6 / offset 0
24 -> 0 (size 1 / cell size 8 / offset 1
27 -> 1 (size 1 / cell size 6 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_64_579|64> <TMP_BV_64_581|64>)) (== <TMP_BV_48_580|48> <TMP_BV_48_582|48>))

CONSTRAINTS

(not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|56> <TMP_BV_64_581|64>[7:0])[7:0] (concat <0x0|56> <TMP_BV_64_581|64>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_64_581|64>[15:8])[7:0] (concat <0x0|56> <TMP_BV_64_581|64>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_579|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_579|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_579|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_579|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_579|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_579|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_579|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_579|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_579|64> <TMP_BV_64_581|64>)) (== <TMP_BV_48_580|48> <TMP_BV_48_582|48>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 1 1 0 0 0 
1  |     0 0 0 0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 1 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 1 0 
9  |                     0 1 
10 |                       0 
11 |                         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 4 (cell size 8)
Access 8 cell 0 offset 0 size 1 (cell size 8)
Access 9 cell 1 offset 0 size 1 (cell size 6)
Access 10 cell 0 offset 1 size 1 (cell size 8)
Access 11 cell 1 offset 1 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
15 -> 0 (size 4 / cell size 8 / offset 0
25 -> 0 (size 1 / cell size 8 / offset 0
28 -> 1 (size 1 / cell size 6 / offset 0
34 -> 0 (size 1 / cell size 8 / offset 1
37 -> 1 (size 1 / cell size 6 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_64_594|64> <TMP_BV_64_596|64>)) (== <TMP_BV_48_595|48> <TMP_BV_48_597|48>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_596|64>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_596|64>[31:0]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|56> <TMP_BV_64_596|64>[7:0])[7:0] (concat <0x0|56> <TMP_BV_64_596|64>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_64_596|64>[15:8])[7:0] (concat <0x0|56> <TMP_BV_64_596|64>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_594|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_594|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_594|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_594|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_594|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_594|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_594|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_594|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_594|64> <TMP_BV_64_596|64>)) (== <TMP_BV_48_595|48> <TMP_BV_48_597|48>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 
2  |       1 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 1 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     1 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 1 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 4 (cell size 8)
Access 8 cell 1 offset 0 size 4 (cell size 6)
Access 9 cell 2 offset 0 size 4 (cell size 4)
Access 10 cell 2 offset 0 size 1 (cell size 4)
Access 11 cell 1 offset 4 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
15 -> 0 (size 4 / cell size 8 / offset 0
31 -> 1 (size 4 / cell size 6 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
59 -> 2 (size 1 / cell size 4 / offset 0
62 -> 1 (size 1 / cell size 6 / offset 4
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_608|64> <TMP_BV_64_610|64>)) (== <TMP_BV_48_609|48> <TMP_BV_48_611|48>)) (== <TMP_BV_32_613|32> <TMP_BV_32_612|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_610|64>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_610|64>[31:0]))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_612|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_612|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_612|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_612|32>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_608|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_608|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_608|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_608|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_608|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_608|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_608|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_608|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_608|64> <TMP_BV_64_610|64>)) (== <TMP_BV_48_609|48> <TMP_BV_48_611|48>)) (== <TMP_BV_32_613|32> <TMP_BV_32_612|32>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 
2  |       1 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 1 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 1 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     1 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 0 1 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 1 0 0 
9  |                     0 0 0 0 
10 |                       0 1 0 
11 |                         0 1 
12 |                           0 
13 |                             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 4 (cell size 8)
Access 8 cell 1 offset 0 size 4 (cell size 6)
Access 9 cell 2 offset 0 size 4 (cell size 4)
Access 10 cell 2 offset 0 size 1 (cell size 4)
Access 11 cell 1 offset 4 size 1 (cell size 6)
Access 12 cell 2 offset 1 size 1 (cell size 4)
Access 13 cell 1 offset 5 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
15 -> 0 (size 4 / cell size 8 / offset 0
31 -> 1 (size 4 / cell size 6 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
59 -> 2 (size 1 / cell size 4 / offset 0
62 -> 1 (size 1 / cell size 6 / offset 4
68 -> 2 (size 1 / cell size 4 / offset 1
71 -> 1 (size 1 / cell size 6 / offset 5
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_626|64> <TMP_BV_64_628|64>)) (== <TMP_BV_48_627|48> <TMP_BV_48_629|48>)) (== <TMP_BV_32_631|32> <TMP_BV_32_630|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_628|64>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_628|64>[31:0]))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_630|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_630|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_630|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_630|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_630|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_630|32>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_626|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_626|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_626|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_626|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_626|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_626|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_626|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_626|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_626|64> <TMP_BV_64_628|64>)) (== <TMP_BV_48_627|48> <TMP_BV_48_629|48>)) (== <TMP_BV_32_631|32> <TMP_BV_32_630|32>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 4 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 
2  |       1 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 1 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         1 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 1 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 1 
11 |                         0 0 
12 |                           0 
13 |                             

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 9)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 8)
Access 8 cell 1 offset 0 size 4 (cell size 9)
Access 9 cell 2 offset 0 size 4 (cell size 4)
Access 10 cell 1 offset 4 size 4 (cell size 9)
Access 11 cell 3 offset 0 size 4 (cell size 4)
Access 12 cell 3 offset 0 size 1 (cell size 4)
Access 13 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 9 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 9 / offset 5
REWRITE MAP:
15 -> 0 (size 4 / cell size 8 / offset 0
31 -> 1 (size 4 / cell size 9 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
44 -> 1 (size 4 / cell size 9 / offset 4
47 -> 3 (size 4 / cell size 4 / offset 0
72 -> 3 (size 1 / cell size 4 / offset 0
75 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_643|64> <TMP_BV_64_645|64>)) (== <TMP_BV_72_644|72> <TMP_BV_72_646|72>)) (== <TMP_BV_32_649|32> <TMP_BV_32_647|32>)) (== <TMP_BV_32_650|32> <TMP_BV_32_648|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_645|64>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_645|64>[31:0]))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_647|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_647|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_648|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_648|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_648|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_648|32>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_643|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_643|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_643|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_643|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_643|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_643|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_643|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_643|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_643|64> <TMP_BV_64_645|64>)) (== <TMP_BV_72_644|72> <TMP_BV_72_646|72>)) (== <TMP_BV_32_649|32> <TMP_BV_32_647|32>)) (== <TMP_BV_32_650|32> <TMP_BV_32_648|32>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 4 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 16
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 0 0 
2  |       1 0 0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 1 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 0 0 0 
11 |                         1 0 0 0 
12 |                           0 0 0 
13 |                             0 0 
14 |                               0 
15 |                                 

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 1 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 1 0 0 
11 |                         0 0 0 0 
12 |                           0 1 0 
13 |                             0 1 
14 |                               0 
15 |                                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 10)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 10)
Access 7 cell 0 offset 0 size 4 (cell size 8)
Access 8 cell 1 offset 0 size 4 (cell size 10)
Access 9 cell 2 offset 0 size 4 (cell size 4)
Access 10 cell 1 offset 4 size 4 (cell size 10)
Access 11 cell 3 offset 0 size 4 (cell size 4)
Access 12 cell 3 offset 0 size 1 (cell size 4)
Access 13 cell 1 offset 8 size 1 (cell size 10)
Access 14 cell 3 offset 1 size 1 (cell size 4)
Access 15 cell 1 offset 9 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 10 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 10 / offset 5
REWRITE MAP:
15 -> 0 (size 4 / cell size 8 / offset 0
31 -> 1 (size 4 / cell size 10 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
44 -> 1 (size 4 / cell size 10 / offset 4
47 -> 3 (size 4 / cell size 4 / offset 0
72 -> 3 (size 1 / cell size 4 / offset 0
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 3 (size 1 / cell size 4 / offset 1
84 -> 1 (size 1 / cell size 10 / offset 9
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_664|64> <TMP_BV_64_666|64>)) (== <TMP_BV_80_665|80> <TMP_BV_80_667|80>)) (== <TMP_BV_32_670|32> <TMP_BV_32_668|32>)) (== <TMP_BV_32_671|32> <TMP_BV_32_669|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_666|64>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_666|64>[31:0]))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_668|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_668|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_669|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_669|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_669|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_669|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_669|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_669|32>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_664|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_664|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_664|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_664|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_664|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_664|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_664|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_664|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_664|64> <TMP_BV_64_666|64>)) (== <TMP_BV_80_665|80> <TMP_BV_80_667|80>)) (== <TMP_BV_32_670|32> <TMP_BV_32_668|32>)) (== <TMP_BV_32_671|32> <TMP_BV_32_669|32>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           1 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 1 1 0 0 0 
3  |         0 0 1 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 1 (cell size 12)
Access 8 cell 1 offset 0 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
15 -> 0 (size 1 / cell size 12 / offset 0
18 -> 1 (size 1 / cell size 9 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_96_679|96> <TMP_BV_96_681|96>)) (== <TMP_BV_72_680|72> <TMP_BV_72_682|72>))

CONSTRAINTS

(not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_96_681|96>[7:0])[7:0] (concat <0x0|56> <TMP_BV_96_681|96>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_679|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_679|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_679|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_679|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_679|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_679|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_679|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_679|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_679|96> <TMP_BV_96_681|96>)) (== <TMP_BV_72_680|72> <TMP_BV_72_682|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 1 1 0 
1  |     0 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           1 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 1 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 
3  |         0 0 1 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 0 offset 0 size 1 (cell size 12)
Access 9 cell 1 offset 0 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
15 -> 0 (size 4 / cell size 12 / offset 0
25 -> 0 (size 1 / cell size 12 / offset 0
28 -> 1 (size 1 / cell size 9 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_96_691|96> <TMP_BV_96_693|96>)) (== <TMP_BV_72_692|72> <TMP_BV_72_694|72>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_693|96>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_693|96>[31:0]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_96_693|96>[7:0])[7:0] (concat <0x0|56> <TMP_BV_96_693|96>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_691|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_691|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_691|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_691|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_691|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_691|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_691|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_691|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_691|96> <TMP_BV_96_693|96>)) (== <TMP_BV_72_692|72> <TMP_BV_72_694|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 1 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 1 (cell size 12)
Access 8 cell 1 offset 0 size 1 (cell size 9)
Access 9 cell 0 offset 1 size 1 (cell size 12)
Access 10 cell 1 offset 1 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
15 -> 0 (size 1 / cell size 12 / offset 0
18 -> 1 (size 1 / cell size 9 / offset 0
24 -> 0 (size 1 / cell size 12 / offset 1
27 -> 1 (size 1 / cell size 9 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_96_704|96> <TMP_BV_96_706|96>)) (== <TMP_BV_72_705|72> <TMP_BV_72_707|72>))

CONSTRAINTS

(not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|56> <TMP_BV_96_706|96>[7:0])[7:0] (concat <0x0|56> <TMP_BV_96_706|96>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_96_706|96>[15:8])[7:0] (concat <0x0|56> <TMP_BV_96_706|96>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_704|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_704|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_704|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_704|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_704|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_704|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_704|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_704|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_704|96> <TMP_BV_96_706|96>)) (== <TMP_BV_72_705|72> <TMP_BV_72_707|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 1 1 0 0 0 
1  |     0 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 1 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 1 0 
9  |                     0 1 
10 |                       0 
11 |                         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 0 offset 0 size 1 (cell size 12)
Access 9 cell 1 offset 0 size 1 (cell size 9)
Access 10 cell 0 offset 1 size 1 (cell size 12)
Access 11 cell 1 offset 1 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
15 -> 0 (size 4 / cell size 12 / offset 0
25 -> 0 (size 1 / cell size 12 / offset 0
28 -> 1 (size 1 / cell size 9 / offset 0
34 -> 0 (size 1 / cell size 12 / offset 1
37 -> 1 (size 1 / cell size 9 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_96_718|96> <TMP_BV_96_720|96>)) (== <TMP_BV_72_719|72> <TMP_BV_72_721|72>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_720|96>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_720|96>[31:0]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|56> <TMP_BV_96_720|96>[7:0])[7:0] (concat <0x0|56> <TMP_BV_96_720|96>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_96_720|96>[15:8])[7:0] (concat <0x0|56> <TMP_BV_96_720|96>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_718|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_718|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_718|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_718|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_718|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_718|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_718|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_718|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_718|96> <TMP_BV_96_720|96>)) (== <TMP_BV_72_719|72> <TMP_BV_72_721|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 1 
4  |           1 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     1 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 1 
2  |       0 1 1 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 1 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 1 offset 0 size 4 (cell size 9)
Access 9 cell 2 offset 0 size 4 (cell size 4)
Access 10 cell 2 offset 0 size 1 (cell size 4)
Access 11 cell 1 offset 4 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
15 -> 0 (size 4 / cell size 12 / offset 0
31 -> 1 (size 4 / cell size 9 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
59 -> 2 (size 1 / cell size 4 / offset 0
62 -> 1 (size 1 / cell size 9 / offset 4
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_731|96> <TMP_BV_96_733|96>)) (== <TMP_BV_72_732|72> <TMP_BV_72_734|72>)) (== <TMP_BV_32_736|32> <TMP_BV_32_735|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_733|96>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_733|96>[31:0]))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_735|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_735|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_735|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_735|32>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_731|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_731|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_731|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_731|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_731|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_731|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_731|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_731|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_731|96> <TMP_BV_96_733|96>)) (== <TMP_BV_72_732|72> <TMP_BV_72_734|72>)) (== <TMP_BV_32_736|32> <TMP_BV_32_735|32>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 1 0 0 
4  |           1 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     1 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 1 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 1 0 0 
9  |                     0 0 0 0 
10 |                       0 1 0 
11 |                         0 1 
12 |                           0 
13 |                             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 1 offset 0 size 4 (cell size 9)
Access 9 cell 2 offset 0 size 4 (cell size 4)
Access 10 cell 2 offset 0 size 1 (cell size 4)
Access 11 cell 1 offset 4 size 1 (cell size 9)
Access 12 cell 2 offset 1 size 1 (cell size 4)
Access 13 cell 1 offset 5 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
15 -> 0 (size 4 / cell size 12 / offset 0
31 -> 1 (size 4 / cell size 9 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
59 -> 2 (size 1 / cell size 4 / offset 0
62 -> 1 (size 1 / cell size 9 / offset 4
68 -> 2 (size 1 / cell size 4 / offset 1
71 -> 1 (size 1 / cell size 9 / offset 5
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_748|96> <TMP_BV_96_750|96>)) (== <TMP_BV_72_749|72> <TMP_BV_72_751|72>)) (== <TMP_BV_32_753|32> <TMP_BV_32_752|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_750|96>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_750|96>[31:0]))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_752|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_752|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_752|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_752|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_752|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_752|32>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_748|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_748|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_748|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_748|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_748|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_748|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_748|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_748|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_748|96> <TMP_BV_96_750|96>)) (== <TMP_BV_72_749|72> <TMP_BV_72_751|72>)) (== <TMP_BV_32_753|32> <TMP_BV_32_752|32>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 4 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 1 0 0 0 
4  |           1 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 1 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         1 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 1 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 1 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 1 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 1 
11 |                         0 0 
12 |                           0 
13 |                             

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 1 offset 0 size 4 (cell size 9)
Access 9 cell 2 offset 0 size 4 (cell size 4)
Access 10 cell 1 offset 4 size 4 (cell size 9)
Access 11 cell 3 offset 0 size 4 (cell size 4)
Access 12 cell 3 offset 0 size 1 (cell size 4)
Access 13 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
15 -> 0 (size 4 / cell size 12 / offset 0
31 -> 1 (size 4 / cell size 9 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
44 -> 1 (size 4 / cell size 9 / offset 4
47 -> 3 (size 4 / cell size 4 / offset 0
72 -> 3 (size 1 / cell size 4 / offset 0
75 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_764|96> <TMP_BV_96_766|96>)) (== <TMP_BV_72_765|72> <TMP_BV_72_767|72>)) (== <TMP_BV_32_770|32> <TMP_BV_32_768|32>)) (== <TMP_BV_32_771|32> <TMP_BV_32_769|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_766|96>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_766|96>[31:0]))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_768|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_768|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_769|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_769|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_769|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_769|32>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_764|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_764|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_764|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_764|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_764|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_764|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_764|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_764|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_764|96> <TMP_BV_96_766|96>)) (== <TMP_BV_72_765|72> <TMP_BV_72_767|72>)) (== <TMP_BV_32_770|32> <TMP_BV_32_768|32>)) (== <TMP_BV_32_771|32> <TMP_BV_32_769|32>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 4 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 16
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 1 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 1 0 0 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 0 0 0 
11 |                         1 0 0 0 
12 |                           0 0 0 
13 |                             0 0 
14 |                               0 
15 |                                 

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 1 0 0 
4  |           0 0 0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 0 1 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 1 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 1 0 0 
11 |                         0 0 0 0 
12 |                           0 1 0 
13 |                             0 1 
14 |                               0 
15 |                                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 1 offset 0 size 4 (cell size 10)
Access 9 cell 2 offset 0 size 4 (cell size 4)
Access 10 cell 1 offset 4 size 4 (cell size 10)
Access 11 cell 3 offset 0 size 4 (cell size 4)
Access 12 cell 3 offset 0 size 1 (cell size 4)
Access 13 cell 1 offset 8 size 1 (cell size 10)
Access 14 cell 3 offset 1 size 1 (cell size 4)
Access 15 cell 1 offset 9 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
REWRITE MAP:
15 -> 0 (size 4 / cell size 12 / offset 0
31 -> 1 (size 4 / cell size 10 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
44 -> 1 (size 4 / cell size 10 / offset 4
47 -> 3 (size 4 / cell size 4 / offset 0
72 -> 3 (size 1 / cell size 4 / offset 0
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 3 (size 1 / cell size 4 / offset 1
84 -> 1 (size 1 / cell size 10 / offset 9
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_784|96> <TMP_BV_96_786|96>)) (== <TMP_BV_80_785|80> <TMP_BV_80_787|80>)) (== <TMP_BV_32_790|32> <TMP_BV_32_788|32>)) (== <TMP_BV_32_791|32> <TMP_BV_32_789|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_786|96>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_786|96>[31:0]))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_788|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_788|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_789|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_789|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_789|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_789|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_789|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_789|32>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_784|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_784|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_784|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_784|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_784|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_784|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_784|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_784|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_784|96> <TMP_BV_96_786|96>)) (== <TMP_BV_80_785|80> <TMP_BV_80_787|80>)) (== <TMP_BV_32_790|32> <TMP_BV_32_788|32>)) (== <TMP_BV_32_791|32> <TMP_BV_32_789|32>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 1 0 0 0 
6  |               0 1 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 1 (cell size 12)
Access 10 cell 1 offset 0 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
15 -> 0 (size 1 / cell size 12 / offset 0
18 -> 1 (size 1 / cell size 10 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_96_801|96> <TMP_BV_96_803|96>)) (== <TMP_BV_80_802|80> <TMP_BV_80_804|80>))

CONSTRAINTS

(not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_96_803|96>[7:0])[7:0] (concat <0x0|56> <TMP_BV_96_803|96>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_801|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_801|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_801|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_801|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_801|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_801|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_801|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_801|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_801|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_801|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_801|96> <TMP_BV_96_803|96>)) (== <TMP_BV_80_802|80> <TMP_BV_80_804|80>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 1 1 0 
1  |     0 0 0 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     1 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 
6  |               0 1 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 0 offset 0 size 1 (cell size 12)
Access 11 cell 1 offset 0 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
15 -> 0 (size 4 / cell size 12 / offset 0
25 -> 0 (size 1 / cell size 12 / offset 0
28 -> 1 (size 1 / cell size 10 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_96_815|96> <TMP_BV_96_817|96>)) (== <TMP_BV_80_816|80> <TMP_BV_80_818|80>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_817|96>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_817|96>[31:0]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_96_817|96>[7:0])[7:0] (concat <0x0|56> <TMP_BV_96_817|96>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_815|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_815|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_815|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_815|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_815|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_815|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_815|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_815|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_815|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_815|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_815|96> <TMP_BV_96_817|96>)) (== <TMP_BV_80_816|80> <TMP_BV_80_818|80>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 13
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   0 0 0 0 
9  |                     0 0 0 
10 |                       0 0 
11 |                         0 
12 |                           

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 
6  |               0 1 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   0 0 0 0 
9  |                     0 1 0 
10 |                       0 1 
11 |                         0 
12 |                           

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 1 (cell size 12)
Access 10 cell 1 offset 0 size 1 (cell size 10)
Access 11 cell 0 offset 1 size 1 (cell size 12)
Access 12 cell 1 offset 1 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
15 -> 0 (size 1 / cell size 12 / offset 0
18 -> 1 (size 1 / cell size 10 / offset 0
24 -> 0 (size 1 / cell size 12 / offset 1
27 -> 1 (size 1 / cell size 10 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_96_830|96> <TMP_BV_96_832|96>)) (== <TMP_BV_80_831|80> <TMP_BV_80_833|80>))

CONSTRAINTS

(not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|56> <TMP_BV_96_832|96>[7:0])[7:0] (concat <0x0|56> <TMP_BV_96_832|96>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_96_832|96>[15:8])[7:0] (concat <0x0|56> <TMP_BV_96_832|96>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_830|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_830|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_830|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_830|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_830|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_830|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_830|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_830|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_830|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_830|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_830|96> <TMP_BV_96_832|96>)) (== <TMP_BV_80_831|80> <TMP_BV_80_833|80>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 0 0 1 1 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     1 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 1 0 
11 |                         0 1 
12 |                           0 
13 |                             

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 0 offset 0 size 1 (cell size 12)
Access 11 cell 1 offset 0 size 1 (cell size 10)
Access 12 cell 0 offset 1 size 1 (cell size 12)
Access 13 cell 1 offset 1 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
15 -> 0 (size 4 / cell size 12 / offset 0
25 -> 0 (size 1 / cell size 12 / offset 0
28 -> 1 (size 1 / cell size 10 / offset 0
34 -> 0 (size 1 / cell size 12 / offset 1
37 -> 1 (size 1 / cell size 10 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_96_846|96> <TMP_BV_96_848|96>)) (== <TMP_BV_80_847|80> <TMP_BV_80_849|80>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_848|96>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_848|96>[31:0]))[31:0])[31:0]) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|56> <TMP_BV_96_848|96>[7:0])[7:0] (concat <0x0|56> <TMP_BV_96_848|96>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_96_848|96>[15:8])[7:0] (concat <0x0|56> <TMP_BV_96_848|96>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_846|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_846|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_846|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_846|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_846|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_846|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_846|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_846|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_846|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_846|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_846|96> <TMP_BV_96_848|96>)) (== <TMP_BV_80_847|80> <TMP_BV_80_849|80>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 1 
4  |           1 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         1 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 1 
2  |       0 1 1 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 1 
11 |                         0 0 
12 |                           0 
13 |                             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 1 offset 0 size 4 (cell size 10)
Access 11 cell 2 offset 0 size 4 (cell size 4)
Access 12 cell 2 offset 0 size 1 (cell size 4)
Access 13 cell 1 offset 4 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
15 -> 0 (size 4 / cell size 12 / offset 0
31 -> 1 (size 4 / cell size 10 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
59 -> 2 (size 1 / cell size 4 / offset 0
62 -> 1 (size 1 / cell size 10 / offset 4
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_861|96> <TMP_BV_96_863|96>)) (== <TMP_BV_80_862|80> <TMP_BV_80_864|80>)) (== <TMP_BV_32_866|32> <TMP_BV_32_865|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_863|96>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_863|96>[31:0]))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_865|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_865|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_865|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_865|32>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_861|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_861|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_861|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_861|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_861|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_861|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_861|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_861|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_861|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_861|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_861|96> <TMP_BV_96_863|96>)) (== <TMP_BV_80_862|80> <TMP_BV_80_864|80>)) (== <TMP_BV_32_866|32> <TMP_BV_32_865|32>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 16
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 1 0 0 
4  |           1 0 0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 0 0 0 
11 |                         1 0 0 0 
12 |                           0 0 0 
13 |                             0 0 
14 |                               0 
15 |                                 

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 1 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 1 0 0 
11 |                         0 0 0 0 
12 |                           0 1 0 
13 |                             0 1 
14 |                               0 
15 |                                 

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 1 offset 0 size 4 (cell size 10)
Access 11 cell 2 offset 0 size 4 (cell size 4)
Access 12 cell 2 offset 0 size 1 (cell size 4)
Access 13 cell 1 offset 4 size 1 (cell size 10)
Access 14 cell 2 offset 1 size 1 (cell size 4)
Access 15 cell 1 offset 5 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
15 -> 0 (size 4 / cell size 12 / offset 0
31 -> 1 (size 4 / cell size 10 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
59 -> 2 (size 1 / cell size 4 / offset 0
62 -> 1 (size 1 / cell size 10 / offset 4
68 -> 2 (size 1 / cell size 4 / offset 1
71 -> 1 (size 1 / cell size 10 / offset 5
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_880|96> <TMP_BV_96_882|96>)) (== <TMP_BV_80_881|80> <TMP_BV_80_883|80>)) (== <TMP_BV_32_885|32> <TMP_BV_32_884|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_882|96>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_882|96>[31:0]))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_884|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_884|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_884|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_884|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_884|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_884|32>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_880|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_880|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_880|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_880|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_880|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_880|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_880|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_880|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_880|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_880|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_880|96> <TMP_BV_96_882|96>)) (== <TMP_BV_80_881|80> <TMP_BV_80_883|80>)) (== <TMP_BV_32_885|32> <TMP_BV_32_884|32>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 4 4 5 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 16
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 1 0 0 0 
4  |           1 0 0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 0 1 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 0 0 0 
11 |                         0 0 0 0 
12 |                           0 0 0 
13 |                             1 0 
14 |                               0 
15 |                                 

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 1 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 0 1 
4  |           0 0 0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 1 0 0 0 
11 |                         0 0 0 0 
12 |                           0 0 1 
13 |                             0 0 
14 |                               0 
15 |                                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 1 offset 0 size 4 (cell size 10)
Access 11 cell 2 offset 0 size 4 (cell size 4)
Access 12 cell 1 offset 4 size 4 (cell size 10)
Access 13 cell 3 offset 0 size 4 (cell size 4)
Access 14 cell 3 offset 0 size 1 (cell size 4)
Access 15 cell 1 offset 8 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
15 -> 0 (size 4 / cell size 12 / offset 0
31 -> 1 (size 4 / cell size 10 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
44 -> 1 (size 4 / cell size 10 / offset 4
47 -> 3 (size 4 / cell size 4 / offset 0
72 -> 3 (size 1 / cell size 4 / offset 0
75 -> 1 (size 1 / cell size 10 / offset 8
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_898|96> <TMP_BV_96_900|96>)) (== <TMP_BV_80_899|80> <TMP_BV_80_901|80>)) (== <TMP_BV_32_904|32> <TMP_BV_32_902|32>)) (== <TMP_BV_32_905|32> <TMP_BV_32_903|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_900|96>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_900|96>[31:0]))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_902|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_902|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_903|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_903|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_903|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_903|32>[7:0])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_898|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_898|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_898|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_898|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_898|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_898|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_898|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_898|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_898|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_898|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_898|96> <TMP_BV_96_900|96>)) (== <TMP_BV_80_899|80> <TMP_BV_80_901|80>)) (== <TMP_BV_32_904|32> <TMP_BV_32_902|32>)) (== <TMP_BV_32_905|32> <TMP_BV_32_903|32>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 4 4 5 6 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rsi, %rdx
nop 
nop 
movl %edi, %eax
movl %edx, %edi
nop 
andl $0x3, %edi
movq %rax, %rcx
nop 
nop 
nop 
nop 
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
nop 
leal -0x1010101(%r8), %edi
movl %r8d, %esi
notl %esi
andl $0x80808080, %esi
andl %edi, %esi
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addw $0x4, %dx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
andl %edx, %edx
movl (%r15,%rdx,1), %r8d
movq %r8, %r9
notl %r9d
leal -0x1010101(%r8), %esi
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbq (%r15,%rdx,1), %rsi
addl $0x1, %edx
orl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 18
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 1 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 0 1 0 0 
7  |                 0 0 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 0 1 
9  |                     0 0 0 0 0 0 0 0 
10 |                       0 0 0 0 0 0 0 
11 |                         0 0 0 0 0 0 
12 |                           0 0 0 0 0 
13 |                             1 0 0 0 
14 |                               0 0 0 
15 |                                 0 0 
16 |                                   0 
17 |                                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 0 1 0 0 
4  |           0 0 0 0 0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 0 0 0 1 
7  |                 0 0 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 0 0 
10 |                       0 1 0 0 0 0 0 
11 |                         0 0 0 0 0 0 
12 |                           0 0 1 0 0 
13 |                             0 0 0 0 
14 |                               0 1 0 
15 |                                 0 1 
16 |                                   0 
17 |                                     

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 1 offset 0 size 4 (cell size 10)
Access 11 cell 2 offset 0 size 4 (cell size 4)
Access 12 cell 1 offset 4 size 4 (cell size 10)
Access 13 cell 3 offset 0 size 4 (cell size 4)
Access 14 cell 3 offset 0 size 1 (cell size 4)
Access 15 cell 1 offset 8 size 1 (cell size 10)
Access 16 cell 3 offset 1 size 1 (cell size 4)
Access 17 cell 1 offset 9 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
15 -> 0 (size 4 / cell size 12 / offset 0
31 -> 1 (size 4 / cell size 10 / offset 0
34 -> 2 (size 4 / cell size 4 / offset 0
44 -> 1 (size 4 / cell size 10 / offset 4
47 -> 3 (size 4 / cell size 4 / offset 0
72 -> 3 (size 1 / cell size 4 / offset 0
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 3 (size 1 / cell size 4 / offset 1
84 -> 1 (size 1 / cell size 10 / offset 9
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_920|96> <TMP_BV_96_922|96>)) (== <TMP_BV_80_921|80> <TMP_BV_80_923|80>)) (== <TMP_BV_32_926|32> <TMP_BV_32_924|32>)) (== <TMP_BV_32_927|32> <TMP_BV_32_925|32>))

CONSTRAINTS

(not (not (== (and (concat <0x0|32> <%rsi_2_INIT|64>[31:0])[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_922|96>[31:0])[31:0])[31:0])[31:0] <0x80808080|32>))[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_922|96>[31:0]))[31:0])[31:0]) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_924|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_924|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> <TMP_BV_32_925|32>)[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_925|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|56> <TMP_BV_32_925|32>[7:0])[7:0] (concat <0x0|56> <TMP_BV_32_925|32>[7:0])[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (and (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0] (concat (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (and (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0] (concat <%rsi_2_INIT|64>[63:16] (plus (concat <0x0|1> (sign-extend-16 <0x4|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[15:0]))[15:0])[31:0]))[15:0]))[15:0])[31:0]))[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (or (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0] (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0]))[31:0]))[31:0])[31:0]))) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|56> <TMP_BV_32_925|32>[15:8])[7:0] (concat <0x0|56> <TMP_BV_32_925|32>[15:8])[7:0]) <0x0|8>)))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_920|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_920|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_920|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_920|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_920|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_920|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_920|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_920|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_920|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_920|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_920|96> <TMP_BV_96_922|96>)) (== <TMP_BV_80_921|80> <TMP_BV_80_923|80>)) (== <TMP_BV_32_926|32> <TMP_BV_32_924|32>)) (== <TMP_BV_32_927|32> <TMP_BV_32_925|32>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
Equivalent: yes
