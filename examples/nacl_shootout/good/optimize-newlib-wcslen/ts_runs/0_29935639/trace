Training TCs: 0
flags for addb_al_imm8: { }
flags for addw_ax_imm16: { }
flags for addl_eax_imm32: { }
flags for addw_m16_imm16: { }
flags for addw_m16_imm8: { }
flags for addw_m16_r16: { }
flags for addl_m32_imm32: { }
flags for addl_m32_imm8: { }
flags for addl_m32_r32: { }
flags for addq_m64_imm32: { }
flags for addq_m64_imm8: { }
flags for addq_m64_r64: { }
flags for addb_m8_imm8: { }
flags for addb_m8_r8: { }
flags for addb_m8_rh: { }
flags for addw_r16_imm16: { }
flags for addw_r16_imm8: { }
flags for addw_r16_m16: { }
flags for addw_r16_r16: { }
flags for addw_r16_r16_1: { }
flags for addl_r32_imm32: { }
flags for addl_r32_imm8: { }
flags for addl_r32_m32: { }
flags for addl_r32_r32: { }
flags for addl_r32_r32_1: { }
flags for addq_r64_imm32: { }
flags for addq_r64_imm8: { }
flags for addq_r64_m64: { }
flags for addq_r64_r64: { }
flags for addq_r64_r64_1: { }
flags for addb_r8_imm8: { }
flags for addb_r8_m8: { }
flags for addb_r8_r8: { }
flags for addb_r8_r8_1: { }
flags for addb_r8_rh: { }
flags for addb_r8_rh_1: { }
flags for addq_rax_imm32: { }
flags for addb_rh_imm8: { }
flags for addb_rh_m8: { }
flags for addb_rh_r8: { }
flags for addb_rh_r8_1: { }
flags for addb_rh_rh: { }
flags for addb_rh_rh_1: { }
flags for addpd_xmm_m128: { sse2 }
flags for addpd_xmm_xmm: { sse2 }
flags for addps_xmm_m128: { sse }
flags for addps_xmm_xmm: { sse }
flags for addsd_xmm_m64: { sse2 }
flags for addsd_xmm_xmm: { sse2 }
flags for addss_xmm_m32: { sse }
flags for addss_xmm_xmm: { sse }
flags for addsubpd_xmm_m128: { pni }
flags for addsubpd_xmm_xmm: { pni }
flags for addsubps_xmm_m128: { pni }
flags for addsubps_xmm_xmm: { pni }
flags for aesdec_xmm_m128: { aes }
flags for aesdec_xmm_xmm: { aes }
flags for aesdeclast_xmm_m128: { aes }
flags for aesdeclast_xmm_xmm: { aes }
flags for aesenc_xmm_m128: { aes }
flags for aesenc_xmm_xmm: { aes }
flags for aesenclast_xmm_m128: { aes }
flags for aesenclast_xmm_xmm: { aes }
flags for aesimc_xmm_m128: { aes }
flags for aesimc_xmm_xmm: { aes }
flags for aeskeygenassist_xmm_m128_imm8: { aes }
flags for aeskeygenassist_xmm_xmm_imm8: { aes }
flags for andb_al_imm8: { }
flags for andw_ax_imm16: { }
flags for andl_eax_imm32: { }
flags for andw_m16_imm16: { }
flags for andw_m16_imm8: { }
flags for andw_m16_r16: { }
flags for andl_m32_imm32: { }
flags for andl_m32_imm8: { }
flags for andl_m32_r32: { }
flags for andq_m64_imm32: { }
flags for andq_m64_imm8: { }
flags for andq_m64_r64: { }
flags for andb_m8_imm8: { }
flags for andb_m8_r8: { }
flags for andb_m8_rh: { }
flags for andw_r16_imm16: { }
flags for andw_r16_imm8: { }
flags for andw_r16_m16: { }
flags for andw_r16_r16: { }
flags for andw_r16_r16_1: { }
flags for andl_r32_imm32: { }
flags for andl_r32_imm8: { }
flags for andl_r32_m32: { }
flags for andl_r32_r32: { }
flags for andl_r32_r32_1: { }
flags for andq_r64_imm32: { }
flags for andq_r64_imm8: { }
flags for andq_r64_m64: { }
flags for andq_r64_r64: { }
flags for andq_r64_r64_1: { }
flags for andb_r8_imm8: { }
flags for andb_r8_m8: { }
flags for andb_r8_r8: { }
flags for andb_r8_r8_1: { }
flags for andb_r8_rh: { }
flags for andb_r8_rh_1: { }
flags for andq_rax_imm32: { }
flags for andb_rh_imm8: { }
flags for andb_rh_m8: { }
flags for andb_rh_r8: { }
flags for andb_rh_r8_1: { }
flags for andb_rh_rh: { }
flags for andb_rh_rh_1: { }
flags for andnl_r32_r32_m32: { bmi1 }
flags for andnl_r32_r32_r32: { bmi1 }
flags for andnq_r64_r64_m64: { bmi1 }
flags for andnq_r64_r64_r64: { bmi1 }
flags for andnpd_xmm_m128: { sse2 }
flags for andnpd_xmm_xmm: { sse2 }
flags for andnps_xmm_m128: { sse }
flags for andnps_xmm_xmm: { sse }
flags for andpd_xmm_m128: { sse2 }
flags for andpd_xmm_xmm: { sse2 }
flags for andps_xmm_m128: { sse }
flags for andps_xmm_xmm: { sse }
flags for bextrl_r32_m32_r32: { bmi1 }
flags for bextrl_r32_r32_r32: { bmi1 }
flags for bextrq_r64_m64_r64: { bmi1 }
flags for bextrq_r64_r64_r64: { bmi1 }
flags for blendpd_xmm_m128_imm8: { sse4_1 }
flags for blendpd_xmm_xmm_imm8: { sse4_1 }
flags for blendps_xmm_m128_imm8: { sse4_1 }
flags for blendps_xmm_xmm_imm8: { sse4_1 }
flags for blendvpd_xmm_m128_xmm0: { sse4_1 }
flags for blendvpd_xmm_xmm_xmm0: { sse4_1 }
flags for blendvps_xmm_m128_xmm0: { sse4_1 }
flags for blendvps_xmm_xmm_xmm0: { sse4_1 }
flags for blsil_r32_m32: { bmi1 }
flags for blsil_r32_r32: { bmi1 }
flags for blsiq_r64_m64: { bmi1 }
flags for blsiq_r64_r64: { bmi1 }
flags for blsmskl_r32_m32: { bmi1 }
flags for blsmskl_r32_r32: { bmi1 }
flags for blsmskq_r64_m64: { bmi1 }
flags for blsmskq_r64_r64: { bmi1 }
flags for blsrl_r32_m32: { bmi1 }
flags for blsrl_r32_r32: { bmi1 }
flags for blsrq_r64_m64: { bmi1 }
flags for blsrq_r64_r64: { bmi1 }
flags for bzhil_r32_m32_r32: { bmi2 }
flags for bzhil_r32_r32_r32: { bmi2 }
flags for bzhiq_r64_m64_r64: { bmi2 }
flags for bzhiq_r64_r64_r64: { bmi2 }
flags for cmovaw_r16_m16: { cmov }
flags for cmovaw_r16_r16: { cmov }
flags for cmoval_r32_m32: { cmov }
flags for cmoval_r32_r32: { cmov }
flags for cmovaq_r64_m64: { cmov }
flags for cmovaq_r64_r64: { cmov }
flags for cmovaew_r16_m16: { cmov }
flags for cmovaew_r16_r16: { cmov }
flags for cmovael_r32_m32: { cmov }
flags for cmovael_r32_r32: { cmov }
flags for cmovaeq_r64_m64: { cmov }
flags for cmovaeq_r64_r64: { cmov }
flags for cmovbw_r16_m16: { cmov }
flags for cmovbw_r16_r16: { cmov }
flags for cmovbl_r32_m32: { cmov }
flags for cmovbl_r32_r32: { cmov }
flags for cmovbq_r64_m64: { cmov }
flags for cmovbq_r64_r64: { cmov }
flags for cmovbew_r16_m16: { cmov }
flags for cmovbew_r16_r16: { cmov }
flags for cmovbel_r32_m32: { cmov }
flags for cmovbel_r32_r32: { cmov }
flags for cmovbeq_r64_m64: { cmov }
flags for cmovbeq_r64_r64: { cmov }
flags for cmovcw_r16_m16: { cmov }
flags for cmovcw_r16_r16: { cmov }
flags for cmovcl_r32_m32: { cmov }
flags for cmovcl_r32_r32: { cmov }
flags for cmovcq_r64_m64: { cmov }
flags for cmovcq_r64_r64: { cmov }
flags for cmovew_r16_m16: { cmov }
flags for cmovew_r16_r16: { cmov }
flags for cmovel_r32_m32: { cmov }
flags for cmovel_r32_r32: { cmov }
flags for cmoveq_r64_m64: { cmov }
flags for cmoveq_r64_r64: { cmov }
flags for cmovgw_r16_m16: { cmov }
flags for cmovgw_r16_r16: { cmov }
flags for cmovgl_r32_m32: { cmov }
flags for cmovgl_r32_r32: { cmov }
flags for cmovgq_r64_m64: { cmov }
flags for cmovgq_r64_r64: { cmov }
flags for cmovgew_r16_m16: { cmov }
flags for cmovgew_r16_r16: { cmov }
flags for cmovgel_r32_m32: { cmov }
flags for cmovgel_r32_r32: { cmov }
flags for cmovgeq_r64_m64: { cmov }
flags for cmovgeq_r64_r64: { cmov }
flags for cmovlw_r16_m16: { cmov }
flags for cmovlw_r16_r16: { cmov }
flags for cmovll_r32_m32: { cmov }
flags for cmovll_r32_r32: { cmov }
flags for cmovlq_r64_m64: { cmov }
flags for cmovlq_r64_r64: { cmov }
flags for cmovlew_r16_m16: { cmov }
flags for cmovlew_r16_r16: { cmov }
flags for cmovlel_r32_m32: { cmov }
flags for cmovlel_r32_r32: { cmov }
flags for cmovleq_r64_m64: { cmov }
flags for cmovleq_r64_r64: { cmov }
flags for cmovnaw_r16_m16: { cmov }
flags for cmovnaw_r16_r16: { cmov }
flags for cmovnal_r32_m32: { cmov }
flags for cmovnal_r32_r32: { cmov }
flags for cmovnaq_r64_m64: { cmov }
flags for cmovnaq_r64_r64: { cmov }
flags for cmovnaew_r16_m16: { cmov }
flags for cmovnaew_r16_r16: { cmov }
flags for cmovnael_r32_m32: { cmov }
flags for cmovnael_r32_r32: { cmov }
flags for cmovnaeq_r64_m64: { cmov }
flags for cmovnaeq_r64_r64: { cmov }
flags for cmovnbw_r16_m16: { cmov }
flags for cmovnbw_r16_r16: { cmov }
flags for cmovnbl_r32_m32: { cmov }
flags for cmovnbl_r32_r32: { cmov }
flags for cmovnbq_r64_m64: { cmov }
flags for cmovnbq_r64_r64: { cmov }
flags for cmovnbew_r16_m16: { cmov }
flags for cmovnbew_r16_r16: { cmov }
flags for cmovnbel_r32_m32: { cmov }
flags for cmovnbel_r32_r32: { cmov }
flags for cmovnbeq_r64_m64: { cmov }
flags for cmovnbeq_r64_r64: { cmov }
flags for cmovncw_r16_m16: { cmov }
flags for cmovncw_r16_r16: { cmov }
flags for cmovncl_r32_m32: { cmov }
flags for cmovncl_r32_r32: { cmov }
flags for cmovncq_r64_m64: { cmov }
flags for cmovncq_r64_r64: { cmov }
flags for cmovnew_r16_m16: { cmov }
flags for cmovnew_r16_r16: { cmov }
flags for cmovnel_r32_m32: { cmov }
flags for cmovnel_r32_r32: { cmov }
flags for cmovneq_r64_m64: { cmov }
flags for cmovneq_r64_r64: { cmov }
flags for cmovngw_r16_m16: { cmov }
flags for cmovngw_r16_r16: { cmov }
flags for cmovngl_r32_m32: { cmov }
flags for cmovngl_r32_r32: { cmov }
flags for cmovngq_r64_m64: { cmov }
flags for cmovngq_r64_r64: { cmov }
flags for cmovngew_r16_m16: { cmov }
flags for cmovngew_r16_r16: { cmov }
flags for cmovngel_r32_m32: { cmov }
flags for cmovngel_r32_r32: { cmov }
flags for cmovngeq_r64_m64: { cmov }
flags for cmovngeq_r64_r64: { cmov }
flags for cmovnlw_r16_m16: { cmov }
flags for cmovnlw_r16_r16: { cmov }
flags for cmovnll_r32_m32: { cmov }
flags for cmovnll_r32_r32: { cmov }
flags for cmovnlq_r64_m64: { cmov }
flags for cmovnlq_r64_r64: { cmov }
flags for cmovnlew_r16_m16: { cmov }
flags for cmovnlew_r16_r16: { cmov }
flags for cmovnlel_r32_m32: { cmov }
flags for cmovnlel_r32_r32: { cmov }
flags for cmovnleq_r64_m64: { cmov }
flags for cmovnleq_r64_r64: { cmov }
flags for cmovnow_r16_m16: { cmov }
flags for cmovnow_r16_r16: { cmov }
flags for cmovnol_r32_m32: { cmov }
flags for cmovnol_r32_r32: { cmov }
flags for cmovnoq_r64_m64: { cmov }
flags for cmovnoq_r64_r64: { cmov }
flags for cmovnpw_r16_m16: { cmov }
flags for cmovnpw_r16_r16: { cmov }
flags for cmovnpl_r32_m32: { cmov }
flags for cmovnpl_r32_r32: { cmov }
flags for cmovnpq_r64_m64: { cmov }
flags for cmovnpq_r64_r64: { cmov }
flags for cmovnsw_r16_m16: { cmov }
flags for cmovnsw_r16_r16: { cmov }
flags for cmovnsl_r32_m32: { cmov }
flags for cmovnsl_r32_r32: { cmov }
flags for cmovnsq_r64_m64: { cmov }
flags for cmovnsq_r64_r64: { cmov }
flags for cmovnzw_r16_m16: { cmov }
flags for cmovnzw_r16_r16: { cmov }
flags for cmovnzl_r32_m32: { cmov }
flags for cmovnzl_r32_r32: { cmov }
flags for cmovnzq_r64_m64: { cmov }
flags for cmovnzq_r64_r64: { cmov }
flags for cmovow_r16_m16: { cmov }
flags for cmovow_r16_r16: { cmov }
flags for cmovol_r32_m32: { cmov }
flags for cmovol_r32_r32: { cmov }
flags for cmovoq_r64_m64: { cmov }
flags for cmovoq_r64_r64: { cmov }
flags for cmovpw_r16_m16: { cmov }
flags for cmovpw_r16_r16: { cmov }
flags for cmovpl_r32_m32: { cmov }
flags for cmovpl_r32_r32: { cmov }
flags for cmovpq_r64_m64: { cmov }
flags for cmovpq_r64_r64: { cmov }
flags for cmovpew_r16_m16: { cmov }
flags for cmovpew_r16_r16: { cmov }
flags for cmovpel_r32_m32: { cmov }
flags for cmovpel_r32_r32: { cmov }
flags for cmovpeq_r64_m64: { cmov }
flags for cmovpeq_r64_r64: { cmov }
flags for cmovpow_r16_m16: { cmov }
flags for cmovpow_r16_r16: { cmov }
flags for cmovpol_r32_m32: { cmov }
flags for cmovpol_r32_r32: { cmov }
flags for cmovpoq_r64_m64: { cmov }
flags for cmovpoq_r64_r64: { cmov }
flags for cmovsw_r16_m16: { cmov }
flags for cmovsw_r16_r16: { cmov }
flags for cmovsl_r32_m32: { cmov }
flags for cmovsl_r32_r32: { cmov }
flags for cmovsq_r64_m64: { cmov }
flags for cmovsq_r64_r64: { cmov }
flags for cmovzw_r16_m16: { cmov }
flags for cmovzw_r16_r16: { cmov }
flags for cmovzl_r32_m32: { cmov }
flags for cmovzl_r32_r32: { cmov }
flags for cmovzq_r64_m64: { cmov }
flags for cmovzq_r64_r64: { cmov }
flags for comisd_xmm_m64: { sse2 }
flags for comisd_xmm_xmm: { sse2 }
flags for comiss_xmm_m32: { sse }
flags for comiss_xmm_xmm: { sse }
flags for cvtdq2pd_xmm_m64: { sse2 }
flags for cvtdq2pd_xmm_xmm: { sse2 }
flags for cvtdq2ps_xmm_m128: { sse2 }
flags for cvtdq2ps_xmm_xmm: { sse2 }
flags for cvtpd2dq_xmm_m128: { sse2 }
flags for cvtpd2dq_xmm_xmm: { sse2 }
flags for cvtpd2pi_mm_m128: { }
flags for cvtpd2pi_mm_xmm: { }
flags for cvtpd2ps_xmm_m128: { sse2 }
flags for cvtpd2ps_xmm_xmm: { sse2 }
flags for cvtpi2pd_xmm_m64: { }
flags for cvtpi2pd_xmm_mm: { }
flags for cvtpi2ps_xmm_m64: { }
flags for cvtpi2ps_xmm_mm: { }
flags for cvtps2dq_xmm_m128: { sse2 }
flags for cvtps2dq_xmm_xmm: { sse2 }
flags for cvtps2pd_xmm_m64: { sse2 }
flags for cvtps2pd_xmm_xmm: { sse2 }
flags for cvtps2pi_mm_m64: { }
flags for cvtps2pi_mm_xmm: { }
flags for cvtsd2si_r32_m64: { sse2 }
flags for cvtsd2si_r32_xmm: { sse2 }
flags for cvtsd2si_r64_m64: { sse2 }
flags for cvtsd2si_r64_xmm: { sse2 }
flags for cvtsd2ss_xmm_m64: { sse2 }
flags for cvtsd2ss_xmm_xmm: { sse2 }
flags for cvtsi2sdl_xmm_m32: { sse2 }
flags for cvtsi2sdq_xmm_m64: { sse2 }
flags for cvtsi2sdl_xmm_r32: { sse2 }
flags for cvtsi2sdq_xmm_r64: { sse2 }
flags for cvtsi2ssl_xmm_m32: { sse }
flags for cvtsi2ssq_xmm_m64: { sse }
flags for cvtsi2ssl_xmm_r32: { sse }
flags for cvtsi2ssq_xmm_r64: { sse }
flags for cvtss2sd_xmm_m32: { sse2 }
flags for cvtss2sd_xmm_xmm: { sse2 }
flags for cvtss2sil_r32_m32: { sse }
flags for cvtss2sil_r32_xmm: { sse }
flags for cvtss2siq_r64_m32: { sse }
flags for cvtss2siq_r64_xmm: { sse }
flags for cvttpd2dq_xmm_m128: { sse2 }
flags for cvttpd2dq_xmm_xmm: { sse2 }
flags for cvttpd2pi_mm_m128: { }
flags for cvttpd2pi_mm_xmm: { }
flags for cvttps2dq_xmm_m128: { sse2 }
flags for cvttps2dq_xmm_xmm: { sse2 }
flags for cvttps2pi_mm_m64: { }
flags for cvttps2pi_mm_xmm: { }
flags for cvttsd2si_r32_m64: { sse2 }
flags for cvttsd2si_r32_xmm: { sse2 }
flags for cvttsd2siq_r64_m64: { sse2 }
flags for cvttsd2siq_r64_xmm: { sse2 }
flags for cvttss2si_r32_m32: { sse }
flags for cvttss2si_r32_xmm: { sse }
flags for cvttss2siq_r64_m32: { sse }
flags for cvttss2siq_r64_xmm: { sse }
flags for decw_m16: { }
flags for decl_m32: { }
flags for decq_m64: { }
flags for decb_m8: { }
flags for decw_r16: { }
flags for decl_r32: { }
flags for decq_r64: { }
flags for decb_r8: { }
flags for decb_rh: { }
flags for dppd_xmm_m128_imm8: { sse4_1 }
flags for dppd_xmm_xmm_imm8: { sse4_1 }
flags for dpps_xmm_m128_imm8: { sse4_1 }
flags for dpps_xmm_xmm_imm8: { sse4_1 }
flags for extractps_m32_xmm_imm8: { sse4_1 }
flags for extractps_r32_xmm_imm8: { sse4_1 }
flags for extractps_r64_xmm_imm8: { sse4_1 }
flags for f2xm1: { fpu }
flags for fabs: { fpu }
flags for fadds_m32fp: { fpu }
flags for faddl_m64fp: { fpu }
flags for faddp: { fpu }
flags for fbld_m80bcd: { fpu }
flags for fbstp_m80bcd: { fpu }
flags for fchs: { fpu }
flags for fclex: { fpu }
flags for fcom: { fpu }
flags for fcoms_m32fp: { fpu }
flags for fcoml_m64fp: { fpu }
flags for fcomp: { fpu }
flags for fcomps_m32fp: { fpu }
flags for fcompl_m64fp: { fpu }
flags for fcompp: { fpu }
flags for fcos: { fpu }
flags for fdecstp: { fpu }
flags for fdivs_m32fp: { fpu }
flags for fdivl_m64fp: { fpu }
flags for fdivp: { fpu }
flags for fdivrs_m32fp: { fpu }
flags for fdivrl_m64fp: { fpu }
flags for fdivrp: { fpu }
flags for fiadd_m16int: { fpu }
flags for fiaddl_m32int: { fpu }
flags for ficom_m16int: { fpu }
flags for ficoml_m32int: { fpu }
flags for ficomp_m16int: { fpu }
flags for ficompl_m32int: { fpu }
flags for fidiv_m16int: { fpu }
flags for fidivl_m32int: { fpu }
flags for fidivr_m16int: { fpu }
flags for fidivrl_m32int: { fpu }
flags for fild_m16int: { fpu }
flags for fildl_m32int: { fpu }
flags for fildll_m64int: { fpu }
flags for fimul_m16int: { fpu }
flags for fimull_m32int: { fpu }
flags for fincstp: { fpu }
flags for finit: { fpu }
flags for fist_m16int: { fpu }
flags for fistl_m32int: { fpu }
flags for fistp_m16int: { fpu }
flags for fistpl_m32int: { fpu }
flags for fistpll_m64int: { fpu }
flags for fisttp_m16int: { fpu }
flags for fisttpl_m32int: { fpu }
flags for fisttpll_m64int: { fpu }
flags for fisub_m16int: { fpu }
flags for fisubl_m32int: { fpu }
flags for fisubr_m16int: { fpu }
flags for fisubrl_m32int: { fpu }
flags for flds_m32fp: { fpu }
flags for fldl_m64fp: { fpu }
flags for fldt_m80fp: { fpu }
flags for fld1: { fpu }
flags for fldl2e: { fpu }
flags for fldl2t: { fpu }
flags for fldlg2: { fpu }
flags for fldln2: { fpu }
flags for fldpi: { fpu }
flags for fldz: { fpu }
flags for fmuls_m32fp: { fpu }
flags for fmull_m64fp: { fpu }
flags for fmulp: { fpu }
flags for fnclex: { fpu }
flags for fninit: { fpu }
flags for fnop: { fpu }
flags for fnstsw_ax: { fpu }
flags for fpatan: { fpu }
flags for fprem: { fpu }
flags for fprem1: { fpu }
flags for fptan: { fpu }
flags for frndint: { fpu }
flags for fscale: { fpu }
flags for fsin: { fpu }
flags for fsincos: { fpu }
flags for fsqrt: { fpu }
flags for fsts_m32fp: { fpu }
flags for fstl_m64fp: { fpu }
flags for fstps_m32fp: { fpu }
flags for fstpl_m64fp: { fpu }
flags for fstpt_m80fp: { fpu }
flags for fstsw_ax: { fpu }
flags for fsubs_m32fp: { fpu }
flags for fsubl_m64fp: { fpu }
flags for fsubp: { fpu }
flags for fsubrs_m32fp: { fpu }
flags for fsubrl_m64fp: { fpu }
flags for fsubrp: { fpu }
flags for ftst: { fpu }
flags for fucom: { fpu }
flags for fucomp: { fpu }
flags for fucompp: { fpu }
flags for fwait: { fpu }
flags for fxam: { fpu }
flags for fxch: { fpu }
flags for fxtract: { fpu }
flags for fyl2x: { fpu }
flags for fyl2xp1: { fpu }
flags for haddpd_xmm_m128: { pni }
flags for haddpd_xmm_xmm: { pni }
flags for haddps_xmm_m128: { pni }
flags for haddps_xmm_xmm: { pni }
flags for hsubpd_xmm_m128: { pni }
flags for hsubpd_xmm_xmm: { pni }
flags for hsubps_xmm_m128: { pni }
flags for hsubps_xmm_xmm: { pni }
flags for incw_m16: { }
flags for incl_m32: { }
flags for incq_m64: { }
flags for incb_m8: { }
flags for incw_r16: { }
flags for incl_r32: { }
flags for incq_r64: { }
flags for incb_r8: { }
flags for incb_rh: { }
flags for insertps_xmm_m32_imm8: { sse4_1 }
flags for insertps_xmm_xmm_imm8: { sse4_1 }
flags for int_imm8: { }
flags for int_three: { }
flags for lahf: { lahf_lm }
flags for lddqu_xmm_m128: { pni }
flags for leaw_r16_m16: { }
flags for leaw_r16_m32: { }
flags for leaw_r16_m64: { }
flags for leal_r32_m16: { }
flags for leal_r32_m32: { }
flags for leal_r32_m64: { }
flags for leaq_r64_m16: { }
flags for leaq_r64_m32: { }
flags for leaq_r64_m64: { }
flags for lzcntw_r16_m16: { bmi1 }
flags for lzcntw_r16_r16: { bmi1 }
flags for lzcntl_r32_m32: { bmi1 }
flags for lzcntl_r32_r32: { bmi1 }
flags for lzcntq_r64_m64: { bmi1 }
flags for lzcntq_r64_r64: { bmi1 }
flags for maxpd_xmm_m128: { sse2 }
flags for maxpd_xmm_xmm: { sse2 }
flags for maxps_xmm_m128: { sse }
flags for maxps_xmm_xmm: { sse }
flags for maxsd_xmm_m64: { sse2 }
flags for maxsd_xmm_xmm: { sse2 }
flags for maxss_xmm_m32: { sse }
flags for maxss_xmm_xmm: { sse }
flags for minpd_xmm_m128: { sse2 }
flags for minpd_xmm_xmm: { sse2 }
flags for minps_xmm_m128: { sse }
flags for minps_xmm_xmm: { sse }
flags for minsd_xmm_m64: { sse2 }
flags for minsd_xmm_xmm: { sse2 }
flags for minss_xmm_m32: { sse }
flags for minss_xmm_xmm: { sse }
flags for movw_m16_imm16: { }
flags for movw_m16_r16: { }
flags for movl_m32_imm32: { }
flags for movl_m32_r32: { }
flags for movq_m64_imm32: { }
flags for movq_m64_r64: { }
flags for movb_m8_imm8: { }
flags for movb_m8_r8: { }
flags for movb_m8_rh: { }
flags for movw_r16_imm16: { }
flags for movw_r16_imm16_1: { }
flags for movw_r16_m16: { }
flags for movw_r16_r16: { }
flags for movw_r16_r16_1: { }
flags for movl_r32_imm32: { }
flags for movl_r32_imm32_1: { }
flags for movl_r32_m32: { }
flags for movl_r32_r32: { }
flags for movl_r32_r32_1: { }
flags for movq_r64_imm32: { }
flags for movq_r64_imm64: { }
flags for movq_r64_m64: { }
flags for movq_r64_r64: { }
flags for movq_r64_r64_1: { }
flags for movb_r8_imm8: { }
flags for movb_r8_imm8_1: { }
flags for movb_r8_m8: { }
flags for movb_r8_r8: { }
flags for movb_r8_r8_1: { }
flags for movb_r8_rh: { }
flags for movb_r8_rh_1: { }
flags for movb_rh_imm8: { }
flags for movb_rh_imm8_1: { }
flags for movb_rh_m8: { }
flags for movb_rh_r8: { }
flags for movb_rh_r8_1: { }
flags for movb_rh_rh: { }
flags for movb_rh_rh_1: { }
flags for movapd_m128_xmm: { sse2 }
flags for movapd_xmm_m128: { sse2 }
flags for movapd_xmm_xmm: { sse2 }
flags for movapd_xmm_xmm_1: { sse2 }
flags for movaps_m128_xmm: { sse }
flags for movaps_xmm_m128: { sse }
flags for movaps_xmm_xmm: { sse }
flags for movaps_xmm_xmm_1: { sse }
flags for movbew_m16_r16: { movbe }
flags for movbel_m32_r32: { movbe }
flags for movbeq_m64_r64: { movbe }
flags for movbew_r16_m16: { movbe }
flags for movbel_r32_m32: { movbe }
flags for movbeq_r64_m64: { movbe }
flags for movd_m32_mm: { mmx }
flags for movd_m32_xmm: { sse2 }
flags for movd_mm_m32: { mmx }
flags for movd_mm_r32: { mmx }
flags for movd_r32_mm: { mmx }
flags for movd_r32_xmm: { sse2 }
flags for movd_xmm_m32: { sse2 }
flags for movd_xmm_r32: { sse2 }
flags for movddup_xmm_m64: { pni }
flags for movddup_xmm_xmm: { pni }
flags for movdq2q_mm_xmm: { mmx }
flags for movdqa_m128_xmm: { sse2 }
flags for movdqa_xmm_m128: { sse2 }
flags for movdqa_xmm_xmm: { sse2 }
flags for movdqa_xmm_xmm_1: { sse2 }
flags for movdqu_m128_xmm: { sse2 }
flags for movdqu_xmm_m128: { sse2 }
flags for movdqu_xmm_xmm: { sse2 }
flags for movdqu_xmm_xmm_1: { sse2 }
flags for movhlps_xmm_xmm: { sse }
flags for movhpd_m64_xmm: { sse2 }
flags for movhpd_xmm_m64: { sse2 }
flags for movhps_m64_xmm: { sse }
flags for movhps_xmm_m64: { sse }
flags for movlhps_xmm_xmm: { sse }
flags for movlpd_m64_xmm: { sse2 }
flags for movlpd_xmm_m64: { sse2 }
flags for movlps_m64_xmm: { sse }
flags for movlps_xmm_m64: { sse }
flags for movmskpd_r32_xmm: { sse2 }
flags for movmskpd_r64_xmm: { sse2 }
flags for movmskps_r32_xmm: { sse }
flags for movmskps_r64_xmm: { sse }
flags for movntdq_m128_xmm: { sse2 }
flags for movntdq_m256_ymm: { avx }
flags for movntdqa_xmm_m128: { sse4_1 }
flags for movnti_m32_r32: { }
flags for movnti_m64_r64: { }
flags for movntpd_m128_xmm: { sse2 }
flags for movntps_m128_xmm: { sse }
flags for movntq_m64_mm: { }
flags for movq_m64_mm: { mmx }
flags for movq_m64_mm_1: { mmx }
flags for movq_m64_xmm: { sse2 }
flags for movq_m64_xmm_1: { sse2 }
flags for movq_mm_m64: { mmx }
flags for movq_mm_m64_1: { mmx }
flags for movq_mm_mm: { mmx }
flags for movq_mm_mm_1: { mmx }
flags for movq_mm_r64: { mmx }
flags for movq_r64_mm: { mmx }
flags for movq_r64_xmm: { sse2 }
flags for movq_xmm_m64: { sse2 }
flags for movq_xmm_m64_1: { sse2 }
flags for movq_xmm_r64: { sse2 }
flags for movq_xmm_xmm: { sse2 }
flags for movq_xmm_xmm_1: { sse2 }
flags for movq2dq_xmm_mm: { mmx }
flags for movsd_m64_xmm: { sse2 }
flags for movsd_xmm_m64: { sse2 }
flags for movsd_xmm_xmm: { sse2 }
flags for movsd_xmm_xmm_1: { sse2 }
flags for movshdup_xmm_m128: { pni }
flags for movshdup_xmm_xmm: { pni }
flags for movsldup_xmm_m128: { pni }
flags for movsldup_xmm_xmm: { pni }
flags for movss_m32_xmm: { sse }
flags for movss_xmm_m32: { sse }
flags for movss_xmm_xmm: { sse }
flags for movss_xmm_xmm_1: { sse }
flags for movsbw_r16_m8: { }
flags for movsbw_r16_r8: { }
flags for movsbw_r16_rh: { }
flags for movswl_r32_m16: { }
flags for movsbl_r32_m8: { }
flags for movswl_r32_r16: { }
flags for movsbl_r32_r8: { }
flags for movsbl_r32_rh: { }
flags for movswq_r64_m16: { }
flags for movsbq_r64_m8: { }
flags for movswq_r64_r16: { }
flags for movsbq_r64_r8: { }
flags for movslq_r64_m32: { }
flags for movslq_r64_r32: { }
flags for movupd_m128_xmm: { sse2 }
flags for movupd_xmm_m128: { sse2 }
flags for movupd_xmm_xmm: { sse2 }
flags for movupd_xmm_xmm_1: { sse2 }
flags for movups_m128_xmm: { sse }
flags for movups_xmm_m128: { sse }
flags for movups_xmm_xmm: { sse }
flags for movups_xmm_xmm_1: { sse }
flags for movzbw_r16_m8: { }
flags for movzbw_r16_r8: { }
flags for movzbw_r16_rh: { }
flags for movzwl_r32_m16: { }
flags for movzbl_r32_m8: { }
flags for movzwl_r32_r16: { }
flags for movzbl_r32_r8: { }
flags for movzbl_r32_rh: { }
flags for movzwq_r64_m16: { }
flags for movzbq_r64_m8: { }
flags for movzwq_r64_r16: { }
flags for movzbq_r64_r8: { }
flags for mpsadbw_xmm_m128_imm8: { sse4_1 }
flags for mpsadbw_xmm_xmm_imm8: { sse4_1 }
flags for negw_m16: { }
flags for negl_m32: { }
flags for negq_m64: { }
flags for negb_m8: { }
flags for negw_r16: { }
flags for negl_r32: { }
flags for negq_r64: { }
flags for negb_r8: { }
flags for negb_rh: { }
flags for nop: { }
flags for nopw_m16: { nopl }
flags for nopl_m32: { nopl }
flags for nopw_r16: { nopl }
flags for nopl_r32: { nopl }
flags for notw_m16: { }
flags for notl_m32: { }
flags for notq_m64: { }
flags for notb_m8: { }
flags for notw_r16: { }
flags for notl_r32: { }
flags for notq_r64: { }
flags for notb_r8: { }
flags for notb_rh: { }
flags for orb_al_imm8: { }
flags for orw_ax_imm16: { }
flags for orl_eax_imm32: { }
flags for orw_m16_imm16: { }
flags for orw_m16_imm8: { }
flags for orw_m16_r16: { }
flags for orl_m32_imm32: { }
flags for orl_m32_imm8: { }
flags for orl_m32_r32: { }
flags for orq_m64_imm32: { }
flags for orq_m64_imm8: { }
flags for orq_m64_r64: { }
flags for orb_m8_imm8: { }
flags for orb_m8_r8: { }
flags for orb_m8_rh: { }
flags for orw_r16_imm16: { }
flags for orw_r16_imm8: { }
flags for orw_r16_m16: { }
flags for orw_r16_r16: { }
flags for orw_r16_r16_1: { }
flags for orl_r32_imm32: { }
flags for orl_r32_imm8: { }
flags for orl_r32_m32: { }
flags for orl_r32_r32: { }
flags for orl_r32_r32_1: { }
flags for orq_r64_imm32: { }
flags for orq_r64_imm8: { }
flags for orq_r64_m64: { }
flags for orq_r64_r64: { }
flags for orq_r64_r64_1: { }
flags for orb_r8_imm8: { }
flags for orb_r8_m8: { }
flags for orb_r8_r8: { }
flags for orb_r8_r8_1: { }
flags for orb_r8_rh: { }
flags for orb_r8_rh_1: { }
flags for orq_rax_imm32: { }
flags for orb_rh_imm8: { }
flags for orb_rh_m8: { }
flags for orb_rh_r8: { }
flags for orb_rh_r8_1: { }
flags for orb_rh_rh: { }
flags for orb_rh_rh_1: { }
flags for orpd_xmm_m128: { sse2 }
flags for orpd_xmm_xmm: { sse2 }
flags for orps_xmm_m128: { sse }
flags for orps_xmm_xmm: { sse }
flags for pabsb_mm_m64: { ssse3 }
flags for pabsb_mm_mm: { ssse3 }
flags for pabsb_xmm_m128: { ssse3 }
flags for pabsb_xmm_xmm: { ssse3 }
flags for pabsd_mm_m64: { ssse3 }
flags for pabsd_mm_mm: { ssse3 }
flags for pabsd_xmm_m128: { ssse3 }
flags for pabsd_xmm_xmm: { ssse3 }
flags for pabsw_mm_m64: { ssse3 }
flags for pabsw_mm_mm: { ssse3 }
flags for pabsw_xmm_m128: { ssse3 }
flags for pabsw_xmm_xmm: { ssse3 }
flags for packssdw_mm_m64: { mmx }
flags for packssdw_mm_mm: { mmx }
flags for packssdw_xmm_m128: { sse2 }
flags for packssdw_xmm_xmm: { sse2 }
flags for packsswb_mm_m64: { mmx }
flags for packsswb_mm_mm: { mmx }
flags for packsswb_xmm_m128: { sse2 }
flags for packsswb_xmm_xmm: { sse2 }
flags for packusdw_xmm_m128: { sse4_1 }
flags for packusdw_xmm_xmm: { sse4_1 }
flags for packuswb_mm_m64: { mmx }
flags for packuswb_mm_mm: { mmx }
flags for packuswb_xmm_m128: { sse2 }
flags for packuswb_xmm_xmm: { sse2 }
flags for paddb_mm_m64: { mmx }
flags for paddb_mm_mm: { mmx }
flags for paddb_xmm_m128: { sse2 }
flags for paddb_xmm_xmm: { sse2 }
flags for paddd_mm_m64: { mmx }
flags for paddd_mm_mm: { mmx }
flags for paddd_xmm_m128: { sse2 }
flags for paddd_xmm_xmm: { sse2 }
flags for paddq_mm_m64: { sse2 }
flags for paddq_mm_mm: { sse2 }
flags for paddq_xmm_m128: { sse2 }
flags for paddq_xmm_xmm: { sse2 }
flags for paddsb_mm_m64: { mmx }
flags for paddsb_mm_mm: { mmx }
flags for paddsb_xmm_m128: { sse2 }
flags for paddsb_xmm_xmm: { sse2 }
flags for paddsw_mm_m64: { mmx }
flags for paddsw_mm_mm: { mmx }
flags for paddsw_xmm_m128: { sse2 }
flags for paddsw_xmm_xmm: { sse2 }
flags for paddusb_mm_m64: { mmx }
flags for paddusb_mm_mm: { mmx }
flags for paddusb_xmm_m128: { sse2 }
flags for paddusb_xmm_xmm: { sse2 }
flags for paddusw_mm_m64: { mmx }
flags for paddusw_mm_mm: { mmx }
flags for paddusw_xmm_m128: { sse2 }
flags for paddusw_xmm_xmm: { sse2 }
flags for paddw_mm_m64: { mmx }
flags for paddw_mm_mm: { mmx }
flags for paddw_xmm_m128: { sse2 }
flags for paddw_xmm_xmm: { sse2 }
flags for palignr_mm_m64_imm8: { ssse3 }
flags for palignr_mm_mm_imm8: { ssse3 }
flags for palignr_xmm_m128_imm8: { ssse3 }
flags for palignr_xmm_xmm_imm8: { ssse3 }
flags for pand_mm_m64: { mmx }
flags for pand_mm_mm: { mmx }
flags for pand_xmm_m128: { sse2 }
flags for pand_xmm_xmm: { sse2 }
flags for pandn_mm_m64: { mmx }
flags for pandn_mm_mm: { mmx }
flags for pandn_xmm_m128: { sse2 }
flags for pandn_xmm_xmm: { sse2 }
flags for pavgb_mm_m64: { sse }
flags for pavgb_mm_mm: { sse }
flags for pavgb_xmm_m128: { sse2 }
flags for pavgb_xmm_xmm: { sse2 }
flags for pavgw_mm_m64: { sse }
flags for pavgw_mm_mm: { sse }
flags for pavgw_xmm_m128: { sse2 }
flags for pavgw_xmm_xmm: { sse2 }
flags for pblendvb_xmm_m128_xmm0: { sse4_1 }
flags for pblendvb_xmm_xmm_xmm0: { sse4_1 }
flags for pblendw_xmm_m128_imm8: { sse4_1 }
flags for pblendw_xmm_xmm_imm8: { sse4_1 }
flags for pclmulqdq_xmm_m128_imm8: { pclmulqdq }
flags for pclmulqdq_xmm_xmm_imm8: { pclmulqdq }
flags for pcmpeqb_mm_m64: { mmx }
flags for pcmpeqb_mm_mm: { mmx }
flags for pcmpeqb_xmm_m128: { sse2 }
flags for pcmpeqb_xmm_xmm: { sse2 }
flags for pcmpeqd_mm_m64: { mmx }
flags for pcmpeqd_mm_mm: { mmx }
flags for pcmpeqd_xmm_m128: { sse2 }
flags for pcmpeqd_xmm_xmm: { sse2 }
flags for pcmpeqq_xmm_m128: { sse4_1 }
flags for pcmpeqq_xmm_xmm: { sse4_1 }
flags for pcmpeqw_mm_m64: { mmx }
flags for pcmpeqw_mm_mm: { mmx }
flags for pcmpeqw_xmm_m128: { sse2 }
flags for pcmpeqw_xmm_xmm: { sse2 }
flags for pcmpestri_xmm_m128_imm8: { sse4_2 }
flags for pcmpestri_xmm_xmm_imm8: { sse4_2 }
flags for pcmpestrm_xmm_m128_imm8: { sse4_2 }
flags for pcmpestrm_xmm_xmm_imm8: { sse4_2 }
flags for pcmpgtb_mm_m64: { mmx }
flags for pcmpgtb_mm_mm: { mmx }
flags for pcmpgtb_xmm_m128: { sse2 }
flags for pcmpgtb_xmm_xmm: { sse2 }
flags for pcmpgtd_mm_m64: { mmx }
flags for pcmpgtd_mm_mm: { mmx }
flags for pcmpgtd_xmm_m128: { sse2 }
flags for pcmpgtd_xmm_xmm: { sse2 }
flags for pcmpgtq_xmm_m128: { sse4_2 }
flags for pcmpgtq_xmm_xmm: { sse4_2 }
flags for pcmpgtw_mm_m64: { mmx }
flags for pcmpgtw_mm_mm: { mmx }
flags for pcmpgtw_xmm_m128: { sse2 }
flags for pcmpgtw_xmm_xmm: { sse2 }
flags for pcmpistri_xmm_m128_imm8: { sse4_2 }
flags for pcmpistri_xmm_xmm_imm8: { sse4_2 }
flags for pcmpistrm_xmm_m128_imm8: { sse4_2 }
flags for pcmpistrm_xmm_xmm_imm8: { sse4_2 }
flags for pdepl_r32_r32_m32: { bmi2 }
flags for pdepl_r32_r32_r32: { bmi2 }
flags for pdepq_r64_r64_m64: { bmi2 }
flags for pdepq_r64_r64_r64: { bmi2 }
flags for pextl_r32_r32_m32: { bmi2 }
flags for pextl_r32_r32_r32: { bmi2 }
flags for pextq_r64_r64_m64: { bmi2 }
flags for pextq_r64_r64_r64: { bmi2 }
flags for pextrb_m8_xmm_imm8: { sse4_1 }
flags for pextrb_r32_xmm_imm8: { sse4_1 }
flags for pextrb_r64_xmm_imm8: { sse4_1 }
flags for pextrd_m32_xmm_imm8: { sse4_1 }
flags for pextrd_r32_xmm_imm8: { sse4_1 }
flags for pextrq_m64_xmm_imm8: { sse4_1 }
flags for pextrq_r64_xmm_imm8: { sse4_1 }
flags for pextrw_m16_xmm_imm8: { sse4_1 }
flags for pextrw_r32_mm_imm8: { sse }
flags for pextrw_r32_xmm_imm8: { sse2 }
flags for pextrw_r32_xmm_imm8_1: { sse4_1 }
flags for pextrw_r64_mm_imm8: { sse }
flags for pextrw_r64_xmm_imm8: { sse2 }
flags for pextrw_r64_xmm_imm8_1: { sse4_1 }
flags for phaddd_mm_m64: { ssse3 }
flags for phaddd_mm_mm: { ssse3 }
flags for phaddd_xmm_m128: { ssse3 }
flags for phaddd_xmm_xmm: { ssse3 }
flags for phaddsw_mm_m64: { ssse3 }
flags for phaddsw_mm_mm: { ssse3 }
flags for phaddsw_xmm_m128: { ssse3 }
flags for phaddsw_xmm_xmm: { ssse3 }
flags for phaddw_mm_m64: { ssse3 }
flags for phaddw_mm_mm: { ssse3 }
flags for phaddw_xmm_m128: { ssse3 }
flags for phaddw_xmm_xmm: { ssse3 }
flags for phminposuw_xmm_m128: { sse4_1 }
flags for phminposuw_xmm_xmm: { sse4_1 }
flags for phsubd_mm_m64: { ssse3 }
flags for phsubd_mm_mm: { ssse3 }
flags for phsubd_xmm_m128: { ssse3 }
flags for phsubd_xmm_xmm: { ssse3 }
flags for phsubsw_mm_m64: { ssse3 }
flags for phsubsw_mm_mm: { ssse3 }
flags for phsubsw_xmm_m128: { ssse3 }
flags for phsubsw_xmm_xmm: { ssse3 }
flags for phsubw_mm_m64: { ssse3 }
flags for phsubw_mm_mm: { ssse3 }
flags for phsubw_xmm_m128: { ssse3 }
flags for phsubw_xmm_xmm: { ssse3 }
flags for pinsrb_xmm_m8_imm8: { sse4_1 }
flags for pinsrb_xmm_r32_imm8: { sse4_1 }
flags for pinsrd_xmm_m32_imm8: { sse4_1 }
flags for pinsrd_xmm_r32_imm8: { sse4_1 }
flags for pinsrw_mm_m16_imm8: { sse }
flags for pinsrw_mm_r32_imm8: { sse }
flags for pinsrw_xmm_m16_imm8: { sse2 }
flags for pinsrw_xmm_r32_imm8: { sse2 }
flags for pmaddubsw_mm_m64: { mmx ssse3 }
flags for pmaddubsw_mm_mm: { mmx ssse3 }
flags for pmaddubsw_xmm_m128: { ssse3 }
flags for pmaddubsw_xmm_xmm: { ssse3 }
flags for pmaddwd_mm_m64: { mmx }
flags for pmaddwd_mm_mm: { mmx }
flags for pmaddwd_xmm_m128: { sse2 }
flags for pmaddwd_xmm_xmm: { sse2 }
flags for pmaxsb_xmm_m128: { sse4_1 }
flags for pmaxsb_xmm_xmm: { sse4_1 }
flags for pmaxsd_xmm_m128: { sse4_1 }
flags for pmaxsd_xmm_xmm: { sse4_1 }
flags for pmaxsw_mm_m64: { sse }
flags for pmaxsw_mm_mm: { sse }
flags for pmaxsw_xmm_m128: { sse2 }
flags for pmaxsw_xmm_xmm: { sse2 }
flags for pmaxub_mm_m64: { sse }
flags for pmaxub_mm_mm: { sse }
flags for pmaxub_xmm_m128: { sse2 }
flags for pmaxub_xmm_xmm: { sse2 }
flags for pmaxud_xmm_m128: { sse4_1 }
flags for pmaxud_xmm_xmm: { sse4_1 }
flags for pmaxuw_xmm_m128: { sse4_1 }
flags for pmaxuw_xmm_xmm: { sse4_1 }
flags for pminsb_xmm_m128: { sse4_1 }
flags for pminsb_xmm_xmm: { sse4_1 }
flags for pminsd_xmm_m128: { sse4_1 }
flags for pminsd_xmm_xmm: { sse4_1 }
flags for pminsw_mm_m64: { sse }
flags for pminsw_mm_mm: { sse }
flags for pminsw_xmm_m128: { sse2 }
flags for pminsw_xmm_xmm: { sse2 }
flags for pminub_mm_m64: { sse }
flags for pminub_mm_mm: { sse }
flags for pminub_xmm_m128: { sse2 }
flags for pminub_xmm_xmm: { sse2 }
flags for pminud_xmm_m128: { sse4_1 }
flags for pminud_xmm_xmm: { sse4_1 }
flags for pminuw_xmm_m128: { sse4_1 }
flags for pminuw_xmm_xmm: { sse4_1 }
flags for pmovmskb_r32_mm: { sse }
flags for pmovmskb_r32_xmm: { sse2 }
flags for pmovmskb_r64_mm: { sse }
flags for pmovmskb_r64_xmm: { sse2 }
flags for pmovsxbd_xmm_m32: { sse4_1 }
flags for pmovsxbd_xmm_xmm: { sse4_1 }
flags for pmovsxbq_xmm_m16: { sse4_1 }
flags for pmovsxbq_xmm_xmm: { sse4_1 }
flags for pmovsxbw_xmm_m64: { sse4_1 }
flags for pmovsxbw_xmm_xmm: { sse4_1 }
flags for pmovsxdq_xmm_m64: { sse4_1 }
flags for pmovsxdq_xmm_xmm: { sse4_1 }
flags for pmovsxwd_xmm_m64: { sse4_1 }
flags for pmovsxwd_xmm_xmm: { sse4_1 }
flags for pmovsxwq_xmm_m32: { sse4_1 }
flags for pmovsxwq_xmm_xmm: { sse4_1 }
flags for pmovzxbd_xmm_m32: { sse4_1 }
flags for pmovzxbd_xmm_xmm: { sse4_1 }
flags for pmovzxbq_xmm_m16: { sse4_1 }
flags for pmovzxbq_xmm_xmm: { sse4_1 }
flags for pmovzxbw_xmm_m64: { sse4_1 }
flags for pmovzxbw_xmm_xmm: { sse4_1 }
flags for pmovzxdq_xmm_m64: { sse4_1 }
flags for pmovzxdq_xmm_xmm: { sse4_1 }
flags for pmovzxwd_xmm_m64: { sse4_1 }
flags for pmovzxwd_xmm_xmm: { sse4_1 }
flags for pmovzxwq_xmm_m32: { sse4_1 }
flags for pmovzxwq_xmm_xmm: { sse4_1 }
flags for pmuldq_xmm_m128: { sse4_1 }
flags for pmuldq_xmm_xmm: { sse4_1 }
flags for pmulhrsw_mm_m64: { ssse3 }
flags for pmulhrsw_mm_mm: { ssse3 }
flags for pmulhrsw_xmm_m128: { ssse3 }
flags for pmulhrsw_xmm_xmm: { ssse3 }
flags for pmulhuw_mm_m64: { sse }
flags for pmulhuw_mm_mm: { sse }
flags for pmulhuw_xmm_m128: { sse2 }
flags for pmulhuw_xmm_xmm: { sse2 }
flags for pmulhw_mm_m64: { mmx }
flags for pmulhw_mm_mm: { mmx }
flags for pmulhw_xmm_m128: { sse2 }
flags for pmulhw_xmm_xmm: { sse2 }
flags for pmulld_xmm_m128: { sse4_1 }
flags for pmulld_xmm_xmm: { sse4_1 }
flags for pmullw_mm_m64: { mmx }
flags for pmullw_mm_mm: { mmx }
flags for pmullw_xmm_m128: { sse2 }
flags for pmullw_xmm_xmm: { sse2 }
flags for pmuludq_mm_m64: { sse2 }
flags for pmuludq_mm_mm: { sse2 }
flags for pmuludq_xmm_m128: { sse2 }
flags for pmuludq_xmm_xmm: { sse2 }
flags for popw_m16: { }
flags for popq_m64: { }
flags for popw_r16: { }
flags for popw_r16_1: { }
flags for popq_r64: { }
flags for popq_r64_1: { }
flags for popcntw_r16_m16: { popcnt }
flags for popcntw_r16_r16: { popcnt }
flags for popcntl_r32_m32: { popcnt }
flags for popcntl_r32_r32: { popcnt }
flags for popcntq_r64_m64: { popcnt }
flags for popcntq_r64_r64: { popcnt }
flags for popf: { }
flags for popfq: { }
flags for por_mm_m64: { mmx }
flags for por_mm_mm: { mmx }
flags for por_xmm_m128: { sse2 }
flags for por_xmm_xmm: { sse2 }
flags for psadbw_mm_m64: { sse }
flags for psadbw_mm_mm: { sse }
flags for psadbw_xmm_m128: { sse2 }
flags for psadbw_xmm_xmm: { sse2 }
flags for pshufb_mm_m64: { ssse3 }
flags for pshufb_mm_mm: { ssse3 }
flags for pshufb_xmm_m128: { ssse3 }
flags for pshufb_xmm_xmm: { ssse3 }
flags for pshufd_xmm_m128_imm8: { sse2 }
flags for pshufd_xmm_xmm_imm8: { sse2 }
flags for pshufhw_xmm_m128_imm8: { sse2 }
flags for pshufhw_xmm_xmm_imm8: { sse2 }
flags for pshuflw_xmm_m128_imm8: { sse2 }
flags for pshuflw_xmm_xmm_imm8: { sse2 }
flags for pshufw_mm_m64_imm8: { }
flags for pshufw_mm_mm_imm8: { }
flags for psignb_mm_m64: { ssse3 }
flags for psignb_mm_mm: { ssse3 }
flags for psignb_xmm_m128: { ssse3 }
flags for psignb_xmm_xmm: { ssse3 }
flags for psignd_mm_m64: { ssse3 }
flags for psignd_mm_mm: { ssse3 }
flags for psignd_xmm_m128: { ssse3 }
flags for psignd_xmm_xmm: { ssse3 }
flags for psignw_mm_m64: { ssse3 }
flags for psignw_mm_mm: { ssse3 }
flags for psignw_xmm_m128: { ssse3 }
flags for psignw_xmm_xmm: { ssse3 }
flags for pslld_mm_imm8: { mmx }
flags for pslld_mm_m64: { mmx }
flags for pslld_mm_mm: { mmx }
flags for pslld_xmm_imm8: { sse2 }
flags for pslld_xmm_m128: { sse2 }
flags for pslld_xmm_xmm: { sse2 }
flags for pslldq_xmm_imm8: { sse2 }
flags for psllq_mm_imm8: { mmx }
flags for psllq_mm_m64: { mmx }
flags for psllq_mm_mm: { mmx }
flags for psllq_xmm_imm8: { sse2 }
flags for psllq_xmm_m128: { sse2 }
flags for psllq_xmm_xmm: { sse2 }
flags for psllw_mm_imm8: { mmx }
flags for psllw_mm_m64: { mmx }
flags for psllw_mm_mm: { mmx }
flags for psllw_xmm_imm8: { sse2 }
flags for psllw_xmm_m128: { sse2 }
flags for psllw_xmm_xmm: { sse2 }
flags for psrad_mm_imm8: { mmx }
flags for psrad_mm_m64: { mmx }
flags for psrad_mm_mm: { mmx }
flags for psrad_xmm_imm8: { sse2 }
flags for psrad_xmm_m128: { sse2 }
flags for psrad_xmm_xmm: { sse2 }
flags for psraw_mm_imm8: { mmx }
flags for psraw_mm_m64: { mmx }
flags for psraw_mm_mm: { mmx }
flags for psraw_xmm_imm8: { sse2 }
flags for psraw_xmm_m128: { sse2 }
flags for psraw_xmm_xmm: { sse2 }
flags for psrld_mm_imm8: { mmx }
flags for psrld_mm_m64: { mmx }
flags for psrld_mm_mm: { mmx }
flags for psrld_xmm_imm8: { sse2 }
flags for psrld_xmm_m128: { sse2 }
flags for psrld_xmm_xmm: { sse2 }
flags for psrldq_xmm_imm8: { sse2 }
flags for psrlq_mm_imm8: { mmx }
flags for psrlq_mm_m64: { mmx }
flags for psrlq_mm_mm: { mmx }
flags for psrlq_xmm_imm8: { sse2 }
flags for psrlq_xmm_m128: { sse2 }
flags for psrlq_xmm_xmm: { sse2 }
flags for psrlw_mm_imm8: { mmx }
flags for psrlw_mm_m64: { mmx }
flags for psrlw_mm_mm: { mmx }
flags for psrlw_xmm_imm8: { sse2 }
flags for psrlw_xmm_m128: { sse2 }
flags for psrlw_xmm_xmm: { sse2 }
flags for psubb_mm_m64: { mmx }
flags for psubb_mm_mm: { mmx }
flags for psubb_xmm_m128: { sse2 }
flags for psubb_xmm_xmm: { sse2 }
flags for psubd_mm_m64: { mmx }
flags for psubd_mm_mm: { mmx }
flags for psubd_xmm_m128: { sse2 }
flags for psubd_xmm_xmm: { sse2 }
flags for psubq_mm_m64: { sse2 }
flags for psubq_mm_mm: { sse2 }
flags for psubq_xmm_m128: { sse2 }
flags for psubq_xmm_xmm: { sse2 }
flags for psubsb_mm_m64: { mmx }
flags for psubsb_mm_mm: { mmx }
flags for psubsb_xmm_m128: { sse2 }
flags for psubsb_xmm_xmm: { sse2 }
flags for psubsw_mm_m64: { mmx }
flags for psubsw_mm_mm: { mmx }
flags for psubsw_xmm_m128: { sse2 }
flags for psubsw_xmm_xmm: { sse2 }
flags for psubusb_mm_m64: { mmx }
flags for psubusb_mm_mm: { mmx }
flags for psubusb_xmm_m128: { sse2 }
flags for psubusb_xmm_xmm: { sse2 }
flags for psubusw_mm_m64: { mmx }
flags for psubusw_mm_mm: { mmx }
flags for psubusw_xmm_m128: { sse2 }
flags for psubusw_xmm_xmm: { sse2 }
flags for psubw_mm_m64: { mmx }
flags for psubw_mm_mm: { mmx }
flags for psubw_xmm_m128: { sse2 }
flags for psubw_xmm_xmm: { sse2 }
flags for ptest_xmm_m128: { sse4_1 }
flags for ptest_xmm_xmm: { sse4_1 }
flags for punpckhbw_mm_m64: { mmx }
flags for punpckhbw_mm_mm: { mmx }
flags for punpckhbw_xmm_m128: { sse2 }
flags for punpckhbw_xmm_xmm: { sse2 }
flags for punpckhdq_mm_m64: { mmx }
flags for punpckhdq_mm_mm: { mmx }
flags for punpckhdq_xmm_m128: { sse2 }
flags for punpckhdq_xmm_xmm: { sse2 }
flags for punpckhqdq_xmm_m128: { sse2 }
flags for punpckhqdq_xmm_xmm: { sse2 }
flags for punpckhwd_mm_m64: { mmx }
flags for punpckhwd_mm_mm: { mmx }
flags for punpckhwd_xmm_m128: { sse2 }
flags for punpckhwd_xmm_xmm: { sse2 }
flags for punpcklbw_mm_m32: { mmx }
flags for punpcklbw_mm_mm: { mmx }
flags for punpcklbw_xmm_m128: { sse2 }
flags for punpcklbw_xmm_xmm: { sse2 }
flags for punpckldq_mm_m32: { mmx }
flags for punpckldq_mm_mm: { mmx }
flags for punpckldq_xmm_m128: { sse2 }
flags for punpckldq_xmm_xmm: { sse2 }
flags for punpcklqdq_xmm_m128: { sse2 }
flags for punpcklqdq_xmm_xmm: { sse2 }
flags for punpcklwd_mm_m32: { mmx }
flags for punpcklwd_mm_mm: { mmx }
flags for punpcklwd_xmm_m128: { sse2 }
flags for punpcklwd_xmm_xmm: { sse2 }
flags for pushq_imm16: { }
flags for pushq_imm32: { }
flags for pushq_imm8: { }
flags for pushw_m16: { }
flags for pushq_m64: { }
flags for pushw_r16: { }
flags for pushw_r16_1: { }
flags for pushq_r64: { }
flags for pushq_r64_1: { }
flags for pushf: { }
flags for pushfq: { }
flags for pxor_mm_m64: { mmx }
flags for pxor_mm_mm: { mmx }
flags for pxor_xmm_m128: { sse2 }
flags for pxor_xmm_xmm: { sse2 }
flags for rcpps_xmm_m128: { sse }
flags for rcpps_xmm_xmm: { sse }
flags for rcpss_xmm_m32: { sse }
flags for rcpss_xmm_xmm: { sse }
flags for rdrand_r16: { rdrand }
flags for rdrand_r32: { rdrand }
flags for rdrand_r64: { rdrand }
flags for repz scasb_m8_1: { rep_good }
flags for roundpd_xmm_m128_imm8: { sse4_1 }
flags for roundpd_xmm_xmm_imm8: { sse4_1 }
flags for roundps_xmm_m128_imm8: { sse4_1 }
flags for roundps_xmm_xmm_imm8: { sse4_1 }
flags for roundsd_xmm_m64_imm8: { sse4_1 }
flags for roundsd_xmm_xmm_imm8: { sse4_1 }
flags for roundss_xmm_m32_imm8: { sse4_1 }
flags for roundss_xmm_xmm_imm8: { sse4_1 }
flags for rsqrtps_xmm_m128: { sse }
flags for rsqrtps_xmm_xmm: { sse }
flags for rsqrtss_xmm_m32: { sse }
flags for rsqrtss_xmm_xmm: { sse }
flags for sahf: { lahf_lm }
flags for salw_m16_cl: { }
flags for salw_m16_imm8: { }
flags for salw_m16_one: { }
flags for sall_m32_cl: { }
flags for sall_m32_imm8: { }
flags for sall_m32_one: { }
flags for salq_m64_cl: { }
flags for salq_m64_imm8: { }
flags for salq_m64_one: { }
flags for salb_m8_cl: { }
flags for salb_m8_imm8: { }
flags for salb_m8_one: { }
flags for salw_r16_cl: { }
flags for salw_r16_imm8: { }
flags for salw_r16_one: { }
flags for sall_r32_cl: { }
flags for sall_r32_imm8: { }
flags for sall_r32_one: { }
flags for salq_r64_cl: { }
flags for salq_r64_imm8: { }
flags for salq_r64_one: { }
flags for salb_r8_cl: { }
flags for salb_r8_imm8: { }
flags for salb_r8_one: { }
flags for salb_rh_cl: { }
flags for salb_rh_imm8: { }
flags for salb_rh_one: { }
flags for sarw_m16_cl: { }
flags for sarw_m16_imm8: { }
flags for sarw_m16_one: { }
flags for sarl_m32_cl: { }
flags for sarl_m32_imm8: { }
flags for sarl_m32_one: { }
flags for sarq_m64_cl: { }
flags for sarq_m64_imm8: { }
flags for sarq_m64_one: { }
flags for sarb_m8_cl: { }
flags for sarb_m8_imm8: { }
flags for sarb_m8_one: { }
flags for sarw_r16_cl: { }
flags for sarw_r16_imm8: { }
flags for sarw_r16_one: { }
flags for sarl_r32_cl: { }
flags for sarl_r32_imm8: { }
flags for sarl_r32_one: { }
flags for sarq_r64_cl: { }
flags for sarq_r64_imm8: { }
flags for sarq_r64_one: { }
flags for sarb_r8_cl: { }
flags for sarb_r8_imm8: { }
flags for sarb_r8_one: { }
flags for sarb_rh_cl: { }
flags for sarb_rh_imm8: { }
flags for sarb_rh_one: { }
flags for sarxl_r32_m32_r32: { bmi2 }
flags for sarxl_r32_r32_r32: { bmi2 }
flags for sarxq_r64_m64_r64: { bmi2 }
flags for sarxq_r64_r64_r64: { bmi2 }
flags for shlw_m16_cl: { }
flags for shlw_m16_imm8: { }
flags for shlw_m16_one: { }
flags for shll_m32_cl: { }
flags for shll_m32_imm8: { }
flags for shll_m32_one: { }
flags for shlq_m64_cl: { }
flags for shlq_m64_imm8: { }
flags for shlq_m64_one: { }
flags for shlb_m8_cl: { }
flags for shlb_m8_imm8: { }
flags for shlb_m8_one: { }
flags for shlw_r16_cl: { }
flags for shlw_r16_imm8: { }
flags for shlw_r16_one: { }
flags for shll_r32_cl: { }
flags for shll_r32_imm8: { }
flags for shll_r32_one: { }
flags for shlq_r64_cl: { }
flags for shlq_r64_imm8: { }
flags for shlq_r64_one: { }
flags for shlb_r8_cl: { }
flags for shlb_r8_imm8: { }
flags for shlb_r8_one: { }
flags for shlb_rh_cl: { }
flags for shlb_rh_imm8: { }
flags for shlb_rh_one: { }
flags for shldw_m16_r16_cl: { }
flags for shldw_m16_r16_imm8: { }
flags for shldl_m32_r32_cl: { }
flags for shldl_m32_r32_imm8: { }
flags for shldq_m64_r64_cl: { }
flags for shldq_m64_r64_imm8: { }
flags for shldw_r16_r16_cl: { }
flags for shldw_r16_r16_imm8: { }
flags for shldl_r32_r32_cl: { }
flags for shldl_r32_r32_imm8: { }
flags for shldq_r64_r64_cl: { }
flags for shldq_r64_r64_imm8: { }
flags for shlxl_r32_m32_r32: { bmi2 }
flags for shlxl_r32_r32_r32: { bmi2 }
flags for shlxq_r64_m64_r64: { bmi2 }
flags for shlxq_r64_r64_r64: { bmi2 }
flags for shrw_m16_cl: { }
flags for shrw_m16_imm8: { }
flags for shrw_m16_one: { }
flags for shrl_m32_cl: { }
flags for shrl_m32_imm8: { }
flags for shrl_m32_one: { }
flags for shrq_m64_cl: { }
flags for shrq_m64_imm8: { }
flags for shrq_m64_one: { }
flags for shrb_m8_cl: { }
flags for shrb_m8_imm8: { }
flags for shrb_m8_one: { }
flags for shrw_r16_cl: { }
flags for shrw_r16_imm8: { }
flags for shrw_r16_one: { }
flags for shrl_r32_cl: { }
flags for shrl_r32_imm8: { }
flags for shrl_r32_one: { }
flags for shrq_r64_cl: { }
flags for shrq_r64_imm8: { }
flags for shrq_r64_one: { }
flags for shrb_r8_cl: { }
flags for shrb_r8_imm8: { }
flags for shrb_r8_one: { }
flags for shrb_rh_cl: { }
flags for shrb_rh_imm8: { }
flags for shrb_rh_one: { }
flags for shrxl_r32_m32_r32: { bmi2 }
flags for shrxl_r32_r32_r32: { bmi2 }
flags for shrxq_r64_m64_r64: { bmi2 }
flags for shrxq_r64_r64_r64: { bmi2 }
flags for shufpd_xmm_m128_imm8: { sse2 }
flags for shufpd_xmm_xmm_imm8: { sse2 }
flags for shufps_xmm_m128_imm8: { sse }
flags for shufps_xmm_xmm_imm8: { sse }
flags for sqrtpd_xmm_m128: { sse2 }
flags for sqrtpd_xmm_xmm: { sse2 }
flags for sqrtps_xmm_m128: { sse }
flags for sqrtps_xmm_xmm: { sse }
flags for sqrtsd_xmm_m64: { sse2 }
flags for sqrtsd_xmm_xmm: { sse2 }
flags for sqrtss_xmm_m32: { sse }
flags for sqrtss_xmm_xmm: { sse }
flags for subb_al_imm8: { }
flags for subw_ax_imm16: { }
flags for subl_eax_imm32: { }
flags for subw_m16_imm16: { }
flags for subw_m16_imm8: { }
flags for subw_m16_r16: { }
flags for subl_m32_imm32: { }
flags for subl_m32_imm8: { }
flags for subl_m32_r32: { }
flags for subq_m64_imm32: { }
flags for subq_m64_imm8: { }
flags for subq_m64_r64: { }
flags for subb_m8_imm8: { }
flags for subb_m8_r8: { }
flags for subb_m8_rh: { }
flags for subw_r16_imm16: { }
flags for subw_r16_imm8: { }
flags for subw_r16_m16: { }
flags for subw_r16_r16: { }
flags for subw_r16_r16_1: { }
flags for subl_r32_imm32: { }
flags for subl_r32_imm8: { }
flags for subl_r32_m32: { }
flags for subl_r32_r32: { }
flags for subl_r32_r32_1: { }
flags for subq_r64_imm32: { }
flags for subq_r64_imm8: { }
flags for subq_r64_m64: { }
flags for subq_r64_r64: { }
flags for subq_r64_r64_1: { }
flags for subb_r8_imm8: { }
flags for subb_r8_m8: { }
flags for subb_r8_r8: { }
flags for subb_r8_r8_1: { }
flags for subb_r8_rh: { }
flags for subb_r8_rh_1: { }
flags for subq_rax_imm32: { }
flags for subb_rh_imm8: { }
flags for subb_rh_m8: { }
flags for subb_rh_r8: { }
flags for subb_rh_r8_1: { }
flags for subb_rh_rh: { }
flags for subb_rh_rh_1: { }
flags for subpd_xmm_m128: { sse2 }
flags for subpd_xmm_xmm: { sse2 }
flags for subps_xmm_m128: { sse }
flags for subps_xmm_xmm: { sse }
flags for subsd_xmm_m64: { sse2 }
flags for subsd_xmm_xmm: { sse2 }
flags for subss_xmm_m32: { sse }
flags for subss_xmm_xmm: { sse }
flags for tzcntw_r16_m16: { bmi1 }
flags for tzcntw_r16_r16: { bmi1 }
flags for tzcntl_r32_m32: { bmi1 }
flags for tzcntl_r32_r32: { bmi1 }
flags for tzcntq_r64_m64: { bmi1 }
flags for tzcntq_r64_r64: { bmi1 }
flags for ucomisd_xmm_m64: { sse2 }
flags for ucomisd_xmm_xmm: { sse2 }
flags for ucomiss_xmm_m32: { sse }
flags for ucomiss_xmm_xmm: { sse }
flags for unpckhpd_xmm_m128: { sse2 }
flags for unpckhpd_xmm_xmm: { sse2 }
flags for unpckhps_xmm_m128: { sse }
flags for unpckhps_xmm_xmm: { sse }
flags for unpcklpd_xmm_m128: { sse2 }
flags for unpcklpd_xmm_xmm: { sse2 }
flags for unpcklps_xmm_m128: { sse }
flags for unpcklps_xmm_xmm: { sse }
flags for vaddpd_xmm_xmm_m128: { avx }
flags for vaddpd_xmm_xmm_xmm: { avx }
flags for vaddpd_ymm_ymm_m256: { avx }
flags for vaddpd_ymm_ymm_ymm: { avx }
flags for vaddps_xmm_xmm_m128: { avx }
flags for vaddps_xmm_xmm_xmm: { avx }
flags for vaddps_ymm_ymm_m256: { avx }
flags for vaddps_ymm_ymm_ymm: { avx }
flags for vaddsd_xmm_xmm_m64: { avx }
flags for vaddsd_xmm_xmm_xmm: { avx }
flags for vaddss_xmm_xmm_m32: { avx }
flags for vaddss_xmm_xmm_xmm: { avx }
flags for vaddsubpd_xmm_xmm_m128: { avx }
flags for vaddsubpd_xmm_xmm_xmm: { avx }
flags for vaddsubpd_ymm_ymm_m256: { avx }
flags for vaddsubpd_ymm_ymm_ymm: { avx }
flags for vaddsubps_xmm_xmm_m128: { avx }
flags for vaddsubps_xmm_xmm_xmm: { avx }
flags for vaddsubps_ymm_ymm_m256: { avx }
flags for vaddsubps_ymm_ymm_ymm: { avx }
flags for vaesdec_xmm_xmm_m128: { aes avx }
flags for vaesdec_xmm_xmm_xmm: { aes avx }
flags for vaesdeclast_xmm_xmm_m128: { aes avx }
flags for vaesdeclast_xmm_xmm_xmm: { aes avx }
flags for vaesenc_xmm_xmm_m128: { aes avx }
flags for vaesenc_xmm_xmm_xmm: { aes avx }
flags for vaesenclast_xmm_xmm_m128: { aes avx }
flags for vaesenclast_xmm_xmm_xmm: { aes avx }
flags for vaesimc_xmm_m128: { aes avx }
flags for vaesimc_xmm_xmm: { aes avx }
flags for vaeskeygenassist_xmm_m128_imm8: { aes avx }
flags for vaeskeygenassist_xmm_xmm_imm8: { aes avx }
flags for vandnpd_xmm_xmm_m128: { avx }
flags for vandnpd_xmm_xmm_xmm: { avx }
flags for vandnpd_ymm_ymm_m256: { avx }
flags for vandnpd_ymm_ymm_ymm: { avx }
flags for vandnps_xmm_xmm_m128: { avx }
flags for vandnps_xmm_xmm_xmm: { avx }
flags for vandnps_ymm_ymm_m256: { avx }
flags for vandnps_ymm_ymm_ymm: { avx }
flags for vandpd_xmm_xmm_m128: { avx }
flags for vandpd_xmm_xmm_xmm: { avx }
flags for vandpd_ymm_ymm_m256: { avx }
flags for vandpd_ymm_ymm_ymm: { avx }
flags for vandps_xmm_xmm_m128: { avx }
flags for vandps_xmm_xmm_xmm: { avx }
flags for vandps_ymm_ymm_m256: { avx }
flags for vandps_ymm_ymm_ymm: { avx }
flags for vblendpd_xmm_xmm_m128_imm8: { avx }
flags for vblendpd_xmm_xmm_xmm_imm8: { avx }
flags for vblendpd_ymm_ymm_m256_imm8: { avx }
flags for vblendpd_ymm_ymm_ymm_imm8: { avx }
flags for vblendps_xmm_xmm_m128_imm8: { avx }
flags for vblendps_xmm_xmm_xmm_imm8: { avx }
flags for vblendps_ymm_ymm_m256_imm8: { avx }
flags for vblendps_ymm_ymm_ymm_imm8: { avx }
flags for vblendvpd_xmm_xmm_m128_xmm: { avx }
flags for vblendvpd_xmm_xmm_xmm_xmm: { avx }
flags for vblendvpd_ymm_ymm_m256_ymm: { avx }
flags for vblendvpd_ymm_ymm_ymm_ymm: { avx }
flags for vblendvps_xmm_xmm_m128_xmm: { avx }
flags for vblendvps_xmm_xmm_xmm_xmm: { avx }
flags for vblendvps_ymm_ymm_m256_ymm: { avx }
flags for vblendvps_ymm_ymm_ymm_ymm: { avx }
flags for vbroadcastf128_ymm_m128: { avx }
flags for vpbroadcasti128_ymm_m128: { avx2 }
flags for vbroadcastsd_ymm_m64: { avx }
flags for vbroadcastsd_ymm_xmm: { avx2 }
flags for vbroadcastss_xmm_m32: { avx }
flags for vbroadcastss_xmm_xmm: { avx2 }
flags for vbroadcastss_ymm_m32: { avx }
flags for vbroadcastss_ymm_xmm: { avx2 }
flags for vcmppd_xmm_xmm_m128_imm8: { avx }
flags for vcmppd_xmm_xmm_xmm_imm8: { avx }
flags for vcmppd_ymm_ymm_m256_imm8: { avx }
flags for vcmppd_ymm_ymm_ymm_imm8: { avx }
flags for vcmpps_xmm_xmm_m128_imm8: { avx }
flags for vcmpps_xmm_xmm_xmm_imm8: { avx }
flags for vcmpps_ymm_ymm_m256_imm8: { avx }
flags for vcmpps_ymm_ymm_ymm_imm8: { avx }
flags for vcmpsd_xmm_xmm_m64_imm8: { avx }
flags for vcmpsd_xmm_xmm_xmm_imm8: { avx }
flags for vcmpss_xmm_xmm_m32_imm8: { avx }
flags for vcmpss_xmm_xmm_xmm_imm8: { avx }
flags for vcomisd_xmm_m64: { avx }
flags for vcomisd_xmm_xmm: { avx }
flags for vcomiss_xmm_m32: { avx }
flags for vcomiss_xmm_xmm: { avx }
flags for vcvtdq2pd_xmm_m64: { avx }
flags for vcvtdq2pd_xmm_xmm: { avx }
flags for vcvtdq2pd_ymm_m128: { avx }
flags for vcvtdq2pd_ymm_ymm: { avx }
flags for vcvtdq2ps_xmm_m128: { avx }
flags for vcvtdq2ps_xmm_xmm: { avx }
flags for vcvtdq2ps_ymm_m256: { avx }
flags for vcvtdq2ps_ymm_ymm: { avx }
flags for vcvtpd2dqx_xmm_m128: { avx }
flags for vcvtpd2dq_xmm_m256: { avx }
flags for vcvtpd2dqx_xmm_xmm: { avx }
flags for vcvtpd2dq_xmm_ymm: { avx }
flags for vcvtpd2ps_xmm_m128: { avx }
flags for vcvtpd2ps_xmm_m256: { avx }
flags for vcvtpd2ps_xmm_xmm: { avx }
flags for vcvtpd2ps_xmm_ymm: { avx }
flags for vcvtph2ps_xmm_m64: { f16c }
flags for vcvtph2ps_xmm_xmm: { f16c }
flags for vcvtph2ps_ymm_m128: { f16c }
flags for vcvtph2ps_ymm_xmm: { f16c }
flags for vcvtps2dq_xmm_m128: { avx }
flags for vcvtps2dq_xmm_xmm: { avx }
flags for vcvtps2dq_ymm_m256: { avx }
flags for vcvtps2dq_ymm_ymm: { avx }
flags for vcvtps2pd_xmm_m64: { avx }
flags for vcvtps2pd_xmm_xmm: { avx }
flags for vcvtps2pd_ymm_m128: { avx }
flags for vcvtps2pd_ymm_xmm: { avx }
flags for vcvtps2ph_m128_ymm_imm8: { f16c }
flags for vcvtps2ph_m64_xmm_imm8: { f16c }
flags for vcvtps2ph_xmm_xmm_imm8: { f16c }
flags for vcvtps2ph_xmm_ymm_imm8: { f16c }
flags for vcvtsd2sil_r32_m64: { avx }
flags for vcvtsd2sil_r32_xmm: { avx }
flags for vcvtsd2siq_r64_m64: { avx }
flags for vcvtsd2siq_r64_xmm: { avx }
flags for vcvtsd2ss_xmm_xmm_m64: { avx }
flags for vcvtsd2ss_xmm_xmm_xmm: { avx }
flags for vcvtsi2sdl_xmm_xmm_m32: { avx }
flags for vcvtsi2sdq_xmm_xmm_m64: { avx }
flags for vcvtsi2sdl_xmm_xmm_r32: { avx }
flags for vcvtsi2sdq_xmm_xmm_r64: { avx }
flags for vcvtsi2ssl_xmm_xmm_m32: { avx }
flags for vcvtsi2ssq_xmm_xmm_m64: { avx }
flags for vcvtsi2ssl_xmm_xmm_r32: { avx }
flags for vcvtsi2ssq_xmm_xmm_r64: { avx }
flags for vcvtss2sd_xmm_xmm_m32: { avx }
flags for vcvtss2sd_xmm_xmm_xmm: { avx }
flags for vcvtss2sil_r32_m32: { avx }
flags for vcvtss2sil_r32_xmm: { avx }
flags for vcvtss2siq_r64_m32: { avx }
flags for vcvtss2siq_r64_xmm: { avx }
flags for vcvttpd2dq_xmm_m128: { avx }
flags for vcvttpd2dq_xmm_m256: { avx }
flags for vcvttpd2dq_xmm_xmm: { avx }
flags for vcvttpd2dq_xmm_ymm: { avx }
flags for vcvttps2dq_xmm_m128: { avx }
flags for vcvttps2dq_xmm_xmm: { avx }
flags for vcvttps2dq_ymm_m256: { avx }
flags for vcvttps2dq_ymm_ymm: { avx }
flags for vcvttsd2si_r32_m64: { avx }
flags for vcvttsd2si_r32_xmm: { avx }
flags for vcvttsd2siq_r64_m64: { avx }
flags for vcvttsd2siq_r64_xmm: { avx }
flags for vcvttss2si_r32_m32: { avx }
flags for vcvttss2si_r32_xmm: { avx }
flags for vcvttss2siq_r64_m32: { avx }
flags for vcvttss2siq_r64_xmm: { avx }
flags for vdivpd_xmm_xmm_m128: { avx }
flags for vdivpd_xmm_xmm_xmm: { avx }
flags for vdivpd_ymm_ymm_m256: { avx }
flags for vdivpd_ymm_ymm_ymm: { avx }
flags for vdivps_xmm_xmm_m128: { avx }
flags for vdivps_xmm_xmm_xmm: { avx }
flags for vdivps_ymm_ymm_m256: { avx }
flags for vdivps_ymm_ymm_ymm: { avx }
flags for vdivsd_xmm_xmm_m64: { avx }
flags for vdivsd_xmm_xmm_xmm: { avx }
flags for vdivss_xmm_xmm_m32: { avx }
flags for vdivss_xmm_xmm_xmm: { avx }
flags for vdppd_xmm_xmm_m128_imm8: { avx }
flags for vdppd_xmm_xmm_xmm_imm8: { avx }
flags for vdpps_xmm_xmm_m128_imm8: { avx }
flags for vdpps_xmm_xmm_xmm_imm8: { avx }
flags for vdpps_ymm_ymm_m256_imm8: { avx }
flags for vdpps_ymm_ymm_ymm_imm8: { avx }
flags for vextractf128_m128_ymm_imm8: { avx }
flags for vextractf128_xmm_ymm_imm8: { avx }
flags for vextracti128_m128_ymm_imm8: { avx2 }
flags for vextracti128_xmm_ymm_imm8: { avx2 }
flags for vextractps_m32_xmm_imm8: { avx }
flags for vextractps_r32_xmm_imm8: { avx }
flags for vfmadd132pd_xmm_xmm_m128: { fma }
flags for vfmadd132pd_xmm_xmm_xmm: { fma }
flags for vfmadd132pd_ymm_ymm_m256: { fma }
flags for vfmadd132pd_ymm_ymm_ymm: { fma }
flags for vfmadd132ps_xmm_xmm_m128: { fma }
flags for vfmadd132ps_xmm_xmm_xmm: { fma }
flags for vfmadd132ps_ymm_ymm_m256: { fma }
flags for vfmadd132ps_ymm_ymm_ymm: { fma }
flags for vfmadd132sd_xmm_xmm_m64: { fma }
flags for vfmadd132sd_xmm_xmm_xmm: { fma }
flags for vfmadd132ss_xmm_xmm_m32: { fma }
flags for vfmadd132ss_xmm_xmm_xmm: { fma }
flags for vfmadd213pd_xmm_xmm_m128: { fma }
flags for vfmadd213pd_xmm_xmm_xmm: { fma }
flags for vfmadd213pd_ymm_ymm_m256: { fma }
flags for vfmadd213pd_ymm_ymm_ymm: { fma }
flags for vfmadd213ps_xmm_xmm_m128: { fma }
flags for vfmadd213ps_xmm_xmm_xmm: { fma }
flags for vfmadd213ps_ymm_ymm_m256: { fma }
flags for vfmadd213ps_ymm_ymm_ymm: { fma }
flags for vfmadd213sd_xmm_xmm_m64: { fma }
flags for vfmadd213sd_xmm_xmm_xmm: { fma }
flags for vfmadd213ss_xmm_xmm_m32: { fma }
flags for vfmadd213ss_xmm_xmm_xmm: { fma }
flags for vfmadd231pd_xmm_xmm_m128: { fma }
flags for vfmadd231pd_xmm_xmm_xmm: { fma }
flags for vfmadd231pd_ymm_ymm_m256: { fma }
flags for vfmadd231pd_ymm_ymm_ymm: { fma }
flags for vfmadd231ps_xmm_xmm_m128: { fma }
flags for vfmadd231ps_xmm_xmm_xmm: { fma }
flags for vfmadd231ps_ymm_ymm_m256: { fma }
flags for vfmadd231ps_ymm_ymm_ymm: { fma }
flags for vfmadd231sd_xmm_xmm_m64: { fma }
flags for vfmadd231sd_xmm_xmm_xmm: { fma }
flags for vfmadd231ss_xmm_xmm_m32: { fma }
flags for vfmadd231ss_xmm_xmm_xmm: { fma }
flags for vfmaddsub132pd_xmm_xmm_m128: { fma }
flags for vfmaddsub132pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub132pd_ymm_ymm_m256: { fma }
flags for vfmaddsub132pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub132ps_xmm_xmm_m128: { fma }
flags for vfmaddsub132ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub132ps_ymm_ymm_m256: { fma }
flags for vfmaddsub132ps_ymm_ymm_ymm: { fma }
flags for vfmaddsub213pd_xmm_xmm_m128: { fma }
flags for vfmaddsub213pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub213pd_ymm_ymm_m256: { fma }
flags for vfmaddsub213pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub213ps_xmm_xmm_m128: { fma }
flags for vfmaddsub213ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub213ps_ymm_ymm_m256: { fma }
flags for vfmaddsub213ps_ymm_ymm_ymm: { fma }
flags for vfmaddsub231pd_xmm_xmm_m128: { fma }
flags for vfmaddsub231pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub231pd_ymm_ymm_m256: { fma }
flags for vfmaddsub231pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub231ps_xmm_xmm_m128: { fma }
flags for vfmaddsub231ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub231ps_ymm_ymm_m256: { fma }
flags for vfmaddsub231ps_ymm_ymm_ymm: { fma }
flags for vfmsub132pd_xmm_xmm_m128: { fma }
flags for vfmsub132pd_xmm_xmm_xmm: { fma }
flags for vfmsub132pd_ymm_ymm_m256: { fma }
flags for vfmsub132pd_ymm_ymm_ymm: { fma }
flags for vfmsub132ps_xmm_xmm_m128: { fma }
flags for vfmsub132ps_xmm_xmm_xmm: { fma }
flags for vfmsub132ps_ymm_ymm_m256: { fma }
flags for vfmsub132ps_ymm_ymm_ymm: { fma }
flags for vfmsub132sd_xmm_xmm_m64: { fma }
flags for vfmsub132sd_xmm_xmm_xmm: { fma }
flags for vfmsub132ss_xmm_xmm_m32: { fma }
flags for vfmsub132ss_xmm_xmm_xmm: { fma }
flags for vfmsub213pd_xmm_xmm_m128: { fma }
flags for vfmsub213pd_xmm_xmm_xmm: { fma }
flags for vfmsub213pd_ymm_ymm_m256: { fma }
flags for vfmsub213pd_ymm_ymm_ymm: { fma }
flags for vfmsub213ps_xmm_xmm_m128: { fma }
flags for vfmsub213ps_xmm_xmm_xmm: { fma }
flags for vfmsub213ps_ymm_ymm_m256: { fma }
flags for vfmsub213ps_ymm_ymm_ymm: { fma }
flags for vfmsub213sd_xmm_xmm_m64: { fma }
flags for vfmsub213sd_xmm_xmm_xmm: { fma }
flags for vfmsub213ss_xmm_xmm_m32: { fma }
flags for vfmsub213ss_xmm_xmm_xmm: { fma }
flags for vfmsub231pd_xmm_xmm_m128: { fma }
flags for vfmsub231pd_xmm_xmm_xmm: { fma }
flags for vfmsub231pd_ymm_ymm_m256: { fma }
flags for vfmsub231pd_ymm_ymm_ymm: { fma }
flags for vfmsub231ps_xmm_xmm_m128: { fma }
flags for vfmsub231ps_xmm_xmm_xmm: { fma }
flags for vfmsub231ps_ymm_ymm_m256: { fma }
flags for vfmsub231ps_ymm_ymm_ymm: { fma }
flags for vfmsub231sd_xmm_xmm_m64: { fma }
flags for vfmsub231sd_xmm_xmm_xmm: { fma }
flags for vfmsub231ss_xmm_xmm_m32: { fma }
flags for vfmsub231ss_xmm_xmm_xmm: { fma }
flags for vfmsubadd132pd_xmm_xmm_m128: { fma }
flags for vfmsubadd132pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd132pd_ymm_ymm_m256: { fma }
flags for vfmsubadd132pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd132ps_xmm_xmm_m128: { fma }
flags for vfmsubadd132ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd132ps_ymm_ymm_m256: { fma }
flags for vfmsubadd132ps_ymm_ymm_ymm: { fma }
flags for vfmsubadd213pd_xmm_xmm_m128: { fma }
flags for vfmsubadd213pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd213pd_ymm_ymm_m256: { fma }
flags for vfmsubadd213pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd213ps_xmm_xmm_m128: { fma }
flags for vfmsubadd213ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd213ps_ymm_ymm_m256: { fma }
flags for vfmsubadd213ps_ymm_ymm_ymm: { fma }
flags for vfmsubadd231pd_xmm_xmm_m128: { fma }
flags for vfmsubadd231pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd231pd_ymm_ymm_m256: { fma }
flags for vfmsubadd231pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd231ps_xmm_xmm_m128: { fma }
flags for vfmsubadd231ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd231ps_ymm_ymm_m256: { fma }
flags for vfmsubadd231ps_ymm_ymm_ymm: { fma }
flags for vfnmadd132pd_xmm_xmm_m128: { fma }
flags for vfnmadd132pd_xmm_xmm_xmm: { fma }
flags for vfnmadd132pd_ymm_ymm_m256: { fma }
flags for vfnmadd132pd_ymm_ymm_ymm: { fma }
flags for vfnmadd132ps_xmm_xmm_m128: { fma }
flags for vfnmadd132ps_xmm_xmm_xmm: { fma }
flags for vfnmadd132ps_ymm_ymm_m256: { fma }
flags for vfnmadd132ps_ymm_ymm_ymm: { fma }
flags for vfnmadd132sd_xmm_xmm_m64: { fma }
flags for vfnmadd132sd_xmm_xmm_xmm: { fma }
flags for vfnmadd132ss_xmm_xmm_m32: { fma }
flags for vfnmadd132ss_xmm_xmm_xmm: { fma }
flags for vfnmadd213pd_xmm_xmm_m128: { fma }
flags for vfnmadd213pd_xmm_xmm_xmm: { fma }
flags for vfnmadd213pd_ymm_ymm_m256: { fma }
flags for vfnmadd213pd_ymm_ymm_ymm: { fma }
flags for vfnmadd213ps_xmm_xmm_m128: { fma }
flags for vfnmadd213ps_xmm_xmm_xmm: { fma }
flags for vfnmadd213ps_ymm_ymm_m256: { fma }
flags for vfnmadd213ps_ymm_ymm_ymm: { fma }
flags for vfnmadd213sd_xmm_xmm_m64: { fma }
flags for vfnmadd213sd_xmm_xmm_xmm: { fma }
flags for vfnmadd213ss_xmm_xmm_m32: { fma }
flags for vfnmadd213ss_xmm_xmm_xmm: { fma }
flags for vfnmadd231pd_xmm_xmm_m128: { fma }
flags for vfnmadd231pd_xmm_xmm_xmm: { fma }
flags for vfnmadd231pd_ymm_ymm_m256: { fma }
flags for vfnmadd231pd_ymm_ymm_ymm: { fma }
flags for vfnmadd231ps_xmm_xmm_m128: { fma }
flags for vfnmadd231ps_xmm_xmm_xmm: { fma }
flags for vfnmadd231ps_ymm_ymm_m256: { fma }
flags for vfnmadd231ps_ymm_ymm_ymm: { fma }
flags for vfnmadd231sd_xmm_xmm_m64: { fma }
flags for vfnmadd231sd_xmm_xmm_xmm: { fma }
flags for vfnmadd231ss_xmm_xmm_m32: { fma }
flags for vfnmadd231ss_xmm_xmm_xmm: { fma }
flags for vfnmsub132pd_xmm_xmm_m128: { fma }
flags for vfnmsub132pd_xmm_xmm_xmm: { fma }
flags for vfnmsub132pd_ymm_ymm_m256: { fma }
flags for vfnmsub132pd_ymm_ymm_ymm: { fma }
flags for vfnmsub132ps_xmm_xmm_m128: { fma }
flags for vfnmsub132ps_xmm_xmm_xmm: { fma }
flags for vfnmsub132ps_ymm_ymm_m256: { fma }
flags for vfnmsub132ps_ymm_ymm_ymm: { fma }
flags for vfnmsub132sd_xmm_xmm_m64: { fma }
flags for vfnmsub132sd_xmm_xmm_xmm: { fma }
flags for vfnmsub132ss_xmm_xmm_m32: { fma }
flags for vfnmsub132ss_xmm_xmm_xmm: { fma }
flags for vfnmsub213pd_xmm_xmm_m128: { fma }
flags for vfnmsub213pd_xmm_xmm_xmm: { fma }
flags for vfnmsub213pd_ymm_ymm_m256: { fma }
flags for vfnmsub213pd_ymm_ymm_ymm: { fma }
flags for vfnmsub213ps_xmm_xmm_m128: { fma }
flags for vfnmsub213ps_xmm_xmm_xmm: { fma }
flags for vfnmsub213ps_ymm_ymm_m256: { fma }
flags for vfnmsub213ps_ymm_ymm_ymm: { fma }
flags for vfnmsub213sd_xmm_xmm_m64: { fma }
flags for vfnmsub213sd_xmm_xmm_xmm: { fma }
flags for vfnmsub213ss_xmm_xmm_m32: { fma }
flags for vfnmsub213ss_xmm_xmm_xmm: { fma }
flags for vfnmsub231pd_xmm_xmm_m128: { fma }
flags for vfnmsub231pd_xmm_xmm_xmm: { fma }
flags for vfnmsub231pd_ymm_ymm_m256: { fma }
flags for vfnmsub231pd_ymm_ymm_ymm: { fma }
flags for vfnmsub231ps_xmm_xmm_m128: { fma }
flags for vfnmsub231ps_xmm_xmm_xmm: { fma }
flags for vfnmsub231ps_ymm_ymm_m256: { fma }
flags for vfnmsub231ps_ymm_ymm_ymm: { fma }
flags for vfnmsub231sd_xmm_xmm_m64: { fma }
flags for vfnmsub231sd_xmm_xmm_xmm: { fma }
flags for vfnmsub231ss_xmm_xmm_m32: { fma }
flags for vfnmsub231ss_xmm_xmm_xmm: { fma }
flags for vgatherdpd_xmm_m32_xmm: { avx2 }
flags for vgatherdpd_ymm_m32_ymm: { avx2 }
flags for vgatherdps_xmm_m32_xmm: { avx2 }
flags for vgatherdps_ymm_m32_ymm: { avx2 }
flags for vgatherqpd_xmm_m64_xmm: { avx2 }
flags for vgatherqpd_ymm_m64_ymm: { avx2 }
flags for vgatherqps_xmm_m64_xmm: { avx2 }
flags for vgatherqps_xmm_m64_xmm_1: { avx2 }
flags for vhaddpd_xmm_xmm_m128: { avx }
flags for vhaddpd_xmm_xmm_xmm: { avx }
flags for vhaddpd_ymm_ymm_m256: { avx }
flags for vhaddpd_ymm_ymm_ymm: { avx }
flags for vhaddps_xmm_xmm_m128: { avx }
flags for vhaddps_xmm_xmm_xmm: { avx }
flags for vhaddps_ymm_ymm_m256: { avx }
flags for vhaddps_ymm_ymm_ymm: { avx }
flags for vhsubpd_xmm_xmm_m128: { avx }
flags for vhsubpd_xmm_xmm_xmm: { avx }
flags for vhsubpd_ymm_ymm_m256: { avx }
flags for vhsubpd_ymm_ymm_ymm: { avx }
flags for vhsubps_xmm_xmm_m128: { avx }
flags for vhsubps_xmm_xmm_xmm: { avx }
flags for vhsubps_ymm_ymm_m256: { avx }
flags for vhsubps_ymm_ymm_ymm: { avx }
flags for vinsertf128_ymm_ymm_m128_imm8: { avx }
flags for vinsertf128_ymm_ymm_xmm_imm8: { avx }
flags for vinserti128_ymm_ymm_m128_imm8: { avx2 }
flags for vinserti128_ymm_ymm_xmm_imm8: { avx2 }
flags for vinsertps_xmm_xmm_m32_imm8: { avx }
flags for vinsertps_xmm_xmm_xmm_imm8: { avx }
flags for vlddqu_xmm_m128: { avx }
flags for vlddqu_ymm_m256: { avx }
flags for vmaskmovpd_m128_xmm_xmm: { avx }
flags for vmaskmovpd_m256_ymm_ymm: { avx }
flags for vmaskmovpd_xmm_xmm_m128: { avx }
flags for vmaskmovpd_ymm_ymm_m256: { avx }
flags for vmaskmovps_m128_xmm_xmm: { avx }
flags for vmaskmovps_m256_ymm_ymm: { avx }
flags for vmaskmovps_xmm_xmm_m128: { avx }
flags for vmaskmovps_ymm_ymm_m256: { avx }
flags for vmaxpd_xmm_xmm_m128: { avx }
flags for vmaxpd_xmm_xmm_xmm: { avx }
flags for vmaxpd_ymm_ymm_m256: { avx }
flags for vmaxpd_ymm_ymm_ymm: { avx }
flags for vmaxps_xmm_xmm_m128: { avx }
flags for vmaxps_xmm_xmm_xmm: { avx }
flags for vmaxps_ymm_ymm_m256: { avx }
flags for vmaxps_ymm_ymm_ymm: { avx }
flags for vmaxsd_xmm_xmm_m64: { avx }
flags for vmaxsd_xmm_xmm_xmm: { avx }
flags for vmaxss_xmm_xmm_m32: { avx }
flags for vmaxss_xmm_xmm_xmm: { avx }
flags for vminpd_xmm_xmm_m128: { avx }
flags for vminpd_xmm_xmm_xmm: { avx }
flags for vminpd_ymm_ymm_m256: { avx }
flags for vminpd_ymm_ymm_ymm: { avx }
flags for vminps_xmm_xmm_m128: { avx }
flags for vminps_xmm_xmm_xmm: { avx }
flags for vminps_ymm_ymm_m256: { avx }
flags for vminps_ymm_ymm_ymm: { avx }
flags for vminsd_xmm_xmm_m64: { avx }
flags for vminsd_xmm_xmm_xmm: { avx }
flags for vminss_xmm_xmm_m32: { avx }
flags for vminss_xmm_xmm_xmm: { avx }
flags for vmovapd_m128_xmm: { avx }
flags for vmovapd_m256_ymm: { avx }
flags for vmovapd_xmm_m128: { avx }
flags for vmovapd_xmm_xmm: { avx }
flags for vmovapd_xmm_xmm_1: { avx }
flags for vmovapd_ymm_m256: { avx }
flags for vmovapd_ymm_ymm: { avx }
flags for vmovapd_ymm_ymm_1: { avx }
flags for vmovaps_m128_xmm: { avx }
flags for vmovaps_m256_ymm: { avx }
flags for vmovaps_xmm_m128: { avx }
flags for vmovaps_xmm_xmm: { avx }
flags for vmovaps_xmm_xmm_1: { avx }
flags for vmovaps_ymm_m256: { avx }
flags for vmovaps_ymm_ymm: { avx }
flags for vmovaps_ymm_ymm_1: { avx }
flags for vmovd_m32_xmm: { avx }
flags for vmovd_r32_xmm: { avx }
flags for vmovd_xmm_m32: { avx }
flags for vmovd_xmm_r32: { avx }
flags for vmovddup_xmm_m64: { avx }
flags for vmovddup_xmm_xmm: { avx }
flags for vmovddup_ymm_m256: { avx }
flags for vmovddup_ymm_ymm: { avx }
flags for vmovdqa_m128_xmm: { avx }
flags for vmovdqa_m256_ymm: { avx }
flags for vmovdqa_xmm_m128: { avx }
flags for vmovdqa_xmm_xmm: { avx }
flags for vmovdqa_xmm_xmm_1: { avx }
flags for vmovdqa_ymm_m256: { avx }
flags for vmovdqa_ymm_ymm: { avx }
flags for vmovdqa_ymm_ymm_1: { avx }
flags for vmovdqu_m128_xmm: { avx }
flags for vmovdqu_m256_ymm: { avx }
flags for vmovdqu_xmm_m128: { avx }
flags for vmovdqu_xmm_xmm: { avx }
flags for vmovdqu_xmm_xmm_1: { avx }
flags for vmovdqu_ymm_m256: { avx }
flags for vmovdqu_ymm_ymm: { avx }
flags for vmovdqu_ymm_ymm_1: { avx }
flags for vmovhlps_xmm_xmm_xmm: { avx }
flags for vmovhpd_m64_xmm: { avx }
flags for vmovhpd_xmm_xmm_m64: { avx }
flags for vmovhps_m64_xmm: { avx }
flags for vmovhps_xmm_xmm_m64: { avx }
flags for vmovlhps_xmm_xmm_xmm: { avx }
flags for vmovlpd_m64_xmm: { avx }
flags for vmovlpd_xmm_xmm_m64: { avx }
flags for vmovlps_m64_xmm: { avx }
flags for vmovlps_xmm_xmm_m64: { avx }
flags for vmovmskpd_r32_xmm: { avx }
flags for vmovmskpd_r32_ymm: { avx }
flags for vmovmskpd_r64_xmm: { avx }
flags for vmovmskpd_r64_ymm: { avx }
flags for vmovmskps_r32_xmm: { avx }
flags for vmovmskps_r32_ymm: { avx }
flags for vmovmskps_r64_xmm: { avx }
flags for vmovmskps_r64_ymm: { avx }
flags for vmovntdqa_m128_xmm: { avx }
flags for vmovntdqa_xmm_m128: { avx }
flags for vmovntdqa_ymm_m256: { avx2 }
flags for vmovntpd_m128_xmm: { avx }
flags for vmovntpd_m256_ymm: { avx }
flags for vmovntps_m128_xmm: { avx }
flags for vmovntps_m256_ymm: { avx }
flags for vmovq_m64_xmm: { avx }
flags for vmovq_m64_xmm_1: { avx }
flags for vmovq_r64_xmm: { avx }
flags for vmovq_xmm_m64: { avx }
flags for vmovq_xmm_m64_1: { avx }
flags for vmovq_xmm_r64: { avx }
flags for vmovq_xmm_xmm: { avx }
flags for vmovq_xmm_xmm_1: { avx }
flags for vmovsd_m64_xmm: { avx }
flags for vmovsd_xmm_m64: { avx }
flags for vmovsd_xmm_xmm_xmm: { avx }
flags for vmovsd_xmm_xmm_xmm_1: { avx }
flags for vmovshdup_xmm_m128: { avx }
flags for vmovshdup_xmm_xmm: { avx }
flags for vmovshdup_ymm_m256: { avx }
flags for vmovshdup_ymm_ymm: { avx }
flags for vmovsldup_xmm_m128: { avx }
flags for vmovsldup_xmm_xmm: { avx }
flags for vmovsldup_ymm_m256: { avx }
flags for vmovsldup_ymm_ymm: { avx }
flags for vmovss_m32_xmm: { avx }
flags for vmovss_xmm_m32: { avx }
flags for vmovss_xmm_xmm_xmm: { avx }
flags for vmovss_xmm_xmm_xmm_1: { avx }
flags for vmovupd_m128_xmm: { avx }
flags for vmovupd_m256_ymm: { avx }
flags for vmovupd_xmm_m128: { avx }
flags for vmovupd_xmm_xmm: { avx }
flags for vmovupd_xmm_xmm_1: { avx }
flags for vmovupd_ymm_m256: { avx }
flags for vmovupd_ymm_ymm: { avx }
flags for vmovupd_ymm_ymm_1: { avx }
flags for vmovups_m128_xmm: { avx }
flags for vmovups_m256_ymm: { avx }
flags for vmovups_xmm_m128: { avx }
flags for vmovups_xmm_xmm: { avx }
flags for vmovups_xmm_xmm_1: { avx }
flags for vmovups_ymm_m256: { avx }
flags for vmovups_ymm_ymm: { avx }
flags for vmovups_ymm_ymm_1: { avx }
flags for vmpsadbw_xmm_xmm_m128_imm8: { avx }
flags for vmpsadbw_xmm_xmm_xmm_imm8: { avx }
flags for vmpsadbw_ymm_ymm_m256_imm8: { avx2 }
flags for vmpsadbw_ymm_ymm_ymm_imm8: { avx2 }
flags for vmulpd_xmm_xmm_m128: { avx }
flags for vmulpd_xmm_xmm_xmm: { avx }
flags for vmulpd_ymm_ymm_m256: { avx }
flags for vmulpd_ymm_ymm_ymm: { avx }
flags for vmulps_xmm_xmm_m128: { avx }
flags for vmulps_xmm_xmm_xmm: { avx }
flags for vmulps_ymm_ymm_m256: { avx }
flags for vmulps_ymm_ymm_ymm: { avx }
flags for vmulsd_xmm_xmm_m64: { avx }
flags for vmulsd_xmm_xmm_xmm: { avx }
flags for vmulss_xmm_xmm_m32: { avx }
flags for vmulss_xmm_xmm_xmm: { avx }
flags for vorpd_xmm_xmm_m128: { avx }
flags for vorpd_xmm_xmm_xmm: { avx }
flags for vorpd_ymm_ymm_m256: { avx }
flags for vorpd_ymm_ymm_ymm: { avx }
flags for vorps_xmm_xmm_m128: { avx }
flags for vorps_xmm_xmm_xmm: { avx }
flags for vorps_ymm_ymm_m256: { avx }
flags for vorps_ymm_ymm_ymm: { avx }
flags for vpabsb_xmm_m128: { avx }
flags for vpabsb_xmm_xmm: { avx }
flags for vpabsb_ymm_m256: { avx2 }
flags for vpabsb_ymm_ymm: { avx2 }
flags for vpabsd_xmm_m128: { avx }
flags for vpabsd_xmm_xmm: { avx }
flags for vpabsd_ymm_m256: { avx2 }
flags for vpabsd_ymm_ymm: { avx2 }
flags for vpabsw_xmm_m128: { avx }
flags for vpabsw_xmm_xmm: { avx }
flags for vpabsw_ymm_m256: { avx2 }
flags for vpabsw_ymm_ymm: { avx2 }
flags for vpackssdw_xmm_xmm_m128: { avx }
flags for vpackssdw_xmm_xmm_xmm: { avx }
flags for vpackssdw_ymm_ymm_m256: { avx2 }
flags for vpackssdw_ymm_ymm_ymm: { avx2 }
flags for vpacksswb_xmm_xmm_m128: { avx }
flags for vpacksswb_xmm_xmm_xmm: { avx }
flags for vpacksswb_ymm_ymm_m256: { avx2 }
flags for vpacksswb_ymm_ymm_ymm: { avx2 }
flags for vpackusdw_xmm_xmm_m128: { avx }
flags for vpackusdw_xmm_xmm_xmm: { avx }
flags for vpackusdw_ymm_ymm_m256: { avx2 }
flags for vpackusdw_ymm_ymm_ymm: { avx2 }
flags for vpackuswb_xmm_xmm_m128: { avx }
flags for vpackuswb_xmm_xmm_xmm: { avx }
flags for vpackuswb_ymm_ymm_m256: { avx2 }
flags for vpackuswb_ymm_ymm_ymm: { avx2 }
flags for vpaddb_xmm_xmm_m128: { avx }
flags for vpaddb_xmm_xmm_xmm: { avx }
flags for vpaddb_ymm_ymm_m256: { avx2 }
flags for vpaddb_ymm_ymm_ymm: { avx2 }
flags for vpaddd_xmm_xmm_m128: { avx }
flags for vpaddd_xmm_xmm_xmm: { avx }
flags for vpaddd_ymm_ymm_m256: { avx2 }
flags for vpaddd_ymm_ymm_ymm: { avx2 }
flags for vpaddq_xmm_xmm_m128: { avx }
flags for vpaddq_xmm_xmm_xmm: { avx }
flags for vpaddq_ymm_ymm_m256: { avx2 }
flags for vpaddq_ymm_ymm_ymm: { avx2 }
flags for vpaddsb_xmm_xmm_m128: { avx }
flags for vpaddsb_xmm_xmm_xmm: { avx }
flags for vpaddsb_ymm_ymm_m256: { avx2 }
flags for vpaddsb_ymm_ymm_ymm: { avx2 }
flags for vpaddsw_xmm_xmm_m128: { avx }
flags for vpaddsw_xmm_xmm_xmm: { avx }
flags for vpaddsw_ymm_ymm_m256: { avx2 }
flags for vpaddsw_ymm_ymm_ymm: { avx2 }
flags for vpaddusb_xmm_xmm_m128: { avx }
flags for vpaddusb_xmm_xmm_xmm: { avx }
flags for vpaddusb_ymm_ymm_m256: { avx2 }
flags for vpaddusb_ymm_ymm_ymm: { avx2 }
flags for vpaddusw_xmm_xmm_m128: { avx }
flags for vpaddusw_xmm_xmm_xmm: { avx }
flags for vpaddusw_ymm_ymm_m256: { avx2 }
flags for vpaddusw_ymm_ymm_ymm: { avx2 }
flags for vpaddw_xmm_xmm_m128: { avx }
flags for vpaddw_xmm_xmm_xmm: { avx }
flags for vpaddw_ymm_ymm_m256: { avx2 }
flags for vpaddw_ymm_ymm_ymm: { avx2 }
flags for vpalignr_xmm_xmm_m128_imm8: { avx }
flags for vpalignr_xmm_xmm_xmm_imm8: { avx }
flags for vpalignr_ymm_ymm_m256_imm8: { avx2 }
flags for vpalignr_ymm_ymm_ymm_imm8: { avx2 }
flags for vpand_xmm_xmm_m128: { avx }
flags for vpand_xmm_xmm_xmm: { avx }
flags for vpand_ymm_ymm_m256: { avx2 }
flags for vpand_ymm_ymm_ymm: { avx2 }
flags for vpandn_xmm_xmm_m128: { avx }
flags for vpandn_xmm_xmm_xmm: { avx }
flags for vpandn_ymm_ymm_m256: { avx2 }
flags for vpandn_ymm_ymm_ymm: { avx2 }
flags for vpavgb_xmm_xmm_m128: { avx }
flags for vpavgb_xmm_xmm_xmm: { avx }
flags for vpavgb_ymm_ymm_m256: { avx2 }
flags for vpavgb_ymm_ymm_ymm: { avx2 }
flags for vpavgw_xmm_xmm_m128: { avx }
flags for vpavgw_xmm_xmm_xmm: { avx }
flags for vpavgw_ymm_ymm_m256: { avx2 }
flags for vpavgw_ymm_ymm_ymm: { avx2 }
flags for vpblendd_xmm_xmm_m128_imm8: { avx2 }
flags for vpblendd_xmm_xmm_xmm_imm8: { avx2 }
flags for vpblendd_ymm_ymm_m256_imm8: { avx2 }
flags for vpblendd_ymm_ymm_ymm_imm8: { avx2 }
flags for vpblendvb_xmm_xmm_m128_xmm: { avx }
flags for vpblendvb_xmm_xmm_xmm_xmm: { avx }
flags for vpblendvb_ymm_ymm_m256_ymm: { avx2 }
flags for vpblendvb_ymm_ymm_ymm_ymm: { avx2 }
flags for vpblendw_xmm_xmm_m128_imm8: { avx }
flags for vpblendw_xmm_xmm_xmm_imm8: { avx }
flags for vpblendw_ymm_ymm_m256_imm8: { avx2 }
flags for vpblendw_ymm_ymm_ymm_imm8: { avx2 }
flags for vpbroadcastb_xmm_m8: { avx2 }
flags for vpbroadcastb_xmm_xmm: { avx2 }
flags for vpbroadcastb_ymm_m8: { avx2 }
flags for vpbroadcastb_ymm_xmm: { avx2 }
flags for vpbroadcastd_xmm_m32: { avx2 }
flags for vpbroadcastd_xmm_xmm: { avx2 }
flags for vpbroadcastd_ymm_m32: { avx2 }
flags for vpbroadcastd_ymm_xmm: { avx2 }
flags for vpbroadcastq_xmm_m64: { avx2 }
flags for vpbroadcastq_xmm_xmm: { avx2 }
flags for vpbroadcastq_ymm_m64: { avx2 }
flags for vpbroadcastq_ymm_xmm: { avx2 }
flags for vpbroadcastw_xmm_m16: { avx2 }
flags for vpbroadcastw_xmm_xmm: { avx2 }
flags for vpbroadcastw_ymm_m16: { avx2 }
flags for vpbroadcastw_ymm_xmm: { avx2 }
flags for vpclmulqdq_xmm_xmm_m128_imm8: { pclmulqdq avx }
flags for vpclmulqdq_xmm_xmm_xmm_imm8: { pclmulqdq avx }
flags for vpcmpeqb_xmm_xmm_m128: { avx }
flags for vpcmpeqb_xmm_xmm_xmm: { avx }
flags for vpcmpeqb_ymm_ymm_m256: { avx2 }
flags for vpcmpeqb_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqd_xmm_xmm_m128: { avx }
flags for vpcmpeqd_xmm_xmm_xmm: { avx }
flags for vpcmpeqd_ymm_ymm_m256: { avx2 }
flags for vpcmpeqd_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqq_xmm_xmm_m128: { avx }
flags for vpcmpeqq_xmm_xmm_xmm: { avx }
flags for vpcmpeqq_ymm_ymm_m256: { avx2 }
flags for vpcmpeqq_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqw_xmm_xmm_m128: { avx }
flags for vpcmpeqw_xmm_xmm_xmm: { avx }
flags for vpcmpeqw_ymm_ymm_m256: { avx2 }
flags for vpcmpeqw_ymm_ymm_ymm: { avx2 }
flags for vpcmpestri_xmm_m128_imm8: { avx }
flags for vpcmpestri_xmm_xmm_imm8: { avx }
flags for vpcmpestrm_xmm_m128_imm8: { avx }
flags for vpcmpestrm_xmm_xmm_imm8: { avx }
flags for vpcmpgtb_xmm_xmm_m128: { avx }
flags for vpcmpgtb_xmm_xmm_xmm: { avx }
flags for vpcmpgtb_ymm_ymm_m256: { avx }
flags for vpcmpgtb_ymm_ymm_ymm: { avx }
flags for vpcmpgtd_xmm_xmm_m128: { avx }
flags for vpcmpgtd_xmm_xmm_xmm: { avx }
flags for vpcmpgtd_ymm_ymm_m256: { avx2 }
flags for vpcmpgtd_ymm_ymm_ymm: { avx2 }
flags for vpcmpgtq_xmm_xmm_m128: { avx }
flags for vpcmpgtq_xmm_xmm_xmm: { avx }
flags for vpvmpgtq_ymm_ymm_m256: { avx2 }
flags for vpvmpgtq_ymm_ymm_ymm: { avx2 }
flags for vpcmpgtw_xmm_xmm_m128: { avx }
flags for vpcmpgtw_xmm_xmm_xmm: { avx }
flags for vpcmpgtw_ymm_ymm_m256: { avx2 }
flags for vpcmpgtw_ymm_ymm_ymm: { avx2 }
flags for vpcmpistri_xmm_m128_imm8: { avx }
flags for vpcmpistri_xmm_xmm_imm8: { avx }
flags for vpcmpistrm_xmm_m128_imm8: { avx }
flags for vpcmpistrm_xmm_xmm_imm8: { avx }
flags for vperm2f128_ymm_ymm_m256_imm8: { avx }
flags for vperm2f128_ymm_ymm_ymm_imm8: { avx }
flags for vperm2i128_ymm_ymm_m256_imm8: { avx2 }
flags for vperm2i128_ymm_ymm_ymm_imm8: { avx2 }
flags for vpermd_ymm_ymm_m256: { avx2 }
flags for vpermd_ymm_ymm_ymm: { avx2 }
flags for vpermilpd_xmm_m128_imm8: { avx }
flags for vpermilpd_xmm_xmm_imm8: { avx }
flags for vpermilpd_xmm_xmm_m128: { avx }
flags for vpermilpd_xmm_xmm_xmm: { avx }
flags for vpermilpd_ymm_m256_imm8: { avx }
flags for vpermilpd_ymm_ymm_imm8: { avx }
flags for vpermilpd_ymm_ymm_m256: { avx }
flags for vpermilpd_ymm_ymm_ymm: { avx }
flags for vpermilps_xmm_m128_imm8: { avx }
flags for vpermilps_xmm_xmm_imm8: { avx }
flags for vpermilps_xmm_xmm_m128: { avx }
flags for vpermilps_xmm_xmm_xmm: { avx }
flags for vpermilps_ymm_m256_imm8: { avx }
flags for vpermilps_ymm_ymm_imm8: { avx }
flags for vpermilps_ymm_ymm_m256: { avx }
flags for vpermilps_ymm_ymm_ymm: { avx }
flags for vpermpd_ymm_m256_imm8: { avx2 }
flags for vpermpd_ymm_ymm_imm8: { avx2 }
flags for vpermps_ymm_ymm_m256: { avx2 }
flags for vpermps_ymm_ymm_ymm: { avx2 }
flags for vpermq_ymm_m256_imm8: { avx2 }
flags for vpermq_ymm_ymm_imm8: { avx2 }
flags for vpextrb_m8_xmm_imm8: { avx }
flags for vpextrb_r32_xmm_imm8: { avx }
flags for vpextrb_r64_xmm_imm8: { avx }
flags for vpextrd_m32_xmm_imm8: { avx }
flags for vpextrd_r32_xmm_imm8: { avx }
flags for vpextrq_m64_xmm_imm8: { avx }
flags for vpextrq_r64_xmm_imm8: { avx }
flags for vpextrw_m16_xmm_imm8: { avx }
flags for vpextrw_r32_xmm_imm8: { avx }
flags for vpextrw_r32_xmm_imm8_1: { avx }
flags for vpextrw_r64_xmm_imm8: { avx }
flags for vpextrw_r64_xmm_imm8_1: { avx }
flags for vpgatherdd_xmm_m32_xmm: { avx2 }
flags for vpgatherdd_ymm_m32_ymm: { avx2 }
flags for vpgatherdq_xmm_m32_xmm: { avx2 }
flags for vpgatherdq_ymm_m32_ymm: { avx2 }
flags for vpgatherqd_xmm_m64_xmm: { avx2 }
flags for vpgatherqd_xmm_m64_xmm_1: { avx2 }
flags for vpgatherqq_xmm_m64_xmm: { avx2 }
flags for vpgatherqq_ymm_m64_ymm: { avx2 }
flags for vphaddd_xmm_xmm_m128: { avx }
flags for vphaddd_xmm_xmm_xmm: { avx }
flags for vphaddd_ymm_ymm_m256: { avx2 }
flags for vphaddd_ymm_ymm_ymm: { avx2 }
flags for vphaddsw_xmm_xmm_m128: { avx }
flags for vphaddsw_xmm_xmm_xmm: { avx }
flags for vphaddsw_ymm_ymm_m256: { avx2 }
flags for vphaddsw_ymm_ymm_ymm: { avx2 }
flags for vphaddw_xmm_xmm_m128: { avx }
flags for vphaddw_xmm_xmm_xmm: { avx }
flags for vphaddw_ymm_ymm_m256: { avx2 }
flags for vphaddw_ymm_ymm_ymm: { avx2 }
flags for vphminposuw_xmm_m128: { avx }
flags for vphminposuw_xmm_xmm: { avx }
flags for vphsubd_xmm_xmm_m128: { avx }
flags for vphsubd_xmm_xmm_xmm: { avx }
flags for vphsubd_ymm_ymm_m256: { avx2 }
flags for vphsubd_ymm_ymm_ymm: { avx2 }
flags for vphsubsw_xmm_xmm_m128: { avx }
flags for vphsubsw_xmm_xmm_xmm: { avx }
flags for vphsubsw_ymm_ymm_m256: { avx2 }
flags for vphsubsw_ymm_ymm_ymm: { avx2 }
flags for vphsubw_xmm_xmm_m128: { avx }
flags for vphsubw_xmm_xmm_xmm: { avx }
flags for vphsubw_ymm_ymm_m256: { avx2 }
flags for vphsubw_ymm_ymm_ymm: { avx2 }
flags for vpinsrb_xmm_xmm_m8_imm8: { avx }
flags for vpinsrb_xmm_xmm_r32_imm8: { avx }
flags for vpinsrd_xmm_xmm_m32_imm8: { avx }
flags for vpinsrd_xmm_xmm_r32_imm8: { avx }
flags for vpinsrq_xmm_xmm_m64_imm8: { avx }
flags for vpinsrq_xmm_xmm_r64_imm8: { avx }
flags for vpinsrw_xmm_xmm_m16_imm8: { avx }
flags for vpinsrw_xmm_xmm_r32_imm8: { avx }
flags for vpmaddubsw_xmm_xmm_m128: { avx }
flags for vpmaddubsw_xmm_xmm_xmm: { avx }
flags for vpmaddubsw_ymm_ymm_m256: { avx2 }
flags for vpmaddubsw_ymm_ymm_ymm: { avx2 }
flags for vpmaddwd_xmm_xmm_m128: { avx }
flags for vpmaddwd_xmm_xmm_xmm: { avx }
flags for vpmaddwd_ymm_ymm_m256: { avx2 }
flags for vpmaddwd_ymm_ymm_ymm: { avx2 }
flags for vpmaskmovd_m128_xmm_xmm: { avx2 }
flags for vpmaskmovd_m256_ymm_ymm: { avx2 }
flags for vpmaskmovd_xmm_xmm_m128: { avx2 }
flags for vpmaskmovd_ymm_ymm_m256: { avx2 }
flags for vpmaskmovq_m128_xmm_xmm: { avx2 }
flags for vpmaskmovq_m256_ymm_ymm: { avx2 }
flags for vpmaskmovq_xmm_xmm_m128: { avx2 }
flags for vpmaskmovq_ymm_ymm_m256: { avx2 }
flags for vpmaxsb_xmm_xmm_m128: { avx }
flags for vpmaxsb_xmm_xmm_xmm: { avx }
flags for vpmaxsb_ymm_ymm_m256: { avx2 }
flags for vpmaxsb_ymm_ymm_ymm: { avx2 }
flags for vpmaxsd_xmm_xmm_m128: { avx }
flags for vpmaxsd_xmm_xmm_xmm: { avx }
flags for vpmaxsd_ymm_ymm_m256: { avx2 }
flags for vpmaxsd_ymm_ymm_ymm: { avx2 }
flags for vpmaxsw_xmm_xmm_m128: { avx }
flags for vpmaxsw_xmm_xmm_xmm: { avx }
flags for vpmaxsw_ymm_ymm_m256: { avx2 }
flags for vpmaxsw_ymm_ymm_ymm: { avx2 }
flags for vpmaxub_xmm_xmm_m128: { avx }
flags for vpmaxub_xmm_xmm_xmm: { avx }
flags for vpmaxub_ymm_ymm_m256: { avx2 }
flags for vpmaxub_ymm_ymm_ymm: { avx2 }
flags for vpmaxud_xmm_xmm_m128: { avx }
flags for vpmaxud_xmm_xmm_xmm: { avx }
flags for vpmaxud_ymm_ymm_m256: { avx2 }
flags for vpmaxud_ymm_ymm_ymm: { avx2 }
flags for vpmaxuw_xmm_xmm_m128: { avx }
flags for vpmaxuw_xmm_xmm_xmm: { avx }
flags for vpmaxuw_ymm_ymm_m256: { avx2 }
flags for vpmaxuw_ymm_ymm_ymm: { avx2 }
flags for vpminsb_xmm_xmm_m128: { avx }
flags for vpminsb_xmm_xmm_xmm: { avx }
flags for vpminsb_ymm_ymm_m256: { avx2 }
flags for vpminsb_ymm_ymm_ymm: { avx2 }
flags for vpminsd_xmm_xmm_m128: { avx }
flags for vpminsd_xmm_xmm_xmm: { avx }
flags for vpminsd_ymm_ymm_m256: { avx2 }
flags for vpminsd_ymm_ymm_ymm: { avx2 }
flags for vpminsw_xmm_xmm_m128: { avx }
flags for vpminsw_xmm_xmm_xmm: { avx }
flags for vpminub_xmm_xmm_m128: { avx }
flags for vpminub_xmm_xmm_xmm: { avx }
flags for vpminub_ymm_ymm_m256: { avx2 }
flags for vpminub_ymm_ymm_ymm: { avx2 }
flags for vpminud_xmm_xmm_m128: { avx }
flags for vpminud_xmm_xmm_xmm: { avx }
flags for vpminud_ymm_ymm_m256: { avx2 }
flags for vpminud_ymm_ymm_ymm: { avx2 }
flags for vpminuw_xmm_xmm_m128: { avx }
flags for vpminuw_xmm_xmm_xmm: { avx }
flags for vpminuw_ymm_ymm_m256: { avx2 }
flags for vpminuw_ymm_ymm_ymm: { avx2 }
flags for vpmovmskb_r32_xmm: { avx }
flags for vpmovmskb_r32_ymm: { avx2 }
flags for vpmovmskb_r64_xmm: { avx }
flags for vpmovmskb_r64_ymm: { avx2 }
flags for vpmovsxbd_xmm_m32: { avx }
flags for vpmovsxbd_xmm_xmm: { avx }
flags for vpmovsxbd_ymm_m64: { avx2 }
flags for vpmovsxbd_ymm_xmm: { avx2 }
flags for vpmovsxbq_xmm_m16: { avx }
flags for vpmovsxbq_xmm_xmm: { avx }
flags for vpmovsxbq_ymm_m32: { avx2 }
flags for vpmovsxbq_ymm_xmm: { avx2 }
flags for vpmovsxbw_xmm_m64: { avx }
flags for vpmovsxbw_xmm_xmm: { avx }
flags for vpmovsxbw_ymm_m128: { avx2 }
flags for vpmovsxbw_ymm_xmm: { avx2 }
flags for vpmovsxdq_xmm_m64: { avx }
flags for vpmovsxdq_xmm_xmm: { avx }
flags for vpmovsxdq_ymm_m128: { avx2 }
flags for vpmovsxdq_ymm_xmm: { avx2 }
flags for vpmovsxwd_xmm_m64: { avx }
flags for vpmovsxwd_xmm_xmm: { avx }
flags for vpmovsxwd_ymm_m128: { avx2 }
flags for vpmovsxwd_ymm_xmm: { avx2 }
flags for vpmovsxwq_xmm_m32: { avx }
flags for vpmovsxwq_xmm_xmm: { avx }
flags for vpmovsxwq_ymm_m64: { avx2 }
flags for vpmovsxwq_ymm_xmm: { avx2 }
flags for vpmovzxbd_xmm_m32: { avx }
flags for vpmovzxbd_xmm_xmm: { avx }
flags for vpmovzxbd_ymm_m64: { avx2 }
flags for vpmovzxbd_ymm_xmm: { avx2 }
flags for vpmovzxbq_xmm_m16: { avx }
flags for vpmovzxbq_xmm_xmm: { avx }
flags for vpmovzxbq_ymm_m32: { avx2 }
flags for vpmovzxbq_ymm_xmm: { avx2 }
flags for vpmovzxbw_xmm_m64: { avx }
flags for vpmovzxbw_xmm_xmm: { avx }
flags for vpmovzxbw_ymm_m128: { avx2 }
flags for vpmovzxbw_ymm_xmm: { avx2 }
flags for vpmovzxdq_xmm_m64: { avx }
flags for vpmovzxdq_xmm_xmm: { avx }
flags for vpmovzxdq_ymm_m128: { avx2 }
flags for vpmovzxdq_ymm_xmm: { avx2 }
flags for vpmovzxwd_xmm_m64: { avx }
flags for vpmovzxwd_xmm_xmm: { avx }
flags for vpmovzxwd_ymm_m128: { avx2 }
flags for vpmovzxwd_ymm_xmm: { avx2 }
flags for vpmovzxwq_xmm_m32: { avx }
flags for vpmovzxwq_xmm_xmm: { avx }
flags for vpmovzxwq_ymm_m64: { avx2 }
flags for vpmovzxwq_ymm_xmm: { avx2 }
flags for vpmuldq_xmm_xmm_m128: { avx }
flags for vpmuldq_xmm_xmm_xmm: { avx }
flags for vpmuldq_ymm_ymm_m256: { avx2 }
flags for vpmuldq_ymm_ymm_ymm: { avx2 }
flags for vpmulhrsw_xmm_xmm_m128: { avx }
flags for vpmulhrsw_xmm_xmm_xmm: { avx }
flags for vpmulhrsw_ymm_ymm_m256: { avx2 }
flags for vpmulhrsw_ymm_ymm_ymm: { avx2 }
flags for vpmulhuw_xmm_xmm_m128: { avx }
flags for vpmulhuw_xmm_xmm_xmm: { avx }
flags for vpmulhuw_ymm_ymm_m256: { avx2 }
flags for vpmulhuw_ymm_ymm_ymm: { avx2 }
flags for vpmulhw_xmm_xmm_m128: { avx }
flags for vpmulhw_xmm_xmm_xmm: { avx }
flags for vpmulhw_ymm_ymm_m256: { avx2 }
flags for vpmulhw_ymm_ymm_ymm: { avx2 }
flags for vpmulld_xmm_xmm_m128: { avx }
flags for vpmulld_xmm_xmm_xmm: { avx }
flags for vpmulld_ymm_ymm_m256: { avx2 }
flags for vpmulld_ymm_ymm_ymm: { avx2 }
flags for vpmullw_xmm_xmm_m128: { avx }
flags for vpmullw_xmm_xmm_xmm: { avx }
flags for vpmullw_ymm_ymm_m256: { avx2 }
flags for vpmullw_ymm_ymm_ymm: { avx2 }
flags for vpmuludq_xmm_xmm_m128: { avx }
flags for vpmuludq_xmm_xmm_xmm: { avx }
flags for vpmuludq_ymm_ymm_m256: { avx2 }
flags for vpmuludq_ymm_ymm_ymm: { avx2 }
flags for vpor_xmm_xmm_m128: { avx }
flags for vpor_xmm_xmm_xmm: { avx }
flags for vpor_ymm_ymm_m256: { avx2 }
flags for vpor_ymm_ymm_ymm: { avx2 }
flags for vpsadbw_xmm_xmm_m128: { avx }
flags for vpsadbw_xmm_xmm_xmm: { avx }
flags for vpsadbw_ymm_ymm_m256: { avx2 }
flags for vpsadbw_ymm_ymm_ymm: { avx2 }
flags for vpshufb_xmm_xmm_m128: { avx }
flags for vpshufb_xmm_xmm_xmm: { avx }
flags for vpshufb_ymm_ymm_m256: { avx2 }
flags for vpshufb_ymm_ymm_ymm: { avx2 }
flags for vpshufd_xmm_m128_imm8: { avx }
flags for vpshufd_xmm_xmm_imm8: { avx }
flags for vpshufd_ymm_m256_imm8: { avx2 }
flags for vpshufd_ymm_ymm_imm8: { avx2 }
flags for vpshufhw_xmm_m128_imm8: { avx }
flags for vpshufhw_xmm_xmm_imm8: { avx }
flags for vpshufhw_ymm_m256_imm8: { avx2 }
flags for vpshufhw_ymm_ymm_imm8: { avx2 }
flags for vpshuflw_xmm_m128_imm8: { avx }
flags for vpshuflw_xmm_xmm_imm8: { avx }
flags for vpshuflw_ymm_m256_imm8: { avx2 }
flags for vpshuflw_ymm_ymm_imm8: { avx2 }
flags for vpsignb_xmm_xmm_m128: { avx }
flags for vpsignb_xmm_xmm_xmm: { avx }
flags for vpsignd_xmm_xmm_m128: { avx }
flags for vpsignd_xmm_xmm_xmm: { avx }
flags for vpsignw_xmm_xmm_m128: { avx }
flags for vpsignw_xmm_xmm_xmm: { avx }
flags for vpslld_xmm_xmm_imm8: { avx }
flags for vpslld_xmm_xmm_m128: { avx }
flags for vpslld_xmm_xmm_xmm: { avx }
flags for vpslld_ymm_ymm_imm8: { avx2 }
flags for vpslld_ymm_ymm_m128: { avx2 }
flags for vpslld_ymm_ymm_xmm: { avx2 }
flags for vpslldq_xmm_xmm_imm8: { avx }
flags for vpslldq_ymm_ymm_imm8: { avx2 }
flags for vpsllq_xmm_xmm_imm8: { avx }
flags for vpsllq_xmm_xmm_m128: { avx }
flags for vpsllq_xmm_xmm_xmm: { avx }
flags for vpsllq_ymm_ymm_imm8: { avx2 }
flags for vpsllq_ymm_ymm_m128: { avx2 }
flags for vpsllq_ymm_ymm_xmm: { avx2 }
flags for vpsllvd_xmm_xmm_m128: { avx2 }
flags for vpsllvd_xmm_xmm_xmm: { avx2 }
flags for vpsllvd_ymm_ymm_m256: { avx2 }
flags for vpsllvd_ymm_ymm_ymm: { avx2 }
flags for vpsllvq_xmm_xmm_m128: { avx2 }
flags for vpsllvq_xmm_xmm_xmm: { avx2 }
flags for vpsllvq_ymm_ymm_m256: { avx2 }
flags for vpsllvq_ymm_ymm_ymm: { avx2 }
flags for vpsllw_xmm_xmm_imm8: { avx }
flags for vpsllw_xmm_xmm_m128: { avx }
flags for vpsllw_xmm_xmm_xmm: { avx }
flags for vpsllw_ymm_ymm_imm8: { avx2 }
flags for vpsllw_ymm_ymm_m128: { avx2 }
flags for vpsllw_ymm_ymm_xmm: { avx2 }
flags for vpsrad_xmm_xmm_imm8: { avx }
flags for vpsrad_xmm_xmm_m128: { avx }
flags for vpsrad_xmm_xmm_xmm: { avx }
flags for vpsrad_ymm_ymm_imm8: { avx2 }
flags for vpsrad_ymm_ymm_m128: { avx2 }
flags for vpsrad_ymm_ymm_xmm: { avx2 }
flags for vpsravd_xmm_xmm_m128: { avx2 }
flags for vpsravd_xmm_xmm_xmm: { avx2 }
flags for vpsravd_ymm_ymm_m256: { avx2 }
flags for vpsravd_ymm_ymm_ymm: { avx2 }
flags for vpsraw_xmm_xmm_imm8: { avx }
flags for vpsraw_xmm_xmm_m128: { avx }
flags for vpsraw_xmm_xmm_xmm: { avx }
flags for vpsraw_ymm_ymm_imm8: { avx2 }
flags for vpsraw_ymm_ymm_m128: { avx2 }
flags for vpsraw_ymm_ymm_xmm: { avx2 }
flags for vpsrld_xmm_xmm_imm8: { avx }
flags for vpsrld_xmm_xmm_m128: { avx }
flags for vpsrld_xmm_xmm_xmm: { avx }
flags for vpsrld_ymm_ymm_imm8: { avx2 }
flags for vpsrld_ymm_ymm_m128: { avx2 }
flags for vpsrld_ymm_ymm_xmm: { avx2 }
flags for vpsrldq_xmm_xmm_imm8: { avx }
flags for vpsrldq_ymm_ymm_imm8: { avx2 }
flags for vpsrlq_xmm_xmm_imm8: { avx }
flags for vpsrlq_xmm_xmm_m128: { avx }
flags for vpsrlq_xmm_xmm_xmm: { avx }
flags for vpsrlq_ymm_ymm_imm8: { avx2 }
flags for vpsrlq_ymm_ymm_m128: { avx2 }
flags for vpsrlq_ymm_ymm_xmm: { avx2 }
flags for vpsrlvd_xmm_xmm_m128: { avx2 }
flags for vpsrlvd_xmm_xmm_xmm: { avx2 }
flags for vpsrlvd_ymm_ymm_m256: { avx2 }
flags for vpsrlvd_ymm_ymm_ymm: { avx2 }
flags for vpsrlvq_xmm_xmm_m128: { avx2 }
flags for vpsrlvq_xmm_xmm_xmm: { avx2 }
flags for vpsrlvq_ymm_ymm_m256: { avx2 }
flags for vpsrlvq_ymm_ymm_ymm: { avx2 }
flags for vpsrlw_xmm_xmm_imm8: { avx }
flags for vpsrlw_xmm_xmm_m128: { avx }
flags for vpsrlw_xmm_xmm_xmm: { avx }
flags for vpsrlw_ymm_ymm_imm8: { avx2 }
flags for vpsrlw_ymm_ymm_m128: { avx2 }
flags for vpsrlw_ymm_ymm_xmm: { avx2 }
flags for vpsubb_xmm_xmm_m128: { avx }
flags for vpsubb_xmm_xmm_xmm: { avx }
flags for vpsubb_ymm_ymm_m256: { avx2 }
flags for vpsubb_ymm_ymm_ymm: { avx2 }
flags for vpsubd_xmm_xmm_m128: { avx }
flags for vpsubd_xmm_xmm_xmm: { avx }
flags for vpsubd_ymm_ymm_m256: { avx2 }
flags for vpsubd_ymm_ymm_ymm: { avx2 }
flags for vpsubq_xmm_xmm_m128: { avx }
flags for vpsubq_xmm_xmm_xmm: { avx }
flags for vpsubq_ymm_ymm_m256: { avx2 }
flags for vpsubq_ymm_ymm_ymm: { avx2 }
flags for vpsubsb_xmm_xmm_m128: { avx }
flags for vpsubsb_xmm_xmm_xmm: { avx }
flags for vpsubsb_ymm_ymm_m256: { avx2 }
flags for vpsubsb_ymm_ymm_ymm: { avx2 }
flags for vpsubsw_xmm_xmm_m128: { avx }
flags for vpsubsw_xmm_xmm_xmm: { avx }
flags for vpsubsw_ymm_ymm_m256: { avx2 }
flags for vpsubsw_ymm_ymm_ymm: { avx2 }
flags for vpsubusb_xmm_xmm_m128: { avx }
flags for vpsubusb_xmm_xmm_xmm: { avx }
flags for vpsubusb_ymm_ymm_m256: { avx2 }
flags for vpsubusb_ymm_ymm_ymm: { avx2 }
flags for vpsubusw_xmm_xmm_m128: { avx }
flags for vpsubusw_xmm_xmm_xmm: { avx }
flags for vpsubusw_ymm_ymm_m256: { avx2 }
flags for vpsubusw_ymm_ymm_ymm: { avx2 }
flags for vpsubw_xmm_xmm_m128: { avx }
flags for vpsubw_xmm_xmm_xmm: { avx }
flags for vpsubw_ymm_ymm_m256: { avx2 }
flags for vpsubw_ymm_ymm_ymm: { avx2 }
flags for vptest_xmm_m128: { avx }
flags for vptest_xmm_xmm: { avx }
flags for vptest_ymm_m256: { avx }
flags for vptest_ymm_ymm: { avx }
flags for vpunpckhbw_xmm_xmm_m128: { avx }
flags for vpunpckhbw_xmm_xmm_xmm: { avx }
flags for vpunpckhbw_ymm_ymm_m256: { avx2 }
flags for vpunpckhbw_ymm_ymm_ymm: { avx2 }
flags for vpunpckhdq_xmm_xmm_m128: { avx }
flags for vpunpckhdq_xmm_xmm_xmm: { avx }
flags for vpunpckhdq_ymm_ymm_m256: { avx2 }
flags for vpunpckhdq_ymm_ymm_ymm: { avx2 }
flags for vpunpckhqdq_xmm_xmm_m128: { avx }
flags for vpunpckhqdq_xmm_xmm_xmm: { avx }
flags for vpunpckhqdq_ymm_ymm_m256: { avx2 }
flags for vpunpckhqdq_ymm_ymm_ymm: { avx2 }
flags for vpunpckhwd_xmm_xmm_m128: { avx }
flags for vpunpckhwd_xmm_xmm_xmm: { avx }
flags for vpunpckhwd_ymm_ymm_m256: { avx2 }
flags for vpunpckhwd_ymm_ymm_ymm: { avx2 }
flags for vpunpcklbw_xmm_xmm_m128: { avx }
flags for vpunpcklbw_xmm_xmm_xmm: { avx }
flags for vpunpcklbw_ymm_ymm_m256: { avx2 }
flags for vpunpcklbw_ymm_ymm_ymm: { avx2 }
flags for vpunpckldq_xmm_xmm_m128: { avx }
flags for vpunpckldq_xmm_xmm_xmm: { avx }
flags for vpunpckldq_ymm_ymm_m256: { avx2 }
flags for vpunpckldq_ymm_ymm_ymm: { avx2 }
flags for vpunpcklqdq_xmm_xmm_m128: { avx }
flags for vpunpcklqdq_xmm_xmm_xmm: { avx }
flags for vpunpcklqdq_ymm_ymm_m256: { avx2 }
flags for vpunpcklqdq_ymm_ymm_ymm: { avx2 }
flags for vpunpcklwd_xmm_xmm_m128: { avx }
flags for vpunpcklwd_xmm_xmm_xmm: { avx }
flags for vpunpcklwd_ymm_ymm_m256: { avx2 }
flags for vpunpcklwd_ymm_ymm_ymm: { avx2 }
flags for vpxor_xmm_xmm_m128: { avx }
flags for vpxor_xmm_xmm_xmm: { avx }
flags for vpxor_ymm_ymm_m256: { avx2 }
flags for vpxor_ymm_ymm_ymm: { avx2 }
flags for vrcpps_xmm_m128: { avx }
flags for vrcpps_xmm_xmm: { avx }
flags for vrcpps_ymm_m256: { avx }
flags for vrcpps_ymm_ymm: { avx }
flags for vrcpss_xmm_xmm_m32: { avx }
flags for vrcpss_xmm_xmm_xmm: { avx }
flags for vroundpd_xmm_m128_imm8: { avx }
flags for vroundpd_xmm_xmm_imm8: { avx }
flags for vroundpd_ymm_m256_imm8: { avx }
flags for vroundpd_ymm_ymm_imm8: { avx }
flags for vroundps_xmm_m128_imm8: { avx }
flags for vroundps_xmm_xmm_imm8: { avx }
flags for vroundps_ymm_m256_imm8: { avx }
flags for vroundps_ymm_ymm_imm8: { avx }
flags for vroundsd_xmm_xmm_m64_imm8: { avx }
flags for vroundsd_xmm_xmm_xmm_imm8: { avx }
flags for vroundss_xmm_xmm_m32_imm8: { avx }
flags for vroundss_xmm_xmm_xmm_imm8: { avx }
flags for vrsqrtps_xmm_m128: { avx }
flags for vrsqrtps_xmm_xmm: { avx }
flags for vrsqrtps_ymm_m256: { avx }
flags for vrsqrtps_ymm_ymm: { avx }
flags for vrsqrtss_xmm_xmm_m32: { avx }
flags for vrsqrtss_xmm_xmm_xmm: { avx }
flags for vshufpd_xmm_xmm_m128_imm8: { avx }
flags for vshufpd_xmm_xmm_xmm_imm8: { avx }
flags for vshufpd_ymm_ymm_m256_imm8: { avx }
flags for vshufpd_ymm_ymm_ymm_imm8: { avx }
flags for vshufps_xmm_xmm_m128_imm8: { avx }
flags for vshufps_xmm_xmm_xmm_imm8: { avx }
flags for vshufps_ymm_ymm_m256_imm8: { avx }
flags for vshufps_ymm_ymm_ymm_imm8: { avx }
flags for vsqrtpd_xmm_m128: { avx }
flags for vsqrtpd_xmm_xmm: { avx }
flags for vsqrtpd_ymm_m256: { avx }
flags for vsqrtpd_ymm_ymm: { avx }
flags for vsqrtps_xmm_m128: { avx }
flags for vsqrtps_xmm_xmm: { avx }
flags for vsqrtps_ymm_m256: { avx }
flags for vsqrtps_ymm_ymm: { avx }
flags for vsqrtsd_xmm_xmm_m64: { avx }
flags for vsqrtsd_xmm_xmm_xmm: { avx }
flags for vsqrtss_xmm_xmm_m32: { avx }
flags for vsqrtss_xmm_xmm_xmm: { avx }
flags for vsubpd_xmm_xmm_m128: { avx }
flags for vsubpd_xmm_xmm_xmm: { avx }
flags for vsubpd_ymm_ymm_m256: { avx }
flags for vsubpd_ymm_ymm_ymm: { avx }
flags for vsubps_xmm_xmm_m128: { avx }
flags for vsubps_xmm_xmm_xmm: { avx }
flags for vsubps_ymm_ymm_m256: { avx }
flags for vsubps_ymm_ymm_ymm: { avx }
flags for vsubsd_xmm_xmm_m64: { avx }
flags for vsubsd_xmm_xmm_xmm: { avx }
flags for vsubss_xmm_xmm_m32: { avx }
flags for vsubss_xmm_xmm_xmm: { avx }
flags for vtestpd_xmm_m128: { avx }
flags for vtestpd_xmm_xmm: { avx }
flags for vtestpd_ymm_m256: { avx }
flags for vtestpd_ymm_ymm: { avx }
flags for vtestps_xmm_m128: { avx }
flags for vtestps_xmm_xmm: { avx }
flags for vtestps_ymm_m256: { avx }
flags for vtestps_ymm_ymm: { avx }
flags for vucomisd_xmm_m64: { avx }
flags for vucomisd_xmm_xmm: { avx }
flags for vucomiss_xmm_m32: { avx }
flags for vucomiss_xmm_xmm: { avx }
flags for vunpckhpd_xmm_xmm_m128: { avx }
flags for vunpckhpd_xmm_xmm_xmm: { avx }
flags for vunpckhpd_ymm_ymm_m256: { avx }
flags for vunpckhpd_ymm_ymm_ymm: { avx }
flags for vunpckhps_xmm_xmm_m128: { avx }
flags for vunpckhps_xmm_xmm_xmm: { avx }
flags for vunpckhps_ymm_ymm_m256: { avx }
flags for vunpckhps_ymm_ymm_ymm: { avx }
flags for vunpcklpd_xmm_xmm_m128: { avx }
flags for vunpcklpd_xmm_xmm_xmm: { avx }
flags for vunpcklpd_ymm_ymm_m256: { avx }
flags for vunpcklpd_ymm_ymm_ymm: { avx }
flags for vunpcklps_xmm_xmm_m128: { avx }
flags for vunpcklps_xmm_xmm_xmm: { avx }
flags for vunpcklps_ymm_ymm_m256: { avx }
flags for vunpcklps_ymm_ymm_ymm: { avx }
flags for vxorpd_xmm_xmm_m128: { avx }
flags for vxorpd_xmm_xmm_xmm: { avx }
flags for vxorpd_ymm_ymm_m256: { avx }
flags for vxorpd_ymm_ymm_ymm: { avx }
flags for vxorps_xmm_xmm_m128: { avx }
flags for vxorps_xmm_xmm_xmm: { avx }
flags for vxorps_ymm_ymm_m256: { avx }
flags for vxorps_ymm_ymm_ymm: { avx }
flags for vzeroall: { avx }
flags for vzeroupper: { avx }
flags for wait: { fpu }
flags for xabort_imm8: { rtm }
flags for xacquire: { hle }
flags for xbegin_label: { rtm }
flags for xend: { rtm }
flags for xorb_al_imm8: { }
flags for xorw_ax_imm16: { }
flags for xorl_eax_imm32: { }
flags for xorw_m16_imm16: { }
flags for xorw_m16_imm8: { }
flags for xorw_m16_r16: { }
flags for xorl_m32_imm32: { }
flags for xorl_m32_imm8: { }
flags for xorl_m32_r32: { }
flags for xorq_m64_imm32: { }
flags for xorq_m64_imm8: { }
flags for xorq_m64_r64: { }
flags for xorb_m8_imm8: { }
flags for xorb_m8_r8: { }
flags for xorb_m8_rh: { }
flags for xorw_r16_imm16: { }
flags for xorw_r16_imm8: { }
flags for xorw_r16_m16: { }
flags for xorw_r16_r16: { }
flags for xorw_r16_r16_1: { }
flags for xorl_r32_imm32: { }
flags for xorl_r32_imm8: { }
flags for xorl_r32_m32: { }
flags for xorl_r32_r32: { }
flags for xorl_r32_r32_1: { }
flags for xorq_r64_imm32: { }
flags for xorq_r64_imm8: { }
flags for xorq_r64_m64: { }
flags for xorq_r64_r64: { }
flags for xorq_r64_r64_1: { }
flags for xorb_r8_imm8: { }
flags for xorb_r8_m8: { }
flags for xorb_r8_r8: { }
flags for xorb_r8_r8_1: { }
flags for xorb_r8_rh: { }
flags for xorb_r8_rh_1: { }
flags for xorq_rax_imm32: { }
flags for xorb_rh_imm8: { }
flags for xorb_rh_m8: { }
flags for xorb_rh_r8: { }
flags for xorb_rh_r8_1: { }
flags for xorb_rh_rh: { }
flags for xorb_rh_rh_1: { }
flags for xorpd_xmm_m128: { sse2 }
flags for xorpd_xmm_xmm: { sse2 }
flags for xorps_xmm_m128: { sse }
flags for xorps_xmm_xmm: { sse }
flags for xrelease: { hle }
flags for xtest: { rtm }
Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (54)                                                 Lowest Known Correct Cost (56)                                            
                                                                                                                                                      
  .text                                                                       .text                                                                   
  .globl wcslen                                                               .globl wcslen                                                           
  .type wcslen, @function                                                     .type wcslen, @function                                                 
                                                                                                                                                      
#! file-offset 0                                                            #! file-offset 0                                                          
#! rip-offset  0                                                            #! rip-offset  0                                                          
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                    
                                                                                                                                                      
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  nop                        #  1     0     1      OPC=nop                    movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                        #  2     0x1   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  xorl %eax, %eax            #  3     0x2   2      OPC=xorl_r32_r32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl %edi, %edi            #  4     0x4   2      OPC=movl_r32_r32           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl (%r15,%rdi,1), %r13d  #  5     0x6   4      OPC=movl_r32_m32           movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                        #  6     0xa   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                        #  7     0xb   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                        #  8     0xc   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  je .L_142ce0               #  9     0xd   2      OPC=je_label               nop                       #  9     0x12  1      OPC=nop                 
  xorw %r15w, %ax            #  10    0xf   4      OPC=xorw_r16_r16_1         nop                       #  10    0x13  1      OPC=nop                 
  nop                        #  11    0x13  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                        #  12    0x14  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nopl %eax                  #  13    0x15  3      OPC=nopl_r32               nop                       #  13    0x16  1      OPC=nop                 
  nop                        #  14    0x18  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                        #  15    0x19  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                        #  16    0x1a  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                        #  17    0x1b  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                        #  18    0x1c  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                        #  19    0x1d  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                        #  20    0x1e  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                        #  21    0x1f  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
.L_142cc0:                   #        0x20  0      OPC=<label>                nop                       #  22    0x1f  1      OPC=nop                 
  negl %eax                  #  22    0x20  2      OPC=negl_r32             .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl %r15d, %edx           #  23    0x22  3      OPC=movl_r32_r32           addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax   #  24    0x25  4      OPC=movl_r32_m32           movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  nopl %eax                  #  25    0x29  3      OPC=nopl_r32               movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  nop                        #  26    0x2c  1      OPC=nop                    testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0              #  27    0x2d  2      OPC=jne_label              jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  orl %edx, %eax             #  28    0x2f  2      OPC=orl_r32_r32            movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                        #  29    0x31  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                        #  30    0x32  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                        #  31    0x33  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nopl %eax                  #  32    0x34  3      OPC=nopl_r32               nop                       #  32    0x35  1      OPC=nop                 
  nopl %eax                  #  33    0x37  3      OPC=nopl_r32               nop                       #  33    0x36  1      OPC=nop                 
  nop                        #  34    0x3a  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                        #  35    0x3b  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                        #  36    0x3c  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                        #  37    0x3d  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                        #  38    0x3e  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                        #  39    0x3f  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                        #  40    0x40  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
.L_142ce0:                   #        0x41  0      OPC=<label>                nop                       #  41    0x3e  1      OPC=nop                 
  popq %r11                  #  41    0x41  2      OPC=popq_r64_1             nop                       #  42    0x3f  1      OPC=nop                 
  andl $0xe0, %r11d          #  42    0x43  4      OPC=andl_r32_imm8        .L_142ce0:                  #        0x40  0      OPC=<label>             
  addq %r15, %r11            #  43    0x47  3      OPC=addq_r64_r64           popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  jmpq %r11                  #  44    0x4a  3      OPC=jmpq_r64               andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
                                                                              addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
.size wcslen, .-wcslen                                                        jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                      
                                                                            .size wcslen, .-wcslen                                                    
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (52)                                                 Lowest Known Correct Cost (52)                                              
                                                                                                                                                        
  .text                                                                       .text                                                                     
  .globl wcslen                                                               .globl wcslen                                                             
  .type wcslen, @function                                                     .type wcslen, @function                                                   
                                                                                                                                                        
#! file-offset 0                                                            #! file-offset 0                                                            
#! rip-offset  0                                                            #! rip-offset  0                                                            
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                      
                                                                                                                                                        
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                    nop                        #  1     0     1      OPC=nop                  
  nop                        #  2     0x1   1      OPC=nop                    nop                        #  2     0x1   1      OPC=nop                  
  xorl %eax, %eax            #  3     0x2   2      OPC=xorl_r32_r32           xorl %eax, %eax            #  3     0x2   2      OPC=xorl_r32_r32         
  movl %edi, %edi            #  4     0x4   2      OPC=movl_r32_r32           movl %edi, %edi            #  4     0x4   2      OPC=movl_r32_r32         
  movl (%r15,%rdi,1), %r13d  #  5     0x6   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %r13d  #  5     0x6   4      OPC=movl_r32_m32         
  nop                        #  6     0xa   1      OPC=nop                    nop                        #  6     0xa   1      OPC=nop                  
  nop                        #  7     0xb   1      OPC=nop                    nop                        #  7     0xb   1      OPC=nop                  
  nop                        #  8     0xc   1      OPC=nop                    nop                        #  8     0xc   1      OPC=nop                  
  nop                        #  9     0xd   1      OPC=nop                    nop                        #  9     0xd   1      OPC=nop                  
  je .L_142ce0               #  10    0xe   2      OPC=je_label               je .L_142ce0               #  10    0xe   2      OPC=je_label             
  xorw %r15w, %ax            #  11    0x10  4      OPC=xorw_r16_r16_1         xorw %r15w, %ax            #  11    0x10  4      OPC=xorw_r16_r16_1       
  nop                        #  12    0x14  1      OPC=nop                    nop                        #  12    0x14  1      OPC=nop                  
  nop                        #  13    0x15  1      OPC=nop                    nop                        #  13    0x15  1      OPC=nop                  
  nop                        #  14    0x16  1      OPC=nop                    nop                        #  14    0x16  1      OPC=nop                  
  nopl %eax                  #  15    0x17  3      OPC=nopl_r32               nopl %eax                  #  15    0x17  3      OPC=nopl_r32             
  nop                        #  16    0x1a  1      OPC=nop                    nop                        #  16    0x1a  1      OPC=nop                  
  nop                        #  17    0x1b  1      OPC=nop                    nop                        #  17    0x1b  1      OPC=nop                  
  nop                        #  18    0x1c  1      OPC=nop                    nop                        #  18    0x1c  1      OPC=nop                  
  nop                        #  19    0x1d  1      OPC=nop                    nop                        #  19    0x1d  1      OPC=nop                  
  nop                        #  20    0x1e  1      OPC=nop                    nop                        #  20    0x1e  1      OPC=nop                  
  nop                        #  21    0x1f  1      OPC=nop                    nop                        #  21    0x1f  1      OPC=nop                  
.L_142cc0:                   #        0x20  0      OPC=<label>              .L_142cc0:                   #        0x20  0      OPC=<label>              
  nopl %eax                  #  22    0x20  3      OPC=nopl_r32               nopl %eax                  #  22    0x20  3      OPC=nopl_r32             
  nop                        #  23    0x23  1      OPC=nop                    nop                        #  23    0x23  1      OPC=nop                  
  movl %r15d, %edx           #  24    0x24  3      OPC=movl_r32_r32           movl %r15d, %edx           #  24    0x24  3      OPC=movl_r32_r32         
  movl (%r15,%rdx,1), %eax   #  25    0x27  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax   #  25    0x27  4      OPC=movl_r32_m32         
  notl %eax                  #  26    0x2b  2      OPC=notl_r32               notl %eax                  #  26    0x2b  2      OPC=notl_r32             
  jne .L_142cc0              #  27    0x2d  2      OPC=jne_label              jne .L_142cc0              #  27    0x2d  2      OPC=jne_label            
  orl %edx, %eax             #  28    0x2f  2      OPC=orl_r32_r32            orl %edx, %eax             #  28    0x2f  2      OPC=orl_r32_r32          
  nop                        #  29    0x31  1      OPC=nop                    nop                        #  29    0x31  1      OPC=nop                  
  nop                        #  30    0x32  1      OPC=nop                    nop                        #  30    0x32  1      OPC=nop                  
  nopl %eax                  #  31    0x33  3      OPC=nopl_r32               nopl %eax                  #  31    0x33  3      OPC=nopl_r32             
  nop                        #  32    0x36  1      OPC=nop                    nop                        #  32    0x36  1      OPC=nop                  
  nop                        #  33    0x37  1      OPC=nop                    nop                        #  33    0x37  1      OPC=nop                  
  nop                        #  34    0x38  1      OPC=nop                    nop                        #  34    0x38  1      OPC=nop                  
  nopl %eax                  #  35    0x39  3      OPC=nopl_r32               nopl %eax                  #  35    0x39  3      OPC=nopl_r32             
  nop                        #  36    0x3c  1      OPC=nop                    nop                        #  36    0x3c  1      OPC=nop                  
  nop                        #  37    0x3d  1      OPC=nop                    nop                        #  37    0x3d  1      OPC=nop                  
  nop                        #  38    0x3e  1      OPC=nop                    nop                        #  38    0x3e  1      OPC=nop                  
  nop                        #  39    0x3f  1      OPC=nop                    nop                        #  39    0x3f  1      OPC=nop                  
.L_142ce0:                   #        0x40  0      OPC=<label>              .L_142ce0:                   #        0x40  0      OPC=<label>              
  popq %r11                  #  40    0x40  2      OPC=popq_r64_1             popq %r11                  #  40    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d          #  41    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d          #  41    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11            #  42    0x46  3      OPC=addq_r64_r64           addq %r15, %r11            #  42    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                  #  43    0x49  3      OPC=jmpq_r64               jmpq %r11                  #  43    0x49  3      OPC=jmpq_r64             
                                                                                                                                                        
.size wcslen, .-wcslen                                                      .size wcslen, .-wcslen                                                      
                                                                                                                                                        

********************************************************************************

Progress Update: 

Lowest Cost Discovered (51)                                                 Lowest Known Correct Cost (52)                                              
                                                                                                                                                        
  .text                                                                       .text                                                                     
  .globl wcslen                                                               .globl wcslen                                                             
  .type wcslen, @function                                                     .type wcslen, @function                                                   
                                                                                                                                                        
#! file-offset 0                                                            #! file-offset 0                                                            
#! rip-offset  0                                                            #! rip-offset  0                                                            
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                      
                                                                                                                                                        
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                    nop                        #  1     0     1      OPC=nop                  
  xorl %eax, %eax            #  2     0x1   2      OPC=xorl_r32_r32           nop                        #  2     0x1   1      OPC=nop                  
  movl %edi, %edi            #  3     0x3   2      OPC=movl_r32_r32           xorl %eax, %eax            #  3     0x2   2      OPC=xorl_r32_r32         
  movl (%r15,%rdi,1), %r13d  #  4     0x5   4      OPC=movl_r32_m32           movl %edi, %edi            #  4     0x4   2      OPC=movl_r32_r32         
  nop                        #  5     0x9   1      OPC=nop                    movl (%r15,%rdi,1), %r13d  #  5     0x6   4      OPC=movl_r32_m32         
  nop                        #  6     0xa   1      OPC=nop                    nop                        #  6     0xa   1      OPC=nop                  
  nop                        #  7     0xb   1      OPC=nop                    nop                        #  7     0xb   1      OPC=nop                  
  je .L_142ce0               #  8     0xc   2      OPC=je_label               nop                        #  8     0xc   1      OPC=nop                  
  nop                        #  9     0xe   1      OPC=nop                    nop                        #  9     0xd   1      OPC=nop                  
  nop                        #  10    0xf   1      OPC=nop                    je .L_142ce0               #  10    0xe   2      OPC=je_label             
  nop                        #  11    0x10  1      OPC=nop                    xorw %r15w, %ax            #  11    0x10  4      OPC=xorw_r16_r16_1       
  nop                        #  12    0x11  1      OPC=nop                    nop                        #  12    0x14  1      OPC=nop                  
  nop                        #  13    0x12  1      OPC=nop                    nop                        #  13    0x15  1      OPC=nop                  
  nop                        #  14    0x13  1      OPC=nop                    nop                        #  14    0x16  1      OPC=nop                  
  movq %rdi, %r13            #  15    0x14  3      OPC=movq_r64_r64           nopl %eax                  #  15    0x17  3      OPC=nopl_r32             
  xorw %r15w, %ax            #  16    0x17  4      OPC=xorw_r16_r16_1         nop                        #  16    0x1a  1      OPC=nop                  
  nop                        #  17    0x1b  1      OPC=nop                    nop                        #  17    0x1b  1      OPC=nop                  
  orb $0x4, %al              #  18    0x1c  2      OPC=orb_al_imm8            nop                        #  18    0x1c  1      OPC=nop                  
  nop                        #  19    0x1e  1      OPC=nop                    nop                        #  19    0x1d  1      OPC=nop                  
  nop                        #  20    0x1f  1      OPC=nop                    nop                        #  20    0x1e  1      OPC=nop                  
.L_142cc0:                   #        0x20  0      OPC=<label>                nop                        #  21    0x1f  1      OPC=nop                  
  movw %r15w, %r13w          #  21    0x20  4      OPC=movw_r16_r16_1       .L_142cc0:                   #        0x20  0      OPC=<label>              
  movl %r15d, %edx           #  22    0x24  3      OPC=movl_r32_r32           nopl %eax                  #  22    0x20  3      OPC=nopl_r32             
  xorl %edi, %r13d           #  23    0x27  3      OPC=xorl_r32_r32_1         nop                        #  23    0x23  1      OPC=nop                  
  jne .L_142cc0              #  24    0x2a  2      OPC=jne_label              movl %r15d, %edx           #  24    0x24  3      OPC=movl_r32_r32         
  nop                        #  25    0x2c  1      OPC=nop                    movl (%r15,%rdx,1), %eax   #  25    0x27  4      OPC=movl_r32_m32         
  nop                        #  26    0x2d  1      OPC=nop                    notl %eax                  #  26    0x2b  2      OPC=notl_r32             
  nop                        #  27    0x2e  1      OPC=nop                    jne .L_142cc0              #  27    0x2d  2      OPC=jne_label            
  nop                        #  28    0x2f  1      OPC=nop                    orl %edx, %eax             #  28    0x2f  2      OPC=orl_r32_r32          
  nop                        #  29    0x30  1      OPC=nop                    nop                        #  29    0x31  1      OPC=nop                  
  nop                        #  30    0x31  1      OPC=nop                    nop                        #  30    0x32  1      OPC=nop                  
  nopl %eax                  #  31    0x32  3      OPC=nopl_r32               nopl %eax                  #  31    0x33  3      OPC=nopl_r32             
  nop                        #  32    0x35  1      OPC=nop                    nop                        #  32    0x36  1      OPC=nop                  
  nop                        #  33    0x36  1      OPC=nop                    nop                        #  33    0x37  1      OPC=nop                  
  nop                        #  34    0x37  1      OPC=nop                    nop                        #  34    0x38  1      OPC=nop                  
  orl %edx, %eax             #  35    0x38  2      OPC=orl_r32_r32            nopl %eax                  #  35    0x39  3      OPC=nopl_r32             
  nop                        #  36    0x3a  1      OPC=nop                    nop                        #  36    0x3c  1      OPC=nop                  
  nop                        #  37    0x3b  1      OPC=nop                    nop                        #  37    0x3d  1      OPC=nop                  
  nop                        #  38    0x3c  1      OPC=nop                    nop                        #  38    0x3e  1      OPC=nop                  
  nop                        #  39    0x3d  1      OPC=nop                    nop                        #  39    0x3f  1      OPC=nop                  
.L_142ce0:                   #        0x3e  0      OPC=<label>              .L_142ce0:                   #        0x40  0      OPC=<label>              
  popq %r11                  #  40    0x3e  2      OPC=popq_r64_1             popq %r11                  #  40    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d          #  41    0x40  4      OPC=andl_r32_imm8          andl $0xe0, %r11d          #  41    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11            #  42    0x44  3      OPC=addq_r64_r64           addq %r15, %r11            #  42    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                  #  43    0x47  3      OPC=jmpq_r64               jmpq %r11                  #  43    0x49  3      OPC=jmpq_r64             
                                                                                                                                                        
.size wcslen, .-wcslen                                                      .size wcslen, .-wcslen                                                      
                                                                                                                                                        

********************************************************************************

Progress Update: 

Lowest Cost Discovered (48)                                                 Lowest Known Correct Cost (52)                                              
                                                                                                                                                        
  .text                                                                       .text                                                                     
  .globl wcslen                                                               .globl wcslen                                                             
  .type wcslen, @function                                                     .type wcslen, @function                                                   
                                                                                                                                                        
#! file-offset 0                                                            #! file-offset 0                                                            
#! rip-offset  0                                                            #! rip-offset  0                                                            
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                      
                                                                                                                                                        
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                    nop                        #  1     0     1      OPC=nop                  
  xorl %eax, %eax            #  2     0x1   2      OPC=xorl_r32_r32           nop                        #  2     0x1   1      OPC=nop                  
  movl %r15d, %edx           #  3     0x3   3      OPC=movl_r32_r32           xorl %eax, %eax            #  3     0x2   2      OPC=xorl_r32_r32         
  movl (%r15,%rdx,1), %r13d  #  4     0x6   4      OPC=movl_r32_m32           movl %edi, %edi            #  4     0x4   2      OPC=movl_r32_r32         
  nop                        #  5     0xa   1      OPC=nop                    movl (%r15,%rdi,1), %r13d  #  5     0x6   4      OPC=movl_r32_m32         
  nop                        #  6     0xb   1      OPC=nop                    nop                        #  6     0xa   1      OPC=nop                  
  subb %al, %ah              #  7     0xc   2      OPC=subb_rh_r8             nop                        #  7     0xb   1      OPC=nop                  
  nop                        #  8     0xe   1      OPC=nop                    nop                        #  8     0xc   1      OPC=nop                  
  je .L_142ce0               #  9     0xf   2      OPC=je_label               nop                        #  9     0xd   1      OPC=nop                  
  nop                        #  10    0x11  1      OPC=nop                    je .L_142ce0               #  10    0xe   2      OPC=je_label             
  nop                        #  11    0x12  1      OPC=nop                    xorw %r15w, %ax            #  11    0x10  4      OPC=xorw_r16_r16_1       
  nop                        #  12    0x13  1      OPC=nop                    nop                        #  12    0x14  1      OPC=nop                  
  nop                        #  13    0x14  1      OPC=nop                    nop                        #  13    0x15  1      OPC=nop                  
  shrl $0x1, %eax            #  14    0x15  2      OPC=shrl_r32_one           nop                        #  14    0x16  1      OPC=nop                  
  nop                        #  15    0x17  1      OPC=nop                    nopl %eax                  #  15    0x17  3      OPC=nopl_r32             
  shrw $0x0, %ax             #  16    0x18  4      OPC=shrw_r16_imm8          nop                        #  16    0x1a  1      OPC=nop                  
  nop                        #  17    0x1c  1      OPC=nop                    nop                        #  17    0x1b  1      OPC=nop                  
.L_142cc0:                   #        0x1d  0      OPC=<label>                nop                        #  18    0x1c  1      OPC=nop                  
  xorl %edi, %r13d           #  18    0x1d  3      OPC=xorl_r32_r32_1         nop                        #  19    0x1d  1      OPC=nop                  
  sarl $0xff, %edx           #  19    0x20  3      OPC=sarl_r32_imm8          nop                        #  20    0x1e  1      OPC=nop                  
  jne .L_142cc0              #  20    0x23  2      OPC=jne_label              nop                        #  21    0x1f  1      OPC=nop                  
  nop                        #  21    0x25  1      OPC=nop                  .L_142cc0:                   #        0x20  0      OPC=<label>              
  nop                        #  22    0x26  1      OPC=nop                    nopl %eax                  #  22    0x20  3      OPC=nopl_r32             
  nop                        #  23    0x27  1      OPC=nop                    nop                        #  23    0x23  1      OPC=nop                  
  nop                        #  24    0x28  1      OPC=nop                    movl %r15d, %edx           #  24    0x24  3      OPC=movl_r32_r32         
  nop                        #  25    0x29  1      OPC=nop                    movl (%r15,%rdx,1), %eax   #  25    0x27  4      OPC=movl_r32_m32         
  nopl %eax                  #  26    0x2a  3      OPC=nopl_r32               notl %eax                  #  26    0x2b  2      OPC=notl_r32             
  nop                        #  27    0x2d  1      OPC=nop                    jne .L_142cc0              #  27    0x2d  2      OPC=jne_label            
  nop                        #  28    0x2e  1      OPC=nop                    orl %edx, %eax             #  28    0x2f  2      OPC=orl_r32_r32          
  nopl %eax                  #  29    0x2f  3      OPC=nopl_r32               nop                        #  29    0x31  1      OPC=nop                  
  nop                        #  30    0x32  1      OPC=nop                    nop                        #  30    0x32  1      OPC=nop                  
  orl %edx, %eax             #  31    0x33  2      OPC=orl_r32_r32            nopl %eax                  #  31    0x33  3      OPC=nopl_r32             
  nop                        #  32    0x35  1      OPC=nop                    nop                        #  32    0x36  1      OPC=nop                  
  nop                        #  33    0x36  1      OPC=nop                    nop                        #  33    0x37  1      OPC=nop                  
  nop                        #  34    0x37  1      OPC=nop                    nop                        #  34    0x38  1      OPC=nop                  
  nop                        #  35    0x38  1      OPC=nop                    nopl %eax                  #  35    0x39  3      OPC=nopl_r32             
  nop                        #  36    0x39  1      OPC=nop                    nop                        #  36    0x3c  1      OPC=nop                  
  nop                        #  37    0x3a  1      OPC=nop                    nop                        #  37    0x3d  1      OPC=nop                  
.L_142ce0:                   #        0x3b  0      OPC=<label>                nop                        #  38    0x3e  1      OPC=nop                  
  popq %r11                  #  38    0x3b  2      OPC=popq_r64_1             nop                        #  39    0x3f  1      OPC=nop                  
  andl $0xe0, %r11d          #  39    0x3d  4      OPC=andl_r32_imm8        .L_142ce0:                   #        0x40  0      OPC=<label>              
  addq %r15, %r11            #  40    0x41  3      OPC=addq_r64_r64           popq %r11                  #  40    0x40  2      OPC=popq_r64_1           
  jmpq %r11                  #  41    0x44  3      OPC=jmpq_r64               andl $0xe0, %r11d          #  41    0x42  4      OPC=andl_r32_imm8        
                                                                              addq %r15, %r11            #  42    0x46  3      OPC=addq_r64_r64         
.size wcslen, .-wcslen                                                        jmpq %r11                  #  43    0x49  3      OPC=jmpq_r64             
                                                                                                                                                        
                                                                            .size wcslen, .-wcslen                                                      
                                                                                                                                                        

********************************************************************************

Progress Update: 

Lowest Cost Discovered (47)                                                Lowest Known Correct Cost (52)                                              
                                                                                                                                                       
  .text                                                                      .text                                                                     
  .globl wcslen                                                              .globl wcslen                                                             
  .type wcslen, @function                                                    .type wcslen, @function                                                   
                                                                                                                                                       
#! file-offset 0                                                           #! file-offset 0                                                            
#! rip-offset  0                                                           #! rip-offset  0                                                            
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                      
                                                                                                                                                       
# Text                       #  Line  RIP   Bytes  Opcode                  # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>             .wcslen:                     #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                   nop                        #  1     0     1      OPC=nop                  
  xorl %eax, %eax            #  2     0x1   2      OPC=xorl_r32_r32          nop                        #  2     0x1   1      OPC=nop                  
  movl %r15d, %edx           #  3     0x3   3      OPC=movl_r32_r32          xorl %eax, %eax            #  3     0x2   2      OPC=xorl_r32_r32         
  movl (%r15,%rdx,1), %r13d  #  4     0x6   4      OPC=movl_r32_m32          movl %edi, %edi            #  4     0x4   2      OPC=movl_r32_r32         
  nop                        #  5     0xa   1      OPC=nop                   movl (%r15,%rdi,1), %r13d  #  5     0x6   4      OPC=movl_r32_m32         
  nop                        #  6     0xb   1      OPC=nop                   nop                        #  6     0xa   1      OPC=nop                  
  nop                        #  7     0xc   1      OPC=nop                   nop                        #  7     0xb   1      OPC=nop                  
  nop                        #  8     0xd   1      OPC=nop                   nop                        #  8     0xc   1      OPC=nop                  
  je .L_142ce0               #  9     0xe   2      OPC=je_label              nop                        #  9     0xd   1      OPC=nop                  
  nop                        #  10    0x10  1      OPC=nop                   je .L_142ce0               #  10    0xe   2      OPC=je_label             
  nop                        #  11    0x11  1      OPC=nop                   xorw %r15w, %ax            #  11    0x10  4      OPC=xorw_r16_r16_1       
  nop                        #  12    0x12  1      OPC=nop                   nop                        #  12    0x14  1      OPC=nop                  
  nop                        #  13    0x13  1      OPC=nop                   nop                        #  13    0x15  1      OPC=nop                  
  shrl $0x1, %eax            #  14    0x14  2      OPC=shrl_r32_one          nop                        #  14    0x16  1      OPC=nop                  
  nop                        #  15    0x16  1      OPC=nop                   nopl %eax                  #  15    0x17  3      OPC=nopl_r32             
  shrw $0x0, %ax             #  16    0x17  4      OPC=shrw_r16_imm8         nop                        #  16    0x1a  1      OPC=nop                  
  nop                        #  17    0x1b  1      OPC=nop                   nop                        #  17    0x1b  1      OPC=nop                  
  nop                        #  18    0x1c  1      OPC=nop                   nop                        #  18    0x1c  1      OPC=nop                  
.L_142cc0:                   #        0x1d  0      OPC=<label>               nop                        #  19    0x1d  1      OPC=nop                  
  nop                        #  19    0x1d  1      OPC=nop                   nop                        #  20    0x1e  1      OPC=nop                  
  sarl $0xff, %edx           #  20    0x1e  3      OPC=sarl_r32_imm8         nop                        #  21    0x1f  1      OPC=nop                  
  jne .L_142cc0              #  21    0x21  2      OPC=jne_label           .L_142cc0:                   #        0x20  0      OPC=<label>              
  nop                        #  22    0x23  1      OPC=nop                   nopl %eax                  #  22    0x20  3      OPC=nopl_r32             
  notb %dil                  #  23    0x24  3      OPC=notb_r8               nop                        #  23    0x23  1      OPC=nop                  
  nop                        #  24    0x27  1      OPC=nop                   movl %r15d, %edx           #  24    0x24  3      OPC=movl_r32_r32         
  nop                        #  25    0x28  1      OPC=nop                   movl (%r15,%rdx,1), %eax   #  25    0x27  4      OPC=movl_r32_m32         
  orw %di, %ax               #  26    0x29  3      OPC=orw_r16_r16           notl %eax                  #  26    0x2b  2      OPC=notl_r32             
  nop                        #  27    0x2c  1      OPC=nop                   jne .L_142cc0              #  27    0x2d  2      OPC=jne_label            
  nop                        #  28    0x2d  1      OPC=nop                   orl %edx, %eax             #  28    0x2f  2      OPC=orl_r32_r32          
  nopl %eax                  #  29    0x2e  3      OPC=nopl_r32              nop                        #  29    0x31  1      OPC=nop                  
  nopl %eax                  #  30    0x31  3      OPC=nopl_r32              nop                        #  30    0x32  1      OPC=nop                  
  orl %edx, %eax             #  31    0x34  2      OPC=orl_r32_r32           nopl %eax                  #  31    0x33  3      OPC=nopl_r32             
  nop                        #  32    0x36  1      OPC=nop                   nop                        #  32    0x36  1      OPC=nop                  
  nop                        #  33    0x37  1      OPC=nop                   nop                        #  33    0x37  1      OPC=nop                  
  nop                        #  34    0x38  1      OPC=nop                   nop                        #  34    0x38  1      OPC=nop                  
  nop                        #  35    0x39  1      OPC=nop                   nopl %eax                  #  35    0x39  3      OPC=nopl_r32             
  nop                        #  36    0x3a  1      OPC=nop                   nop                        #  36    0x3c  1      OPC=nop                  
  nop                        #  37    0x3b  1      OPC=nop                   nop                        #  37    0x3d  1      OPC=nop                  
  nop                        #  38    0x3c  1      OPC=nop                   nop                        #  38    0x3e  1      OPC=nop                  
.L_142ce0:                   #        0x3d  0      OPC=<label>               nop                        #  39    0x3f  1      OPC=nop                  
  popq %r11                  #  39    0x3d  2      OPC=popq_r64_1          .L_142ce0:                   #        0x40  0      OPC=<label>              
  andl $0xe0, %r11d          #  40    0x3f  4      OPC=andl_r32_imm8         popq %r11                  #  40    0x40  2      OPC=popq_r64_1           
  addq %r15, %r11            #  41    0x43  3      OPC=addq_r64_r64          andl $0xe0, %r11d          #  41    0x42  4      OPC=andl_r32_imm8        
  jmpq %r11                  #  42    0x46  3      OPC=jmpq_r64              addq %r15, %r11            #  42    0x46  3      OPC=addq_r64_r64         
                                                                             jmpq %r11                  #  43    0x49  3      OPC=jmpq_r64             
.size wcslen, .-wcslen                                                                                                                                 
                                                                           .size wcslen, .-wcslen                                                      
                                                                                                                                                       

********************************************************************************

Progress Update: 

Lowest Cost Discovered (46)                                                Lowest Known Correct Cost (52)                                              
                                                                                                                                                       
  .text                                                                      .text                                                                     
  .globl wcslen                                                              .globl wcslen                                                             
  .type wcslen, @function                                                    .type wcslen, @function                                                   
                                                                                                                                                       
#! file-offset 0                                                           #! file-offset 0                                                            
#! rip-offset  0                                                           #! rip-offset  0                                                            
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                      
                                                                                                                                                       
# Text                       #  Line  RIP   Bytes  Opcode                  # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>             .wcslen:                     #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                   nop                        #  1     0     1      OPC=nop                  
  xorl %eax, %eax            #  2     0x1   2      OPC=xorl_r32_r32          nop                        #  2     0x1   1      OPC=nop                  
  movl %r15d, %edx           #  3     0x3   3      OPC=movl_r32_r32          xorl %eax, %eax            #  3     0x2   2      OPC=xorl_r32_r32         
  movl (%r15,%rdx,1), %r13d  #  4     0x6   4      OPC=movl_r32_m32          movl %edi, %edi            #  4     0x4   2      OPC=movl_r32_r32         
  nop                        #  5     0xa   1      OPC=nop                   movl (%r15,%rdi,1), %r13d  #  5     0x6   4      OPC=movl_r32_m32         
  nop                        #  6     0xb   1      OPC=nop                   nop                        #  6     0xa   1      OPC=nop                  
  nop                        #  7     0xc   1      OPC=nop                   nop                        #  7     0xb   1      OPC=nop                  
  nop                        #  8     0xd   1      OPC=nop                   nop                        #  8     0xc   1      OPC=nop                  
  nop                        #  9     0xe   1      OPC=nop                   nop                        #  9     0xd   1      OPC=nop                  
  je .L_142ce0               #  10    0xf   2      OPC=je_label              je .L_142ce0               #  10    0xe   2      OPC=je_label             
  nop                        #  11    0x11  1      OPC=nop                   xorw %r15w, %ax            #  11    0x10  4      OPC=xorw_r16_r16_1       
  nop                        #  12    0x12  1      OPC=nop                   nop                        #  12    0x14  1      OPC=nop                  
  shrl $0x1, %eax            #  13    0x13  2      OPC=shrl_r32_one          nop                        #  13    0x15  1      OPC=nop                  
  nop                        #  14    0x15  1      OPC=nop                   nop                        #  14    0x16  1      OPC=nop                  
  nop                        #  15    0x16  1      OPC=nop                   nopl %eax                  #  15    0x17  3      OPC=nopl_r32             
  movl %edi, %edi            #  16    0x17  2      OPC=movl_r32_r32          nop                        #  16    0x1a  1      OPC=nop                  
  nop                        #  17    0x19  1      OPC=nop                   nop                        #  17    0x1b  1      OPC=nop                  
  andw $0x6, %di             #  18    0x1a  4      OPC=andw_r16_imm8         nop                        #  18    0x1c  1      OPC=nop                  
  nop                        #  19    0x1e  1      OPC=nop                   nop                        #  19    0x1d  1      OPC=nop                  
.L_142cc0:                   #        0x1f  0      OPC=<label>               nop                        #  20    0x1e  1      OPC=nop                  
  nop                        #  20    0x1f  1      OPC=nop                   nop                        #  21    0x1f  1      OPC=nop                  
  sarl $0xff, %edx           #  21    0x20  3      OPC=sarl_r32_imm8       .L_142cc0:                   #        0x20  0      OPC=<label>              
  jne .L_142cc0              #  22    0x23  2      OPC=jne_label             nopl %eax                  #  22    0x20  3      OPC=nopl_r32             
  nop                        #  23    0x25  1      OPC=nop                   nop                        #  23    0x23  1      OPC=nop                  
  notw %di                   #  24    0x26  3      OPC=notw_r16              movl %r15d, %edx           #  24    0x24  3      OPC=movl_r32_r32         
  nop                        #  25    0x29  1      OPC=nop                   movl (%r15,%rdx,1), %eax   #  25    0x27  4      OPC=movl_r32_m32         
  nop                        #  26    0x2a  1      OPC=nop                   notl %eax                  #  26    0x2b  2      OPC=notl_r32             
  nop                        #  27    0x2b  1      OPC=nop                   jne .L_142cc0              #  27    0x2d  2      OPC=jne_label            
  orw %di, %ax               #  28    0x2c  3      OPC=orw_r16_r16           orl %edx, %eax             #  28    0x2f  2      OPC=orl_r32_r32          
  nop                        #  29    0x2f  1      OPC=nop                   nop                        #  29    0x31  1      OPC=nop                  
  nop                        #  30    0x30  1      OPC=nop                   nop                        #  30    0x32  1      OPC=nop                  
  nopl %eax                  #  31    0x31  3      OPC=nopl_r32              nopl %eax                  #  31    0x33  3      OPC=nopl_r32             
  nopl %eax                  #  32    0x34  3      OPC=nopl_r32              nop                        #  32    0x36  1      OPC=nop                  
  orl %edx, %eax             #  33    0x37  2      OPC=orl_r32_r32           nop                        #  33    0x37  1      OPC=nop                  
  nop                        #  34    0x39  1      OPC=nop                   nop                        #  34    0x38  1      OPC=nop                  
  nop                        #  35    0x3a  1      OPC=nop                   nopl %eax                  #  35    0x39  3      OPC=nopl_r32             
  nop                        #  36    0x3b  1      OPC=nop                   nop                        #  36    0x3c  1      OPC=nop                  
  nop                        #  37    0x3c  1      OPC=nop                   nop                        #  37    0x3d  1      OPC=nop                  
  nop                        #  38    0x3d  1      OPC=nop                   nop                        #  38    0x3e  1      OPC=nop                  
  nop                        #  39    0x3e  1      OPC=nop                   nop                        #  39    0x3f  1      OPC=nop                  
.L_142ce0:                   #        0x3f  0      OPC=<label>             .L_142ce0:                   #        0x40  0      OPC=<label>              
  popq %r11                  #  40    0x3f  2      OPC=popq_r64_1            popq %r11                  #  40    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d          #  41    0x41  4      OPC=andl_r32_imm8         andl $0xe0, %r11d          #  41    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11            #  42    0x45  3      OPC=addq_r64_r64          addq %r15, %r11            #  42    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                  #  43    0x48  3      OPC=jmpq_r64              jmpq %r11                  #  43    0x49  3      OPC=jmpq_r64             
                                                                                                                                                       
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                      
                                                                                                                                                       

********************************************************************************

Progress Update: 

Lowest Cost Discovered (45)                                                Lowest Known Correct Cost (52)                                              
                                                                                                                                                       
  .text                                                                      .text                                                                     
  .globl wcslen                                                              .globl wcslen                                                             
  .type wcslen, @function                                                    .type wcslen, @function                                                   
                                                                                                                                                       
#! file-offset 0                                                           #! file-offset 0                                                            
#! rip-offset  0                                                           #! rip-offset  0                                                            
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                      
                                                                                                                                                       
# Text                       #  Line  RIP   Bytes  Opcode                  # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>             .wcslen:                     #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                   nop                        #  1     0     1      OPC=nop                  
  nop                        #  2     0x1   1      OPC=nop                   nop                        #  2     0x1   1      OPC=nop                  
  xorl %eax, %eax            #  3     0x2   2      OPC=xorl_r32_r32          xorl %eax, %eax            #  3     0x2   2      OPC=xorl_r32_r32         
  movl %r15d, %edx           #  4     0x4   3      OPC=movl_r32_r32          movl %edi, %edi            #  4     0x4   2      OPC=movl_r32_r32         
  movl (%r15,%rdx,1), %r13d  #  5     0x7   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %r13d  #  5     0x6   4      OPC=movl_r32_m32         
  nop                        #  6     0xb   1      OPC=nop                   nop                        #  6     0xa   1      OPC=nop                  
  nop                        #  7     0xc   1      OPC=nop                   nop                        #  7     0xb   1      OPC=nop                  
  nop                        #  8     0xd   1      OPC=nop                   nop                        #  8     0xc   1      OPC=nop                  
  nop                        #  9     0xe   1      OPC=nop                   nop                        #  9     0xd   1      OPC=nop                  
  nop                        #  10    0xf   1      OPC=nop                   je .L_142ce0               #  10    0xe   2      OPC=je_label             
  je .L_142ce0               #  11    0x10  2      OPC=je_label              xorw %r15w, %ax            #  11    0x10  4      OPC=xorw_r16_r16_1       
  nop                        #  12    0x12  1      OPC=nop                   nop                        #  12    0x14  1      OPC=nop                  
  shrl $0x1, %eax            #  13    0x13  2      OPC=shrl_r32_one          nop                        #  13    0x15  1      OPC=nop                  
  nop                        #  14    0x15  1      OPC=nop                   nop                        #  14    0x16  1      OPC=nop                  
  nop                        #  15    0x16  1      OPC=nop                   nopl %eax                  #  15    0x17  3      OPC=nopl_r32             
  xorl %edi, %edi            #  16    0x17  2      OPC=xorl_r32_r32          nop                        #  16    0x1a  1      OPC=nop                  
  nop                        #  17    0x19  1      OPC=nop                   nop                        #  17    0x1b  1      OPC=nop                  
  andw $0x6, %di             #  18    0x1a  4      OPC=andw_r16_imm8         nop                        #  18    0x1c  1      OPC=nop                  
  nop                        #  19    0x1e  1      OPC=nop                   nop                        #  19    0x1d  1      OPC=nop                  
.L_142cc0:                   #        0x1f  0      OPC=<label>               nop                        #  20    0x1e  1      OPC=nop                  
  nop                        #  20    0x1f  1      OPC=nop                   nop                        #  21    0x1f  1      OPC=nop                  
  sarl $0xff, %edx           #  21    0x20  3      OPC=sarl_r32_imm8       .L_142cc0:                   #        0x20  0      OPC=<label>              
  jne .L_142cc0              #  22    0x23  2      OPC=jne_label             nopl %eax                  #  22    0x20  3      OPC=nopl_r32             
  nop                        #  23    0x25  1      OPC=nop                   nop                        #  23    0x23  1      OPC=nop                  
  notw %di                   #  24    0x26  3      OPC=notw_r16              movl %r15d, %edx           #  24    0x24  3      OPC=movl_r32_r32         
  nop                        #  25    0x29  1      OPC=nop                   movl (%r15,%rdx,1), %eax   #  25    0x27  4      OPC=movl_r32_m32         
  nop                        #  26    0x2a  1      OPC=nop                   notl %eax                  #  26    0x2b  2      OPC=notl_r32             
  nop                        #  27    0x2b  1      OPC=nop                   jne .L_142cc0              #  27    0x2d  2      OPC=jne_label            
  orw %di, %ax               #  28    0x2c  3      OPC=orw_r16_r16           orl %edx, %eax             #  28    0x2f  2      OPC=orl_r32_r32          
  nop                        #  29    0x2f  1      OPC=nop                   nop                        #  29    0x31  1      OPC=nop                  
  nop                        #  30    0x30  1      OPC=nop                   nop                        #  30    0x32  1      OPC=nop                  
  nopl %eax                  #  31    0x31  3      OPC=nopl_r32              nopl %eax                  #  31    0x33  3      OPC=nopl_r32             
  nopl %eax                  #  32    0x34  3      OPC=nopl_r32              nop                        #  32    0x36  1      OPC=nop                  
  orl %edx, %eax             #  33    0x37  2      OPC=orl_r32_r32           nop                        #  33    0x37  1      OPC=nop                  
  nop                        #  34    0x39  1      OPC=nop                   nop                        #  34    0x38  1      OPC=nop                  
  nop                        #  35    0x3a  1      OPC=nop                   nopl %eax                  #  35    0x39  3      OPC=nopl_r32             
  nop                        #  36    0x3b  1      OPC=nop                   nop                        #  36    0x3c  1      OPC=nop                  
  nop                        #  37    0x3c  1      OPC=nop                   nop                        #  37    0x3d  1      OPC=nop                  
  nop                        #  38    0x3d  1      OPC=nop                   nop                        #  38    0x3e  1      OPC=nop                  
  nop                        #  39    0x3e  1      OPC=nop                   nop                        #  39    0x3f  1      OPC=nop                  
.L_142ce0:                   #        0x3f  0      OPC=<label>             .L_142ce0:                   #        0x40  0      OPC=<label>              
  popq %r11                  #  40    0x3f  2      OPC=popq_r64_1            popq %r11                  #  40    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d          #  41    0x41  4      OPC=andl_r32_imm8         andl $0xe0, %r11d          #  41    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11            #  42    0x45  3      OPC=addq_r64_r64          addq %r15, %r11            #  42    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                  #  43    0x48  3      OPC=jmpq_r64              jmpq %r11                  #  43    0x49  3      OPC=jmpq_r64             
                                                                                                                                                       
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                      
                                                                                                                                                       

********************************************************************************

Progress Update: 

Lowest Cost Discovered (45)                                                Lowest Known Correct Cost (45)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                       #  Line  RIP   Bytes  Opcode                  # Text                       #  Line  RIP   Bytes  Opcode                  
.wcslen:                     #        0     0      OPC=<label>             .wcslen:                     #        0     0      OPC=<label>             
  nop                        #  1     0     1      OPC=nop                   nop                        #  1     0     1      OPC=nop                 
  nop                        #  2     0x1   1      OPC=nop                   nop                        #  2     0x1   1      OPC=nop                 
  xorl %eax, %eax            #  3     0x2   2      OPC=xorl_r32_r32          xorl %eax, %eax            #  3     0x2   2      OPC=xorl_r32_r32        
  movl %r15d, %edx           #  4     0x4   3      OPC=movl_r32_r32          movl %r15d, %edx           #  4     0x4   3      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %r13d  #  5     0x7   4      OPC=movl_r32_m32          movl (%r15,%rdx,1), %r13d  #  5     0x7   4      OPC=movl_r32_m32        
  nop                        #  6     0xb   1      OPC=nop                   nop                        #  6     0xb   1      OPC=nop                 
  nop                        #  7     0xc   1      OPC=nop                   nop                        #  7     0xc   1      OPC=nop                 
  nop                        #  8     0xd   1      OPC=nop                   nop                        #  8     0xd   1      OPC=nop                 
  nop                        #  9     0xe   1      OPC=nop                   nop                        #  9     0xe   1      OPC=nop                 
  nop                        #  10    0xf   1      OPC=nop                   nop                        #  10    0xf   1      OPC=nop                 
  je .L_142ce0               #  11    0x10  2      OPC=je_label              nop                        #  11    0x10  1      OPC=nop                 
  nop                        #  12    0x12  1      OPC=nop                   je .L_142ce0               #  12    0x11  2      OPC=je_label            
  shrl $0x1, %eax            #  13    0x13  2      OPC=shrl_r32_one          nop                        #  13    0x13  1      OPC=nop                 
  nop                        #  14    0x15  1      OPC=nop                   nop                        #  14    0x14  1      OPC=nop                 
  nop                        #  15    0x16  1      OPC=nop                   nop                        #  15    0x15  1      OPC=nop                 
  xorl %edi, %edi            #  16    0x17  2      OPC=xorl_r32_r32          nop                        #  16    0x16  1      OPC=nop                 
  nop                        #  17    0x19  1      OPC=nop                   nop                        #  17    0x17  1      OPC=nop                 
  andw $0x6, %di             #  18    0x1a  4      OPC=andw_r16_imm8         xorl %edi, %edi            #  18    0x18  2      OPC=xorl_r32_r32        
  nop                        #  19    0x1e  1      OPC=nop                   nop                        #  19    0x1a  1      OPC=nop                 
.L_142cc0:                   #        0x1f  0      OPC=<label>               nop                        #  20    0x1b  1      OPC=nop                 
  nop                        #  20    0x1f  1      OPC=nop                   andw $0x6, %di             #  21    0x1c  4      OPC=andw_r16_imm8       
  sarl $0xff, %edx           #  21    0x20  3      OPC=sarl_r32_imm8       .L_142cc0:                   #        0x20  0      OPC=<label>             
  jne .L_142cc0              #  22    0x23  2      OPC=jne_label             nop                        #  22    0x20  1      OPC=nop                 
  nop                        #  23    0x25  1      OPC=nop                   sarl $0xff, %edx           #  23    0x21  3      OPC=sarl_r32_imm8       
  notw %di                   #  24    0x26  3      OPC=notw_r16              jne .L_142cc0              #  24    0x24  2      OPC=jne_label           
  nop                        #  25    0x29  1      OPC=nop                   nop                        #  25    0x26  1      OPC=nop                 
  nop                        #  26    0x2a  1      OPC=nop                   notw %di                   #  26    0x27  3      OPC=notw_r16            
  nop                        #  27    0x2b  1      OPC=nop                   nop                        #  27    0x2a  1      OPC=nop                 
  orw %di, %ax               #  28    0x2c  3      OPC=orw_r16_r16           nop                        #  28    0x2b  1      OPC=nop                 
  nop                        #  29    0x2f  1      OPC=nop                   nop                        #  29    0x2c  1      OPC=nop                 
  nop                        #  30    0x30  1      OPC=nop                   orw %di, %ax               #  30    0x2d  3      OPC=orw_r16_r16         
  nopl %eax                  #  31    0x31  3      OPC=nopl_r32              nop                        #  31    0x30  1      OPC=nop                 
  nopl %eax                  #  32    0x34  3      OPC=nopl_r32              nop                        #  32    0x31  1      OPC=nop                 
  orl %edx, %eax             #  33    0x37  2      OPC=orl_r32_r32           movl %r15d, %edx           #  33    0x32  3      OPC=movl_r32_r32        
  nop                        #  34    0x39  1      OPC=nop                   nopl %eax                  #  34    0x35  3      OPC=nopl_r32            
  nop                        #  35    0x3a  1      OPC=nop                   orl %edx, %eax             #  35    0x38  2      OPC=orl_r32_r32         
  nop                        #  36    0x3b  1      OPC=nop                   nop                        #  36    0x3a  1      OPC=nop                 
  nop                        #  37    0x3c  1      OPC=nop                   nop                        #  37    0x3b  1      OPC=nop                 
  nop                        #  38    0x3d  1      OPC=nop                   nop                        #  38    0x3c  1      OPC=nop                 
  nop                        #  39    0x3e  1      OPC=nop                   nop                        #  39    0x3d  1      OPC=nop                 
.L_142ce0:                   #        0x3f  0      OPC=<label>               nop                        #  40    0x3e  1      OPC=nop                 
  popq %r11                  #  40    0x3f  2      OPC=popq_r64_1            nop                        #  41    0x3f  1      OPC=nop                 
  andl $0xe0, %r11d          #  41    0x41  4      OPC=andl_r32_imm8       .L_142ce0:                   #        0x40  0      OPC=<label>             
  addq %r15, %r11            #  42    0x45  3      OPC=addq_r64_r64          popq %r11                  #  42    0x40  2      OPC=popq_r64_1          
  jmpq %r11                  #  43    0x48  3      OPC=jmpq_r64              andl $0xe0, %r11d          #  43    0x42  4      OPC=andl_r32_imm8       
                                                                             addq %r15, %r11            #  44    0x46  3      OPC=addq_r64_r64        
.size wcslen, .-wcslen                                                       jmpq %r11                  #  45    0x49  3      OPC=jmpq_r64            
                                                                                                                                                      
                                                                           .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (43)                                                 Lowest Known Correct Cost (45)                                             
                                                                                                                                                       
  .text                                                                       .text                                                                    
  .globl wcslen                                                               .globl wcslen                                                            
  .type wcslen, @function                                                     .type wcslen, @function                                                  
                                                                                                                                                       
#! file-offset 0                                                            #! file-offset 0                                                           
#! rip-offset  0                                                            #! rip-offset  0                                                           
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                     
                                                                                                                                                       
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                  
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>             
  nop                        #  1     0     1      OPC=nop                    nop                        #  1     0     1      OPC=nop                 
  xorl %eax, %eax            #  2     0x1   2      OPC=xorl_r32_r32           nop                        #  2     0x1   1      OPC=nop                 
  movl %r15d, %edx           #  3     0x3   3      OPC=movl_r32_r32           xorl %eax, %eax            #  3     0x2   2      OPC=xorl_r32_r32        
  movl (%r15,%rdx,1), %r13d  #  4     0x6   4      OPC=movl_r32_m32           movl %r15d, %edx           #  4     0x4   3      OPC=movl_r32_r32        
  nop                        #  5     0xa   1      OPC=nop                    movl (%r15,%rdx,1), %r13d  #  5     0x7   4      OPC=movl_r32_m32        
  nop                        #  6     0xb   1      OPC=nop                    nop                        #  6     0xb   1      OPC=nop                 
  nop                        #  7     0xc   1      OPC=nop                    nop                        #  7     0xc   1      OPC=nop                 
  nop                        #  8     0xd   1      OPC=nop                    nop                        #  8     0xd   1      OPC=nop                 
  nop                        #  9     0xe   1      OPC=nop                    nop                        #  9     0xe   1      OPC=nop                 
  je .L_142ce0               #  10    0xf   2      OPC=je_label               nop                        #  10    0xf   1      OPC=nop                 
  nop                        #  11    0x11  1      OPC=nop                    nop                        #  11    0x10  1      OPC=nop                 
  nop                        #  12    0x12  1      OPC=nop                    je .L_142ce0               #  12    0x11  2      OPC=je_label            
  nop                        #  13    0x13  1      OPC=nop                    nop                        #  13    0x13  1      OPC=nop                 
  nop                        #  14    0x14  1      OPC=nop                    nop                        #  14    0x14  1      OPC=nop                 
  nop                        #  15    0x15  1      OPC=nop                    nop                        #  15    0x15  1      OPC=nop                 
  xorl %edi, %edi            #  16    0x16  2      OPC=xorl_r32_r32           nop                        #  16    0x16  1      OPC=nop                 
  nop                        #  17    0x18  1      OPC=nop                    nop                        #  17    0x17  1      OPC=nop                 
  nop                        #  18    0x19  1      OPC=nop                    xorl %edi, %edi            #  18    0x18  2      OPC=xorl_r32_r32        
  andw $0x6, %di             #  19    0x1a  4      OPC=andw_r16_imm8          nop                        #  19    0x1a  1      OPC=nop                 
.L_142cc0:                   #        0x1e  0      OPC=<label>                nop                        #  20    0x1b  1      OPC=nop                 
  nop                        #  20    0x1e  1      OPC=nop                    andw $0x6, %di             #  21    0x1c  4      OPC=andw_r16_imm8       
  sarl $0xff, %edx           #  21    0x1f  3      OPC=sarl_r32_imm8        .L_142cc0:                   #        0x20  0      OPC=<label>             
  jne .L_142cc0              #  22    0x22  2      OPC=jne_label              nop                        #  22    0x20  1      OPC=nop                 
  nop                        #  23    0x24  1      OPC=nop                    sarl $0xff, %edx           #  23    0x21  3      OPC=sarl_r32_imm8       
  notw %di                   #  24    0x25  3      OPC=notw_r16               jne .L_142cc0              #  24    0x24  2      OPC=jne_label           
  nop                        #  25    0x28  1      OPC=nop                    nop                        #  25    0x26  1      OPC=nop                 
  nop                        #  26    0x29  1      OPC=nop                    notw %di                   #  26    0x27  3      OPC=notw_r16            
  nop                        #  27    0x2a  1      OPC=nop                    nop                        #  27    0x2a  1      OPC=nop                 
  orw %di, %ax               #  28    0x2b  3      OPC=orw_r16_r16            nop                        #  28    0x2b  1      OPC=nop                 
  nop                        #  29    0x2e  1      OPC=nop                    nop                        #  29    0x2c  1      OPC=nop                 
  movl %r15d, %edx           #  30    0x2f  3      OPC=movl_r32_r32           orw %di, %ax               #  30    0x2d  3      OPC=orw_r16_r16         
  nopl %eax                  #  31    0x32  3      OPC=nopl_r32               nop                        #  31    0x30  1      OPC=nop                 
  orl %edx, %eax             #  32    0x35  2      OPC=orl_r32_r32            nop                        #  32    0x31  1      OPC=nop                 
  nop                        #  33    0x37  1      OPC=nop                    movl %r15d, %edx           #  33    0x32  3      OPC=movl_r32_r32        
  nop                        #  34    0x38  1      OPC=nop                    nopl %eax                  #  34    0x35  3      OPC=nopl_r32            
  nop                        #  35    0x39  1      OPC=nop                    orl %edx, %eax             #  35    0x38  2      OPC=orl_r32_r32         
  subl $0x6, %eax            #  36    0x3a  5      OPC=subl_eax_imm32         nop                        #  36    0x3a  1      OPC=nop                 
.L_142ce0:                   #        0x3f  0      OPC=<label>                nop                        #  37    0x3b  1      OPC=nop                 
  popq %r11                  #  37    0x3f  2      OPC=popq_r64_1             nop                        #  38    0x3c  1      OPC=nop                 
  andl $0xe0, %r11d          #  38    0x41  4      OPC=andl_r32_imm8          nop                        #  39    0x3d  1      OPC=nop                 
  addq %r15, %r11            #  39    0x45  3      OPC=addq_r64_r64           nop                        #  40    0x3e  1      OPC=nop                 
  jmpq %r11                  #  40    0x48  3      OPC=jmpq_r64               nop                        #  41    0x3f  1      OPC=nop                 
                                                                            .L_142ce0:                   #        0x40  0      OPC=<label>             
.size wcslen, .-wcslen                                                        popq %r11                  #  42    0x40  2      OPC=popq_r64_1          
                                                                              andl $0xe0, %r11d          #  43    0x42  4      OPC=andl_r32_imm8       
                                                                              addq %r15, %r11            #  44    0x46  3      OPC=addq_r64_r64        
                                                                              jmpq %r11                  #  45    0x49  3      OPC=jmpq_r64            
                                                                                                                                                       
                                                                            .size wcslen, .-wcslen                                                     
                                                                                                                                                       

********************************************************************************

Progress Update: 

Lowest Cost Discovered (42)                                                 Lowest Known Correct Cost (45)                                             
                                                                                                                                                       
  .text                                                                       .text                                                                    
  .globl wcslen                                                               .globl wcslen                                                            
  .type wcslen, @function                                                     .type wcslen, @function                                                  
                                                                                                                                                       
#! file-offset 0                                                            #! file-offset 0                                                           
#! rip-offset  0                                                            #! rip-offset  0                                                           
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                     
                                                                                                                                                       
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                  
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>             
  nop                        #  1     0     1      OPC=nop                    nop                        #  1     0     1      OPC=nop                 
  xorl %eax, %eax            #  2     0x1   2      OPC=xorl_r32_r32           nop                        #  2     0x1   1      OPC=nop                 
  movl %r15d, %edx           #  3     0x3   3      OPC=movl_r32_r32           xorl %eax, %eax            #  3     0x2   2      OPC=xorl_r32_r32        
  movl (%r15,%rdx,1), %r13d  #  4     0x6   4      OPC=movl_r32_m32           movl %r15d, %edx           #  4     0x4   3      OPC=movl_r32_r32        
  nop                        #  5     0xa   1      OPC=nop                    movl (%r15,%rdx,1), %r13d  #  5     0x7   4      OPC=movl_r32_m32        
  nop                        #  6     0xb   1      OPC=nop                    nop                        #  6     0xb   1      OPC=nop                 
  movl %edi, %ecx            #  7     0xc   2      OPC=movl_r32_r32_1         nop                        #  7     0xc   1      OPC=nop                 
  nop                        #  8     0xe   1      OPC=nop                    nop                        #  8     0xd   1      OPC=nop                 
  je .L_142ce0               #  9     0xf   2      OPC=je_label               nop                        #  9     0xe   1      OPC=nop                 
  movb %ch, %ah              #  10    0x11  2      OPC=movb_rh_rh             nop                        #  10    0xf   1      OPC=nop                 
  nop                        #  11    0x13  1      OPC=nop                    nop                        #  11    0x10  1      OPC=nop                 
  nop                        #  12    0x14  1      OPC=nop                    je .L_142ce0               #  12    0x11  2      OPC=je_label            
  nop                        #  13    0x15  1      OPC=nop                    nop                        #  13    0x13  1      OPC=nop                 
  nop                        #  14    0x16  1      OPC=nop                    nop                        #  14    0x14  1      OPC=nop                 
  xorl %edi, %edi            #  15    0x17  2      OPC=xorl_r32_r32           nop                        #  15    0x15  1      OPC=nop                 
  nop                        #  16    0x19  1      OPC=nop                    nop                        #  16    0x16  1      OPC=nop                 
  nop                        #  17    0x1a  1      OPC=nop                    nop                        #  17    0x17  1      OPC=nop                 
  andw $0x6, %di             #  18    0x1b  4      OPC=andw_r16_imm8          xorl %edi, %edi            #  18    0x18  2      OPC=xorl_r32_r32        
.L_142cc0:                   #        0x1f  0      OPC=<label>                nop                        #  19    0x1a  1      OPC=nop                 
  nop                        #  19    0x1f  1      OPC=nop                    nop                        #  20    0x1b  1      OPC=nop                 
  sarl $0xff, %edx           #  20    0x20  3      OPC=sarl_r32_imm8          andw $0x6, %di             #  21    0x1c  4      OPC=andw_r16_imm8       
  jne .L_142cc0              #  21    0x23  2      OPC=jne_label            .L_142cc0:                   #        0x20  0      OPC=<label>             
  nop                        #  22    0x25  1      OPC=nop                    nop                        #  22    0x20  1      OPC=nop                 
  notw %di                   #  23    0x26  3      OPC=notw_r16               sarl $0xff, %edx           #  23    0x21  3      OPC=sarl_r32_imm8       
  nop                        #  24    0x29  1      OPC=nop                    jne .L_142cc0              #  24    0x24  2      OPC=jne_label           
  nop                        #  25    0x2a  1      OPC=nop                    nop                        #  25    0x26  1      OPC=nop                 
  nop                        #  26    0x2b  1      OPC=nop                    notw %di                   #  26    0x27  3      OPC=notw_r16            
  orw %di, %ax               #  27    0x2c  3      OPC=orw_r16_r16            nop                        #  27    0x2a  1      OPC=nop                 
  nop                        #  28    0x2f  1      OPC=nop                    nop                        #  28    0x2b  1      OPC=nop                 
  movl %r15d, %edx           #  29    0x30  3      OPC=movl_r32_r32           nop                        #  29    0x2c  1      OPC=nop                 
  nopl %eax                  #  30    0x33  3      OPC=nopl_r32               orw %di, %ax               #  30    0x2d  3      OPC=orw_r16_r16         
  orl %edx, %eax             #  31    0x36  2      OPC=orl_r32_r32            nop                        #  31    0x30  1      OPC=nop                 
  nop                        #  32    0x38  1      OPC=nop                    nop                        #  32    0x31  1      OPC=nop                 
  nop                        #  33    0x39  1      OPC=nop                    movl %r15d, %edx           #  33    0x32  3      OPC=movl_r32_r32        
  nop                        #  34    0x3a  1      OPC=nop                    nopl %eax                  #  34    0x35  3      OPC=nopl_r32            
  subl $0x6, %eax            #  35    0x3b  5      OPC=subl_eax_imm32         orl %edx, %eax             #  35    0x38  2      OPC=orl_r32_r32         
.L_142ce0:                   #        0x40  0      OPC=<label>                nop                        #  36    0x3a  1      OPC=nop                 
  popq %r11                  #  36    0x40  2      OPC=popq_r64_1             nop                        #  37    0x3b  1      OPC=nop                 
  andl $0xe0, %r11d          #  37    0x42  4      OPC=andl_r32_imm8          nop                        #  38    0x3c  1      OPC=nop                 
  addq %r15, %r11            #  38    0x46  3      OPC=addq_r64_r64           nop                        #  39    0x3d  1      OPC=nop                 
  jmpq %r11                  #  39    0x49  3      OPC=jmpq_r64               nop                        #  40    0x3e  1      OPC=nop                 
                                                                              nop                        #  41    0x3f  1      OPC=nop                 
.size wcslen, .-wcslen                                                      .L_142ce0:                   #        0x40  0      OPC=<label>             
                                                                              popq %r11                  #  42    0x40  2      OPC=popq_r64_1          
                                                                              andl $0xe0, %r11d          #  43    0x42  4      OPC=andl_r32_imm8       
                                                                              addq %r15, %r11            #  44    0x46  3      OPC=addq_r64_r64        
                                                                              jmpq %r11                  #  45    0x49  3      OPC=jmpq_r64            
                                                                                                                                                       
                                                                            .size wcslen, .-wcslen                                                     
                                                                                                                                                       

********************************************************************************

Progress Update: 

Lowest Cost Discovered (41)                                                 Lowest Known Correct Cost (45)                                             
                                                                                                                                                       
  .text                                                                       .text                                                                    
  .globl wcslen                                                               .globl wcslen                                                            
  .type wcslen, @function                                                     .type wcslen, @function                                                  
                                                                                                                                                       
#! file-offset 0                                                            #! file-offset 0                                                           
#! rip-offset  0                                                            #! rip-offset  0                                                           
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                     
                                                                                                                                                       
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                  
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>             
  nop                        #  1     0     1      OPC=nop                    nop                        #  1     0     1      OPC=nop                 
  xorl %eax, %eax            #  2     0x1   2      OPC=xorl_r32_r32           nop                        #  2     0x1   1      OPC=nop                 
  movl %r15d, %edx           #  3     0x3   3      OPC=movl_r32_r32           xorl %eax, %eax            #  3     0x2   2      OPC=xorl_r32_r32        
  movl (%r15,%rdx,1), %r13d  #  4     0x6   4      OPC=movl_r32_m32           movl %r15d, %edx           #  4     0x4   3      OPC=movl_r32_r32        
  nop                        #  5     0xa   1      OPC=nop                    movl (%r15,%rdx,1), %r13d  #  5     0x7   4      OPC=movl_r32_m32        
  nop                        #  6     0xb   1      OPC=nop                    nop                        #  6     0xb   1      OPC=nop                 
  movl %edi, %ecx            #  7     0xc   2      OPC=movl_r32_r32_1         nop                        #  7     0xc   1      OPC=nop                 
  nop                        #  8     0xe   1      OPC=nop                    nop                        #  8     0xd   1      OPC=nop                 
  je .L_142ce0               #  9     0xf   2      OPC=je_label               nop                        #  9     0xe   1      OPC=nop                 
  movb %ch, %ah              #  10    0x11  2      OPC=movb_rh_rh             nop                        #  10    0xf   1      OPC=nop                 
  nop                        #  11    0x13  1      OPC=nop                    nop                        #  11    0x10  1      OPC=nop                 
  nop                        #  12    0x14  1      OPC=nop                    je .L_142ce0               #  12    0x11  2      OPC=je_label            
  nop                        #  13    0x15  1      OPC=nop                    nop                        #  13    0x13  1      OPC=nop                 
  nopl %eax                  #  14    0x16  3      OPC=nopl_r32               nop                        #  14    0x14  1      OPC=nop                 
  nop                        #  15    0x19  1      OPC=nop                    nop                        #  15    0x15  1      OPC=nop                 
  xorl %edi, %edi            #  16    0x1a  2      OPC=xorl_r32_r32           nop                        #  16    0x16  1      OPC=nop                 
  nop                        #  17    0x1c  1      OPC=nop                    nop                        #  17    0x17  1      OPC=nop                 
  nop                        #  18    0x1d  1      OPC=nop                    xorl %edi, %edi            #  18    0x18  2      OPC=xorl_r32_r32        
.L_142cc0:                   #        0x1e  0      OPC=<label>                nop                        #  19    0x1a  1      OPC=nop                 
  nop                        #  19    0x1e  1      OPC=nop                    nop                        #  20    0x1b  1      OPC=nop                 
  negb %r13b                 #  20    0x1f  3      OPC=negb_r8                andw $0x6, %di             #  21    0x1c  4      OPC=andw_r16_imm8       
  jne .L_142cc0              #  21    0x22  2      OPC=jne_label            .L_142cc0:                   #        0x20  0      OPC=<label>             
  nop                        #  22    0x24  1      OPC=nop                    nop                        #  22    0x20  1      OPC=nop                 
  notw %di                   #  23    0x25  3      OPC=notw_r16               sarl $0xff, %edx           #  23    0x21  3      OPC=sarl_r32_imm8       
  nop                        #  24    0x28  1      OPC=nop                    jne .L_142cc0              #  24    0x24  2      OPC=jne_label           
  nop                        #  25    0x29  1      OPC=nop                    nop                        #  25    0x26  1      OPC=nop                 
  nop                        #  26    0x2a  1      OPC=nop                    notw %di                   #  26    0x27  3      OPC=notw_r16            
  orw %di, %ax               #  27    0x2b  3      OPC=orw_r16_r16            nop                        #  27    0x2a  1      OPC=nop                 
  nop                        #  28    0x2e  1      OPC=nop                    nop                        #  28    0x2b  1      OPC=nop                 
  movl %r15d, %edx           #  29    0x2f  3      OPC=movl_r32_r32           nop                        #  29    0x2c  1      OPC=nop                 
  nopl %eax                  #  30    0x32  3      OPC=nopl_r32               orw %di, %ax               #  30    0x2d  3      OPC=orw_r16_r16         
  orl %edx, %eax             #  31    0x35  2      OPC=orl_r32_r32            nop                        #  31    0x30  1      OPC=nop                 
  nop                        #  32    0x37  1      OPC=nop                    nop                        #  32    0x31  1      OPC=nop                 
  nop                        #  33    0x38  1      OPC=nop                    movl %r15d, %edx           #  33    0x32  3      OPC=movl_r32_r32        
  subl $0x6, %eax            #  34    0x39  5      OPC=subl_eax_imm32         nopl %eax                  #  34    0x35  3      OPC=nopl_r32            
.L_142ce0:                   #        0x3e  0      OPC=<label>                orl %edx, %eax             #  35    0x38  2      OPC=orl_r32_r32         
  popq %r11                  #  35    0x3e  2      OPC=popq_r64_1             nop                        #  36    0x3a  1      OPC=nop                 
  andl $0xe0, %r11d          #  36    0x40  4      OPC=andl_r32_imm8          nop                        #  37    0x3b  1      OPC=nop                 
  addq %r15, %r11            #  37    0x44  3      OPC=addq_r64_r64           nop                        #  38    0x3c  1      OPC=nop                 
  jmpq %r11                  #  38    0x47  3      OPC=jmpq_r64               nop                        #  39    0x3d  1      OPC=nop                 
                                                                              nop                        #  40    0x3e  1      OPC=nop                 
.size wcslen, .-wcslen                                                        nop                        #  41    0x3f  1      OPC=nop                 
                                                                            .L_142ce0:                   #        0x40  0      OPC=<label>             
                                                                              popq %r11                  #  42    0x40  2      OPC=popq_r64_1          
                                                                              andl $0xe0, %r11d          #  43    0x42  4      OPC=andl_r32_imm8       
                                                                              addq %r15, %r11            #  44    0x46  3      OPC=addq_r64_r64        
                                                                              jmpq %r11                  #  45    0x49  3      OPC=jmpq_r64            
                                                                                                                                                       
                                                                            .size wcslen, .-wcslen                                                     
                                                                                                                                                       

********************************************************************************

Progress Update: 

Lowest Cost Discovered (38)                                                Lowest Known Correct Cost (45)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                       #  Line  RIP   Bytes  Opcode                  # Text                       #  Line  RIP   Bytes  Opcode                  
.wcslen:                     #        0     0      OPC=<label>             .wcslen:                     #        0     0      OPC=<label>             
  nop                        #  1     0     1      OPC=nop                   nop                        #  1     0     1      OPC=nop                 
  xorl %eax, %eax            #  2     0x1   2      OPC=xorl_r32_r32          nop                        #  2     0x1   1      OPC=nop                 
  nop                        #  3     0x3   1      OPC=nop                   xorl %eax, %eax            #  3     0x2   2      OPC=xorl_r32_r32        
  notw %di                   #  4     0x4   3      OPC=notw_r16              movl %r15d, %edx           #  4     0x4   3      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %r13d  #  5     0x7   4      OPC=movl_r32_m32          movl (%r15,%rdx,1), %r13d  #  5     0x7   4      OPC=movl_r32_m32        
  nop                        #  6     0xb   1      OPC=nop                   nop                        #  6     0xb   1      OPC=nop                 
  nop                        #  7     0xc   1      OPC=nop                   nop                        #  7     0xc   1      OPC=nop                 
  nop                        #  8     0xd   1      OPC=nop                   nop                        #  8     0xd   1      OPC=nop                 
  nop                        #  9     0xe   1      OPC=nop                   nop                        #  9     0xe   1      OPC=nop                 
  nop                        #  10    0xf   1      OPC=nop                   nop                        #  10    0xf   1      OPC=nop                 
  nop                        #  11    0x10  1      OPC=nop                   nop                        #  11    0x10  1      OPC=nop                 
  je .L_142ce0               #  12    0x11  2      OPC=je_label              je .L_142ce0               #  12    0x11  2      OPC=je_label            
  nop                        #  13    0x13  1      OPC=nop                   nop                        #  13    0x13  1      OPC=nop                 
  nop                        #  14    0x14  1      OPC=nop                   nop                        #  14    0x14  1      OPC=nop                 
  nop                        #  15    0x15  1      OPC=nop                   nop                        #  15    0x15  1      OPC=nop                 
  incw %di                   #  16    0x16  3      OPC=incw_r16              nop                        #  16    0x16  1      OPC=nop                 
  shrl $0x1, %edi            #  17    0x19  2      OPC=shrl_r32_one          nop                        #  17    0x17  1      OPC=nop                 
  nop                        #  18    0x1b  1      OPC=nop                   xorl %edi, %edi            #  18    0x18  2      OPC=xorl_r32_r32        
  nop                        #  19    0x1c  1      OPC=nop                   nop                        #  19    0x1a  1      OPC=nop                 
  shlb $0x1, %al             #  20    0x1d  2      OPC=shlb_r8_one           nop                        #  20    0x1b  1      OPC=nop                 
.L_142cc0:                   #        0x1f  0      OPC=<label>               andw $0x6, %di             #  21    0x1c  4      OPC=andw_r16_imm8       
  negb %r13b                 #  21    0x1f  3      OPC=negb_r8             .L_142cc0:                   #        0x20  0      OPC=<label>             
  jne .L_142cc0              #  22    0x22  2      OPC=jne_label             nop                        #  22    0x20  1      OPC=nop                 
  nop                        #  23    0x24  1      OPC=nop                   sarl $0xff, %edx           #  23    0x21  3      OPC=sarl_r32_imm8       
  nop                        #  24    0x25  1      OPC=nop                   jne .L_142cc0              #  24    0x24  2      OPC=jne_label           
  orb %dil, %dil             #  25    0x26  3      OPC=orb_r8_r8_1           nop                        #  25    0x26  1      OPC=nop                 
  nop                        #  26    0x29  1      OPC=nop                   notw %di                   #  26    0x27  3      OPC=notw_r16            
  nop                        #  27    0x2a  1      OPC=nop                   nop                        #  27    0x2a  1      OPC=nop                 
  orw %di, %ax               #  28    0x2b  3      OPC=orw_r16_r16           nop                        #  28    0x2b  1      OPC=nop                 
  nop                        #  29    0x2e  1      OPC=nop                   nop                        #  29    0x2c  1      OPC=nop                 
  nopl %eax                  #  30    0x2f  3      OPC=nopl_r32              orw %di, %ax               #  30    0x2d  3      OPC=orw_r16_r16         
  nop                        #  31    0x32  1      OPC=nop                   nop                        #  31    0x30  1      OPC=nop                 
  incb %al                   #  32    0x33  2      OPC=incb_r8               nop                        #  32    0x31  1      OPC=nop                 
  nop                        #  33    0x35  1      OPC=nop                   movl %r15d, %edx           #  33    0x32  3      OPC=movl_r32_r32        
  nopl %eax                  #  34    0x36  3      OPC=nopl_r32              nopl %eax                  #  34    0x35  3      OPC=nopl_r32            
  nopl %eax                  #  35    0x39  3      OPC=nopl_r32              orl %edx, %eax             #  35    0x38  2      OPC=orl_r32_r32         
  nop                        #  36    0x3c  1      OPC=nop                   nop                        #  36    0x3a  1      OPC=nop                 
  nop                        #  37    0x3d  1      OPC=nop                   nop                        #  37    0x3b  1      OPC=nop                 
.L_142ce0:                   #        0x3e  0      OPC=<label>               nop                        #  38    0x3c  1      OPC=nop                 
  popq %r11                  #  38    0x3e  2      OPC=popq_r64_1            nop                        #  39    0x3d  1      OPC=nop                 
  andl $0xe0, %r11d          #  39    0x40  4      OPC=andl_r32_imm8         nop                        #  40    0x3e  1      OPC=nop                 
  addq %r15, %r11            #  40    0x44  3      OPC=addq_r64_r64          nop                        #  41    0x3f  1      OPC=nop                 
  jmpq %r11                  #  41    0x47  3      OPC=jmpq_r64            .L_142ce0:                   #        0x40  0      OPC=<label>             
                                                                             popq %r11                  #  42    0x40  2      OPC=popq_r64_1          
.size wcslen, .-wcslen                                                       andl $0xe0, %r11d          #  43    0x42  4      OPC=andl_r32_imm8       
                                                                             addq %r15, %r11            #  44    0x46  3      OPC=addq_r64_r64        
                                                                             jmpq %r11                  #  45    0x49  3      OPC=jmpq_r64            
                                                                                                                                                      
                                                                           .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (37)                                                Lowest Known Correct Cost (45)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                       #  Line  RIP   Bytes  Opcode                  # Text                       #  Line  RIP   Bytes  Opcode                  
.wcslen:                     #        0     0      OPC=<label>             .wcslen:                     #        0     0      OPC=<label>             
  nop                        #  1     0     1      OPC=nop                   nop                        #  1     0     1      OPC=nop                 
  nop                        #  2     0x1   1      OPC=nop                   nop                        #  2     0x1   1      OPC=nop                 
  notw %di                   #  3     0x2   3      OPC=notw_r16              xorl %eax, %eax            #  3     0x2   2      OPC=xorl_r32_r32        
  nop                        #  4     0x5   1      OPC=nop                   movl %r15d, %edx           #  4     0x4   3      OPC=movl_r32_r32        
  xorl %eax, %eax            #  5     0x6   2      OPC=xorl_r32_r32          movl (%r15,%rdx,1), %r13d  #  5     0x7   4      OPC=movl_r32_m32        
  movl (%r15,%rax,1), %r13d  #  6     0x8   4      OPC=movl_r32_m32          nop                        #  6     0xb   1      OPC=nop                 
  nop                        #  7     0xc   1      OPC=nop                   nop                        #  7     0xc   1      OPC=nop                 
  nop                        #  8     0xd   1      OPC=nop                   nop                        #  8     0xd   1      OPC=nop                 
  nop                        #  9     0xe   1      OPC=nop                   nop                        #  9     0xe   1      OPC=nop                 
  nop                        #  10    0xf   1      OPC=nop                   nop                        #  10    0xf   1      OPC=nop                 
  nop                        #  11    0x10  1      OPC=nop                   nop                        #  11    0x10  1      OPC=nop                 
  xorb %r13b, %al            #  12    0x11  3      OPC=xorb_r8_r8            je .L_142ce0               #  12    0x11  2      OPC=je_label            
  je .L_142ce0               #  13    0x14  2      OPC=je_label              nop                        #  13    0x13  1      OPC=nop                 
  nop                        #  14    0x16  1      OPC=nop                   nop                        #  14    0x14  1      OPC=nop                 
  nop                        #  15    0x17  1      OPC=nop                   nop                        #  15    0x15  1      OPC=nop                 
  incw %di                   #  16    0x18  3      OPC=incw_r16              nop                        #  16    0x16  1      OPC=nop                 
  nop                        #  17    0x1b  1      OPC=nop                   nop                        #  17    0x17  1      OPC=nop                 
  nop                        #  18    0x1c  1      OPC=nop                   xorl %edi, %edi            #  18    0x18  2      OPC=xorl_r32_r32        
  shlb $0x1, %al             #  19    0x1d  2      OPC=shlb_r8_one           nop                        #  19    0x1a  1      OPC=nop                 
.L_142cc0:                   #        0x1f  0      OPC=<label>               nop                        #  20    0x1b  1      OPC=nop                 
  negb %r13b                 #  20    0x1f  3      OPC=negb_r8               andw $0x6, %di             #  21    0x1c  4      OPC=andw_r16_imm8       
  jne .L_142cc0              #  21    0x22  2      OPC=jne_label           .L_142cc0:                   #        0x20  0      OPC=<label>             
  nop                        #  22    0x24  1      OPC=nop                   nop                        #  22    0x20  1      OPC=nop                 
  nop                        #  23    0x25  1      OPC=nop                   sarl $0xff, %edx           #  23    0x21  3      OPC=sarl_r32_imm8       
  nop                        #  24    0x26  1      OPC=nop                   jne .L_142cc0              #  24    0x24  2      OPC=jne_label           
  nop                        #  25    0x27  1      OPC=nop                   nop                        #  25    0x26  1      OPC=nop                 
  xorb %ah, %ah              #  26    0x28  2      OPC=xorb_rh_rh_1          notw %di                   #  26    0x27  3      OPC=notw_r16            
  orw %di, %ax               #  27    0x2a  3      OPC=orw_r16_r16           nop                        #  27    0x2a  1      OPC=nop                 
  nop                        #  28    0x2d  1      OPC=nop                   nop                        #  28    0x2b  1      OPC=nop                 
  nopl %eax                  #  29    0x2e  3      OPC=nopl_r32              nop                        #  29    0x2c  1      OPC=nop                 
  nop                        #  30    0x31  1      OPC=nop                   orw %di, %ax               #  30    0x2d  3      OPC=orw_r16_r16         
  nop                        #  31    0x32  1      OPC=nop                   nop                        #  31    0x30  1      OPC=nop                 
  nop                        #  32    0x33  1      OPC=nop                   nop                        #  32    0x31  1      OPC=nop                 
  nop                        #  33    0x34  1      OPC=nop                   movl %r15d, %edx           #  33    0x32  3      OPC=movl_r32_r32        
  nop                        #  34    0x35  1      OPC=nop                   nopl %eax                  #  34    0x35  3      OPC=nopl_r32            
  nopl %eax                  #  35    0x36  3      OPC=nopl_r32              orl %edx, %eax             #  35    0x38  2      OPC=orl_r32_r32         
  nopl %eax                  #  36    0x39  3      OPC=nopl_r32              nop                        #  36    0x3a  1      OPC=nop                 
  nop                        #  37    0x3c  1      OPC=nop                   nop                        #  37    0x3b  1      OPC=nop                 
  nopl %eax                  #  38    0x3d  3      OPC=nopl_r32              nop                        #  38    0x3c  1      OPC=nop                 
.L_142ce0:                   #        0x40  0      OPC=<label>               nop                        #  39    0x3d  1      OPC=nop                 
  popq %r11                  #  39    0x40  2      OPC=popq_r64_1            nop                        #  40    0x3e  1      OPC=nop                 
  andl $0xe0, %r11d          #  40    0x42  4      OPC=andl_r32_imm8         nop                        #  41    0x3f  1      OPC=nop                 
  addq %r15, %r11            #  41    0x46  3      OPC=addq_r64_r64        .L_142ce0:                   #        0x40  0      OPC=<label>             
  jmpq %r11                  #  42    0x49  3      OPC=jmpq_r64              popq %r11                  #  42    0x40  2      OPC=popq_r64_1          
                                                                             andl $0xe0, %r11d          #  43    0x42  4      OPC=andl_r32_imm8       
.size wcslen, .-wcslen                                                       addq %r15, %r11            #  44    0x46  3      OPC=addq_r64_r64        
                                                                             jmpq %r11                  #  45    0x49  3      OPC=jmpq_r64            
                                                                                                                                                      
                                                                           .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (36)                                                Lowest Known Correct Cost (45)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                       #  Line  RIP   Bytes  Opcode                  # Text                       #  Line  RIP   Bytes  Opcode                  
.wcslen:                     #        0     0      OPC=<label>             .wcslen:                     #        0     0      OPC=<label>             
  nop                        #  1     0     1      OPC=nop                   nop                        #  1     0     1      OPC=nop                 
  nop                        #  2     0x1   1      OPC=nop                   nop                        #  2     0x1   1      OPC=nop                 
  notw %di                   #  3     0x2   3      OPC=notw_r16              xorl %eax, %eax            #  3     0x2   2      OPC=xorl_r32_r32        
  nop                        #  4     0x5   1      OPC=nop                   movl %r15d, %edx           #  4     0x4   3      OPC=movl_r32_r32        
  xorl %eax, %eax            #  5     0x6   2      OPC=xorl_r32_r32          movl (%r15,%rdx,1), %r13d  #  5     0x7   4      OPC=movl_r32_m32        
  movl (%r15,%rax,1), %r13d  #  6     0x8   4      OPC=movl_r32_m32          nop                        #  6     0xb   1      OPC=nop                 
  nop                        #  7     0xc   1      OPC=nop                   nop                        #  7     0xc   1      OPC=nop                 
  nop                        #  8     0xd   1      OPC=nop                   nop                        #  8     0xd   1      OPC=nop                 
  nopl %eax                  #  9     0xe   3      OPC=nopl_r32              nop                        #  9     0xe   1      OPC=nop                 
  nop                        #  10    0x11  1      OPC=nop                   nop                        #  10    0xf   1      OPC=nop                 
  xorb %r13b, %al            #  11    0x12  3      OPC=xorb_r8_r8            nop                        #  11    0x10  1      OPC=nop                 
  je .L_142ce0               #  12    0x15  2      OPC=je_label              je .L_142ce0               #  12    0x11  2      OPC=je_label            
  nop                        #  13    0x17  1      OPC=nop                   nop                        #  13    0x13  1      OPC=nop                 
  nop                        #  14    0x18  1      OPC=nop                   nop                        #  14    0x14  1      OPC=nop                 
  incw %di                   #  15    0x19  3      OPC=incw_r16              nop                        #  15    0x15  1      OPC=nop                 
  nop                        #  16    0x1c  1      OPC=nop                   nop                        #  16    0x16  1      OPC=nop                 
  nop                        #  17    0x1d  1      OPC=nop                   nop                        #  17    0x17  1      OPC=nop                 
  shlb $0x1, %al             #  18    0x1e  2      OPC=shlb_r8_one           xorl %edi, %edi            #  18    0x18  2      OPC=xorl_r32_r32        
.L_142cc0:                   #        0x20  0      OPC=<label>               nop                        #  19    0x1a  1      OPC=nop                 
  negb %r13b                 #  19    0x20  3      OPC=negb_r8               nop                        #  20    0x1b  1      OPC=nop                 
  jne .L_142cc0              #  20    0x23  2      OPC=jne_label             andw $0x6, %di             #  21    0x1c  4      OPC=andw_r16_imm8       
  nop                        #  21    0x25  1      OPC=nop                 .L_142cc0:                   #        0x20  0      OPC=<label>             
  nop                        #  22    0x26  1      OPC=nop                   nop                        #  22    0x20  1      OPC=nop                 
  nop                        #  23    0x27  1      OPC=nop                   sarl $0xff, %edx           #  23    0x21  3      OPC=sarl_r32_imm8       
  nop                        #  24    0x28  1      OPC=nop                   jne .L_142cc0              #  24    0x24  2      OPC=jne_label           
  xorb %ah, %ah              #  25    0x29  2      OPC=xorb_rh_rh_1          nop                        #  25    0x26  1      OPC=nop                 
  orw %di, %ax               #  26    0x2b  3      OPC=orw_r16_r16           notw %di                   #  26    0x27  3      OPC=notw_r16            
  nop                        #  27    0x2e  1      OPC=nop                   nop                        #  27    0x2a  1      OPC=nop                 
  nopl %eax                  #  28    0x2f  3      OPC=nopl_r32              nop                        #  28    0x2b  1      OPC=nop                 
  nop                        #  29    0x32  1      OPC=nop                   nop                        #  29    0x2c  1      OPC=nop                 
  nop                        #  30    0x33  1      OPC=nop                   orw %di, %ax               #  30    0x2d  3      OPC=orw_r16_r16         
  nop                        #  31    0x34  1      OPC=nop                   nop                        #  31    0x30  1      OPC=nop                 
  nop                        #  32    0x35  1      OPC=nop                   nop                        #  32    0x31  1      OPC=nop                 
  nop                        #  33    0x36  1      OPC=nop                   movl %r15d, %edx           #  33    0x32  3      OPC=movl_r32_r32        
  nopl %eax                  #  34    0x37  3      OPC=nopl_r32              nopl %eax                  #  34    0x35  3      OPC=nopl_r32            
  nopl %eax                  #  35    0x3a  3      OPC=nopl_r32              orl %edx, %eax             #  35    0x38  2      OPC=orl_r32_r32         
  nop                        #  36    0x3d  1      OPC=nop                   nop                        #  36    0x3a  1      OPC=nop                 
  nopl %eax                  #  37    0x3e  3      OPC=nopl_r32              nop                        #  37    0x3b  1      OPC=nop                 
.L_142ce0:                   #        0x41  0      OPC=<label>               nop                        #  38    0x3c  1      OPC=nop                 
  popq %r11                  #  38    0x41  2      OPC=popq_r64_1            nop                        #  39    0x3d  1      OPC=nop                 
  andl $0xe0, %r11d          #  39    0x43  4      OPC=andl_r32_imm8         nop                        #  40    0x3e  1      OPC=nop                 
  addq %r15, %r11            #  40    0x47  3      OPC=addq_r64_r64          nop                        #  41    0x3f  1      OPC=nop                 
  jmpq %r11                  #  41    0x4a  3      OPC=jmpq_r64            .L_142ce0:                   #        0x40  0      OPC=<label>             
                                                                             popq %r11                  #  42    0x40  2      OPC=popq_r64_1          
.size wcslen, .-wcslen                                                       andl $0xe0, %r11d          #  43    0x42  4      OPC=andl_r32_imm8       
                                                                             addq %r15, %r11            #  44    0x46  3      OPC=addq_r64_r64        
                                                                             jmpq %r11                  #  45    0x49  3      OPC=jmpq_r64            
                                                                                                                                                      
                                                                           .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (35)                                                 Lowest Known Correct Cost (35)                                              
                                                                                                                                                        
  .text                                                                       .text                                                                     
  .globl wcslen                                                               .globl wcslen                                                             
  .type wcslen, @function                                                     .type wcslen, @function                                                   
                                                                                                                                                        
#! file-offset 0                                                            #! file-offset 0                                                            
#! rip-offset  0                                                            #! rip-offset  0                                                            
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                      
                                                                                                                                                        
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                    nop                        #  1     0     1      OPC=nop                  
  nop                        #  2     0x1   1      OPC=nop                    nop                        #  2     0x1   1      OPC=nop                  
  notw %di                   #  3     0x2   3      OPC=notw_r16               notw %di                   #  3     0x2   3      OPC=notw_r16             
  nop                        #  4     0x5   1      OPC=nop                    nop                        #  4     0x5   1      OPC=nop                  
  xorl %eax, %eax            #  5     0x6   2      OPC=xorl_r32_r32           xorl %eax, %eax            #  5     0x6   2      OPC=xorl_r32_r32         
  movl (%r15,%rax,1), %r13d  #  6     0x8   4      OPC=movl_r32_m32           movl (%r15,%rax,1), %r13d  #  6     0x8   4      OPC=movl_r32_m32         
  nop                        #  7     0xc   1      OPC=nop                    nop                        #  7     0xc   1      OPC=nop                  
  nop                        #  8     0xd   1      OPC=nop                    nop                        #  8     0xd   1      OPC=nop                  
  movl %r15d, %ecx           #  9     0xe   3      OPC=movl_r32_r32_1         movl %r15d, %ecx           #  9     0xe   3      OPC=movl_r32_r32_1       
  nop                        #  10    0x11  1      OPC=nop                    nop                        #  10    0x11  1      OPC=nop                  
  xorb %r13b, %al            #  11    0x12  3      OPC=xorb_r8_r8             xorb %r13b, %al            #  11    0x12  3      OPC=xorb_r8_r8           
  je .L_142ce0               #  12    0x15  2      OPC=je_label               je .L_142ce0               #  12    0x15  2      OPC=je_label             
  nop                        #  13    0x17  1      OPC=nop                    nop                        #  13    0x17  1      OPC=nop                  
  nop                        #  14    0x18  1      OPC=nop                    nop                        #  14    0x18  1      OPC=nop                  
  incw %di                   #  15    0x19  3      OPC=incw_r16               incw %di                   #  15    0x19  3      OPC=incw_r16             
  nop                        #  16    0x1c  1      OPC=nop                    nop                        #  16    0x1c  1      OPC=nop                  
  nop                        #  17    0x1d  1      OPC=nop                    nop                        #  17    0x1d  1      OPC=nop                  
  shlb $0x1, %al             #  18    0x1e  2      OPC=shlb_r8_one            shlb $0x1, %al             #  18    0x1e  2      OPC=shlb_r8_one          
.L_142cc0:                   #        0x20  0      OPC=<label>              .L_142cc0:                   #        0x20  0      OPC=<label>              
  orb %ah, %ch               #  19    0x20  2      OPC=orb_rh_rh              orb %ah, %ch               #  19    0x20  2      OPC=orb_rh_rh            
  jne .L_142cc0              #  20    0x22  2      OPC=jne_label              jne .L_142cc0              #  20    0x22  2      OPC=jne_label            
  nop                        #  21    0x24  1      OPC=nop                    nop                        #  21    0x24  1      OPC=nop                  
  nop                        #  22    0x25  1      OPC=nop                    nop                        #  22    0x25  1      OPC=nop                  
  nop                        #  23    0x26  1      OPC=nop                    nop                        #  23    0x26  1      OPC=nop                  
  nop                        #  24    0x27  1      OPC=nop                    nop                        #  24    0x27  1      OPC=nop                  
  xorb %ah, %ah              #  25    0x28  2      OPC=xorb_rh_rh_1           xorb %ah, %ah              #  25    0x28  2      OPC=xorb_rh_rh_1         
  orw %di, %ax               #  26    0x2a  3      OPC=orw_r16_r16            orw %di, %ax               #  26    0x2a  3      OPC=orw_r16_r16          
  nop                        #  27    0x2d  1      OPC=nop                    nop                        #  27    0x2d  1      OPC=nop                  
  nopl %eax                  #  28    0x2e  3      OPC=nopl_r32               nopl %eax                  #  28    0x2e  3      OPC=nopl_r32             
  nop                        #  29    0x31  1      OPC=nop                    nop                        #  29    0x31  1      OPC=nop                  
  nop                        #  30    0x32  1      OPC=nop                    nop                        #  30    0x32  1      OPC=nop                  
  nop                        #  31    0x33  1      OPC=nop                    nop                        #  31    0x33  1      OPC=nop                  
  nop                        #  32    0x34  1      OPC=nop                    nop                        #  32    0x34  1      OPC=nop                  
  nop                        #  33    0x35  1      OPC=nop                    nop                        #  33    0x35  1      OPC=nop                  
  nopl %eax                  #  34    0x36  3      OPC=nopl_r32               nopl %eax                  #  34    0x36  3      OPC=nopl_r32             
  nopl %eax                  #  35    0x39  3      OPC=nopl_r32               nopl %eax                  #  35    0x39  3      OPC=nopl_r32             
  nop                        #  36    0x3c  1      OPC=nop                    nop                        #  36    0x3c  1      OPC=nop                  
  nopl %eax                  #  37    0x3d  3      OPC=nopl_r32               nopl %eax                  #  37    0x3d  3      OPC=nopl_r32             
.L_142ce0:                   #        0x40  0      OPC=<label>              .L_142ce0:                   #        0x40  0      OPC=<label>              
  popq %r11                  #  38    0x40  2      OPC=popq_r64_1             popq %r11                  #  38    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d          #  39    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d          #  39    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11            #  40    0x46  3      OPC=addq_r64_r64           addq %r15, %r11            #  40    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                  #  41    0x49  3      OPC=jmpq_r64               jmpq %r11                  #  41    0x49  3      OPC=jmpq_r64             
                                                                                                                                                        
.size wcslen, .-wcslen                                                      .size wcslen, .-wcslen                                                      
                                                                                                                                                        

********************************************************************************

Progress Update: 

Lowest Cost Discovered (34)                                                 Lowest Known Correct Cost (35)                                              
                                                                                                                                                        
  .text                                                                       .text                                                                     
  .globl wcslen                                                               .globl wcslen                                                             
  .type wcslen, @function                                                     .type wcslen, @function                                                   
                                                                                                                                                        
#! file-offset 0                                                            #! file-offset 0                                                            
#! rip-offset  0                                                            #! rip-offset  0                                                            
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                      
                                                                                                                                                        
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                    nop                        #  1     0     1      OPC=nop                  
  nop                        #  2     0x1   1      OPC=nop                    nop                        #  2     0x1   1      OPC=nop                  
  notq %rdi                  #  3     0x2   3      OPC=notq_r64               notw %di                   #  3     0x2   3      OPC=notw_r16             
  xorl %eax, %eax            #  4     0x5   2      OPC=xorl_r32_r32           nop                        #  4     0x5   1      OPC=nop                  
  movl (%r15,%rax,1), %r13d  #  5     0x7   4      OPC=movl_r32_m32           xorl %eax, %eax            #  5     0x6   2      OPC=xorl_r32_r32         
  nop                        #  6     0xb   1      OPC=nop                    movl (%r15,%rax,1), %r13d  #  6     0x8   4      OPC=movl_r32_m32         
  nop                        #  7     0xc   1      OPC=nop                    nop                        #  7     0xc   1      OPC=nop                  
  movl %r15d, %ecx           #  8     0xd   3      OPC=movl_r32_r32_1         nop                        #  8     0xd   1      OPC=nop                  
  xorb %r13b, %al            #  9     0x10  3      OPC=xorb_r8_r8             movl %r15d, %ecx           #  9     0xe   3      OPC=movl_r32_r32_1       
  je .L_142ce0               #  10    0x13  2      OPC=je_label               nop                        #  10    0x11  1      OPC=nop                  
  nop                        #  11    0x15  1      OPC=nop                    xorb %r13b, %al            #  11    0x12  3      OPC=xorb_r8_r8           
  nop                        #  12    0x16  1      OPC=nop                    je .L_142ce0               #  12    0x15  2      OPC=je_label             
  incw %di                   #  13    0x17  3      OPC=incw_r16               nop                        #  13    0x17  1      OPC=nop                  
  nop                        #  14    0x1a  1      OPC=nop                    nop                        #  14    0x18  1      OPC=nop                  
  nop                        #  15    0x1b  1      OPC=nop                    incw %di                   #  15    0x19  3      OPC=incw_r16             
  shlw $0x1, %ax             #  16    0x1c  4      OPC=shlw_r16_imm8          nop                        #  16    0x1c  1      OPC=nop                  
.L_142cc0:                   #        0x20  0      OPC=<label>                nop                        #  17    0x1d  1      OPC=nop                  
  orb %ah, %ch               #  17    0x20  2      OPC=orb_rh_rh              shlb $0x1, %al             #  18    0x1e  2      OPC=shlb_r8_one          
  jne .L_142cc0              #  18    0x22  2      OPC=jne_label            .L_142cc0:                   #        0x20  0      OPC=<label>              
  nop                        #  19    0x24  1      OPC=nop                    orb %ah, %ch               #  19    0x20  2      OPC=orb_rh_rh            
  nop                        #  20    0x25  1      OPC=nop                    jne .L_142cc0              #  20    0x22  2      OPC=jne_label            
  xorb %ch, %ah              #  21    0x26  2      OPC=xorb_rh_rh_1           nop                        #  21    0x24  1      OPC=nop                  
  orw %di, %ax               #  22    0x28  3      OPC=orw_r16_r16            nop                        #  22    0x25  1      OPC=nop                  
  nop                        #  23    0x2b  1      OPC=nop                    nop                        #  23    0x26  1      OPC=nop                  
  nopl %eax                  #  24    0x2c  3      OPC=nopl_r32               nop                        #  24    0x27  1      OPC=nop                  
  nop                        #  25    0x2f  1      OPC=nop                    xorb %ah, %ah              #  25    0x28  2      OPC=xorb_rh_rh_1         
  nop                        #  26    0x30  1      OPC=nop                    orw %di, %ax               #  26    0x2a  3      OPC=orw_r16_r16          
  nop                        #  27    0x31  1      OPC=nop                    nop                        #  27    0x2d  1      OPC=nop                  
  nop                        #  28    0x32  1      OPC=nop                    nopl %eax                  #  28    0x2e  3      OPC=nopl_r32             
  nop                        #  29    0x33  1      OPC=nop                    nop                        #  29    0x31  1      OPC=nop                  
  nop                        #  30    0x34  1      OPC=nop                    nop                        #  30    0x32  1      OPC=nop                  
  nopl %eax                  #  31    0x35  3      OPC=nopl_r32               nop                        #  31    0x33  1      OPC=nop                  
  nopl %eax                  #  32    0x38  3      OPC=nopl_r32               nop                        #  32    0x34  1      OPC=nop                  
  nopl %eax                  #  33    0x3b  3      OPC=nopl_r32               nop                        #  33    0x35  1      OPC=nop                  
  nop                        #  34    0x3e  1      OPC=nop                    nopl %eax                  #  34    0x36  3      OPC=nopl_r32             
.L_142ce0:                   #        0x3f  0      OPC=<label>                nopl %eax                  #  35    0x39  3      OPC=nopl_r32             
  popq %r11                  #  35    0x3f  2      OPC=popq_r64_1             nop                        #  36    0x3c  1      OPC=nop                  
  andl $0xe0, %r11d          #  36    0x41  4      OPC=andl_r32_imm8          nopl %eax                  #  37    0x3d  3      OPC=nopl_r32             
  addq %r15, %r11            #  37    0x45  3      OPC=addq_r64_r64         .L_142ce0:                   #        0x40  0      OPC=<label>              
  jmpq %r11                  #  38    0x48  3      OPC=jmpq_r64               popq %r11                  #  38    0x40  2      OPC=popq_r64_1           
                                                                              andl $0xe0, %r11d          #  39    0x42  4      OPC=andl_r32_imm8        
.size wcslen, .-wcslen                                                        addq %r15, %r11            #  40    0x46  3      OPC=addq_r64_r64         
                                                                              jmpq %r11                  #  41    0x49  3      OPC=jmpq_r64             
                                                                                                                                                        
                                                                            .size wcslen, .-wcslen                                                      
                                                                                                                                                        

********************************************************************************

Progress Update: 

Lowest Cost Discovered (33)                                                 Lowest Known Correct Cost (35)                                              
                                                                                                                                                        
  .text                                                                       .text                                                                     
  .globl wcslen                                                               .globl wcslen                                                             
  .type wcslen, @function                                                     .type wcslen, @function                                                   
                                                                                                                                                        
#! file-offset 0                                                            #! file-offset 0                                                            
#! rip-offset  0                                                            #! rip-offset  0                                                            
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                      
                                                                                                                                                        
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                    nop                        #  1     0     1      OPC=nop                  
  notq %rdi                  #  2     0x1   3      OPC=notq_r64               nop                        #  2     0x1   1      OPC=nop                  
  xorl %eax, %eax            #  3     0x4   2      OPC=xorl_r32_r32           notw %di                   #  3     0x2   3      OPC=notw_r16             
  movl (%r15,%rax,1), %r13d  #  4     0x6   4      OPC=movl_r32_m32           nop                        #  4     0x5   1      OPC=nop                  
  nop                        #  5     0xa   1      OPC=nop                    xorl %eax, %eax            #  5     0x6   2      OPC=xorl_r32_r32         
  movl %r15d, %ecx           #  6     0xb   3      OPC=movl_r32_r32_1         movl (%r15,%rax,1), %r13d  #  6     0x8   4      OPC=movl_r32_m32         
  nop                        #  7     0xe   1      OPC=nop                    nop                        #  7     0xc   1      OPC=nop                  
  nop                        #  8     0xf   1      OPC=nop                    nop                        #  8     0xd   1      OPC=nop                  
  xorb %al, %r13b            #  9     0x10  3      OPC=xorb_r8_r8             movl %r15d, %ecx           #  9     0xe   3      OPC=movl_r32_r32_1       
  je .L_142ce0               #  10    0x13  2      OPC=je_label               nop                        #  10    0x11  1      OPC=nop                  
  nop                        #  11    0x15  1      OPC=nop                    xorb %r13b, %al            #  11    0x12  3      OPC=xorb_r8_r8           
  nop                        #  12    0x16  1      OPC=nop                    je .L_142ce0               #  12    0x15  2      OPC=je_label             
  subl %r13d, %edi           #  13    0x17  3      OPC=subl_r32_r32_1         nop                        #  13    0x17  1      OPC=nop                  
  nop                        #  14    0x1a  1      OPC=nop                    nop                        #  14    0x18  1      OPC=nop                  
  nop                        #  15    0x1b  1      OPC=nop                    incw %di                   #  15    0x19  3      OPC=incw_r16             
  shlw $0x1, %ax             #  16    0x1c  4      OPC=shlw_r16_imm8          nop                        #  16    0x1c  1      OPC=nop                  
.L_142cc0:                   #        0x20  0      OPC=<label>                nop                        #  17    0x1d  1      OPC=nop                  
  notb %r13b                 #  17    0x20  3      OPC=notb_r8                shlb $0x1, %al             #  18    0x1e  2      OPC=shlb_r8_one          
  jne .L_142cc0              #  18    0x23  2      OPC=jne_label            .L_142cc0:                   #        0x20  0      OPC=<label>              
  nop                        #  19    0x25  1      OPC=nop                    orb %ah, %ch               #  19    0x20  2      OPC=orb_rh_rh            
  xorb %ch, %ah              #  20    0x26  2      OPC=xorb_rh_rh_1           jne .L_142cc0              #  20    0x22  2      OPC=jne_label            
  orw %di, %ax               #  21    0x28  3      OPC=orw_r16_r16            nop                        #  21    0x24  1      OPC=nop                  
  nop                        #  22    0x2b  1      OPC=nop                    nop                        #  22    0x25  1      OPC=nop                  
  nopl %eax                  #  23    0x2c  3      OPC=nopl_r32               nop                        #  23    0x26  1      OPC=nop                  
  nop                        #  24    0x2f  1      OPC=nop                    nop                        #  24    0x27  1      OPC=nop                  
  nop                        #  25    0x30  1      OPC=nop                    xorb %ah, %ah              #  25    0x28  2      OPC=xorb_rh_rh_1         
  nop                        #  26    0x31  1      OPC=nop                    orw %di, %ax               #  26    0x2a  3      OPC=orw_r16_r16          
  nop                        #  27    0x32  1      OPC=nop                    nop                        #  27    0x2d  1      OPC=nop                  
  nop                        #  28    0x33  1      OPC=nop                    nopl %eax                  #  28    0x2e  3      OPC=nopl_r32             
  nopl %eax                  #  29    0x34  3      OPC=nopl_r32               nop                        #  29    0x31  1      OPC=nop                  
  nopl %eax                  #  30    0x37  3      OPC=nopl_r32               nop                        #  30    0x32  1      OPC=nop                  
  nopl %eax                  #  31    0x3a  3      OPC=nopl_r32               nop                        #  31    0x33  1      OPC=nop                  
  nop                        #  32    0x3d  1      OPC=nop                    nop                        #  32    0x34  1      OPC=nop                  
.L_142ce0:                   #        0x3e  0      OPC=<label>                nop                        #  33    0x35  1      OPC=nop                  
  popq %r11                  #  33    0x3e  2      OPC=popq_r64_1             nopl %eax                  #  34    0x36  3      OPC=nopl_r32             
  andl $0xe0, %r11d          #  34    0x40  4      OPC=andl_r32_imm8          nopl %eax                  #  35    0x39  3      OPC=nopl_r32             
  addq %r15, %r11            #  35    0x44  3      OPC=addq_r64_r64           nop                        #  36    0x3c  1      OPC=nop                  
  jmpq %r11                  #  36    0x47  3      OPC=jmpq_r64               nopl %eax                  #  37    0x3d  3      OPC=nopl_r32             
                                                                            .L_142ce0:                   #        0x40  0      OPC=<label>              
.size wcslen, .-wcslen                                                        popq %r11                  #  38    0x40  2      OPC=popq_r64_1           
                                                                              andl $0xe0, %r11d          #  39    0x42  4      OPC=andl_r32_imm8        
                                                                              addq %r15, %r11            #  40    0x46  3      OPC=addq_r64_r64         
                                                                              jmpq %r11                  #  41    0x49  3      OPC=jmpq_r64             
                                                                                                                                                        
                                                                            .size wcslen, .-wcslen                                                      
                                                                                                                                                        

********************************************************************************

Progress Update: 

Lowest Cost Discovered (33)                                                 Lowest Known Correct Cost (33)                                              
                                                                                                                                                        
  .text                                                                       .text                                                                     
  .globl wcslen                                                               .globl wcslen                                                             
  .type wcslen, @function                                                     .type wcslen, @function                                                   
                                                                                                                                                        
#! file-offset 0                                                            #! file-offset 0                                                            
#! rip-offset  0                                                            #! rip-offset  0                                                            
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                      
                                                                                                                                                        
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                    nop                        #  1     0     1      OPC=nop                  
  notq %rdi                  #  2     0x1   3      OPC=notq_r64               notq %rdi                  #  2     0x1   3      OPC=notq_r64             
  xorl %eax, %eax            #  3     0x4   2      OPC=xorl_r32_r32           xorl %eax, %eax            #  3     0x4   2      OPC=xorl_r32_r32         
  movl (%r15,%rax,1), %r13d  #  4     0x6   4      OPC=movl_r32_m32           movl (%r15,%rax,1), %r13d  #  4     0x6   4      OPC=movl_r32_m32         
  nop                        #  5     0xa   1      OPC=nop                    nop                        #  5     0xa   1      OPC=nop                  
  movl %r15d, %ecx           #  6     0xb   3      OPC=movl_r32_r32_1         movl %r15d, %ecx           #  6     0xb   3      OPC=movl_r32_r32_1       
  nop                        #  7     0xe   1      OPC=nop                    nop                        #  7     0xe   1      OPC=nop                  
  nop                        #  8     0xf   1      OPC=nop                    nop                        #  8     0xf   1      OPC=nop                  
  xorb %al, %r13b            #  9     0x10  3      OPC=xorb_r8_r8             xorb %al, %r13b            #  9     0x10  3      OPC=xorb_r8_r8           
  je .L_142ce0               #  10    0x13  2      OPC=je_label               je .L_142ce0               #  10    0x13  2      OPC=je_label             
  nop                        #  11    0x15  1      OPC=nop                    nop                        #  11    0x15  1      OPC=nop                  
  nop                        #  12    0x16  1      OPC=nop                    nop                        #  12    0x16  1      OPC=nop                  
  subl %r13d, %edi           #  13    0x17  3      OPC=subl_r32_r32_1         subl %r13d, %edi           #  13    0x17  3      OPC=subl_r32_r32_1       
  nop                        #  14    0x1a  1      OPC=nop                    nop                        #  14    0x1a  1      OPC=nop                  
  nop                        #  15    0x1b  1      OPC=nop                    nop                        #  15    0x1b  1      OPC=nop                  
  shlw $0x1, %ax             #  16    0x1c  4      OPC=shlw_r16_imm8          shlw $0x1, %ax             #  16    0x1c  4      OPC=shlw_r16_imm8        
.L_142cc0:                   #        0x20  0      OPC=<label>              .L_142cc0:                   #        0x20  0      OPC=<label>              
  notb %r13b                 #  17    0x20  3      OPC=notb_r8                notb %r13b                 #  17    0x20  3      OPC=notb_r8              
  jne .L_142cc0              #  18    0x23  2      OPC=jne_label              jne .L_142cc0              #  18    0x23  2      OPC=jne_label            
  nop                        #  19    0x25  1      OPC=nop                    nop                        #  19    0x25  1      OPC=nop                  
  xorb %ch, %ah              #  20    0x26  2      OPC=xorb_rh_rh_1           xorb %ch, %ah              #  20    0x26  2      OPC=xorb_rh_rh_1         
  orw %di, %ax               #  21    0x28  3      OPC=orw_r16_r16            nop                        #  21    0x28  1      OPC=nop                  
  nop                        #  22    0x2b  1      OPC=nop                    orw %di, %ax               #  22    0x29  3      OPC=orw_r16_r16          
  nopl %eax                  #  23    0x2c  3      OPC=nopl_r32               nop                        #  23    0x2c  1      OPC=nop                  
  nop                        #  24    0x2f  1      OPC=nop                    nopl %eax                  #  24    0x2d  3      OPC=nopl_r32             
  nop                        #  25    0x30  1      OPC=nop                    nop                        #  25    0x30  1      OPC=nop                  
  nop                        #  26    0x31  1      OPC=nop                    nop                        #  26    0x31  1      OPC=nop                  
  nop                        #  27    0x32  1      OPC=nop                    nop                        #  27    0x32  1      OPC=nop                  
  nop                        #  28    0x33  1      OPC=nop                    nop                        #  28    0x33  1      OPC=nop                  
  nopl %eax                  #  29    0x34  3      OPC=nopl_r32               nop                        #  29    0x34  1      OPC=nop                  
  nopl %eax                  #  30    0x37  3      OPC=nopl_r32               nop                        #  30    0x35  1      OPC=nop                  
  nopl %eax                  #  31    0x3a  3      OPC=nopl_r32               nopl %eax                  #  31    0x36  3      OPC=nopl_r32             
  nop                        #  32    0x3d  1      OPC=nop                    nopl %eax                  #  32    0x39  3      OPC=nopl_r32             
.L_142ce0:                   #        0x3e  0      OPC=<label>                nopl %eax                  #  33    0x3c  3      OPC=nopl_r32             
  popq %r11                  #  33    0x3e  2      OPC=popq_r64_1             nop                        #  34    0x3f  1      OPC=nop                  
  andl $0xe0, %r11d          #  34    0x40  4      OPC=andl_r32_imm8        .L_142ce0:                   #        0x40  0      OPC=<label>              
  addq %r15, %r11            #  35    0x44  3      OPC=addq_r64_r64           popq %r11                  #  35    0x40  2      OPC=popq_r64_1           
  jmpq %r11                  #  36    0x47  3      OPC=jmpq_r64               andl $0xe0, %r11d          #  36    0x42  4      OPC=andl_r32_imm8        
                                                                              addq %r15, %r11            #  37    0x46  3      OPC=addq_r64_r64         
.size wcslen, .-wcslen                                                        jmpq %r11                  #  38    0x49  3      OPC=jmpq_r64             
                                                                                                                                                        
                                                                            .size wcslen, .-wcslen                                                      
                                                                                                                                                        

********************************************************************************

Progress Update: 

Lowest Cost Discovered (32)                                                 Lowest Known Correct Cost (33)                                              
                                                                                                                                                        
  .text                                                                       .text                                                                     
  .globl wcslen                                                               .globl wcslen                                                             
  .type wcslen, @function                                                     .type wcslen, @function                                                   
                                                                                                                                                        
#! file-offset 0                                                            #! file-offset 0                                                            
#! rip-offset  0                                                            #! rip-offset  0                                                            
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                      
                                                                                                                                                        
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                    nop                        #  1     0     1      OPC=nop                  
  nopl %eax                  #  2     0x1   3      OPC=nopl_r32               notq %rdi                  #  2     0x1   3      OPC=notq_r64             
  xorl %eax, %eax            #  3     0x4   2      OPC=xorl_r32_r32           xorl %eax, %eax            #  3     0x4   2      OPC=xorl_r32_r32         
  movl (%r15,%rax,1), %r13d  #  4     0x6   4      OPC=movl_r32_m32           movl (%r15,%rax,1), %r13d  #  4     0x6   4      OPC=movl_r32_m32         
  movl %r15d, %ecx           #  5     0xa   3      OPC=movl_r32_r32_1         nop                        #  5     0xa   1      OPC=nop                  
  nop                        #  6     0xd   1      OPC=nop                    movl %r15d, %ecx           #  6     0xb   3      OPC=movl_r32_r32_1       
  nop                        #  7     0xe   1      OPC=nop                    nop                        #  7     0xe   1      OPC=nop                  
  xorb %al, %r13b            #  8     0xf   3      OPC=xorb_r8_r8             nop                        #  8     0xf   1      OPC=nop                  
  je .L_142ce0               #  9     0x12  2      OPC=je_label               xorb %al, %r13b            #  9     0x10  3      OPC=xorb_r8_r8           
  notb %ch                   #  10    0x14  2      OPC=notb_rh                je .L_142ce0               #  10    0x13  2      OPC=je_label             
  nop                        #  11    0x16  1      OPC=nop                    nop                        #  11    0x15  1      OPC=nop                  
  subl %r13d, %ecx           #  12    0x17  3      OPC=subl_r32_r32_1         nop                        #  12    0x16  1      OPC=nop                  
  nop                        #  13    0x1a  1      OPC=nop                    subl %r13d, %edi           #  13    0x17  3      OPC=subl_r32_r32_1       
  nop                        #  14    0x1b  1      OPC=nop                    nop                        #  14    0x1a  1      OPC=nop                  
  shlw $0x1, %ax             #  15    0x1c  4      OPC=shlw_r16_imm8          nop                        #  15    0x1b  1      OPC=nop                  
.L_142cc0:                   #        0x20  0      OPC=<label>                shlw $0x1, %ax             #  16    0x1c  4      OPC=shlw_r16_imm8        
  notb %r13b                 #  16    0x20  3      OPC=notb_r8              .L_142cc0:                   #        0x20  0      OPC=<label>              
  jne .L_142cc0              #  17    0x23  2      OPC=jne_label              notb %r13b                 #  17    0x20  3      OPC=notb_r8              
  nop                        #  18    0x25  1      OPC=nop                    jne .L_142cc0              #  18    0x23  2      OPC=jne_label            
  xorb %ch, %ah              #  19    0x26  2      OPC=xorb_rh_rh_1           nop                        #  19    0x25  1      OPC=nop                  
  nop                        #  20    0x28  1      OPC=nop                    xorb %ch, %ah              #  20    0x26  2      OPC=xorb_rh_rh_1         
  orw %ax, %ax               #  21    0x29  3      OPC=orw_r16_r16            nop                        #  21    0x28  1      OPC=nop                  
  nopl %eax                  #  22    0x2c  3      OPC=nopl_r32               orw %di, %ax               #  22    0x29  3      OPC=orw_r16_r16          
  nop                        #  23    0x2f  1      OPC=nop                    nop                        #  23    0x2c  1      OPC=nop                  
  nop                        #  24    0x30  1      OPC=nop                    nopl %eax                  #  24    0x2d  3      OPC=nopl_r32             
  nop                        #  25    0x31  1      OPC=nop                    nop                        #  25    0x30  1      OPC=nop                  
  nop                        #  26    0x32  1      OPC=nop                    nop                        #  26    0x31  1      OPC=nop                  
  shrb $0xfb, %ah            #  27    0x33  3      OPC=shrb_rh_imm8           nop                        #  27    0x32  1      OPC=nop                  
  nop                        #  28    0x36  1      OPC=nop                    nop                        #  28    0x33  1      OPC=nop                  
  nopl %eax                  #  29    0x37  3      OPC=nopl_r32               nop                        #  29    0x34  1      OPC=nop                  
  nopl %eax                  #  30    0x3a  3      OPC=nopl_r32               nop                        #  30    0x35  1      OPC=nop                  
  nopl %eax                  #  31    0x3d  3      OPC=nopl_r32               nopl %eax                  #  31    0x36  3      OPC=nopl_r32             
  nop                        #  32    0x40  1      OPC=nop                    nopl %eax                  #  32    0x39  3      OPC=nopl_r32             
.L_142ce0:                   #        0x41  0      OPC=<label>                nopl %eax                  #  33    0x3c  3      OPC=nopl_r32             
  popq %r11                  #  33    0x41  2      OPC=popq_r64_1             nop                        #  34    0x3f  1      OPC=nop                  
  andl $0xe0, %r11d          #  34    0x43  4      OPC=andl_r32_imm8        .L_142ce0:                   #        0x40  0      OPC=<label>              
  addq %r15, %r11            #  35    0x47  3      OPC=addq_r64_r64           popq %r11                  #  35    0x40  2      OPC=popq_r64_1           
  jmpq %r11                  #  36    0x4a  3      OPC=jmpq_r64               andl $0xe0, %r11d          #  36    0x42  4      OPC=andl_r32_imm8        
                                                                              addq %r15, %r11            #  37    0x46  3      OPC=addq_r64_r64         
.size wcslen, .-wcslen                                                        jmpq %r11                  #  38    0x49  3      OPC=jmpq_r64             
                                                                                                                                                        
                                                                            .size wcslen, .-wcslen                                                      
                                                                                                                                                        

********************************************************************************

Progress Update: 

Lowest Cost Discovered (31)                                                 Lowest Known Correct Cost (33)                                              
                                                                                                                                                        
  .text                                                                       .text                                                                     
  .globl wcslen                                                               .globl wcslen                                                             
  .type wcslen, @function                                                     .type wcslen, @function                                                   
                                                                                                                                                        
#! file-offset 0                                                            #! file-offset 0                                                            
#! rip-offset  0                                                            #! rip-offset  0                                                            
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                      
                                                                                                                                                        
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                    nop                        #  1     0     1      OPC=nop                  
  nopl %eax                  #  2     0x1   3      OPC=nopl_r32               notq %rdi                  #  2     0x1   3      OPC=notq_r64             
  xorl %eax, %eax            #  3     0x4   2      OPC=xorl_r32_r32           xorl %eax, %eax            #  3     0x4   2      OPC=xorl_r32_r32         
  movl (%r15,%rax,1), %r13d  #  4     0x6   4      OPC=movl_r32_m32           movl (%r15,%rax,1), %r13d  #  4     0x6   4      OPC=movl_r32_m32         
  movl %r15d, %ecx           #  5     0xa   3      OPC=movl_r32_r32_1         nop                        #  5     0xa   1      OPC=nop                  
  nop                        #  6     0xd   1      OPC=nop                    movl %r15d, %ecx           #  6     0xb   3      OPC=movl_r32_r32_1       
  xorb %al, %r13b            #  7     0xe   3      OPC=xorb_r8_r8             nop                        #  7     0xe   1      OPC=nop                  
  nop                        #  8     0x11  1      OPC=nop                    nop                        #  8     0xf   1      OPC=nop                  
  je .L_142ce0               #  9     0x12  2      OPC=je_label               xorb %al, %r13b            #  9     0x10  3      OPC=xorb_r8_r8           
  notb %ah                   #  10    0x14  2      OPC=notb_rh                je .L_142ce0               #  10    0x13  2      OPC=je_label             
  nop                        #  11    0x16  1      OPC=nop                    nop                        #  11    0x15  1      OPC=nop                  
  subl %r13d, %eax           #  12    0x17  3      OPC=subl_r32_r32_1         nop                        #  12    0x16  1      OPC=nop                  
  shlw $0x1, %ax             #  13    0x1a  4      OPC=shlw_r16_imm8          subl %r13d, %edi           #  13    0x17  3      OPC=subl_r32_r32_1       
.L_142cc0:                   #        0x1e  0      OPC=<label>                nop                        #  14    0x1a  1      OPC=nop                  
  notb %r13b                 #  14    0x1e  3      OPC=notb_r8                nop                        #  15    0x1b  1      OPC=nop                  
  jne .L_142cc0              #  15    0x21  2      OPC=jne_label              shlw $0x1, %ax             #  16    0x1c  4      OPC=shlw_r16_imm8        
  nop                        #  16    0x23  1      OPC=nop                  .L_142cc0:                   #        0x20  0      OPC=<label>              
  xorb %ch, %ah              #  17    0x24  2      OPC=xorb_rh_rh_1           notb %r13b                 #  17    0x20  3      OPC=notb_r8              
  nop                        #  18    0x26  1      OPC=nop                    jne .L_142cc0              #  18    0x23  2      OPC=jne_label            
  nopl %eax                  #  19    0x27  3      OPC=nopl_r32               nop                        #  19    0x25  1      OPC=nop                  
  nop                        #  20    0x2a  1      OPC=nop                    xorb %ch, %ah              #  20    0x26  2      OPC=xorb_rh_rh_1         
  nop                        #  21    0x2b  1      OPC=nop                    nop                        #  21    0x28  1      OPC=nop                  
  shrb $0xfb, %ah            #  22    0x2c  3      OPC=shrb_rh_imm8           orw %di, %ax               #  22    0x29  3      OPC=orw_r16_r16          
  nop                        #  23    0x2f  1      OPC=nop                    nop                        #  23    0x2c  1      OPC=nop                  
  nop                        #  24    0x30  1      OPC=nop                    nopl %eax                  #  24    0x2d  3      OPC=nopl_r32             
  nop                        #  25    0x31  1      OPC=nop                    nop                        #  25    0x30  1      OPC=nop                  
  nopl %eax                  #  26    0x32  3      OPC=nopl_r32               nop                        #  26    0x31  1      OPC=nop                  
  nopl %eax                  #  27    0x35  3      OPC=nopl_r32               nop                        #  27    0x32  1      OPC=nop                  
  nopl %eax                  #  28    0x38  3      OPC=nopl_r32               nop                        #  28    0x33  1      OPC=nop                  
  nopl %eax                  #  29    0x3b  3      OPC=nopl_r32               nop                        #  29    0x34  1      OPC=nop                  
  nop                        #  30    0x3e  1      OPC=nop                    nop                        #  30    0x35  1      OPC=nop                  
.L_142ce0:                   #        0x3f  0      OPC=<label>                nopl %eax                  #  31    0x36  3      OPC=nopl_r32             
  popq %r11                  #  31    0x3f  2      OPC=popq_r64_1             nopl %eax                  #  32    0x39  3      OPC=nopl_r32             
  andl $0xe0, %r11d          #  32    0x41  4      OPC=andl_r32_imm8          nopl %eax                  #  33    0x3c  3      OPC=nopl_r32             
  addq %r15, %r11            #  33    0x45  3      OPC=addq_r64_r64           nop                        #  34    0x3f  1      OPC=nop                  
  jmpq %r11                  #  34    0x48  3      OPC=jmpq_r64             .L_142ce0:                   #        0x40  0      OPC=<label>              
                                                                              popq %r11                  #  35    0x40  2      OPC=popq_r64_1           
.size wcslen, .-wcslen                                                        andl $0xe0, %r11d          #  36    0x42  4      OPC=andl_r32_imm8        
                                                                              addq %r15, %r11            #  37    0x46  3      OPC=addq_r64_r64         
                                                                              jmpq %r11                  #  38    0x49  3      OPC=jmpq_r64             
                                                                                                                                                        
                                                                            .size wcslen, .-wcslen                                                      
                                                                                                                                                        

********************************************************************************

Progress Update: 

Lowest Cost Discovered (29)                                                 Lowest Known Correct Cost (33)                                              
                                                                                                                                                        
  .text                                                                       .text                                                                     
  .globl wcslen                                                               .globl wcslen                                                             
  .type wcslen, @function                                                     .type wcslen, @function                                                   
                                                                                                                                                        
#! file-offset 0                                                            #! file-offset 0                                                            
#! rip-offset  0                                                            #! rip-offset  0                                                            
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                      
                                                                                                                                                        
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                    nop                        #  1     0     1      OPC=nop                  
  nop                        #  2     0x1   1      OPC=nop                    notq %rdi                  #  2     0x1   3      OPC=notq_r64             
  nopl %eax                  #  3     0x2   3      OPC=nopl_r32               xorl %eax, %eax            #  3     0x4   2      OPC=xorl_r32_r32         
  xorl %eax, %eax            #  4     0x5   2      OPC=xorl_r32_r32           movl (%r15,%rax,1), %r13d  #  4     0x6   4      OPC=movl_r32_m32         
  movl (%r15,%rax,1), %r13d  #  5     0x7   4      OPC=movl_r32_m32           nop                        #  5     0xa   1      OPC=nop                  
  movl %r13d, %ecx           #  6     0xb   3      OPC=movl_r32_r32_1         movl %r15d, %ecx           #  6     0xb   3      OPC=movl_r32_r32_1       
  nop                        #  7     0xe   1      OPC=nop                    nop                        #  7     0xe   1      OPC=nop                  
  xorb %al, %r13b            #  8     0xf   3      OPC=xorb_r8_r8             nop                        #  8     0xf   1      OPC=nop                  
  nop                        #  9     0x12  1      OPC=nop                    xorb %al, %r13b            #  9     0x10  3      OPC=xorb_r8_r8           
  je .L_142ce0               #  10    0x13  2      OPC=je_label               je .L_142ce0               #  10    0x13  2      OPC=je_label             
  notb %ah                   #  11    0x15  2      OPC=notb_rh                nop                        #  11    0x15  1      OPC=nop                  
  nop                        #  12    0x17  1      OPC=nop                    nop                        #  12    0x16  1      OPC=nop                  
  subl %r13d, %eax           #  13    0x18  3      OPC=subl_r32_r32_1         subl %r13d, %edi           #  13    0x17  3      OPC=subl_r32_r32_1       
  shlw $0x1, %ax             #  14    0x1b  4      OPC=shlw_r16_imm8          nop                        #  14    0x1a  1      OPC=nop                  
.L_142cc0:                   #        0x1f  0      OPC=<label>                nop                        #  15    0x1b  1      OPC=nop                  
  notb %r13b                 #  15    0x1f  3      OPC=notb_r8                shlw $0x1, %ax             #  16    0x1c  4      OPC=shlw_r16_imm8        
  jne .L_142cc0              #  16    0x22  2      OPC=jne_label            .L_142cc0:                   #        0x20  0      OPC=<label>              
  nop                        #  17    0x24  1      OPC=nop                    notb %r13b                 #  17    0x20  3      OPC=notb_r8              
  xorb %ch, %ah              #  18    0x25  2      OPC=xorb_rh_rh_1           jne .L_142cc0              #  18    0x23  2      OPC=jne_label            
  nop                        #  19    0x27  1      OPC=nop                    nop                        #  19    0x25  1      OPC=nop                  
  nopl %eax                  #  20    0x28  3      OPC=nopl_r32               xorb %ch, %ah              #  20    0x26  2      OPC=xorb_rh_rh_1         
  nop                        #  21    0x2b  1      OPC=nop                    nop                        #  21    0x28  1      OPC=nop                  
  nop                        #  22    0x2c  1      OPC=nop                    orw %di, %ax               #  22    0x29  3      OPC=orw_r16_r16          
  shrb $0xfb, %ah            #  23    0x2d  3      OPC=shrb_rh_imm8           nop                        #  23    0x2c  1      OPC=nop                  
  nop                        #  24    0x30  1      OPC=nop                    nopl %eax                  #  24    0x2d  3      OPC=nopl_r32             
  nop                        #  25    0x31  1      OPC=nop                    nop                        #  25    0x30  1      OPC=nop                  
  nopl %eax                  #  26    0x32  3      OPC=nopl_r32               nop                        #  26    0x31  1      OPC=nop                  
  nopl %eax                  #  27    0x35  3      OPC=nopl_r32               nop                        #  27    0x32  1      OPC=nop                  
  nopl %eax                  #  28    0x38  3      OPC=nopl_r32               nop                        #  28    0x33  1      OPC=nop                  
  nopl %eax                  #  29    0x3b  3      OPC=nopl_r32               nop                        #  29    0x34  1      OPC=nop                  
  nop                        #  30    0x3e  1      OPC=nop                    nop                        #  30    0x35  1      OPC=nop                  
.L_142ce0:                   #        0x3f  0      OPC=<label>                nopl %eax                  #  31    0x36  3      OPC=nopl_r32             
  popq %r11                  #  31    0x3f  2      OPC=popq_r64_1             nopl %eax                  #  32    0x39  3      OPC=nopl_r32             
  andl $0xe0, %r11d          #  32    0x41  4      OPC=andl_r32_imm8          nopl %eax                  #  33    0x3c  3      OPC=nopl_r32             
  addq %r15, %r11            #  33    0x45  3      OPC=addq_r64_r64           nop                        #  34    0x3f  1      OPC=nop                  
  jmpq %r11                  #  34    0x48  3      OPC=jmpq_r64             .L_142ce0:                   #        0x40  0      OPC=<label>              
                                                                              popq %r11                  #  35    0x40  2      OPC=popq_r64_1           
.size wcslen, .-wcslen                                                        andl $0xe0, %r11d          #  36    0x42  4      OPC=andl_r32_imm8        
                                                                              addq %r15, %r11            #  37    0x46  3      OPC=addq_r64_r64         
                                                                              jmpq %r11                  #  38    0x49  3      OPC=jmpq_r64             
                                                                                                                                                        
                                                                            .size wcslen, .-wcslen                                                      
                                                                                                                                                        

********************************************************************************

Progress Update: 

Lowest Cost Discovered (29)                                                 Lowest Known Correct Cost (29)                                              
                                                                                                                                                        
  .text                                                                       .text                                                                     
  .globl wcslen                                                               .globl wcslen                                                             
  .type wcslen, @function                                                     .type wcslen, @function                                                   
                                                                                                                                                        
#! file-offset 0                                                            #! file-offset 0                                                            
#! rip-offset  0                                                            #! rip-offset  0                                                            
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                      
                                                                                                                                                        
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                    nop                        #  1     0     1      OPC=nop                  
  nop                        #  2     0x1   1      OPC=nop                    nop                        #  2     0x1   1      OPC=nop                  
  nopl %eax                  #  3     0x2   3      OPC=nopl_r32               nopl %eax                  #  3     0x2   3      OPC=nopl_r32             
  xorl %eax, %eax            #  4     0x5   2      OPC=xorl_r32_r32           xorl %eax, %eax            #  4     0x5   2      OPC=xorl_r32_r32         
  movl (%r15,%rax,1), %r13d  #  5     0x7   4      OPC=movl_r32_m32           movl (%r15,%rax,1), %r13d  #  5     0x7   4      OPC=movl_r32_m32         
  movl %r13d, %ecx           #  6     0xb   3      OPC=movl_r32_r32_1         nop                        #  6     0xb   1      OPC=nop                  
  nop                        #  7     0xe   1      OPC=nop                    movl %r13d, %ecx           #  7     0xc   3      OPC=movl_r32_r32_1       
  xorb %al, %r13b            #  8     0xf   3      OPC=xorb_r8_r8             nop                        #  8     0xf   1      OPC=nop                  
  nop                        #  9     0x12  1      OPC=nop                    xorb %al, %r13b            #  9     0x10  3      OPC=xorb_r8_r8           
  je .L_142ce0               #  10    0x13  2      OPC=je_label               nop                        #  10    0x13  1      OPC=nop                  
  notb %ah                   #  11    0x15  2      OPC=notb_rh                je .L_142ce0               #  11    0x14  2      OPC=je_label             
  nop                        #  12    0x17  1      OPC=nop                    notb %ah                   #  12    0x16  2      OPC=notb_rh              
  subl %r13d, %eax           #  13    0x18  3      OPC=subl_r32_r32_1         nop                        #  13    0x18  1      OPC=nop                  
  shlw $0x1, %ax             #  14    0x1b  4      OPC=shlw_r16_imm8          subl %r13d, %eax           #  14    0x19  3      OPC=subl_r32_r32_1       
.L_142cc0:                   #        0x1f  0      OPC=<label>                shlw $0x1, %ax             #  15    0x1c  4      OPC=shlw_r16_imm8        
  notb %r13b                 #  15    0x1f  3      OPC=notb_r8              .L_142cc0:                   #        0x20  0      OPC=<label>              
  jne .L_142cc0              #  16    0x22  2      OPC=jne_label              notb %r13b                 #  16    0x20  3      OPC=notb_r8              
  nop                        #  17    0x24  1      OPC=nop                    jne .L_142cc0              #  17    0x23  2      OPC=jne_label            
  xorb %ch, %ah              #  18    0x25  2      OPC=xorb_rh_rh_1           nop                        #  18    0x25  1      OPC=nop                  
  nop                        #  19    0x27  1      OPC=nop                    xorb %ch, %ah              #  19    0x26  2      OPC=xorb_rh_rh_1         
  nopl %eax                  #  20    0x28  3      OPC=nopl_r32               nop                        #  20    0x28  1      OPC=nop                  
  nop                        #  21    0x2b  1      OPC=nop                    nopl %eax                  #  21    0x29  3      OPC=nopl_r32             
  nop                        #  22    0x2c  1      OPC=nop                    nop                        #  22    0x2c  1      OPC=nop                  
  shrb $0xfb, %ah            #  23    0x2d  3      OPC=shrb_rh_imm8           nop                        #  23    0x2d  1      OPC=nop                  
  nop                        #  24    0x30  1      OPC=nop                    shrb $0xfb, %ah            #  24    0x2e  3      OPC=shrb_rh_imm8         
  nop                        #  25    0x31  1      OPC=nop                    nop                        #  25    0x31  1      OPC=nop                  
  nopl %eax                  #  26    0x32  3      OPC=nopl_r32               nop                        #  26    0x32  1      OPC=nop                  
  nopl %eax                  #  27    0x35  3      OPC=nopl_r32               nopl %eax                  #  27    0x33  3      OPC=nopl_r32             
  nopl %eax                  #  28    0x38  3      OPC=nopl_r32               nopl %eax                  #  28    0x36  3      OPC=nopl_r32             
  nopl %eax                  #  29    0x3b  3      OPC=nopl_r32               nopl %eax                  #  29    0x39  3      OPC=nopl_r32             
  nop                        #  30    0x3e  1      OPC=nop                    nopl %eax                  #  30    0x3c  3      OPC=nopl_r32             
.L_142ce0:                   #        0x3f  0      OPC=<label>                nop                        #  31    0x3f  1      OPC=nop                  
  popq %r11                  #  31    0x3f  2      OPC=popq_r64_1           .L_142ce0:                   #        0x40  0      OPC=<label>              
  andl $0xe0, %r11d          #  32    0x41  4      OPC=andl_r32_imm8          popq %r11                  #  32    0x40  2      OPC=popq_r64_1           
  addq %r15, %r11            #  33    0x45  3      OPC=addq_r64_r64           andl $0xe0, %r11d          #  33    0x42  4      OPC=andl_r32_imm8        
  jmpq %r11                  #  34    0x48  3      OPC=jmpq_r64               addq %r15, %r11            #  34    0x46  3      OPC=addq_r64_r64         
                                                                              jmpq %r11                  #  35    0x49  3      OPC=jmpq_r64             
.size wcslen, .-wcslen                                                                                                                                  
                                                                            .size wcslen, .-wcslen                                                      
                                                                                                                                                        

********************************************************************************

Progress Update: 

Lowest Cost Discovered (27)                                                 Lowest Known Correct Cost (29)                                              
                                                                                                                                                        
  .text                                                                       .text                                                                     
  .globl wcslen                                                               .globl wcslen                                                             
  .type wcslen, @function                                                     .type wcslen, @function                                                   
                                                                                                                                                        
#! file-offset 0                                                            #! file-offset 0                                                            
#! rip-offset  0                                                            #! rip-offset  0                                                            
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                      
                                                                                                                                                        
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                    nop                        #  1     0     1      OPC=nop                  
  xorl %eax, %eax            #  2     0x1   2      OPC=xorl_r32_r32           nop                        #  2     0x1   1      OPC=nop                  
  nopl %eax                  #  3     0x3   3      OPC=nopl_r32               nopl %eax                  #  3     0x2   3      OPC=nopl_r32             
  nop                        #  4     0x6   1      OPC=nop                    xorl %eax, %eax            #  4     0x5   2      OPC=xorl_r32_r32         
  nopl %eax                  #  5     0x7   3      OPC=nopl_r32               movl (%r15,%rax,1), %r13d  #  5     0x7   4      OPC=movl_r32_m32         
  andl %r15d, %eax           #  6     0xa   3      OPC=andl_r32_r32           nop                        #  6     0xb   1      OPC=nop                  
  movl (%r15,%rax,1), %r13d  #  7     0xd   4      OPC=movl_r32_m32           movl %r13d, %ecx           #  7     0xc   3      OPC=movl_r32_r32_1       
  nop                        #  8     0x11  1      OPC=nop                    nop                        #  8     0xf   1      OPC=nop                  
  nop                        #  9     0x12  1      OPC=nop                    xorb %al, %r13b            #  9     0x10  3      OPC=xorb_r8_r8           
  nop                        #  10    0x13  1      OPC=nop                    nop                        #  10    0x13  1      OPC=nop                  
  je .L_142ce0               #  11    0x14  2      OPC=je_label               je .L_142ce0               #  11    0x14  2      OPC=je_label             
  nop                        #  12    0x16  1      OPC=nop                    notb %ah                   #  12    0x16  2      OPC=notb_rh              
  shlw $0x1, %r13w           #  13    0x17  5      OPC=shlw_r16_imm8          nop                        #  13    0x18  1      OPC=nop                  
  nop                        #  14    0x1c  1      OPC=nop                    subl %r13d, %eax           #  14    0x19  3      OPC=subl_r32_r32_1       
  addl %r15d, %r13d          #  15    0x1d  3      OPC=addl_r32_r32           shlw $0x1, %ax             #  15    0x1c  4      OPC=shlw_r16_imm8        
.L_142cc0:                   #        0x20  0      OPC=<label>              .L_142cc0:                   #        0x20  0      OPC=<label>              
  jne .L_142cc0              #  16    0x20  2      OPC=jne_label              notb %r13b                 #  16    0x20  3      OPC=notb_r8              
  nop                        #  17    0x22  1      OPC=nop                    jne .L_142cc0              #  17    0x23  2      OPC=jne_label            
  nop                        #  18    0x23  1      OPC=nop                    nop                        #  18    0x25  1      OPC=nop                  
  nop                        #  19    0x24  1      OPC=nop                    xorb %ch, %ah              #  19    0x26  2      OPC=xorb_rh_rh_1         
  nop                        #  20    0x25  1      OPC=nop                    nop                        #  20    0x28  1      OPC=nop                  
  nopl %eax                  #  21    0x26  3      OPC=nopl_r32               nopl %eax                  #  21    0x29  3      OPC=nopl_r32             
  nopl %eax                  #  22    0x29  3      OPC=nopl_r32               nop                        #  22    0x2c  1      OPC=nop                  
  nopl %eax                  #  23    0x2c  3      OPC=nopl_r32               nop                        #  23    0x2d  1      OPC=nop                  
  nop                        #  24    0x2f  1      OPC=nop                    shrb $0xfb, %ah            #  24    0x2e  3      OPC=shrb_rh_imm8         
  nop                        #  25    0x30  1      OPC=nop                    nop                        #  25    0x31  1      OPC=nop                  
  nop                        #  26    0x31  1      OPC=nop                    nop                        #  26    0x32  1      OPC=nop                  
  andq $0x10, %rax           #  27    0x32  6      OPC=andq_rax_imm32         nopl %eax                  #  27    0x33  3      OPC=nopl_r32             
  nopl %eax                  #  28    0x38  3      OPC=nopl_r32               nopl %eax                  #  28    0x36  3      OPC=nopl_r32             
  nop                        #  29    0x3b  1      OPC=nop                    nopl %eax                  #  29    0x39  3      OPC=nopl_r32             
  nop                        #  30    0x3c  1      OPC=nop                    nopl %eax                  #  30    0x3c  3      OPC=nopl_r32             
  nop                        #  31    0x3d  1      OPC=nop                    nop                        #  31    0x3f  1      OPC=nop                  
.L_142ce0:                   #        0x3e  0      OPC=<label>              .L_142ce0:                   #        0x40  0      OPC=<label>              
  popq %r11                  #  32    0x3e  2      OPC=popq_r64_1             popq %r11                  #  32    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d          #  33    0x40  4      OPC=andl_r32_imm8          andl $0xe0, %r11d          #  33    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11            #  34    0x44  3      OPC=addq_r64_r64           addq %r15, %r11            #  34    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                  #  35    0x47  3      OPC=jmpq_r64               jmpq %r11                  #  35    0x49  3      OPC=jmpq_r64             
                                                                                                                                                        
.size wcslen, .-wcslen                                                      .size wcslen, .-wcslen                                                      
                                                                                                                                                        

********************************************************************************

Progress Update: 

Lowest Cost Discovered (25)                                                 Lowest Known Correct Cost (29)                                              
                                                                                                                                                        
  .text                                                                       .text                                                                     
  .globl wcslen                                                               .globl wcslen                                                             
  .type wcslen, @function                                                     .type wcslen, @function                                                   
                                                                                                                                                        
#! file-offset 0                                                            #! file-offset 0                                                            
#! rip-offset  0                                                            #! rip-offset  0                                                            
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                      
                                                                                                                                                        
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                    nop                        #  1     0     1      OPC=nop                  
  nop                        #  2     0x1   1      OPC=nop                    nop                        #  2     0x1   1      OPC=nop                  
  nopl %eax                  #  3     0x2   3      OPC=nopl_r32               nopl %eax                  #  3     0x2   3      OPC=nopl_r32             
  xorl %eax, %eax            #  4     0x5   2      OPC=xorl_r32_r32           xorl %eax, %eax            #  4     0x5   2      OPC=xorl_r32_r32         
  nop                        #  5     0x7   1      OPC=nop                    movl (%r15,%rax,1), %r13d  #  5     0x7   4      OPC=movl_r32_m32         
  nopl %eax                  #  6     0x8   3      OPC=nopl_r32               nop                        #  6     0xb   1      OPC=nop                  
  andl %r15d, %eax           #  7     0xb   3      OPC=andl_r32_r32           movl %r13d, %ecx           #  7     0xc   3      OPC=movl_r32_r32_1       
  movl (%r15,%rax,1), %r13d  #  8     0xe   4      OPC=movl_r32_m32           nop                        #  8     0xf   1      OPC=nop                  
  nop                        #  9     0x12  1      OPC=nop                    xorb %al, %r13b            #  9     0x10  3      OPC=xorb_r8_r8           
  je .L_142ce0               #  10    0x13  2      OPC=je_label               nop                        #  10    0x13  1      OPC=nop                  
  nop                        #  11    0x15  1      OPC=nop                    je .L_142ce0               #  11    0x14  2      OPC=je_label             
  shlw $0x1, %r13w           #  12    0x16  5      OPC=shlw_r16_imm8          notb %ah                   #  12    0x16  2      OPC=notb_rh              
  nop                        #  13    0x1b  1      OPC=nop                    nop                        #  13    0x18  1      OPC=nop                  
  addl %r15d, %r13d          #  14    0x1c  3      OPC=addl_r32_r32           subl %r13d, %eax           #  14    0x19  3      OPC=subl_r32_r32_1       
.L_142cc0:                   #        0x1f  0      OPC=<label>                shlw $0x1, %ax             #  15    0x1c  4      OPC=shlw_r16_imm8        
  jne .L_142cc0              #  15    0x1f  2      OPC=jne_label            .L_142cc0:                   #        0x20  0      OPC=<label>              
  nop                        #  16    0x21  1      OPC=nop                    notb %r13b                 #  16    0x20  3      OPC=notb_r8              
  nop                        #  17    0x22  1      OPC=nop                    jne .L_142cc0              #  17    0x23  2      OPC=jne_label            
  nopl %eax                  #  18    0x23  3      OPC=nopl_r32               nop                        #  18    0x25  1      OPC=nop                  
  nopl %eax                  #  19    0x26  3      OPC=nopl_r32               xorb %ch, %ah              #  19    0x26  2      OPC=xorb_rh_rh_1         
  nopl %eax                  #  20    0x29  3      OPC=nopl_r32               nop                        #  20    0x28  1      OPC=nop                  
  nopl %eax                  #  21    0x2c  3      OPC=nopl_r32               nopl %eax                  #  21    0x29  3      OPC=nopl_r32             
  nop                        #  22    0x2f  1      OPC=nop                    nop                        #  22    0x2c  1      OPC=nop                  
  nop                        #  23    0x30  1      OPC=nop                    nop                        #  23    0x2d  1      OPC=nop                  
  nop                        #  24    0x31  1      OPC=nop                    shrb $0xfb, %ah            #  24    0x2e  3      OPC=shrb_rh_imm8         
  nop                        #  25    0x32  1      OPC=nop                    nop                        #  25    0x31  1      OPC=nop                  
  nopl %eax                  #  26    0x33  3      OPC=nopl_r32               nop                        #  26    0x32  1      OPC=nop                  
  nop                        #  27    0x36  1      OPC=nop                    nopl %eax                  #  27    0x33  3      OPC=nopl_r32             
  andq $0x10, %rax           #  28    0x37  6      OPC=andq_rax_imm32         nopl %eax                  #  28    0x36  3      OPC=nopl_r32             
  nop                        #  29    0x3d  1      OPC=nop                    nopl %eax                  #  29    0x39  3      OPC=nopl_r32             
.L_142ce0:                   #        0x3e  0      OPC=<label>                nopl %eax                  #  30    0x3c  3      OPC=nopl_r32             
  popq %r11                  #  30    0x3e  2      OPC=popq_r64_1             nop                        #  31    0x3f  1      OPC=nop                  
  andl $0xe0, %r11d          #  31    0x40  4      OPC=andl_r32_imm8        .L_142ce0:                   #        0x40  0      OPC=<label>              
  addq %r15, %r11            #  32    0x44  3      OPC=addq_r64_r64           popq %r11                  #  32    0x40  2      OPC=popq_r64_1           
  jmpq %r11                  #  33    0x47  3      OPC=jmpq_r64               andl $0xe0, %r11d          #  33    0x42  4      OPC=andl_r32_imm8        
                                                                              addq %r15, %r11            #  34    0x46  3      OPC=addq_r64_r64         
.size wcslen, .-wcslen                                                        jmpq %r11                  #  35    0x49  3      OPC=jmpq_r64             
                                                                                                                                                        
                                                                            .size wcslen, .-wcslen                                                      
                                                                                                                                                        

********************************************************************************

Progress Update: 

Lowest Cost Discovered (25)                                                 Lowest Known Correct Cost (26)                                              
                                                                                                                                                        
  .text                                                                       .text                                                                     
  .globl wcslen                                                               .globl wcslen                                                             
  .type wcslen, @function                                                     .type wcslen, @function                                                   
                                                                                                                                                        
#! file-offset 0                                                            #! file-offset 0                                                            
#! rip-offset  0                                                            #! rip-offset  0                                                            
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                      
                                                                                                                                                        
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                    nop                        #  1     0     1      OPC=nop                  
  nop                        #  2     0x1   1      OPC=nop                    nop                        #  2     0x1   1      OPC=nop                  
  nopl %eax                  #  3     0x2   3      OPC=nopl_r32               decq %rdi                  #  3     0x2   3      OPC=decq_r64             
  xorl %eax, %eax            #  4     0x5   2      OPC=xorl_r32_r32           xorl %eax, %eax            #  4     0x5   2      OPC=xorl_r32_r32         
  nop                        #  5     0x7   1      OPC=nop                    nop                        #  5     0x7   1      OPC=nop                  
  nopl %eax                  #  6     0x8   3      OPC=nopl_r32               orb $0xfd, %ah             #  6     0x8   3      OPC=orb_rh_imm8          
  andl %r15d, %eax           #  7     0xb   3      OPC=andl_r32_r32           notq %rdi                  #  7     0xb   3      OPC=notq_r64             
  movl (%r15,%rax,1), %r13d  #  8     0xe   4      OPC=movl_r32_m32           andl %edi, %eax            #  8     0xe   2      OPC=andl_r32_r32         
  nop                        #  9     0x12  1      OPC=nop                    movl (%r15,%rax,1), %r13d  #  9     0x10  4      OPC=movl_r32_m32         
  je .L_142ce0               #  10    0x13  2      OPC=je_label               nop                        #  10    0x14  1      OPC=nop                  
  nop                        #  11    0x15  1      OPC=nop                    je .L_142ce0               #  11    0x15  2      OPC=je_label             
  shlw $0x1, %r13w           #  12    0x16  5      OPC=shlw_r16_imm8          nop                        #  12    0x17  1      OPC=nop                  
  nop                        #  13    0x1b  1      OPC=nop                    shlw $0x1, %r13w           #  13    0x18  5      OPC=shlw_r16_imm8        
  addl %r15d, %r13d          #  14    0x1c  3      OPC=addl_r32_r32           addl %edi, %r13d           #  14    0x1d  3      OPC=addl_r32_r32         
.L_142cc0:                   #        0x1f  0      OPC=<label>              .L_142cc0:                   #        0x20  0      OPC=<label>              
  jne .L_142cc0              #  15    0x1f  2      OPC=jne_label              jne .L_142cc0              #  15    0x20  2      OPC=jne_label            
  nop                        #  16    0x21  1      OPC=nop                    nop                        #  16    0x22  1      OPC=nop                  
  nop                        #  17    0x22  1      OPC=nop                    nop                        #  17    0x23  1      OPC=nop                  
  nopl %eax                  #  18    0x23  3      OPC=nopl_r32               nop                        #  18    0x24  1      OPC=nop                  
  nopl %eax                  #  19    0x26  3      OPC=nopl_r32               nop                        #  19    0x25  1      OPC=nop                  
  nopl %eax                  #  20    0x29  3      OPC=nopl_r32               nop                        #  20    0x26  1      OPC=nop                  
  nopl %eax                  #  21    0x2c  3      OPC=nopl_r32               nop                        #  21    0x27  1      OPC=nop                  
  nop                        #  22    0x2f  1      OPC=nop                    nopl %eax                  #  22    0x28  3      OPC=nopl_r32             
  nop                        #  23    0x30  1      OPC=nop                    nopl %eax                  #  23    0x2b  3      OPC=nopl_r32             
  nop                        #  24    0x31  1      OPC=nop                    nopl %eax                  #  24    0x2e  3      OPC=nopl_r32             
  nop                        #  25    0x32  1      OPC=nop                    nop                        #  25    0x31  1      OPC=nop                  
  nopl %eax                  #  26    0x33  3      OPC=nopl_r32               nop                        #  26    0x32  1      OPC=nop                  
  nop                        #  27    0x36  1      OPC=nop                    nop                        #  27    0x33  1      OPC=nop                  
  andq $0x10, %rax           #  28    0x37  6      OPC=andq_rax_imm32         nop                        #  28    0x34  1      OPC=nop                  
  nop                        #  29    0x3d  1      OPC=nop                    nopl %eax                  #  29    0x35  3      OPC=nopl_r32             
.L_142ce0:                   #        0x3e  0      OPC=<label>                nop                        #  30    0x38  1      OPC=nop                  
  popq %r11                  #  30    0x3e  2      OPC=popq_r64_1             andq $0x10, %rax           #  31    0x39  6      OPC=andq_rax_imm32       
  andl $0xe0, %r11d          #  31    0x40  4      OPC=andl_r32_imm8          nop                        #  32    0x3f  1      OPC=nop                  
  addq %r15, %r11            #  32    0x44  3      OPC=addq_r64_r64         .L_142ce0:                   #        0x40  0      OPC=<label>              
  jmpq %r11                  #  33    0x47  3      OPC=jmpq_r64               popq %r11                  #  33    0x40  2      OPC=popq_r64_1           
                                                                              andl $0xe0, %r11d          #  34    0x42  4      OPC=andl_r32_imm8        
.size wcslen, .-wcslen                                                        addq %r15, %r11            #  35    0x46  3      OPC=addq_r64_r64         
                                                                              jmpq %r11                  #  36    0x49  3      OPC=jmpq_r64             
                                                                                                                                                        
                                                                            .size wcslen, .-wcslen                                                      
                                                                                                                                                        

********************************************************************************

Progress Update: 

Lowest Cost Discovered (25)                                                 Lowest Known Correct Cost (25)                                             
                                                                                                                                                       
  .text                                                                       .text                                                                    
  .globl wcslen                                                               .globl wcslen                                                            
  .type wcslen, @function                                                     .type wcslen, @function                                                  
                                                                                                                                                       
#! file-offset 0                                                            #! file-offset 0                                                           
#! rip-offset  0                                                            #! rip-offset  0                                                           
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                     
                                                                                                                                                       
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                        #  1     0     1      OPC=nop                    orb %r15b, %dil           #  1     0     3      OPC=orb_r8_r8            
  nop                        #  2     0x1   1      OPC=nop                    nop                       #  2     0x3   1      OPC=nop                  
  nopl %eax                  #  3     0x2   3      OPC=nopl_r32               nop                       #  3     0x4   1      OPC=nop                  
  xorl %eax, %eax            #  4     0x5   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  4     0x5   2      OPC=xorl_r32_r32         
  nop                        #  5     0x7   1      OPC=nop                    orb $0x40, %ah            #  5     0x7   3      OPC=orb_rh_imm8          
  nopl %eax                  #  6     0x8   3      OPC=nopl_r32               nop                       #  6     0xa   1      OPC=nop                  
  andl %r15d, %eax           #  7     0xb   3      OPC=andl_r32_r32           orw %r15w, %ax            #  7     0xb   4      OPC=orw_r16_r16          
  movl (%r15,%rax,1), %r13d  #  8     0xe   4      OPC=movl_r32_m32           nop                       #  8     0xf   1      OPC=nop                  
  nop                        #  9     0x12  1      OPC=nop                    nop                       #  9     0x10  1      OPC=nop                  
  je .L_142ce0               #  10    0x13  2      OPC=je_label               nop                       #  10    0x11  1      OPC=nop                  
  nop                        #  11    0x15  1      OPC=nop                    nop                       #  11    0x12  1      OPC=nop                  
  shlw $0x1, %r13w           #  12    0x16  5      OPC=shlw_r16_imm8          nop                       #  12    0x13  1      OPC=nop                  
  nop                        #  13    0x1b  1      OPC=nop                    nop                       #  13    0x14  1      OPC=nop                  
  addl %r15d, %r13d          #  14    0x1c  3      OPC=addl_r32_r32           andl %edi, %edi           #  14    0x15  2      OPC=andl_r32_r32_1       
.L_142cc0:                   #        0x1f  0      OPC=<label>                movl (%r15,%rdi,1), %esi  #  15    0x17  4      OPC=movl_r32_m32         
  jne .L_142cc0              #  15    0x1f  2      OPC=jne_label              je .L_142ce0              #  16    0x1b  2      OPC=je_label             
  nop                        #  16    0x21  1      OPC=nop                    xorb %al, %ah             #  17    0x1d  2      OPC=xorb_rh_r8           
  nop                        #  17    0x22  1      OPC=nop                    nop                       #  18    0x1f  1      OPC=nop                  
  nopl %eax                  #  18    0x23  3      OPC=nopl_r32             .L_142cc0:                  #        0x20  0      OPC=<label>              
  nopl %eax                  #  19    0x26  3      OPC=nopl_r32               jne .L_142cc0             #  19    0x20  2      OPC=jne_label            
  nopl %eax                  #  20    0x29  3      OPC=nopl_r32               nop                       #  20    0x22  1      OPC=nop                  
  nopl %eax                  #  21    0x2c  3      OPC=nopl_r32               nopl %eax                 #  21    0x23  3      OPC=nopl_r32             
  nop                        #  22    0x2f  1      OPC=nop                    nopl %eax                 #  22    0x26  3      OPC=nopl_r32             
  nop                        #  23    0x30  1      OPC=nop                    nopl %eax                 #  23    0x29  3      OPC=nopl_r32             
  nop                        #  24    0x31  1      OPC=nop                    nop                       #  24    0x2c  1      OPC=nop                  
  nop                        #  25    0x32  1      OPC=nop                    nop                       #  25    0x2d  1      OPC=nop                  
  nopl %eax                  #  26    0x33  3      OPC=nopl_r32               nop                       #  26    0x2e  1      OPC=nop                  
  nop                        #  27    0x36  1      OPC=nop                    subq $0x5, %rax           #  27    0x2f  6      OPC=subq_rax_imm32       
  andq $0x10, %rax           #  28    0x37  6      OPC=andq_rax_imm32         nop                       #  28    0x35  1      OPC=nop                  
  nop                        #  29    0x3d  1      OPC=nop                    nop                       #  29    0x36  1      OPC=nop                  
.L_142ce0:                   #        0x3e  0      OPC=<label>                nopl %eax                 #  30    0x37  3      OPC=nopl_r32             
  popq %r11                  #  30    0x3e  2      OPC=popq_r64_1             orl $0xffffffe0, %eax     #  31    0x3a  6      OPC=orl_r32_imm32        
  andl $0xe0, %r11d          #  31    0x40  4      OPC=andl_r32_imm8        .L_142ce0:                  #        0x40  0      OPC=<label>              
  addq %r15, %r11            #  32    0x44  3      OPC=addq_r64_r64           popq %r11                 #  32    0x40  2      OPC=popq_r64_1           
  jmpq %r11                  #  33    0x47  3      OPC=jmpq_r64               andl $0xe0, %r11d         #  33    0x42  4      OPC=andl_r32_imm8        
                                                                              addq %r15, %r11           #  34    0x46  3      OPC=addq_r64_r64         
.size wcslen, .-wcslen                                                        jmpq %r11                 #  35    0x49  3      OPC=jmpq_r64             
                                                                                                                                                       
                                                                            .size wcslen, .-wcslen                                                     
                                                                                                                                                       

********************************************************************************

Progress Update: 

Lowest Cost Discovered (24)                                                Lowest Known Correct Cost (25)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           orb %r15b, %dil           #  1     0     3      OPC=orb_r8_r8            
  nop                       #  2     0x2   1      OPC=nop                    nop                       #  2     0x3   1      OPC=nop                  
  nop                       #  3     0x3   1      OPC=nop                    nop                       #  3     0x4   1      OPC=nop                  
  subl $0xf, %eax           #  4     0x4   3      OPC=subl_r32_imm8          xorl %eax, %eax           #  4     0x5   2      OPC=xorl_r32_r32         
  nop                       #  5     0x7   1      OPC=nop                    orb $0x40, %ah            #  5     0x7   3      OPC=orb_rh_imm8          
  nop                       #  6     0x8   1      OPC=nop                    nop                       #  6     0xa   1      OPC=nop                  
  nop                       #  7     0x9   1      OPC=nop                    orw %r15w, %ax            #  7     0xb   4      OPC=orw_r16_r16          
  addl $0xfffffffd, %eax    #  8     0xa   5      OPC=addl_eax_imm32         nop                       #  8     0xf   1      OPC=nop                  
  movl (%r15,%rax,1), %esi  #  9     0xf   4      OPC=movl_r32_m32           nop                       #  9     0x10  1      OPC=nop                  
  je .L_142ce0              #  10    0x13  2      OPC=je_label               nop                       #  10    0x11  1      OPC=nop                  
  orb %al, %ah              #  11    0x15  2      OPC=orb_rh_r8_1            nop                       #  11    0x12  1      OPC=nop                  
  nop                       #  12    0x17  1      OPC=nop                    nop                       #  12    0x13  1      OPC=nop                  
  xorw $0x10, %si           #  13    0x18  4      OPC=xorw_r16_imm8          nop                       #  13    0x14  1      OPC=nop                  
  andl %eax, %esi           #  14    0x1c  2      OPC=andl_r32_r32_1         andl %edi, %edi           #  14    0x15  2      OPC=andl_r32_r32_1       
.L_142cc0:                  #        0x1e  0      OPC=<label>                movl (%r15,%rdi,1), %esi  #  15    0x17  4      OPC=movl_r32_m32         
  jne .L_142cc0             #  15    0x1e  2      OPC=jne_label              je .L_142ce0              #  16    0x1b  2      OPC=je_label             
  subb $0x40, %ah           #  16    0x20  3      OPC=subb_rh_imm8           xorb %al, %ah             #  17    0x1d  2      OPC=xorb_rh_r8           
  nop                       #  17    0x23  1      OPC=nop                    nop                       #  18    0x1f  1      OPC=nop                  
  nopl %eax                 #  18    0x24  3      OPC=nopl_r32             .L_142cc0:                  #        0x20  0      OPC=<label>              
  nopl %eax                 #  19    0x27  3      OPC=nopl_r32               jne .L_142cc0             #  19    0x20  2      OPC=jne_label            
  nop                       #  20    0x2a  1      OPC=nop                    nop                       #  20    0x22  1      OPC=nop                  
  nopl %eax                 #  21    0x2b  3      OPC=nopl_r32               nopl %eax                 #  21    0x23  3      OPC=nopl_r32             
  nopl %eax                 #  22    0x2e  3      OPC=nopl_r32               nopl %eax                 #  22    0x26  3      OPC=nopl_r32             
  nopl %eax                 #  23    0x31  3      OPC=nopl_r32               nopl %eax                 #  23    0x29  3      OPC=nopl_r32             
  nop                       #  24    0x34  1      OPC=nop                    nop                       #  24    0x2c  1      OPC=nop                  
  nopl %eax                 #  25    0x35  3      OPC=nopl_r32               nop                       #  25    0x2d  1      OPC=nop                  
  nop                       #  26    0x38  1      OPC=nop                    nop                       #  26    0x2e  1      OPC=nop                  
  nopl %eax                 #  27    0x39  3      OPC=nopl_r32               subq $0x5, %rax           #  27    0x2f  6      OPC=subq_rax_imm32       
  nop                       #  28    0x3c  1      OPC=nop                    nop                       #  28    0x35  1      OPC=nop                  
  nop                       #  29    0x3d  1      OPC=nop                    nop                       #  29    0x36  1      OPC=nop                  
.L_142ce0:                  #        0x3e  0      OPC=<label>                nopl %eax                 #  30    0x37  3      OPC=nopl_r32             
  popq %r11                 #  30    0x3e  2      OPC=popq_r64_1             orl $0xffffffe0, %eax     #  31    0x3a  6      OPC=orl_r32_imm32        
  andl $0xe0, %r11d         #  31    0x40  4      OPC=andl_r32_imm8        .L_142ce0:                  #        0x40  0      OPC=<label>              
  addq %r15, %r11           #  32    0x44  3      OPC=addq_r64_r64           popq %r11                 #  32    0x40  2      OPC=popq_r64_1           
  jmpq %r11                 #  33    0x47  3      OPC=jmpq_r64               andl $0xe0, %r11d         #  33    0x42  4      OPC=andl_r32_imm8        
                                                                             addq %r15, %r11           #  34    0x46  3      OPC=addq_r64_r64         
.size wcslen, .-wcslen                                                       jmpq %r11                 #  35    0x49  3      OPC=jmpq_r64             
                                                                                                                                                      
                                                                           .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (24)                                                Lowest Known Correct Cost (24)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  nop                       #  2     0x2   1      OPC=nop                    nop                       #  2     0x2   1      OPC=nop                  
  nop                       #  3     0x3   1      OPC=nop                    nop                       #  3     0x3   1      OPC=nop                  
  subl $0xf, %eax           #  4     0x4   3      OPC=subl_r32_imm8          nop                       #  4     0x4   1      OPC=nop                  
  nop                       #  5     0x7   1      OPC=nop                    subl $0xf, %eax           #  5     0x5   3      OPC=subl_r32_imm8        
  nop                       #  6     0x8   1      OPC=nop                    nop                       #  6     0x8   1      OPC=nop                  
  nop                       #  7     0x9   1      OPC=nop                    nop                       #  7     0x9   1      OPC=nop                  
  addl $0xfffffffd, %eax    #  8     0xa   5      OPC=addl_eax_imm32         nop                       #  8     0xa   1      OPC=nop                  
  movl (%r15,%rax,1), %esi  #  9     0xf   4      OPC=movl_r32_m32           addl $0xfffffffd, %eax    #  9     0xb   5      OPC=addl_eax_imm32       
  je .L_142ce0              #  10    0x13  2      OPC=je_label               movl (%r15,%rax,1), %esi  #  10    0x10  4      OPC=movl_r32_m32         
  orb %al, %ah              #  11    0x15  2      OPC=orb_rh_r8_1            je .L_142ce0              #  11    0x14  2      OPC=je_label             
  nop                       #  12    0x17  1      OPC=nop                    orb %al, %ah              #  12    0x16  2      OPC=orb_rh_r8_1          
  xorw $0x10, %si           #  13    0x18  4      OPC=xorw_r16_imm8          nop                       #  13    0x18  1      OPC=nop                  
  andl %eax, %esi           #  14    0x1c  2      OPC=andl_r32_r32_1         xorw $0x10, %si           #  14    0x19  4      OPC=xorw_r16_imm8        
.L_142cc0:                  #        0x1e  0      OPC=<label>                nop                       #  15    0x1d  1      OPC=nop                  
  jne .L_142cc0             #  15    0x1e  2      OPC=jne_label              andl %eax, %esi           #  16    0x1e  2      OPC=andl_r32_r32_1       
  subb $0x40, %ah           #  16    0x20  3      OPC=subb_rh_imm8         .L_142cc0:                  #        0x20  0      OPC=<label>              
  nop                       #  17    0x23  1      OPC=nop                    jne .L_142cc0             #  17    0x20  2      OPC=jne_label            
  nopl %eax                 #  18    0x24  3      OPC=nopl_r32               subb $0x40, %ah           #  18    0x22  3      OPC=subb_rh_imm8         
  nopl %eax                 #  19    0x27  3      OPC=nopl_r32               nop                       #  19    0x25  1      OPC=nop                  
  nop                       #  20    0x2a  1      OPC=nop                    nopl %eax                 #  20    0x26  3      OPC=nopl_r32             
  nopl %eax                 #  21    0x2b  3      OPC=nopl_r32               nopl %eax                 #  21    0x29  3      OPC=nopl_r32             
  nopl %eax                 #  22    0x2e  3      OPC=nopl_r32               nop                       #  22    0x2c  1      OPC=nop                  
  nopl %eax                 #  23    0x31  3      OPC=nopl_r32               nopl %eax                 #  23    0x2d  3      OPC=nopl_r32             
  nop                       #  24    0x34  1      OPC=nop                    nopl %eax                 #  24    0x30  3      OPC=nopl_r32             
  nopl %eax                 #  25    0x35  3      OPC=nopl_r32               nopl %eax                 #  25    0x33  3      OPC=nopl_r32             
  nop                       #  26    0x38  1      OPC=nop                    nop                       #  26    0x36  1      OPC=nop                  
  nopl %eax                 #  27    0x39  3      OPC=nopl_r32               nopl %eax                 #  27    0x37  3      OPC=nopl_r32             
  nop                       #  28    0x3c  1      OPC=nop                    nop                       #  28    0x3a  1      OPC=nop                  
  nop                       #  29    0x3d  1      OPC=nop                    nopl %eax                 #  29    0x3b  3      OPC=nopl_r32             
.L_142ce0:                  #        0x3e  0      OPC=<label>                nop                       #  30    0x3e  1      OPC=nop                  
  popq %r11                 #  30    0x3e  2      OPC=popq_r64_1             nop                       #  31    0x3f  1      OPC=nop                  
  andl $0xe0, %r11d         #  31    0x40  4      OPC=andl_r32_imm8        .L_142ce0:                  #        0x40  0      OPC=<label>              
  addq %r15, %r11           #  32    0x44  3      OPC=addq_r64_r64           popq %r11                 #  32    0x40  2      OPC=popq_r64_1           
  jmpq %r11                 #  33    0x47  3      OPC=jmpq_r64               andl $0xe0, %r11d         #  33    0x42  4      OPC=andl_r32_imm8        
                                                                             addq %r15, %r11           #  34    0x46  3      OPC=addq_r64_r64         
.size wcslen, .-wcslen                                                       jmpq %r11                 #  35    0x49  3      OPC=jmpq_r64             
                                                                                                                                                      
                                                                           .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (23)                                              Lowest Known Correct Cost (23)                                           
                                                                                                                                                  
  .text                                                                    .text                                                                  
  .globl wcslen                                                            .globl wcslen                                                          
  .type wcslen, @function                                                  .type wcslen, @function                                                
                                                                                                                                                  
#! file-offset 0                                                         #! file-offset 0                                                         
#! rip-offset  0                                                         #! rip-offset  0                                                         
#! capacity    0 bytes                                                   #! capacity    0 bytes                                                   
                                                                                                                                                  
# Text                    #  Line  RIP   Bytes  Opcode                   # Text                    #  Line  RIP   Bytes  Opcode                   
.wcslen:                  #        0     0      OPC=<label>              .wcslen:                  #        0     0      OPC=<label>              
  nop                     #  1     0     1      OPC=nop                    nop                     #  1     0     1      OPC=nop                  
  xorl %eax, %eax         #  2     0x1   2      OPC=xorl_r32_r32           xorl %eax, %eax         #  2     0x1   2      OPC=xorl_r32_r32         
  nop                     #  3     0x3   1      OPC=nop                    nop                     #  3     0x3   1      OPC=nop                  
  nopl %eax               #  4     0x4   3      OPC=nopl_r32               nopl %eax               #  4     0x4   3      OPC=nopl_r32             
  nopl %eax               #  5     0x7   3      OPC=nopl_r32               nopl %eax               #  5     0x7   3      OPC=nopl_r32             
  addl $0xfffffffd, %eax  #  6     0xa   5      OPC=addl_eax_imm32         addl $0xfffffffd, %eax  #  6     0xa   5      OPC=addl_eax_imm32       
  nopl %eax               #  7     0xf   3      OPC=nopl_r32               nopl %eax               #  7     0xf   3      OPC=nopl_r32             
  nop                     #  8     0x12  1      OPC=nop                    nop                     #  8     0x12  1      OPC=nop                  
  je .L_142ce0            #  9     0x13  2      OPC=je_label               je .L_142ce0            #  9     0x13  2      OPC=je_label             
  nop                     #  10    0x15  1      OPC=nop                    nop                     #  10    0x15  1      OPC=nop                  
  andb %al, %ah           #  11    0x16  2      OPC=andb_rh_r8             andb %al, %ah           #  11    0x16  2      OPC=andb_rh_r8           
  orb %r15b, %al          #  12    0x18  3      OPC=orb_r8_r8              orb %r15b, %al          #  12    0x18  3      OPC=orb_r8_r8            
  nop                     #  13    0x1b  1      OPC=nop                    nop                     #  13    0x1b  1      OPC=nop                  
  nop                     #  14    0x1c  1      OPC=nop                    nop                     #  14    0x1c  1      OPC=nop                  
  nopl %eax               #  15    0x1d  3      OPC=nopl_r32               nopl %eax               #  15    0x1d  3      OPC=nopl_r32             
.L_142cc0:                #        0x20  0      OPC=<label>              .L_142cc0:                #        0x20  0      OPC=<label>              
  jne .L_142cc0           #  16    0x20  2      OPC=jne_label              jne .L_142cc0           #  16    0x20  2      OPC=jne_label            
  nopl %eax               #  17    0x22  3      OPC=nopl_r32               nopl %eax               #  17    0x22  3      OPC=nopl_r32             
  nop                     #  18    0x25  1      OPC=nop                    nop                     #  18    0x25  1      OPC=nop                  
  nopl %eax               #  19    0x26  3      OPC=nopl_r32               nopl %eax               #  19    0x26  3      OPC=nopl_r32             
  nopl %eax               #  20    0x29  3      OPC=nopl_r32               nopl %eax               #  20    0x29  3      OPC=nopl_r32             
  nop                     #  21    0x2c  1      OPC=nop                    nop                     #  21    0x2c  1      OPC=nop                  
  nopl %eax               #  22    0x2d  3      OPC=nopl_r32               nopl %eax               #  22    0x2d  3      OPC=nopl_r32             
  nopl %eax               #  23    0x30  3      OPC=nopl_r32               nopl %eax               #  23    0x30  3      OPC=nopl_r32             
  nopl %eax               #  24    0x33  3      OPC=nopl_r32               nopl %eax               #  24    0x33  3      OPC=nopl_r32             
  nop                     #  25    0x36  1      OPC=nop                    nop                     #  25    0x36  1      OPC=nop                  
  subb $0x1, %ah          #  26    0x37  3      OPC=subb_rh_imm8           subb $0x1, %ah          #  26    0x37  3      OPC=subb_rh_imm8         
  incq %rax               #  27    0x3a  3      OPC=incq_r64               incq %rax               #  27    0x3a  3      OPC=incq_r64             
  nop                     #  28    0x3d  1      OPC=nop                    nop                     #  28    0x3d  1      OPC=nop                  
  nop                     #  29    0x3e  1      OPC=nop                    nop                     #  29    0x3e  1      OPC=nop                  
  nop                     #  30    0x3f  1      OPC=nop                    nop                     #  30    0x3f  1      OPC=nop                  
.L_142ce0:                #        0x40  0      OPC=<label>              .L_142ce0:                #        0x40  0      OPC=<label>              
  popq %r11               #  31    0x40  2      OPC=popq_r64_1             popq %r11               #  31    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d       #  32    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d       #  32    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11         #  33    0x46  3      OPC=addq_r64_r64           addq %r15, %r11         #  33    0x46  3      OPC=addq_r64_r64         
  jmpq %r11               #  34    0x49  3      OPC=jmpq_r64               jmpq %r11               #  34    0x49  3      OPC=jmpq_r64             
                                                                                                                                                  
.size wcslen, .-wcslen                                                   .size wcslen, .-wcslen                                                   
                                                                                                                                                  

********************************************************************************

Progress Update: 

Lowest Cost Discovered (22)                                              Lowest Known Correct Cost (23)                                           
                                                                                                                                                  
  .text                                                                    .text                                                                  
  .globl wcslen                                                            .globl wcslen                                                          
  .type wcslen, @function                                                  .type wcslen, @function                                                
                                                                                                                                                  
#! file-offset 0                                                         #! file-offset 0                                                         
#! rip-offset  0                                                         #! rip-offset  0                                                         
#! capacity    0 bytes                                                   #! capacity    0 bytes                                                   
                                                                                                                                                  
# Text                    #  Line  RIP   Bytes  Opcode                   # Text                    #  Line  RIP   Bytes  Opcode                   
.wcslen:                  #        0     0      OPC=<label>              .wcslen:                  #        0     0      OPC=<label>              
  nop                     #  1     0     1      OPC=nop                    nop                     #  1     0     1      OPC=nop                  
  xorl %eax, %eax         #  2     0x1   2      OPC=xorl_r32_r32           xorl %eax, %eax         #  2     0x1   2      OPC=xorl_r32_r32         
  nop                     #  3     0x3   1      OPC=nop                    nop                     #  3     0x3   1      OPC=nop                  
  nopl %eax               #  4     0x4   3      OPC=nopl_r32               nopl %eax               #  4     0x4   3      OPC=nopl_r32             
  nop                     #  5     0x7   1      OPC=nop                    nopl %eax               #  5     0x7   3      OPC=nopl_r32             
  sarl $0x20, %edi        #  6     0x8   3      OPC=sarl_r32_imm8          addl $0xfffffffd, %eax  #  6     0xa   5      OPC=addl_eax_imm32       
  nop                     #  7     0xb   1      OPC=nop                    nopl %eax               #  7     0xf   3      OPC=nopl_r32             
  xorb %r15b, %dil        #  8     0xc   3      OPC=xorb_r8_r8_1           nop                     #  8     0x12  1      OPC=nop                  
  je .L_142ce0            #  9     0xf   2      OPC=je_label               je .L_142ce0            #  9     0x13  2      OPC=je_label             
  nopl %eax               #  10    0x11  3      OPC=nopl_r32               nop                     #  10    0x15  1      OPC=nop                  
  nopl %eax               #  11    0x14  3      OPC=nopl_r32               andb %al, %ah           #  11    0x16  2      OPC=andb_rh_r8           
  nop                     #  12    0x17  1      OPC=nop                    orb %r15b, %al          #  12    0x18  3      OPC=orb_r8_r8            
  nop                     #  13    0x18  1      OPC=nop                    nop                     #  13    0x1b  1      OPC=nop                  
  subl $0xfffffff8, %eax  #  14    0x19  5      OPC=subl_eax_imm32         nop                     #  14    0x1c  1      OPC=nop                  
  nop                     #  15    0x1e  1      OPC=nop                    nopl %eax               #  15    0x1d  3      OPC=nopl_r32             
.L_142cc0:                #        0x1f  0      OPC=<label>              .L_142cc0:                #        0x20  0      OPC=<label>              
  jne .L_142cc0           #  16    0x1f  2      OPC=jne_label              jne .L_142cc0           #  16    0x20  2      OPC=jne_label            
  decq %rax               #  17    0x21  3      OPC=decq_r64               nopl %eax               #  17    0x22  3      OPC=nopl_r32             
  nopl %eax               #  18    0x24  3      OPC=nopl_r32               nop                     #  18    0x25  1      OPC=nop                  
  nopl %eax               #  19    0x27  3      OPC=nopl_r32               nopl %eax               #  19    0x26  3      OPC=nopl_r32             
  nopl %eax               #  20    0x2a  3      OPC=nopl_r32               nopl %eax               #  20    0x29  3      OPC=nopl_r32             
  nopl %eax               #  21    0x2d  3      OPC=nopl_r32               nop                     #  21    0x2c  1      OPC=nop                  
  nopl %eax               #  22    0x30  3      OPC=nopl_r32               nopl %eax               #  22    0x2d  3      OPC=nopl_r32             
  nop                     #  23    0x33  1      OPC=nop                    nopl %eax               #  23    0x30  3      OPC=nopl_r32             
  orb $0xff, %ah          #  24    0x34  3      OPC=orb_rh_imm8            nopl %eax               #  24    0x33  3      OPC=nopl_r32             
  nop                     #  25    0x37  1      OPC=nop                    nop                     #  25    0x36  1      OPC=nop                  
  nop                     #  26    0x38  1      OPC=nop                    subb $0x1, %ah          #  26    0x37  3      OPC=subb_rh_imm8         
  nopl %eax               #  27    0x39  3      OPC=nopl_r32               incq %rax               #  27    0x3a  3      OPC=incq_r64             
  nop                     #  28    0x3c  1      OPC=nop                    nop                     #  28    0x3d  1      OPC=nop                  
  nop                     #  29    0x3d  1      OPC=nop                    nop                     #  29    0x3e  1      OPC=nop                  
  nop                     #  30    0x3e  1      OPC=nop                    nop                     #  30    0x3f  1      OPC=nop                  
.L_142ce0:                #        0x3f  0      OPC=<label>              .L_142ce0:                #        0x40  0      OPC=<label>              
  popq %r11               #  31    0x3f  2      OPC=popq_r64_1             popq %r11               #  31    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d       #  32    0x41  4      OPC=andl_r32_imm8          andl $0xe0, %r11d       #  32    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11         #  33    0x45  3      OPC=addq_r64_r64           addq %r15, %r11         #  33    0x46  3      OPC=addq_r64_r64         
  jmpq %r11               #  34    0x48  3      OPC=jmpq_r64               jmpq %r11               #  34    0x49  3      OPC=jmpq_r64             
                                                                                                                                                  
.size wcslen, .-wcslen                                                   .size wcslen, .-wcslen                                                   
                                                                                                                                                  

********************************************************************************

Progress Update: 

Lowest Cost Discovered (21)                                              Lowest Known Correct Cost (21)                                           
                                                                                                                                                  
  .text                                                                    .text                                                                  
  .globl wcslen                                                            .globl wcslen                                                          
  .type wcslen, @function                                                  .type wcslen, @function                                                
                                                                                                                                                  
#! file-offset 0                                                         #! file-offset 0                                                         
#! rip-offset  0                                                         #! rip-offset  0                                                         
#! capacity    0 bytes                                                   #! capacity    0 bytes                                                   
                                                                                                                                                  
# Text                    #  Line  RIP   Bytes  Opcode                   # Text                    #  Line  RIP   Bytes  Opcode                   
.wcslen:                  #        0     0      OPC=<label>              .wcslen:                  #        0     0      OPC=<label>              
  nop                     #  1     0     1      OPC=nop                    nop                     #  1     0     1      OPC=nop                  
  xorl %eax, %eax         #  2     0x1   2      OPC=xorl_r32_r32           xorl %eax, %eax         #  2     0x1   2      OPC=xorl_r32_r32         
  nop                     #  3     0x3   1      OPC=nop                    nop                     #  3     0x3   1      OPC=nop                  
  nopl %eax               #  4     0x4   3      OPC=nopl_r32               nopl %eax               #  4     0x4   3      OPC=nopl_r32             
  nop                     #  5     0x7   1      OPC=nop                    nop                     #  5     0x7   1      OPC=nop                  
  nopl %eax               #  6     0x8   3      OPC=nopl_r32               nopl %eax               #  6     0x8   3      OPC=nopl_r32             
  nop                     #  7     0xb   1      OPC=nop                    nop                     #  7     0xb   1      OPC=nop                  
  shlq $0x1, %rax         #  8     0xc   3      OPC=shlq_r64_one           shlq $0x1, %rax         #  8     0xc   3      OPC=shlq_r64_one         
  shll $0x1, %eax         #  9     0xf   2      OPC=shll_r32_one           shll $0x1, %eax         #  9     0xf   2      OPC=shll_r32_one         
  je .L_142ce0            #  10    0x11  2      OPC=je_label               je .L_142ce0            #  10    0x11  2      OPC=je_label             
  nop                     #  11    0x13  1      OPC=nop                    nop                     #  11    0x13  1      OPC=nop                  
  nop                     #  12    0x14  1      OPC=nop                    nop                     #  12    0x14  1      OPC=nop                  
  nopl %eax               #  13    0x15  3      OPC=nopl_r32               nopl %eax               #  13    0x15  3      OPC=nopl_r32             
  nopl %eax               #  14    0x18  3      OPC=nopl_r32               nopl %eax               #  14    0x18  3      OPC=nopl_r32             
  subl $0xfffffff8, %eax  #  15    0x1b  5      OPC=subl_eax_imm32         subl $0xfffffff8, %eax  #  15    0x1b  5      OPC=subl_eax_imm32       
.L_142cc0:                #        0x20  0      OPC=<label>              .L_142cc0:                #        0x20  0      OPC=<label>              
  jne .L_142cc0           #  16    0x20  2      OPC=jne_label              jne .L_142cc0           #  16    0x20  2      OPC=jne_label            
  decq %rax               #  17    0x22  3      OPC=decq_r64               decq %rax               #  17    0x22  3      OPC=decq_r64             
  nopl %eax               #  18    0x25  3      OPC=nopl_r32               nopl %eax               #  18    0x25  3      OPC=nopl_r32             
  nopl %eax               #  19    0x28  3      OPC=nopl_r32               nopl %eax               #  19    0x28  3      OPC=nopl_r32             
  nopl %eax               #  20    0x2b  3      OPC=nopl_r32               nopl %eax               #  20    0x2b  3      OPC=nopl_r32             
  nopl %eax               #  21    0x2e  3      OPC=nopl_r32               nopl %eax               #  21    0x2e  3      OPC=nopl_r32             
  nopl %eax               #  22    0x31  3      OPC=nopl_r32               nopl %eax               #  22    0x31  3      OPC=nopl_r32             
  nop                     #  23    0x34  1      OPC=nop                    nop                     #  23    0x34  1      OPC=nop                  
  orb $0x40, %ah          #  24    0x35  3      OPC=orb_rh_imm8            orb $0x40, %ah          #  24    0x35  3      OPC=orb_rh_imm8          
  nop                     #  25    0x38  1      OPC=nop                    nop                     #  25    0x38  1      OPC=nop                  
  nop                     #  26    0x39  1      OPC=nop                    nop                     #  26    0x39  1      OPC=nop                  
  nopl %eax               #  27    0x3a  3      OPC=nopl_r32               nopl %eax               #  27    0x3a  3      OPC=nopl_r32             
  nop                     #  28    0x3d  1      OPC=nop                    nop                     #  28    0x3d  1      OPC=nop                  
  nop                     #  29    0x3e  1      OPC=nop                    nop                     #  29    0x3e  1      OPC=nop                  
  nop                     #  30    0x3f  1      OPC=nop                    nop                     #  30    0x3f  1      OPC=nop                  
.L_142ce0:                #        0x40  0      OPC=<label>              .L_142ce0:                #        0x40  0      OPC=<label>              
  popq %r11               #  31    0x40  2      OPC=popq_r64_1             popq %r11               #  31    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d       #  32    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d       #  32    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11         #  33    0x46  3      OPC=addq_r64_r64           addq %r15, %r11         #  33    0x46  3      OPC=addq_r64_r64         
  jmpq %r11               #  34    0x49  3      OPC=jmpq_r64               jmpq %r11               #  34    0x49  3      OPC=jmpq_r64             
                                                                                                                                                  
.size wcslen, .-wcslen                                                   .size wcslen, .-wcslen                                                   
                                                                                                                                                  

********************************************************************************

Progress Update: 

Lowest Cost Discovered (20)                                               Lowest Known Correct Cost (21)                                           
                                                                                                                                                   
  .text                                                                     .text                                                                  
  .globl wcslen                                                             .globl wcslen                                                          
  .type wcslen, @function                                                   .type wcslen, @function                                                
                                                                                                                                                   
#! file-offset 0                                                          #! file-offset 0                                                         
#! rip-offset  0                                                          #! rip-offset  0                                                         
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                   
                                                                                                                                                   
# Text                     #  Line  RIP   Bytes  Opcode                   # Text                    #  Line  RIP   Bytes  Opcode                   
.wcslen:                   #        0     0      OPC=<label>              .wcslen:                  #        0     0      OPC=<label>              
  nop                      #  1     0     1      OPC=nop                    nop                     #  1     0     1      OPC=nop                  
  xorl %eax, %eax          #  2     0x1   2      OPC=xorl_r32_r32           xorl %eax, %eax         #  2     0x1   2      OPC=xorl_r32_r32         
  leaq (%r15,%rax,1), %r9  #  3     0x3   4      OPC=leaq_r64_m32           nop                     #  3     0x3   1      OPC=nop                  
  subq %r9, %rax           #  4     0x7   3      OPC=subq_r64_r64_1         nopl %eax               #  4     0x4   3      OPC=nopl_r32             
  je .L_142ce0             #  5     0xa   2      OPC=je_label               nop                     #  5     0x7   1      OPC=nop                  
  nopl %eax                #  6     0xc   3      OPC=nopl_r32               nopl %eax               #  6     0x8   3      OPC=nopl_r32             
  salb $0xfb, %ah          #  7     0xf   3      OPC=salb_rh_imm8           nop                     #  7     0xb   1      OPC=nop                  
  nopl %eax                #  8     0x12  3      OPC=nopl_r32               shlq $0x1, %rax         #  8     0xc   3      OPC=shlq_r64_one         
  nop                      #  9     0x15  1      OPC=nop                    shll $0x1, %eax         #  9     0xf   2      OPC=shll_r32_one         
  nopl %eax                #  10    0x16  3      OPC=nopl_r32               je .L_142ce0            #  10    0x11  2      OPC=je_label             
  nop                      #  11    0x19  1      OPC=nop                    nop                     #  11    0x13  1      OPC=nop                  
  orq $0xfe, %rax          #  12    0x1a  4      OPC=orq_r64_imm8           nop                     #  12    0x14  1      OPC=nop                  
  nop                      #  13    0x1e  1      OPC=nop                    nopl %eax               #  13    0x15  3      OPC=nopl_r32             
.L_142cc0:                 #        0x1f  0      OPC=<label>                nopl %eax               #  14    0x18  3      OPC=nopl_r32             
  jne .L_142cc0            #  14    0x1f  2      OPC=jne_label              subl $0xfffffff8, %eax  #  15    0x1b  5      OPC=subl_eax_imm32       
  nop                      #  15    0x21  1      OPC=nop                  .L_142cc0:                #        0x20  0      OPC=<label>              
  nop                      #  16    0x22  1      OPC=nop                    jne .L_142cc0           #  16    0x20  2      OPC=jne_label            
  nop                      #  17    0x23  1      OPC=nop                    decq %rax               #  17    0x22  3      OPC=decq_r64             
  nopl %eax                #  18    0x24  3      OPC=nopl_r32               nopl %eax               #  18    0x25  3      OPC=nopl_r32             
  nopl %eax                #  19    0x27  3      OPC=nopl_r32               nopl %eax               #  19    0x28  3      OPC=nopl_r32             
  nopl %eax                #  20    0x2a  3      OPC=nopl_r32               nopl %eax               #  20    0x2b  3      OPC=nopl_r32             
  nop                      #  21    0x2d  1      OPC=nop                    nopl %eax               #  21    0x2e  3      OPC=nopl_r32             
  nop                      #  22    0x2e  1      OPC=nop                    nopl %eax               #  22    0x31  3      OPC=nopl_r32             
  nopl %eax                #  23    0x2f  3      OPC=nopl_r32               nop                     #  23    0x34  1      OPC=nop                  
  nop                      #  24    0x32  1      OPC=nop                    orb $0x40, %ah          #  24    0x35  3      OPC=orb_rh_imm8          
  nopl %eax                #  25    0x33  3      OPC=nopl_r32               nop                     #  25    0x38  1      OPC=nop                  
  nopl %eax                #  26    0x36  3      OPC=nopl_r32               nop                     #  26    0x39  1      OPC=nop                  
  nopl %eax                #  27    0x39  3      OPC=nopl_r32               nopl %eax               #  27    0x3a  3      OPC=nopl_r32             
  nop                      #  28    0x3c  1      OPC=nop                    nop                     #  28    0x3d  1      OPC=nop                  
.L_142ce0:                 #        0x3d  0      OPC=<label>                nop                     #  29    0x3e  1      OPC=nop                  
  popq %r11                #  29    0x3d  2      OPC=popq_r64_1             nop                     #  30    0x3f  1      OPC=nop                  
  andl $0xe0, %r11d        #  30    0x3f  4      OPC=andl_r32_imm8        .L_142ce0:                #        0x40  0      OPC=<label>              
  addq %r15, %r11          #  31    0x43  3      OPC=addq_r64_r64           popq %r11               #  31    0x40  2      OPC=popq_r64_1           
  jmpq %r11                #  32    0x46  3      OPC=jmpq_r64               andl $0xe0, %r11d       #  32    0x42  4      OPC=andl_r32_imm8        
                                                                            addq %r15, %r11         #  33    0x46  3      OPC=addq_r64_r64         
.size wcslen, .-wcslen                                                      jmpq %r11               #  34    0x49  3      OPC=jmpq_r64             
                                                                                                                                                   
                                                                          .size wcslen, .-wcslen                                                   
                                                                                                                                                   

********************************************************************************

Progress Update: 

Lowest Cost Discovered (20)                                               Lowest Known Correct Cost (20)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                     #  Line  RIP   Bytes  Opcode                   # Text                     #  Line  RIP   Bytes  Opcode                   
.wcslen:                   #        0     0      OPC=<label>              .wcslen:                   #        0     0      OPC=<label>              
  nop                      #  1     0     1      OPC=nop                    nop                      #  1     0     1      OPC=nop                  
  xorl %eax, %eax          #  2     0x1   2      OPC=xorl_r32_r32           xorl %eax, %eax          #  2     0x1   2      OPC=xorl_r32_r32         
  leaq (%r15,%rax,1), %r9  #  3     0x3   4      OPC=leaq_r64_m32           leaq (%r15,%rax,1), %r9  #  3     0x3   4      OPC=leaq_r64_m32         
  subq %r9, %rax           #  4     0x7   3      OPC=subq_r64_r64_1         nop                      #  4     0x7   1      OPC=nop                  
  je .L_142ce0             #  5     0xa   2      OPC=je_label               subq %r9, %rax           #  5     0x8   3      OPC=subq_r64_r64_1       
  nopl %eax                #  6     0xc   3      OPC=nopl_r32               je .L_142ce0             #  6     0xb   2      OPC=je_label             
  salb $0xfb, %ah          #  7     0xf   3      OPC=salb_rh_imm8           movslq %edi, %r8         #  7     0xd   3      OPC=movslq_r64_r32       
  nopl %eax                #  8     0x12  3      OPC=nopl_r32               orw %di, %r8w            #  8     0x10  4      OPC=orw_r16_r16_1        
  nop                      #  9     0x15  1      OPC=nop                    salb $0xfb, %ah          #  9     0x14  3      OPC=salb_rh_imm8         
  nopl %eax                #  10    0x16  3      OPC=nopl_r32               xorw %r15w, %r8w         #  10    0x17  4      OPC=xorw_r16_r16_1       
  nop                      #  11    0x19  1      OPC=nop                    orq $0x80, %r8           #  11    0x1b  4      OPC=orq_r64_imm8         
  orq $0xfe, %rax          #  12    0x1a  4      OPC=orq_r64_imm8           nop                      #  12    0x1f  1      OPC=nop                  
  nop                      #  13    0x1e  1      OPC=nop                  .L_142cc0:                 #        0x20  0      OPC=<label>              
.L_142cc0:                 #        0x1f  0      OPC=<label>                jne .L_142cc0            #  13    0x20  2      OPC=jne_label            
  jne .L_142cc0            #  14    0x1f  2      OPC=jne_label              nop                      #  14    0x22  1      OPC=nop                  
  nop                      #  15    0x21  1      OPC=nop                    nop                      #  15    0x23  1      OPC=nop                  
  nop                      #  16    0x22  1      OPC=nop                    nop                      #  16    0x24  1      OPC=nop                  
  nop                      #  17    0x23  1      OPC=nop                    nop                      #  17    0x25  1      OPC=nop                  
  nopl %eax                #  18    0x24  3      OPC=nopl_r32               nop                      #  18    0x26  1      OPC=nop                  
  nopl %eax                #  19    0x27  3      OPC=nopl_r32               nopl %eax                #  19    0x27  3      OPC=nopl_r32             
  nopl %eax                #  20    0x2a  3      OPC=nopl_r32               nopl %eax                #  20    0x2a  3      OPC=nopl_r32             
  nop                      #  21    0x2d  1      OPC=nop                    nopl %eax                #  21    0x2d  3      OPC=nopl_r32             
  nop                      #  22    0x2e  1      OPC=nop                    nop                      #  22    0x30  1      OPC=nop                  
  nopl %eax                #  23    0x2f  3      OPC=nopl_r32               nop                      #  23    0x31  1      OPC=nop                  
  nop                      #  24    0x32  1      OPC=nop                    nopl %eax                #  24    0x32  3      OPC=nopl_r32             
  nopl %eax                #  25    0x33  3      OPC=nopl_r32               nopl %eax                #  25    0x35  3      OPC=nopl_r32             
  nopl %eax                #  26    0x36  3      OPC=nopl_r32               nopl %eax                #  26    0x38  3      OPC=nopl_r32             
  nopl %eax                #  27    0x39  3      OPC=nopl_r32               nop                      #  27    0x3b  1      OPC=nop                  
  nop                      #  28    0x3c  1      OPC=nop                    nopl %eax                #  28    0x3c  3      OPC=nopl_r32             
.L_142ce0:                 #        0x3d  0      OPC=<label>                nop                      #  29    0x3f  1      OPC=nop                  
  popq %r11                #  29    0x3d  2      OPC=popq_r64_1           .L_142ce0:                 #        0x40  0      OPC=<label>              
  andl $0xe0, %r11d        #  30    0x3f  4      OPC=andl_r32_imm8          popq %r11                #  30    0x40  2      OPC=popq_r64_1           
  addq %r15, %r11          #  31    0x43  3      OPC=addq_r64_r64           andl $0xe0, %r11d        #  31    0x42  4      OPC=andl_r32_imm8        
  jmpq %r11                #  32    0x46  3      OPC=jmpq_r64               addq %r15, %r11          #  32    0x46  3      OPC=addq_r64_r64         
                                                                            jmpq %r11                #  33    0x49  3      OPC=jmpq_r64             
.size wcslen, .-wcslen                                                                                                                              
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (19)                                                Lowest Known Correct Cost (19)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32         
  leal (%r15,%rax,1), %r9d  #  3     0x3   4      OPC=leal_r32_m64           leal (%r15,%rax,1), %r9d  #  3     0x3   4      OPC=leal_r32_m64         
  orb %ah, %ah              #  4     0x7   2      OPC=orb_rh_rh              orb %ah, %ah              #  4     0x7   2      OPC=orb_rh_rh            
  sarb $0x3, %ah            #  5     0x9   3      OPC=sarb_rh_imm8           sarb $0x3, %ah            #  5     0x9   3      OPC=sarb_rh_imm8         
  je .L_142ce0              #  6     0xc   2      OPC=je_label               je .L_142ce0              #  6     0xc   2      OPC=je_label             
  nopl %eax                 #  7     0xe   3      OPC=nopl_r32               nopl %eax                 #  7     0xe   3      OPC=nopl_r32             
  orw %ax, %r9w             #  8     0x11  4      OPC=orw_r16_r16_1          orw %ax, %r9w             #  8     0x11  4      OPC=orw_r16_r16_1        
  movb $0xfb, %ah           #  9     0x15  3      OPC=movb_rh_imm8_1         movb $0xfb, %ah           #  9     0x15  3      OPC=movb_rh_imm8_1       
  nopl %eax                 #  10    0x18  3      OPC=nopl_r32               nopl %eax                 #  10    0x18  3      OPC=nopl_r32             
  nop                       #  11    0x1b  1      OPC=nop                    nop                       #  11    0x1b  1      OPC=nop                  
  xorw %r9w, %r9w           #  12    0x1c  4      OPC=xorw_r16_r16_1         xorw %r9w, %r9w           #  12    0x1c  4      OPC=xorw_r16_r16_1       
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  jne .L_142cc0             #  13    0x20  2      OPC=jne_label              jne .L_142cc0             #  13    0x20  2      OPC=jne_label            
  nopl %eax                 #  14    0x22  3      OPC=nopl_r32               nopl %eax                 #  14    0x22  3      OPC=nopl_r32             
  nopl %eax                 #  15    0x25  3      OPC=nopl_r32               nopl %eax                 #  15    0x25  3      OPC=nopl_r32             
  nopl %eax                 #  16    0x28  3      OPC=nopl_r32               nopl %eax                 #  16    0x28  3      OPC=nopl_r32             
  nop                       #  17    0x2b  1      OPC=nop                    nop                       #  17    0x2b  1      OPC=nop                  
  nopl %eax                 #  18    0x2c  3      OPC=nopl_r32               nopl %eax                 #  18    0x2c  3      OPC=nopl_r32             
  nop                       #  19    0x2f  1      OPC=nop                    nop                       #  19    0x2f  1      OPC=nop                  
  nop                       #  20    0x30  1      OPC=nop                    nop                       #  20    0x30  1      OPC=nop                  
  nop                       #  21    0x31  1      OPC=nop                    nop                       #  21    0x31  1      OPC=nop                  
  nop                       #  22    0x32  1      OPC=nop                    nop                       #  22    0x32  1      OPC=nop                  
  nopl %eax                 #  23    0x33  3      OPC=nopl_r32               nopl %eax                 #  23    0x33  3      OPC=nopl_r32             
  nopl %eax                 #  24    0x36  3      OPC=nopl_r32               nopl %eax                 #  24    0x36  3      OPC=nopl_r32             
  nopl %eax                 #  25    0x39  3      OPC=nopl_r32               nopl %eax                 #  25    0x39  3      OPC=nopl_r32             
  nop                       #  26    0x3c  1      OPC=nop                    nop                       #  26    0x3c  1      OPC=nop                  
  nop                       #  27    0x3d  1      OPC=nop                    nop                       #  27    0x3d  1      OPC=nop                  
  nop                       #  28    0x3e  1      OPC=nop                    nop                       #  28    0x3e  1      OPC=nop                  
  nop                       #  29    0x3f  1      OPC=nop                    nop                       #  29    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  popq %r11                 #  30    0x40  2      OPC=popq_r64_1             popq %r11                 #  30    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  31    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  31    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  32    0x46  3      OPC=addq_r64_r64           addq %r15, %r11           #  32    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                 #  33    0x49  3      OPC=jmpq_r64               jmpq %r11                 #  33    0x49  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (17)                                                Lowest Known Correct Cost (17)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32         
  leal (%r15,%rax,1), %r9d  #  3     0x3   4      OPC=leal_r32_m64           leal (%r15,%rax,1), %r9d  #  3     0x3   4      OPC=leal_r32_m64         
  orb %ah, %ah              #  4     0x7   2      OPC=orb_rh_rh              orb %ah, %ah              #  4     0x7   2      OPC=orb_rh_rh            
  sarb $0x3, %ah            #  5     0x9   3      OPC=sarb_rh_imm8           sarb $0x3, %ah            #  5     0x9   3      OPC=sarb_rh_imm8         
  je .L_142ce0              #  6     0xc   2      OPC=je_label               je .L_142ce0              #  6     0xc   2      OPC=je_label             
  nopl %eax                 #  7     0xe   3      OPC=nopl_r32               nopl %eax                 #  7     0xe   3      OPC=nopl_r32             
  orw %ax, %r9w             #  8     0x11  4      OPC=orw_r16_r16_1          orw %ax, %r9w             #  8     0x11  4      OPC=orw_r16_r16_1        
  movb $0xfb, %ah           #  9     0x15  3      OPC=movb_rh_imm8_1         movb $0xfb, %ah           #  9     0x15  3      OPC=movb_rh_imm8_1       
  nopl %eax                 #  10    0x18  3      OPC=nopl_r32               nopl %eax                 #  10    0x18  3      OPC=nopl_r32             
  nop                       #  11    0x1b  1      OPC=nop                    nop                       #  11    0x1b  1      OPC=nop                  
  xorw %r9w, %r9w           #  12    0x1c  4      OPC=xorw_r16_r16_1         xorw %r9w, %r9w           #  12    0x1c  4      OPC=xorw_r16_r16_1       
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  jne .L_142cc0             #  13    0x20  2      OPC=jne_label              jne .L_142cc0             #  13    0x20  2      OPC=jne_label            
  nopl %eax                 #  14    0x22  3      OPC=nopl_r32               nopl %eax                 #  14    0x22  3      OPC=nopl_r32             
  nopl %eax                 #  15    0x25  3      OPC=nopl_r32               nopl %eax                 #  15    0x25  3      OPC=nopl_r32             
  nopl %eax                 #  16    0x28  3      OPC=nopl_r32               nopl %eax                 #  16    0x28  3      OPC=nopl_r32             
  nop                       #  17    0x2b  1      OPC=nop                    nop                       #  17    0x2b  1      OPC=nop                  
  nopl %eax                 #  18    0x2c  3      OPC=nopl_r32               nopl %eax                 #  18    0x2c  3      OPC=nopl_r32             
  nop                       #  19    0x2f  1      OPC=nop                    nop                       #  19    0x2f  1      OPC=nop                  
  nopl %eax                 #  20    0x30  3      OPC=nopl_r32               nopl %eax                 #  20    0x30  3      OPC=nopl_r32             
  nop                       #  21    0x33  1      OPC=nop                    nop                       #  21    0x33  1      OPC=nop                  
  nopl %eax                 #  22    0x34  3      OPC=nopl_r32               nopl %eax                 #  22    0x34  3      OPC=nopl_r32             
  nopl %eax                 #  23    0x37  3      OPC=nopl_r32               nopl %eax                 #  23    0x37  3      OPC=nopl_r32             
  nopl %eax                 #  24    0x3a  3      OPC=nopl_r32               nopl %eax                 #  24    0x3a  3      OPC=nopl_r32             
  nop                       #  25    0x3d  1      OPC=nop                    nop                       #  25    0x3d  1      OPC=nop                  
  nop                       #  26    0x3e  1      OPC=nop                    nop                       #  26    0x3e  1      OPC=nop                  
  nop                       #  27    0x3f  1      OPC=nop                    nop                       #  27    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  popq %r11                 #  28    0x40  2      OPC=popq_r64_1             popq %r11                 #  28    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  29    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  29    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  30    0x46  3      OPC=addq_r64_r64           addq %r15, %r11           #  30    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                 #  31    0x49  3      OPC=jmpq_r64               jmpq %r11                 #  31    0x49  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (16)                                              Lowest Known Correct Cost (17)                                             
                                                                                                                                                    
  .text                                                                    .text                                                                    
  .globl wcslen                                                            .globl wcslen                                                            
  .type wcslen, @function                                                  .type wcslen, @function                                                  
                                                                                                                                                    
#! file-offset 0                                                         #! file-offset 0                                                           
#! rip-offset  0                                                         #! rip-offset  0                                                           
#! capacity    0 bytes                                                   #! capacity    0 bytes                                                     
                                                                                                                                                    
# Text                    #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                  #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  xorq %rax, %rax         #  1     0     3      OPC=xorq_r64_r64           nop                       #  1     0     1      OPC=nop                  
  movzwq %di, %rdx        #  2     0x3   4      OPC=movzwq_r64_r16         xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32         
  leaw 0x1(,%rdx,4), %ax  #  3     0x7   8      OPC=leaw_r16_m64           leal (%r15,%rax,1), %r9d  #  3     0x3   4      OPC=leal_r32_m64         
  nopl %eax               #  4     0xf   3      OPC=nopl_r32               orb %ah, %ah              #  4     0x7   2      OPC=orb_rh_rh            
  nop                     #  5     0x12  1      OPC=nop                    sarb $0x3, %ah            #  5     0x9   3      OPC=sarb_rh_imm8         
  je .L_142ce0            #  6     0x13  2      OPC=je_label               je .L_142ce0              #  6     0xc   2      OPC=je_label             
  nopl %eax               #  7     0x15  3      OPC=nopl_r32               nopl %eax                 #  7     0xe   3      OPC=nopl_r32             
  nop                     #  8     0x18  1      OPC=nop                    orw %ax, %r9w             #  8     0x11  4      OPC=orw_r16_r16_1        
  nopl %eax               #  9     0x19  3      OPC=nopl_r32               movb $0xfb, %ah           #  9     0x15  3      OPC=movb_rh_imm8_1       
  nopl %eax               #  10    0x1c  3      OPC=nopl_r32               nopl %eax                 #  10    0x18  3      OPC=nopl_r32             
  nop                     #  11    0x1f  1      OPC=nop                    nop                       #  11    0x1b  1      OPC=nop                  
.L_142cc0:                #        0x20  0      OPC=<label>                xorw %r9w, %r9w           #  12    0x1c  4      OPC=xorw_r16_r16_1       
  jne .L_142cc0           #  12    0x20  2      OPC=jne_label            .L_142cc0:                  #        0x20  0      OPC=<label>              
  nop                     #  13    0x22  1      OPC=nop                    jne .L_142cc0             #  13    0x20  2      OPC=jne_label            
  nop                     #  14    0x23  1      OPC=nop                    nopl %eax                 #  14    0x22  3      OPC=nopl_r32             
  nop                     #  15    0x24  1      OPC=nop                    nopl %eax                 #  15    0x25  3      OPC=nopl_r32             
  nopl %eax               #  16    0x25  3      OPC=nopl_r32               nopl %eax                 #  16    0x28  3      OPC=nopl_r32             
  nopl %eax               #  17    0x28  3      OPC=nopl_r32               nop                       #  17    0x2b  1      OPC=nop                  
  nopl %eax               #  18    0x2b  3      OPC=nopl_r32               nopl %eax                 #  18    0x2c  3      OPC=nopl_r32             
  nopl %eax               #  19    0x2e  3      OPC=nopl_r32               nop                       #  19    0x2f  1      OPC=nop                  
  nop                     #  20    0x31  1      OPC=nop                    nopl %eax                 #  20    0x30  3      OPC=nopl_r32             
  nop                     #  21    0x32  1      OPC=nop                    nop                       #  21    0x33  1      OPC=nop                  
  nop                     #  22    0x33  1      OPC=nop                    nopl %eax                 #  22    0x34  3      OPC=nopl_r32             
  nopl %eax               #  23    0x34  3      OPC=nopl_r32               nopl %eax                 #  23    0x37  3      OPC=nopl_r32             
  nop                     #  24    0x37  1      OPC=nop                    nopl %eax                 #  24    0x3a  3      OPC=nopl_r32             
  nopl %eax               #  25    0x38  3      OPC=nopl_r32               nop                       #  25    0x3d  1      OPC=nop                  
  nopl %eax               #  26    0x3b  3      OPC=nopl_r32               nop                       #  26    0x3e  1      OPC=nop                  
  nop                     #  27    0x3e  1      OPC=nop                    nop                       #  27    0x3f  1      OPC=nop                  
.L_142ce0:                #        0x3f  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  popq %r11               #  28    0x3f  2      OPC=popq_r64_1             popq %r11                 #  28    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d       #  29    0x41  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  29    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11         #  30    0x45  3      OPC=addq_r64_r64           addq %r15, %r11           #  30    0x46  3      OPC=addq_r64_r64         
  jmpq %r11               #  31    0x48  3      OPC=jmpq_r64               jmpq %r11                 #  31    0x49  3      OPC=jmpq_r64             
                                                                                                                                                    
.size wcslen, .-wcslen                                                   .size wcslen, .-wcslen                                                     
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (16)                                              Lowest Known Correct Cost (16)                                           
                                                                                                                                                  
  .text                                                                    .text                                                                  
  .globl wcslen                                                            .globl wcslen                                                          
  .type wcslen, @function                                                  .type wcslen, @function                                                
                                                                                                                                                  
#! file-offset 0                                                         #! file-offset 0                                                         
#! rip-offset  0                                                         #! rip-offset  0                                                         
#! capacity    0 bytes                                                   #! capacity    0 bytes                                                   
                                                                                                                                                  
# Text                    #  Line  RIP   Bytes  Opcode                   # Text                    #  Line  RIP   Bytes  Opcode                   
.wcslen:                  #        0     0      OPC=<label>              .wcslen:                  #        0     0      OPC=<label>              
  xorq %rax, %rax         #  1     0     3      OPC=xorq_r64_r64           xorq %rax, %rax         #  1     0     3      OPC=xorq_r64_r64         
  movzwq %di, %rdx        #  2     0x3   4      OPC=movzwq_r64_r16         movzwq %di, %rdx        #  2     0x3   4      OPC=movzwq_r64_r16       
  leaw 0x1(,%rdx,4), %ax  #  3     0x7   8      OPC=leaw_r16_m64           leaw 0x1(,%rdx,4), %ax  #  3     0x7   8      OPC=leaw_r16_m64         
  nopl %eax               #  4     0xf   3      OPC=nopl_r32               nopl %eax               #  4     0xf   3      OPC=nopl_r32             
  nop                     #  5     0x12  1      OPC=nop                    nop                     #  5     0x12  1      OPC=nop                  
  je .L_142ce0            #  6     0x13  2      OPC=je_label               je .L_142ce0            #  6     0x13  2      OPC=je_label             
  nopl %eax               #  7     0x15  3      OPC=nopl_r32               nopl %eax               #  7     0x15  3      OPC=nopl_r32             
  nop                     #  8     0x18  1      OPC=nop                    nop                     #  8     0x18  1      OPC=nop                  
  nopl %eax               #  9     0x19  3      OPC=nopl_r32               nopl %eax               #  9     0x19  3      OPC=nopl_r32             
  nopl %eax               #  10    0x1c  3      OPC=nopl_r32               nopl %eax               #  10    0x1c  3      OPC=nopl_r32             
  nop                     #  11    0x1f  1      OPC=nop                    nop                     #  11    0x1f  1      OPC=nop                  
.L_142cc0:                #        0x20  0      OPC=<label>              .L_142cc0:                #        0x20  0      OPC=<label>              
  jne .L_142cc0           #  12    0x20  2      OPC=jne_label              jne .L_142cc0           #  12    0x20  2      OPC=jne_label            
  nop                     #  13    0x22  1      OPC=nop                    nop                     #  13    0x22  1      OPC=nop                  
  nop                     #  14    0x23  1      OPC=nop                    nop                     #  14    0x23  1      OPC=nop                  
  nop                     #  15    0x24  1      OPC=nop                    nop                     #  15    0x24  1      OPC=nop                  
  nopl %eax               #  16    0x25  3      OPC=nopl_r32               nop                     #  16    0x25  1      OPC=nop                  
  nopl %eax               #  17    0x28  3      OPC=nopl_r32               nopl %eax               #  17    0x26  3      OPC=nopl_r32             
  nopl %eax               #  18    0x2b  3      OPC=nopl_r32               nopl %eax               #  18    0x29  3      OPC=nopl_r32             
  nopl %eax               #  19    0x2e  3      OPC=nopl_r32               nopl %eax               #  19    0x2c  3      OPC=nopl_r32             
  nop                     #  20    0x31  1      OPC=nop                    nopl %eax               #  20    0x2f  3      OPC=nopl_r32             
  nop                     #  21    0x32  1      OPC=nop                    nop                     #  21    0x32  1      OPC=nop                  
  nop                     #  22    0x33  1      OPC=nop                    nop                     #  22    0x33  1      OPC=nop                  
  nopl %eax               #  23    0x34  3      OPC=nopl_r32               nop                     #  23    0x34  1      OPC=nop                  
  nop                     #  24    0x37  1      OPC=nop                    nopl %eax               #  24    0x35  3      OPC=nopl_r32             
  nopl %eax               #  25    0x38  3      OPC=nopl_r32               nop                     #  25    0x38  1      OPC=nop                  
  nopl %eax               #  26    0x3b  3      OPC=nopl_r32               nopl %eax               #  26    0x39  3      OPC=nopl_r32             
  nop                     #  27    0x3e  1      OPC=nop                    nopl %eax               #  27    0x3c  3      OPC=nopl_r32             
.L_142ce0:                #        0x3f  0      OPC=<label>                nop                     #  28    0x3f  1      OPC=nop                  
  popq %r11               #  28    0x3f  2      OPC=popq_r64_1           .L_142ce0:                #        0x40  0      OPC=<label>              
  andl $0xe0, %r11d       #  29    0x41  4      OPC=andl_r32_imm8          popq %r11               #  29    0x40  2      OPC=popq_r64_1           
  addq %r15, %r11         #  30    0x45  3      OPC=addq_r64_r64           andl $0xe0, %r11d       #  30    0x42  4      OPC=andl_r32_imm8        
  jmpq %r11               #  31    0x48  3      OPC=jmpq_r64               addq %r15, %r11         #  31    0x46  3      OPC=addq_r64_r64         
                                                                           jmpq %r11               #  32    0x49  3      OPC=jmpq_r64             
.size wcslen, .-wcslen                                                                                                                            
                                                                         .size wcslen, .-wcslen                                                   
                                                                                                                                                  

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  52.1706s
Iterations/s:                  1916.79

Starting cost:                 56
Lowest cost:                   16
Lowest correct cost:           16

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.266%       7.822%        7.822%       
Opcode          8.463%       8.188%        8.177%       
Operand         8.367%       4.863%        4.254%       
Global Swap     8.386%       7.706%        7.174%       
Local Swap      8.267%       2.603%        2.586%       
ReplaceNop      8.389%       8.038%        7.699%       
Rotate          8.306%       7.725%        6.905%       
Delete          8.297%       7.967%        7.469%       
Instruction     8.289%       2.509%        0.883%       
Add Nops        8.289%       8.289%        7.455%       
OpcodeWidth     8.247%       7.759%        7.62%        
2xWeighted      0%           0%            0%           
Memory+Swap     8.434%       0.053%        0.006%       
                                                        
Total           100%         73.522%       68.05%       

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  130.382s
Iterations/s:                  1533.95

Starting cost:                 56
Lowest cost:                   16
Lowest correct cost:           16

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.224%       7.87%         7.87%        
Opcode          8.3935%      8.174%        8.1655%      
Operand         8.3545%      5.032%        4.4115%      
Global Swap     8.367%       7.808%        7.3845%      
Local Swap      8.3275%      2.458%        2.4485%      
ReplaceNop      8.4185%      8.12%         7.8655%      
Rotate          8.342%       7.8795%       7.1265%      
Delete          8.317%       8.041%        7.5385%      
Instruction     8.289%       2.486%        0.8645%      
Add Nops        8.238%       8.238%        7.469%       
OpcodeWidth     8.315%       7.918%        7.7965%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.414%       0.033%        0.003%       
                                                        
Total           100%         74.0575%      68.9435%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  228.618s
Iterations/s:                  1312.23

Starting cost:                 56
Lowest cost:                   16
Lowest correct cost:           16

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.23%        7.929%        7.929%       
Opcode          8.357%       8.16533%      8.15867%     
Operand         8.36933%     5.08233%      4.47167%     
Global Swap     8.37567%     7.87033%      7.50567%     
Local Swap      8.37433%     2.34933%      2.343%       
ReplaceNop      8.34467%     8.09133%      7.87233%     
Rotate          8.325%       7.91233%      7.21867%     
Delete          8.33%        8.092%        7.57767%     
Instruction     8.33367%     2.53667%      0.903%       
Add Nops        8.26533%     8.26533%      7.50267%     
OpcodeWidth     8.31267%     7.976%        7.86867%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.38233%     0.022%        0.002%       
                                                        
Total           100%         74.292%       69.353%      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (15)                                                    Lowest Known Correct Cost (15)                                                 
                                                                                                                                                              
  .text                                                                          .text                                                                        
  .globl wcslen                                                                  .globl wcslen                                                                
  .type wcslen, @function                                                        .type wcslen, @function                                                      
                                                                                                                                                              
#! file-offset 0                                                               #! file-offset 0                                                               
#! rip-offset  0                                                               #! rip-offset  0                                                               
#! capacity    0 bytes                                                         #! capacity    0 bytes                                                         
                                                                                                                                                              
# Text                          #  Line  RIP   Bytes  Opcode                   # Text                          #  Line  RIP   Bytes  Opcode                   
.wcslen:                        #        0     0      OPC=<label>              .wcslen:                        #        0     0      OPC=<label>              
  leal 0x6(%rdi,%rdi,4), %r14d  #  1     0     5      OPC=leal_r32_m64           leal 0x6(%rdi,%rdi,4), %r14d  #  1     0     5      OPC=leal_r32_m64         
  subl $0xf8, %r14d             #  2     0x5   4      OPC=subl_r32_imm8          subl $0xf8, %r14d             #  2     0x5   4      OPC=subl_r32_imm8        
  nopl %eax                     #  3     0x9   3      OPC=nopl_r32               nopl %eax                     #  3     0x9   3      OPC=nopl_r32             
  nopl %eax                     #  4     0xc   3      OPC=nopl_r32               nopl %eax                     #  4     0xc   3      OPC=nopl_r32             
  nop                           #  5     0xf   1      OPC=nop                    nop                           #  5     0xf   1      OPC=nop                  
  shrw $0x5, %r14w              #  6     0x10  5      OPC=shrw_r16_imm8          shrw $0x5, %r14w              #  6     0x10  5      OPC=shrw_r16_imm8        
  movzbl %r15b, %eax            #  7     0x15  4      OPC=movzbl_r32_r8          movzbl %r15b, %eax            #  7     0x15  4      OPC=movzbl_r32_r8        
  shlw $0x5, %ax                #  8     0x19  4      OPC=shlw_r16_imm8          shlw $0x5, %ax                #  8     0x19  4      OPC=shlw_r16_imm8        
  nop                           #  9     0x1d  1      OPC=nop                    nop                           #  9     0x1d  1      OPC=nop                  
  je .L_142ce0                  #  10    0x1e  2      OPC=je_label               je .L_142ce0                  #  10    0x1e  2      OPC=je_label             
.L_142cc0:                      #        0x20  0      OPC=<label>              .L_142cc0:                      #        0x20  0      OPC=<label>              
  jne .L_142cc0                 #  11    0x20  2      OPC=jne_label              jne .L_142cc0                 #  11    0x20  2      OPC=jne_label            
  nopl %eax                     #  12    0x22  3      OPC=nopl_r32               nopl %eax                     #  12    0x22  3      OPC=nopl_r32             
  nop                           #  13    0x25  1      OPC=nop                    nop                           #  13    0x25  1      OPC=nop                  
  subq $0x4, %rax               #  14    0x26  6      OPC=subq_rax_imm32         subq $0x4, %rax               #  14    0x26  6      OPC=subq_rax_imm32       
  notb %ah                      #  15    0x2c  2      OPC=notb_rh                notb %ah                      #  15    0x2c  2      OPC=notb_rh              
  nopl %eax                     #  16    0x2e  3      OPC=nopl_r32               nopl %eax                     #  16    0x2e  3      OPC=nopl_r32             
  nopl %eax                     #  17    0x31  3      OPC=nopl_r32               nopl %eax                     #  17    0x31  3      OPC=nopl_r32             
  nopl %eax                     #  18    0x34  3      OPC=nopl_r32               nopl %eax                     #  18    0x34  3      OPC=nopl_r32             
  nop                           #  19    0x37  1      OPC=nop                    nop                           #  19    0x37  1      OPC=nop                  
  nopl %eax                     #  20    0x38  3      OPC=nopl_r32               nopl %eax                     #  20    0x38  3      OPC=nopl_r32             
  nopl %eax                     #  21    0x3b  3      OPC=nopl_r32               nopl %eax                     #  21    0x3b  3      OPC=nopl_r32             
  nop                           #  22    0x3e  1      OPC=nop                    nop                           #  22    0x3e  1      OPC=nop                  
  nop                           #  23    0x3f  1      OPC=nop                    nop                           #  23    0x3f  1      OPC=nop                  
.L_142ce0:                      #        0x40  0      OPC=<label>              .L_142ce0:                      #        0x40  0      OPC=<label>              
  popq %r11                     #  24    0x40  2      OPC=popq_r64_1             popq %r11                     #  24    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d             #  25    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d             #  25    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11               #  26    0x46  3      OPC=addq_r64_r64           addq %r15, %r11               #  26    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                     #  27    0x49  3      OPC=jmpq_r64               jmpq %r11                     #  27    0x49  3      OPC=jmpq_r64             
                                                                                                                                                              
.size wcslen, .-wcslen                                                         .size wcslen, .-wcslen                                                         
                                                                                                                                                              

********************************************************************************

Progress Update: 

Lowest Cost Discovered (14)                                                 Lowest Known Correct Cost (14)                                              
                                                                                                                                                        
  .text                                                                       .text                                                                     
  .globl wcslen                                                               .globl wcslen                                                             
  .type wcslen, @function                                                     .type wcslen, @function                                                   
                                                                                                                                                        
#! file-offset 0                                                            #! file-offset 0                                                            
#! rip-offset  0                                                            #! rip-offset  0                                                            
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                      
                                                                                                                                                        
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                       #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                     #        0     0      OPC=<label>              
  movq $0x1, %rsi            #  1     0     7      OPC=movq_r64_imm32         movq $0x1, %rsi            #  1     0     7      OPC=movq_r64_imm32       
  xorl $0xffffffe0, %esi     #  2     0x7   6      OPC=xorl_r32_imm32         xorl $0xffffffe0, %esi     #  2     0x7   6      OPC=xorl_r32_imm32       
  leaq -0x10(,%r15,2), %rax  #  3     0xd   8      OPC=leaq_r64_m16           leaq -0x10(,%r15,2), %rax  #  3     0xd   8      OPC=leaq_r64_m16         
  nop                        #  4     0x15  1      OPC=nop                    nop                        #  4     0x15  1      OPC=nop                  
  movsbl %sil, %ecx          #  5     0x16  4      OPC=movsbl_r32_r8          movsbl %sil, %ecx          #  5     0x16  4      OPC=movsbl_r32_r8        
  orq $0x40, %rcx            #  6     0x1a  4      OPC=orq_r64_imm8           orq $0x40, %rcx            #  6     0x1a  4      OPC=orq_r64_imm8         
  je .L_142ce0               #  7     0x1e  2      OPC=je_label               je .L_142ce0               #  7     0x1e  2      OPC=je_label             
.L_142cc0:                   #        0x20  0      OPC=<label>              .L_142cc0:                   #        0x20  0      OPC=<label>              
  jne .L_142cc0              #  8     0x20  2      OPC=jne_label              jne .L_142cc0              #  8     0x20  2      OPC=jne_label            
  nop                        #  9     0x22  1      OPC=nop                    nop                        #  9     0x22  1      OPC=nop                  
  nop                        #  10    0x23  1      OPC=nop                    nop                        #  10    0x23  1      OPC=nop                  
  andb $0x6, %al             #  11    0x24  2      OPC=andb_al_imm8           andb $0x6, %al             #  11    0x24  2      OPC=andb_al_imm8         
  salb $0xfb, %al            #  12    0x26  3      OPC=salb_r8_imm8           salb $0xfb, %al            #  12    0x26  3      OPC=salb_r8_imm8         
  nopl %eax                  #  13    0x29  3      OPC=nopl_r32               nopl %eax                  #  13    0x29  3      OPC=nopl_r32             
  nopl %eax                  #  14    0x2c  3      OPC=nopl_r32               nopl %eax                  #  14    0x2c  3      OPC=nopl_r32             
  nopl %eax                  #  15    0x2f  3      OPC=nopl_r32               nopl %eax                  #  15    0x2f  3      OPC=nopl_r32             
  nop                        #  16    0x32  1      OPC=nop                    nop                        #  16    0x32  1      OPC=nop                  
  nopl %eax                  #  17    0x33  3      OPC=nopl_r32               nopl %eax                  #  17    0x33  3      OPC=nopl_r32             
  nopl %eax                  #  18    0x36  3      OPC=nopl_r32               nopl %eax                  #  18    0x36  3      OPC=nopl_r32             
  nop                        #  19    0x39  1      OPC=nop                    nop                        #  19    0x39  1      OPC=nop                  
  nopl %eax                  #  20    0x3a  3      OPC=nopl_r32               nopl %eax                  #  20    0x3a  3      OPC=nopl_r32             
  nopl %eax                  #  21    0x3d  3      OPC=nopl_r32               nopl %eax                  #  21    0x3d  3      OPC=nopl_r32             
.L_142ce0:                   #        0x40  0      OPC=<label>              .L_142ce0:                   #        0x40  0      OPC=<label>              
  popq %r11                  #  22    0x40  2      OPC=popq_r64_1             popq %r11                  #  22    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d          #  23    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d          #  23    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11            #  24    0x46  3      OPC=addq_r64_r64           addq %r15, %r11            #  24    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                  #  25    0x49  3      OPC=jmpq_r64               jmpq %r11                  #  25    0x49  3      OPC=jmpq_r64             
                                                                                                                                                        
.size wcslen, .-wcslen                                                      .size wcslen, .-wcslen                                                      
                                                                                                                                                        

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  385.24s
Iterations/s:                  1038.31

Starting cost:                 56
Lowest cost:                   14
Lowest correct cost:           14

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.25325%     7.9985%       7.9985%      
Opcode          8.35825%     8.194%        8.188%       
Operand         8.31475%     5.029%        4.4105%      
Global Swap     8.3615%      7.91975%      7.612%       
Local Swap      8.38825%     2.27975%      2.273%       
ReplaceNop      8.3405%      8.1245%       7.93375%     
Rotate          8.32125%     7.97%         7.33475%     
Delete          8.29175%     8.09075%      7.60225%     
Instruction     8.32875%     2.479%        0.85675%     
Add Nops        8.3135%      8.3135%       7.62175%     
OpcodeWidth     8.35525%     8.06025%      7.9685%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.373%       0.02175%      0.00175%     
                                                        
Total           100%         74.4808%      69.8015%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  615.564s
Iterations/s:                  812.263

Starting cost:                 56
Lowest cost:                   14
Lowest correct cost:           14

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.2778%      8.0552%       8.0552%      
Opcode          8.3452%      8.2032%       8.1978%      
Operand         8.2944%      5.0244%       4.4062%      
Global Swap     8.36%        7.9756%       7.7086%      
Local Swap      8.3656%      2.2476%       2.2376%      
ReplaceNop      8.3368%      8.1524%       7.9872%      
Rotate          8.3296%      8.0234%       7.4214%      
Delete          8.2864%      8.1116%       7.62%        
Instruction     8.2932%      2.503%        0.8606%      
Add Nops        8.3422%      8.3422%       7.6806%      
OpcodeWidth     8.3784%      8.1254%       8.0458%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3904%      0.0354%       0.003%       
                                                        
Total           100%         74.7994%      70.224%      

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     e6 00 48 a4 3e 0d 77 e8
%rcx     c0 d2 80 52 aa 2f 67 31
%rdx     aa c6 dc 79 e6 cf d9 db
%rbx     78 0c 57 90 85 38 57 85
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 04 e0 0a c0
%rdi     00 00 00 00 02 e5 0d c0
%r8      7d 01 36 5e 6e dd a7 0c
%r9      37 ab 1f 4e c7 ee 3e be
%r10     ec 5e a7 05 fc 9a 75 20
%r11     44 f2 54 37 88 64 44 ec
%r12     c5 d7 b3 06 59 b2 d0 fb
%r13     05 77 37 e5 40 8c c5 f1
%r14     a4 9d 5f b8 b1 01 11 ac
%r15     00 00 00 00 0c 2d e0 b0

%ymm0    d6 1f 30 e7 cf 11 c8 79 35 9c 78 91 f7 da 32 3f 29 30 2d 7d 2b b6 46 46 76 ba 81 84 f5 aa d1 ef
%ymm1    29 39 2e 27 62 0f f7 7b 40 e6 b2 c6 b0 16 4e 1f 1f 74 ed e0 4a bc b2 cd 91 fc 86 4a 86 cc c9 02
%ymm2    a1 7a 3d a9 51 04 7b 29 a2 6c 32 27 2c 4c 74 65 9c 5e 17 7d 3f a3 90 5f 58 d3 ac 8b 42 b0 05 f8
%ymm3    95 a4 d4 52 02 5a 15 59 09 10 de df 6e 72 ad 47 46 60 d3 e0 c4 75 c9 47 36 26 b7 d7 ce e4 2a 42
%ymm4    6f 17 c9 70 82 25 9b 2f 22 41 1a c9 38 0a eb 59 9b 79 ac 54 33 4b 81 53 87 0c 89 3f d6 63 88 ff
%ymm5    1a 5c ae c9 ed 97 00 7d 15 db e2 e6 b8 a0 cb ef 68 c1 03 0f 26 8a 63 d2 56 17 51 03 90 45 7a 51
%ymm6    e1 75 e6 b9 5b 89 0a 92 9c 73 92 1e 5d b7 3c 77 ff 9c ac 10 34 ea 0c 25 c4 82 c2 f2 2c aa a1 28
%ymm7    c5 c2 59 3d e0 e3 57 27 88 ce 1d f5 32 aa 63 13 4c ab d7 d5 ac 3b 29 9c 07 3e 90 e2 7a 0d 20 87
%ymm8    ea e1 59 71 1c 97 18 df b6 34 87 8f ac b9 72 b7 87 c8 54 74 7b a8 9d a6 fc 62 7d 5f 5b 3f cf 79
%ymm9    58 8b 5d 2f a1 7c d6 30 5f 3f 18 80 89 e4 f9 fa 37 3f 88 80 b8 c0 2c 44 44 84 a7 9e 88 45 20 28
%ymm10   e3 c9 a2 65 71 17 08 41 75 8c 6b 45 2c 2b 2c ac a2 48 b3 a8 11 73 20 90 bb 60 64 77 1c e0 d0 7e
%ymm11   0a 82 dd 97 9e 14 f5 39 a3 de 31 62 68 a5 f7 23 78 cb f7 cc 29 ae 19 80 9d a6 60 0d ea ff a9 73
%ymm12   cb d7 29 45 cd a7 67 35 08 53 40 cf af 62 9e 4d fa f9 56 d6 81 8b df b4 62 31 9b e1 93 f5 81 86
%ymm13   87 97 bd dd cc e5 b4 87 18 0d 1f e3 04 cc a2 35 1d 40 96 cf 46 9d 79 6f 1c ee 90 67 8c 5f cc aa
%ymm14   46 9f 3d bc 18 a6 ff 3b da 1a 87 53 01 7a 33 1e 75 67 7c 40 4a 3c aa 7a f6 0d 01 86 f1 13 f6 89
%ymm15   58 a4 97 24 5e f8 e6 a2 e0 40 a2 a5 66 88 1e 13 87 a4 e0 68 2e 79 ec ee 2f b0 44 b4 ba 37 b3 34

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   8a 79 6a 5c b6 4a 5d a4 
00000006 fffffff0   v v v v v v v v   6f 12 4c ca 7b 28 6c 83 
00000006 ffffffe8   v v v v v v v v   41 ca a3 01 27 fe 9a 9f 
00000006 ffffffe0   v v v v v v v v   e0 87 18 3c a7 af 0d 2e 

[ 00000000 0f12ee88 - 00000000 0f12ee60 ]
[ 1 valid rows shown ]

00000000 0f12ee70   . . . . v v v v   00 00 00 00 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (5)                                                Lowest Known Correct Cost (5)                                             
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32          movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  2     0x2   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  2     0x2   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  3     0x6   3      OPC=movq_r64_r64          movq %rdi, %rdx           #  3     0x6   3      OPC=movq_r64_r64        
  xorl %eax, %eax           #  4     0x9   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  4     0x9   2      OPC=xorl_r32_r32        
  nop                       #  5     0xb   1      OPC=nop                   nop                       #  5     0xb   1      OPC=nop                 
  nop                       #  6     0xc   1      OPC=nop                   nop                       #  6     0xc   1      OPC=nop                 
  je .L_142ce0              #  7     0xd   2      OPC=je_label              je .L_142ce0              #  7     0xd   2      OPC=je_label            
  nop                       #  8     0xf   1      OPC=nop                   nop                       #  8     0xf   1      OPC=nop                 
  nop                       #  9     0x10  1      OPC=nop                   nop                       #  9     0x10  1      OPC=nop                 
  nop                       #  10    0x11  1      OPC=nop                   nop                       #  10    0x11  1      OPC=nop                 
  nop                       #  11    0x12  1      OPC=nop                   nop                       #  11    0x12  1      OPC=nop                 
  nop                       #  12    0x13  1      OPC=nop                   nop                       #  12    0x13  1      OPC=nop                 
  nop                       #  13    0x14  1      OPC=nop                   nop                       #  13    0x14  1      OPC=nop                 
  nop                       #  14    0x15  1      OPC=nop                   nop                       #  14    0x15  1      OPC=nop                 
  nop                       #  15    0x16  1      OPC=nop                   nop                       #  15    0x16  1      OPC=nop                 
  nop                       #  16    0x17  1      OPC=nop                   nop                       #  16    0x17  1      OPC=nop                 
  nop                       #  17    0x18  1      OPC=nop                   nop                       #  17    0x18  1      OPC=nop                 
  nop                       #  18    0x19  1      OPC=nop                   nop                       #  18    0x19  1      OPC=nop                 
  nop                       #  19    0x1a  1      OPC=nop                   nop                       #  19    0x1a  1      OPC=nop                 
  nop                       #  20    0x1b  1      OPC=nop                   nop                       #  20    0x1b  1      OPC=nop                 
  nop                       #  21    0x1c  1      OPC=nop                   nop                       #  21    0x1c  1      OPC=nop                 
  nop                       #  22    0x1d  1      OPC=nop                   nop                       #  22    0x1d  1      OPC=nop                 
  nop                       #  23    0x1e  1      OPC=nop                   nop                       #  23    0x1e  1      OPC=nop                 
  nop                       #  24    0x1f  1      OPC=nop                   nop                       #  24    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  subb %ah, %dh             #  25    0x20  2      OPC=subb_rh_rh_1          subb %ah, %dh             #  25    0x20  2      OPC=subb_rh_rh_1        
  nop                       #  26    0x22  1      OPC=nop                   nop                       #  26    0x22  1      OPC=nop                 
  nop                       #  27    0x23  1      OPC=nop                   nop                       #  27    0x23  1      OPC=nop                 
  nop                       #  28    0x24  1      OPC=nop                   nop                       #  28    0x24  1      OPC=nop                 
  nop                       #  29    0x25  1      OPC=nop                   nop                       #  29    0x25  1      OPC=nop                 
  nop                       #  30    0x26  1      OPC=nop                   nop                       #  30    0x26  1      OPC=nop                 
  nop                       #  31    0x27  1      OPC=nop                   nop                       #  31    0x27  1      OPC=nop                 
  xorb %cl, %cl             #  32    0x28  2      OPC=xorb_r8_r8            xorb %cl, %cl             #  32    0x28  2      OPC=xorb_r8_r8          
  nop                       #  33    0x2a  1      OPC=nop                   nop                       #  33    0x2a  1      OPC=nop                 
  nop                       #  34    0x2b  1      OPC=nop                   nop                       #  34    0x2b  1      OPC=nop                 
  jne .L_142cc0             #  35    0x2c  2      OPC=jne_label             jne .L_142cc0             #  35    0x2c  2      OPC=jne_label           
  movl %ecx, %eax           #  36    0x2e  2      OPC=movl_r32_r32          movl %ecx, %eax           #  36    0x2e  2      OPC=movl_r32_r32        
  nop                       #  37    0x30  1      OPC=nop                   nop                       #  37    0x30  1      OPC=nop                 
  nop                       #  38    0x31  1      OPC=nop                   nop                       #  38    0x31  1      OPC=nop                 
  nop                       #  39    0x32  1      OPC=nop                   nop                       #  39    0x32  1      OPC=nop                 
  nop                       #  40    0x33  1      OPC=nop                   nop                       #  40    0x33  1      OPC=nop                 
  nop                       #  41    0x34  1      OPC=nop                   nop                       #  41    0x34  1      OPC=nop                 
  nop                       #  42    0x35  1      OPC=nop                   nop                       #  42    0x35  1      OPC=nop                 
  nop                       #  43    0x36  1      OPC=nop                   nop                       #  43    0x36  1      OPC=nop                 
  nop                       #  44    0x37  1      OPC=nop                   nop                       #  44    0x37  1      OPC=nop                 
  nop                       #  45    0x38  1      OPC=nop                   nop                       #  45    0x38  1      OPC=nop                 
  nop                       #  46    0x39  1      OPC=nop                   nop                       #  46    0x39  1      OPC=nop                 
  nop                       #  47    0x3a  1      OPC=nop                   nop                       #  47    0x3a  1      OPC=nop                 
  nop                       #  48    0x3b  1      OPC=nop                   nop                       #  48    0x3b  1      OPC=nop                 
  nop                       #  49    0x3c  1      OPC=nop                   nop                       #  49    0x3c  1      OPC=nop                 
  nop                       #  50    0x3d  1      OPC=nop                   nop                       #  50    0x3d  1      OPC=nop                 
  subl %edi, %eax           #  51    0x3e  2      OPC=subl_r32_r32          subl %edi, %eax           #  51    0x3e  2      OPC=subl_r32_r32        
.L_142ce0:                  #        0x40  0      OPC=<label>             .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  52    0x40  2      OPC=popq_r64_1            popq %r11                 #  52    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  53    0x42  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  53    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  54    0x46  3      OPC=addq_r64_r64          addq %r15, %r11           #  54    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  55    0x49  3      OPC=jmpq_r64              jmpq %r11                 #  55    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (4)                                                Lowest Known Correct Cost (5)                                             
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  orl %edi, %edi            #  1     0     2      OPC=orl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  2     0x2   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  2     0x2   4      OPC=movl_r32_m32        
  xorl %eax, %eax           #  3     0x6   2      OPC=xorl_r32_r32          movq %rdi, %rdx           #  3     0x6   3      OPC=movq_r64_r64        
  je .L_142ce0              #  4     0x8   2      OPC=je_label              xorl %eax, %eax           #  4     0x9   2      OPC=xorl_r32_r32        
  nop                       #  5     0xa   1      OPC=nop                   nop                       #  5     0xb   1      OPC=nop                 
  nop                       #  6     0xb   1      OPC=nop                   nop                       #  6     0xc   1      OPC=nop                 
  nop                       #  7     0xc   1      OPC=nop                   je .L_142ce0              #  7     0xd   2      OPC=je_label            
  nop                       #  8     0xd   1      OPC=nop                   nop                       #  8     0xf   1      OPC=nop                 
  shlb $0x1, %cl            #  9     0xe   2      OPC=shlb_r8_one           nop                       #  9     0x10  1      OPC=nop                 
  nop                       #  10    0x10  1      OPC=nop                   nop                       #  10    0x11  1      OPC=nop                 
  nop                       #  11    0x11  1      OPC=nop                   nop                       #  11    0x12  1      OPC=nop                 
  nopl %eax                 #  12    0x12  3      OPC=nopl_r32              nop                       #  12    0x13  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                   nop                       #  13    0x14  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                   nop                       #  14    0x15  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                   nop                       #  15    0x16  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                   nop                       #  16    0x17  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                   nop                       #  17    0x18  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                   nop                       #  18    0x19  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                   nop                       #  19    0x1a  1      OPC=nop                 
  nopl %eax                 #  20    0x1c  3      OPC=nopl_r32              nop                       #  20    0x1b  1      OPC=nop                 
  nop                       #  21    0x1f  1      OPC=nop                   nop                       #  21    0x1c  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>               nop                       #  22    0x1d  1      OPC=nop                 
  nop                       #  22    0x20  1      OPC=nop                   nop                       #  23    0x1e  1      OPC=nop                 
  orb $0xfa, %al            #  23    0x21  2      OPC=orb_al_imm8           nop                       #  24    0x1f  1      OPC=nop                 
  nop                       #  24    0x23  1      OPC=nop                 .L_142cc0:                  #        0x20  0      OPC=<label>             
  nop                       #  25    0x24  1      OPC=nop                   subb %ah, %dh             #  25    0x20  2      OPC=subb_rh_rh_1        
  nop                       #  26    0x25  1      OPC=nop                   nop                       #  26    0x22  1      OPC=nop                 
  andb %cl, %dil            #  27    0x26  3      OPC=andb_r8_r8            nop                       #  27    0x23  1      OPC=nop                 
  nop                       #  28    0x29  1      OPC=nop                   nop                       #  28    0x24  1      OPC=nop                 
  nop                       #  29    0x2a  1      OPC=nop                   nop                       #  29    0x25  1      OPC=nop                 
  nop                       #  30    0x2b  1      OPC=nop                   nop                       #  30    0x26  1      OPC=nop                 
  nop                       #  31    0x2c  1      OPC=nop                   nop                       #  31    0x27  1      OPC=nop                 
  nop                       #  32    0x2d  1      OPC=nop                   xorb %cl, %cl             #  32    0x28  2      OPC=xorb_r8_r8          
  jne .L_142cc0             #  33    0x2e  2      OPC=jne_label             nop                       #  33    0x2a  1      OPC=nop                 
  nop                       #  34    0x30  1      OPC=nop                   nop                       #  34    0x2b  1      OPC=nop                 
  nop                       #  35    0x31  1      OPC=nop                   jne .L_142cc0             #  35    0x2c  2      OPC=jne_label           
  nop                       #  36    0x32  1      OPC=nop                   movl %ecx, %eax           #  36    0x2e  2      OPC=movl_r32_r32        
  nop                       #  37    0x33  1      OPC=nop                   nop                       #  37    0x30  1      OPC=nop                 
  nop                       #  38    0x34  1      OPC=nop                   nop                       #  38    0x31  1      OPC=nop                 
  nop                       #  39    0x35  1      OPC=nop                   nop                       #  39    0x32  1      OPC=nop                 
  nop                       #  40    0x36  1      OPC=nop                   nop                       #  40    0x33  1      OPC=nop                 
  nop                       #  41    0x37  1      OPC=nop                   nop                       #  41    0x34  1      OPC=nop                 
  nop                       #  42    0x38  1      OPC=nop                   nop                       #  42    0x35  1      OPC=nop                 
  nop                       #  43    0x39  1      OPC=nop                   nop                       #  43    0x36  1      OPC=nop                 
  xorb %ah, %ah             #  44    0x3a  2      OPC=xorb_rh_rh_1          nop                       #  44    0x37  1      OPC=nop                 
  nopl %eax                 #  45    0x3c  3      OPC=nopl_r32              nop                       #  45    0x38  1      OPC=nop                 
  nop                       #  46    0x3f  1      OPC=nop                   nop                       #  46    0x39  1      OPC=nop                 
  nop                       #  47    0x40  1      OPC=nop                   nop                       #  47    0x3a  1      OPC=nop                 
.L_142ce0:                  #        0x41  0      OPC=<label>               nop                       #  48    0x3b  1      OPC=nop                 
  popq %r11                 #  48    0x41  2      OPC=popq_r64_1            nop                       #  49    0x3c  1      OPC=nop                 
  andl $0xe0, %r11d         #  49    0x43  4      OPC=andl_r32_imm8         nop                       #  50    0x3d  1      OPC=nop                 
  addq %r15, %r11           #  50    0x47  3      OPC=addq_r64_r64          subl %edi, %eax           #  51    0x3e  2      OPC=subl_r32_r32        
  jmpq %r11                 #  51    0x4a  3      OPC=jmpq_r64            .L_142ce0:                  #        0x40  0      OPC=<label>             
                                                                            popq %r11                 #  52    0x40  2      OPC=popq_r64_1          
.size wcslen, .-wcslen                                                      andl $0xe0, %r11d         #  53    0x42  4      OPC=andl_r32_imm8       
                                                                            addq %r15, %r11           #  54    0x46  3      OPC=addq_r64_r64        
                                                                            jmpq %r11                 #  55    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (3)                                                Lowest Known Correct Cost (3)                                             
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  orl %edi, %edi            #  1     0     2      OPC=orl_r32_r32           orl %edi, %edi            #  1     0     2      OPC=orl_r32_r32         
  movl (%r15,%rdi,1), %ecx  #  2     0x2   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  2     0x2   4      OPC=movl_r32_m32        
  xorl %eax, %eax           #  3     0x6   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  3     0x6   2      OPC=xorl_r32_r32        
  je .L_142ce0              #  4     0x8   2      OPC=je_label              je .L_142ce0              #  4     0x8   2      OPC=je_label            
  nop                       #  5     0xa   1      OPC=nop                   nop                       #  5     0xa   1      OPC=nop                 
  nop                       #  6     0xb   1      OPC=nop                   nop                       #  6     0xb   1      OPC=nop                 
  nop                       #  7     0xc   1      OPC=nop                   nop                       #  7     0xc   1      OPC=nop                 
  nop                       #  8     0xd   1      OPC=nop                   nop                       #  8     0xd   1      OPC=nop                 
  nop                       #  9     0xe   1      OPC=nop                   nop                       #  9     0xe   1      OPC=nop                 
  nop                       #  10    0xf   1      OPC=nop                   nop                       #  10    0xf   1      OPC=nop                 
  nop                       #  11    0x10  1      OPC=nop                   nop                       #  11    0x10  1      OPC=nop                 
  nop                       #  12    0x11  1      OPC=nop                   nop                       #  12    0x11  1      OPC=nop                 
  nopl %eax                 #  13    0x12  3      OPC=nopl_r32              nopl %eax                 #  13    0x12  3      OPC=nopl_r32            
  nop                       #  14    0x15  1      OPC=nop                   nop                       #  14    0x15  1      OPC=nop                 
  nop                       #  15    0x16  1      OPC=nop                   nop                       #  15    0x16  1      OPC=nop                 
  nop                       #  16    0x17  1      OPC=nop                   nop                       #  16    0x17  1      OPC=nop                 
  nop                       #  17    0x18  1      OPC=nop                   nop                       #  17    0x18  1      OPC=nop                 
  nop                       #  18    0x19  1      OPC=nop                   nop                       #  18    0x19  1      OPC=nop                 
  nop                       #  19    0x1a  1      OPC=nop                   nop                       #  19    0x1a  1      OPC=nop                 
  nop                       #  20    0x1b  1      OPC=nop                   nop                       #  20    0x1b  1      OPC=nop                 
  nopl %eax                 #  21    0x1c  3      OPC=nopl_r32              nopl %eax                 #  21    0x1c  3      OPC=nopl_r32            
  nop                       #  22    0x1f  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  nop                       #  23    0x20  1      OPC=nop                   nop                       #  23    0x20  1      OPC=nop                 
  orb $0xfa, %al            #  24    0x21  2      OPC=orb_al_imm8           orb $0xfa, %al            #  24    0x21  2      OPC=orb_al_imm8         
  nop                       #  25    0x23  1      OPC=nop                   nop                       #  25    0x23  1      OPC=nop                 
  nop                       #  26    0x24  1      OPC=nop                   nop                       #  26    0x24  1      OPC=nop                 
  nop                       #  27    0x25  1      OPC=nop                   nop                       #  27    0x25  1      OPC=nop                 
  nop                       #  28    0x26  1      OPC=nop                   nop                       #  28    0x26  1      OPC=nop                 
  nop                       #  29    0x27  1      OPC=nop                   nop                       #  29    0x27  1      OPC=nop                 
  nop                       #  30    0x28  1      OPC=nop                   nop                       #  30    0x28  1      OPC=nop                 
  nop                       #  31    0x29  1      OPC=nop                   nop                       #  31    0x29  1      OPC=nop                 
  nop                       #  32    0x2a  1      OPC=nop                   nop                       #  32    0x2a  1      OPC=nop                 
  nop                       #  33    0x2b  1      OPC=nop                   nop                       #  33    0x2b  1      OPC=nop                 
  jne .L_142cc0             #  34    0x2c  2      OPC=jne_label             jne .L_142cc0             #  34    0x2c  2      OPC=jne_label           
  nop                       #  35    0x2e  1      OPC=nop                   nop                       #  35    0x2e  1      OPC=nop                 
  nop                       #  36    0x2f  1      OPC=nop                   nop                       #  36    0x2f  1      OPC=nop                 
  nop                       #  37    0x30  1      OPC=nop                   nop                       #  37    0x30  1      OPC=nop                 
  nop                       #  38    0x31  1      OPC=nop                   nop                       #  38    0x31  1      OPC=nop                 
  nop                       #  39    0x32  1      OPC=nop                   nop                       #  39    0x32  1      OPC=nop                 
  nop                       #  40    0x33  1      OPC=nop                   nop                       #  40    0x33  1      OPC=nop                 
  nop                       #  41    0x34  1      OPC=nop                   nop                       #  41    0x34  1      OPC=nop                 
  nop                       #  42    0x35  1      OPC=nop                   nop                       #  42    0x35  1      OPC=nop                 
  nop                       #  43    0x36  1      OPC=nop                   nop                       #  43    0x36  1      OPC=nop                 
  xorb %ah, %ah             #  44    0x37  2      OPC=xorb_rh_rh_1          xorb %ah, %ah             #  44    0x37  2      OPC=xorb_rh_rh_1        
  nopl %eax                 #  45    0x39  3      OPC=nopl_r32              nopl %eax                 #  45    0x39  3      OPC=nopl_r32            
  nopl %eax                 #  46    0x3c  3      OPC=nopl_r32              nopl %eax                 #  46    0x3c  3      OPC=nopl_r32            
  nop                       #  47    0x3f  1      OPC=nop                   nop                       #  47    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>             .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  48    0x40  2      OPC=popq_r64_1            popq %r11                 #  48    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  49    0x42  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  49    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  50    0x46  3      OPC=addq_r64_r64          addq %r15, %r11           #  50    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  51    0x49  3      OPC=jmpq_r64              jmpq %r11                 #  51    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (2)                                         Lowest Known Correct Cost (2)                                      
                                                                                                                                      
  .text                                                              .text                                                            
  .globl wcslen                                                      .globl wcslen                                                    
  .type wcslen, @function                                            .type wcslen, @function                                          
                                                                                                                                      
#! file-offset 0                                                   #! file-offset 0                                                   
#! rip-offset  0                                                   #! rip-offset  0                                                   
#! capacity    0 bytes                                             #! capacity    0 bytes                                             
                                                                                                                                      
# Text               #  Line  RIP   Bytes  Opcode                  # Text               #  Line  RIP   Bytes  Opcode                  
.wcslen:             #        0     0      OPC=<label>             .wcslen:             #        0     0      OPC=<label>             
  xorl %eax, %eax    #  1     0     2      OPC=xorl_r32_r32          xorl %eax, %eax    #  1     0     2      OPC=xorl_r32_r32        
  nop                #  2     0x2   1      OPC=nop                   nop                #  2     0x2   1      OPC=nop                 
  nop                #  3     0x3   1      OPC=nop                   nop                #  3     0x3   1      OPC=nop                 
  nop                #  4     0x4   1      OPC=nop                   nop                #  4     0x4   1      OPC=nop                 
  nop                #  5     0x5   1      OPC=nop                   nop                #  5     0x5   1      OPC=nop                 
  nop                #  6     0x6   1      OPC=nop                   nop                #  6     0x6   1      OPC=nop                 
  nop                #  7     0x7   1      OPC=nop                   nop                #  7     0x7   1      OPC=nop                 
  nop                #  8     0x8   1      OPC=nop                   nop                #  8     0x8   1      OPC=nop                 
  nop                #  9     0x9   1      OPC=nop                   nop                #  9     0x9   1      OPC=nop                 
  nop                #  10    0xa   1      OPC=nop                   nop                #  10    0xa   1      OPC=nop                 
  nop                #  11    0xb   1      OPC=nop                   nop                #  11    0xb   1      OPC=nop                 
  nop                #  12    0xc   1      OPC=nop                   nop                #  12    0xc   1      OPC=nop                 
  nop                #  13    0xd   1      OPC=nop                   nop                #  13    0xd   1      OPC=nop                 
  je .L_142ce0       #  14    0xe   2      OPC=je_label              je .L_142ce0       #  14    0xe   2      OPC=je_label            
  nop                #  15    0x10  1      OPC=nop                   nop                #  15    0x10  1      OPC=nop                 
  nop                #  16    0x11  1      OPC=nop                   nop                #  16    0x11  1      OPC=nop                 
  nop                #  17    0x12  1      OPC=nop                   nop                #  17    0x12  1      OPC=nop                 
  nop                #  18    0x13  1      OPC=nop                   nop                #  18    0x13  1      OPC=nop                 
  nop                #  19    0x14  1      OPC=nop                   nop                #  19    0x14  1      OPC=nop                 
  nop                #  20    0x15  1      OPC=nop                   nop                #  20    0x15  1      OPC=nop                 
  nop                #  21    0x16  1      OPC=nop                   nop                #  21    0x16  1      OPC=nop                 
  nop                #  22    0x17  1      OPC=nop                   nop                #  22    0x17  1      OPC=nop                 
  nop                #  23    0x18  1      OPC=nop                   nop                #  23    0x18  1      OPC=nop                 
  nop                #  24    0x19  1      OPC=nop                   nop                #  24    0x19  1      OPC=nop                 
  nop                #  25    0x1a  1      OPC=nop                   nop                #  25    0x1a  1      OPC=nop                 
  nop                #  26    0x1b  1      OPC=nop                   nop                #  26    0x1b  1      OPC=nop                 
  nop                #  27    0x1c  1      OPC=nop                   nop                #  27    0x1c  1      OPC=nop                 
  nop                #  28    0x1d  1      OPC=nop                   nop                #  28    0x1d  1      OPC=nop                 
  nop                #  29    0x1e  1      OPC=nop                   nop                #  29    0x1e  1      OPC=nop                 
  nop                #  30    0x1f  1      OPC=nop                   nop                #  30    0x1f  1      OPC=nop                 
.L_142cc0:           #        0x20  0      OPC=<label>             .L_142cc0:           #        0x20  0      OPC=<label>             
  nop                #  31    0x20  1      OPC=nop                   nop                #  31    0x20  1      OPC=nop                 
  nop                #  32    0x21  1      OPC=nop                   nop                #  32    0x21  1      OPC=nop                 
  nop                #  33    0x22  1      OPC=nop                   nop                #  33    0x22  1      OPC=nop                 
  nop                #  34    0x23  1      OPC=nop                   nop                #  34    0x23  1      OPC=nop                 
  nop                #  35    0x24  1      OPC=nop                   nop                #  35    0x24  1      OPC=nop                 
  nop                #  36    0x25  1      OPC=nop                   nop                #  36    0x25  1      OPC=nop                 
  nop                #  37    0x26  1      OPC=nop                   nop                #  37    0x26  1      OPC=nop                 
  nop                #  38    0x27  1      OPC=nop                   nop                #  38    0x27  1      OPC=nop                 
  nop                #  39    0x28  1      OPC=nop                   nop                #  39    0x28  1      OPC=nop                 
  decb %al           #  40    0x29  2      OPC=decb_r8               decb %al           #  40    0x29  2      OPC=decb_r8             
  nop                #  41    0x2b  1      OPC=nop                   nop                #  41    0x2b  1      OPC=nop                 
  nop                #  42    0x2c  1      OPC=nop                   nop                #  42    0x2c  1      OPC=nop                 
  nop                #  43    0x2d  1      OPC=nop                   nop                #  43    0x2d  1      OPC=nop                 
  nop                #  44    0x2e  1      OPC=nop                   nop                #  44    0x2e  1      OPC=nop                 
  nop                #  45    0x2f  1      OPC=nop                   nop                #  45    0x2f  1      OPC=nop                 
  jne .L_142cc0      #  46    0x30  2      OPC=jne_label             jne .L_142cc0      #  46    0x30  2      OPC=jne_label           
  nop                #  47    0x32  1      OPC=nop                   nop                #  47    0x32  1      OPC=nop                 
  nop                #  48    0x33  1      OPC=nop                   nop                #  48    0x33  1      OPC=nop                 
  nop                #  49    0x34  1      OPC=nop                   nop                #  49    0x34  1      OPC=nop                 
  nop                #  50    0x35  1      OPC=nop                   nop                #  50    0x35  1      OPC=nop                 
  nop                #  51    0x36  1      OPC=nop                   nop                #  51    0x36  1      OPC=nop                 
  nop                #  52    0x37  1      OPC=nop                   nop                #  52    0x37  1      OPC=nop                 
  nop                #  53    0x38  1      OPC=nop                   nop                #  53    0x38  1      OPC=nop                 
  nop                #  54    0x39  1      OPC=nop                   nop                #  54    0x39  1      OPC=nop                 
  nop                #  55    0x3a  1      OPC=nop                   nop                #  55    0x3a  1      OPC=nop                 
  nop                #  56    0x3b  1      OPC=nop                   nop                #  56    0x3b  1      OPC=nop                 
  nop                #  57    0x3c  1      OPC=nop                   nop                #  57    0x3c  1      OPC=nop                 
  nop                #  58    0x3d  1      OPC=nop                   nop                #  58    0x3d  1      OPC=nop                 
  nop                #  59    0x3e  1      OPC=nop                   nop                #  59    0x3e  1      OPC=nop                 
  nop                #  60    0x3f  1      OPC=nop                   nop                #  60    0x3f  1      OPC=nop                 
.L_142ce0:           #        0x40  0      OPC=<label>             .L_142ce0:           #        0x40  0      OPC=<label>             
  popq %r11          #  61    0x40  2      OPC=popq_r64_1            popq %r11          #  61    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d  #  62    0x42  4      OPC=andl_r32_imm8         andl $0xe0, %r11d  #  62    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11    #  63    0x46  3      OPC=addq_r64_r64          addq %r15, %r11    #  63    0x46  3      OPC=addq_r64_r64        
  jmpq %r11          #  64    0x49  3      OPC=jmpq_r64              jmpq %r11          #  64    0x49  3      OPC=jmpq_r64            
                                                                                                                                      
.size wcslen, .-wcslen                                             .size wcslen, .-wcslen                                             
                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (1)                                         Lowest Known Correct Cost (1)                                      
                                                                                                                                      
  .text                                                              .text                                                            
  .globl wcslen                                                      .globl wcslen                                                    
  .type wcslen, @function                                            .type wcslen, @function                                          
                                                                                                                                      
#! file-offset 0                                                   #! file-offset 0                                                   
#! rip-offset  0                                                   #! rip-offset  0                                                   
#! capacity    0 bytes                                             #! capacity    0 bytes                                             
                                                                                                                                      
# Text               #  Line  RIP   Bytes  Opcode                  # Text               #  Line  RIP   Bytes  Opcode                  
.wcslen:             #        0     0      OPC=<label>             .wcslen:             #        0     0      OPC=<label>             
  xorl %eax, %eax    #  1     0     2      OPC=xorl_r32_r32          xorl %eax, %eax    #  1     0     2      OPC=xorl_r32_r32        
  je .L_142ce0       #  2     0x2   2      OPC=je_label              je .L_142ce0       #  2     0x2   2      OPC=je_label            
  nop                #  3     0x4   1      OPC=nop                   nop                #  3     0x4   1      OPC=nop                 
  nop                #  4     0x5   1      OPC=nop                   nop                #  4     0x5   1      OPC=nop                 
  nop                #  5     0x6   1      OPC=nop                   nop                #  5     0x6   1      OPC=nop                 
  nop                #  6     0x7   1      OPC=nop                   nop                #  6     0x7   1      OPC=nop                 
  nop                #  7     0x8   1      OPC=nop                   nop                #  7     0x8   1      OPC=nop                 
  nop                #  8     0x9   1      OPC=nop                   nop                #  8     0x9   1      OPC=nop                 
  nop                #  9     0xa   1      OPC=nop                   nop                #  9     0xa   1      OPC=nop                 
  nop                #  10    0xb   1      OPC=nop                   nop                #  10    0xb   1      OPC=nop                 
  nop                #  11    0xc   1      OPC=nop                   nop                #  11    0xc   1      OPC=nop                 
  nop                #  12    0xd   1      OPC=nop                   nop                #  12    0xd   1      OPC=nop                 
  addb $0xfb, %al    #  13    0xe   2      OPC=addb_al_imm8          addb $0xfb, %al    #  13    0xe   2      OPC=addb_al_imm8        
  nop                #  14    0x10  1      OPC=nop                   nop                #  14    0x10  1      OPC=nop                 
  nop                #  15    0x11  1      OPC=nop                   nop                #  15    0x11  1      OPC=nop                 
  nop                #  16    0x12  1      OPC=nop                   nop                #  16    0x12  1      OPC=nop                 
  nop                #  17    0x13  1      OPC=nop                   nop                #  17    0x13  1      OPC=nop                 
  nop                #  18    0x14  1      OPC=nop                   nop                #  18    0x14  1      OPC=nop                 
  nop                #  19    0x15  1      OPC=nop                   nop                #  19    0x15  1      OPC=nop                 
  nop                #  20    0x16  1      OPC=nop                   nop                #  20    0x16  1      OPC=nop                 
  nopl %eax          #  21    0x17  3      OPC=nopl_r32              nopl %eax          #  21    0x17  3      OPC=nopl_r32            
  nop                #  22    0x1a  1      OPC=nop                   nop                #  22    0x1a  1      OPC=nop                 
  nop                #  23    0x1b  1      OPC=nop                   nop                #  23    0x1b  1      OPC=nop                 
  nop                #  24    0x1c  1      OPC=nop                   nop                #  24    0x1c  1      OPC=nop                 
  nop                #  25    0x1d  1      OPC=nop                   nop                #  25    0x1d  1      OPC=nop                 
  nop                #  26    0x1e  1      OPC=nop                   nop                #  26    0x1e  1      OPC=nop                 
  nop                #  27    0x1f  1      OPC=nop                   nop                #  27    0x1f  1      OPC=nop                 
.L_142cc0:           #        0x20  0      OPC=<label>             .L_142cc0:           #        0x20  0      OPC=<label>             
  jne .L_142cc0      #  28    0x20  2      OPC=jne_label             jne .L_142cc0      #  28    0x20  2      OPC=jne_label           
  nop                #  29    0x22  1      OPC=nop                   nop                #  29    0x22  1      OPC=nop                 
  nop                #  30    0x23  1      OPC=nop                   nop                #  30    0x23  1      OPC=nop                 
  nop                #  31    0x24  1      OPC=nop                   nop                #  31    0x24  1      OPC=nop                 
  nop                #  32    0x25  1      OPC=nop                   nop                #  32    0x25  1      OPC=nop                 
  nop                #  33    0x26  1      OPC=nop                   nop                #  33    0x26  1      OPC=nop                 
  nop                #  34    0x27  1      OPC=nop                   nop                #  34    0x27  1      OPC=nop                 
  nop                #  35    0x28  1      OPC=nop                   nop                #  35    0x28  1      OPC=nop                 
  nop                #  36    0x29  1      OPC=nop                   nop                #  36    0x29  1      OPC=nop                 
  nop                #  37    0x2a  1      OPC=nop                   nop                #  37    0x2a  1      OPC=nop                 
  nop                #  38    0x2b  1      OPC=nop                   nop                #  38    0x2b  1      OPC=nop                 
  nop                #  39    0x2c  1      OPC=nop                   nop                #  39    0x2c  1      OPC=nop                 
  nop                #  40    0x2d  1      OPC=nop                   nop                #  40    0x2d  1      OPC=nop                 
  nop                #  41    0x2e  1      OPC=nop                   nop                #  41    0x2e  1      OPC=nop                 
  nop                #  42    0x2f  1      OPC=nop                   nop                #  42    0x2f  1      OPC=nop                 
  incb %al           #  43    0x30  2      OPC=incb_r8               incb %al           #  43    0x30  2      OPC=incb_r8             
  nop                #  44    0x32  1      OPC=nop                   nop                #  44    0x32  1      OPC=nop                 
  nop                #  45    0x33  1      OPC=nop                   nop                #  45    0x33  1      OPC=nop                 
  nop                #  46    0x34  1      OPC=nop                   nop                #  46    0x34  1      OPC=nop                 
  nop                #  47    0x35  1      OPC=nop                   nop                #  47    0x35  1      OPC=nop                 
  nop                #  48    0x36  1      OPC=nop                   nop                #  48    0x36  1      OPC=nop                 
  nop                #  49    0x37  1      OPC=nop                   nop                #  49    0x37  1      OPC=nop                 
  nop                #  50    0x38  1      OPC=nop                   nop                #  50    0x38  1      OPC=nop                 
  xorb $0x20, %al    #  51    0x39  2      OPC=xorb_al_imm8          xorb $0x20, %al    #  51    0x39  2      OPC=xorb_al_imm8        
  nop                #  52    0x3b  1      OPC=nop                   nop                #  52    0x3b  1      OPC=nop                 
  nop                #  53    0x3c  1      OPC=nop                   nop                #  53    0x3c  1      OPC=nop                 
  orb $0xf8, %al     #  54    0x3d  2      OPC=orb_al_imm8           orb $0xf8, %al     #  54    0x3d  2      OPC=orb_al_imm8         
  nop                #  55    0x3f  1      OPC=nop                   nop                #  55    0x3f  1      OPC=nop                 
.L_142ce0:           #        0x40  0      OPC=<label>             .L_142ce0:           #        0x40  0      OPC=<label>             
  popq %r11          #  56    0x40  2      OPC=popq_r64_1            popq %r11          #  56    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d  #  57    0x42  4      OPC=andl_r32_imm8         andl $0xe0, %r11d  #  57    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11    #  58    0x46  3      OPC=addq_r64_r64          addq %r15, %r11    #  58    0x46  3      OPC=addq_r64_r64        
  jmpq %r11          #  59    0x49  3      OPC=jmpq_r64              jmpq %r11          #  59    0x49  3      OPC=jmpq_r64            
                                                                                                                                      
.size wcslen, .-wcslen                                             .size wcslen, .-wcslen                                             
                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  33.2974s
Iterations/s:                  3003.24

Starting cost:                 6
Lowest cost:                   1
Lowest correct cost:           1

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.364%       7.674%        7.674%       
Opcode          8.239%       7.833%        7.826%       
Operand         8.246%       3.028%        2.625%       
Global Swap     8.575%       7.647%        7.38%        
Local Swap      8.421%       3.682%        3.639%       
ReplaceNop      8.355%       7.947%        7.943%       
Rotate          8.264%       7.473%        5.471%       
Delete          8.478%       8.056%        6.624%       
Instruction     8.287%       3.148%        0.654%       
Add Nops        8.13%        8.13%         6.137%       
OpcodeWidth     8.273%       7.688%        7.599%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.368%       0.01%         0%           
                                                        
Total           100%         72.316%       63.572%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  129.664s
Iterations/s:                  1542.45

Starting cost:                 6
Lowest cost:                   1
Lowest correct cost:           1

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.3995%      7.941%        7.941%       
Opcode          8.331%       8.0535%       8.0485%      
Operand         8.304%       3.8895%       3.4145%      
Global Swap     8.3585%      7.7335%       7.51%        
Local Swap      8.4155%      4.0455%       3.9765%      
ReplaceNop      8.31%        8.036%        8.034%       
Rotate          8.3465%      7.8035%       6.1945%      
Delete          8.345%       8.0515%       6.9245%      
Instruction     8.3155%      3.5705%       0.773%       
Add Nops        8.1655%      8.1655%       6.564%       
OpcodeWidth     8.309%       7.8895%       7.8%         
2xWeighted      0%           0%            0%           
Memory+Swap     8.4%         0.005%        0%           
                                                        
Total           100%         75.1845%      67.1805%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  281.365s
Iterations/s:                  1066.23

Starting cost:                 6
Lowest cost:                   1
Lowest correct cost:           1

Move Type       Proposed     Succeeded       Accepted      
                                                           
Global Copy     8.33667%     7.986%          7.986%        
Opcode          8.31267%     8.09933%        8.09433%      
Operand         8.35333%     4.30767%        3.80933%      
Global Swap     8.342%       7.85833%        7.66533%      
Local Swap      8.42833%     4.18567%        4.11733%      
ReplaceNop      8.34033%     8.12967%        8.12833%      
Rotate          8.312%       7.89067%        6.48733%      
Delete          8.33%        8.09733%        7.06933%      
Instruction     8.347%       3.74267%        0.817667%     
Add Nops        8.206%       8.206%          6.766%        
OpcodeWidth     8.336%       7.99167%        7.906%        
2xWeighted      0%           0%              0%            
Memory+Swap     8.35567%     0.00333333%     0%            
                                                           
Total           100%         76.4983%        68.847%       

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  494.208s
Iterations/s:                  809.376

Starting cost:                 6
Lowest cost:                   1
Lowest correct cost:           1

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.3405%      8.04875%      8.04875%     
Opcode          8.30775%     8.13025%      8.126%       
Operand         8.329%       4.49875%      3.98375%     
Global Swap     8.348%       7.94625%      7.779%       
Local Swap      8.4275%      4.25575%      4.17775%     
ReplaceNop      8.337%       8.156%        8.155%       
Rotate          8.278%       7.92875%      6.65625%     
Delete          8.32525%     8.131%        7.141%       
Instruction     8.365%       3.8745%       0.83425%     
Add Nops        8.25925%     8.25925%      6.89725%     
OpcodeWidth     8.29275%     7.99625%      7.913%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.39%        0.0025%       0%           
                                                        
Total           100%         77.228%       69.712%      

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  726.844s
Iterations/s:                  687.905

Starting cost:                 6
Lowest cost:                   1
Lowest correct cost:           1

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.3478%      8.0956%       8.0956%      
Opcode          8.3304%      8.1758%       8.1714%      
Operand         8.3266%      4.6356%       4.1082%      
Global Swap     8.3032%      7.9558%       7.8052%      
Local Swap      8.4026%      4.279%        4.203%       
ReplaceNop      8.3282%      8.1686%       8.1678%      
Rotate          8.2952%      7.9858%       6.7764%      
Delete          8.3506%      8.1832%       7.1952%      
Instruction     8.3892%      3.944%        0.8688%      
Add Nops        8.2536%      8.2536%       6.9414%      
OpcodeWidth     8.2962%      8.032%        7.9518%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3764%      0.002%        0%           
                                                        
Total           100%         77.711%       70.2848%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     30 4e 27 ff 7c f0 44 35
%rcx     e0 de 9a 69 f1 c3 70 86
%rdx     9f bf cf a6 02 65 30 4c
%rbx     73 70 34 5e ea da f6 8e
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 3e eb a8 65
%rdi     00 00 00 00 3e eb a8 a8
%r8      3d 64 39 04 93 11 d6 ed
%r9      89 44 b4 f0 38 6f bd 20
%r10     44 75 b0 e4 66 6b f0 78
%r11     89 70 5c 0a 18 d1 ca 9e
%r12     d8 d4 60 a7 df d4 d5 4b
%r13     34 ed 06 af c7 07 a4 e4
%r14     3a e5 14 4e 2d 9d 24 6b
%r15     00 00 00 00 0a 19 c1 50

%ymm0    c5 5f da 43 63 01 82 53 9c dd e7 3c 10 51 cd f1 b9 26 e2 b2 17 5b db 29 be 23 aa ff a8 47 6a 9c
%ymm1    bc dc 8d 22 60 7b 00 6e 82 43 a6 ac ba 0a c6 62 a4 d1 a3 45 a5 df 92 8f e7 f8 29 a6 69 15 64 d7
%ymm2    01 36 99 3f 8d b2 80 a9 6a a2 6c 53 13 e9 9c 78 5c e8 a5 87 a9 0c f5 de 10 3b 81 3f fd 9f e0 bf
%ymm3    c8 38 df 7c f7 7f 42 83 79 76 e8 3b ea ce 76 1a ef 3f b5 4d bd b7 dd b0 f4 82 8a ca 31 c3 3a 46
%ymm4    a0 ca a1 30 ef 5e b0 ee 15 3b 3c 9a 11 e7 6a 3d a7 ec 05 97 81 20 dc 73 c7 b3 d5 dd 80 34 e3 d3
%ymm5    70 47 44 c5 d1 6d 59 02 73 3a 6b f9 30 65 16 2b 85 21 76 7a 1b a9 92 de aa 94 0f 46 71 87 fb 95
%ymm6    87 70 75 97 29 1f cd 60 4f 64 52 d1 0b 67 ab 20 21 be d4 33 25 12 93 04 5f c0 fa ea 38 24 12 e7
%ymm7    d0 76 20 d6 e8 a0 1f 07 a0 48 46 06 e3 9f 97 1a c0 57 ea af 60 b8 b6 74 3a b4 88 c5 4e 91 8a 47
%ymm8    50 c2 e1 56 18 bb 09 65 53 23 dc 78 92 f2 ff 64 db d1 95 ca 6f 11 b7 2f a1 36 0c d4 97 98 ca d3
%ymm9    d1 30 83 77 75 57 a9 9f e0 92 53 c0 4f 4e 26 a2 bd 98 f9 3a 4b a1 b9 45 db f9 96 d9 f7 61 b0 1d
%ymm10   d2 fd 33 b3 c0 e5 e8 39 38 e3 70 47 7f 87 6a 0f 03 c6 eb cd a1 76 78 99 f5 68 63 df 9b c2 8b f7
%ymm11   d7 50 5c f1 6a 1f 99 7e f3 a5 7c d9 db 69 cf 55 2a a3 9e 89 78 74 b2 e2 50 6c 13 f1 a9 89 68 ba
%ymm12   e7 e5 74 be 3d 27 16 65 4b 4d 65 92 29 8d 12 86 18 ae 9a 78 e3 16 89 37 c1 db 72 41 b7 b9 4b 55
%ymm13   4e 18 8b 9f 18 ac 7f c9 ee 7a d0 78 18 34 e0 6d 5e 07 0f c3 e7 c6 6c 51 57 fd 28 8f fe bd 6a e4
%ymm14   d7 4b 56 35 f4 23 0d 6a 71 b0 32 4c d3 05 84 5a 82 61 3b d8 b3 01 dc 5e 34 e5 81 01 76 f8 a7 c7
%ymm15   3f a5 b3 21 fd e7 fa 6b 40 52 d2 2e b6 3a f0 91 35 23 2d a1 44 a4 39 16 b1 a2 61 74 a2 a1 17 90

%cf      1 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   cc 99 bc a3 76 93 b2 11 
00000006 fffffff0   v v v v v v v v   00 95 3e 5c 1d ec 14 06 
00000006 ffffffe8   v v v v v v v v   54 2f e6 b1 20 de 92 40 
00000006 ffffffe0   v v v v v v v v   5f 6f 69 25 8b df 8c 8a 

[ 00000000 49056a18 - 00000000 49056980 ]
[ 2 valid rows shown ]

00000000 49056a00   v v v v v v v v   00 00 00 00 fe 1a 36 7b 
00000000 490569f8   v v v v v v v v   82 96 78 32 9d d5 26 46 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (10)                                                Lowest Known Correct Cost (11)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  movq %rdi, %rdx           #  1     0     3      OPC=movq_r64_r64           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %ecx  #  2     0x3   4      OPC=movl_r32_m32           xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  xorl %eax, %eax           #  3     0x7   2      OPC=xorl_r32_r32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x9   1      OPC=nop                    movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0xa   1      OPC=nop                    movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0xb   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xc   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xd   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0xe   1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0xf   1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x10  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x11  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x12  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x13  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x14  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x15  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x16  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  negl %ecx                 #  18    0x17  2      OPC=negl_r32               nop                       #  18    0x1b  1      OPC=nop                 
  je .L_142ce0              #  19    0x19  2      OPC=je_label               nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1b  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1c  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1d  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1e  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
  nop                       #  24    0x1f  1      OPC=nop                    addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
.L_142cc0:                  #        0x20  0      OPC=<label>                movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  nop                       #  25    0x20  1      OPC=nop                    movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  nop                       #  26    0x21  1      OPC=nop                    testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  nop                       #  27    0x22  1      OPC=nop                    jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  nop                       #  28    0x23  1      OPC=nop                    movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x24  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x25  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x26  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x27  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x28  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x29  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x2a  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x2b  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x2c  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x2d  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  salw %cl, %ax             #  39    0x2e  3      OPC=salw_r16_cl            nop                       #  39    0x3c  1      OPC=nop                 
  jne .L_142cc0             #  40    0x31  2      OPC=jne_label              nop                       #  40    0x3d  1      OPC=nop                 
  xorl $0x7, %eax           #  41    0x33  5      OPC=xorl_eax_imm32         nop                       #  41    0x3e  1      OPC=nop                 
  addw $0x6, %ax            #  42    0x38  4      OPC=addw_r16_imm8          nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  43    0x3c  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  44    0x3d  1      OPC=nop                    popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  nop                       #  45    0x3e  1      OPC=nop                    andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  nop                       #  46    0x3f  1      OPC=nop                    addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
.L_142ce0:                  #        0x40  0      OPC=<label>                jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  nop                       #  47    0x40  1      OPC=nop                                                                                            
  nopl %eax                 #  48    0x41  3      OPC=nopl_r32             .size wcslen, .-wcslen                                                    
  nop                       #  49    0x44  1      OPC=nop                                                                                            
  nop                       #  50    0x45  1      OPC=nop                                                                                            
  nop                       #  51    0x46  1      OPC=nop                                                                                            
  nop                       #  52    0x47  1      OPC=nop                                                                                            
  shrq $0x2, %rax           #  53    0x48  4      OPC=shrq_r64_imm8                                                                                  
  nop                       #  54    0x4c  1      OPC=nop                                                                                            
  nop                       #  55    0x4d  1      OPC=nop                                                                                            
  nop                       #  56    0x4e  1      OPC=nop                                                                                            
  popq %r11                 #  57    0x4f  2      OPC=popq_r64_1                                                                                     
  andl $0xe0, %r11d         #  58    0x51  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11           #  59    0x55  3      OPC=addq_r64_r64                                                                                   
  jmpq %r11                 #  60    0x58  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (9)                                                 Lowest Known Correct Cost (11)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x2   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x3   1      OPC=nop                    movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x4   1      OPC=nop                    movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0x5   1      OPC=nop                    movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0x6   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0x7   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x8   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x9   1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0xa   1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  movq %rdi, %rdx           #  11    0xb   3      OPC=movq_r64_r64           nop                       #  11    0x14  1      OPC=nop                 
  movl (%r15,%rdx,1), %ecx  #  12    0xe   4      OPC=movl_r32_m32           nop                       #  12    0x15  1      OPC=nop                 
  negb %ch                  #  13    0x12  2      OPC=negb_rh                nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x14  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  je .L_142ce0              #  15    0x15  2      OPC=je_label               nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x17  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x18  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x19  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1a  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1b  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1c  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1d  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1e  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
  nop                       #  24    0x1f  1      OPC=nop                    addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
.L_142cc0:                  #        0x20  0      OPC=<label>                movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  nop                       #  25    0x20  1      OPC=nop                    movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  addl $0x4, %eax           #  26    0x21  6      OPC=addl_r32_imm32         testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  orb %ah, %ah              #  27    0x27  2      OPC=orb_rh_rh_1            jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  nop                       #  28    0x29  1      OPC=nop                    movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  29    0x2a  2      OPC=jne_label              subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nopl %eax                 #  30    0x2c  3      OPC=nopl_r32               sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x2f  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x30  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  orl $0x8, %eax            #  33    0x31  3      OPC=orl_r32_imm8           nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x34  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x35  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x36  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x37  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x38  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  shrb $0x2, %al            #  39    0x39  3      OPC=shrb_r8_imm8           nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3e  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  43    0x3f  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
.L_142ce0:                  #        0x40  0      OPC=<label>                popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  nop                       #  44    0x40  1      OPC=nop                    andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  nop                       #  45    0x41  1      OPC=nop                    addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  nop                       #  46    0x42  1      OPC=nop                    jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  nop                       #  47    0x43  1      OPC=nop                                                                                            
  nop                       #  48    0x44  1      OPC=nop                  .size wcslen, .-wcslen                                                    
  nop                       #  49    0x45  1      OPC=nop                                                                                            
  popq %r11                 #  50    0x46  2      OPC=popq_r64_1                                                                                     
  andl $0xe0, %r11d         #  51    0x48  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11           #  52    0x4c  3      OPC=addq_r64_r64                                                                                   
  jmpq %r11                 #  53    0x4f  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (8)                                                 Lowest Known Correct Cost (11)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                    movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x1   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x2   1      OPC=nop                    movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  4     0x3   2      OPC=xorl_r32_r32           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0x5   1      OPC=nop                    movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0x6   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  movq %rdi, %rdx           #  7     0x7   3      OPC=movq_r64_r64           je .L_142ce0              #  7     0xf   2      OPC=je_label            
  movl (%r15,%rdx,1), %ecx  #  8     0xa   4      OPC=movl_r32_m32           nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0xe   1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0xf   1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x10  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x11  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x12  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x13  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x14  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x15  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  negb %ch                  #  17    0x16  2      OPC=negb_rh                nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x18  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  je .L_142ce0              #  19    0x19  2      OPC=je_label               nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1b  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1c  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1d  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1e  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
  nop                       #  24    0x1f  1      OPC=nop                    addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
.L_142cc0:                  #        0x20  0      OPC=<label>                movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  addl $0x4, %eax           #  25    0x20  6      OPC=addl_r32_imm32         movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  shrb $0x1, %ah            #  26    0x26  2      OPC=shrb_rh_one            testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x28  2      OPC=jne_label              jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  addl $0x8, %eax           #  28    0x2a  3      OPC=addl_r32_imm8          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2d  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2e  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x2f  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x30  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x31  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x32  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x33  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x34  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x35  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x36  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  sarb $0x2, %al            #  39    0x37  3      OPC=sarb_r8_imm8           nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3a  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3b  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3c  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  43    0x3d  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  44    0x3e  1      OPC=nop                    popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  nop                       #  45    0x3f  1      OPC=nop                    andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
.L_142ce0:                  #        0x40  0      OPC=<label>                addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  popq %r11                 #  46    0x40  2      OPC=popq_r64_1             jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  andl $0xe0, %r11d         #  47    0x42  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11           #  48    0x46  3      OPC=addq_r64_r64         .size wcslen, .-wcslen                                                    
  jmpq %r11                 #  49    0x49  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (8)                                                 Lowest Known Correct Cost (9)                                       
                                                                                                                                               
  .text                                                                      .text                                                             
  .globl wcslen                                                              .globl wcslen                                                     
  .type wcslen, @function                                                    .type wcslen, @function                                           
                                                                                                                                               
#! file-offset 0                                                           #! file-offset 0                                                    
#! rip-offset  0                                                           #! rip-offset  0                                                    
#! capacity    0 bytes                                                     #! capacity    0 bytes                                              
                                                                                                                                               
# Text                      #  Line  RIP   Bytes  Opcode                   # Text               #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:             #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    movq %rdi, %rdx    #  2     0x1   3      OPC=movq_r64_r64         
  nop                       #  3     0x2   1      OPC=nop                    nopl %eax          #  3     0x4   3      OPC=nopl_r32             
  xorl %eax, %eax           #  4     0x3   2      OPC=xorl_r32_r32           nop                #  4     0x7   1      OPC=nop                  
  nop                       #  5     0x5   1      OPC=nop                    nop                #  5     0x8   1      OPC=nop                  
  nop                       #  6     0x6   1      OPC=nop                    xorl %eax, %eax    #  6     0x9   2      OPC=xorl_r32_r32         
  movq %rdi, %rdx           #  7     0x7   3      OPC=movq_r64_r64           nop                #  7     0xb   1      OPC=nop                  
  movl (%r15,%rdx,1), %ecx  #  8     0xa   4      OPC=movl_r32_m32           shlb $0x1, %al     #  8     0xc   2      OPC=shlb_r8_one          
  nop                       #  9     0xe   1      OPC=nop                    nop                #  9     0xe   1      OPC=nop                  
  nop                       #  10    0xf   1      OPC=nop                    nop                #  10    0xf   1      OPC=nop                  
  nop                       #  11    0x10  1      OPC=nop                    nop                #  11    0x10  1      OPC=nop                  
  nop                       #  12    0x11  1      OPC=nop                    nop                #  12    0x11  1      OPC=nop                  
  nop                       #  13    0x12  1      OPC=nop                    nop                #  13    0x12  1      OPC=nop                  
  nop                       #  14    0x13  1      OPC=nop                    sarl $0xfb, %edx   #  14    0x13  3      OPC=sarl_r32_imm8        
  nop                       #  15    0x14  1      OPC=nop                    je .L_142ce0       #  15    0x16  2      OPC=je_label             
  nop                       #  16    0x15  1      OPC=nop                    addq $0x6, %rax    #  16    0x18  7      OPC=addq_r64_imm32       
  negb %ch                  #  17    0x16  2      OPC=negb_rh                nop                #  17    0x1f  1      OPC=nop                  
  nop                       #  18    0x18  1      OPC=nop                  .L_142cc0:           #        0x20  0      OPC=<label>              
  je .L_142ce0              #  19    0x19  2      OPC=je_label               nop                #  18    0x20  1      OPC=nop                  
  nop                       #  20    0x1b  1      OPC=nop                    nop                #  19    0x21  1      OPC=nop                  
  nop                       #  21    0x1c  1      OPC=nop                    nop                #  20    0x22  1      OPC=nop                  
  nop                       #  22    0x1d  1      OPC=nop                    nop                #  21    0x23  1      OPC=nop                  
  nop                       #  23    0x1e  1      OPC=nop                    nop                #  22    0x24  1      OPC=nop                  
  nop                       #  24    0x1f  1      OPC=nop                    orb %ah, %dh       #  23    0x25  2      OPC=orb_rh_rh            
.L_142cc0:                  #        0x20  0      OPC=<label>                nop                #  24    0x27  1      OPC=nop                  
  addl $0x4, %eax           #  25    0x20  6      OPC=addl_r32_imm32         nop                #  25    0x28  1      OPC=nop                  
  shrb $0x1, %ah            #  26    0x26  2      OPC=shrb_rh_one            nop                #  26    0x29  1      OPC=nop                  
  jne .L_142cc0             #  27    0x28  2      OPC=jne_label              jne .L_142cc0      #  27    0x2a  2      OPC=jne_label            
  addl $0x8, %eax           #  28    0x2a  3      OPC=addl_r32_imm8          addl $0x7, %eax    #  28    0x2c  5      OPC=addl_eax_imm32       
  nop                       #  29    0x2d  1      OPC=nop                    nop                #  29    0x31  1      OPC=nop                  
  nop                       #  30    0x2e  1      OPC=nop                    nop                #  30    0x32  1      OPC=nop                  
  nop                       #  31    0x2f  1      OPC=nop                    nop                #  31    0x33  1      OPC=nop                  
  nop                       #  32    0x30  1      OPC=nop                    nop                #  32    0x34  1      OPC=nop                  
  nop                       #  33    0x31  1      OPC=nop                    nop                #  33    0x35  1      OPC=nop                  
  nop                       #  34    0x32  1      OPC=nop                    nop                #  34    0x36  1      OPC=nop                  
  nop                       #  35    0x33  1      OPC=nop                    shrw $0x2, %ax     #  35    0x37  4      OPC=shrw_r16_imm8        
  nop                       #  36    0x34  1      OPC=nop                    nop                #  36    0x3b  1      OPC=nop                  
  nop                       #  37    0x35  1      OPC=nop                    nop                #  37    0x3c  1      OPC=nop                  
  nop                       #  38    0x36  1      OPC=nop                    nop                #  38    0x3d  1      OPC=nop                  
  sarb $0x2, %al            #  39    0x37  3      OPC=sarb_r8_imm8           nop                #  39    0x3e  1      OPC=nop                  
  nop                       #  40    0x3a  1      OPC=nop                    nop                #  40    0x3f  1      OPC=nop                  
  nop                       #  41    0x3b  1      OPC=nop                  .L_142ce0:           #        0x40  0      OPC=<label>              
  nop                       #  42    0x3c  1      OPC=nop                    popq %r11          #  41    0x40  2      OPC=popq_r64_1           
  nop                       #  43    0x3d  1      OPC=nop                    andl $0xe0, %r11d  #  42    0x42  4      OPC=andl_r32_imm8        
  nop                       #  44    0x3e  1      OPC=nop                    addq %r15, %r11    #  43    0x46  3      OPC=addq_r64_r64         
  nop                       #  45    0x3f  1      OPC=nop                    jmpq %r11          #  44    0x49  3      OPC=jmpq_r64             
.L_142ce0:                  #        0x40  0      OPC=<label>                                                                                  
  popq %r11                 #  46    0x40  2      OPC=popq_r64_1           .size wcslen, .-wcslen                                              
  andl $0xe0, %r11d         #  47    0x42  4      OPC=andl_r32_imm8                                                                            
  addq %r15, %r11           #  48    0x46  3      OPC=addq_r64_r64                                                                             
  jmpq %r11                 #  49    0x49  3      OPC=jmpq_r64                                                                                 
                                                                                                                                               
.size wcslen, .-wcslen                                                                                                                         
                                                                                                                                               

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  50.0199s
Iterations/s:                  1999.21

Starting cost:                 11
Lowest cost:                   8
Lowest correct cost:           9

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.353%       7.787%        7.787%       
Opcode          8.371%       7.959%        7.76%        
Operand         8.354%       4.2%          2.097%       
Global Swap     8.376%       7.506%        6.885%       
Local Swap      8.462%       4.332%        3.766%       
ReplaceNop      8.388%       7.95%         7.645%       
Rotate          8.368%       7.606%        5.811%       
Delete          8.275%       7.852%        6.771%       
Instruction     8.321%       4.762%        0.582%       
Add Nops        8.326%       8.326%        6.642%       
OpcodeWidth     8.168%       7.522%        7.355%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.238%       0.319%        0.006%       
                                                        
Total           100%         76.121%       63.107%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  172.871s
Iterations/s:                  1156.93

Starting cost:                 11
Lowest cost:                   8
Lowest correct cost:           9

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.4025%      8.02%         8.02%        
Opcode          8.3205%      8.059%        7.925%       
Operand         8.328%       4.4205%       2.425%       
Global Swap     8.3955%      7.787%        7.3565%      
Local Swap      8.423%       4.4075%       3.8675%      
ReplaceNop      8.304%       8.0205%       7.828%       
Rotate          8.36%        7.8585%       6.4505%      
Delete          8.2825%      7.9905%       7.097%       
Instruction     8.4035%      4.7835%       0.63%        
Add Nops        8.326%       8.326%        7.0245%      
OpcodeWidth     8.1915%      7.743%        7.619%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.263%       0.2365%       0.003%       
                                                        
Total           100%         77.6525%      66.246%      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (8)                                                 Lowest Known Correct Cost (8)                                      
                                                                                                                                              
  .text                                                                      .text                                                            
  .globl wcslen                                                              .globl wcslen                                                    
  .type wcslen, @function                                                    .type wcslen, @function                                          
                                                                                                                                              
#! file-offset 0                                                           #! file-offset 0                                                   
#! rip-offset  0                                                           #! rip-offset  0                                                   
#! capacity    0 bytes                                                     #! capacity    0 bytes                                             
                                                                                                                                              
# Text                      #  Line  RIP   Bytes  Opcode                   # Text               #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:             #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                    xorq %rax, %rax    #  1     0     3      OPC=xorq_r64_r64        
  nop                       #  2     0x1   1      OPC=nop                    nop                #  2     0x3   1      OPC=nop                 
  nop                       #  3     0x2   1      OPC=nop                    nop                #  3     0x4   1      OPC=nop                 
  xorl %eax, %eax           #  4     0x3   2      OPC=xorl_r32_r32           nop                #  4     0x5   1      OPC=nop                 
  nop                       #  5     0x5   1      OPC=nop                    nop                #  5     0x6   1      OPC=nop                 
  nop                       #  6     0x6   1      OPC=nop                    nop                #  6     0x7   1      OPC=nop                 
  movq %rdi, %rdx           #  7     0x7   3      OPC=movq_r64_r64           nop                #  7     0x8   1      OPC=nop                 
  movl (%r15,%rdx,1), %ecx  #  8     0xa   4      OPC=movl_r32_m32           nop                #  8     0x9   1      OPC=nop                 
  nop                       #  9     0xe   1      OPC=nop                    andb $0x20, %dil   #  9     0xa   4      OPC=andb_r8_imm8        
  nop                       #  10    0xf   1      OPC=nop                    nop                #  10    0xe   1      OPC=nop                 
  nop                       #  11    0x10  1      OPC=nop                    nop                #  11    0xf   1      OPC=nop                 
  nop                       #  12    0x11  1      OPC=nop                    nop                #  12    0x10  1      OPC=nop                 
  nop                       #  13    0x12  1      OPC=nop                    nop                #  13    0x11  1      OPC=nop                 
  nop                       #  14    0x13  1      OPC=nop                    nop                #  14    0x12  1      OPC=nop                 
  nop                       #  15    0x14  1      OPC=nop                    nop                #  15    0x13  1      OPC=nop                 
  nop                       #  16    0x15  1      OPC=nop                    je .L_142ce0       #  16    0x14  2      OPC=je_label            
  negb %ch                  #  17    0x16  2      OPC=negb_rh                nop                #  17    0x16  1      OPC=nop                 
  nop                       #  18    0x18  1      OPC=nop                    nop                #  18    0x17  1      OPC=nop                 
  je .L_142ce0              #  19    0x19  2      OPC=je_label               nop                #  19    0x18  1      OPC=nop                 
  nop                       #  20    0x1b  1      OPC=nop                    nop                #  20    0x19  1      OPC=nop                 
  nop                       #  21    0x1c  1      OPC=nop                    nop                #  21    0x1a  1      OPC=nop                 
  nop                       #  22    0x1d  1      OPC=nop                    nop                #  22    0x1b  1      OPC=nop                 
  nop                       #  23    0x1e  1      OPC=nop                    addb $0x7, %al     #  23    0x1c  2      OPC=addb_al_imm8        
  nop                       #  24    0x1f  1      OPC=nop                    nop                #  24    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>                nop                #  25    0x1f  1      OPC=nop                 
  addl $0x4, %eax           #  25    0x20  6      OPC=addl_r32_imm32       .L_142cc0:           #        0x20  0      OPC=<label>             
  shrb $0x1, %ah            #  26    0x26  2      OPC=shrb_rh_one            addb %al, %al      #  26    0x20  2      OPC=addb_r8_r8          
  jne .L_142cc0             #  27    0x28  2      OPC=jne_label              nop                #  27    0x22  1      OPC=nop                 
  addl $0x8, %eax           #  28    0x2a  3      OPC=addl_r32_imm8          shrb $0xfe, %dil   #  28    0x23  4      OPC=shrb_r8_imm8        
  nop                       #  29    0x2d  1      OPC=nop                    nop                #  29    0x27  1      OPC=nop                 
  nop                       #  30    0x2e  1      OPC=nop                    nop                #  30    0x28  1      OPC=nop                 
  nop                       #  31    0x2f  1      OPC=nop                    xorb %dil, %dil    #  31    0x29  3      OPC=xorb_r8_r8_1        
  nop                       #  32    0x30  1      OPC=nop                    nop                #  32    0x2c  1      OPC=nop                 
  nop                       #  33    0x31  1      OPC=nop                    nop                #  33    0x2d  1      OPC=nop                 
  nop                       #  34    0x32  1      OPC=nop                    jne .L_142cc0      #  34    0x2e  2      OPC=jne_label           
  nop                       #  35    0x33  1      OPC=nop                    nop                #  35    0x30  1      OPC=nop                 
  nop                       #  36    0x34  1      OPC=nop                    nop                #  36    0x31  1      OPC=nop                 
  nop                       #  37    0x35  1      OPC=nop                    nop                #  37    0x32  1      OPC=nop                 
  nop                       #  38    0x36  1      OPC=nop                    nop                #  38    0x33  1      OPC=nop                 
  sarb $0x2, %al            #  39    0x37  3      OPC=sarb_r8_imm8           nop                #  39    0x34  1      OPC=nop                 
  nop                       #  40    0x3a  1      OPC=nop                    nop                #  40    0x35  1      OPC=nop                 
  nop                       #  41    0x3b  1      OPC=nop                    nop                #  41    0x36  1      OPC=nop                 
  nop                       #  42    0x3c  1      OPC=nop                    nop                #  42    0x37  1      OPC=nop                 
  nop                       #  43    0x3d  1      OPC=nop                    nop                #  43    0x38  1      OPC=nop                 
  nop                       #  44    0x3e  1      OPC=nop                    nop                #  44    0x39  1      OPC=nop                 
  nop                       #  45    0x3f  1      OPC=nop                    nop                #  45    0x3a  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>                nop                #  46    0x3b  1      OPC=nop                 
  popq %r11                 #  46    0x40  2      OPC=popq_r64_1             sarb $0x2, %al     #  47    0x3c  3      OPC=sarb_r8_imm8        
  andl $0xe0, %r11d         #  47    0x42  4      OPC=andl_r32_imm8          nop                #  48    0x3f  1      OPC=nop                 
  addq %r15, %r11           #  48    0x46  3      OPC=addq_r64_r64         .L_142ce0:           #        0x40  0      OPC=<label>             
  jmpq %r11                 #  49    0x49  3      OPC=jmpq_r64               nop                #  49    0x40  1      OPC=nop                 
                                                                             nop                #  50    0x41  1      OPC=nop                 
.size wcslen, .-wcslen                                                       nop                #  51    0x42  1      OPC=nop                 
                                                                             nop                #  52    0x43  1      OPC=nop                 
                                                                             nop                #  53    0x44  1      OPC=nop                 
                                                                             nop                #  54    0x45  1      OPC=nop                 
                                                                             nop                #  55    0x46  1      OPC=nop                 
                                                                             nop                #  56    0x47  1      OPC=nop                 
                                                                             popq %r11          #  57    0x48  2      OPC=popq_r64_1          
                                                                             andl $0xe0, %r11d  #  58    0x4a  4      OPC=andl_r32_imm8       
                                                                             addq %r15, %r11    #  59    0x4e  3      OPC=addq_r64_r64        
                                                                             jmpq %r11          #  60    0x51  3      OPC=jmpq_r64            
                                                                                                                                              
                                                                           .size wcslen, .-wcslen                                             
                                                                                                                                              

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  317.142s
Iterations/s:                  945.949

Starting cost:                 11
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted        
                                                           
Global Copy     8.445%       8.13433%      8.13433%        
Opcode          8.26567%     8.06033%      7.94967%        
Operand         8.353%       4.65733%      2.65933%        
Global Swap     8.32033%     7.849%        7.49567%        
Local Swap      8.38433%     4.444%        3.91867%        
ReplaceNop      8.27933%     8.06033%      7.90967%        
Rotate          8.36633%     7.96833%      6.70567%        
Delete          8.34067%     8.11633%      7.26633%        
Instruction     8.41967%     4.694%        0.606333%       
Add Nops        8.314%       8.314%        7.11533%        
OpcodeWidth     8.211%       7.849%        7.732%          
2xWeighted      0%           0%            0%              
Memory+Swap     8.30067%     0.173%        0.00233333%     
                                                           
Total           100%         78.32%        67.4953%        

********************************************************************************

Progress Update: 

Lowest Cost Discovered (7)                                          Lowest Known Correct Cost (7)                                       
                                                                                                                                        
  .text                                                               .text                                                             
  .globl wcslen                                                       .globl wcslen                                                     
  .type wcslen, @function                                             .type wcslen, @function                                           
                                                                                                                                        
#! file-offset 0                                                    #! file-offset 0                                                    
#! rip-offset  0                                                    #! rip-offset  0                                                    
#! capacity    0 bytes                                              #! capacity    0 bytes                                              
                                                                                                                                        
# Text               #  Line  RIP   Bytes  Opcode                   # Text               #  Line  RIP   Bytes  Opcode                   
.wcslen:             #        0     0      OPC=<label>              .wcslen:             #        0     0      OPC=<label>              
  xorl %eax, %eax    #  1     0     2      OPC=xorl_r32_r32           xorl %eax, %eax    #  1     0     2      OPC=xorl_r32_r32         
  andl $0x20, %edi   #  2     0x2   6      OPC=andl_r32_imm32         andl $0x20, %edi   #  2     0x2   6      OPC=andl_r32_imm32       
  nop                #  3     0x8   1      OPC=nop                    nop                #  3     0x8   1      OPC=nop                  
  nop                #  4     0x9   1      OPC=nop                    nop                #  4     0x9   1      OPC=nop                  
  je .L_142ce0       #  5     0xa   2      OPC=je_label               je .L_142ce0       #  5     0xa   2      OPC=je_label             
  nop                #  6     0xc   1      OPC=nop                    nop                #  6     0xc   1      OPC=nop                  
  nop                #  7     0xd   1      OPC=nop                    nop                #  7     0xd   1      OPC=nop                  
  nop                #  8     0xe   1      OPC=nop                    nop                #  8     0xe   1      OPC=nop                  
  nop                #  9     0xf   1      OPC=nop                    nop                #  9     0xf   1      OPC=nop                  
  nop                #  10    0x10  1      OPC=nop                    nop                #  10    0x10  1      OPC=nop                  
  nop                #  11    0x11  1      OPC=nop                    nop                #  11    0x11  1      OPC=nop                  
  nop                #  12    0x12  1      OPC=nop                    nop                #  12    0x12  1      OPC=nop                  
  nop                #  13    0x13  1      OPC=nop                    nop                #  13    0x13  1      OPC=nop                  
  nop                #  14    0x14  1      OPC=nop                    nop                #  14    0x14  1      OPC=nop                  
  nop                #  15    0x15  1      OPC=nop                    nop                #  15    0x15  1      OPC=nop                  
  nop                #  16    0x16  1      OPC=nop                    nop                #  16    0x16  1      OPC=nop                  
  nop                #  17    0x17  1      OPC=nop                    nop                #  17    0x17  1      OPC=nop                  
  nop                #  18    0x18  1      OPC=nop                    nop                #  18    0x18  1      OPC=nop                  
  nop                #  19    0x19  1      OPC=nop                    nop                #  19    0x19  1      OPC=nop                  
  nop                #  20    0x1a  1      OPC=nop                    nop                #  20    0x1a  1      OPC=nop                  
  xorq $0x7, %rax    #  21    0x1b  4      OPC=xorq_r64_imm8          xorq $0x7, %rax    #  21    0x1b  4      OPC=xorq_r64_imm8        
  nop                #  22    0x1f  1      OPC=nop                    nop                #  22    0x1f  1      OPC=nop                  
.L_142cc0:           #        0x20  0      OPC=<label>              .L_142cc0:           #        0x20  0      OPC=<label>              
  addw %ax, %di      #  23    0x20  3      OPC=addw_r16_r16           addw %ax, %di      #  23    0x20  3      OPC=addw_r16_r16         
  addb %al, %al      #  24    0x23  2      OPC=addb_r8_r8_1           addb %al, %al      #  24    0x23  2      OPC=addb_r8_r8_1         
  nop                #  25    0x25  1      OPC=nop                    nop                #  25    0x25  1      OPC=nop                  
  negb %ah           #  26    0x26  2      OPC=negb_rh                negb %ah           #  26    0x26  2      OPC=negb_rh              
  nop                #  27    0x28  1      OPC=nop                    nop                #  27    0x28  1      OPC=nop                  
  nop                #  28    0x29  1      OPC=nop                    nop                #  28    0x29  1      OPC=nop                  
  jne .L_142cc0      #  29    0x2a  2      OPC=jne_label              jne .L_142cc0      #  29    0x2a  2      OPC=jne_label            
  negb %ah           #  30    0x2c  2      OPC=negb_rh                negb %ah           #  30    0x2c  2      OPC=negb_rh              
  sarl $0x2, %eax    #  31    0x2e  3      OPC=sarl_r32_imm8          sarl $0x2, %eax    #  31    0x2e  3      OPC=sarl_r32_imm8        
  nop                #  32    0x31  1      OPC=nop                    nop                #  32    0x31  1      OPC=nop                  
  nop                #  33    0x32  1      OPC=nop                    nop                #  33    0x32  1      OPC=nop                  
  nop                #  34    0x33  1      OPC=nop                    nop                #  34    0x33  1      OPC=nop                  
  nop                #  35    0x34  1      OPC=nop                    nop                #  35    0x34  1      OPC=nop                  
  nop                #  36    0x35  1      OPC=nop                    nop                #  36    0x35  1      OPC=nop                  
  nop                #  37    0x36  1      OPC=nop                    nop                #  37    0x36  1      OPC=nop                  
  nop                #  38    0x37  1      OPC=nop                    nop                #  38    0x37  1      OPC=nop                  
  nop                #  39    0x38  1      OPC=nop                    nop                #  39    0x38  1      OPC=nop                  
  nop                #  40    0x39  1      OPC=nop                    nop                #  40    0x39  1      OPC=nop                  
  nop                #  41    0x3a  1      OPC=nop                    nop                #  41    0x3a  1      OPC=nop                  
  nop                #  42    0x3b  1      OPC=nop                    nop                #  42    0x3b  1      OPC=nop                  
  nop                #  43    0x3c  1      OPC=nop                    nop                #  43    0x3c  1      OPC=nop                  
  nop                #  44    0x3d  1      OPC=nop                    nop                #  44    0x3d  1      OPC=nop                  
  nop                #  45    0x3e  1      OPC=nop                    nop                #  45    0x3e  1      OPC=nop                  
  nop                #  46    0x3f  1      OPC=nop                    nop                #  46    0x3f  1      OPC=nop                  
.L_142ce0:           #        0x40  0      OPC=<label>              .L_142ce0:           #        0x40  0      OPC=<label>              
  subb %ah, %ah      #  47    0x40  2      OPC=subb_rh_rh_1           subb %ah, %ah      #  47    0x40  2      OPC=subb_rh_rh_1         
  popq %r11          #  48    0x42  2      OPC=popq_r64_1             popq %r11          #  48    0x42  2      OPC=popq_r64_1           
  andl $0xe0, %r11d  #  49    0x44  4      OPC=andl_r32_imm8          andl $0xe0, %r11d  #  49    0x44  4      OPC=andl_r32_imm8        
  addq %r15, %r11    #  50    0x48  3      OPC=addq_r64_r64           addq %r15, %r11    #  50    0x48  3      OPC=addq_r64_r64         
  jmpq %r11          #  51    0x4b  3      OPC=jmpq_r64               jmpq %r11          #  51    0x4b  3      OPC=jmpq_r64             
                                                                                                                                        
.size wcslen, .-wcslen                                              .size wcslen, .-wcslen                                              
                                                                                                                                        

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  469.952s
Iterations/s:                  851.151

Starting cost:                 11
Lowest cost:                   7
Lowest correct cost:           7

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.3925%      8.125%        8.125%       
Opcode          8.26625%     8.08875%      7.9925%      
Operand         8.35425%     4.748%        2.749%       
Global Swap     8.3365%      7.92875%      7.61725%     
Local Swap      8.39575%     4.352%        3.8035%      
ReplaceNop      8.323%       8.132%        7.99825%     
Rotate          8.35675%     8.013%        6.885%       
Delete          8.344%       8.146%        7.354%       
Instruction     8.40675%     4.554%        0.60175%     
Add Nops        8.28925%     8.28925%      7.2005%      
OpcodeWidth     8.2405%      7.92425%      7.82425%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.2945%      0.12975%      0.00175%     
                                                        
Total           100%         78.4308%      68.1527%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  631.673s
Iterations/s:                  791.549

Starting cost:                 11
Lowest cost:                   7
Lowest correct cost:           7

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.3892%      8.1458%       8.1458%      
Opcode          8.2812%      8.1216%       8.0372%      
Operand         8.3352%      4.797%        2.8644%      
Global Swap     8.2928%      7.9292%       7.6474%      
Local Swap      8.376%       4.3182%       3.799%       
ReplaceNop      8.3328%      8.1602%       8.0462%      
Rotate          8.3698%      8.0626%       6.9872%      
Delete          8.351%       8.1746%       7.4062%      
Instruction     8.4018%      4.5976%       0.6038%      
Add Nops        8.2896%      8.2896%       7.2502%      
OpcodeWidth     8.2908%      8.004%        7.9124%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.2898%      0.1038%       0.0014%      
                                                        
Total           100%         78.7042%      68.7012%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     fe 8e f4 c0 67 eb d0 ed
%rcx     5b 56 8a 5e d8 40 ec b6
%rdx     84 ec 3e 51 81 5c 32 1d
%rbx     10 2a 1e 8d ee 72 fc 5e
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 02 3e e8 7e
%rdi     00 00 00 00 02 3e e8 9e
%r8      75 c1 bd e8 c6 0f fc e4
%r9      8b 69 3f 4b 28 b1 3c 0b
%r10     32 17 02 a6 9a f8 7e 94
%r11     a1 ed 5b c7 52 5e 3d 46
%r12     79 cc e6 4c 75 be 0c 53
%r13     1a 1c 5a a3 43 68 82 1c
%r14     9a 3d f6 66 6c 15 d8 cf
%r15     00 00 00 00 05 7d ca b0

%ymm0    25 a3 d9 7d ac 60 aa 26 11 be 96 d8 eb 0a f7 9c 0e c6 0e a6 30 57 9a 6f db e1 32 a7 7d 82 aa 58
%ymm1    13 81 1d 99 fb d9 d7 c3 08 2a 4d 5b e3 ac 0e b7 dd b3 07 85 57 d6 94 d5 07 e2 19 4c 5a 7a 70 a0
%ymm2    74 09 07 f4 60 6e e6 b2 5c 5b eb ba c3 81 f1 8e 18 0d 6e 64 5f c2 9e 9d 62 94 8d 10 80 01 83 22
%ymm3    fa 63 ba db a5 dc ee a5 61 fb 57 9d 50 e2 d9 d6 66 fc 3e da 54 55 85 ce 89 63 b4 84 49 2a 50 ab
%ymm4    35 68 a6 c4 b2 cd 53 10 ea ec 16 f7 e1 ef e1 b7 99 38 ab f7 5f 93 5a 83 86 4a c3 f6 4d 65 c0 8e
%ymm5    d8 7f f3 7f 80 09 70 66 2a 18 e1 6b c1 63 51 b3 be cc 74 67 f2 d1 e4 41 e1 0d 7f 8c 75 8d fc 16
%ymm6    12 7c 17 68 52 79 2e 7a 0c 9a 32 ce f2 a6 ab 2c 54 f3 a1 8a 3d 14 b4 b0 32 db cd 38 c1 6c 17 79
%ymm7    d6 fb a9 d8 7d a6 c9 bf 77 6d 26 79 69 83 d9 ea bc 96 7d 17 74 7d 6c b4 bd 30 b4 ac 3d 22 b9 8c
%ymm8    90 0d 8b dd 43 52 e2 d0 6f 1d f7 1d ca 06 38 f6 96 a2 a2 bd 9e 7e 08 c2 bd 9d f9 1d 64 23 2a 0d
%ymm9    08 f5 46 30 d1 46 72 ad 6c f9 0c fa 90 48 0f 26 56 b3 81 e8 da 1a 4f 79 88 d7 9a bf 7d 0e 9d 9a
%ymm10   40 89 34 ba c1 c6 90 5d 60 93 3c fa fc 06 07 fc 3f ed d5 6e 92 ad 75 4f 11 11 b7 56 aa 9f ee ec
%ymm11   25 10 b3 5e 99 b4 c5 77 58 54 9e a4 31 04 b8 d4 e6 bb 7a f3 cc 88 2a bb 8e 6c 68 c2 0f 3f cd ef
%ymm12   bc b5 ca 8e 2f 1d ed a0 d0 4f 28 43 5b 5c 76 1b 0b b3 97 f4 42 af e0 d6 78 88 e8 0d 89 91 40 60
%ymm13   1c fa 90 e0 0c a0 62 41 be 26 c6 93 34 c5 10 d5 fd b6 fb 7f ae da 12 24 81 a2 ff 2d 4f 2a f5 c0
%ymm14   d9 93 a5 a3 31 3a f7 38 80 7a c7 25 ad 67 04 9c 37 98 90 5d 58 ac f6 5a fc bc 9c f5 22 9c 79 51
%ymm15   84 f8 3b 80 d4 f8 9d 47 d8 ae 46 68 07 87 ac 93 89 87 c9 45 ca b6 4d 48 3d 40 5c 38 d4 30 03 b5

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   26 02 74 ac 40 fd 29 a3 
00000006 fffffff0   v v v v v v v v   25 0c d5 f1 8d a3 ef 1a 
00000006 ffffffe8   v v v v v v v v   15 f1 0c 5b 72 96 3b e3 
00000006 ffffffe0   v v v v v v v v   54 03 ec ee 8d 25 26 22 

[ 00000000 07bcb388 - 00000000 07bcb300 ]
[ 3 valid rows shown ]

00000000 07bcb358   . . v v v v v v   00 00 00 00 00 00 28 f7 
00000000 07bcb350   v v v v v v v v   d4 bc 21 11 e2 8e ba 15 
00000000 07bcb348   v v . . . . . .   10 1e 00 00 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (14)                                               Lowest Known Correct Cost (15)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x1   1      OPC=nop                   xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x2   1      OPC=nop                   movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movq %rdi, %rdx           #  4     0x3   3      OPC=movq_r64_r64          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl (%r15,%rdx,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0xa   1      OPC=nop                   testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xb   1      OPC=nop                   je .L_142ce0              #  7     0xf   2      OPC=je_label            
  xorq %rax, %rax           #  8     0xc   3      OPC=xorq_r64_r64          nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0xf   1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x10  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x11  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x12  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x13  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x14  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x15  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x16  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x17  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x18  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  shrw $0x1, %cx            #  19    0x19  3      OPC=shrw_r16_one          nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  je .L_142ce0              #  22    0x1e  2      OPC=je_label              nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x6, %edx           #  23    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  nop                       #  25    0x27  1      OPC=nop                   movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  nop                       #  26    0x28  1      OPC=nop                   testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  nop                       #  27    0x29  1      OPC=nop                   jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  nop                       #  28    0x2a  1      OPC=nop                   movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  sarb $0x1, %ah            #  29    0x2b  2      OPC=sarb_rh_one           subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  jne .L_142cc0             #  30    0x2d  2      OPC=jne_label             sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  orl %edx, %eax            #  31    0x2f  2      OPC=orl_r32_r32           nop                       #  31    0x34  1      OPC=nop                 
  subl %edi, %eax           #  32    0x31  2      OPC=subl_r32_r32          nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x33  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x34  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x35  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x36  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x37  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x38  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x39  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3a  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3b  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
  sarw $0x2, %ax            #  42    0x3c  4      OPC=sarw_r16_imm8         nop                       #  42    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>             .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  43    0x40  2      OPC=popq_r64_1            popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64          addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64              jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (14)                                               Lowest Known Correct Cost (14)                                             
                                                                                                                                                     
  .text                                                                     .text                                                                    
  .globl wcslen                                                             .globl wcslen                                                            
  .type wcslen, @function                                                   .type wcslen, @function                                                  
                                                                                                                                                     
#! file-offset 0                                                          #! file-offset 0                                                           
#! rip-offset  0                                                          #! rip-offset  0                                                           
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                     
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                   nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                   nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                   nop                       #  3     0x2   1      OPC=nop                  
  movq %rdi, %rdx           #  4     0x3   3      OPC=movq_r64_r64          nop                       #  4     0x3   1      OPC=nop                  
  movl (%r15,%rdx,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32          nop                       #  5     0x4   1      OPC=nop                  
  nop                       #  6     0xa   1      OPC=nop                   nop                       #  6     0x5   1      OPC=nop                  
  nop                       #  7     0xb   1      OPC=nop                   movl %edi, %edx           #  7     0x6   2      OPC=movl_r32_r32         
  xorq %rax, %rax           #  8     0xc   3      OPC=xorq_r64_r64          movl (%r15,%rdx,1), %ecx  #  8     0x8   4      OPC=movl_r32_m32         
  nop                       #  9     0xf   1      OPC=nop                   nop                       #  9     0xc   1      OPC=nop                  
  nop                       #  10    0x10  1      OPC=nop                   xorq %rax, %rax           #  10    0xd   3      OPC=xorq_r64_r64         
  nop                       #  11    0x11  1      OPC=nop                   nop                       #  11    0x10  1      OPC=nop                  
  nop                       #  12    0x12  1      OPC=nop                   nop                       #  12    0x11  1      OPC=nop                  
  nop                       #  13    0x13  1      OPC=nop                   nop                       #  13    0x12  1      OPC=nop                  
  nop                       #  14    0x14  1      OPC=nop                   nop                       #  14    0x13  1      OPC=nop                  
  nop                       #  15    0x15  1      OPC=nop                   nop                       #  15    0x14  1      OPC=nop                  
  nop                       #  16    0x16  1      OPC=nop                   addl $0x6, %edx           #  16    0x15  3      OPC=addl_r32_imm8        
  nop                       #  17    0x17  1      OPC=nop                   xorb %ah, %ch             #  17    0x18  2      OPC=xorb_rh_rh_1         
  nop                       #  18    0x18  1      OPC=nop                   nop                       #  18    0x1a  1      OPC=nop                  
  shrw $0x1, %cx            #  19    0x19  3      OPC=shrw_r16_one          nop                       #  19    0x1b  1      OPC=nop                  
  nop                       #  20    0x1c  1      OPC=nop                   je .L_142ce0              #  20    0x1c  2      OPC=je_label             
  nop                       #  21    0x1d  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                  
  je .L_142ce0              #  22    0x1e  2      OPC=je_label              nop                       #  22    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x6, %edx           #  23    0x20  3      OPC=addl_r32_imm8         addq $0x6, %rdx           #  23    0x20  7      OPC=addq_r64_imm32       
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32          nop                       #  24    0x27  1      OPC=nop                  
  nop                       #  25    0x27  1      OPC=nop                   nop                       #  25    0x28  1      OPC=nop                  
  nop                       #  26    0x28  1      OPC=nop                   nop                       #  26    0x29  1      OPC=nop                  
  nop                       #  27    0x29  1      OPC=nop                   nop                       #  27    0x2a  1      OPC=nop                  
  nop                       #  28    0x2a  1      OPC=nop                   andb %dl, %ah             #  28    0x2b  2      OPC=andb_rh_r8_1         
  sarb $0x1, %ah            #  29    0x2b  2      OPC=sarb_rh_one           nop                       #  29    0x2d  1      OPC=nop                  
  jne .L_142cc0             #  30    0x2d  2      OPC=jne_label             nop                       #  30    0x2e  1      OPC=nop                  
  orl %edx, %eax            #  31    0x2f  2      OPC=orl_r32_r32           nop                       #  31    0x2f  1      OPC=nop                  
  subl %edi, %eax           #  32    0x31  2      OPC=subl_r32_r32          nop                       #  32    0x30  1      OPC=nop                  
  nop                       #  33    0x33  1      OPC=nop                   nop                       #  33    0x31  1      OPC=nop                  
  nop                       #  34    0x34  1      OPC=nop                   jne .L_142cc0             #  34    0x32  2      OPC=jne_label            
  nop                       #  35    0x35  1      OPC=nop                   nop                       #  35    0x34  1      OPC=nop                  
  nop                       #  36    0x36  1      OPC=nop                   nop                       #  36    0x35  1      OPC=nop                  
  nop                       #  37    0x37  1      OPC=nop                   nop                       #  37    0x36  1      OPC=nop                  
  nop                       #  38    0x38  1      OPC=nop                   orl %edx, %eax            #  38    0x37  2      OPC=orl_r32_r32          
  nop                       #  39    0x39  1      OPC=nop                   subl %edi, %eax           #  39    0x39  2      OPC=subl_r32_r32_1       
  nop                       #  40    0x3a  1      OPC=nop                   sarw $0x2, %ax            #  40    0x3b  4      OPC=sarw_r16_imm8        
  nop                       #  41    0x3b  1      OPC=nop                   nop                       #  41    0x3f  1      OPC=nop                  
  sarw $0x2, %ax            #  42    0x3c  4      OPC=sarw_r16_imm8       .L_142ce0:                  #        0x40  0      OPC=<label>              
.L_142ce0:                  #        0x40  0      OPC=<label>               nopl %eax                 #  42    0x40  3      OPC=nopl_r32             
  popq %r11                 #  43    0x40  2      OPC=popq_r64_1            nop                       #  43    0x43  1      OPC=nop                  
  andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8         popq %r11                 #  44    0x44  2      OPC=popq_r64_1           
  addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64          andl $0xe0, %r11d         #  45    0x46  4      OPC=andl_r32_imm8        
  jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64              addq %r15, %r11           #  46    0x4a  3      OPC=addq_r64_r64         
                                                                            jmpq %r11                 #  47    0x4d  3      OPC=jmpq_r64             
.size wcslen, .-wcslen                                                                                                                               
                                                                          .size wcslen, .-wcslen                                                     
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (13)                                                Lowest Known Correct Cost (14)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x2   1      OPC=nop                  
  nop                       #  4     0x3   1      OPC=nop                    nop                       #  4     0x3   1      OPC=nop                  
  nop                       #  5     0x4   1      OPC=nop                    nop                       #  5     0x4   1      OPC=nop                  
  nop                       #  6     0x5   1      OPC=nop                    nop                       #  6     0x5   1      OPC=nop                  
  movl %edi, %edx           #  7     0x6   2      OPC=movl_r32_r32_1         movl %edi, %edx           #  7     0x6   2      OPC=movl_r32_r32         
  movl (%r15,%rdx,1), %ecx  #  8     0x8   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  8     0x8   4      OPC=movl_r32_m32         
  xorq %rax, %rax           #  9     0xc   3      OPC=xorq_r64_r64           nop                       #  9     0xc   1      OPC=nop                  
  addl $0x6, %edx           #  10    0xf   3      OPC=addl_r32_imm8          xorq %rax, %rax           #  10    0xd   3      OPC=xorq_r64_r64         
  nop                       #  11    0x12  1      OPC=nop                    nop                       #  11    0x10  1      OPC=nop                  
  nop                       #  12    0x13  1      OPC=nop                    nop                       #  12    0x11  1      OPC=nop                  
  nop                       #  13    0x14  1      OPC=nop                    nop                       #  13    0x12  1      OPC=nop                  
  nop                       #  14    0x15  1      OPC=nop                    nop                       #  14    0x13  1      OPC=nop                  
  nop                       #  15    0x16  1      OPC=nop                    nop                       #  15    0x14  1      OPC=nop                  
  nop                       #  16    0x17  1      OPC=nop                    addl $0x6, %edx           #  16    0x15  3      OPC=addl_r32_imm8        
  nop                       #  17    0x18  1      OPC=nop                    xorb %ah, %ch             #  17    0x18  2      OPC=xorb_rh_rh_1         
  xorb %ah, %ch             #  18    0x19  2      OPC=xorb_rh_rh_1           nop                       #  18    0x1a  1      OPC=nop                  
  je .L_142ce0              #  19    0x1b  2      OPC=je_label               nop                       #  19    0x1b  1      OPC=nop                  
  nop                       #  20    0x1d  1      OPC=nop                    je .L_142ce0              #  20    0x1c  2      OPC=je_label             
  nop                       #  21    0x1e  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                  
  nop                       #  22    0x1f  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  nop                       #  23    0x20  1      OPC=nop                    addq $0x6, %rdx           #  23    0x20  7      OPC=addq_r64_imm32       
  addq $0x6, %rdx           #  24    0x21  7      OPC=addq_r64_imm32         nop                       #  24    0x27  1      OPC=nop                  
  nop                       #  25    0x28  1      OPC=nop                    nop                       #  25    0x28  1      OPC=nop                  
  nop                       #  26    0x29  1      OPC=nop                    nop                       #  26    0x29  1      OPC=nop                  
  nop                       #  27    0x2a  1      OPC=nop                    nop                       #  27    0x2a  1      OPC=nop                  
  nop                       #  28    0x2b  1      OPC=nop                    andb %dl, %ah             #  28    0x2b  2      OPC=andb_rh_r8_1         
  nop                       #  29    0x2c  1      OPC=nop                    nop                       #  29    0x2d  1      OPC=nop                  
  nop                       #  30    0x2d  1      OPC=nop                    nop                       #  30    0x2e  1      OPC=nop                  
  nop                       #  31    0x2e  1      OPC=nop                    nop                       #  31    0x2f  1      OPC=nop                  
  andb %al, %ah             #  32    0x2f  2      OPC=andb_rh_r8_1           nop                       #  32    0x30  1      OPC=nop                  
  jne .L_142cc0             #  33    0x31  2      OPC=jne_label              nop                       #  33    0x31  1      OPC=nop                  
  nop                       #  34    0x33  1      OPC=nop                    jne .L_142cc0             #  34    0x32  2      OPC=jne_label            
  nop                       #  35    0x34  1      OPC=nop                    nop                       #  35    0x34  1      OPC=nop                  
  nop                       #  36    0x35  1      OPC=nop                    nop                       #  36    0x35  1      OPC=nop                  
  orl %edx, %eax            #  37    0x36  2      OPC=orl_r32_r32            nop                       #  37    0x36  1      OPC=nop                  
  subl %edi, %eax           #  38    0x38  2      OPC=subl_r32_r32_1         orl %edx, %eax            #  38    0x37  2      OPC=orl_r32_r32          
  sarw $0x2, %ax            #  39    0x3a  4      OPC=sarw_r16_imm8          subl %edi, %eax           #  39    0x39  2      OPC=subl_r32_r32_1       
  nop                       #  40    0x3e  1      OPC=nop                    sarw $0x2, %ax            #  40    0x3b  4      OPC=sarw_r16_imm8        
  nop                       #  41    0x3f  1      OPC=nop                    nop                       #  41    0x3f  1      OPC=nop                  
  nop                       #  42    0x40  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>              
.L_142ce0:                  #        0x41  0      OPC=<label>                nopl %eax                 #  42    0x40  3      OPC=nopl_r32             
  nop                       #  43    0x41  1      OPC=nop                    nop                       #  43    0x43  1      OPC=nop                  
  nop                       #  44    0x42  1      OPC=nop                    popq %r11                 #  44    0x44  2      OPC=popq_r64_1           
  popq %r11                 #  45    0x43  2      OPC=popq_r64_1             andl $0xe0, %r11d         #  45    0x46  4      OPC=andl_r32_imm8        
  andl $0xe0, %r11d         #  46    0x45  4      OPC=andl_r32_imm8          addq %r15, %r11           #  46    0x4a  3      OPC=addq_r64_r64         
  addq %r15, %r11           #  47    0x49  3      OPC=addq_r64_r64           jmpq %r11                 #  47    0x4d  3      OPC=jmpq_r64             
  jmpq %r11                 #  48    0x4c  3      OPC=jmpq_r64                                                                                        
                                                                           .size wcslen, .-wcslen                                                     
.size wcslen, .-wcslen                                                                                                                                
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (12)                                                Lowest Known Correct Cost (12)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x2   1      OPC=nop                  
  nop                       #  4     0x3   1      OPC=nop                    nop                       #  4     0x3   1      OPC=nop                  
  nop                       #  5     0x4   1      OPC=nop                    nop                       #  5     0x4   1      OPC=nop                  
  nop                       #  6     0x5   1      OPC=nop                    nop                       #  6     0x5   1      OPC=nop                  
  movl %edi, %edx           #  7     0x6   2      OPC=movl_r32_r32_1         movl %edi, %edx           #  7     0x6   2      OPC=movl_r32_r32_1       
  movl (%r15,%rdx,1), %ecx  #  8     0x8   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  8     0x8   4      OPC=movl_r32_m32         
  xorq %rax, %rax           #  9     0xc   3      OPC=xorq_r64_r64           xorq %rax, %rax           #  9     0xc   3      OPC=xorq_r64_r64         
  addl $0x6, %edx           #  10    0xf   3      OPC=addl_r32_imm8          addl $0x6, %edx           #  10    0xf   3      OPC=addl_r32_imm8        
  nop                       #  11    0x12  1      OPC=nop                    nop                       #  11    0x12  1      OPC=nop                  
  nop                       #  12    0x13  1      OPC=nop                    nop                       #  12    0x13  1      OPC=nop                  
  nop                       #  13    0x14  1      OPC=nop                    nop                       #  13    0x14  1      OPC=nop                  
  nop                       #  14    0x15  1      OPC=nop                    nop                       #  14    0x15  1      OPC=nop                  
  nop                       #  15    0x16  1      OPC=nop                    nop                       #  15    0x16  1      OPC=nop                  
  nop                       #  16    0x17  1      OPC=nop                    nop                       #  16    0x17  1      OPC=nop                  
  nop                       #  17    0x18  1      OPC=nop                    nop                       #  17    0x18  1      OPC=nop                  
  xorb %ah, %ch             #  18    0x19  2      OPC=xorb_rh_rh_1           xorb %ah, %ch             #  18    0x19  2      OPC=xorb_rh_rh_1         
  je .L_142ce0              #  19    0x1b  2      OPC=je_label               je .L_142ce0              #  19    0x1b  2      OPC=je_label             
  nop                       #  20    0x1d  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                  
  nop                       #  21    0x1e  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                  
  nop                       #  22    0x1f  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  nop                       #  23    0x20  1      OPC=nop                    nop                       #  23    0x20  1      OPC=nop                  
  addq $0x6, %rdx           #  24    0x21  7      OPC=addq_r64_imm32         addq $0x6, %rdx           #  24    0x21  7      OPC=addq_r64_imm32       
  nop                       #  25    0x28  1      OPC=nop                    nop                       #  25    0x28  1      OPC=nop                  
  nop                       #  26    0x29  1      OPC=nop                    nop                       #  26    0x29  1      OPC=nop                  
  nop                       #  27    0x2a  1      OPC=nop                    nop                       #  27    0x2a  1      OPC=nop                  
  nop                       #  28    0x2b  1      OPC=nop                    nop                       #  28    0x2b  1      OPC=nop                  
  nop                       #  29    0x2c  1      OPC=nop                    nop                       #  29    0x2c  1      OPC=nop                  
  nop                       #  30    0x2d  1      OPC=nop                    nop                       #  30    0x2d  1      OPC=nop                  
  andb %al, %ah             #  31    0x2e  2      OPC=andb_rh_r8_1           andb %al, %ah             #  31    0x2e  2      OPC=andb_rh_r8_1         
  jne .L_142cc0             #  32    0x30  2      OPC=jne_label              jne .L_142cc0             #  32    0x30  2      OPC=jne_label            
  nop                       #  33    0x32  1      OPC=nop                    nop                       #  33    0x32  1      OPC=nop                  
  nop                       #  34    0x33  1      OPC=nop                    nop                       #  34    0x33  1      OPC=nop                  
  nop                       #  35    0x34  1      OPC=nop                    nop                       #  35    0x34  1      OPC=nop                  
  orl %edx, %eax            #  36    0x35  2      OPC=orl_r32_r32            orl %edx, %eax            #  36    0x35  2      OPC=orl_r32_r32          
  subl %edi, %eax           #  37    0x37  2      OPC=subl_r32_r32_1         subl %edi, %eax           #  37    0x37  2      OPC=subl_r32_r32_1       
  sarw $0x2, %ax            #  38    0x39  4      OPC=sarw_r16_imm8          sarw $0x2, %ax            #  38    0x39  4      OPC=sarw_r16_imm8        
  nop                       #  39    0x3d  1      OPC=nop                    nop                       #  39    0x3d  1      OPC=nop                  
  nop                       #  40    0x3e  1      OPC=nop                    nop                       #  40    0x3e  1      OPC=nop                  
  nop                       #  41    0x3f  1      OPC=nop                    nop                       #  41    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  42    0x40  1      OPC=nop                    nop                       #  42    0x40  1      OPC=nop                  
  popq %r11                 #  43    0x41  2      OPC=popq_r64_1             popq %r11                 #  43    0x41  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  44    0x43  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  44    0x43  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  45    0x47  3      OPC=addq_r64_r64           addq %r15, %r11           #  45    0x47  3      OPC=addq_r64_r64         
  jmpq %r11                 #  46    0x4a  3      OPC=jmpq_r64               jmpq %r11                 #  46    0x4a  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (11)                                                Lowest Known Correct Cost (11)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x2   1      OPC=nop                  
  nop                       #  4     0x3   1      OPC=nop                    nop                       #  4     0x3   1      OPC=nop                  
  nop                       #  5     0x4   1      OPC=nop                    nop                       #  5     0x4   1      OPC=nop                  
  nop                       #  6     0x5   1      OPC=nop                    nop                       #  6     0x5   1      OPC=nop                  
  movl %edi, %edx           #  7     0x6   2      OPC=movl_r32_r32_1         movl %edi, %edx           #  7     0x6   2      OPC=movl_r32_r32_1       
  movl (%r15,%rdx,1), %ecx  #  8     0x8   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  8     0x8   4      OPC=movl_r32_m32         
  xorq %rax, %rax           #  9     0xc   3      OPC=xorq_r64_r64           xorq %rax, %rax           #  9     0xc   3      OPC=xorq_r64_r64         
  addl $0x6, %edx           #  10    0xf   3      OPC=addl_r32_imm8          addl $0x6, %edx           #  10    0xf   3      OPC=addl_r32_imm8        
  nop                       #  11    0x12  1      OPC=nop                    nop                       #  11    0x12  1      OPC=nop                  
  nop                       #  12    0x13  1      OPC=nop                    nop                       #  12    0x13  1      OPC=nop                  
  nop                       #  13    0x14  1      OPC=nop                    nop                       #  13    0x14  1      OPC=nop                  
  nop                       #  14    0x15  1      OPC=nop                    nop                       #  14    0x15  1      OPC=nop                  
  nop                       #  15    0x16  1      OPC=nop                    nop                       #  15    0x16  1      OPC=nop                  
  nop                       #  16    0x17  1      OPC=nop                    nop                       #  16    0x17  1      OPC=nop                  
  nop                       #  17    0x18  1      OPC=nop                    nop                       #  17    0x18  1      OPC=nop                  
  xorb %ah, %ch             #  18    0x19  2      OPC=xorb_rh_rh_1           xorb %ah, %ch             #  18    0x19  2      OPC=xorb_rh_rh_1         
  je .L_142ce0              #  19    0x1b  2      OPC=je_label               je .L_142ce0              #  19    0x1b  2      OPC=je_label             
  nop                       #  20    0x1d  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                  
  nop                       #  21    0x1e  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                  
  nop                       #  22    0x1f  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addq $0x6, %rdx           #  23    0x20  7      OPC=addq_r64_imm32         addq $0x6, %rdx           #  23    0x20  7      OPC=addq_r64_imm32       
  nop                       #  24    0x27  1      OPC=nop                    nop                       #  24    0x27  1      OPC=nop                  
  nop                       #  25    0x28  1      OPC=nop                    nop                       #  25    0x28  1      OPC=nop                  
  nop                       #  26    0x29  1      OPC=nop                    nop                       #  26    0x29  1      OPC=nop                  
  nop                       #  27    0x2a  1      OPC=nop                    nop                       #  27    0x2a  1      OPC=nop                  
  nop                       #  28    0x2b  1      OPC=nop                    nop                       #  28    0x2b  1      OPC=nop                  
  nop                       #  29    0x2c  1      OPC=nop                    nop                       #  29    0x2c  1      OPC=nop                  
  nop                       #  30    0x2d  1      OPC=nop                    nop                       #  30    0x2d  1      OPC=nop                  
  andb %al, %ah             #  31    0x2e  2      OPC=andb_rh_r8_1           andb %al, %ah             #  31    0x2e  2      OPC=andb_rh_r8_1         
  jne .L_142cc0             #  32    0x30  2      OPC=jne_label              jne .L_142cc0             #  32    0x30  2      OPC=jne_label            
  nop                       #  33    0x32  1      OPC=nop                    nop                       #  33    0x32  1      OPC=nop                  
  nop                       #  34    0x33  1      OPC=nop                    nop                       #  34    0x33  1      OPC=nop                  
  nop                       #  35    0x34  1      OPC=nop                    nop                       #  35    0x34  1      OPC=nop                  
  orl %edx, %eax            #  36    0x35  2      OPC=orl_r32_r32            orl %edx, %eax            #  36    0x35  2      OPC=orl_r32_r32          
  subl %edi, %eax           #  37    0x37  2      OPC=subl_r32_r32_1         subl %edi, %eax           #  37    0x37  2      OPC=subl_r32_r32_1       
  sarw $0x2, %ax            #  38    0x39  4      OPC=sarw_r16_imm8          sarw $0x2, %ax            #  38    0x39  4      OPC=sarw_r16_imm8        
  nop                       #  39    0x3d  1      OPC=nop                    nop                       #  39    0x3d  1      OPC=nop                  
  nop                       #  40    0x3e  1      OPC=nop                    nop                       #  40    0x3e  1      OPC=nop                  
  nop                       #  41    0x3f  1      OPC=nop                    nop                       #  41    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  42    0x40  1      OPC=nop                    nop                       #  42    0x40  1      OPC=nop                  
  nop                       #  43    0x41  1      OPC=nop                    nop                       #  43    0x41  1      OPC=nop                  
  popq %r11                 #  44    0x42  2      OPC=popq_r64_1             popq %r11                 #  44    0x42  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  45    0x44  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  45    0x44  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  46    0x48  3      OPC=addq_r64_r64           addq %r15, %r11           #  46    0x48  3      OPC=addq_r64_r64         
  jmpq %r11                 #  47    0x4b  3      OPC=jmpq_r64               jmpq %r11                 #  47    0x4b  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (10)                                                Lowest Known Correct Cost (10)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  movl %edi, %edx           #  1     0     2      OPC=movl_r32_r32_1         movl %edi, %edx           #  1     0     2      OPC=movl_r32_r32_1       
  movl (%r15,%rdx,1), %ecx  #  2     0x2   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  2     0x2   4      OPC=movl_r32_m32         
  nop                       #  3     0x6   1      OPC=nop                    nop                       #  3     0x6   1      OPC=nop                  
  nop                       #  4     0x7   1      OPC=nop                    nop                       #  4     0x7   1      OPC=nop                  
  xorq %rax, %rax           #  5     0x8   3      OPC=xorq_r64_r64           xorq %rax, %rax           #  5     0x8   3      OPC=xorq_r64_r64         
  addl $0x6, %edx           #  6     0xb   3      OPC=addl_r32_imm8          addl $0x6, %edx           #  6     0xb   3      OPC=addl_r32_imm8        
  nop                       #  7     0xe   1      OPC=nop                    nop                       #  7     0xe   1      OPC=nop                  
  nop                       #  8     0xf   1      OPC=nop                    nop                       #  8     0xf   1      OPC=nop                  
  nop                       #  9     0x10  1      OPC=nop                    nop                       #  9     0x10  1      OPC=nop                  
  nop                       #  10    0x11  1      OPC=nop                    nop                       #  10    0x11  1      OPC=nop                  
  nop                       #  11    0x12  1      OPC=nop                    nop                       #  11    0x12  1      OPC=nop                  
  nop                       #  12    0x13  1      OPC=nop                    nop                       #  12    0x13  1      OPC=nop                  
  nop                       #  13    0x14  1      OPC=nop                    nop                       #  13    0x14  1      OPC=nop                  
  nop                       #  14    0x15  1      OPC=nop                    nop                       #  14    0x15  1      OPC=nop                  
  andb %ch, %ch             #  15    0x16  2      OPC=andb_rh_rh             andb %ch, %ch             #  15    0x16  2      OPC=andb_rh_rh           
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x18  1      OPC=nop                  
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x19  1      OPC=nop                  
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1a  1      OPC=nop                  
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1b  1      OPC=nop                  
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1c  1      OPC=nop                  
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1d  1      OPC=nop                  
  je .L_142ce0              #  22    0x1e  2      OPC=je_label               je .L_142ce0              #  22    0x1e  2      OPC=je_label             
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  movq $0x7, %rax           #  23    0x20  7      OPC=movq_r64_imm32         movq $0x7, %rax           #  23    0x20  7      OPC=movq_r64_imm32       
  nop                       #  24    0x27  1      OPC=nop                    nop                       #  24    0x27  1      OPC=nop                  
  nop                       #  25    0x28  1      OPC=nop                    nop                       #  25    0x28  1      OPC=nop                  
  nop                       #  26    0x29  1      OPC=nop                    nop                       #  26    0x29  1      OPC=nop                  
  nop                       #  27    0x2a  1      OPC=nop                    nop                       #  27    0x2a  1      OPC=nop                  
  salb $0x7, %ch            #  28    0x2b  3      OPC=salb_rh_imm8           salb $0x7, %ch            #  28    0x2b  3      OPC=salb_rh_imm8         
  jne .L_142cc0             #  29    0x2e  2      OPC=jne_label              jne .L_142cc0             #  29    0x2e  2      OPC=jne_label            
  addl %edx, %eax           #  30    0x30  2      OPC=addl_r32_r32_1         addl %edx, %eax           #  30    0x30  2      OPC=addl_r32_r32_1       
  subl %edi, %eax           #  31    0x32  2      OPC=subl_r32_r32           subl %edi, %eax           #  31    0x32  2      OPC=subl_r32_r32         
  shrw $0x2, %ax            #  32    0x34  4      OPC=shrw_r16_imm8          shrw $0x2, %ax            #  32    0x34  4      OPC=shrw_r16_imm8        
  nop                       #  33    0x38  1      OPC=nop                    nop                       #  33    0x38  1      OPC=nop                  
  nop                       #  34    0x39  1      OPC=nop                    nop                       #  34    0x39  1      OPC=nop                  
  nop                       #  35    0x3a  1      OPC=nop                    nop                       #  35    0x3a  1      OPC=nop                  
  nop                       #  36    0x3b  1      OPC=nop                    nop                       #  36    0x3b  1      OPC=nop                  
  nop                       #  37    0x3c  1      OPC=nop                    nop                       #  37    0x3c  1      OPC=nop                  
  nop                       #  38    0x3d  1      OPC=nop                    nop                       #  38    0x3d  1      OPC=nop                  
  nop                       #  39    0x3e  1      OPC=nop                    nop                       #  39    0x3e  1      OPC=nop                  
  nop                       #  40    0x3f  1      OPC=nop                    nop                       #  40    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  41    0x40  1      OPC=nop                    nop                       #  41    0x40  1      OPC=nop                  
  nop                       #  42    0x41  1      OPC=nop                    nop                       #  42    0x41  1      OPC=nop                  
  nop                       #  43    0x42  1      OPC=nop                    nop                       #  43    0x42  1      OPC=nop                  
  nop                       #  44    0x43  1      OPC=nop                    nop                       #  44    0x43  1      OPC=nop                  
  nop                       #  45    0x44  1      OPC=nop                    nop                       #  45    0x44  1      OPC=nop                  
  nop                       #  46    0x45  1      OPC=nop                    nop                       #  46    0x45  1      OPC=nop                  
  nop                       #  47    0x46  1      OPC=nop                    nop                       #  47    0x46  1      OPC=nop                  
  nop                       #  48    0x47  1      OPC=nop                    nop                       #  48    0x47  1      OPC=nop                  
  nop                       #  49    0x48  1      OPC=nop                    nop                       #  49    0x48  1      OPC=nop                  
  nop                       #  50    0x49  1      OPC=nop                    nop                       #  50    0x49  1      OPC=nop                  
  nop                       #  51    0x4a  1      OPC=nop                    nop                       #  51    0x4a  1      OPC=nop                  
  nop                       #  52    0x4b  1      OPC=nop                    nop                       #  52    0x4b  1      OPC=nop                  
  nop                       #  53    0x4c  1      OPC=nop                    nop                       #  53    0x4c  1      OPC=nop                  
  popq %r11                 #  54    0x4d  2      OPC=popq_r64_1             popq %r11                 #  54    0x4d  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  55    0x4f  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  55    0x4f  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  56    0x53  3      OPC=addq_r64_r64           addq %r15, %r11           #  56    0x53  3      OPC=addq_r64_r64         
  jmpq %r11                 #  57    0x56  3      OPC=jmpq_r64               jmpq %r11                 #  57    0x56  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  70.1362s
Iterations/s:                  1425.8

Starting cost:                 15
Lowest cost:                   10
Lowest correct cost:           10

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.28%        7.846%        7.846%       
Opcode          8.336%       8.005%        7.804%       
Operand         8.274%       4.425%        1.862%       
Global Swap     8.379%       7.687%        7.13%        
Local Swap      8.259%       4.082%        3.251%       
ReplaceNop      8.305%       7.991%        7.726%       
Rotate          8.332%       7.78%         6.349%       
Delete          8.176%       7.842%        7.045%       
Instruction     8.43%        4.827%        0.444%       
Add Nops        8.424%       8.424%        7.13%        
OpcodeWidth     8.389%       7.846%        7.695%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.416%       0.439%        0.001%       
                                                        
Total           100%         77.194%       64.283%      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (9)                                         Lowest Known Correct Cost (9)                                      
                                                                                                                                      
  .text                                                              .text                                                            
  .globl wcslen                                                      .globl wcslen                                                    
  .type wcslen, @function                                            .type wcslen, @function                                          
                                                                                                                                      
#! file-offset 0                                                   #! file-offset 0                                                   
#! rip-offset  0                                                   #! rip-offset  0                                                   
#! capacity    0 bytes                                             #! capacity    0 bytes                                             
                                                                                                                                      
# Text               #  Line  RIP   Bytes  Opcode                  # Text               #  Line  RIP   Bytes  Opcode                  
.wcslen:             #        0     0      OPC=<label>             .wcslen:             #        0     0      OPC=<label>             
  nop                #  1     0     1      OPC=nop                   nop                #  1     0     1      OPC=nop                 
  nop                #  2     0x1   1      OPC=nop                   nop                #  2     0x1   1      OPC=nop                 
  nop                #  3     0x2   1      OPC=nop                   nop                #  3     0x2   1      OPC=nop                 
  nop                #  4     0x3   1      OPC=nop                   nop                #  4     0x3   1      OPC=nop                 
  nop                #  5     0x4   1      OPC=nop                   nop                #  5     0x4   1      OPC=nop                 
  nop                #  6     0x5   1      OPC=nop                   nop                #  6     0x5   1      OPC=nop                 
  nop                #  7     0x6   1      OPC=nop                   nop                #  7     0x6   1      OPC=nop                 
  nop                #  8     0x7   1      OPC=nop                   nop                #  8     0x7   1      OPC=nop                 
  xorq %rax, %rax    #  9     0x8   3      OPC=xorq_r64_r64          xorq %rax, %rax    #  9     0x8   3      OPC=xorq_r64_r64        
  sarw $0x10, %di    #  10    0xb   4      OPC=sarw_r16_imm8         sarw $0x10, %di    #  10    0xb   4      OPC=sarw_r16_imm8       
  nop                #  11    0xf   1      OPC=nop                   nop                #  11    0xf   1      OPC=nop                 
  nop                #  12    0x10  1      OPC=nop                   nop                #  12    0x10  1      OPC=nop                 
  nop                #  13    0x11  1      OPC=nop                   nop                #  13    0x11  1      OPC=nop                 
  nop                #  14    0x12  1      OPC=nop                   nop                #  14    0x12  1      OPC=nop                 
  nop                #  15    0x13  1      OPC=nop                   nop                #  15    0x13  1      OPC=nop                 
  nop                #  16    0x14  1      OPC=nop                   nop                #  16    0x14  1      OPC=nop                 
  nop                #  17    0x15  1      OPC=nop                   nop                #  17    0x15  1      OPC=nop                 
  nop                #  18    0x16  1      OPC=nop                   nop                #  18    0x16  1      OPC=nop                 
  nop                #  19    0x17  1      OPC=nop                   nop                #  19    0x17  1      OPC=nop                 
  nop                #  20    0x18  1      OPC=nop                   nop                #  20    0x18  1      OPC=nop                 
  nop                #  21    0x19  1      OPC=nop                   nop                #  21    0x19  1      OPC=nop                 
  nop                #  22    0x1a  1      OPC=nop                   nop                #  22    0x1a  1      OPC=nop                 
  nop                #  23    0x1b  1      OPC=nop                   nop                #  23    0x1b  1      OPC=nop                 
  je .L_142ce0       #  24    0x1c  2      OPC=je_label              je .L_142ce0       #  24    0x1c  2      OPC=je_label            
  shlb $0x1, %al     #  25    0x1e  2      OPC=shlb_r8_one           shlb $0x1, %al     #  25    0x1e  2      OPC=shlb_r8_one         
.L_142cc0:           #        0x20  0      OPC=<label>             .L_142cc0:           #        0x20  0      OPC=<label>             
  nop                #  26    0x20  1      OPC=nop                   nop                #  26    0x20  1      OPC=nop                 
  nop                #  27    0x21  1      OPC=nop                   nop                #  27    0x21  1      OPC=nop                 
  nop                #  28    0x22  1      OPC=nop                   nop                #  28    0x22  1      OPC=nop                 
  nop                #  29    0x23  1      OPC=nop                   nop                #  29    0x23  1      OPC=nop                 
  nop                #  30    0x24  1      OPC=nop                   nop                #  30    0x24  1      OPC=nop                 
  jne .L_142cc0      #  31    0x25  2      OPC=jne_label             jne .L_142cc0      #  31    0x25  2      OPC=jne_label           
  orb $0x10, %al     #  32    0x27  2      OPC=orb_al_imm8           orb $0x10, %al     #  32    0x27  2      OPC=orb_al_imm8         
  nop                #  33    0x29  1      OPC=nop                   nop                #  33    0x29  1      OPC=nop                 
  nop                #  34    0x2a  1      OPC=nop                   nop                #  34    0x2a  1      OPC=nop                 
  nop                #  35    0x2b  1      OPC=nop                   nop                #  35    0x2b  1      OPC=nop                 
  nop                #  36    0x2c  1      OPC=nop                   nop                #  36    0x2c  1      OPC=nop                 
  nop                #  37    0x2d  1      OPC=nop                   nop                #  37    0x2d  1      OPC=nop                 
  shrl $0x1, %eax    #  38    0x2e  2      OPC=shrl_r32_one          shrl $0x1, %eax    #  38    0x2e  2      OPC=shrl_r32_one        
  subw $0xfc, %ax    #  39    0x30  4      OPC=subw_r16_imm8         subw $0xfc, %ax    #  39    0x30  4      OPC=subw_r16_imm8       
  nop                #  40    0x34  1      OPC=nop                   nop                #  40    0x34  1      OPC=nop                 
  nop                #  41    0x35  1      OPC=nop                   nop                #  41    0x35  1      OPC=nop                 
  nop                #  42    0x36  1      OPC=nop                   nop                #  42    0x36  1      OPC=nop                 
  nop                #  43    0x37  1      OPC=nop                   nop                #  43    0x37  1      OPC=nop                 
  nop                #  44    0x38  1      OPC=nop                   nop                #  44    0x38  1      OPC=nop                 
  nop                #  45    0x39  1      OPC=nop                   nop                #  45    0x39  1      OPC=nop                 
  nop                #  46    0x3a  1      OPC=nop                   nop                #  46    0x3a  1      OPC=nop                 
  shrw $0x2, %ax     #  47    0x3b  4      OPC=shrw_r16_imm8         shrw $0x2, %ax     #  47    0x3b  4      OPC=shrw_r16_imm8       
  nop                #  48    0x3f  1      OPC=nop                   nop                #  48    0x3f  1      OPC=nop                 
.L_142ce0:           #        0x40  0      OPC=<label>             .L_142ce0:           #        0x40  0      OPC=<label>             
  nop                #  49    0x40  1      OPC=nop                   nop                #  49    0x40  1      OPC=nop                 
  popq %r11          #  50    0x41  2      OPC=popq_r64_1            popq %r11          #  50    0x41  2      OPC=popq_r64_1          
  andl $0xe0, %r11d  #  51    0x43  4      OPC=andl_r32_imm8         andl $0xe0, %r11d  #  51    0x43  4      OPC=andl_r32_imm8       
  addq %r15, %r11    #  52    0x47  3      OPC=addq_r64_r64          addq %r15, %r11    #  52    0x47  3      OPC=addq_r64_r64        
  jmpq %r11          #  53    0x4a  3      OPC=jmpq_r64              jmpq %r11          #  53    0x4a  3      OPC=jmpq_r64            
                                                                                                                                      
.size wcslen, .-wcslen                                             .size wcslen, .-wcslen                                             
                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (8)                                         Lowest Known Correct Cost (8)                                      
                                                                                                                                      
  .text                                                              .text                                                            
  .globl wcslen                                                      .globl wcslen                                                    
  .type wcslen, @function                                            .type wcslen, @function                                          
                                                                                                                                      
#! file-offset 0                                                   #! file-offset 0                                                   
#! rip-offset  0                                                   #! rip-offset  0                                                   
#! capacity    0 bytes                                             #! capacity    0 bytes                                             
                                                                                                                                      
# Text               #  Line  RIP   Bytes  Opcode                  # Text               #  Line  RIP   Bytes  Opcode                  
.wcslen:             #        0     0      OPC=<label>             .wcslen:             #        0     0      OPC=<label>             
  nop                #  1     0     1      OPC=nop                   nop                #  1     0     1      OPC=nop                 
  nop                #  2     0x1   1      OPC=nop                   nop                #  2     0x1   1      OPC=nop                 
  nop                #  3     0x2   1      OPC=nop                   nop                #  3     0x2   1      OPC=nop                 
  nop                #  4     0x3   1      OPC=nop                   nop                #  4     0x3   1      OPC=nop                 
  nop                #  5     0x4   1      OPC=nop                   nop                #  5     0x4   1      OPC=nop                 
  nop                #  6     0x5   1      OPC=nop                   nop                #  6     0x5   1      OPC=nop                 
  xorq %rax, %rax    #  7     0x6   3      OPC=xorq_r64_r64          xorq %rax, %rax    #  7     0x6   3      OPC=xorq_r64_r64        
  sarw $0xf9, %di    #  8     0x9   4      OPC=sarw_r16_imm8         sarw $0xf9, %di    #  8     0x9   4      OPC=sarw_r16_imm8       
  je .L_142ce0       #  9     0xd   2      OPC=je_label              je .L_142ce0       #  9     0xd   2      OPC=je_label            
  xorb %ch, %ch      #  10    0xf   2      OPC=xorb_rh_rh            xorb %ch, %ch      #  10    0xf   2      OPC=xorb_rh_rh          
  nop                #  11    0x11  1      OPC=nop                   nop                #  11    0x11  1      OPC=nop                 
  nop                #  12    0x12  1      OPC=nop                   nop                #  12    0x12  1      OPC=nop                 
  nop                #  13    0x13  1      OPC=nop                   nop                #  13    0x13  1      OPC=nop                 
  nop                #  14    0x14  1      OPC=nop                   nop                #  14    0x14  1      OPC=nop                 
  nop                #  15    0x15  1      OPC=nop                   nop                #  15    0x15  1      OPC=nop                 
  nop                #  16    0x16  1      OPC=nop                   nop                #  16    0x16  1      OPC=nop                 
  nop                #  17    0x17  1      OPC=nop                   nop                #  17    0x17  1      OPC=nop                 
  nop                #  18    0x18  1      OPC=nop                   nop                #  18    0x18  1      OPC=nop                 
  nop                #  19    0x19  1      OPC=nop                   nop                #  19    0x19  1      OPC=nop                 
  nop                #  20    0x1a  1      OPC=nop                   nop                #  20    0x1a  1      OPC=nop                 
  nop                #  21    0x1b  1      OPC=nop                   nop                #  21    0x1b  1      OPC=nop                 
  nop                #  22    0x1c  1      OPC=nop                   nop                #  22    0x1c  1      OPC=nop                 
  nop                #  23    0x1d  1      OPC=nop                   nop                #  23    0x1d  1      OPC=nop                 
  nop                #  24    0x1e  1      OPC=nop                   nop                #  24    0x1e  1      OPC=nop                 
  nop                #  25    0x1f  1      OPC=nop                   nop                #  25    0x1f  1      OPC=nop                 
.L_142cc0:           #        0x20  0      OPC=<label>             .L_142cc0:           #        0x20  0      OPC=<label>             
  nop                #  26    0x20  1      OPC=nop                   nop                #  26    0x20  1      OPC=nop                 
  nop                #  27    0x21  1      OPC=nop                   nop                #  27    0x21  1      OPC=nop                 
  nop                #  28    0x22  1      OPC=nop                   nop                #  28    0x22  1      OPC=nop                 
  nop                #  29    0x23  1      OPC=nop                   nop                #  29    0x23  1      OPC=nop                 
  jne .L_142cc0      #  30    0x24  2      OPC=jne_label             jne .L_142cc0      #  30    0x24  2      OPC=jne_label           
  addb $0x10, %al    #  31    0x26  2      OPC=addb_al_imm8          addb $0x10, %al    #  31    0x26  2      OPC=addb_al_imm8        
  shrl $0x1, %eax    #  32    0x28  3      OPC=shrl_r32_imm8         shrl $0x1, %eax    #  32    0x28  3      OPC=shrl_r32_imm8       
  nop                #  33    0x2b  1      OPC=nop                   nop                #  33    0x2b  1      OPC=nop                 
  nop                #  34    0x2c  1      OPC=nop                   nop                #  34    0x2c  1      OPC=nop                 
  nop                #  35    0x2d  1      OPC=nop                   nop                #  35    0x2d  1      OPC=nop                 
  nop                #  36    0x2e  1      OPC=nop                   nop                #  36    0x2e  1      OPC=nop                 
  nop                #  37    0x2f  1      OPC=nop                   nop                #  37    0x2f  1      OPC=nop                 
  subw $0xfb, %ax    #  38    0x30  4      OPC=subw_r16_imm8         subw $0xfb, %ax    #  38    0x30  4      OPC=subw_r16_imm8       
  sarq $0x2, %rax    #  39    0x34  4      OPC=sarq_r64_imm8         sarq $0x2, %rax    #  39    0x34  4      OPC=sarq_r64_imm8       
  nop                #  40    0x38  1      OPC=nop                   nop                #  40    0x38  1      OPC=nop                 
  nop                #  41    0x39  1      OPC=nop                   nop                #  41    0x39  1      OPC=nop                 
  nop                #  42    0x3a  1      OPC=nop                   nop                #  42    0x3a  1      OPC=nop                 
  nop                #  43    0x3b  1      OPC=nop                   nop                #  43    0x3b  1      OPC=nop                 
  nop                #  44    0x3c  1      OPC=nop                   nop                #  44    0x3c  1      OPC=nop                 
  nop                #  45    0x3d  1      OPC=nop                   nop                #  45    0x3d  1      OPC=nop                 
  nop                #  46    0x3e  1      OPC=nop                   nop                #  46    0x3e  1      OPC=nop                 
  nop                #  47    0x3f  1      OPC=nop                   nop                #  47    0x3f  1      OPC=nop                 
.L_142ce0:           #        0x40  0      OPC=<label>             .L_142ce0:           #        0x40  0      OPC=<label>             
  popq %r11          #  48    0x40  2      OPC=popq_r64_1            popq %r11          #  48    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d  #  49    0x42  4      OPC=andl_r32_imm8         andl $0xe0, %r11d  #  49    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11    #  50    0x46  3      OPC=addq_r64_r64          addq %r15, %r11    #  50    0x46  3      OPC=addq_r64_r64        
  jmpq %r11          #  51    0x49  3      OPC=jmpq_r64              jmpq %r11          #  51    0x49  3      OPC=jmpq_r64            
                                                                                                                                      
.size wcslen, .-wcslen                                             .size wcslen, .-wcslen                                             
                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  194.765s
Iterations/s:                  1026.88

Starting cost:                 15
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.287%       7.979%        7.979%       
Opcode          8.381%       8.1555%       8.024%       
Operand         8.311%       4.6285%       2.236%       
Global Swap     8.303%       7.834%        7.451%       
Local Swap      8.3045%      3.831%        3.122%       
ReplaceNop      8.213%       8.0035%       7.824%       
Rotate          8.286%       7.915%        6.759%       
Delete          8.3075%      8.086%        7.3455%      
Instruction     8.366%       4.27%         0.4385%      
Add Nops        8.4105%      8.4105%       7.371%       
OpcodeWidth     8.4165%      8.054%        7.954%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.414%       0.2195%       0.0005%      
                                                        
Total           100%         77.3865%      66.5045%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  355.954s
Iterations/s:                  842.806

Starting cost:                 15
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted         
                                                            
Global Copy     8.28667%     8.034%        8.034%           
Opcode          8.36233%     8.18767%      8.08133%         
Operand         8.335%       4.717%        2.44967%         
Global Swap     8.31633%     7.94267%      7.62467%         
Local Swap      8.27867%     3.81%         3.034%           
ReplaceNop      8.254%       8.08333%      7.93667%         
Rotate          8.31067%     8%            6.99%            
Delete          8.34067%     8.167%        7.48367%         
Instruction     8.34033%     4.12067%      0.451333%        
Add Nops        8.38633%     8.38633%      7.479%           
OpcodeWidth     8.399%       8.10433%      8.01933%         
2xWeighted      0%           0%            0%               
Memory+Swap     8.39%        0.146333%     0.000333333%     
                                                            
Total           100%         77.6993%      67.584%          

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  533.108s
Iterations/s:                  750.317

Starting cost:                 15
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.30575%     8.084%        8.084%       
Opcode          8.353%       8.20875%      8.117%       
Operand         8.3495%      4.77525%      2.5395%      
Global Swap     8.32375%     7.99975%      7.713%       
Local Swap      8.2815%      3.811%        3.04975%     
ReplaceNop      8.282%       8.1365%       8.01025%     
Rotate          8.319%       8.047%        7.11575%     
Delete          8.3605%      8.209%        7.5515%      
Instruction     8.32275%     4.00025%      0.439%       
Add Nops        8.37125%     8.37125%      7.53925%     
OpcodeWidth     8.39575%     8.1355%       8.06%        
2xWeighted      0%           0%            0%           
Memory+Swap     8.33525%     0.10975%      0.00025%     
                                                        
Total           100%         77.888%       68.2193%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  737.446s
Iterations/s:                  678.016

Starting cost:                 15
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.3038%      8.1014%       8.1014%      
Opcode          8.3302%      8.2012%       8.1162%      
Operand         8.362%       4.9156%       2.6892%      
Global Swap     8.2826%      7.9916%       7.728%       
Local Swap      8.2734%      3.8694%       3.1116%      
ReplaceNop      8.3144%      8.1816%       8.0668%      
Rotate          8.3382%      8.095%        7.1966%      
Delete          8.3566%      8.2212%       7.5586%      
Instruction     8.3218%      4.0812%       0.4864%      
Add Nops        8.3696%      8.3696%       7.525%       
OpcodeWidth     8.3962%      8.1608%       8.0886%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3512%      0.0878%       0.0002%      
                                                        
Total           100%         78.2764%      68.6686%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     51 d8 9f 64 be 1b 6a 61
%rcx     5c 2b 29 91 0b 99 72 79
%rdx     1b 27 30 e2 90 d1 ac a7
%rbx     10 8a a2 26 0d 0d 83 ec
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 03 cf f8 8a
%rdi     00 00 00 00 03 cf f8 c1
%r8      3f 2c 92 7c 63 03 28 df
%r9      2c 5c 82 2b 95 77 2f ea
%r10     32 bd ca cd 02 c5 43 82
%r11     48 46 c2 5a 5a 98 19 a6
%r12     94 54 f1 c4 b7 d6 a6 2e
%r13     89 df 7a 10 f2 4f b4 f2
%r14     88 1f 24 7d 83 89 a1 ff
%r15     00 00 00 00 01 60 aa b0

%ymm0    aa 5f 4b ba 3f 5a 24 3c 61 08 e8 38 0d 80 2a d5 2d 3a e4 c6 e4 fc 4d 6f c8 69 57 3d 41 9d d8 ee
%ymm1    0b 03 e8 be 07 2d af 45 4e 5c 54 94 2e 89 65 a5 0c e6 04 f3 51 e7 63 a5 3c 28 64 2c 58 2a dc d8
%ymm2    4a 21 13 34 96 bd a0 7a 7e e4 5f 09 f2 54 5a cb 70 f1 35 de 9d 0e 1e de 33 f3 9f 73 e7 5b 1b 8a
%ymm3    a8 5f fe 97 11 9a 8c d1 02 5b af 22 1c 58 21 00 24 7a 1c 24 bd 1d 21 60 fe e2 43 8c 19 eb e7 b9
%ymm4    a1 e0 c7 06 d4 d4 ea 53 c7 48 4d b0 2e 05 94 10 95 17 3d 3f 00 89 9a 7c d0 0d 14 a6 7c 48 ac 77
%ymm5    76 27 3f 2c 5a af 04 2e 6e 4a db 0b aa 62 18 f8 6b 40 bf aa 58 1b af b1 0e bf ec 49 52 bb b6 bf
%ymm6    74 59 f3 d4 67 cf 20 71 92 3e fa 43 30 7e 4a 72 de b8 15 dc 7f 49 14 d4 40 d6 97 4e 28 92 5d b7
%ymm7    4f b0 bf 08 92 87 e1 ed 6c bd b7 e4 75 69 0f c0 c8 d2 09 93 3b 3a 0d fd 9d 79 f0 26 92 ad 30 16
%ymm8    bc ab 86 5e 99 f7 d5 04 d6 84 ca c2 ab 22 2b 66 0b cf 76 18 b0 0c d5 f5 ff d0 97 79 7c 39 da 08
%ymm9    b3 61 62 fd 84 a6 9f fd ae 5e 9b 8b 6d b1 25 a1 aa b4 01 d2 f9 8d c9 cf ce 51 72 8f dc 72 18 78
%ymm10   53 cc 07 9b f8 3b 94 10 7f a3 0a ff 17 50 62 16 c9 bc 84 76 86 be 06 ae 5e ab 1b 1e 34 a1 1e 41
%ymm11   99 3b f0 b1 e2 35 06 c0 e8 bd 1c 85 a4 f2 19 35 d8 46 1d b7 18 e3 e6 e9 8b 4a 0f a3 f5 d4 1f 34
%ymm12   f6 cc 55 0a 19 1f 00 44 47 26 38 22 66 51 c6 a2 d9 d2 ab 1f a9 f9 66 51 44 c4 19 39 44 29 81 27
%ymm13   d4 ea 86 02 02 8e 4d b1 40 8c 9d 55 73 42 d2 f7 a5 43 d7 db bd 97 19 3b 2f 28 74 e9 d3 05 a8 f1
%ymm14   41 53 2f c8 d0 2f 1c 92 08 10 24 41 4c 38 cd d6 df fc 29 68 49 e4 8c cb df 5b aa 2d 3d 89 ce 4b
%ymm15   9e 5a a9 4a 7c 81 71 79 60 ce c9 39 5d 20 fe da 50 cb 1a 82 be 94 3e 97 9f 5f 92 57 62 b5 94 c0

%cf      1 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   35 2e 50 7a a3 5d 04 16 
00000006 fffffff0   v v v v v v v v   16 10 69 4d 52 83 a5 51 
00000006 ffffffe8   v v v v v v v v   aa c0 4e 90 33 c1 f8 c5 
00000006 ffffffe0   v v v v v v v v   45 82 3b 35 88 98 c0 49 

[ 00000000 0530a3b8 - 00000000 0530a320 ]
[ 3 valid rows shown ]

00000000 0530a380   . . . v v v v v   00 00 00 00 00 00 00 90 
00000000 0530a378   v v v v v v v v   d0 5a 79 06 a0 2a 08 da 
00000000 0530a370   v v v v v v v .   ca 0d eb ff 76 ac 44 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (17)                                               Lowest Known Correct Cost (18)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32          movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xf   2      OPC=je_label              je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x11  1      OPC=nop                   nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x12  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x13  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32         movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label             testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2f  1      OPC=nop                   subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x30  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  sarl $0x2, %eax           #  31    0x31  3      OPC=sarl_r32_imm8         nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x34  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x35  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x38  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x39  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3a  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3b  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3e  1      OPC=nop                   nop                       #  42    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x3f  0      OPC=<label>             .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  43    0x3f  2      OPC=popq_r64_1            popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  44    0x41  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  45    0x45  3      OPC=addq_r64_r64          addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  46    0x48  3      OPC=jmpq_r64              jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (17)                                               Lowest Known Correct Cost (17)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32          nop                       #  1     0     1      OPC=nop                 
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32          movl %edi, %edi           #  3     0x3   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  4     0x5   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64          movq %rdi, %rdx           #  5     0x9   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  6     0xc   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xf   2      OPC=je_label              je .L_142ce0              #  7     0xe   2      OPC=je_label            
  nop                       #  8     0x11  1      OPC=nop                   nop                       #  8     0x10  1      OPC=nop                 
  nop                       #  9     0x12  1      OPC=nop                   nop                       #  9     0x11  1      OPC=nop                 
  nop                       #  10    0x13  1      OPC=nop                   nop                       #  10    0x12  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                   nop                       #  11    0x13  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                   nop                       #  12    0x14  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                   nop                       #  13    0x15  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                   nop                       #  14    0x16  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                   nop                       #  15    0x17  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                   nop                       #  16    0x18  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                   nop                       #  17    0x19  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                   nop                       #  18    0x1a  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                   nop                       #  19    0x1b  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                   nop                       #  20    0x1c  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                   nop                       #  21    0x1d  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                   nop                       #  22    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>               nop                       #  23    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32          addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8       
  testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32         movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32        
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label             testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32       
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32          jne .L_142cc0             #  27    0x29  2      OPC=jne_label           
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32          movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32        
  nop                       #  29    0x2f  1      OPC=nop                   subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32        
  nop                       #  30    0x30  1      OPC=nop                   nop                       #  30    0x2f  1      OPC=nop                 
  sarl $0x2, %eax           #  31    0x31  3      OPC=sarl_r32_imm8         nop                       #  31    0x30  1      OPC=nop                 
  nop                       #  32    0x34  1      OPC=nop                   sarl $0x2, %eax           #  32    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  33    0x35  1      OPC=nop                   nop                       #  33    0x34  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                   nop                       #  34    0x35  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                   nop                       #  35    0x36  1      OPC=nop                 
  nop                       #  36    0x38  1      OPC=nop                   nop                       #  36    0x37  1      OPC=nop                 
  nop                       #  37    0x39  1      OPC=nop                   nop                       #  37    0x38  1      OPC=nop                 
  nop                       #  38    0x3a  1      OPC=nop                   nop                       #  38    0x39  1      OPC=nop                 
  nop                       #  39    0x3b  1      OPC=nop                   nop                       #  39    0x3a  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                   nop                       #  40    0x3b  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                   nop                       #  41    0x3c  1      OPC=nop                 
  nop                       #  42    0x3e  1      OPC=nop                   nop                       #  42    0x3d  1      OPC=nop                 
.L_142ce0:                  #        0x3f  0      OPC=<label>               nop                       #  43    0x3e  1      OPC=nop                 
  popq %r11                 #  43    0x3f  2      OPC=popq_r64_1            nop                       #  44    0x3f  1      OPC=nop                 
  andl $0xe0, %r11d         #  44    0x41  4      OPC=andl_r32_imm8       .L_142ce0:                  #        0x40  0      OPC=<label>             
  addq %r15, %r11           #  45    0x45  3      OPC=addq_r64_r64          popq %r11                 #  45    0x40  2      OPC=popq_r64_1          
  jmpq %r11                 #  46    0x48  3      OPC=jmpq_r64              andl $0xe0, %r11d         #  46    0x42  4      OPC=andl_r32_imm8       
                                                                            addq %r15, %r11           #  47    0x46  3      OPC=addq_r64_r64        
.size wcslen, .-wcslen                                                      jmpq %r11                 #  48    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (16)                                                Lowest Known Correct Cost (16)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x2   1      OPC=nop                  
  nop                       #  4     0x3   1      OPC=nop                    nop                       #  4     0x3   1      OPC=nop                  
  nop                       #  5     0x4   1      OPC=nop                    nop                       #  5     0x4   1      OPC=nop                  
  nop                       #  6     0x5   1      OPC=nop                    nop                       #  6     0x5   1      OPC=nop                  
  nop                       #  7     0x6   1      OPC=nop                    nop                       #  7     0x6   1      OPC=nop                  
  orl %edi, %edi            #  8     0x7   2      OPC=orl_r32_r32            orl %edi, %edi            #  8     0x7   2      OPC=orl_r32_r32          
  movl (%r15,%rdi,1), %ecx  #  9     0x9   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  9     0x9   4      OPC=movl_r32_m32         
  nop                       #  10    0xd   1      OPC=nop                    nop                       #  10    0xd   1      OPC=nop                  
  nop                       #  11    0xe   1      OPC=nop                    nop                       #  11    0xe   1      OPC=nop                  
  nop                       #  12    0xf   1      OPC=nop                    nop                       #  12    0xf   1      OPC=nop                  
  xorl %eax, %eax           #  13    0x10  2      OPC=xorl_r32_r32           xorl %eax, %eax           #  13    0x10  2      OPC=xorl_r32_r32         
  movq %rdi, %rdx           #  14    0x12  3      OPC=movq_r64_r64           movq %rdi, %rdx           #  14    0x12  3      OPC=movq_r64_r64         
  nop                       #  15    0x15  1      OPC=nop                    nop                       #  15    0x15  1      OPC=nop                  
  nop                       #  16    0x16  1      OPC=nop                    nop                       #  16    0x16  1      OPC=nop                  
  nop                       #  17    0x17  1      OPC=nop                    nop                       #  17    0x17  1      OPC=nop                  
  nop                       #  18    0x18  1      OPC=nop                    nop                       #  18    0x18  1      OPC=nop                  
  nop                       #  19    0x19  1      OPC=nop                    nop                       #  19    0x19  1      OPC=nop                  
  nop                       #  20    0x1a  1      OPC=nop                    nop                       #  20    0x1a  1      OPC=nop                  
  nop                       #  21    0x1b  1      OPC=nop                    nop                       #  21    0x1b  1      OPC=nop                  
  testl %edi, %ecx          #  22    0x1c  2      OPC=testl_r32_r32          testl %edi, %ecx          #  22    0x1c  2      OPC=testl_r32_r32        
  je .L_142ce0              #  23    0x1e  2      OPC=je_label               je .L_142ce0              #  23    0x1e  2      OPC=je_label             
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x6, %edx           #  24    0x20  3      OPC=addl_r32_imm8          addl $0x6, %edx           #  24    0x20  3      OPC=addl_r32_imm8        
  movb (%r15,%rdx,1), %al   #  25    0x23  4      OPC=movb_r8_m8             movb (%r15,%rdx,1), %al   #  25    0x23  4      OPC=movb_r8_m8           
  testl %eax, %edi          #  26    0x27  2      OPC=testl_r32_r32          testl %eax, %edi          #  26    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x29  2      OPC=jne_label            
  addq %rdx, %rax           #  28    0x2b  3      OPC=addq_r64_r64           addq %rdx, %rax           #  28    0x2b  3      OPC=addq_r64_r64         
  subl %edi, %eax           #  29    0x2e  2      OPC=subl_r32_r32_1         subl %edi, %eax           #  29    0x2e  2      OPC=subl_r32_r32_1       
  nop                       #  30    0x30  1      OPC=nop                    nop                       #  30    0x30  1      OPC=nop                  
  nop                       #  31    0x31  1      OPC=nop                    nop                       #  31    0x31  1      OPC=nop                  
  nop                       #  32    0x32  1      OPC=nop                    nop                       #  32    0x32  1      OPC=nop                  
  nop                       #  33    0x33  1      OPC=nop                    nop                       #  33    0x33  1      OPC=nop                  
  nop                       #  34    0x34  1      OPC=nop                    nop                       #  34    0x34  1      OPC=nop                  
  nop                       #  35    0x35  1      OPC=nop                    nop                       #  35    0x35  1      OPC=nop                  
  nop                       #  36    0x36  1      OPC=nop                    nop                       #  36    0x36  1      OPC=nop                  
  nop                       #  37    0x37  1      OPC=nop                    nop                       #  37    0x37  1      OPC=nop                  
  shrl $0x2, %eax           #  38    0x38  3      OPC=shrl_r32_imm8          shrl $0x2, %eax           #  38    0x38  3      OPC=shrl_r32_imm8        
  nop                       #  39    0x3b  1      OPC=nop                    nop                       #  39    0x3b  1      OPC=nop                  
  nop                       #  40    0x3c  1      OPC=nop                    nop                       #  40    0x3c  1      OPC=nop                  
  nop                       #  41    0x3d  1      OPC=nop                    nop                       #  41    0x3d  1      OPC=nop                  
  nop                       #  42    0x3e  1      OPC=nop                    nop                       #  42    0x3e  1      OPC=nop                  
  nop                       #  43    0x3f  1      OPC=nop                    nop                       #  43    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  44    0x40  1      OPC=nop                    nop                       #  44    0x40  1      OPC=nop                  
  nop                       #  45    0x41  1      OPC=nop                    nop                       #  45    0x41  1      OPC=nop                  
  nop                       #  46    0x42  1      OPC=nop                    nop                       #  46    0x42  1      OPC=nop                  
  nop                       #  47    0x43  1      OPC=nop                    nop                       #  47    0x43  1      OPC=nop                  
  nop                       #  48    0x44  1      OPC=nop                    nop                       #  48    0x44  1      OPC=nop                  
  nop                       #  49    0x45  1      OPC=nop                    nop                       #  49    0x45  1      OPC=nop                  
  nop                       #  50    0x46  1      OPC=nop                    nop                       #  50    0x46  1      OPC=nop                  
  nop                       #  51    0x47  1      OPC=nop                    nop                       #  51    0x47  1      OPC=nop                  
  nop                       #  52    0x48  1      OPC=nop                    nop                       #  52    0x48  1      OPC=nop                  
  nop                       #  53    0x49  1      OPC=nop                    nop                       #  53    0x49  1      OPC=nop                  
  nop                       #  54    0x4a  1      OPC=nop                    nop                       #  54    0x4a  1      OPC=nop                  
  nop                       #  55    0x4b  1      OPC=nop                    nop                       #  55    0x4b  1      OPC=nop                  
  nop                       #  56    0x4c  1      OPC=nop                    nop                       #  56    0x4c  1      OPC=nop                  
  nop                       #  57    0x4d  1      OPC=nop                    nop                       #  57    0x4d  1      OPC=nop                  
  nop                       #  58    0x4e  1      OPC=nop                    nop                       #  58    0x4e  1      OPC=nop                  
  nop                       #  59    0x4f  1      OPC=nop                    nop                       #  59    0x4f  1      OPC=nop                  
  nop                       #  60    0x50  1      OPC=nop                    nop                       #  60    0x50  1      OPC=nop                  
  nop                       #  61    0x51  1      OPC=nop                    nop                       #  61    0x51  1      OPC=nop                  
  nop                       #  62    0x52  1      OPC=nop                    nop                       #  62    0x52  1      OPC=nop                  
  nop                       #  63    0x53  1      OPC=nop                    nop                       #  63    0x53  1      OPC=nop                  
  popq %r11                 #  64    0x54  2      OPC=popq_r64_1             popq %r11                 #  64    0x54  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  65    0x56  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  65    0x56  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  66    0x5a  3      OPC=addq_r64_r64           addq %r15, %r11           #  66    0x5a  3      OPC=addq_r64_r64         
  jmpq %r11                 #  67    0x5d  3      OPC=jmpq_r64               jmpq %r11                 #  67    0x5d  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (15)                                                Lowest Known Correct Cost (15)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x2   1      OPC=nop                  
  nop                       #  4     0x3   1      OPC=nop                    nop                       #  4     0x3   1      OPC=nop                  
  nop                       #  5     0x4   1      OPC=nop                    nop                       #  5     0x4   1      OPC=nop                  
  nop                       #  6     0x5   1      OPC=nop                    nop                       #  6     0x5   1      OPC=nop                  
  nop                       #  7     0x6   1      OPC=nop                    nop                       #  7     0x6   1      OPC=nop                  
  nop                       #  8     0x7   1      OPC=nop                    nop                       #  8     0x7   1      OPC=nop                  
  nop                       #  9     0x8   1      OPC=nop                    nop                       #  9     0x8   1      OPC=nop                  
  movl %edi, %edx           #  10    0x9   2      OPC=movl_r32_r32_1         movl %edi, %edx           #  10    0x9   2      OPC=movl_r32_r32_1       
  movl (%r15,%rdx,1), %ecx  #  11    0xb   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  11    0xb   4      OPC=movl_r32_m32         
  xorl %eax, %eax           #  12    0xf   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  12    0xf   2      OPC=xorl_r32_r32         
  nop                       #  13    0x11  1      OPC=nop                    nop                       #  13    0x11  1      OPC=nop                  
  nop                       #  14    0x12  1      OPC=nop                    nop                       #  14    0x12  1      OPC=nop                  
  andl %edi, %ecx           #  15    0x13  2      OPC=andl_r32_r32           andl %edi, %ecx           #  15    0x13  2      OPC=andl_r32_r32         
  nop                       #  16    0x15  1      OPC=nop                    nop                       #  16    0x15  1      OPC=nop                  
  nop                       #  17    0x16  1      OPC=nop                    nop                       #  17    0x16  1      OPC=nop                  
  nop                       #  18    0x17  1      OPC=nop                    nop                       #  18    0x17  1      OPC=nop                  
  je .L_142ce0              #  19    0x18  2      OPC=je_label               je .L_142ce0              #  19    0x18  2      OPC=je_label             
  nopl %eax                 #  20    0x1a  3      OPC=nopl_r32               nopl %eax                 #  20    0x1a  3      OPC=nopl_r32             
  nopl %eax                 #  21    0x1d  3      OPC=nopl_r32               nopl %eax                 #  21    0x1d  3      OPC=nopl_r32             
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x6, %edx           #  22    0x20  3      OPC=addl_r32_imm8          addl $0x6, %edx           #  22    0x20  3      OPC=addl_r32_imm8        
  movb (%r15,%rdx,1), %al   #  23    0x23  4      OPC=movb_r8_m8             movb (%r15,%rdx,1), %al   #  23    0x23  4      OPC=movb_r8_m8           
  andl $0x7, %eax           #  24    0x27  6      OPC=andl_r32_imm32         andl $0x7, %eax           #  24    0x27  6      OPC=andl_r32_imm32       
  jne .L_142cc0             #  25    0x2d  2      OPC=jne_label              jne .L_142cc0             #  25    0x2d  2      OPC=jne_label            
  nop                       #  26    0x2f  1      OPC=nop                    nop                       #  26    0x2f  1      OPC=nop                  
  nop                       #  27    0x30  1      OPC=nop                    nop                       #  27    0x30  1      OPC=nop                  
  nop                       #  28    0x31  1      OPC=nop                    nop                       #  28    0x31  1      OPC=nop                  
  nop                       #  29    0x32  1      OPC=nop                    nop                       #  29    0x32  1      OPC=nop                  
  nop                       #  30    0x33  1      OPC=nop                    nop                       #  30    0x33  1      OPC=nop                  
  nop                       #  31    0x34  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                  
  nop                       #  32    0x35  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                  
  nop                       #  33    0x36  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                  
  subb %dil, %dl            #  34    0x37  3      OPC=subb_r8_r8_1           subb %dil, %dl            #  34    0x37  3      OPC=subb_r8_r8_1         
  movb %dl, %al             #  35    0x3a  2      OPC=movb_r8_r8_1           movb %dl, %al             #  35    0x3a  2      OPC=movb_r8_r8_1         
  sarl $0x2, %eax           #  36    0x3c  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  36    0x3c  3      OPC=sarl_r32_imm8        
  nop                       #  37    0x3f  1      OPC=nop                    nop                       #  37    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  38    0x40  1      OPC=nop                    nop                       #  38    0x40  1      OPC=nop                  
  nop                       #  39    0x41  1      OPC=nop                    nop                       #  39    0x41  1      OPC=nop                  
  nop                       #  40    0x42  1      OPC=nop                    nop                       #  40    0x42  1      OPC=nop                  
  nop                       #  41    0x43  1      OPC=nop                    nop                       #  41    0x43  1      OPC=nop                  
  nop                       #  42    0x44  1      OPC=nop                    nop                       #  42    0x44  1      OPC=nop                  
  nop                       #  43    0x45  1      OPC=nop                    nop                       #  43    0x45  1      OPC=nop                  
  nop                       #  44    0x46  1      OPC=nop                    nop                       #  44    0x46  1      OPC=nop                  
  nop                       #  45    0x47  1      OPC=nop                    nop                       #  45    0x47  1      OPC=nop                  
  nop                       #  46    0x48  1      OPC=nop                    nop                       #  46    0x48  1      OPC=nop                  
  nop                       #  47    0x49  1      OPC=nop                    nop                       #  47    0x49  1      OPC=nop                  
  nop                       #  48    0x4a  1      OPC=nop                    nop                       #  48    0x4a  1      OPC=nop                  
  nop                       #  49    0x4b  1      OPC=nop                    nop                       #  49    0x4b  1      OPC=nop                  
  nop                       #  50    0x4c  1      OPC=nop                    nop                       #  50    0x4c  1      OPC=nop                  
  nop                       #  51    0x4d  1      OPC=nop                    nop                       #  51    0x4d  1      OPC=nop                  
  popq %r11                 #  52    0x4e  2      OPC=popq_r64_1             popq %r11                 #  52    0x4e  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  53    0x50  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  53    0x50  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  54    0x54  3      OPC=addq_r64_r64           addq %r15, %r11           #  54    0x54  3      OPC=addq_r64_r64         
  jmpq %r11                 #  55    0x57  3      OPC=jmpq_r64               jmpq %r11                 #  55    0x57  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  55.9567s
Iterations/s:                  1787.1

Starting cost:                 18
Lowest cost:                   15
Lowest correct cost:           15

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.272%       7.548%        7.548%       
Opcode          8.33%        7.812%        7.481%       
Operand         8.352%       4.089%        1.505%       
Global Swap     8.597%       7.457%        6.525%       
Local Swap      8.414%       4.373%        3.352%       
ReplaceNop      8.229%       7.677%        7.183%       
Rotate          8.142%       7.236%        5.225%       
Delete          8.352%       7.822%        6.458%       
Instruction     8.3%         4.933%        0.361%       
Add Nops        8.312%       8.312%        6.328%       
OpcodeWidth     8.428%       7.574%        7.361%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.272%       1.405%        0.001%       
                                                        
Total           100%         76.238%       59.328%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  169.67s
Iterations/s:                  1178.76

Starting cost:                 18
Lowest cost:                   15
Lowest correct cost:           15

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.284%       7.79%         7.79%        
Opcode          8.3185%      7.96%         7.741%       
Operand         8.3695%      4.3235%       1.662%       
Global Swap     8.464%       7.701%        7.074%       
Local Swap      8.4365%      4.467%        3.4915%      
ReplaceNop      8.2685%      7.89%         7.578%       
Rotate          8.152%       7.5315%       5.993%       
Delete          8.3485%      7.9915%       6.9525%      
Instruction     8.2435%      4.9705%       0.4165%      
Add Nops        8.387%       8.387%        6.9145%      
OpcodeWidth     8.3625%      7.7735%       7.6135%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3655%      1.4855%       0.0005%      
                                                        
Total           100%         78.271%       63.227%      

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  353.061s
Iterations/s:                  849.712

Starting cost:                 18
Lowest cost:                   15
Lowest correct cost:           15

Move Type       Proposed     Succeeded     Accepted         
                                                            
Global Copy     8.31267%     7.94267%      7.94267%         
Opcode          8.341%       8.071%        7.90767%         
Operand         8.324%       4.41033%      1.81333%         
Global Swap     8.434%       7.84667%      7.36333%         
Local Swap      8.41633%     4.298%        3.39467%         
ReplaceNop      8.33833%     8.05733%      7.824%           
Rotate          8.23067%     7.75467%      6.476%           
Delete          8.298%       8.031%        7.125%           
Instruction     8.26633%     4.84433%      0.407667%        
Add Nops        8.376%       8.376%        7.119%           
OpcodeWidth     8.34533%     7.89067%      7.76433%         
2xWeighted      0%           0%            0%               
Memory+Swap     8.31733%     1.50867%      0.000333333%     
                                                            
Total           100%         79.0313%      65.138%          

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  583.916s
Iterations/s:                  685.03

Starting cost:                 18
Lowest cost:                   15
Lowest correct cost:           15

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.30675%     8.00475%      8.00475%     
Opcode          8.367%       8.144%        8.00375%     
Operand         8.3095%      4.555%        1.9985%      
Global Swap     8.3715%      7.88775%      7.48775%     
Local Swap      8.43%        4.16675%      3.2615%      
ReplaceNop      8.39075%     8.16125%      7.9665%      
Rotate          8.266%       7.87775%      6.73125%     
Delete          8.2925%      8.072%        7.2425%      
Instruction     8.2865%      4.7825%       0.42375%     
Add Nops        8.367%       8.367%        7.23075%     
OpcodeWidth     8.31825%     7.938%        7.83075%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.29425%     1.4665%       0.00125%     
                                                        
Total           100%         79.4232%      66.183%      

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  843.395s
Iterations/s:                  592.842

Starting cost:                 18
Lowest cost:                   15
Lowest correct cost:           15

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.3138%      8.0544%       8.0544%      
Opcode          8.347%       8.1532%       8.0286%      
Operand         8.3236%      4.7078%       2.1276%      
Global Swap     8.3612%      7.9422%       7.587%       
Local Swap      8.4384%      4.1586%       3.2422%      
ReplaceNop      8.365%       8.1656%       7.9984%      
Rotate          8.2748%      7.9408%       6.887%       
Delete          8.3044%      8.113%        7.3172%      
Instruction     8.263%       4.7564%       0.4382%      
Add Nops        8.3644%      8.3644%       7.2892%      
OpcodeWidth     8.3258%      7.993%        7.8936%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3186%      1.4914%       0.0022%      
                                                        
Total           100%         79.8408%      66.8656%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     d6 35 17 80 88 19 8b 42
%rcx     92 37 2f 7f 46 55 78 e5
%rdx     fc 78 92 ea 7c 75 b1 c4
%rbx     db 4c 06 ea c4 97 8c d0
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 0a 10 7d 3e
%rdi     00 00 00 00 0a 10 7d 64
%r8      af e3 32 65 8f 99 8b 46
%r9      f6 d7 fb 04 d1 1e 8b 63
%r10     bb a8 3b 9a 17 7f 0d 0b
%r11     12 c7 2f 05 1f b5 f1 1d
%r12     9e b7 4a 62 ac e0 4b ae
%r13     e6 ea 94 a6 a9 f9 c4 a2
%r14     bf 90 9c 5f bf 6a 15 16
%r15     00 00 00 00 04 14 8f 10

%ymm0    01 58 8d bb a2 29 e2 4b 72 81 80 82 c0 2c 33 ce 3f a0 6c 9c 3f 1f 79 09 8e 71 9c 95 14 fd ad c6
%ymm1    31 f0 2c 94 93 02 a1 fc 70 ba 53 71 5b 2c d6 ce 50 20 d8 fe 7a 70 31 55 09 35 36 34 72 f4 cc ed
%ymm2    ef b4 6c 92 25 8a 2e bc 4b 5c 8a 57 c3 83 23 cb 07 c0 ee 6e 63 f1 61 df c9 f3 f7 67 ff ab a3 47
%ymm3    61 4d ea 00 28 ea 61 e2 04 49 cb fb 3b 37 af ff 44 47 46 4f 70 14 e6 b0 3e bb 63 c6 b8 97 9f a0
%ymm4    c3 f1 be 74 a8 ac 4e db 5c 0d 8e 31 71 09 b0 fa f3 25 2d 3e 57 ef 11 b8 b7 a7 36 96 f3 9c 7c 5c
%ymm5    3b d9 4f 43 3a 21 27 53 7b b4 95 de dc fa aa 0d 7e a5 c3 7a cc 33 a4 89 d6 38 41 03 55 27 90 bf
%ymm6    2f cb ab fa a1 90 17 c1 48 12 3d 7c 02 8f 2f e9 08 3f 09 c3 49 91 cc 22 f4 f9 39 8b 9c 0d 84 1d
%ymm7    9e 21 6e 06 ee 64 8d 8d df 3d 46 14 5d 39 04 2d 75 1f 2e 40 11 b6 6f ba f6 92 e0 ba b2 cc f5 28
%ymm8    09 d6 a2 09 2b ba 49 c3 fe 71 2e f5 05 ba 8f e9 b0 06 9b 45 db 15 49 97 5b 6a c0 60 86 20 f9 69
%ymm9    e8 c3 4f cc 02 f9 48 3c eb 34 8e d3 39 6a 67 a6 53 69 da cb 08 99 57 ea 95 65 c3 7b 23 c5 f7 79
%ymm10   9b 0b 62 4a 6e 58 2b 40 90 b9 1c ab 61 2e 99 59 1e e6 84 98 73 3f ba ad 77 1f 94 e5 4c 7b dc 2a
%ymm11   20 73 c9 e3 8a ca ed ee eb 89 f3 8d 75 2f e8 b4 6b b0 21 65 fe 90 6d c3 37 b2 af cb 9c 20 ba 69
%ymm12   67 ae 47 e1 6a 8c c8 02 db 48 57 b7 b7 ff be 05 9e 57 58 93 41 d2 76 df 66 df 0c fd 2d e8 19 62
%ymm13   94 31 89 a3 30 5f 94 81 58 d7 15 9a a9 22 08 f1 e8 69 e9 96 10 cd 3c 78 25 ff 8b f4 c9 be 4c 0f
%ymm14   ed 7f f0 e8 a2 b7 d0 fe 56 d6 c1 ca c4 90 a2 c2 21 1d eb e3 9a 13 cd 36 6a ea 49 52 fd 28 8b 18
%ymm15   dd 23 97 37 67 5e ff e4 4f a6 83 c2 17 d3 9b 0d 44 f4 ed 6d 77 01 3c 06 86 7b 26 91 47 b9 09 82

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   8d a0 ee d3 6c c9 47 23 
00000006 fffffff0   v v v v v v v v   4c 5d 28 43 f0 59 a9 f4 
00000006 ffffffe8   v v v v v v v v   05 2c ca 06 5c 58 1c c2 
00000006 ffffffe0   v v v v v v v v   69 ee d1 ad 6b a7 f1 cf 

[ 00000000 0e250c98 - 00000000 0e250c00 ]
[ 2 valid rows shown ]

00000000 0e250c78   v v v v v v v v   00 00 00 00 6d 26 21 d3 
00000000 0e250c70   v v v v . . . .   03 c4 d5 7b 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (17)                                                Lowest Known Correct Cost (18)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                    movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x1   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x2   1      OPC=nop                    movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  4     0x3   2      OPC=xorl_r32_r32           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0x5   3      OPC=movq_r64_r64_1         movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0x8   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0x9   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xa   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0xb   1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0xc   1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0xd   1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0xe   1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0xf   1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x10  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x11  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  movq %rdx, %rdi           #  16    0x12  3      OPC=movq_r64_r64_1         nop                       #  16    0x19  1      OPC=nop                 
  movl (%r15,%rdi,1), %ecx  #  17    0x15  4      OPC=movl_r32_m32           nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x19  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1a  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  testl %r15d, %ecx         #  20    0x1b  3      OPC=testl_r32_r32          nop                       #  20    0x1d  1      OPC=nop                 
  je .L_142ce0              #  21    0x1e  2      OPC=je_label               nop                       #  21    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>                nop                       #  22    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8        .L_142cc0:                  #        0x20  0      OPC=<label>             
  andl (%r15,%rdx,1), %ecx  #  23    0x23  4      OPC=andl_r32_m32           addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  jne .L_142cc0             #  24    0x27  2      OPC=jne_label              movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  nop                       #  25    0x29  1      OPC=nop                    movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  nop                       #  26    0x2a  1      OPC=nop                    testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  nop                       #  27    0x2b  1      OPC=nop                    jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  nop                       #  28    0x2c  1      OPC=nop                    movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2d  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32           sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  addl %edx, %eax           #  32    0x31  2      OPC=addl_r32_r32           nop                       #  32    0x35  1      OPC=nop                 
  shrl $0x2, %eax           #  33    0x33  3      OPC=shrl_r32_imm8          nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x38  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x39  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3a  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3b  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3e  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  43    0x3f  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
.L_142ce0:                  #        0x40  0      OPC=<label>                popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  nop                       #  44    0x40  1      OPC=nop                    andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  nop                       #  45    0x41  1      OPC=nop                    addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  nop                       #  46    0x42  1      OPC=nop                    jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  nop                       #  47    0x43  1      OPC=nop                                                                                            
  popq %r11                 #  48    0x44  2      OPC=popq_r64_1           .size wcslen, .-wcslen                                                    
  andl $0xe0, %r11d         #  49    0x46  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11           #  50    0x4a  3      OPC=addq_r64_r64                                                                                   
  jmpq %r11                 #  51    0x4d  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (17)                                                Lowest Known Correct Cost (17)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    xorq %rax, %rax           #  2     0x1   3      OPC=xorq_r64_r64         
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x4   1      OPC=nop                  
  xorl %eax, %eax           #  4     0x3   2      OPC=xorl_r32_r32           movl %edi, %edx           #  4     0x5   2      OPC=movl_r32_r32         
  movq %rdi, %rdx           #  5     0x5   3      OPC=movq_r64_r64_1         movl (%r15,%rdx,1), %ecx  #  5     0x7   4      OPC=movl_r32_m32         
  nop                       #  6     0x8   1      OPC=nop                    nop                       #  6     0xb   1      OPC=nop                  
  nop                       #  7     0x9   1      OPC=nop                    nop                       #  7     0xc   1      OPC=nop                  
  nop                       #  8     0xa   1      OPC=nop                    nop                       #  8     0xd   1      OPC=nop                  
  nop                       #  9     0xb   1      OPC=nop                    nop                       #  9     0xe   1      OPC=nop                  
  nop                       #  10    0xc   1      OPC=nop                    nop                       #  10    0xf   1      OPC=nop                  
  nop                       #  11    0xd   1      OPC=nop                    nop                       #  11    0x10  1      OPC=nop                  
  nop                       #  12    0xe   1      OPC=nop                    nop                       #  12    0x11  1      OPC=nop                  
  nop                       #  13    0xf   1      OPC=nop                    nop                       #  13    0x12  1      OPC=nop                  
  nop                       #  14    0x10  1      OPC=nop                    nop                       #  14    0x13  1      OPC=nop                  
  nop                       #  15    0x11  1      OPC=nop                    nopl %eax                 #  15    0x14  3      OPC=nopl_r32             
  movq %rdx, %rdi           #  16    0x12  3      OPC=movq_r64_r64_1         nop                       #  16    0x17  1      OPC=nop                  
  movl (%r15,%rdi,1), %ecx  #  17    0x15  4      OPC=movl_r32_m32           salb $0x3, %ch            #  17    0x18  3      OPC=salb_rh_imm8         
  nop                       #  18    0x19  1      OPC=nop                    je .L_142ce0              #  18    0x1b  2      OPC=je_label             
  nop                       #  19    0x1a  1      OPC=nop                    subq %rdx, %rax           #  19    0x1d  3      OPC=subq_r64_r64_1       
  testl %r15d, %ecx         #  20    0x1b  3      OPC=testl_r32_r32        .L_142cc0:                  #        0x20  0      OPC=<label>              
  je .L_142ce0              #  21    0x1e  2      OPC=je_label               addl $0x4, %edx           #  20    0x20  3      OPC=addl_r32_imm8        
.L_142cc0:                  #        0x20  0      OPC=<label>                andl (%r15,%rdx,1), %edi  #  21    0x23  4      OPC=andl_r32_m32         
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8          jne .L_142cc0             #  22    0x27  2      OPC=jne_label            
  andl (%r15,%rdx,1), %ecx  #  23    0x23  4      OPC=andl_r32_m32           addl %edx, %eax           #  23    0x29  2      OPC=addl_r32_r32         
  jne .L_142cc0             #  24    0x27  2      OPC=jne_label              nop                       #  24    0x2b  1      OPC=nop                  
  nop                       #  25    0x29  1      OPC=nop                    nop                       #  25    0x2c  1      OPC=nop                  
  nop                       #  26    0x2a  1      OPC=nop                    nop                       #  26    0x2d  1      OPC=nop                  
  nop                       #  27    0x2b  1      OPC=nop                    nop                       #  27    0x2e  1      OPC=nop                  
  nop                       #  28    0x2c  1      OPC=nop                    nop                       #  28    0x2f  1      OPC=nop                  
  nop                       #  29    0x2d  1      OPC=nop                    nop                       #  29    0x30  1      OPC=nop                  
  subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32           nop                       #  30    0x31  1      OPC=nop                  
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x32  1      OPC=nop                  
  addl %edx, %eax           #  32    0x31  2      OPC=addl_r32_r32           nop                       #  32    0x33  1      OPC=nop                  
  shrl $0x2, %eax           #  33    0x33  3      OPC=shrl_r32_imm8          shrq $0x2, %rax           #  33    0x34  4      OPC=shrq_r64_imm8        
  nop                       #  34    0x36  1      OPC=nop                    nop                       #  34    0x38  1      OPC=nop                  
  nop                       #  35    0x37  1      OPC=nop                    nop                       #  35    0x39  1      OPC=nop                  
  nop                       #  36    0x38  1      OPC=nop                    nop                       #  36    0x3a  1      OPC=nop                  
  nop                       #  37    0x39  1      OPC=nop                    nop                       #  37    0x3b  1      OPC=nop                  
  nop                       #  38    0x3a  1      OPC=nop                    nop                       #  38    0x3c  1      OPC=nop                  
  nop                       #  39    0x3b  1      OPC=nop                    nop                       #  39    0x3d  1      OPC=nop                  
  nop                       #  40    0x3c  1      OPC=nop                    nop                       #  40    0x3e  1      OPC=nop                  
  nop                       #  41    0x3d  1      OPC=nop                    nop                       #  41    0x3f  1      OPC=nop                  
  nop                       #  42    0x3e  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  43    0x3f  1      OPC=nop                    nop                       #  42    0x40  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>                nop                       #  43    0x41  1      OPC=nop                  
  nop                       #  44    0x40  1      OPC=nop                    nop                       #  44    0x42  1      OPC=nop                  
  nop                       #  45    0x41  1      OPC=nop                    nop                       #  45    0x43  1      OPC=nop                  
  nop                       #  46    0x42  1      OPC=nop                    nop                       #  46    0x44  1      OPC=nop                  
  nop                       #  47    0x43  1      OPC=nop                    nop                       #  47    0x45  1      OPC=nop                  
  popq %r11                 #  48    0x44  2      OPC=popq_r64_1             nop                       #  48    0x46  1      OPC=nop                  
  andl $0xe0, %r11d         #  49    0x46  4      OPC=andl_r32_imm8          nop                       #  49    0x47  1      OPC=nop                  
  addq %r15, %r11           #  50    0x4a  3      OPC=addq_r64_r64           nopl %eax                 #  50    0x48  3      OPC=nopl_r32             
  jmpq %r11                 #  51    0x4d  3      OPC=jmpq_r64               popq %r11                 #  51    0x4b  2      OPC=popq_r64_1           
                                                                             andl $0xe0, %r11d         #  52    0x4d  4      OPC=andl_r32_imm8        
.size wcslen, .-wcslen                                                       addq %r15, %r11           #  53    0x51  3      OPC=addq_r64_r64         
                                                                             jmpq %r11                 #  54    0x54  3      OPC=jmpq_r64             
                                                                                                                                                      
                                                                           .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (16)                                                Lowest Known Correct Cost (16)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x2   1      OPC=nop                  
  nop                       #  4     0x3   1      OPC=nop                    nop                       #  4     0x3   1      OPC=nop                  
  movl %edi, %edx           #  5     0x4   2      OPC=movl_r32_r32           movl %edi, %edx           #  5     0x4   2      OPC=movl_r32_r32         
  movl (%r15,%rdx,1), %ecx  #  6     0x6   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  6     0x6   4      OPC=movl_r32_m32         
  nop                       #  7     0xa   1      OPC=nop                    nop                       #  7     0xa   1      OPC=nop                  
  nop                       #  8     0xb   1      OPC=nop                    nop                       #  8     0xb   1      OPC=nop                  
  nop                       #  9     0xc   1      OPC=nop                    nop                       #  9     0xc   1      OPC=nop                  
  nop                       #  10    0xd   1      OPC=nop                    nop                       #  10    0xd   1      OPC=nop                  
  nop                       #  11    0xe   1      OPC=nop                    nop                       #  11    0xe   1      OPC=nop                  
  nop                       #  12    0xf   1      OPC=nop                    nop                       #  12    0xf   1      OPC=nop                  
  nop                       #  13    0x10  1      OPC=nop                    nop                       #  13    0x10  1      OPC=nop                  
  nop                       #  14    0x11  1      OPC=nop                    nop                       #  14    0x11  1      OPC=nop                  
  nop                       #  15    0x12  1      OPC=nop                    nop                       #  15    0x12  1      OPC=nop                  
  xorq %rax, %rax           #  16    0x13  3      OPC=xorq_r64_r64           xorq %rax, %rax           #  16    0x13  3      OPC=xorq_r64_r64         
  nop                       #  17    0x16  1      OPC=nop                    nop                       #  17    0x16  1      OPC=nop                  
  nop                       #  18    0x17  1      OPC=nop                    nop                       #  18    0x17  1      OPC=nop                  
  salb $0x3, %ch            #  19    0x18  3      OPC=salb_rh_imm8           salb $0x3, %ch            #  19    0x18  3      OPC=salb_rh_imm8         
  je .L_142ce0              #  20    0x1b  2      OPC=je_label               je .L_142ce0              #  20    0x1b  2      OPC=je_label             
  subq %rdx, %rax           #  21    0x1d  3      OPC=subq_r64_r64_1         subq %rdx, %rax           #  21    0x1d  3      OPC=subq_r64_r64_1       
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8        
  andl (%r15,%rdx,1), %edi  #  23    0x23  4      OPC=andl_r32_m32           andl (%r15,%rdx,1), %edi  #  23    0x23  4      OPC=andl_r32_m32         
  jne .L_142cc0             #  24    0x27  2      OPC=jne_label              jne .L_142cc0             #  24    0x27  2      OPC=jne_label            
  addl %edx, %eax           #  25    0x29  2      OPC=addl_r32_r32           addl %edx, %eax           #  25    0x29  2      OPC=addl_r32_r32         
  nop                       #  26    0x2b  1      OPC=nop                    nop                       #  26    0x2b  1      OPC=nop                  
  nop                       #  27    0x2c  1      OPC=nop                    nop                       #  27    0x2c  1      OPC=nop                  
  nop                       #  28    0x2d  1      OPC=nop                    nop                       #  28    0x2d  1      OPC=nop                  
  nop                       #  29    0x2e  1      OPC=nop                    nop                       #  29    0x2e  1      OPC=nop                  
  nop                       #  30    0x2f  1      OPC=nop                    nop                       #  30    0x2f  1      OPC=nop                  
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x30  1      OPC=nop                  
  nop                       #  32    0x31  1      OPC=nop                    nop                       #  32    0x31  1      OPC=nop                  
  shrq $0x2, %rax           #  33    0x32  4      OPC=shrq_r64_imm8          shrq $0x2, %rax           #  33    0x32  4      OPC=shrq_r64_imm8        
  nop                       #  34    0x36  1      OPC=nop                    nop                       #  34    0x36  1      OPC=nop                  
  nop                       #  35    0x37  1      OPC=nop                    nop                       #  35    0x37  1      OPC=nop                  
  nop                       #  36    0x38  1      OPC=nop                    nop                       #  36    0x38  1      OPC=nop                  
  nop                       #  37    0x39  1      OPC=nop                    nop                       #  37    0x39  1      OPC=nop                  
  nop                       #  38    0x3a  1      OPC=nop                    nop                       #  38    0x3a  1      OPC=nop                  
  nop                       #  39    0x3b  1      OPC=nop                    nop                       #  39    0x3b  1      OPC=nop                  
  nop                       #  40    0x3c  1      OPC=nop                    nop                       #  40    0x3c  1      OPC=nop                  
  nop                       #  41    0x3d  1      OPC=nop                    nop                       #  41    0x3d  1      OPC=nop                  
  nop                       #  42    0x3e  1      OPC=nop                    nop                       #  42    0x3e  1      OPC=nop                  
  nop                       #  43    0x3f  1      OPC=nop                    nop                       #  43    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nopl %eax                 #  44    0x40  3      OPC=nopl_r32               nopl %eax                 #  44    0x40  3      OPC=nopl_r32             
  nop                       #  45    0x43  1      OPC=nop                    nop                       #  45    0x43  1      OPC=nop                  
  nop                       #  46    0x44  1      OPC=nop                    nop                       #  46    0x44  1      OPC=nop                  
  nop                       #  47    0x45  1      OPC=nop                    nop                       #  47    0x45  1      OPC=nop                  
  nop                       #  48    0x46  1      OPC=nop                    nop                       #  48    0x46  1      OPC=nop                  
  nopl %eax                 #  49    0x47  3      OPC=nopl_r32               nopl %eax                 #  49    0x47  3      OPC=nopl_r32             
  popq %r11                 #  50    0x4a  2      OPC=popq_r64_1             popq %r11                 #  50    0x4a  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  51    0x4c  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  51    0x4c  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  52    0x50  3      OPC=addq_r64_r64           addq %r15, %r11           #  52    0x50  3      OPC=addq_r64_r64         
  jmpq %r11                 #  53    0x53  3      OPC=jmpq_r64               jmpq %r11                 #  53    0x53  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (15)                                                Lowest Known Correct Cost (16)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x2   1      OPC=nop                  
  nop                       #  4     0x3   1      OPC=nop                    nop                       #  4     0x3   1      OPC=nop                  
  nop                       #  5     0x4   1      OPC=nop                    movl %edi, %edx           #  5     0x4   2      OPC=movl_r32_r32         
  nop                       #  6     0x5   1      OPC=nop                    movl (%r15,%rdx,1), %ecx  #  6     0x6   4      OPC=movl_r32_m32         
  movl %edi, %edx           #  7     0x6   2      OPC=movl_r32_r32           nop                       #  7     0xa   1      OPC=nop                  
  movl (%r15,%rdx,1), %ecx  #  8     0x8   4      OPC=movl_r32_m32           nop                       #  8     0xb   1      OPC=nop                  
  nop                       #  9     0xc   1      OPC=nop                    nop                       #  9     0xc   1      OPC=nop                  
  xorq %rax, %rax           #  10    0xd   3      OPC=xorq_r64_r64           nop                       #  10    0xd   1      OPC=nop                  
  nop                       #  11    0x10  1      OPC=nop                    nop                       #  11    0xe   1      OPC=nop                  
  nop                       #  12    0x11  1      OPC=nop                    nop                       #  12    0xf   1      OPC=nop                  
  nop                       #  13    0x12  1      OPC=nop                    nop                       #  13    0x10  1      OPC=nop                  
  nop                       #  14    0x13  1      OPC=nop                    nop                       #  14    0x11  1      OPC=nop                  
  nop                       #  15    0x14  1      OPC=nop                    nop                       #  15    0x12  1      OPC=nop                  
  nop                       #  16    0x15  1      OPC=nop                    xorq %rax, %rax           #  16    0x13  3      OPC=xorq_r64_r64         
  nop                       #  17    0x16  1      OPC=nop                    nop                       #  17    0x16  1      OPC=nop                  
  nop                       #  18    0x17  1      OPC=nop                    nop                       #  18    0x17  1      OPC=nop                  
  nop                       #  19    0x18  1      OPC=nop                    salb $0x3, %ch            #  19    0x18  3      OPC=salb_rh_imm8         
  sarb $0x1, %cl            #  20    0x19  3      OPC=sarb_r8_imm8           je .L_142ce0              #  20    0x1b  2      OPC=je_label             
  je .L_142ce0              #  21    0x1c  2      OPC=je_label               subq %rdx, %rax           #  21    0x1d  3      OPC=subq_r64_r64_1       
  subl %edx, %eax           #  22    0x1e  2      OPC=subl_r32_r32         .L_142cc0:                  #        0x20  0      OPC=<label>              
.L_142cc0:                  #        0x20  0      OPC=<label>                addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8        
  addw $0x4, %dx            #  23    0x20  4      OPC=addw_r16_imm8          andl (%r15,%rdx,1), %edi  #  23    0x23  4      OPC=andl_r32_m32         
  andl (%r15,%rdx,1), %edi  #  24    0x24  4      OPC=andl_r32_m32           jne .L_142cc0             #  24    0x27  2      OPC=jne_label            
  jne .L_142cc0             #  25    0x28  2      OPC=jne_label              addl %edx, %eax           #  25    0x29  2      OPC=addl_r32_r32         
  nop                       #  26    0x2a  1      OPC=nop                    nop                       #  26    0x2b  1      OPC=nop                  
  nop                       #  27    0x2b  1      OPC=nop                    nop                       #  27    0x2c  1      OPC=nop                  
  nop                       #  28    0x2c  1      OPC=nop                    nop                       #  28    0x2d  1      OPC=nop                  
  nop                       #  29    0x2d  1      OPC=nop                    nop                       #  29    0x2e  1      OPC=nop                  
  nop                       #  30    0x2e  1      OPC=nop                    nop                       #  30    0x2f  1      OPC=nop                  
  addl %edx, %eax           #  31    0x2f  2      OPC=addl_r32_r32_1         nop                       #  31    0x30  1      OPC=nop                  
  shrq $0x2, %rax           #  32    0x31  4      OPC=shrq_r64_imm8          nop                       #  32    0x31  1      OPC=nop                  
  nop                       #  33    0x35  1      OPC=nop                    shrq $0x2, %rax           #  33    0x32  4      OPC=shrq_r64_imm8        
  nop                       #  34    0x36  1      OPC=nop                    nop                       #  34    0x36  1      OPC=nop                  
  nop                       #  35    0x37  1      OPC=nop                    nop                       #  35    0x37  1      OPC=nop                  
  nop                       #  36    0x38  1      OPC=nop                    nop                       #  36    0x38  1      OPC=nop                  
  nop                       #  37    0x39  1      OPC=nop                    nop                       #  37    0x39  1      OPC=nop                  
  nop                       #  38    0x3a  1      OPC=nop                    nop                       #  38    0x3a  1      OPC=nop                  
  nop                       #  39    0x3b  1      OPC=nop                    nop                       #  39    0x3b  1      OPC=nop                  
  nop                       #  40    0x3c  1      OPC=nop                    nop                       #  40    0x3c  1      OPC=nop                  
  nop                       #  41    0x3d  1      OPC=nop                    nop                       #  41    0x3d  1      OPC=nop                  
  nop                       #  42    0x3e  1      OPC=nop                    nop                       #  42    0x3e  1      OPC=nop                  
  nop                       #  43    0x3f  1      OPC=nop                    nop                       #  43    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  popq %r11                 #  44    0x40  2      OPC=popq_r64_1             nopl %eax                 #  44    0x40  3      OPC=nopl_r32             
  andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8          nop                       #  45    0x43  1      OPC=nop                  
  addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64           nop                       #  46    0x44  1      OPC=nop                  
  jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64               nop                       #  47    0x45  1      OPC=nop                  
                                                                             nop                       #  48    0x46  1      OPC=nop                  
.size wcslen, .-wcslen                                                       nopl %eax                 #  49    0x47  3      OPC=nopl_r32             
                                                                             popq %r11                 #  50    0x4a  2      OPC=popq_r64_1           
                                                                             andl $0xe0, %r11d         #  51    0x4c  4      OPC=andl_r32_imm8        
                                                                             addq %r15, %r11           #  52    0x50  3      OPC=addq_r64_r64         
                                                                             jmpq %r11                 #  53    0x53  3      OPC=jmpq_r64             
                                                                                                                                                      
                                                                           .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  71.4918s
Iterations/s:                  1398.76

Starting cost:                 18
Lowest cost:                   15
Lowest correct cost:           16

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.386%       7.799%        7.799%       
Opcode          8.298%       7.846%        7.606%       
Operand         8.495%       3.773%        1.234%       
Global Swap     8.237%       7.413%        6.83%        
Local Swap      8.277%       3.34%         2.657%       
ReplaceNop      8.355%       7.95%         7.655%       
Rotate          8.18%        7.512%        5.96%        
Delete          8.237%       7.815%        6.796%       
Instruction     8.338%       4.221%        0.261%       
Add Nops        8.372%       8.372%        6.973%       
OpcodeWidth     8.455%       7.828%        7.672%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.37%        1.399%        0.001%       
                                                        
Total           100%         75.268%       61.444%      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (14)                                                 Lowest Known Correct Cost (16)                                             
                                                                                                                                                       
  .text                                                                       .text                                                                    
  .globl wcslen                                                               .globl wcslen                                                            
  .type wcslen, @function                                                     .type wcslen, @function                                                  
                                                                                                                                                       
#! file-offset 0                                                            #! file-offset 0                                                           
#! rip-offset  0                                                            #! rip-offset  0                                                           
#! capacity    0 bytes                                                      #! capacity    0 bytes                                                     
                                                                                                                                                       
# Text                       #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                     #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax            #  1     0     2      OPC=xorl_r32_r32           nop                       #  1     0     1      OPC=nop                  
  movl %edi, %edx            #  2     0x2   2      OPC=movl_r32_r32_1         nop                       #  2     0x1   1      OPC=nop                  
  movl (%r15,%rdx,1), %r14d  #  3     0x4   4      OPC=movl_r32_m32           nop                       #  3     0x2   1      OPC=nop                  
  shrb $0x1, %r14b           #  4     0x8   4      OPC=shrb_r8_imm8           nop                       #  4     0x3   1      OPC=nop                  
  nopl %eax                  #  5     0xc   3      OPC=nopl_r32               movl %edi, %edx           #  5     0x4   2      OPC=movl_r32_r32         
  nop                        #  6     0xf   1      OPC=nop                    movl (%r15,%rdx,1), %ecx  #  6     0x6   4      OPC=movl_r32_m32         
  nop                        #  7     0x10  1      OPC=nop                    nop                       #  7     0xa   1      OPC=nop                  
  nop                        #  8     0x11  1      OPC=nop                    nop                       #  8     0xb   1      OPC=nop                  
  nop                        #  9     0x12  1      OPC=nop                    nop                       #  9     0xc   1      OPC=nop                  
  nop                        #  10    0x13  1      OPC=nop                    nop                       #  10    0xd   1      OPC=nop                  
  nop                        #  11    0x14  1      OPC=nop                    nop                       #  11    0xe   1      OPC=nop                  
  nop                        #  12    0x15  1      OPC=nop                    nop                       #  12    0xf   1      OPC=nop                  
  nop                        #  13    0x16  1      OPC=nop                    nop                       #  13    0x10  1      OPC=nop                  
  nop                        #  14    0x17  1      OPC=nop                    nop                       #  14    0x11  1      OPC=nop                  
  nop                        #  15    0x18  1      OPC=nop                    nop                       #  15    0x12  1      OPC=nop                  
  nop                        #  16    0x19  1      OPC=nop                    xorq %rax, %rax           #  16    0x13  3      OPC=xorq_r64_r64         
  nop                        #  17    0x1a  1      OPC=nop                    nop                       #  17    0x16  1      OPC=nop                  
  je .L_142ce0               #  18    0x1b  2      OPC=je_label               nop                       #  18    0x17  1      OPC=nop                  
  subq %rdi, %rax            #  19    0x1d  3      OPC=subq_r64_r64           salb $0x3, %ch            #  19    0x18  3      OPC=salb_rh_imm8         
.L_142cc0:                   #        0x20  0      OPC=<label>                je .L_142ce0              #  20    0x1b  2      OPC=je_label             
  addw $0x4, %dx             #  20    0x20  4      OPC=addw_r16_imm8          subq %rdx, %rax           #  21    0x1d  3      OPC=subq_r64_r64_1       
  andl (%r15,%rdx,1), %r14d  #  21    0x24  4      OPC=andl_r32_m32         .L_142cc0:                  #        0x20  0      OPC=<label>              
  jne .L_142cc0              #  22    0x28  2      OPC=jne_label              addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8        
  nop                        #  23    0x2a  1      OPC=nop                    andl (%r15,%rdx,1), %edi  #  23    0x23  4      OPC=andl_r32_m32         
  nop                        #  24    0x2b  1      OPC=nop                    jne .L_142cc0             #  24    0x27  2      OPC=jne_label            
  nop                        #  25    0x2c  1      OPC=nop                    addl %edx, %eax           #  25    0x29  2      OPC=addl_r32_r32         
  nop                        #  26    0x2d  1      OPC=nop                    nop                       #  26    0x2b  1      OPC=nop                  
  nop                        #  27    0x2e  1      OPC=nop                    nop                       #  27    0x2c  1      OPC=nop                  
  nop                        #  28    0x2f  1      OPC=nop                    nop                       #  28    0x2d  1      OPC=nop                  
  nop                        #  29    0x30  1      OPC=nop                    nop                       #  29    0x2e  1      OPC=nop                  
  nop                        #  30    0x31  1      OPC=nop                    nop                       #  30    0x2f  1      OPC=nop                  
  nop                        #  31    0x32  1      OPC=nop                    nop                       #  31    0x30  1      OPC=nop                  
  nop                        #  32    0x33  1      OPC=nop                    nop                       #  32    0x31  1      OPC=nop                  
  nop                        #  33    0x34  1      OPC=nop                    shrq $0x2, %rax           #  33    0x32  4      OPC=shrq_r64_imm8        
  nop                        #  34    0x35  1      OPC=nop                    nop                       #  34    0x36  1      OPC=nop                  
  nop                        #  35    0x36  1      OPC=nop                    nop                       #  35    0x37  1      OPC=nop                  
  addl %edx, %eax            #  36    0x37  2      OPC=addl_r32_r32_1         nop                       #  36    0x38  1      OPC=nop                  
  sarq $0x2, %rax            #  37    0x39  4      OPC=sarq_r64_imm8          nop                       #  37    0x39  1      OPC=nop                  
  nop                        #  38    0x3d  1      OPC=nop                    nop                       #  38    0x3a  1      OPC=nop                  
  nop                        #  39    0x3e  1      OPC=nop                    nop                       #  39    0x3b  1      OPC=nop                  
  nop                        #  40    0x3f  1      OPC=nop                    nop                       #  40    0x3c  1      OPC=nop                  
.L_142ce0:                   #        0x40  0      OPC=<label>                nop                       #  41    0x3d  1      OPC=nop                  
  popq %r11                  #  41    0x40  2      OPC=popq_r64_1             nop                       #  42    0x3e  1      OPC=nop                  
  andl $0xe0, %r11d          #  42    0x42  4      OPC=andl_r32_imm8          nop                       #  43    0x3f  1      OPC=nop                  
  addq %r15, %r11            #  43    0x46  3      OPC=addq_r64_r64         .L_142ce0:                  #        0x40  0      OPC=<label>              
  jmpq %r11                  #  44    0x49  3      OPC=jmpq_r64               nopl %eax                 #  44    0x40  3      OPC=nopl_r32             
                                                                              nop                       #  45    0x43  1      OPC=nop                  
.size wcslen, .-wcslen                                                        nop                       #  46    0x44  1      OPC=nop                  
                                                                              nop                       #  47    0x45  1      OPC=nop                  
                                                                              nop                       #  48    0x46  1      OPC=nop                  
                                                                              nopl %eax                 #  49    0x47  3      OPC=nopl_r32             
                                                                              popq %r11                 #  50    0x4a  2      OPC=popq_r64_1           
                                                                              andl $0xe0, %r11d         #  51    0x4c  4      OPC=andl_r32_imm8        
                                                                              addq %r15, %r11           #  52    0x50  3      OPC=addq_r64_r64         
                                                                              jmpq %r11                 #  53    0x53  3      OPC=jmpq_r64             
                                                                                                                                                       
                                                                            .size wcslen, .-wcslen                                                     
                                                                                                                                                       

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  200.41s
Iterations/s:                  997.953

Starting cost:                 18
Lowest cost:                   14
Lowest correct cost:           16

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.422%       8.018%        8.018%       
Opcode          8.297%       8.0075%       7.8485%      
Operand         8.398%       3.798%        1.4195%      
Global Swap     8.327%       7.771%        7.3655%      
Local Swap      8.384%       3.2995%       2.6175%      
ReplaceNop      8.3045%      8.0425%       7.8445%      
Rotate          8.3145%      7.8665%       6.683%       
Delete          8.267%       7.9805%       7.249%       
Instruction     8.212%       3.8105%       0.2315%      
Add Nops        8.3705%      8.3705%       7.3485%      
OpcodeWidth     8.347%       7.937%        7.828%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.3565%      1.3715%       0.0025%      
                                                        
Total           100%         76.273%       64.456%      

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  346.093s
Iterations/s:                  866.818

Starting cost:                 18
Lowest cost:                   14
Lowest correct cost:           16

Move Type       Proposed     Succeeded     Accepted        
                                                           
Global Copy     8.429%       8.105%        8.105%          
Opcode          8.32333%     8.091%        7.95733%        
Operand         8.34767%     3.985%        1.50933%        
Global Swap     8.32767%     7.86667%      7.51267%        
Local Swap      8.333%       3.49067%      2.72833%        
ReplaceNop      8.318%       8.103%        7.943%          
Rotate          8.36767%     8.00133%      6.96067%        
Delete          8.30967%     8.075%        7.41767%        
Instruction     8.241%       3.832%        0.249333%       
Add Nops        8.32333%     8.32333%      7.435%          
OpcodeWidth     8.31%        7.96433%      7.87367%        
2xWeighted      0%           0%            0%              
Memory+Swap     8.36967%     1.334%        0.00233333%     
                                                           
Total           100%         77.1713%      65.6943%        

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  506.294s
Iterations/s:                  790.054

Starting cost:                 18
Lowest cost:                   14
Lowest correct cost:           16

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.39825%     8.122%        8.122%       
Opcode          8.307%       8.10925%      7.992%       
Operand         8.33475%     4.0765%       1.59775%     
Global Swap     8.3255%      7.9295%       7.61425%     
Local Swap      8.3045%      3.6405%       2.884%       
ReplaceNop      8.3625%      8.1715%       8.03125%     
Rotate          8.3425%      8.018%        7.05725%     
Delete          8.349%       8.14675%      7.51725%     
Instruction     8.26775%     3.95275%      0.2775%      
Add Nops        8.32075%     8.32075%      7.48075%     
OpcodeWidth     8.35%        8.045%        7.966%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.3375%      1.33775%      0.00225%     
                                                        
Total           100%         77.8702%      66.5422%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  693.11s
Iterations/s:                  721.386

Starting cost:                 18
Lowest cost:                   14
Lowest correct cost:           16

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.4044%      8.1574%       8.1574%      
Opcode          8.29%        8.1134%       8.0098%      
Operand         8.3392%      4.1518%       1.7134%      
Global Swap     8.313%       7.9506%       7.6574%      
Local Swap      8.3258%      3.7396%       2.942%       
ReplaceNop      8.3622%      8.189%        8.0632%      
Rotate          8.3608%      8.0698%       7.1394%      
Delete          8.312%       8.1318%       7.4868%      
Instruction     8.3192%      4.0208%       0.2954%      
Add Nops        8.316%       8.316%        7.4654%      
OpcodeWidth     8.3346%      8.0578%       7.9822%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3228%      1.33%         0.0018%      
                                                        
Total           100%         78.228%       66.9142%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     5b 0a e6 be 9d 00 06 7f
%rcx     e7 a0 8e 26 46 30 1a fd
%rdx     f1 0c 45 a8 1d 17 9b be
%rbx     18 e7 32 e6 14 55 11 30
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 0e 87 6f 64
%rdi     00 00 00 00 0e 87 6f 81
%r8      83 4f e1 17 ac 91 bd af
%r9      54 33 98 e6 72 49 b3 ff
%r10     70 bd 46 2f fc 11 35 16
%r11     47 35 86 be d9 90 a0 24
%r12     b9 f4 ee a2 4e 11 6c d3
%r13     05 31 02 40 a1 4b 2a ea
%r14     01 51 09 42 4a 82 ad 07
%r15     00 00 00 00 00 52 23 70

%ymm0    c2 17 c2 f9 d9 a5 e3 12 f8 02 71 ea 7e a4 e1 aa cd 1f ed 04 7e 29 b2 11 b0 95 e6 e3 90 a9 26 15
%ymm1    1f 34 d8 5f 3c 7b 07 bf d6 2d 3e ab 43 8b 2f ea 86 f8 06 10 6f c2 0c 45 92 65 88 c5 9a 70 af 0c
%ymm2    80 4e b1 10 67 d2 31 24 9d 84 38 78 32 ba ac 90 bb ca bc d5 3f c3 98 d4 42 3a f1 41 0e d2 99 28
%ymm3    ab 2a 80 55 7f 9f 48 45 34 5e 1b b6 14 47 a5 d2 58 b2 fb 85 a8 e0 13 65 bb 66 92 18 49 d1 f2 39
%ymm4    7b 7c fe 8b 7f 35 f4 f0 e6 e4 e4 0a 6d ee 7b c2 47 8e a6 fa 32 2e 1b 6b 43 fe a1 ab 04 7a e2 95
%ymm5    98 3f 83 95 a9 32 70 11 75 51 8b e8 ae 8a d8 60 62 ba 94 5e 23 26 97 4d 96 0e e8 a6 48 30 28 d9
%ymm6    59 bf 5a c9 89 5d d0 a0 22 f6 22 10 54 26 9c bf f7 01 4a b3 e4 c4 11 e2 a8 ab e6 e2 97 d7 a2 04
%ymm7    a5 0a 3a 24 8e 3c 00 44 01 cf 59 ef c7 ad 01 2f a0 7e 6f 85 72 ad 63 09 e6 49 59 18 20 f3 d5 68
%ymm8    f6 83 29 aa 3b b6 ac d0 29 4a 25 43 a5 8d 6a e9 6f f7 bb 57 9a 5d 40 9f 52 13 d2 41 63 15 37 eb
%ymm9    e4 af 57 31 67 a6 34 67 97 05 7c b1 42 bf e3 24 38 f9 c2 7e ff 68 13 0d 28 0b 0e 9b 87 fa 5f 2b
%ymm10   fe 1e d2 71 b9 7e 83 29 17 99 bc 77 2a 78 a4 b9 22 76 43 3a e8 54 81 d7 c7 f9 63 9d 46 5d 39 eb
%ymm11   b1 6e cf b4 4e e6 06 e0 0a dc a6 37 ec fd f1 6c c6 90 75 f9 dc 64 02 75 cf ec 05 88 86 59 6b b2
%ymm12   1b f4 25 c6 3e f2 95 84 d6 52 80 92 1e db bb da f9 0d a2 e2 46 ce 4d 6f 2a 5d 47 04 72 74 2f 49
%ymm13   62 f6 3b 7d 19 d7 09 88 02 be de 8e a4 93 2b fb 9a 97 d9 9e a9 e3 c1 32 0e bf a5 2c b3 a8 78 6f
%ymm14   e2 ed 6e 7d f1 7d 22 3a fd 6b 24 28 91 d8 b4 35 eb 34 0a 55 a6 e0 92 91 08 92 0e 88 c6 02 47 79
%ymm15   70 bf 23 ed c0 29 80 0f 48 05 17 ff a4 a6 1d 1d ae 91 53 3e 87 f8 13 54 dd 59 1a 0c d9 10 b5 28

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   85 14 69 e5 c0 92 37 90 
00000006 fffffff0   v v v v v v v v   fa b0 84 3c 63 63 42 92 
00000006 ffffffe8   v v v v v v v v   10 e4 37 03 87 d6 9f e9 
00000006 ffffffe0   v v v v v v v v   ca 60 4e db d5 c3 04 5c 

[ 00000000 0ed99338 - 00000000 0ed992a0 ]
[ 3 valid rows shown ]

00000000 0ed99300   . . . . . . . v   00 00 00 00 00 00 00 00 
00000000 0ed992f8   v v v v v v v v   00 00 00 e4 00 b0 3a 99 
00000000 0ed992f0   v v v v v v v .   c1 cf 73 9f 9c 2b 84 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (18)                                               Lowest Known Correct Cost (19)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32          movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xf   2      OPC=je_label              je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x11  1      OPC=nop                   nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x12  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x13  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32         movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label             testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  sarl $0x2, %eax           #  29    0x2f  3      OPC=sarl_r32_imm8         subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x32  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x33  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x34  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x35  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x38  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x39  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3a  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3b  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
.L_142ce0:                  #        0x3e  0      OPC=<label>               nop                       #  42    0x3f  1      OPC=nop                 
  popq %r11                 #  42    0x3e  2      OPC=popq_r64_1          .L_142ce0:                  #        0x40  0      OPC=<label>             
  andl $0xe0, %r11d         #  43    0x40  4      OPC=andl_r32_imm8         popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  addq %r15, %r11           #  44    0x44  3      OPC=addq_r64_r64          andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  jmpq %r11                 #  45    0x47  3      OPC=jmpq_r64              addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
                                                                            jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
.size wcslen, .-wcslen                                                                                                                              
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (17)                                               Lowest Known Correct Cost (17)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   nop                       #  1     0     1      OPC=nop                 
  nop                       #  2     0x1   1      OPC=nop                   nop                       #  2     0x1   1      OPC=nop                 
  xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32          movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  6     0xa   3      OPC=movq_r64_r64          movq %rdi, %rdx           #  6     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  7     0xd   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  7     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  8     0xf   2      OPC=je_label              je .L_142ce0              #  8     0xf   2      OPC=je_label            
  nop                       #  9     0x11  1      OPC=nop                   nop                       #  9     0x11  1      OPC=nop                 
  nop                       #  10    0x12  1      OPC=nop                   nop                       #  10    0x12  1      OPC=nop                 
  nop                       #  11    0x13  1      OPC=nop                   nop                       #  11    0x13  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                   nop                       #  12    0x14  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                   nop                       #  13    0x15  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                   nop                       #  14    0x16  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                   nop                       #  15    0x17  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                   nop                       #  16    0x18  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                   nop                       #  17    0x19  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                   nop                       #  18    0x1a  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                   nop                       #  19    0x1b  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                   nop                       #  20    0x1c  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                   nop                       #  21    0x1d  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                   nop                       #  22    0x1e  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                   nop                       #  23    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32          movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32        
  testl %eax, %ecx          #  26    0x27  2      OPC=testl_r32_r32         testl %eax, %ecx          #  26    0x27  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label             jne .L_142cc0             #  27    0x29  2      OPC=jne_label           
  nop                       #  28    0x2b  1      OPC=nop                   nop                       #  28    0x2b  1      OPC=nop                 
  movl %edx, %eax           #  29    0x2c  2      OPC=movl_r32_r32          movl %edx, %eax           #  29    0x2c  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32          subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32        
  sarl $0x2, %eax           #  31    0x30  3      OPC=sarl_r32_imm8         sarl $0x2, %eax           #  31    0x30  3      OPC=sarl_r32_imm8       
  nop                       #  32    0x33  1      OPC=nop                   nop                       #  32    0x33  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                   nop                       #  33    0x34  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                   nop                       #  34    0x35  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                   nop                       #  35    0x36  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                   nop                       #  36    0x37  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                   nop                       #  37    0x38  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                   nop                       #  38    0x39  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                   nop                       #  39    0x3a  1      OPC=nop                 
  nop                       #  40    0x3b  1      OPC=nop                   nop                       #  40    0x3b  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                   nop                       #  41    0x3c  1      OPC=nop                 
  nop                       #  42    0x3d  1      OPC=nop                   nop                       #  42    0x3d  1      OPC=nop                 
  nop                       #  43    0x3e  1      OPC=nop                   nop                       #  43    0x3e  1      OPC=nop                 
  nop                       #  44    0x3f  1      OPC=nop                   nop                       #  44    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>             .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  45    0x40  2      OPC=popq_r64_1            popq %r11                 #  45    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  46    0x42  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  46    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  47    0x46  3      OPC=addq_r64_r64          addq %r15, %r11           #  47    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  48    0x49  3      OPC=jmpq_r64              jmpq %r11                 #  48    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  52.5692s
Iterations/s:                  1902.25

Starting cost:                 19
Lowest cost:                   17
Lowest correct cost:           17

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.261%       6.779%        6.779%       
Opcode          8.254%       7.198%        6.538%       
Operand         8.245%       3.79%         1.242%       
Global Swap     8.418%       6.053%        4.654%       
Local Swap      8.385%       5.512%        4.443%       
ReplaceNop      8.259%       7.163%        6.175%       
Rotate          8.409%       6.428%        3.648%       
Delete          8.264%       7.175%        4.433%       
Instruction     8.515%       5.103%        0.347%       
Add Nops        8.442%       8.442%        4.186%       
OpcodeWidth     8.319%       6.601%        6.234%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.229%       1.23%         0.001%       
                                                        
Total           100%         71.474%       48.68%       

********************************************************************************

Progress Update: 

Lowest Cost Discovered (16)                                                   Lowest Known Correct Cost (16)                                                
                                                                                                                                                            
  .text                                                                         .text                                                                       
  .globl wcslen                                                                 .globl wcslen                                                               
  .type wcslen, @function                                                       .type wcslen, @function                                                     
                                                                                                                                                            
#! file-offset 0                                                              #! file-offset 0                                                              
#! rip-offset  0                                                              #! rip-offset  0                                                              
#! capacity    0 bytes                                                        #! capacity    0 bytes                                                        
                                                                                                                                                            
# Text                         #  Line  RIP   Bytes  Opcode                   # Text                         #  Line  RIP   Bytes  Opcode                   
.wcslen:                       #        0     0      OPC=<label>              .wcslen:                       #        0     0      OPC=<label>              
  movl %edi, %edx              #  1     0     2      OPC=movl_r32_r32           movl %edi, %edx              #  1     0     2      OPC=movl_r32_r32         
  movl (%r15,%rdx,1), %ecx     #  2     0x2   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx     #  2     0x2   4      OPC=movl_r32_m32         
  xorl %eax, %eax              #  3     0x6   2      OPC=xorl_r32_r32           xorl %eax, %eax              #  3     0x6   2      OPC=xorl_r32_r32         
  nop                          #  4     0x8   1      OPC=nop                    nop                          #  4     0x8   1      OPC=nop                  
  nop                          #  5     0x9   1      OPC=nop                    nop                          #  5     0x9   1      OPC=nop                  
  nop                          #  6     0xa   1      OPC=nop                    nop                          #  6     0xa   1      OPC=nop                  
  nop                          #  7     0xb   1      OPC=nop                    nop                          #  7     0xb   1      OPC=nop                  
  nop                          #  8     0xc   1      OPC=nop                    nop                          #  8     0xc   1      OPC=nop                  
  nop                          #  9     0xd   1      OPC=nop                    nop                          #  9     0xd   1      OPC=nop                  
  nop                          #  10    0xe   1      OPC=nop                    nop                          #  10    0xe   1      OPC=nop                  
  nop                          #  11    0xf   1      OPC=nop                    nop                          #  11    0xf   1      OPC=nop                  
  xorb %ah, %ch                #  12    0x10  2      OPC=xorb_rh_rh             xorb %ah, %ch                #  12    0x10  2      OPC=xorb_rh_rh           
  nop                          #  13    0x12  1      OPC=nop                    nop                          #  13    0x12  1      OPC=nop                  
  nop                          #  14    0x13  1      OPC=nop                    nop                          #  14    0x13  1      OPC=nop                  
  nop                          #  15    0x14  1      OPC=nop                    nop                          #  15    0x14  1      OPC=nop                  
  nop                          #  16    0x15  1      OPC=nop                    nop                          #  16    0x15  1      OPC=nop                  
  nop                          #  17    0x16  1      OPC=nop                    nop                          #  17    0x16  1      OPC=nop                  
  nop                          #  18    0x17  1      OPC=nop                    nop                          #  18    0x17  1      OPC=nop                  
  je .L_142ce0                 #  19    0x18  2      OPC=je_label               je .L_142ce0                 #  19    0x18  2      OPC=je_label             
  nop                          #  20    0x1a  1      OPC=nop                    nop                          #  20    0x1a  1      OPC=nop                  
  leaq 0x4(%rdi,%rax,2), %rdx  #  21    0x1b  5      OPC=leaq_r64_m16           leaq 0x4(%rdi,%rax,2), %rdx  #  21    0x1b  5      OPC=leaq_r64_m16         
.L_142cc0:                     #        0x20  0      OPC=<label>              .L_142cc0:                     #        0x20  0      OPC=<label>              
  addl $0x4, %edx              #  22    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx              #  22    0x20  3      OPC=addl_r32_imm8        
  subb (%r15,%rdx,1), %al      #  23    0x23  4      OPC=subb_r8_m8             subb (%r15,%rdx,1), %al      #  23    0x23  4      OPC=subb_r8_m8           
  sall $0xfc, %eax             #  24    0x27  3      OPC=sall_r32_imm8          sall $0xfc, %eax             #  24    0x27  3      OPC=sall_r32_imm8        
  jne .L_142cc0                #  25    0x2a  2      OPC=jne_label              jne .L_142cc0                #  25    0x2a  2      OPC=jne_label            
  nop                          #  26    0x2c  1      OPC=nop                    nop                          #  26    0x2c  1      OPC=nop                  
  nop                          #  27    0x2d  1      OPC=nop                    nop                          #  27    0x2d  1      OPC=nop                  
  nop                          #  28    0x2e  1      OPC=nop                    nop                          #  28    0x2e  1      OPC=nop                  
  nop                          #  29    0x2f  1      OPC=nop                    nop                          #  29    0x2f  1      OPC=nop                  
  nop                          #  30    0x30  1      OPC=nop                    nop                          #  30    0x30  1      OPC=nop                  
  nop                          #  31    0x31  1      OPC=nop                    nop                          #  31    0x31  1      OPC=nop                  
  nop                          #  32    0x32  1      OPC=nop                    nop                          #  32    0x32  1      OPC=nop                  
  nop                          #  33    0x33  1      OPC=nop                    nop                          #  33    0x33  1      OPC=nop                  
  nop                          #  34    0x34  1      OPC=nop                    nop                          #  34    0x34  1      OPC=nop                  
  subw %di, %dx                #  35    0x35  3      OPC=subw_r16_r16_1         subw %di, %dx                #  35    0x35  3      OPC=subw_r16_r16_1       
  movw %dx, %ax                #  36    0x38  3      OPC=movw_r16_r16_1         movw %dx, %ax                #  36    0x38  3      OPC=movw_r16_r16_1       
  sarl $0x2, %eax              #  37    0x3b  3      OPC=sarl_r32_imm8          sarl $0x2, %eax              #  37    0x3b  3      OPC=sarl_r32_imm8        
  nop                          #  38    0x3e  1      OPC=nop                    nop                          #  38    0x3e  1      OPC=nop                  
  nop                          #  39    0x3f  1      OPC=nop                    nop                          #  39    0x3f  1      OPC=nop                  
.L_142ce0:                     #        0x40  0      OPC=<label>              .L_142ce0:                     #        0x40  0      OPC=<label>              
  nop                          #  40    0x40  1      OPC=nop                    nop                          #  40    0x40  1      OPC=nop                  
  nop                          #  41    0x41  1      OPC=nop                    nop                          #  41    0x41  1      OPC=nop                  
  nop                          #  42    0x42  1      OPC=nop                    nop                          #  42    0x42  1      OPC=nop                  
  nop                          #  43    0x43  1      OPC=nop                    nop                          #  43    0x43  1      OPC=nop                  
  nop                          #  44    0x44  1      OPC=nop                    nop                          #  44    0x44  1      OPC=nop                  
  nop                          #  45    0x45  1      OPC=nop                    nop                          #  45    0x45  1      OPC=nop                  
  nop                          #  46    0x46  1      OPC=nop                    nop                          #  46    0x46  1      OPC=nop                  
  nop                          #  47    0x47  1      OPC=nop                    nop                          #  47    0x47  1      OPC=nop                  
  nop                          #  48    0x48  1      OPC=nop                    nop                          #  48    0x48  1      OPC=nop                  
  nop                          #  49    0x49  1      OPC=nop                    nop                          #  49    0x49  1      OPC=nop                  
  nop                          #  50    0x4a  1      OPC=nop                    nop                          #  50    0x4a  1      OPC=nop                  
  nop                          #  51    0x4b  1      OPC=nop                    nop                          #  51    0x4b  1      OPC=nop                  
  popq %r11                    #  52    0x4c  2      OPC=popq_r64_1             popq %r11                    #  52    0x4c  2      OPC=popq_r64_1           
  andl $0xe0, %r11d            #  53    0x4e  4      OPC=andl_r32_imm8          andl $0xe0, %r11d            #  53    0x4e  4      OPC=andl_r32_imm8        
  addq %r15, %r11              #  54    0x52  3      OPC=addq_r64_r64           addq %r15, %r11              #  54    0x52  3      OPC=addq_r64_r64         
  jmpq %r11                    #  55    0x55  3      OPC=jmpq_r64               jmpq %r11                    #  55    0x55  3      OPC=jmpq_r64             
                                                                                                                                                            
.size wcslen, .-wcslen                                                        .size wcslen, .-wcslen                                                        
                                                                                                                                                            

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  100.568s
Iterations/s:                  1988.71

Starting cost:                 19
Lowest cost:                   16
Lowest correct cost:           16

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.313%       6.796%        6.796%       
Opcode          8.254%       7.1485%       6.4845%      
Operand         8.23%        3.771%        1.2195%      
Global Swap     8.2855%      5.8805%       4.4745%      
Local Swap      8.4425%      5.3645%       4.326%       
ReplaceNop      8.3795%      7.2255%       6.198%       
Rotate          8.3515%      6.3125%       3.55%        
Delete          8.2795%      7.1545%       4.3545%      
Instruction     8.4325%      5.039%        0.336%       
Add Nops        8.4275%      8.4275%       4.1245%      
OpcodeWidth     8.317%       6.583%        6.208%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.2875%      1.28%         0.0005%      
                                                        
Total           100%         70.9825%      48.072%      

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  150.393s
Iterations/s:                  1994.77

Starting cost:                 19
Lowest cost:                   16
Lowest correct cost:           16

Move Type       Proposed     Succeeded     Accepted         
                                                            
Global Copy     8.306%       6.79567%      6.79567%         
Opcode          8.27033%     7.19867%      6.52633%         
Operand         8.256%       3.75167%      1.213%           
Global Swap     8.28067%     5.92033%      4.517%           
Local Swap      8.406%       5.35767%      4.33733%         
ReplaceNop      8.36433%     7.198%        6.19367%         
Rotate          8.388%       6.36633%      3.571%           
Delete          8.338%       7.203%        4.38567%         
Instruction     8.364%       5.00167%      0.329333%        
Add Nops        8.45433%     8.45433%      4.15333%         
OpcodeWidth     8.32433%     6.57467%      6.21167%         
2xWeighted      0%           0%            0%               
Memory+Swap     8.248%       1.23433%      0.000333333%     
                                                            
Total           100%         71.0563%      48.2343%         

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  207.732s
Iterations/s:                  1925.56

Starting cost:                 19
Lowest cost:                   16
Lowest correct cost:           16

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.34075%     6.814%        6.814%       
Opcode          8.307%       7.2325%       6.55775%     
Operand         8.30325%     3.81075%      1.24475%     
Global Swap     8.2645%      5.86175%      4.47125%     
Local Swap      8.39175%     5.38925%      4.3395%      
ReplaceNop      8.36225%     7.1785%       6.181%       
Rotate          8.36375%     6.327%        3.561%       
Delete          8.324%       7.16425%      4.3695%      
Instruction     8.305%       4.99175%      0.3285%      
Add Nops        8.41425%     8.41425%      4.14075%     
OpcodeWidth     8.343%       6.56375%      6.195%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.2805%      1.2425%       0.00125%     
                                                        
Total           100%         70.9903%      48.2043%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  266.592s
Iterations/s:                  1875.52

Starting cost:                 19
Lowest cost:                   16
Lowest correct cost:           16

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.3684%      6.7964%       6.7964%      
Opcode          8.3342%      7.2374%       6.5502%      
Operand         8.2734%      3.7916%       1.2516%      
Global Swap     8.2986%      5.7894%       4.41%        
Local Swap      8.3798%      5.3412%       4.284%       
ReplaceNop      8.3322%      7.1078%       6.1244%      
Rotate          8.352%       6.2782%       3.5342%      
Delete          8.3136%      7.116%        4.351%       
Instruction     8.324%       4.9754%       0.3232%      
Add Nops        8.3884%      8.3884%       4.1148%      
OpcodeWidth     8.3536%      6.5642%       6.1942%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.2818%      1.223%        0.001%       
                                                        
Total           100%         70.609%       47.935%      

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     86 f3 a2 99 21 54 3b 2a
%rcx     84 01 86 b1 96 e7 cc 55
%rdx     92 df 7c d5 9f 22 0b 55
%rbx     5f 09 d6 4a 87 44 b6 bf
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 00 d3 92 50
%rdi     00 00 00 00 00 d3 92 66
%r8      59 40 7e e7 60 d0 a7 5b
%r9      09 7f 3f 04 0c 18 9c 9d
%r10     14 3b 93 d8 18 bd 86 68
%r11     01 7e a2 c2 62 22 1f 33
%r12     6c 18 dd bd 3d 76 a2 88
%r13     9d 66 fa 42 a7 c5 1a 74
%r14     e0 c9 ed 1d dc d1 e4 d7
%r15     00 00 00 00 00 6e 1e 70

%ymm0    19 bb 55 02 65 ba b1 80 d8 0d 9f 56 31 e7 59 71 8f a9 49 7b 6e a7 dc b4 94 08 dc 35 c9 46 8b 1a
%ymm1    74 41 6e e0 43 dd 35 72 44 6f 69 ed 24 2c f3 58 40 c9 0d 1e 6a 79 4d eb cb 1f 97 ec a6 f8 6f 8d
%ymm2    32 92 82 ed bb ae f2 ab 71 6b 2d ca b4 bb b6 97 48 e8 08 2e 1b ea 73 40 3b df c8 bc fa 43 47 fe
%ymm3    dd c1 84 4f a8 91 20 0e 7d a6 11 71 39 c2 7f a7 42 db e2 b4 fd 81 09 df 0f 0e 4b db 98 3a 20 50
%ymm4    2b 02 8b a7 e9 de de 33 42 89 85 c1 00 43 14 02 00 e4 52 ee e8 0e 38 93 e6 88 58 fd 81 50 f4 68
%ymm5    fb ef 4d b0 13 c4 bd 20 58 ab 37 fc f1 13 92 df 83 e8 e9 22 ab 7b a1 a9 80 05 bb 44 13 35 82 76
%ymm6    c4 d0 70 6f aa 0f 71 6c 03 82 cc 30 34 f8 0f 34 08 cb bc 07 7b e8 f1 be 49 90 2c ef f9 05 78 b1
%ymm7    8c 0f 0f a1 19 70 fe 51 2a 2c 30 de 5e b2 6a e6 44 99 08 65 f5 fa d1 65 e0 81 7a 36 7e d9 f0 4f
%ymm8    55 3b 7b 15 c4 3b 62 60 58 20 cd f5 24 e1 b9 7e 39 25 c4 e0 25 10 39 52 af 4f 87 f4 e3 a7 fc 86
%ymm9    0b fc f9 61 f9 ad 22 0f fd ba d2 8c 66 2e 3a ce a9 79 d7 b8 8a 34 13 4d 6d 52 6d 28 9c 7a ae 08
%ymm10   ba fc 1d ba 45 c2 fc 9e 16 29 fb 68 3c 5f 33 32 71 44 d2 fb d4 c3 fb e5 56 99 21 70 d9 b0 e1 98
%ymm11   a9 f8 57 51 fe 7a a1 4a 34 1b 92 95 bb 2d 27 6b 5d 89 a2 e3 2e ab 6e 7b 61 72 06 0d 8e 4e b3 4c
%ymm12   81 c0 8b 5b fe 8c c1 ee 89 3f d8 6b f7 80 b1 e4 d7 ac 47 c3 ae a2 8c af 76 8c 03 89 bc da 4b 36
%ymm13   b2 b5 c8 83 76 c8 ba 88 44 85 d6 b1 e1 72 39 a2 fb 81 6b e0 83 56 9f 66 25 2a 70 f0 fe b7 9d 64
%ymm14   b2 f2 ee 2a 01 9a b1 ae 4b 81 a0 27 e9 2a 2a fe 63 78 34 b1 09 7a 84 d7 22 8b 4f 79 de ab cb f3
%ymm15   ce d6 d4 13 3b f7 a5 c0 b4 ac a5 05 89 d1 e7 c0 51 1b b6 cb 7d fc f5 a9 8c 94 9d a0 18 9c 78 49

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   35 0c aa ed c7 c8 68 31 
00000006 fffffff0   v v v v v v v v   4f d7 c0 86 7f 12 b0 88 
00000006 ffffffe8   v v v v v v v v   9a 12 3a 9c af 3a 33 3f 
00000006 ffffffe0   v v v v v v v v   81 dc 24 32 63 4b 98 a5 

[ 00000000 0141b138 - 00000000 0141b0a0 ]
[ 2 valid rows shown ]

00000000 0141b0d8   . . v v v v v v   00 00 00 00 00 00 11 dc 
00000000 0141b0d0   v v . . . . . .   17 cc 00 00 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  88.0702s
Iterations/s:                  1135.46

Starting cost:                 18
Lowest cost:                   18
Lowest correct cost:           18

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.443%       7.956%        7.956%       
Opcode          8.31%        7.986%        7.784%       
Operand         8.375%       4.13%         1.362%       
Global Swap     8.324%       7.61%         7.039%       
Local Swap      8.365%       4.014%        2.846%       
ReplaceNop      8.296%       7.974%        7.666%       
Rotate          8.263%       7.653%        6.163%       
Delete          8.158%       7.841%        6.985%       
Instruction     8.366%       4.586%        0.273%       
Add Nops        8.327%       8.327%        7.052%       
OpcodeWidth     8.371%       7.822%        7.683%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.402%       1.39%         0.006%       
                                                        
Total           100%         77.289%       62.815%      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (17)                                               Lowest Known Correct Cost (17)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                     #  Line  RIP   Bytes  Opcode                   # Text                     #  Line  RIP   Bytes  Opcode                   
.wcslen:                   #        0     0      OPC=<label>              .wcslen:                   #        0     0      OPC=<label>              
  nop                      #  1     0     1      OPC=nop                    nop                      #  1     0     1      OPC=nop                  
  nop                      #  2     0x1   1      OPC=nop                    nop                      #  2     0x1   1      OPC=nop                  
  nop                      #  3     0x2   1      OPC=nop                    nop                      #  3     0x2   1      OPC=nop                  
  nop                      #  4     0x3   1      OPC=nop                    nop                      #  4     0x3   1      OPC=nop                  
  nop                      #  5     0x4   1      OPC=nop                    nop                      #  5     0x4   1      OPC=nop                  
  nop                      #  6     0x5   1      OPC=nop                    nop                      #  6     0x5   1      OPC=nop                  
  nop                      #  7     0x6   1      OPC=nop                    nop                      #  7     0x6   1      OPC=nop                  
  nop                      #  8     0x7   1      OPC=nop                    nop                      #  8     0x7   1      OPC=nop                  
  nop                      #  9     0x8   1      OPC=nop                    nop                      #  9     0x8   1      OPC=nop                  
  xorl %eax, %eax          #  10    0x9   2      OPC=xorl_r32_r32           xorl %eax, %eax          #  10    0x9   2      OPC=xorl_r32_r32         
  nop                      #  11    0xb   1      OPC=nop                    nop                      #  11    0xb   1      OPC=nop                  
  nop                      #  12    0xc   1      OPC=nop                    nop                      #  12    0xc   1      OPC=nop                  
  nop                      #  13    0xd   1      OPC=nop                    nop                      #  13    0xd   1      OPC=nop                  
  nop                      #  14    0xe   1      OPC=nop                    nop                      #  14    0xe   1      OPC=nop                  
  nop                      #  15    0xf   1      OPC=nop                    nop                      #  15    0xf   1      OPC=nop                  
  nop                      #  16    0x10  1      OPC=nop                    nop                      #  16    0x10  1      OPC=nop                  
  nop                      #  17    0x11  1      OPC=nop                    nop                      #  17    0x11  1      OPC=nop                  
  nop                      #  18    0x12  1      OPC=nop                    nop                      #  18    0x12  1      OPC=nop                  
  movl %edi, %edx          #  19    0x13  2      OPC=movl_r32_r32_1         movl %edi, %edx          #  19    0x13  2      OPC=movl_r32_r32_1       
  movw (%r15,%rdx,1), %cx  #  20    0x15  5      OPC=movw_r16_m16           movw (%r15,%rdx,1), %cx  #  20    0x15  5      OPC=movw_r16_m16         
  nop                      #  21    0x1a  1      OPC=nop                    nop                      #  21    0x1a  1      OPC=nop                  
  shlw $0x1, %cx           #  22    0x1b  3      OPC=shlw_r16_one           shlw $0x1, %cx           #  22    0x1b  3      OPC=shlw_r16_one         
  je .L_142ce0             #  23    0x1e  2      OPC=je_label               je .L_142ce0             #  23    0x1e  2      OPC=je_label             
.L_142cc0:                 #        0x20  0      OPC=<label>              .L_142cc0:                 #        0x20  0      OPC=<label>              
  addl $0x4, %edx          #  24    0x20  6      OPC=addl_r32_imm32         addl $0x4, %edx          #  24    0x20  6      OPC=addl_r32_imm32       
  addb (%r15,%rdx,1), %al  #  25    0x26  4      OPC=addb_r8_m8             addb (%r15,%rdx,1), %al  #  25    0x26  4      OPC=addb_r8_m8           
  shlb $0x4, %al           #  26    0x2a  3      OPC=shlb_r8_imm8           shlb $0x4, %al           #  26    0x2a  3      OPC=shlb_r8_imm8         
  jne .L_142cc0            #  27    0x2d  2      OPC=jne_label              jne .L_142cc0            #  27    0x2d  2      OPC=jne_label            
  subq %rdx, %rdi          #  28    0x2f  3      OPC=subq_r64_r64_1         subq %rdx, %rdi          #  28    0x2f  3      OPC=subq_r64_r64_1       
  nop                      #  29    0x32  1      OPC=nop                    nop                      #  29    0x32  1      OPC=nop                  
  nop                      #  30    0x33  1      OPC=nop                    nop                      #  30    0x33  1      OPC=nop                  
  nop                      #  31    0x34  1      OPC=nop                    nop                      #  31    0x34  1      OPC=nop                  
  nop                      #  32    0x35  1      OPC=nop                    nop                      #  32    0x35  1      OPC=nop                  
  nop                      #  33    0x36  1      OPC=nop                    nop                      #  33    0x36  1      OPC=nop                  
  nop                      #  34    0x37  1      OPC=nop                    nop                      #  34    0x37  1      OPC=nop                  
  nop                      #  35    0x38  1      OPC=nop                    nop                      #  35    0x38  1      OPC=nop                  
  nop                      #  36    0x39  1      OPC=nop                    nop                      #  36    0x39  1      OPC=nop                  
  subb %dil, %al           #  37    0x3a  3      OPC=subb_r8_r8_1           subb %dil, %al           #  37    0x3a  3      OPC=subb_r8_r8_1         
  sarl $0x2, %eax          #  38    0x3d  3      OPC=sarl_r32_imm8          sarl $0x2, %eax          #  38    0x3d  3      OPC=sarl_r32_imm8        
.L_142ce0:                 #        0x40  0      OPC=<label>              .L_142ce0:                 #        0x40  0      OPC=<label>              
  nop                      #  39    0x40  1      OPC=nop                    nop                      #  39    0x40  1      OPC=nop                  
  nop                      #  40    0x41  1      OPC=nop                    nop                      #  40    0x41  1      OPC=nop                  
  nop                      #  41    0x42  1      OPC=nop                    nop                      #  41    0x42  1      OPC=nop                  
  nop                      #  42    0x43  1      OPC=nop                    nop                      #  42    0x43  1      OPC=nop                  
  nop                      #  43    0x44  1      OPC=nop                    nop                      #  43    0x44  1      OPC=nop                  
  nop                      #  44    0x45  1      OPC=nop                    nop                      #  44    0x45  1      OPC=nop                  
  nop                      #  45    0x46  1      OPC=nop                    nop                      #  45    0x46  1      OPC=nop                  
  nop                      #  46    0x47  1      OPC=nop                    nop                      #  46    0x47  1      OPC=nop                  
  nop                      #  47    0x48  1      OPC=nop                    nop                      #  47    0x48  1      OPC=nop                  
  nop                      #  48    0x49  1      OPC=nop                    nop                      #  48    0x49  1      OPC=nop                  
  nop                      #  49    0x4a  1      OPC=nop                    nop                      #  49    0x4a  1      OPC=nop                  
  popq %r11                #  50    0x4b  2      OPC=popq_r64_1             popq %r11                #  50    0x4b  2      OPC=popq_r64_1           
  andl $0xe0, %r11d        #  51    0x4d  4      OPC=andl_r32_imm8          andl $0xe0, %r11d        #  51    0x4d  4      OPC=andl_r32_imm8        
  addq %r15, %r11          #  52    0x51  3      OPC=addq_r64_r64           addq %r15, %r11          #  52    0x51  3      OPC=addq_r64_r64         
  jmpq %r11                #  53    0x54  3      OPC=jmpq_r64               jmpq %r11                #  53    0x54  3      OPC=jmpq_r64             
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  197.541s
Iterations/s:                  1012.45

Starting cost:                 18
Lowest cost:                   17
Lowest correct cost:           17

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.388%       8.0035%       8.0035%      
Opcode          8.3635%      8.102%        7.9395%      
Operand         8.3015%      4.183%        1.44%        
Global Swap     8.3265%      7.715%        7.2445%      
Local Swap      8.3685%      4.0055%       2.805%       
ReplaceNop      8.3145%      8.0445%       7.7865%      
Rotate          8.335%       7.8565%       6.589%       
Delete          8.252%       7.9925%       7.268%       
Instruction     8.305%       4.584%        0.3105%      
Add Nops        8.2645%      8.2645%       7.203%       
OpcodeWidth     8.392%       7.9455%       7.828%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.389%       1.385%        0.007%       
                                                        
Total           100%         78.0815%      64.4245%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  310.993s
Iterations/s:                  964.651

Starting cost:                 18
Lowest cost:                   17
Lowest correct cost:           17

Move Type       Proposed     Succeeded     Accepted        
                                                           
Global Copy     8.36833%     8.02733%      8.02733%        
Opcode          8.366%       8.136%        7.99067%        
Operand         8.29%        4.284%        1.54933%        
Global Swap     8.31967%     7.778%        7.35333%        
Local Swap      8.34567%     4.12933%      2.95433%        
ReplaceNop      8.30233%     8.05833%      7.82333%        
Rotate          8.32567%     7.891%        6.68833%        
Delete          8.28433%     8.05067%      7.34833%        
Instruction     8.327%       4.75867%      0.333667%       
Add Nops        8.28467%     8.28467%      7.26233%        
OpcodeWidth     8.40133%     7.98967%      7.87967%        
2xWeighted      0%           0%            0%              
Memory+Swap     8.385%       1.39333%      0.00466667%     
                                                           
Total           100%         78.781%       65.2153%        

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  440.03s
Iterations/s:                  909.03

Starting cost:                 18
Lowest cost:                   17
Lowest correct cost:           17

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.33725%     8.0265%       8.0265%      
Opcode          8.34075%     8.13025%      7.98825%     
Operand         8.28225%     4.36975%      1.65825%     
Global Swap     8.33175%     7.84825%      7.4425%      
Local Swap      8.367%       4.24475%      3.156%       
ReplaceNop      8.315%       8.089%        7.87325%     
Rotate          8.39475%     7.98675%      6.795%       
Delete          8.2945%      8.08375%      7.362%       
Instruction     8.31075%     4.756%        0.35325%     
Add Nops        8.288%       8.288%        7.2635%      
OpcodeWidth     8.38175%     7.99725%      7.89425%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.35625%     1.43925%      0.00375%     
                                                        
Total           100%         79.2595%      65.8165%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  622.842s
Iterations/s:                  802.772

Starting cost:                 18
Lowest cost:                   17
Lowest correct cost:           17

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.3796%      8.1014%       8.1014%      
Opcode          8.3626%      8.1734%       8.043%       
Operand         8.2942%      4.4802%       1.8048%      
Global Swap     8.3444%      7.9166%       7.546%       
Local Swap      8.3698%      4.336%        3.294%       
ReplaceNop      8.3142%      8.1096%       7.9174%      
Rotate          8.3466%      7.9832%       6.8606%      
Delete          8.29%        8.1018%       7.392%       
Instruction     8.325%       4.8082%       0.3642%      
Add Nops        8.3034%      8.3034%       7.306%       
OpcodeWidth     8.35%        7.9994%       7.9034%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3202%      1.446%        0.003%       
                                                        
Total           100%         79.7592%      66.5358%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     4c 6c 04 89 3d ca f6 1c
%rcx     05 c6 d6 e6 32 9f 68 4f
%rdx     e0 b0 4d 74 91 1f aa ab
%rbx     05 e6 f5 5c 6b ec 1c 6b
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 42 8b 94 c0
%rdi     00 00 00 00 42 8b 95 1b
%r8      bd 4a d1 93 21 98 65 46
%r9      4e 58 2a d0 bb c4 86 df
%r10     57 4f 29 32 72 a7 c1 2e
%r11     a4 6d f0 f1 e4 8b b8 4c
%r12     f6 34 e1 bc 9b 1f 81 68
%r13     75 81 1c 55 02 50 ac a5
%r14     36 c3 d3 6e ef 6e ff 35
%r15     00 00 00 00 05 e6 c8 30

%ymm0    c3 db 18 22 24 45 f6 aa c1 32 3b c5 1f 73 b5 be 47 04 d4 12 a1 5c 61 90 34 d6 e2 f2 b9 28 81 94
%ymm1    70 85 fc 28 45 bb 84 d9 53 90 cb c3 58 fb 0e 1a bd d6 15 a7 c7 a0 50 8f 52 cd 02 3b 15 7f 69 dd
%ymm2    98 21 3b 51 3f 7e ca 75 6b ef e9 1c f5 91 31 77 51 f7 f5 da d1 53 69 b6 b6 16 a2 9d 1a 16 3e 4a
%ymm3    ab 84 7d b8 87 ee e7 22 1b bb 61 c5 be 54 ec 3b 97 20 63 aa 04 52 3e 98 16 02 fc 3c 14 21 06 66
%ymm4    4e d0 44 01 b0 42 41 7b 07 03 31 82 2e 8b 36 e0 32 10 e0 93 16 2d 06 fb 6e 4a 33 4d 21 21 aa 66
%ymm5    ab cb 91 ef f1 c9 51 e1 1e cb ad 11 87 9a 0c 3d 23 b9 82 fb 3c f7 94 f1 70 aa c1 b4 a9 50 90 ef
%ymm6    13 9b 26 17 b2 a1 74 ce 3d cb d0 f1 70 ab c9 5d ea 66 1d 65 26 de 1c 99 d6 5e c1 9c 85 3e 05 5d
%ymm7    e8 6f ff 4e b8 f5 0e 43 88 af 96 d6 04 5e 4e 1e ea 64 f3 fb e7 77 95 05 00 5c 13 61 36 2f 11 b3
%ymm8    94 7d 61 4b e4 fb e7 c0 20 9f 37 23 8c 4a a8 5d 5b 2b c9 df fe a0 3a d6 c3 c3 f4 60 8e c0 a1 ae
%ymm9    85 43 c7 b3 81 ae b9 a7 7f 4d f1 ef e7 38 db f3 78 ff c2 bb 45 ad 9e 26 aa ea 3a 9a 8f 99 85 6c
%ymm10   7e f6 bb f7 98 99 fc f8 7b e9 f6 96 cc f2 78 37 05 f1 c5 31 16 db 96 2c 1d fd 44 27 c9 69 5e f4
%ymm11   07 7a 99 fb b2 59 c6 24 e5 92 23 91 be 45 49 45 ef d9 c1 07 55 a8 5b 11 37 b5 6e a7 a2 60 69 bf
%ymm12   28 01 35 8d 9d 78 d9 53 a5 f0 3d ef 36 42 71 3e bc 34 1b 07 94 30 ff 0a e4 c5 6b e2 cc f1 b4 eb
%ymm13   51 7c a7 04 24 df 41 bd bb 7a e2 d1 54 9f 36 07 47 91 e1 1a e2 05 21 6f 53 90 be 80 34 cc d3 f2
%ymm14   ff f7 a9 f5 4b 3c d0 a1 85 dd 83 7c e5 09 bd 63 a9 e6 9f b3 7b 39 1f c8 f6 82 13 96 d4 39 84 79
%ymm15   b0 56 88 fd 8e 02 85 f1 c2 ad 53 ad e8 c5 6b 46 9e 32 61 75 45 a8 3d 7b dd 32 99 00 40 4c 7f ef

%cf      1 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   1d 3c 5a dd 38 93 28 d1 
00000006 fffffff0   v v v v v v v v   f7 e6 68 50 2d 90 d4 ec 
00000006 ffffffe8   v v v v v v v v   51 7e e9 37 47 84 d5 a5 
00000006 ffffffe0   v v v v v v v v   3d 9d 63 a1 2b 0c 55 3f 

[ 00000000 48725d68 - 00000000 48725ce0 ]
[ 3 valid rows shown ]

00000000 48725d58   . . . . . v v v   00 00 00 00 00 00 00 00 
00000000 48725d50   v v v v v v v v   00 7f 02 37 d3 03 6a 86 
00000000 48725d48   v v v v v . . .   e0 b4 61 c5 db 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (18)                                                Lowest Known Correct Cost (19)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  movl %edi, %edx           #  2     0x2   2      OPC=movl_r32_r32           xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  orl %edi, %edi            #  3     0x4   2      OPC=orl_r32_r32            movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movb (%r15,%rdi,1), %cl   #  4     0x6   4      OPC=movb_r8_m8             movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0xa   1      OPC=nop                    movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  nop                       #  6     0xb   1      OPC=nop                    testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  nop                       #  7     0xc   1      OPC=nop                    je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xd   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0xe   1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0xf   1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x10  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x11  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x12  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x13  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x14  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x15  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x16  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x17  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x18  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x19  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1a  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1b  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  shrb $0x1, %cl            #  23    0x1c  2      OPC=shrb_r8_one          .L_142cc0:                  #        0x20  0      OPC=<label>             
  je .L_142ce0              #  24    0x1e  2      OPC=je_label               addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
.L_142cc0:                  #        0x20  0      OPC=<label>                movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  addw $0x4, %dx            #  25    0x20  4      OPC=addw_r16_imm8          movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl (%r15,%rdx,1), %eax  #  26    0x24  4      OPC=movl_r32_m32           testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  testl %eax, %r15d         #  27    0x28  3      OPC=testl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  jne .L_142cc0             #  28    0x2b  2      OPC=jne_label              movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  addq %rdx, %rax           #  29    0x2d  3      OPC=addq_r64_r64_1         subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x30  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x31  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  subl %edi, %eax           #  32    0x32  2      OPC=subl_r32_r32           nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  sarb $0x2, %al            #  42    0x3d  3      OPC=sarb_r8_imm8           nop                       #  42    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  43    0x40  2      OPC=popq_r64_1             popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64           addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64               jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                     
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                    
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (17)                                               Lowest Known Correct Cost (17)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                     #  Line  RIP   Bytes  Opcode                   # Text                     #  Line  RIP   Bytes  Opcode                   
.wcslen:                   #        0     0      OPC=<label>              .wcslen:                   #        0     0      OPC=<label>              
  nop                      #  1     0     1      OPC=nop                    nop                      #  1     0     1      OPC=nop                  
  nop                      #  2     0x1   1      OPC=nop                    nop                      #  2     0x1   1      OPC=nop                  
  nop                      #  3     0x2   1      OPC=nop                    nop                      #  3     0x2   1      OPC=nop                  
  nop                      #  4     0x3   1      OPC=nop                    nop                      #  4     0x3   1      OPC=nop                  
  nop                      #  5     0x4   1      OPC=nop                    nop                      #  5     0x4   1      OPC=nop                  
  nop                      #  6     0x5   1      OPC=nop                    nop                      #  6     0x5   1      OPC=nop                  
  nop                      #  7     0x6   1      OPC=nop                    nop                      #  7     0x6   1      OPC=nop                  
  nop                      #  8     0x7   1      OPC=nop                    nop                      #  8     0x7   1      OPC=nop                  
  nop                      #  9     0x8   1      OPC=nop                    nop                      #  9     0x8   1      OPC=nop                  
  nop                      #  10    0x9   1      OPC=nop                    nop                      #  10    0x9   1      OPC=nop                  
  xorl %eax, %eax          #  11    0xa   2      OPC=xorl_r32_r32           xorl %eax, %eax          #  11    0xa   2      OPC=xorl_r32_r32         
  movl %edi, %edx          #  12    0xc   2      OPC=movl_r32_r32_1         movl %edi, %edx          #  12    0xc   2      OPC=movl_r32_r32_1       
  movw (%r15,%rdx,1), %cx  #  13    0xe   5      OPC=movw_r16_m16           movw (%r15,%rdx,1), %cx  #  13    0xe   5      OPC=movw_r16_m16         
  sarw $0x1, %cx           #  14    0x13  3      OPC=sarw_r16_one           sarw $0x1, %cx           #  14    0x13  3      OPC=sarw_r16_one         
  je .L_142ce0             #  15    0x16  2      OPC=je_label               je .L_142ce0             #  15    0x16  2      OPC=je_label             
  nop                      #  16    0x18  1      OPC=nop                    nop                      #  16    0x18  1      OPC=nop                  
  nop                      #  17    0x19  1      OPC=nop                    nop                      #  17    0x19  1      OPC=nop                  
  nop                      #  18    0x1a  1      OPC=nop                    nop                      #  18    0x1a  1      OPC=nop                  
  nop                      #  19    0x1b  1      OPC=nop                    nop                      #  19    0x1b  1      OPC=nop                  
  nop                      #  20    0x1c  1      OPC=nop                    nop                      #  20    0x1c  1      OPC=nop                  
  nop                      #  21    0x1d  1      OPC=nop                    nop                      #  21    0x1d  1      OPC=nop                  
  nop                      #  22    0x1e  1      OPC=nop                    nop                      #  22    0x1e  1      OPC=nop                  
  nop                      #  23    0x1f  1      OPC=nop                    nop                      #  23    0x1f  1      OPC=nop                  
.L_142cc0:                 #        0x20  0      OPC=<label>              .L_142cc0:                 #        0x20  0      OPC=<label>              
  addl $0x4, %edx          #  24    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx          #  24    0x20  3      OPC=addl_r32_imm8        
  movw (%r15,%rdx,1), %ax  #  25    0x23  5      OPC=movw_r16_m16           movw (%r15,%rdx,1), %ax  #  25    0x23  5      OPC=movw_r16_m16         
  salb $0x1, %al           #  26    0x28  3      OPC=salb_r8_imm8           salb $0x1, %al           #  26    0x28  3      OPC=salb_r8_imm8         
  jne .L_142cc0            #  27    0x2b  2      OPC=jne_label              jne .L_142cc0            #  27    0x2b  2      OPC=jne_label            
  nop                      #  28    0x2d  1      OPC=nop                    nop                      #  28    0x2d  1      OPC=nop                  
  nop                      #  29    0x2e  1      OPC=nop                    nop                      #  29    0x2e  1      OPC=nop                  
  nop                      #  30    0x2f  1      OPC=nop                    nop                      #  30    0x2f  1      OPC=nop                  
  addq %rdx, %rax          #  31    0x30  3      OPC=addq_r64_r64           addq %rdx, %rax          #  31    0x30  3      OPC=addq_r64_r64         
  nop                      #  32    0x33  1      OPC=nop                    nop                      #  32    0x33  1      OPC=nop                  
  nop                      #  33    0x34  1      OPC=nop                    nop                      #  33    0x34  1      OPC=nop                  
  nop                      #  34    0x35  1      OPC=nop                    nop                      #  34    0x35  1      OPC=nop                  
  nop                      #  35    0x36  1      OPC=nop                    nop                      #  35    0x36  1      OPC=nop                  
  subl %edi, %eax          #  36    0x37  2      OPC=subl_r32_r32           subl %edi, %eax          #  36    0x37  2      OPC=subl_r32_r32         
  shrq $0x2, %rax          #  37    0x39  4      OPC=shrq_r64_imm8          shrq $0x2, %rax          #  37    0x39  4      OPC=shrq_r64_imm8        
  nop                      #  38    0x3d  1      OPC=nop                    nop                      #  38    0x3d  1      OPC=nop                  
  nop                      #  39    0x3e  1      OPC=nop                    nop                      #  39    0x3e  1      OPC=nop                  
  nop                      #  40    0x3f  1      OPC=nop                    nop                      #  40    0x3f  1      OPC=nop                  
.L_142ce0:                 #        0x40  0      OPC=<label>              .L_142ce0:                 #        0x40  0      OPC=<label>              
  popq %r11                #  41    0x40  2      OPC=popq_r64_1             popq %r11                #  41    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d        #  42    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d        #  42    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11          #  43    0x46  3      OPC=addq_r64_r64           addq %r15, %r11          #  43    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                #  44    0x49  3      OPC=jmpq_r64               jmpq %r11                #  44    0x49  3      OPC=jmpq_r64             
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (16)                                               Lowest Known Correct Cost (16)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                     #  Line  RIP   Bytes  Opcode                   # Text                     #  Line  RIP   Bytes  Opcode                   
.wcslen:                   #        0     0      OPC=<label>              .wcslen:                   #        0     0      OPC=<label>              
  nop                      #  1     0     1      OPC=nop                    nop                      #  1     0     1      OPC=nop                  
  nop                      #  2     0x1   1      OPC=nop                    nop                      #  2     0x1   1      OPC=nop                  
  nop                      #  3     0x2   1      OPC=nop                    nop                      #  3     0x2   1      OPC=nop                  
  nop                      #  4     0x3   1      OPC=nop                    nop                      #  4     0x3   1      OPC=nop                  
  nop                      #  5     0x4   1      OPC=nop                    nop                      #  5     0x4   1      OPC=nop                  
  nop                      #  6     0x5   1      OPC=nop                    nop                      #  6     0x5   1      OPC=nop                  
  nop                      #  7     0x6   1      OPC=nop                    nop                      #  7     0x6   1      OPC=nop                  
  nop                      #  8     0x7   1      OPC=nop                    nop                      #  8     0x7   1      OPC=nop                  
  nop                      #  9     0x8   1      OPC=nop                    nop                      #  9     0x8   1      OPC=nop                  
  nop                      #  10    0x9   1      OPC=nop                    nop                      #  10    0x9   1      OPC=nop                  
  nop                      #  11    0xa   1      OPC=nop                    nop                      #  11    0xa   1      OPC=nop                  
  nop                      #  12    0xb   1      OPC=nop                    nop                      #  12    0xb   1      OPC=nop                  
  nop                      #  13    0xc   1      OPC=nop                    nop                      #  13    0xc   1      OPC=nop                  
  xorl %eax, %eax          #  14    0xd   2      OPC=xorl_r32_r32           xorl %eax, %eax          #  14    0xd   2      OPC=xorl_r32_r32         
  movl %edi, %edx          #  15    0xf   2      OPC=movl_r32_r32_1         movl %edi, %edx          #  15    0xf   2      OPC=movl_r32_r32_1       
  movw (%r15,%rdx,1), %cx  #  16    0x11  5      OPC=movw_r16_m16           movw (%r15,%rdx,1), %cx  #  16    0x11  5      OPC=movw_r16_m16         
  shrw $0x1, %cx           #  17    0x16  3      OPC=shrw_r16_one           shrw $0x1, %cx           #  17    0x16  3      OPC=shrw_r16_one         
  je .L_142ce0             #  18    0x19  2      OPC=je_label               je .L_142ce0             #  18    0x19  2      OPC=je_label             
  nop                      #  19    0x1b  1      OPC=nop                    nop                      #  19    0x1b  1      OPC=nop                  
  nop                      #  20    0x1c  1      OPC=nop                    nop                      #  20    0x1c  1      OPC=nop                  
  nop                      #  21    0x1d  1      OPC=nop                    nop                      #  21    0x1d  1      OPC=nop                  
  nop                      #  22    0x1e  1      OPC=nop                    nop                      #  22    0x1e  1      OPC=nop                  
  nop                      #  23    0x1f  1      OPC=nop                    nop                      #  23    0x1f  1      OPC=nop                  
.L_142cc0:                 #        0x20  0      OPC=<label>              .L_142cc0:                 #        0x20  0      OPC=<label>              
  addl $0x4, %edx          #  24    0x20  6      OPC=addl_r32_imm32         addl $0x4, %edx          #  24    0x20  6      OPC=addl_r32_imm32       
  movw (%r15,%rdx,1), %ax  #  25    0x26  5      OPC=movw_r16_m16           movw (%r15,%rdx,1), %ax  #  25    0x26  5      OPC=movw_r16_m16         
  salb $0x1, %al           #  26    0x2b  3      OPC=salb_r8_imm8           salb $0x1, %al           #  26    0x2b  3      OPC=salb_r8_imm8         
  jne .L_142cc0            #  27    0x2e  2      OPC=jne_label              jne .L_142cc0            #  27    0x2e  2      OPC=jne_label            
  nop                      #  28    0x30  1      OPC=nop                    nop                      #  28    0x30  1      OPC=nop                  
  nop                      #  29    0x31  1      OPC=nop                    nop                      #  29    0x31  1      OPC=nop                  
  addq %rdx, %rax          #  30    0x32  3      OPC=addq_r64_r64           addq %rdx, %rax          #  30    0x32  3      OPC=addq_r64_r64         
  subl %edi, %eax          #  31    0x35  2      OPC=subl_r32_r32           subl %edi, %eax          #  31    0x35  2      OPC=subl_r32_r32         
  shrq $0x2, %rax          #  32    0x37  4      OPC=shrq_r64_imm8          shrq $0x2, %rax          #  32    0x37  4      OPC=shrq_r64_imm8        
  nop                      #  33    0x3b  1      OPC=nop                    nop                      #  33    0x3b  1      OPC=nop                  
  nop                      #  34    0x3c  1      OPC=nop                    nop                      #  34    0x3c  1      OPC=nop                  
  nop                      #  35    0x3d  1      OPC=nop                    nop                      #  35    0x3d  1      OPC=nop                  
  nop                      #  36    0x3e  1      OPC=nop                    nop                      #  36    0x3e  1      OPC=nop                  
  nop                      #  37    0x3f  1      OPC=nop                    nop                      #  37    0x3f  1      OPC=nop                  
.L_142ce0:                 #        0x40  0      OPC=<label>              .L_142ce0:                 #        0x40  0      OPC=<label>              
  popq %r11                #  38    0x40  2      OPC=popq_r64_1             popq %r11                #  38    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d        #  39    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d        #  39    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11          #  40    0x46  3      OPC=addq_r64_r64           addq %r15, %r11          #  40    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                #  41    0x49  3      OPC=jmpq_r64               jmpq %r11                #  41    0x49  3      OPC=jmpq_r64             
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (15)                                               Lowest Known Correct Cost (15)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                     #  Line  RIP   Bytes  Opcode                   # Text                     #  Line  RIP   Bytes  Opcode                   
.wcslen:                   #        0     0      OPC=<label>              .wcslen:                   #        0     0      OPC=<label>              
  nop                      #  1     0     1      OPC=nop                    nop                      #  1     0     1      OPC=nop                  
  nop                      #  2     0x1   1      OPC=nop                    nop                      #  2     0x1   1      OPC=nop                  
  nop                      #  3     0x2   1      OPC=nop                    nop                      #  3     0x2   1      OPC=nop                  
  nop                      #  4     0x3   1      OPC=nop                    nop                      #  4     0x3   1      OPC=nop                  
  nop                      #  5     0x4   1      OPC=nop                    nop                      #  5     0x4   1      OPC=nop                  
  nop                      #  6     0x5   1      OPC=nop                    nop                      #  6     0x5   1      OPC=nop                  
  nop                      #  7     0x6   1      OPC=nop                    nop                      #  7     0x6   1      OPC=nop                  
  nop                      #  8     0x7   1      OPC=nop                    nop                      #  8     0x7   1      OPC=nop                  
  nop                      #  9     0x8   1      OPC=nop                    nop                      #  9     0x8   1      OPC=nop                  
  nop                      #  10    0x9   1      OPC=nop                    nop                      #  10    0x9   1      OPC=nop                  
  nop                      #  11    0xa   1      OPC=nop                    nop                      #  11    0xa   1      OPC=nop                  
  nop                      #  12    0xb   1      OPC=nop                    nop                      #  12    0xb   1      OPC=nop                  
  nop                      #  13    0xc   1      OPC=nop                    nop                      #  13    0xc   1      OPC=nop                  
  xorl %eax, %eax          #  14    0xd   2      OPC=xorl_r32_r32           xorl %eax, %eax          #  14    0xd   2      OPC=xorl_r32_r32         
  movl %edi, %edx          #  15    0xf   2      OPC=movl_r32_r32_1         movl %edi, %edx          #  15    0xf   2      OPC=movl_r32_r32_1       
  movw (%r15,%rdx,1), %cx  #  16    0x11  5      OPC=movw_r16_m16           movw (%r15,%rdx,1), %cx  #  16    0x11  5      OPC=movw_r16_m16         
  shrw $0x1, %cx           #  17    0x16  3      OPC=shrw_r16_one           shrw $0x1, %cx           #  17    0x16  3      OPC=shrw_r16_one         
  je .L_142ce0             #  18    0x19  2      OPC=je_label               je .L_142ce0             #  18    0x19  2      OPC=je_label             
  nop                      #  19    0x1b  1      OPC=nop                    nop                      #  19    0x1b  1      OPC=nop                  
  nop                      #  20    0x1c  1      OPC=nop                    nop                      #  20    0x1c  1      OPC=nop                  
  nop                      #  21    0x1d  1      OPC=nop                    nop                      #  21    0x1d  1      OPC=nop                  
  nop                      #  22    0x1e  1      OPC=nop                    nop                      #  22    0x1e  1      OPC=nop                  
  nop                      #  23    0x1f  1      OPC=nop                    nop                      #  23    0x1f  1      OPC=nop                  
.L_142cc0:                 #        0x20  0      OPC=<label>              .L_142cc0:                 #        0x20  0      OPC=<label>              
  addl $0x4, %edx          #  24    0x20  6      OPC=addl_r32_imm32         addl $0x4, %edx          #  24    0x20  6      OPC=addl_r32_imm32       
  movw (%r15,%rdx,1), %ax  #  25    0x26  5      OPC=movw_r16_m16           movw (%r15,%rdx,1), %ax  #  25    0x26  5      OPC=movw_r16_m16         
  salb $0x2, %al           #  26    0x2b  3      OPC=salb_r8_imm8           salb $0x2, %al           #  26    0x2b  3      OPC=salb_r8_imm8         
  jne .L_142cc0            #  27    0x2e  2      OPC=jne_label              jne .L_142cc0            #  27    0x2e  2      OPC=jne_label            
  xorq %rdx, %rax          #  28    0x30  3      OPC=xorq_r64_r64           xorq %rdx, %rax          #  28    0x30  3      OPC=xorq_r64_r64         
  subl %edi, %eax          #  29    0x33  2      OPC=subl_r32_r32           subl %edi, %eax          #  29    0x33  2      OPC=subl_r32_r32         
  shrq $0x2, %rax          #  30    0x35  4      OPC=shrq_r64_imm8          shrq $0x2, %rax          #  30    0x35  4      OPC=shrq_r64_imm8        
  nop                      #  31    0x39  1      OPC=nop                    nop                      #  31    0x39  1      OPC=nop                  
  nop                      #  32    0x3a  1      OPC=nop                    nop                      #  32    0x3a  1      OPC=nop                  
  nop                      #  33    0x3b  1      OPC=nop                    nop                      #  33    0x3b  1      OPC=nop                  
  nop                      #  34    0x3c  1      OPC=nop                    nop                      #  34    0x3c  1      OPC=nop                  
  nop                      #  35    0x3d  1      OPC=nop                    nop                      #  35    0x3d  1      OPC=nop                  
  nop                      #  36    0x3e  1      OPC=nop                    nop                      #  36    0x3e  1      OPC=nop                  
  nop                      #  37    0x3f  1      OPC=nop                    nop                      #  37    0x3f  1      OPC=nop                  
.L_142ce0:                 #        0x40  0      OPC=<label>              .L_142ce0:                 #        0x40  0      OPC=<label>              
  popq %r11                #  38    0x40  2      OPC=popq_r64_1             popq %r11                #  38    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d        #  39    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d        #  39    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11          #  40    0x46  3      OPC=addq_r64_r64           addq %r15, %r11          #  40    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                #  41    0x49  3      OPC=jmpq_r64               jmpq %r11                #  41    0x49  3      OPC=jmpq_r64             
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  74.5276s
Iterations/s:                  1341.78

Starting cost:                 19
Lowest cost:                   15
Lowest correct cost:           15

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.395%       7.683%        7.683%       
Opcode          8.311%       7.802%        7.515%       
Operand         8.296%       4.13%         1.492%       
Global Swap     8.328%       7.303%        6.474%       
Local Swap      8.314%       3.795%        2.699%       
ReplaceNop      8.38%        7.887%        7.42%        
Rotate          8.285%       7.402%        5.525%       
Delete          8.351%       7.89%         6.633%       
Instruction     8.281%       4.437%        0.325%       
Add Nops        8.435%       8.435%        6.627%       
OpcodeWidth     8.38%        7.636%        7.436%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.244%       1.373%        0.003%       
                                                        
Total           100%         75.773%       59.832%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  170.94s
Iterations/s:                  1170

Starting cost:                 19
Lowest cost:                   15
Lowest correct cost:           15

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.3445%      7.8085%       7.8085%      
Opcode          8.367%       7.981%        7.7655%      
Operand         8.285%       4.268%        1.542%       
Global Swap     8.3725%      7.5995%       6.964%       
Local Swap      8.246%       3.862%        2.815%       
ReplaceNop      8.3445%      7.964%        7.632%       
Rotate          8.3305%      7.6645%       6.115%       
Delete          8.3915%      8.0415%       7.0635%      
Instruction     8.3315%      4.4975%       0.3355%      
Add Nops        8.3605%      8.3605%       6.97%        
OpcodeWidth     8.363%       7.7785%       7.6355%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.2635%      1.348%        0.0015%      
                                                        
Total           100%         77.1735%      62.648%      

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  276.292s
Iterations/s:                  1085.81

Starting cost:                 19
Lowest cost:                   15
Lowest correct cost:           15

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.37%        7.91967%      7.91967%     
Opcode          8.35767%     8.034%        7.85533%     
Operand         8.291%       4.246%        1.527%       
Global Swap     8.35367%     7.69333%      7.13233%     
Local Swap      8.22667%     3.798%        2.80733%     
ReplaceNop      8.39333%     8.06867%      7.77%        
Rotate          8.30233%     7.73433%      6.32767%     
Delete          8.37633%     8.06533%      7.205%       
Instruction     8.30567%     4.42767%      0.315%       
Add Nops        8.36333%     8.36333%      7.138%       
OpcodeWidth     8.37833%     7.883%        7.76033%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.28167%     1.36067%      0.001%       
                                                        
Total           100%         77.594%       63.7587%     

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  421.214s
Iterations/s:                  949.637

Starting cost:                 19
Lowest cost:                   15
Lowest correct cost:           15

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.3215%      7.93425%      7.93425%     
Opcode          8.33975%     8.0615%       7.9035%      
Operand         8.316%       4.2865%       1.623%       
Global Swap     8.33%        7.75725%      7.26125%     
Local Swap      8.2705%      3.97425%      2.977%       
ReplaceNop      8.36525%     8.08125%      7.82625%     
Rotate          8.34075%     7.8485%       6.548%       
Delete          8.399%       8.1265%       7.349%       
Instruction     8.30625%     4.5495%       0.3345%      
Add Nops        8.382%       8.382%        7.255%       
OpcodeWidth     8.351%       7.9115%       7.802%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.278%       1.39575%      0.00075%     
                                                        
Total           100%         78.3088%      64.8145%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  612.474s
Iterations/s:                  816.362

Starting cost:                 19
Lowest cost:                   15
Lowest correct cost:           15

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.338%       7.9978%       7.9978%      
Opcode          8.3332%      8.088%        7.9468%      
Operand         8.314%       4.3656%       1.739%       
Global Swap     8.3214%      7.8158%       7.3766%      
Local Swap      8.2828%      4.0174%       3.0082%      
ReplaceNop      8.3672%      8.118%        7.8956%      
Rotate          8.2966%      7.863%        6.6604%      
Delete          8.3876%      8.1442%       7.3794%      
Instruction     8.3254%      4.6708%       0.385%       
Add Nops        8.3882%      8.3882%       7.323%       
OpcodeWidth     8.3334%      7.943%        7.842%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.3122%      1.455%        0.001%       
                                                        
Total           100%         78.8668%      65.5548%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     ff 28 d7 7d 47 54 49 09
%rcx     c3 0d df ee 0f a6 5e f1
%rdx     fc 8b 23 85 8e c8 52 1b
%rbx     6b 41 23 b9 1c 5d b1 65
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 00 70 7b dc
%rdi     00 00 00 00 00 70 7e 7a
%r8      67 48 d3 7b 8e cc 0a f3
%r9      d4 25 1d 76 7e 5e e8 6a
%r10     b1 18 00 17 ad f4 fd 13
%r11     7c dc 3c cd fc 02 7c dd
%r12     55 93 d9 8f f7 7b 48 e5
%r13     43 6a 99 be f0 5b 06 91
%r14     6f b7 94 bd 6c fb 84 d7
%r15     00 00 00 00 08 f7 56 80

%ymm0    21 22 34 82 c3 fa d9 58 ac a1 3f f5 4f 2f ff dd 17 f4 ff c7 f8 ac 5d 1e 8b 23 97 c6 f3 06 19 ed
%ymm1    8c 14 94 08 6e bc 59 bb e7 dd 1d f9 be b4 b0 79 c0 31 11 5a 2a 2e ce 37 5f cc 98 c2 34 92 19 0f
%ymm2    f9 a2 f2 00 fb 6e 33 55 d3 90 0c 82 7d af a7 9e ec 5c c2 53 77 49 83 b3 29 46 e8 87 76 fa 45 ea
%ymm3    5b 97 29 f0 4c 52 6c c3 48 80 bd fd 5e 18 8c 95 9d b9 31 af f3 06 39 c9 ce f5 58 06 9e 21 71 0e
%ymm4    72 9d f6 c8 4f 7b 53 e8 36 90 ce 01 f5 4b 24 b2 80 de af 40 a6 e5 3e 75 ae bc cb f8 a8 f3 15 4c
%ymm5    0b 9a bc 68 42 27 92 8e b0 c9 57 ee c8 ad f2 7f ab fa 9a f2 ce 3a 62 8b 5b 0a d9 cf a8 37 bb ab
%ymm6    f5 33 da 63 13 b2 a2 f7 ad 43 38 8c da 5f 3b d5 10 25 88 48 a9 15 f6 90 25 06 db 1a 8b 75 09 18
%ymm7    4b bb 0c 63 31 4c 84 b1 b3 14 32 2c 2b 9c d3 d2 84 7a 48 73 f9 69 a6 cd 27 38 fb f9 3a 49 c3 7b
%ymm8    62 86 3a 56 0f 80 3a 8b a4 3d e2 e4 0a a3 cb b6 e0 f2 a8 e5 f8 1f e3 20 dd 9b 87 03 d5 20 0a 6b
%ymm9    49 c6 83 d4 cb 97 89 a6 c4 3a c6 34 9d b3 15 f5 21 74 8e 5e fb e8 6f 14 22 7b 42 da 43 43 68 7b
%ymm10   b7 5b b8 20 b0 a8 db 4a 14 82 0a 21 32 2b 35 57 d5 c7 86 22 3a 7f 83 32 e5 8d bc d4 f8 3a d8 b7
%ymm11   d3 f4 91 22 91 84 5e 0a bd a9 57 18 b8 e4 17 9b e2 45 da bf 9b e6 27 a0 dd e1 60 5f 61 19 22 1c
%ymm12   83 0a df f4 4d 09 f5 6c 77 a6 87 c5 1e d9 36 af 8d 2b 86 19 c6 0e 17 3e c4 81 fe fb 55 f1 79 50
%ymm13   98 e8 a1 89 0c 6b 10 0d bc 6c 71 5e d1 5b de e2 8c 1c e9 21 86 ad fa 7e fe b1 a0 95 0e 53 d3 a3
%ymm14   de b9 9a 6c dc 70 94 22 4c 09 8c e9 23 78 a3 30 7e db 98 d0 1d 5a 3d 9e 3e cc e4 5e f4 65 a0 76
%ymm15   f7 fd 1d e4 ed a6 4e 89 69 31 bb 9c 68 2f 9f 47 94 b8 52 0c 90 b4 1a d2 84 d2 78 60 09 e7 0b 44

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   5a bb da c1 82 88 25 57 
00000006 fffffff0   v v v v v v v v   6d c5 7b 5f 66 0b cf fb 
00000006 ffffffe8   v v v v v v v v   be 45 ce 09 c5 b6 92 29 
00000006 ffffffe0   v v v v v v v v   4a ef 39 1b 47 0c 84 88 

[ 00000000 0967d7f8 - 00000000 0967cfe0 ]
[ 57 valid rows shown ]

00000000 0967d6b8   . . v v v v v v   00 00 00 00 00 00 56 33 
00000000 0967d6b0   v v v v v v v v   17 96 11 2a 29 b2 2a 76 
00000000 0967d6a8   v v v v v v v v   88 ce b8 c0 79 3b d9 00 
00000000 0967d6a0   v v v v v v v v   c1 3e fa 80 e4 43 f1 56 
00000000 0967d698   v v v v v v v v   7d 95 53 5b a1 c0 22 ec 
00000000 0967d690   v v v v v v v v   6d 5f 00 b2 2a 5b be c8 
00000000 0967d688   v v v v v v v v   55 7d e7 78 7a 9a 06 41 
00000000 0967d680   v v v v v v v v   5a b7 8e 8d c6 5c 03 22 
00000000 0967d678   v v v v v v v v   f4 93 39 b5 53 c3 ec ba 
00000000 0967d670   v v v v v v v v   35 a5 f4 61 06 41 e1 dd 
00000000 0967d668   v v v v v v v v   02 4c 72 39 40 4f b2 cd 
00000000 0967d660   v v v v v v v v   f1 32 8a a3 68 70 e9 3f 
00000000 0967d658   v v v v v v v v   3f 76 c9 99 8e 47 c6 d3 
00000000 0967d650   v v v v v v v v   9f b3 80 29 3e 95 6a c9 
00000000 0967d648   v v v v v v v v   0c 23 87 73 5e 80 42 4d 
00000000 0967d640   v v v v v v v v   ca 1a ba 29 30 73 76 a6 
00000000 0967d638   v v v v v v v v   e8 82 d3 ba a8 12 53 76 
00000000 0967d630   v v v v v v v v   75 eb be 75 88 47 42 99 
00000000 0967d628   v v v v v v v v   c5 07 30 10 b5 28 93 a1 
00000000 0967d620   v v v v v v v v   ea 46 b3 8a 8b f4 d3 2d 
00000000 0967d618   v v v v v v v v   da c0 67 32 9d 68 b7 ff 
00000000 0967d610   v v v v v v v v   62 77 33 ef 81 3b 69 b5 
00000000 0967d608   v v v v v v v v   51 08 7d 14 3e 4d ee 60 
00000000 0967d600   v v v v v v v v   bb bf b6 5e 1a 13 c6 a8 
00000000 0967d5f8   v v v v v v v v   23 fe 7a 9e 06 40 cc 73 
00000000 0967d5f0   v v v v v v v v   f6 f8 86 cc e9 60 38 3d 
00000000 0967d5e8   v v v v v v v v   ca 30 25 de 92 2f a9 5d 
00000000 0967d5e0   v v v v v v v v   a5 a3 97 72 f0 c8 2d 85 
00000000 0967d5d8   v v v v v v v v   f8 3a d2 92 4a d3 ed 29 
00000000 0967d5d0   v v v v v v v v   0f 25 94 ac 96 08 18 ec 
00000000 0967d5c8   v v v v v v v v   9e f6 34 35 8a 06 c5 33 
00000000 0967d5c0   v v v v v v v v   b3 cf 44 6b cf f3 b3 66 
00000000 0967d5b8   v v v v v v v v   f0 fe a5 20 c4 c8 95 63 
00000000 0967d5b0   v v v v v v v v   8f 8c 94 a9 6a 22 b8 69 
00000000 0967d5a8   v v v v v v v v   6b 2e 6f 57 52 f6 ee 48 
00000000 0967d5a0   v v v v v v v v   00 51 b8 69 02 b4 c1 d0 
00000000 0967d598   v v v v v v v v   3a dd 8b 61 38 08 cf e6 
00000000 0967d590   v v v v v v v v   22 72 f1 01 b6 89 f9 14 
00000000 0967d588   v v v v v v v v   dc 79 69 0a f6 9d 90 96 
00000000 0967d580   v v v v v v v v   4f 03 a8 32 7a e4 44 d8 
00000000 0967d578   v v v v v v v v   a4 83 92 52 e6 5d f4 21 
00000000 0967d570   v v v v v v v v   bb 68 07 a2 ad 80 ab d2 
00000000 0967d568   v v v v v v v v   83 cc 79 5f 4e 8d ee 1c 
00000000 0967d560   v v v v v v v v   89 c4 ee a2 3f c1 46 52 
00000000 0967d558   v v v v v v v v   9d 35 5e c4 a1 8c 1a 19 
00000000 0967d550   v v v v v v v v   ba 87 f7 db fc df 58 24 
00000000 0967d548   v v v v v v v v   7e ec 71 31 04 29 2e e7 
00000000 0967d540   v v v v v v v v   85 2c 5c ed 24 10 f4 d8 
00000000 0967d538   v v v v v v v v   94 d1 aa 88 d2 92 21 df 
00000000 0967d530   v v v v v v v v   8b 18 83 d8 61 6c b2 4c 
00000000 0967d528   v v v v v v v v   e8 48 03 1d a4 02 8b 97 
00000000 0967d520   v v v v v v v v   08 4b f9 4c 7c 22 2e 0b 
00000000 0967d518   v v v v v v v v   ff 18 67 f3 07 09 5c b2 
00000000 0967d510   v v v v v v v v   b7 17 26 14 83 6a 49 cb 
00000000 0967d508   v v v v v v v v   a3 01 92 0d fa 3f 9e bc 
00000000 0967d500   v v v v v v v v   cf d7 1e 71 23 16 a4 0c 
00000000 0967d4f8   v v v v v v . .   10 5e 97 55 51 45 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (38)                                               Lowest Known Correct Cost (38)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32          movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xf   2      OPC=je_label              je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x11  1      OPC=nop                   nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x12  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x13  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32          movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32        
  testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32         testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label             jne .L_142cc0             #  26    0x29  2      OPC=jne_label           
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32          movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32          subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32        
  sarl $0x2, %eax           #  29    0x2f  3      OPC=sarl_r32_imm8         sarl $0x2, %eax           #  29    0x2f  3      OPC=sarl_r32_imm8       
  nop                       #  30    0x32  1      OPC=nop                   nop                       #  30    0x32  1      OPC=nop                 
  nop                       #  31    0x33  1      OPC=nop                   nop                       #  31    0x33  1      OPC=nop                 
  nop                       #  32    0x34  1      OPC=nop                   nop                       #  32    0x34  1      OPC=nop                 
  nop                       #  33    0x35  1      OPC=nop                   nop                       #  33    0x35  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                   nop                       #  34    0x36  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                   nop                       #  35    0x37  1      OPC=nop                 
  nop                       #  36    0x38  1      OPC=nop                   nop                       #  36    0x38  1      OPC=nop                 
  nop                       #  37    0x39  1      OPC=nop                   nop                       #  37    0x39  1      OPC=nop                 
  nop                       #  38    0x3a  1      OPC=nop                   nop                       #  38    0x3a  1      OPC=nop                 
  nop                       #  39    0x3b  1      OPC=nop                   nop                       #  39    0x3b  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                   nop                       #  40    0x3c  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                   nop                       #  41    0x3d  1      OPC=nop                 
  nop                       #  42    0x3e  1      OPC=nop                   nop                       #  42    0x3e  1      OPC=nop                 
  nop                       #  43    0x3f  1      OPC=nop                   nop                       #  43    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>             .L_142ce0:                  #        0x40  0      OPC=<label>             
  nopl %eax                 #  44    0x40  3      OPC=nopl_r32              nopl %eax                 #  44    0x40  3      OPC=nopl_r32            
  popq %r11                 #  45    0x43  2      OPC=popq_r64_1            popq %r11                 #  45    0x43  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  46    0x45  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  46    0x45  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  47    0x49  3      OPC=addq_r64_r64          addq %r15, %r11           #  47    0x49  3      OPC=addq_r64_r64        
  jmpq %r11                 #  48    0x4c  3      OPC=jmpq_r64              jmpq %r11                 #  48    0x4c  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  93.7949s
Iterations/s:                  1066.16

Starting cost:                 51
Lowest cost:                   38
Lowest correct cost:           38

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.397%       7.994%        7.994%       
Opcode          8.374%       8.049%        7.836%       
Operand         8.445%       4.976%        2.559%       
Global Swap     8.377%       7.698%        7.03%        
Local Swap      8.381%       4.615%        3.949%       
ReplaceNop      8.22%        7.91%         7.617%       
Rotate          8.312%       7.822%        6.129%       
Delete          8.401%       8.099%        6.962%       
Instruction     8.234%       4.803%        0.798%       
Add Nops        8.247%       8.247%        6.662%       
OpcodeWidth     8.419%       7.815%        7.641%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.193%       1.548%        0.001%       
                                                        
Total           100%         79.576%       65.178%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  241.579s
Iterations/s:                  827.885

Starting cost:                 51
Lowest cost:                   38
Lowest correct cost:           38

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.389%       8.0895%       8.0895%      
Opcode          8.4075%      8.165%        8.004%       
Operand         8.399%       4.992%        2.6715%      
Global Swap     8.316%       7.803%        7.298%       
Local Swap      8.291%       4.4285%       3.727%       
ReplaceNop      8.2815%      8.0485%       7.842%       
Rotate          8.271%       7.8885%       6.4855%      
Delete          8.3985%      8.1685%       7.1465%      
Instruction     8.256%       4.861%        0.762%       
Add Nops        8.298%       8.298%        6.935%       
OpcodeWidth     8.3695%      7.928%        7.7875%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.323%       1.5925%       0.0005%      
                                                        
Total           100%         80.263%       66.749%      

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  461.384s
Iterations/s:                  650.217

Starting cost:                 51
Lowest cost:                   38
Lowest correct cost:           38

Move Type       Proposed     Succeeded     Accepted         
                                                            
Global Copy     8.376%       8.141%        8.141%           
Opcode          8.39033%     8.19567%      8.067%           
Operand         8.40233%     5.214%        2.858%           
Global Swap     8.288%       7.882%        7.45733%         
Local Swap      8.27633%     4.41967%      3.71467%         
ReplaceNop      8.294%       8.10933%      7.94333%         
Rotate          8.31733%     8.013%        6.69433%         
Delete          8.383%       8.19867%      7.16267%         
Instruction     8.27233%     4.874%        0.74%            
Add Nops        8.28767%     8.28767%      6.95433%         
OpcodeWidth     8.32933%     7.963%        7.83967%         
2xWeighted      0%           0%            0%               
Memory+Swap     8.38333%     1.622%        0.000333333%     
                                                            
Total           100%         80.92%        67.5727%         

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  714.46s
Iterations/s:                  559.864

Starting cost:                 51
Lowest cost:                   38
Lowest correct cost:           38

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.32125%     8.12025%      8.12025%     
Opcode          8.402%       8.237%        8.12725%     
Operand         8.3645%      5.34725%      3.00125%     
Global Swap     8.33025%     7.97925%      7.6025%      
Local Swap      8.28525%     4.421%        3.69025%     
ReplaceNop      8.3075%      8.15175%      8.008%       
Rotate          8.3235%      8.06525%      6.8285%      
Delete          8.375%       8.216%        7.15625%     
Instruction     8.2535%      4.88975%      0.7415%      
Add Nops        8.31525%     8.31525%      6.97875%     
OpcodeWidth     8.33975%     8.02025%      7.9035%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.38225%     1.6255%       0.00025%     
                                                        
Total           100%         81.3885%      68.1582%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  1037.15s
Iterations/s:                  482.091

Starting cost:                 51
Lowest cost:                   38
Lowest correct cost:           38

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.36%        8.1846%       8.1846%      
Opcode          8.368%       8.2254%       8.1306%      
Operand         8.3448%      5.389%        3.0822%      
Global Swap     8.282%       7.9754%       7.643%       
Local Swap      8.2742%      4.4352%       3.6808%      
ReplaceNop      8.3148%      8.1782%       8.052%       
Rotate          8.332%       8.103%        6.914%       
Delete          8.3672%      8.2284%       7.1868%      
Instruction     8.295%       4.9366%       0.7374%      
Add Nops        8.3346%      8.3346%       7.0416%      
OpcodeWidth     8.33%        8.0456%       7.9384%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3974%      1.6386%       0.0002%      
                                                        
Total           100%         81.6746%      68.5916%     

********************************************************************************

TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
subw %di, %dx
retq 
Total accesses: 2
SAME MAP
     0 1 
------------------
0  |   1 
1  |     

NEXT MAP
     0 1 
------------------
0  |   0 
1  |     

TOTAL CELLS: 1
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
ALIASING CASES: 1
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
movl %edx, %edx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
subw %di, %dx
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   1 0 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
movl %edx, %edx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
subw %di, %dx
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   1 0 0 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
Access 3 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
subw %di, %dx
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   0 1 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
movl %edx, %edx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
subw %di, %dx
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 1 0 
1  |     0 1 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
movl %edx, %edx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
subw %di, %dx
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 1 0 0 
1  |     0 1 0 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 4)
Access 4 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
subw %di, %dx
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 0 1 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
movl %edx, %edx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
subw %di, %dx
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 0 1 0 
1  |     0 0 1 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
movl %edx, %edx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
subw %di, %dx
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 1 0 0 
1  |     0 0 1 0 
2  |       0 0 1 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 0 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 4 (cell size 4)
Access 5 cell 2 offset 0 size 4 (cell size 4)
################################################################################

Final update:

Total search iterations:       5000000
Number of attempted searches:  10
Total search time:             6787.1s
Total time:                    6798.99s

Statistics of last search

Iterations:                    500000
Elapsed Time:                  1037.15s
Iterations/s:                  482.091

Starting cost:                 51
Lowest cost:                   38
Lowest correct cost:           38

Move Type       Proposed     Succeeded     Accepted     
                                                        
Global Copy     8.36%        8.1846%       8.1846%      
Opcode          8.368%       8.2254%       8.1306%      
Operand         8.3448%      5.389%        3.0822%      
Global Swap     8.282%       7.9754%       7.643%       
Local Swap      8.2742%      4.4352%       3.6808%      
ReplaceNop      8.3148%      8.1782%       8.052%       
Rotate          8.332%       8.103%        6.914%       
Delete          8.3672%      8.2284%       7.1868%      
Instruction     8.295%       4.9366%       0.7374%      
Add Nops        8.3346%      8.3346%       7.0416%      
OpcodeWidth     8.33%        8.0456%       7.9384%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3974%      1.6386%       0.0002%      
                                                        
Total           100%         81.6746%      68.5916%     

Lowest Cost Discovered (38)                                               
                                                                          
  .text                                                                   
  .globl wcslen                                                           
  .type wcslen, @function                                                 
                                                                          
#! file-offset 0                                                          
#! rip-offset  0                                                          
#! capacity    0 bytes                                                    
                                                                          
# Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32        
  testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label           
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32        
  sarl $0x2, %eax           #  29    0x2f  3      OPC=sarl_r32_imm8       
  nop                       #  30    0x32  1      OPC=nop                 
  nop                       #  31    0x33  1      OPC=nop                 
  nop                       #  32    0x34  1      OPC=nop                 
  nop                       #  33    0x35  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                 
  nop                       #  36    0x38  1      OPC=nop                 
  nop                       #  37    0x39  1      OPC=nop                 
  nop                       #  38    0x3a  1      OPC=nop                 
  nop                       #  39    0x3b  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                 
  nop                       #  42    0x3e  1      OPC=nop                 
  nop                       #  43    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>             
  nopl %eax                 #  44    0x40  3      OPC=nopl_r32            
  popq %r11                 #  45    0x43  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  46    0x45  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  47    0x49  3      OPC=addq_r64_r64        
  jmpq %r11                 #  48    0x4c  3      OPC=jmpq_r64            
                                                                          
.size wcslen, .-wcslen                                                    
Lowest Known Correct Cost (38)                                            
                                                                          
  .text                                                                   
  .globl wcslen                                                           
  .type wcslen, @function                                                 
                                                                          
#! file-offset 0                                                          
#! rip-offset  0                                                          
#! capacity    0 bytes                                                    
                                                                          
# Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32        
  testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label           
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32        
  sarl $0x2, %eax           #  29    0x2f  3      OPC=sarl_r32_imm8       
  nop                       #  30    0x32  1      OPC=nop                 
  nop                       #  31    0x33  1      OPC=nop                 
  nop                       #  32    0x34  1      OPC=nop                 
  nop                       #  33    0x35  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                 
  nop                       #  36    0x38  1      OPC=nop                 
  nop                       #  37    0x39  1      OPC=nop                 
  nop                       #  38    0x3a  1      OPC=nop                 
  nop                       #  39    0x3b  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                 
  nop                       #  42    0x3e  1      OPC=nop                 
  nop                       #  43    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>             
  nopl %eax                 #  44    0x40  3      OPC=nopl_r32            
  popq %r11                 #  45    0x43  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  46    0x45  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  47    0x49  3      OPC=addq_r64_r64        
  jmpq %r11                 #  48    0x4c  3      OPC=jmpq_r64            
                                                                          
.size wcslen, .-wcslen                                                    
                                                                          

################################################################################

Search terminated successfully with a verified rewrite!
