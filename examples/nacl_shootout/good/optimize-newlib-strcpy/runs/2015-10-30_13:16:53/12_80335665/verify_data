time stoke debug verify --config verify.conf
Computing reference outputs for 0 testcases
Computing reference outputs for 0 testcases
Target                       Rewrite                          
                                                              
.strcpy:                     .strcpy:                         
movl %esi, %esi              movq %rdi, %rcx                  
movl %edi, %eax              movq %rsi, %rdx                  
movl %esi, %edi              addl $0xfb, %esi                 
movq %rsi, %rdx              nop                              
movq %rax, %rcx              nop                              
orl %eax, %edi               nop                              
andl $0x3, %edi              nop                              
jne .L_126860                nop                              
movl %esi, %esi              nop                              
movl (%r15,%rsi,1), %r8d     movq %rcx, %rax                  
movl %r8d, %esi              jne .L_126860                    
leal -0x1010101(%r8), %edi   nop                              
notl %esi                    nop                              
andl %edi, %esi              nop                              
andl $0x80808080, %esi       nop                              
jne .L_126860                nop                              
nop                          movb $0xf9, %al                  
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          andw $0xfffe, %ax                
nop                          nop                              
nop                          nop                              
nop                          jne .L_126860                    
.L_126820:                   nop                              
addl $0x4, %edx              nop                              
movl %ecx, %ecx              nop                              
movl %r8d, (%r15,%rcx,1)     nop                              
addl $0x4, %ecx              nop                              
movl %edx, %edx              nop                              
movl (%r15,%rdx,1), %r8d     nop                              
movl %r8d, %r9d              nop                              
leal -0x1010101(%r8), %esi   nop                              
notl %r9d                    nop                              
nop                          nop                              
andl %esi, %r9d              nop                              
andl $0x80808080, %r9d       andb $0xf0, %al                  
je .L_126820                 nop                              
nop                          nop                              
nop                          nop                              
nop                          .L_126820:                       
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
.L_126860:                   nop                              
movl %edx, %edx              nop                              
movzbl (%r15,%rdx,1), %esi   nop                              
addl $0x1, %edx              nop                              
movl %ecx, %ecx              nop                              
movb %sil, (%r15,%rcx,1)     nop                              
addl $0x1, %ecx              nop                              
testb %sil, %sil             nop                              
jne .L_126860                nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
retq                         nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             je .L_126820                     
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             .L_126860:                       
                             incl %edx                        
                             movzbq -0x1(%r15,%rdx,1), %rsi   
                             addl $0x1, %ecx                  
                             movb %sil, -0x1(%r15,%rcx,1)     
                             salw $0x6, %si                   
                             jne .L_126860                    
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             retq                             
                                                              
===========================================
Working on pair / P: 1 6 7 Q: 1 6 7
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
movq %rdi, %rcx
movq %rsi, %rdx
addl $0xfb, %esi
nop 
nop 
nop 
nop 
nop 
nop 
movq %rcx, %rax
nop 
.L_126860:
incl %edx
movzbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
salw $0x6, %si
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 1 0 
1  |     0 1 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 1)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 0 offset 0 size 1 (cell size 1)
Access 3 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 1 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
14 -> 0 (size 1 / cell size 1 / offset 0
16 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_8_4|8> <TMP_BV_8_6|8>)) (== <TMP_BV_8_5|8> <TMP_BV_8_7|8>))

CONSTRAINTS

(not (== (plus (concat <0x0|1> (sign-extend-32 <0xfb|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0] <0x0|32>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus <%rsi_2_INIT|64>[31:0] <0x1|32>))) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus <%rsi_2_INIT|64>[31:0] <0x1|32>))) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|9> (and <0x6|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|56> <TMP_BV_8_6|8>)[15:0]) (concat <0x0|9> (and <0x6|8>[7:0] <0x1f|8>)))[15:0] <0x0|16>)) (and (not (not (== (concat <0x0|9> (and <0x6|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_4|8>))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_4|8>))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_8_4|8> <TMP_BV_8_6|8>)) (== <TMP_BV_8_5|8> <TMP_BV_8_7|8>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) <%rdi_2_INIT|64>)
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (Got counterexample)
SIGNAL 0 [normal exit]

%rax     00 00 00 00 00 00 00 00
%rcx     00 00 00 00 00 00 00 00
%rdx     00 00 00 00 00 00 00 00
%rbx     00 00 00 00 00 00 00 00
%rsp     00 00 00 00 00 00 00 00
%rbp     00 00 00 00 00 00 00 00
%rsi     00 00 00 00 7f 24 92 02
%rdi     00 00 00 08 64 c4 f2 7e
%r8      00 00 00 00 00 00 00 00
%r9      00 00 00 00 00 00 00 00
%r10     00 00 00 00 00 00 00 00
%r11     00 00 00 00 00 00 00 00
%r12     00 00 00 00 00 00 00 00
%r13     00 00 00 00 00 00 00 00
%r14     00 00 00 00 00 00 00 00
%r15     7f ff ff ff 8d d9 21 01

%ymm0    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm1    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm2    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm3    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm4    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm5    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm6    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm7    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm8    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm9    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm10   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm11   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm12   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm13   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm14   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm15   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 80000000 0cfdb308 - 80000000 0cfdb300 ]
[ 1 valid rows shown ]

80000000 0cfdb300   . . . . v . . .   00 00 00 00 00 00 00 00 

[ 7fffffff f29e1380 - 7fffffff f29e1360 ]
[ 1 valid rows shown ]

7fffffff f29e1378   v . . . . . . .   00 00 00 00 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)

Equivalent: no

1 Counterexamples.

SIGNAL 0 [normal exit]

%rax     00 00 00 00 00 00 00 00
%rcx     00 00 00 00 00 00 00 00
%rdx     00 00 00 00 00 00 00 00
%rbx     00 00 00 00 00 00 00 00
%rsp     00 00 00 00 00 00 00 00
%rbp     00 00 00 00 00 00 00 00
%rsi     00 00 00 00 7f 24 92 02
%rdi     00 00 00 08 64 c4 f2 7e
%r8      00 00 00 00 00 00 00 00
%r9      00 00 00 00 00 00 00 00
%r10     00 00 00 00 00 00 00 00
%r11     00 00 00 00 00 00 00 00
%r12     00 00 00 00 00 00 00 00
%r13     00 00 00 00 00 00 00 00
%r14     00 00 00 00 00 00 00 00
%r15     7f ff ff ff 8d d9 21 01

%ymm0    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm1    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm2    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm3    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm4    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm5    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm6    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm7    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm8    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm9    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm10   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm11   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm12   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm13   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm14   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm15   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 80000000 0cfdb308 - 80000000 0cfdb300 ]
[ 1 valid rows shown ]

80000000 0cfdb300   . . . . v . . .   00 00 00 00 00 00 00 00 

[ 7fffffff f29e1380 - 7fffffff f29e1360 ]
[ 1 valid rows shown ]

7fffffff f29e1378   v . . . . . . .   00 00 00 00 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Difference of running target and rewrite on the counterexample:

%rax     00 00 00 0[91m0[0m 64 c4 f2 7e
%rax     00 00 00 0[92m8[0m 64 c4 f2 7e
%rdi     00 00 00 0[91m0[0m [91m0[0m[91m0[0m [91m0[0m[91m0[0m [91m0[0m[91m0[0m [91m0[0m[91m2[0m
%rdi     00 00 00 0[92m8[0m [92m6[0m[92m4[0m [92mc[0m[92m4[0m [92mf[0m[92m2[0m [92m7[0m[92me[0m

