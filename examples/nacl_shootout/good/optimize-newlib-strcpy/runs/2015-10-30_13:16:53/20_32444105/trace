Training TCs: 20
flags for addb_al_imm8: { }
flags for addw_ax_imm16: { }
flags for addl_eax_imm32: { }
flags for addw_m16_imm16: { }
flags for addw_m16_imm8: { }
flags for addw_m16_r16: { }
flags for addl_m32_imm32: { }
flags for addl_m32_imm8: { }
flags for addl_m32_r32: { }
flags for addq_m64_imm32: { }
flags for addq_m64_imm8: { }
flags for addq_m64_r64: { }
flags for addb_m8_imm8: { }
flags for addb_m8_r8: { }
flags for addb_m8_rh: { }
flags for addw_r16_imm16: { }
flags for addw_r16_imm8: { }
flags for addw_r16_m16: { }
flags for addw_r16_r16: { }
flags for addw_r16_r16_1: { }
flags for addl_r32_imm32: { }
flags for addl_r32_imm8: { }
flags for addl_r32_m32: { }
flags for addl_r32_r32: { }
flags for addl_r32_r32_1: { }
flags for addq_r64_imm32: { }
flags for addq_r64_imm8: { }
flags for addq_r64_m64: { }
flags for addq_r64_r64: { }
flags for addq_r64_r64_1: { }
flags for addb_r8_imm8: { }
flags for addb_r8_m8: { }
flags for addb_r8_r8: { }
flags for addb_r8_r8_1: { }
flags for addb_r8_rh: { }
flags for addb_r8_rh_1: { }
flags for addq_rax_imm32: { }
flags for addb_rh_imm8: { }
flags for addb_rh_m8: { }
flags for addb_rh_r8: { }
flags for addb_rh_r8_1: { }
flags for addb_rh_rh: { }
flags for addb_rh_rh_1: { }
flags for addpd_xmm_m128: { sse2 }
flags for addpd_xmm_xmm: { sse2 }
flags for addps_xmm_m128: { sse }
flags for addps_xmm_xmm: { sse }
flags for addsd_xmm_m64: { sse2 }
flags for addsd_xmm_xmm: { sse2 }
flags for addss_xmm_m32: { sse }
flags for addss_xmm_xmm: { sse }
flags for addsubpd_xmm_m128: { pni }
flags for addsubpd_xmm_xmm: { pni }
flags for addsubps_xmm_m128: { pni }
flags for addsubps_xmm_xmm: { pni }
flags for aesdec_xmm_m128: { aes }
flags for aesdec_xmm_xmm: { aes }
flags for aesdeclast_xmm_m128: { aes }
flags for aesdeclast_xmm_xmm: { aes }
flags for aesenc_xmm_m128: { aes }
flags for aesenc_xmm_xmm: { aes }
flags for aesenclast_xmm_m128: { aes }
flags for aesenclast_xmm_xmm: { aes }
flags for aesimc_xmm_m128: { aes }
flags for aesimc_xmm_xmm: { aes }
flags for aeskeygenassist_xmm_m128_imm8: { aes }
flags for aeskeygenassist_xmm_xmm_imm8: { aes }
flags for andb_al_imm8: { }
flags for andw_ax_imm16: { }
flags for andl_eax_imm32: { }
flags for andw_m16_imm16: { }
flags for andw_m16_imm8: { }
flags for andw_m16_r16: { }
flags for andl_m32_imm32: { }
flags for andl_m32_imm8: { }
flags for andl_m32_r32: { }
flags for andq_m64_imm32: { }
flags for andq_m64_imm8: { }
flags for andq_m64_r64: { }
flags for andb_m8_imm8: { }
flags for andb_m8_r8: { }
flags for andb_m8_rh: { }
flags for andw_r16_imm16: { }
flags for andw_r16_imm8: { }
flags for andw_r16_m16: { }
flags for andw_r16_r16: { }
flags for andw_r16_r16_1: { }
flags for andl_r32_imm32: { }
flags for andl_r32_imm8: { }
flags for andl_r32_m32: { }
flags for andl_r32_r32: { }
flags for andl_r32_r32_1: { }
flags for andq_r64_imm32: { }
flags for andq_r64_imm8: { }
flags for andq_r64_m64: { }
flags for andq_r64_r64: { }
flags for andq_r64_r64_1: { }
flags for andb_r8_imm8: { }
flags for andb_r8_m8: { }
flags for andb_r8_r8: { }
flags for andb_r8_r8_1: { }
flags for andb_r8_rh: { }
flags for andb_r8_rh_1: { }
flags for andq_rax_imm32: { }
flags for andb_rh_imm8: { }
flags for andb_rh_m8: { }
flags for andb_rh_r8: { }
flags for andb_rh_r8_1: { }
flags for andb_rh_rh: { }
flags for andb_rh_rh_1: { }
flags for andnl_r32_r32_m32: { bmi1 }
flags for andnl_r32_r32_r32: { bmi1 }
flags for andnq_r64_r64_m64: { bmi1 }
flags for andnq_r64_r64_r64: { bmi1 }
flags for andnpd_xmm_m128: { sse2 }
flags for andnpd_xmm_xmm: { sse2 }
flags for andnps_xmm_m128: { sse }
flags for andnps_xmm_xmm: { sse }
flags for andpd_xmm_m128: { sse2 }
flags for andpd_xmm_xmm: { sse2 }
flags for andps_xmm_m128: { sse }
flags for andps_xmm_xmm: { sse }
flags for bextrl_r32_m32_r32: { bmi1 }
flags for bextrl_r32_r32_r32: { bmi1 }
flags for bextrq_r64_m64_r64: { bmi1 }
flags for bextrq_r64_r64_r64: { bmi1 }
flags for blendpd_xmm_m128_imm8: { sse4_1 }
flags for blendpd_xmm_xmm_imm8: { sse4_1 }
flags for blendps_xmm_m128_imm8: { sse4_1 }
flags for blendps_xmm_xmm_imm8: { sse4_1 }
flags for blendvpd_xmm_m128_xmm0: { sse4_1 }
flags for blendvpd_xmm_xmm_xmm0: { sse4_1 }
flags for blendvps_xmm_m128_xmm0: { sse4_1 }
flags for blendvps_xmm_xmm_xmm0: { sse4_1 }
flags for blsil_r32_m32: { bmi1 }
flags for blsil_r32_r32: { bmi1 }
flags for blsiq_r64_m64: { bmi1 }
flags for blsiq_r64_r64: { bmi1 }
flags for blsmskl_r32_m32: { bmi1 }
flags for blsmskl_r32_r32: { bmi1 }
flags for blsmskq_r64_m64: { bmi1 }
flags for blsmskq_r64_r64: { bmi1 }
flags for blsrl_r32_m32: { bmi1 }
flags for blsrl_r32_r32: { bmi1 }
flags for blsrq_r64_m64: { bmi1 }
flags for blsrq_r64_r64: { bmi1 }
flags for bzhil_r32_m32_r32: { bmi2 }
flags for bzhil_r32_r32_r32: { bmi2 }
flags for bzhiq_r64_m64_r64: { bmi2 }
flags for bzhiq_r64_r64_r64: { bmi2 }
flags for cli: { }
flags for cmovaw_r16_m16: { cmov }
flags for cmovaw_r16_r16: { cmov }
flags for cmoval_r32_m32: { cmov }
flags for cmoval_r32_r32: { cmov }
flags for cmovaq_r64_m64: { cmov }
flags for cmovaq_r64_r64: { cmov }
flags for cmovaew_r16_m16: { cmov }
flags for cmovaew_r16_r16: { cmov }
flags for cmovael_r32_m32: { cmov }
flags for cmovael_r32_r32: { cmov }
flags for cmovaeq_r64_m64: { cmov }
flags for cmovaeq_r64_r64: { cmov }
flags for cmovbw_r16_m16: { cmov }
flags for cmovbw_r16_r16: { cmov }
flags for cmovbl_r32_m32: { cmov }
flags for cmovbl_r32_r32: { cmov }
flags for cmovbq_r64_m64: { cmov }
flags for cmovbq_r64_r64: { cmov }
flags for cmovbew_r16_m16: { cmov }
flags for cmovbew_r16_r16: { cmov }
flags for cmovbel_r32_m32: { cmov }
flags for cmovbel_r32_r32: { cmov }
flags for cmovbeq_r64_m64: { cmov }
flags for cmovbeq_r64_r64: { cmov }
flags for cmovcw_r16_m16: { cmov }
flags for cmovcw_r16_r16: { cmov }
flags for cmovcl_r32_m32: { cmov }
flags for cmovcl_r32_r32: { cmov }
flags for cmovcq_r64_m64: { cmov }
flags for cmovcq_r64_r64: { cmov }
flags for cmovew_r16_m16: { cmov }
flags for cmovew_r16_r16: { cmov }
flags for cmovel_r32_m32: { cmov }
flags for cmovel_r32_r32: { cmov }
flags for cmoveq_r64_m64: { cmov }
flags for cmoveq_r64_r64: { cmov }
flags for cmovgw_r16_m16: { cmov }
flags for cmovgw_r16_r16: { cmov }
flags for cmovgl_r32_m32: { cmov }
flags for cmovgl_r32_r32: { cmov }
flags for cmovgq_r64_m64: { cmov }
flags for cmovgq_r64_r64: { cmov }
flags for cmovgew_r16_m16: { cmov }
flags for cmovgew_r16_r16: { cmov }
flags for cmovgel_r32_m32: { cmov }
flags for cmovgel_r32_r32: { cmov }
flags for cmovgeq_r64_m64: { cmov }
flags for cmovgeq_r64_r64: { cmov }
flags for cmovlw_r16_m16: { cmov }
flags for cmovlw_r16_r16: { cmov }
flags for cmovll_r32_m32: { cmov }
flags for cmovll_r32_r32: { cmov }
flags for cmovlq_r64_m64: { cmov }
flags for cmovlq_r64_r64: { cmov }
flags for cmovlew_r16_m16: { cmov }
flags for cmovlew_r16_r16: { cmov }
flags for cmovlel_r32_m32: { cmov }
flags for cmovlel_r32_r32: { cmov }
flags for cmovleq_r64_m64: { cmov }
flags for cmovleq_r64_r64: { cmov }
flags for cmovnaw_r16_m16: { cmov }
flags for cmovnaw_r16_r16: { cmov }
flags for cmovnal_r32_m32: { cmov }
flags for cmovnal_r32_r32: { cmov }
flags for cmovnaq_r64_m64: { cmov }
flags for cmovnaq_r64_r64: { cmov }
flags for cmovnaew_r16_m16: { cmov }
flags for cmovnaew_r16_r16: { cmov }
flags for cmovnael_r32_m32: { cmov }
flags for cmovnael_r32_r32: { cmov }
flags for cmovnaeq_r64_m64: { cmov }
flags for cmovnaeq_r64_r64: { cmov }
flags for cmovnbw_r16_m16: { cmov }
flags for cmovnbw_r16_r16: { cmov }
flags for cmovnbl_r32_m32: { cmov }
flags for cmovnbl_r32_r32: { cmov }
flags for cmovnbq_r64_m64: { cmov }
flags for cmovnbq_r64_r64: { cmov }
flags for cmovnbew_r16_m16: { cmov }
flags for cmovnbew_r16_r16: { cmov }
flags for cmovnbel_r32_m32: { cmov }
flags for cmovnbel_r32_r32: { cmov }
flags for cmovnbeq_r64_m64: { cmov }
flags for cmovnbeq_r64_r64: { cmov }
flags for cmovncw_r16_m16: { cmov }
flags for cmovncw_r16_r16: { cmov }
flags for cmovncl_r32_m32: { cmov }
flags for cmovncl_r32_r32: { cmov }
flags for cmovncq_r64_m64: { cmov }
flags for cmovncq_r64_r64: { cmov }
flags for cmovnew_r16_m16: { cmov }
flags for cmovnew_r16_r16: { cmov }
flags for cmovnel_r32_m32: { cmov }
flags for cmovnel_r32_r32: { cmov }
flags for cmovneq_r64_m64: { cmov }
flags for cmovneq_r64_r64: { cmov }
flags for cmovngw_r16_m16: { cmov }
flags for cmovngw_r16_r16: { cmov }
flags for cmovngl_r32_m32: { cmov }
flags for cmovngl_r32_r32: { cmov }
flags for cmovngq_r64_m64: { cmov }
flags for cmovngq_r64_r64: { cmov }
flags for cmovngew_r16_m16: { cmov }
flags for cmovngew_r16_r16: { cmov }
flags for cmovngel_r32_m32: { cmov }
flags for cmovngel_r32_r32: { cmov }
flags for cmovngeq_r64_m64: { cmov }
flags for cmovngeq_r64_r64: { cmov }
flags for cmovnlw_r16_m16: { cmov }
flags for cmovnlw_r16_r16: { cmov }
flags for cmovnll_r32_m32: { cmov }
flags for cmovnll_r32_r32: { cmov }
flags for cmovnlq_r64_m64: { cmov }
flags for cmovnlq_r64_r64: { cmov }
flags for cmovnlew_r16_m16: { cmov }
flags for cmovnlew_r16_r16: { cmov }
flags for cmovnlel_r32_m32: { cmov }
flags for cmovnlel_r32_r32: { cmov }
flags for cmovnleq_r64_m64: { cmov }
flags for cmovnleq_r64_r64: { cmov }
flags for cmovnow_r16_m16: { cmov }
flags for cmovnow_r16_r16: { cmov }
flags for cmovnol_r32_m32: { cmov }
flags for cmovnol_r32_r32: { cmov }
flags for cmovnoq_r64_m64: { cmov }
flags for cmovnoq_r64_r64: { cmov }
flags for cmovnpw_r16_m16: { cmov }
flags for cmovnpw_r16_r16: { cmov }
flags for cmovnpl_r32_m32: { cmov }
flags for cmovnpl_r32_r32: { cmov }
flags for cmovnpq_r64_m64: { cmov }
flags for cmovnpq_r64_r64: { cmov }
flags for cmovnsw_r16_m16: { cmov }
flags for cmovnsw_r16_r16: { cmov }
flags for cmovnsl_r32_m32: { cmov }
flags for cmovnsl_r32_r32: { cmov }
flags for cmovnsq_r64_m64: { cmov }
flags for cmovnsq_r64_r64: { cmov }
flags for cmovnzw_r16_m16: { cmov }
flags for cmovnzw_r16_r16: { cmov }
flags for cmovnzl_r32_m32: { cmov }
flags for cmovnzl_r32_r32: { cmov }
flags for cmovnzq_r64_m64: { cmov }
flags for cmovnzq_r64_r64: { cmov }
flags for cmovow_r16_m16: { cmov }
flags for cmovow_r16_r16: { cmov }
flags for cmovol_r32_m32: { cmov }
flags for cmovol_r32_r32: { cmov }
flags for cmovoq_r64_m64: { cmov }
flags for cmovoq_r64_r64: { cmov }
flags for cmovpw_r16_m16: { cmov }
flags for cmovpw_r16_r16: { cmov }
flags for cmovpl_r32_m32: { cmov }
flags for cmovpl_r32_r32: { cmov }
flags for cmovpq_r64_m64: { cmov }
flags for cmovpq_r64_r64: { cmov }
flags for cmovpew_r16_m16: { cmov }
flags for cmovpew_r16_r16: { cmov }
flags for cmovpel_r32_m32: { cmov }
flags for cmovpel_r32_r32: { cmov }
flags for cmovpeq_r64_m64: { cmov }
flags for cmovpeq_r64_r64: { cmov }
flags for cmovpow_r16_m16: { cmov }
flags for cmovpow_r16_r16: { cmov }
flags for cmovpol_r32_m32: { cmov }
flags for cmovpol_r32_r32: { cmov }
flags for cmovpoq_r64_m64: { cmov }
flags for cmovpoq_r64_r64: { cmov }
flags for cmovsw_r16_m16: { cmov }
flags for cmovsw_r16_r16: { cmov }
flags for cmovsl_r32_m32: { cmov }
flags for cmovsl_r32_r32: { cmov }
flags for cmovsq_r64_m64: { cmov }
flags for cmovsq_r64_r64: { cmov }
flags for cmovzw_r16_m16: { cmov }
flags for cmovzw_r16_r16: { cmov }
flags for cmovzl_r32_m32: { cmov }
flags for cmovzl_r32_r32: { cmov }
flags for cmovzq_r64_m64: { cmov }
flags for cmovzq_r64_r64: { cmov }
flags for comisd_xmm_m64: { sse2 }
flags for comisd_xmm_xmm: { sse2 }
flags for comiss_xmm_m32: { sse }
flags for comiss_xmm_xmm: { sse }
flags for cpuid: { }
flags for cvtdq2pd_xmm_m64: { sse2 }
flags for cvtdq2pd_xmm_xmm: { sse2 }
flags for cvtdq2ps_xmm_m128: { sse2 }
flags for cvtdq2ps_xmm_xmm: { sse2 }
flags for cvtpd2dq_xmm_m128: { sse2 }
flags for cvtpd2dq_xmm_xmm: { sse2 }
flags for cvtpd2pi_mm_m128: { }
flags for cvtpd2pi_mm_xmm: { }
flags for cvtpd2ps_xmm_m128: { sse2 }
flags for cvtpd2ps_xmm_xmm: { sse2 }
flags for cvtpi2pd_xmm_m64: { }
flags for cvtpi2pd_xmm_mm: { }
flags for cvtpi2ps_xmm_m64: { }
flags for cvtpi2ps_xmm_mm: { }
flags for cvtps2dq_xmm_m128: { sse2 }
flags for cvtps2dq_xmm_xmm: { sse2 }
flags for cvtps2pd_xmm_m64: { sse2 }
flags for cvtps2pd_xmm_xmm: { sse2 }
flags for cvtps2pi_mm_m64: { }
flags for cvtps2pi_mm_xmm: { }
flags for cvtsd2sil_r32_m64: { sse2 }
flags for cvtsd2sil_r32_xmm: { sse2 }
flags for cvtsd2siq_r64_m64: { sse2 }
flags for cvtsd2siq_r64_xmm: { sse2 }
flags for cvtsd2ss_xmm_m64: { sse2 }
flags for cvtsd2ss_xmm_xmm: { sse2 }
flags for cvtsi2sdl_xmm_m32: { sse2 }
flags for cvtsi2sdq_xmm_m64: { sse2 }
flags for cvtsi2sdl_xmm_r32: { sse2 }
flags for cvtsi2sdq_xmm_r64: { sse2 }
flags for cvtsi2ssl_xmm_m32: { sse }
flags for cvtsi2ssq_xmm_m64: { sse }
flags for cvtsi2ssl_xmm_r32: { sse }
flags for cvtsi2ssq_xmm_r64: { sse }
flags for cvtss2sd_xmm_m32: { sse2 }
flags for cvtss2sd_xmm_xmm: { sse2 }
flags for cvtss2sil_r32_m32: { sse }
flags for cvtss2sil_r32_xmm: { sse }
flags for cvtss2siq_r64_m32: { sse }
flags for cvtss2siq_r64_xmm: { sse }
flags for cvttpd2dq_xmm_m128: { sse2 }
flags for cvttpd2dq_xmm_xmm: { sse2 }
flags for cvttpd2pi_mm_m128: { }
flags for cvttpd2pi_mm_xmm: { }
flags for cvttps2dq_xmm_m128: { sse2 }
flags for cvttps2dq_xmm_xmm: { sse2 }
flags for cvttps2pi_mm_m64: { }
flags for cvttps2pi_mm_xmm: { }
flags for cvttsd2sil_r32_m64: { sse2 }
flags for cvttsd2sil_r32_xmm: { sse2 }
flags for cvttsd2siq_r64_m64: { sse2 }
flags for cvttsd2siq_r64_xmm: { sse2 }
flags for cvttss2sil_r32_m32: { sse }
flags for cvttss2sil_r32_xmm: { sse }
flags for cvttss2siq_r64_m32: { sse }
flags for cvttss2siq_r64_xmm: { sse }
flags for decw_m16: { }
flags for decl_m32: { }
flags for decq_m64: { }
flags for decb_m8: { }
flags for decw_r16: { }
flags for decl_r32: { }
flags for decq_r64: { }
flags for decb_r8: { }
flags for decb_rh: { }
flags for dppd_xmm_m128_imm8: { sse4_1 }
flags for dppd_xmm_xmm_imm8: { sse4_1 }
flags for dpps_xmm_m128_imm8: { sse4_1 }
flags for dpps_xmm_xmm_imm8: { sse4_1 }
flags for extractps_m32_xmm_imm8: { sse4_1 }
flags for extractps_r32_xmm_imm8: { sse4_1 }
flags for extractps_r64_xmm_imm8: { sse4_1 }
flags for f2xm1: { fpu }
flags for fabs: { fpu }
flags for fadds_m32fp: { fpu }
flags for faddl_m64fp: { fpu }
flags for faddp: { fpu }
flags for fbld_m80bcd: { fpu }
flags for fbstp_m80bcd: { fpu }
flags for fchs: { fpu }
flags for fclex: { fpu }
flags for fcom: { fpu }
flags for fcoms_m32fp: { fpu }
flags for fcoml_m64fp: { fpu }
flags for fcomp: { fpu }
flags for fcomps_m32fp: { fpu }
flags for fcompl_m64fp: { fpu }
flags for fcompp: { fpu }
flags for fcos: { fpu }
flags for fdecstp: { fpu }
flags for fdivs_m32fp: { fpu }
flags for fdivl_m64fp: { fpu }
flags for fdivp: { fpu }
flags for fdivrs_m32fp: { fpu }
flags for fdivrl_m64fp: { fpu }
flags for fdivrp: { fpu }
flags for fiadd_m16int: { fpu }
flags for fiaddl_m32int: { fpu }
flags for ficom_m16int: { fpu }
flags for ficoml_m32int: { fpu }
flags for ficomp_m16int: { fpu }
flags for ficompl_m32int: { fpu }
flags for fidiv_m16int: { fpu }
flags for fidivl_m32int: { fpu }
flags for fidivr_m16int: { fpu }
flags for fidivrl_m32int: { fpu }
flags for fild_m16int: { fpu }
flags for fildl_m32int: { fpu }
flags for fildll_m64int: { fpu }
flags for fimul_m16int: { fpu }
flags for fimull_m32int: { fpu }
flags for fincstp: { fpu }
flags for finit: { fpu }
flags for fist_m16int: { fpu }
flags for fistl_m32int: { fpu }
flags for fistp_m16int: { fpu }
flags for fistpl_m32int: { fpu }
flags for fistpll_m64int: { fpu }
flags for fisttp_m16int: { fpu }
flags for fisttpl_m32int: { fpu }
flags for fisttpll_m64int: { fpu }
flags for fisub_m16int: { fpu }
flags for fisubl_m32int: { fpu }
flags for fisubr_m16int: { fpu }
flags for fisubrl_m32int: { fpu }
flags for flds_m32fp: { fpu }
flags for fldl_m64fp: { fpu }
flags for fldt_m80fp: { fpu }
flags for fld1: { fpu }
flags for fldl2e: { fpu }
flags for fldl2t: { fpu }
flags for fldlg2: { fpu }
flags for fldln2: { fpu }
flags for fldpi: { fpu }
flags for fldz: { fpu }
flags for fmuls_m32fp: { fpu }
flags for fmull_m64fp: { fpu }
flags for fmulp: { fpu }
flags for fnclex: { fpu }
flags for fninit: { fpu }
flags for fnop: { fpu }
flags for fnstsw_ax: { fpu }
flags for fpatan: { fpu }
flags for fprem: { fpu }
flags for fprem1: { fpu }
flags for fptan: { fpu }
flags for frndint: { fpu }
flags for fscale: { fpu }
flags for fsin: { fpu }
flags for fsincos: { fpu }
flags for fsqrt: { fpu }
flags for fsts_m32fp: { fpu }
flags for fstl_m64fp: { fpu }
flags for fstps_m32fp: { fpu }
flags for fstpl_m64fp: { fpu }
flags for fstpt_m80fp: { fpu }
flags for fstsw_ax: { fpu }
flags for fsubs_m32fp: { fpu }
flags for fsubl_m64fp: { fpu }
flags for fsubp: { fpu }
flags for fsubrs_m32fp: { fpu }
flags for fsubrl_m64fp: { fpu }
flags for fsubrp: { fpu }
flags for ftst: { fpu }
flags for fucom: { fpu }
flags for fucomp: { fpu }
flags for fucompp: { fpu }
flags for fwait: { fpu }
flags for fxam: { fpu }
flags for fxch: { fpu }
flags for fxtract: { fpu }
flags for fyl2x: { fpu }
flags for fyl2xp1: { fpu }
flags for haddpd_xmm_m128: { pni }
flags for haddpd_xmm_xmm: { pni }
flags for haddps_xmm_m128: { pni }
flags for haddps_xmm_xmm: { pni }
flags for hsubpd_xmm_m128: { pni }
flags for hsubpd_xmm_xmm: { pni }
flags for hsubps_xmm_m128: { pni }
flags for hsubps_xmm_xmm: { pni }
flags for incw_m16: { }
flags for incl_m32: { }
flags for incq_m64: { }
flags for incb_m8: { }
flags for incw_r16: { }
flags for incl_r32: { }
flags for incq_r64: { }
flags for incb_r8: { }
flags for incb_rh: { }
flags for insertps_xmm_m32_imm8: { sse4_1 }
flags for insertps_xmm_xmm_imm8: { sse4_1 }
flags for int_imm8: { }
flags for int_three: { }
flags for lahf: { lahf_lm }
flags for lddqu_xmm_m128: { pni }
flags for leaw_r16_m16: { }
flags for leaw_r16_m32: { }
flags for leaw_r16_m64: { }
flags for leal_r32_m16: { }
flags for leal_r32_m32: { }
flags for leal_r32_m64: { }
flags for leaq_r64_m16: { }
flags for leaq_r64_m32: { }
flags for leaq_r64_m64: { }
flags for lzcntw_r16_m16: { bmi1 }
flags for lzcntw_r16_r16: { bmi1 }
flags for lzcntl_r32_m32: { bmi1 }
flags for lzcntl_r32_r32: { bmi1 }
flags for lzcntq_r64_m64: { bmi1 }
flags for lzcntq_r64_r64: { bmi1 }
flags for maxpd_xmm_m128: { sse2 }
flags for maxpd_xmm_xmm: { sse2 }
flags for maxps_xmm_m128: { sse }
flags for maxps_xmm_xmm: { sse }
flags for maxsd_xmm_m64: { sse2 }
flags for maxsd_xmm_xmm: { sse2 }
flags for maxss_xmm_m32: { sse }
flags for maxss_xmm_xmm: { sse }
flags for minpd_xmm_m128: { sse2 }
flags for minpd_xmm_xmm: { sse2 }
flags for minps_xmm_m128: { sse }
flags for minps_xmm_xmm: { sse }
flags for minsd_xmm_m64: { sse2 }
flags for minsd_xmm_xmm: { sse2 }
flags for minss_xmm_m32: { sse }
flags for minss_xmm_xmm: { sse }
flags for movw_m16_imm16: { }
flags for movw_m16_r16: { }
flags for movl_m32_imm32: { }
flags for movl_m32_r32: { }
flags for movq_m64_imm32: { }
flags for movq_m64_r64: { }
flags for movb_m8_imm8: { }
flags for movb_m8_r8: { }
flags for movb_m8_rh: { }
flags for movw_r16_imm16: { }
flags for movw_r16_imm16_1: { }
flags for movw_r16_m16: { }
flags for movw_r16_r16: { }
flags for movw_r16_r16_1: { }
flags for movl_r32_imm32: { }
flags for movl_r32_imm32_1: { }
flags for movl_r32_m32: { }
flags for movl_r32_r32: { }
flags for movl_r32_r32_1: { }
flags for movq_r64_imm32: { }
flags for movq_r64_imm64: { }
flags for movq_r64_m64: { }
flags for movq_r64_r64: { }
flags for movq_r64_r64_1: { }
flags for movb_r8_imm8: { }
flags for movb_r8_imm8_1: { }
flags for movb_r8_m8: { }
flags for movb_r8_r8: { }
flags for movb_r8_r8_1: { }
flags for movb_r8_rh: { }
flags for movb_r8_rh_1: { }
flags for movb_rh_imm8: { }
flags for movb_rh_imm8_1: { }
flags for movb_rh_m8: { }
flags for movb_rh_r8: { }
flags for movb_rh_r8_1: { }
flags for movb_rh_rh: { }
flags for movb_rh_rh_1: { }
flags for movapd_m128_xmm: { sse2 }
flags for movapd_xmm_m128: { sse2 }
flags for movapd_xmm_xmm: { sse2 }
flags for movapd_xmm_xmm_1: { sse2 }
flags for movaps_m128_xmm: { sse }
flags for movaps_xmm_m128: { sse }
flags for movaps_xmm_xmm: { sse }
flags for movaps_xmm_xmm_1: { sse }
flags for movbew_m16_r16: { movbe }
flags for movbel_m32_r32: { movbe }
flags for movbeq_m64_r64: { movbe }
flags for movbew_r16_m16: { movbe }
flags for movbel_r32_m32: { movbe }
flags for movbeq_r64_m64: { movbe }
flags for movd_m32_mm: { mmx }
flags for movd_m32_xmm: { sse2 }
flags for movd_mm_m32: { mmx }
flags for movd_mm_r32: { mmx }
flags for movd_r32_mm: { mmx }
flags for movd_r32_xmm: { sse2 }
flags for movd_xmm_m32: { sse2 }
flags for movd_xmm_r32: { sse2 }
flags for movddup_xmm_m64: { pni }
flags for movddup_xmm_xmm: { pni }
flags for movdq2q_mm_xmm: { mmx }
flags for movdqa_m128_xmm: { sse2 }
flags for movdqa_xmm_m128: { sse2 }
flags for movdqa_xmm_xmm: { sse2 }
flags for movdqa_xmm_xmm_1: { sse2 }
flags for movdqu_m128_xmm: { sse2 }
flags for movdqu_xmm_m128: { sse2 }
flags for movdqu_xmm_xmm: { sse2 }
flags for movdqu_xmm_xmm_1: { sse2 }
flags for movhlps_xmm_xmm: { sse }
flags for movhpd_m64_xmm: { sse2 }
flags for movhpd_xmm_m64: { sse2 }
flags for movhps_m64_xmm: { sse }
flags for movhps_xmm_m64: { sse }
flags for movlhps_xmm_xmm: { sse }
flags for movlpd_m64_xmm: { sse2 }
flags for movlpd_xmm_m64: { sse2 }
flags for movlps_m64_xmm: { sse }
flags for movlps_xmm_m64: { sse }
flags for movmskpd_r32_xmm: { sse2 }
flags for movmskpd_r64_xmm: { sse2 }
flags for movmskps_r32_xmm: { sse }
flags for movmskps_r64_xmm: { sse }
flags for movntdq_m128_xmm: { sse2 }
flags for movntdq_m256_ymm: { avx }
flags for movntdqa_xmm_m128: { sse4_1 }
flags for movnti_m32_r32: { }
flags for movnti_m64_r64: { }
flags for movntpd_m128_xmm: { sse2 }
flags for movntps_m128_xmm: { sse }
flags for movntq_m64_mm: { }
flags for movq_m64_mm: { mmx }
flags for movq_m64_mm_1: { mmx }
flags for movq_m64_xmm: { sse2 }
flags for movq_m64_xmm_1: { sse2 }
flags for movq_mm_m64: { mmx }
flags for movq_mm_m64_1: { mmx }
flags for movq_mm_mm: { mmx }
flags for movq_mm_mm_1: { mmx }
flags for movq_mm_r64: { mmx }
flags for movq_r64_mm: { mmx }
flags for movq_r64_xmm: { sse2 }
flags for movq_xmm_m64: { sse2 }
flags for movq_xmm_m64_1: { sse2 }
flags for movq_xmm_r64: { sse2 }
flags for movq_xmm_xmm: { sse2 }
flags for movq_xmm_xmm_1: { sse2 }
flags for movq2dq_xmm_mm: { mmx }
flags for movsd_m64_xmm: { sse2 }
flags for movsd_xmm_m64: { sse2 }
flags for movsd_xmm_xmm: { sse2 }
flags for movsd_xmm_xmm_1: { sse2 }
flags for movshdup_xmm_m128: { pni }
flags for movshdup_xmm_xmm: { pni }
flags for movsldup_xmm_m128: { pni }
flags for movsldup_xmm_xmm: { pni }
flags for movss_m32_xmm: { sse }
flags for movss_xmm_m32: { sse }
flags for movss_xmm_xmm: { sse }
flags for movss_xmm_xmm_1: { sse }
flags for movsbw_r16_m8: { }
flags for movsbw_r16_r8: { }
flags for movsbw_r16_rh: { }
flags for movswl_r32_m16: { }
flags for movsbl_r32_m8: { }
flags for movswl_r32_r16: { }
flags for movsbl_r32_r8: { }
flags for movsbl_r32_rh: { }
flags for movswq_r64_m16: { }
flags for movsbq_r64_m8: { }
flags for movswq_r64_r16: { }
flags for movsbq_r64_r8: { }
flags for movslq_r64_m32: { }
flags for movslq_r64_r32: { }
flags for movupd_m128_xmm: { sse2 }
flags for movupd_xmm_m128: { sse2 }
flags for movupd_xmm_xmm: { sse2 }
flags for movupd_xmm_xmm_1: { sse2 }
flags for movups_m128_xmm: { sse }
flags for movups_xmm_m128: { sse }
flags for movups_xmm_xmm: { sse }
flags for movups_xmm_xmm_1: { sse }
flags for movzbw_r16_m8: { }
flags for movzbw_r16_r8: { }
flags for movzbw_r16_rh: { }
flags for movzwl_r32_m16: { }
flags for movzbl_r32_m8: { }
flags for movzwl_r32_r16: { }
flags for movzbl_r32_r8: { }
flags for movzbl_r32_rh: { }
flags for movzwq_r64_m16: { }
flags for movzbq_r64_m8: { }
flags for movzwq_r64_r16: { }
flags for movzbq_r64_r8: { }
flags for mpsadbw_xmm_m128_imm8: { sse4_1 }
flags for mpsadbw_xmm_xmm_imm8: { sse4_1 }
flags for negw_m16: { }
flags for negl_m32: { }
flags for negq_m64: { }
flags for negb_m8: { }
flags for negw_r16: { }
flags for negl_r32: { }
flags for negq_r64: { }
flags for negb_r8: { }
flags for negb_rh: { }
flags for nop: { }
flags for nopw_m16: { nopl }
flags for nopl_m32: { nopl }
flags for nopw_r16: { nopl }
flags for nopl_r32: { nopl }
flags for notw_m16: { }
flags for notl_m32: { }
flags for notq_m64: { }
flags for notb_m8: { }
flags for notw_r16: { }
flags for notl_r32: { }
flags for notq_r64: { }
flags for notb_r8: { }
flags for notb_rh: { }
flags for orb_al_imm8: { }
flags for orw_ax_imm16: { }
flags for orl_eax_imm32: { }
flags for orw_m16_imm16: { }
flags for orw_m16_imm8: { }
flags for orw_m16_r16: { }
flags for orl_m32_imm32: { }
flags for orl_m32_imm8: { }
flags for orl_m32_r32: { }
flags for orq_m64_imm32: { }
flags for orq_m64_imm8: { }
flags for orq_m64_r64: { }
flags for orb_m8_imm8: { }
flags for orb_m8_r8: { }
flags for orb_m8_rh: { }
flags for orw_r16_imm16: { }
flags for orw_r16_imm8: { }
flags for orw_r16_m16: { }
flags for orw_r16_r16: { }
flags for orw_r16_r16_1: { }
flags for orl_r32_imm32: { }
flags for orl_r32_imm8: { }
flags for orl_r32_m32: { }
flags for orl_r32_r32: { }
flags for orl_r32_r32_1: { }
flags for orq_r64_imm32: { }
flags for orq_r64_imm8: { }
flags for orq_r64_m64: { }
flags for orq_r64_r64: { }
flags for orq_r64_r64_1: { }
flags for orb_r8_imm8: { }
flags for orb_r8_m8: { }
flags for orb_r8_r8: { }
flags for orb_r8_r8_1: { }
flags for orb_r8_rh: { }
flags for orb_r8_rh_1: { }
flags for orq_rax_imm32: { }
flags for orb_rh_imm8: { }
flags for orb_rh_m8: { }
flags for orb_rh_r8: { }
flags for orb_rh_r8_1: { }
flags for orb_rh_rh: { }
flags for orb_rh_rh_1: { }
flags for orpd_xmm_m128: { sse2 }
flags for orpd_xmm_xmm: { sse2 }
flags for orps_xmm_m128: { sse }
flags for orps_xmm_xmm: { sse }
flags for pabsb_mm_m64: { ssse3 }
flags for pabsb_mm_mm: { ssse3 }
flags for pabsb_xmm_m128: { ssse3 }
flags for pabsb_xmm_xmm: { ssse3 }
flags for pabsd_mm_m64: { ssse3 }
flags for pabsd_mm_mm: { ssse3 }
flags for pabsd_xmm_m128: { ssse3 }
flags for pabsd_xmm_xmm: { ssse3 }
flags for pabsw_mm_m64: { ssse3 }
flags for pabsw_mm_mm: { ssse3 }
flags for pabsw_xmm_m128: { ssse3 }
flags for pabsw_xmm_xmm: { ssse3 }
flags for packssdw_mm_m64: { mmx }
flags for packssdw_mm_mm: { mmx }
flags for packssdw_xmm_m128: { sse2 }
flags for packssdw_xmm_xmm: { sse2 }
flags for packsswb_mm_m64: { mmx }
flags for packsswb_mm_mm: { mmx }
flags for packsswb_xmm_m128: { sse2 }
flags for packsswb_xmm_xmm: { sse2 }
flags for packusdw_xmm_m128: { sse4_1 }
flags for packusdw_xmm_xmm: { sse4_1 }
flags for packuswb_mm_m64: { mmx }
flags for packuswb_mm_mm: { mmx }
flags for packuswb_xmm_m128: { sse2 }
flags for packuswb_xmm_xmm: { sse2 }
flags for paddb_mm_m64: { mmx }
flags for paddb_mm_mm: { mmx }
flags for paddb_xmm_m128: { sse2 }
flags for paddb_xmm_xmm: { sse2 }
flags for paddd_mm_m64: { mmx }
flags for paddd_mm_mm: { mmx }
flags for paddd_xmm_m128: { sse2 }
flags for paddd_xmm_xmm: { sse2 }
flags for paddq_mm_m64: { sse2 }
flags for paddq_mm_mm: { sse2 }
flags for paddq_xmm_m128: { sse2 }
flags for paddq_xmm_xmm: { sse2 }
flags for paddsb_mm_m64: { mmx }
flags for paddsb_mm_mm: { mmx }
flags for paddsb_xmm_m128: { sse2 }
flags for paddsb_xmm_xmm: { sse2 }
flags for paddsw_mm_m64: { mmx }
flags for paddsw_mm_mm: { mmx }
flags for paddsw_xmm_m128: { sse2 }
flags for paddsw_xmm_xmm: { sse2 }
flags for paddusb_mm_m64: { mmx }
flags for paddusb_mm_mm: { mmx }
flags for paddusb_xmm_m128: { sse2 }
flags for paddusb_xmm_xmm: { sse2 }
flags for paddusw_mm_m64: { mmx }
flags for paddusw_mm_mm: { mmx }
flags for paddusw_xmm_m128: { sse2 }
flags for paddusw_xmm_xmm: { sse2 }
flags for paddw_mm_m64: { mmx }
flags for paddw_mm_mm: { mmx }
flags for paddw_xmm_m128: { sse2 }
flags for paddw_xmm_xmm: { sse2 }
flags for palignr_mm_m64_imm8: { ssse3 }
flags for palignr_mm_mm_imm8: { ssse3 }
flags for palignr_xmm_m128_imm8: { ssse3 }
flags for palignr_xmm_xmm_imm8: { ssse3 }
flags for pand_mm_m64: { mmx }
flags for pand_mm_mm: { mmx }
flags for pand_xmm_m128: { sse2 }
flags for pand_xmm_xmm: { sse2 }
flags for pandn_mm_m64: { mmx }
flags for pandn_mm_mm: { mmx }
flags for pandn_xmm_m128: { sse2 }
flags for pandn_xmm_xmm: { sse2 }
flags for pavgb_mm_m64: { sse }
flags for pavgb_mm_mm: { sse }
flags for pavgb_xmm_m128: { sse2 }
flags for pavgb_xmm_xmm: { sse2 }
flags for pavgw_mm_m64: { sse }
flags for pavgw_mm_mm: { sse }
flags for pavgw_xmm_m128: { sse2 }
flags for pavgw_xmm_xmm: { sse2 }
flags for pblendvb_xmm_m128_xmm0: { sse4_1 }
flags for pblendvb_xmm_xmm_xmm0: { sse4_1 }
flags for pblendw_xmm_m128_imm8: { sse4_1 }
flags for pblendw_xmm_xmm_imm8: { sse4_1 }
flags for pclmulqdq_xmm_m128_imm8: { pclmulqdq }
flags for pclmulqdq_xmm_xmm_imm8: { pclmulqdq }
flags for pcmpeqb_mm_m64: { mmx }
flags for pcmpeqb_mm_mm: { mmx }
flags for pcmpeqb_xmm_m128: { sse2 }
flags for pcmpeqb_xmm_xmm: { sse2 }
flags for pcmpeqd_mm_m64: { mmx }
flags for pcmpeqd_mm_mm: { mmx }
flags for pcmpeqd_xmm_m128: { sse2 }
flags for pcmpeqd_xmm_xmm: { sse2 }
flags for pcmpeqq_xmm_m128: { sse4_1 }
flags for pcmpeqq_xmm_xmm: { sse4_1 }
flags for pcmpeqw_mm_m64: { mmx }
flags for pcmpeqw_mm_mm: { mmx }
flags for pcmpeqw_xmm_m128: { sse2 }
flags for pcmpeqw_xmm_xmm: { sse2 }
flags for pcmpestri_xmm_m128_imm8: { sse4_2 }
flags for pcmpestri_xmm_xmm_imm8: { sse4_2 }
flags for pcmpestrm_xmm_m128_imm8: { sse4_2 }
flags for pcmpestrm_xmm_xmm_imm8: { sse4_2 }
flags for pcmpgtb_mm_m64: { mmx }
flags for pcmpgtb_mm_mm: { mmx }
flags for pcmpgtb_xmm_m128: { sse2 }
flags for pcmpgtb_xmm_xmm: { sse2 }
flags for pcmpgtd_mm_m64: { mmx }
flags for pcmpgtd_mm_mm: { mmx }
flags for pcmpgtd_xmm_m128: { sse2 }
flags for pcmpgtd_xmm_xmm: { sse2 }
flags for pcmpgtq_xmm_m128: { sse4_2 }
flags for pcmpgtq_xmm_xmm: { sse4_2 }
flags for pcmpgtw_mm_m64: { mmx }
flags for pcmpgtw_mm_mm: { mmx }
flags for pcmpgtw_xmm_m128: { sse2 }
flags for pcmpgtw_xmm_xmm: { sse2 }
flags for pcmpistri_xmm_m128_imm8: { sse4_2 }
flags for pcmpistri_xmm_xmm_imm8: { sse4_2 }
flags for pcmpistrm_xmm_m128_imm8: { sse4_2 }
flags for pcmpistrm_xmm_xmm_imm8: { sse4_2 }
flags for pdepl_r32_r32_m32: { bmi2 }
flags for pdepl_r32_r32_r32: { bmi2 }
flags for pdepq_r64_r64_m64: { bmi2 }
flags for pdepq_r64_r64_r64: { bmi2 }
flags for pextl_r32_r32_m32: { bmi2 }
flags for pextl_r32_r32_r32: { bmi2 }
flags for pextq_r64_r64_m64: { bmi2 }
flags for pextq_r64_r64_r64: { bmi2 }
flags for pextrb_m8_xmm_imm8: { sse4_1 }
flags for pextrb_r32_xmm_imm8: { sse4_1 }
flags for pextrb_r64_xmm_imm8: { sse4_1 }
flags for pextrd_m32_xmm_imm8: { sse4_1 }
flags for pextrd_r32_xmm_imm8: { sse4_1 }
flags for pextrq_m64_xmm_imm8: { sse4_1 }
flags for pextrq_r64_xmm_imm8: { sse4_1 }
flags for pextrw_m16_xmm_imm8: { sse4_1 }
flags for pextrw_r32_mm_imm8: { sse }
flags for pextrw_r32_xmm_imm8: { sse2 }
flags for pextrw_r32_xmm_imm8_1: { sse4_1 }
flags for pextrw_r64_mm_imm8: { sse }
flags for pextrw_r64_xmm_imm8: { sse2 }
flags for pextrw_r64_xmm_imm8_1: { sse4_1 }
flags for phaddd_mm_m64: { ssse3 }
flags for phaddd_mm_mm: { ssse3 }
flags for phaddd_xmm_m128: { ssse3 }
flags for phaddd_xmm_xmm: { ssse3 }
flags for phaddsw_mm_m64: { ssse3 }
flags for phaddsw_mm_mm: { ssse3 }
flags for phaddsw_xmm_m128: { ssse3 }
flags for phaddsw_xmm_xmm: { ssse3 }
flags for phaddw_mm_m64: { ssse3 }
flags for phaddw_mm_mm: { ssse3 }
flags for phaddw_xmm_m128: { ssse3 }
flags for phaddw_xmm_xmm: { ssse3 }
flags for phminposuw_xmm_m128: { sse4_1 }
flags for phminposuw_xmm_xmm: { sse4_1 }
flags for phsubd_mm_m64: { ssse3 }
flags for phsubd_mm_mm: { ssse3 }
flags for phsubd_xmm_m128: { ssse3 }
flags for phsubd_xmm_xmm: { ssse3 }
flags for phsubsw_mm_m64: { ssse3 }
flags for phsubsw_mm_mm: { ssse3 }
flags for phsubsw_xmm_m128: { ssse3 }
flags for phsubsw_xmm_xmm: { ssse3 }
flags for phsubw_mm_m64: { ssse3 }
flags for phsubw_mm_mm: { ssse3 }
flags for phsubw_xmm_m128: { ssse3 }
flags for phsubw_xmm_xmm: { ssse3 }
flags for pinsrb_xmm_m8_imm8: { sse4_1 }
flags for pinsrb_xmm_r32_imm8: { sse4_1 }
flags for pinsrd_xmm_m32_imm8: { sse4_1 }
flags for pinsrd_xmm_r32_imm8: { sse4_1 }
flags for pinsrw_mm_m16_imm8: { sse }
flags for pinsrw_mm_r32_imm8: { sse }
flags for pinsrw_xmm_m16_imm8: { sse2 }
flags for pinsrw_xmm_r32_imm8: { sse2 }
flags for pmaddubsw_mm_m64: { mmx ssse3 }
flags for pmaddubsw_mm_mm: { mmx ssse3 }
flags for pmaddubsw_xmm_m128: { ssse3 }
flags for pmaddubsw_xmm_xmm: { ssse3 }
flags for pmaddwd_mm_m64: { mmx }
flags for pmaddwd_mm_mm: { mmx }
flags for pmaddwd_xmm_m128: { sse2 }
flags for pmaddwd_xmm_xmm: { sse2 }
flags for pmaxsb_xmm_m128: { sse4_1 }
flags for pmaxsb_xmm_xmm: { sse4_1 }
flags for pmaxsd_xmm_m128: { sse4_1 }
flags for pmaxsd_xmm_xmm: { sse4_1 }
flags for pmaxsw_mm_m64: { sse }
flags for pmaxsw_mm_mm: { sse }
flags for pmaxsw_xmm_m128: { sse2 }
flags for pmaxsw_xmm_xmm: { sse2 }
flags for pmaxub_mm_m64: { sse }
flags for pmaxub_mm_mm: { sse }
flags for pmaxub_xmm_m128: { sse2 }
flags for pmaxub_xmm_xmm: { sse2 }
flags for pmaxud_xmm_m128: { sse4_1 }
flags for pmaxud_xmm_xmm: { sse4_1 }
flags for pmaxuw_xmm_m128: { sse4_1 }
flags for pmaxuw_xmm_xmm: { sse4_1 }
flags for pminsb_xmm_m128: { sse4_1 }
flags for pminsb_xmm_xmm: { sse4_1 }
flags for pminsd_xmm_m128: { sse4_1 }
flags for pminsd_xmm_xmm: { sse4_1 }
flags for pminsw_mm_m64: { sse }
flags for pminsw_mm_mm: { sse }
flags for pminsw_xmm_m128: { sse2 }
flags for pminsw_xmm_xmm: { sse2 }
flags for pminub_mm_m64: { sse }
flags for pminub_mm_mm: { sse }
flags for pminub_xmm_m128: { sse2 }
flags for pminub_xmm_xmm: { sse2 }
flags for pminud_xmm_m128: { sse4_1 }
flags for pminud_xmm_xmm: { sse4_1 }
flags for pminuw_xmm_m128: { sse4_1 }
flags for pminuw_xmm_xmm: { sse4_1 }
flags for pmovmskb_r32_mm: { sse }
flags for pmovmskb_r32_xmm: { sse2 }
flags for pmovmskb_r64_mm: { sse }
flags for pmovmskb_r64_xmm: { sse2 }
flags for pmovsxbd_xmm_m32: { sse4_1 }
flags for pmovsxbd_xmm_xmm: { sse4_1 }
flags for pmovsxbq_xmm_m16: { sse4_1 }
flags for pmovsxbq_xmm_xmm: { sse4_1 }
flags for pmovsxbw_xmm_m64: { sse4_1 }
flags for pmovsxbw_xmm_xmm: { sse4_1 }
flags for pmovsxdq_xmm_m64: { sse4_1 }
flags for pmovsxdq_xmm_xmm: { sse4_1 }
flags for pmovsxwd_xmm_m64: { sse4_1 }
flags for pmovsxwd_xmm_xmm: { sse4_1 }
flags for pmovsxwq_xmm_m32: { sse4_1 }
flags for pmovsxwq_xmm_xmm: { sse4_1 }
flags for pmovzxbd_xmm_m32: { sse4_1 }
flags for pmovzxbd_xmm_xmm: { sse4_1 }
flags for pmovzxbq_xmm_m16: { sse4_1 }
flags for pmovzxbq_xmm_xmm: { sse4_1 }
flags for pmovzxbw_xmm_m64: { sse4_1 }
flags for pmovzxbw_xmm_xmm: { sse4_1 }
flags for pmovzxdq_xmm_m64: { sse4_1 }
flags for pmovzxdq_xmm_xmm: { sse4_1 }
flags for pmovzxwd_xmm_m64: { sse4_1 }
flags for pmovzxwd_xmm_xmm: { sse4_1 }
flags for pmovzxwq_xmm_m32: { sse4_1 }
flags for pmovzxwq_xmm_xmm: { sse4_1 }
flags for pmuldq_xmm_m128: { sse4_1 }
flags for pmuldq_xmm_xmm: { sse4_1 }
flags for pmulhrsw_mm_m64: { ssse3 }
flags for pmulhrsw_mm_mm: { ssse3 }
flags for pmulhrsw_xmm_m128: { ssse3 }
flags for pmulhrsw_xmm_xmm: { ssse3 }
flags for pmulhuw_mm_m64: { sse }
flags for pmulhuw_mm_mm: { sse }
flags for pmulhuw_xmm_m128: { sse2 }
flags for pmulhuw_xmm_xmm: { sse2 }
flags for pmulhw_mm_m64: { mmx }
flags for pmulhw_mm_mm: { mmx }
flags for pmulhw_xmm_m128: { sse2 }
flags for pmulhw_xmm_xmm: { sse2 }
flags for pmulld_xmm_m128: { sse4_1 }
flags for pmulld_xmm_xmm: { sse4_1 }
flags for pmullw_mm_m64: { mmx }
flags for pmullw_mm_mm: { mmx }
flags for pmullw_xmm_m128: { sse2 }
flags for pmullw_xmm_xmm: { sse2 }
flags for pmuludq_mm_m64: { sse2 }
flags for pmuludq_mm_mm: { sse2 }
flags for pmuludq_xmm_m128: { sse2 }
flags for pmuludq_xmm_xmm: { sse2 }
flags for popw_m16: { }
flags for popq_m64: { }
flags for popw_r16: { }
flags for popw_r16_1: { }
flags for popq_r64: { }
flags for popq_r64_1: { }
flags for popcntw_r16_m16: { popcnt }
flags for popcntw_r16_r16: { popcnt }
flags for popcntl_r32_m32: { popcnt }
flags for popcntl_r32_r32: { popcnt }
flags for popcntq_r64_m64: { popcnt }
flags for popcntq_r64_r64: { popcnt }
flags for popf: { }
flags for popfq: { }
flags for por_mm_m64: { mmx }
flags for por_mm_mm: { mmx }
flags for por_xmm_m128: { sse2 }
flags for por_xmm_xmm: { sse2 }
flags for psadbw_mm_m64: { sse }
flags for psadbw_mm_mm: { sse }
flags for psadbw_xmm_m128: { sse2 }
flags for psadbw_xmm_xmm: { sse2 }
flags for pshufb_mm_m64: { ssse3 }
flags for pshufb_mm_mm: { ssse3 }
flags for pshufb_xmm_m128: { ssse3 }
flags for pshufb_xmm_xmm: { ssse3 }
flags for pshufd_xmm_m128_imm8: { sse2 }
flags for pshufd_xmm_xmm_imm8: { sse2 }
flags for pshufhw_xmm_m128_imm8: { sse2 }
flags for pshufhw_xmm_xmm_imm8: { sse2 }
flags for pshuflw_xmm_m128_imm8: { sse2 }
flags for pshuflw_xmm_xmm_imm8: { sse2 }
flags for pshufw_mm_m64_imm8: { }
flags for pshufw_mm_mm_imm8: { }
flags for psignb_mm_m64: { ssse3 }
flags for psignb_mm_mm: { ssse3 }
flags for psignb_xmm_m128: { ssse3 }
flags for psignb_xmm_xmm: { ssse3 }
flags for psignd_mm_m64: { ssse3 }
flags for psignd_mm_mm: { ssse3 }
flags for psignd_xmm_m128: { ssse3 }
flags for psignd_xmm_xmm: { ssse3 }
flags for psignw_mm_m64: { ssse3 }
flags for psignw_mm_mm: { ssse3 }
flags for psignw_xmm_m128: { ssse3 }
flags for psignw_xmm_xmm: { ssse3 }
flags for pslld_mm_imm8: { mmx }
flags for pslld_mm_m64: { mmx }
flags for pslld_mm_mm: { mmx }
flags for pslld_xmm_imm8: { sse2 }
flags for pslld_xmm_m128: { sse2 }
flags for pslld_xmm_xmm: { sse2 }
flags for pslldq_xmm_imm8: { sse2 }
flags for psllq_mm_imm8: { mmx }
flags for psllq_mm_m64: { mmx }
flags for psllq_mm_mm: { mmx }
flags for psllq_xmm_imm8: { sse2 }
flags for psllq_xmm_m128: { sse2 }
flags for psllq_xmm_xmm: { sse2 }
flags for psllw_mm_imm8: { mmx }
flags for psllw_mm_m64: { mmx }
flags for psllw_mm_mm: { mmx }
flags for psllw_xmm_imm8: { sse2 }
flags for psllw_xmm_m128: { sse2 }
flags for psllw_xmm_xmm: { sse2 }
flags for psrad_mm_imm8: { mmx }
flags for psrad_mm_m64: { mmx }
flags for psrad_mm_mm: { mmx }
flags for psrad_xmm_imm8: { sse2 }
flags for psrad_xmm_m128: { sse2 }
flags for psrad_xmm_xmm: { sse2 }
flags for psraw_mm_imm8: { mmx }
flags for psraw_mm_m64: { mmx }
flags for psraw_mm_mm: { mmx }
flags for psraw_xmm_imm8: { sse2 }
flags for psraw_xmm_m128: { sse2 }
flags for psraw_xmm_xmm: { sse2 }
flags for psrld_mm_imm8: { mmx }
flags for psrld_mm_m64: { mmx }
flags for psrld_mm_mm: { mmx }
flags for psrld_xmm_imm8: { sse2 }
flags for psrld_xmm_m128: { sse2 }
flags for psrld_xmm_xmm: { sse2 }
flags for psrldq_xmm_imm8: { sse2 }
flags for psrlq_mm_imm8: { mmx }
flags for psrlq_mm_m64: { mmx }
flags for psrlq_mm_mm: { mmx }
flags for psrlq_xmm_imm8: { sse2 }
flags for psrlq_xmm_m128: { sse2 }
flags for psrlq_xmm_xmm: { sse2 }
flags for psrlw_mm_imm8: { mmx }
flags for psrlw_mm_m64: { mmx }
flags for psrlw_mm_mm: { mmx }
flags for psrlw_xmm_imm8: { sse2 }
flags for psrlw_xmm_m128: { sse2 }
flags for psrlw_xmm_xmm: { sse2 }
flags for psubb_mm_m64: { mmx }
flags for psubb_mm_mm: { mmx }
flags for psubb_xmm_m128: { sse2 }
flags for psubb_xmm_xmm: { sse2 }
flags for psubd_mm_m64: { mmx }
flags for psubd_mm_mm: { mmx }
flags for psubd_xmm_m128: { sse2 }
flags for psubd_xmm_xmm: { sse2 }
flags for psubq_mm_m64: { sse2 }
flags for psubq_mm_mm: { sse2 }
flags for psubq_xmm_m128: { sse2 }
flags for psubq_xmm_xmm: { sse2 }
flags for psubsb_mm_m64: { mmx }
flags for psubsb_mm_mm: { mmx }
flags for psubsb_xmm_m128: { sse2 }
flags for psubsb_xmm_xmm: { sse2 }
flags for psubsw_mm_m64: { mmx }
flags for psubsw_mm_mm: { mmx }
flags for psubsw_xmm_m128: { sse2 }
flags for psubsw_xmm_xmm: { sse2 }
flags for psubusb_mm_m64: { mmx }
flags for psubusb_mm_mm: { mmx }
flags for psubusb_xmm_m128: { sse2 }
flags for psubusb_xmm_xmm: { sse2 }
flags for psubusw_mm_m64: { mmx }
flags for psubusw_mm_mm: { mmx }
flags for psubusw_xmm_m128: { sse2 }
flags for psubusw_xmm_xmm: { sse2 }
flags for psubw_mm_m64: { mmx }
flags for psubw_mm_mm: { mmx }
flags for psubw_xmm_m128: { sse2 }
flags for psubw_xmm_xmm: { sse2 }
flags for ptest_xmm_m128: { sse4_1 }
flags for ptest_xmm_xmm: { sse4_1 }
flags for punpckhbw_mm_m64: { mmx }
flags for punpckhbw_mm_mm: { mmx }
flags for punpckhbw_xmm_m128: { sse2 }
flags for punpckhbw_xmm_xmm: { sse2 }
flags for punpckhdq_mm_m64: { mmx }
flags for punpckhdq_mm_mm: { mmx }
flags for punpckhdq_xmm_m128: { sse2 }
flags for punpckhdq_xmm_xmm: { sse2 }
flags for punpckhqdq_xmm_m128: { sse2 }
flags for punpckhqdq_xmm_xmm: { sse2 }
flags for punpckhwd_mm_m64: { mmx }
flags for punpckhwd_mm_mm: { mmx }
flags for punpckhwd_xmm_m128: { sse2 }
flags for punpckhwd_xmm_xmm: { sse2 }
flags for punpcklbw_mm_m32: { mmx }
flags for punpcklbw_mm_mm: { mmx }
flags for punpcklbw_xmm_m128: { sse2 }
flags for punpcklbw_xmm_xmm: { sse2 }
flags for punpckldq_mm_m32: { mmx }
flags for punpckldq_mm_mm: { mmx }
flags for punpckldq_xmm_m128: { sse2 }
flags for punpckldq_xmm_xmm: { sse2 }
flags for punpcklqdq_xmm_m128: { sse2 }
flags for punpcklqdq_xmm_xmm: { sse2 }
flags for punpcklwd_mm_m32: { mmx }
flags for punpcklwd_mm_mm: { mmx }
flags for punpcklwd_xmm_m128: { sse2 }
flags for punpcklwd_xmm_xmm: { sse2 }
flags for pushq_imm16: { }
flags for pushq_imm32: { }
flags for pushq_imm8: { }
flags for pushw_m16: { }
flags for pushq_m64: { }
flags for pushw_r16: { }
flags for pushw_r16_1: { }
flags for pushq_r64: { }
flags for pushq_r64_1: { }
flags for pushf: { }
flags for pushfq: { }
flags for pxor_mm_m64: { mmx }
flags for pxor_mm_mm: { mmx }
flags for pxor_xmm_m128: { sse2 }
flags for pxor_xmm_xmm: { sse2 }
flags for rcpps_xmm_m128: { sse }
flags for rcpps_xmm_xmm: { sse }
flags for rcpss_xmm_m32: { sse }
flags for rcpss_xmm_xmm: { sse }
flags for rdrand_r16: { rdrand }
flags for rdrand_r32: { rdrand }
flags for rdrand_r64: { rdrand }
flags for repz scasb_m8_1: { rep_good }
flags for roundpd_xmm_m128_imm8: { sse4_1 }
flags for roundpd_xmm_xmm_imm8: { sse4_1 }
flags for roundps_xmm_m128_imm8: { sse4_1 }
flags for roundps_xmm_xmm_imm8: { sse4_1 }
flags for roundsd_xmm_m64_imm8: { sse4_1 }
flags for roundsd_xmm_xmm_imm8: { sse4_1 }
flags for roundss_xmm_m32_imm8: { sse4_1 }
flags for roundss_xmm_xmm_imm8: { sse4_1 }
flags for rsqrtps_xmm_m128: { sse }
flags for rsqrtps_xmm_xmm: { sse }
flags for rsqrtss_xmm_m32: { sse }
flags for rsqrtss_xmm_xmm: { sse }
flags for sahf: { lahf_lm }
flags for salw_m16_cl: { }
flags for salw_m16_imm8: { }
flags for salw_m16_one: { }
flags for sall_m32_cl: { }
flags for sall_m32_imm8: { }
flags for sall_m32_one: { }
flags for salq_m64_cl: { }
flags for salq_m64_imm8: { }
flags for salq_m64_one: { }
flags for salb_m8_cl: { }
flags for salb_m8_imm8: { }
flags for salb_m8_one: { }
flags for salw_r16_cl: { }
flags for salw_r16_imm8: { }
flags for salw_r16_one: { }
flags for sall_r32_cl: { }
flags for sall_r32_imm8: { }
flags for sall_r32_one: { }
flags for salq_r64_cl: { }
flags for salq_r64_imm8: { }
flags for salq_r64_one: { }
flags for salb_r8_cl: { }
flags for salb_r8_imm8: { }
flags for salb_r8_one: { }
flags for salb_rh_cl: { }
flags for salb_rh_imm8: { }
flags for salb_rh_one: { }
flags for sarw_m16_cl: { }
flags for sarw_m16_imm8: { }
flags for sarw_m16_one: { }
flags for sarl_m32_cl: { }
flags for sarl_m32_imm8: { }
flags for sarl_m32_one: { }
flags for sarq_m64_cl: { }
flags for sarq_m64_imm8: { }
flags for sarq_m64_one: { }
flags for sarb_m8_cl: { }
flags for sarb_m8_imm8: { }
flags for sarb_m8_one: { }
flags for sarw_r16_cl: { }
flags for sarw_r16_imm8: { }
flags for sarw_r16_one: { }
flags for sarl_r32_cl: { }
flags for sarl_r32_imm8: { }
flags for sarl_r32_one: { }
flags for sarq_r64_cl: { }
flags for sarq_r64_imm8: { }
flags for sarq_r64_one: { }
flags for sarb_r8_cl: { }
flags for sarb_r8_imm8: { }
flags for sarb_r8_one: { }
flags for sarb_rh_cl: { }
flags for sarb_rh_imm8: { }
flags for sarb_rh_one: { }
flags for sarxl_r32_m32_r32: { bmi2 }
flags for sarxl_r32_r32_r32: { bmi2 }
flags for sarxq_r64_m64_r64: { bmi2 }
flags for sarxq_r64_r64_r64: { bmi2 }
flags for shlw_m16_cl: { }
flags for shlw_m16_imm8: { }
flags for shlw_m16_one: { }
flags for shll_m32_cl: { }
flags for shll_m32_imm8: { }
flags for shll_m32_one: { }
flags for shlq_m64_cl: { }
flags for shlq_m64_imm8: { }
flags for shlq_m64_one: { }
flags for shlb_m8_cl: { }
flags for shlb_m8_imm8: { }
flags for shlb_m8_one: { }
flags for shlw_r16_cl: { }
flags for shlw_r16_imm8: { }
flags for shlw_r16_one: { }
flags for shll_r32_cl: { }
flags for shll_r32_imm8: { }
flags for shll_r32_one: { }
flags for shlq_r64_cl: { }
flags for shlq_r64_imm8: { }
flags for shlq_r64_one: { }
flags for shlb_r8_cl: { }
flags for shlb_r8_imm8: { }
flags for shlb_r8_one: { }
flags for shlb_rh_cl: { }
flags for shlb_rh_imm8: { }
flags for shlb_rh_one: { }
flags for shldw_m16_r16_cl: { }
flags for shldw_m16_r16_imm8: { }
flags for shldl_m32_r32_cl: { }
flags for shldl_m32_r32_imm8: { }
flags for shldq_m64_r64_cl: { }
flags for shldq_m64_r64_imm8: { }
flags for shldw_r16_r16_cl: { }
flags for shldw_r16_r16_imm8: { }
flags for shldl_r32_r32_cl: { }
flags for shldl_r32_r32_imm8: { }
flags for shldq_r64_r64_cl: { }
flags for shldq_r64_r64_imm8: { }
flags for shlxl_r32_m32_r32: { bmi2 }
flags for shlxl_r32_r32_r32: { bmi2 }
flags for shlxq_r64_m64_r64: { bmi2 }
flags for shlxq_r64_r64_r64: { bmi2 }
flags for shrw_m16_cl: { }
flags for shrw_m16_imm8: { }
flags for shrw_m16_one: { }
flags for shrl_m32_cl: { }
flags for shrl_m32_imm8: { }
flags for shrl_m32_one: { }
flags for shrq_m64_cl: { }
flags for shrq_m64_imm8: { }
flags for shrq_m64_one: { }
flags for shrb_m8_cl: { }
flags for shrb_m8_imm8: { }
flags for shrb_m8_one: { }
flags for shrw_r16_cl: { }
flags for shrw_r16_imm8: { }
flags for shrw_r16_one: { }
flags for shrl_r32_cl: { }
flags for shrl_r32_imm8: { }
flags for shrl_r32_one: { }
flags for shrq_r64_cl: { }
flags for shrq_r64_imm8: { }
flags for shrq_r64_one: { }
flags for shrb_r8_cl: { }
flags for shrb_r8_imm8: { }
flags for shrb_r8_one: { }
flags for shrb_rh_cl: { }
flags for shrb_rh_imm8: { }
flags for shrb_rh_one: { }
flags for shrxl_r32_m32_r32: { bmi2 }
flags for shrxl_r32_r32_r32: { bmi2 }
flags for shrxq_r64_m64_r64: { bmi2 }
flags for shrxq_r64_r64_r64: { bmi2 }
flags for shufpd_xmm_m128_imm8: { sse2 }
flags for shufpd_xmm_xmm_imm8: { sse2 }
flags for shufps_xmm_m128_imm8: { sse }
flags for shufps_xmm_xmm_imm8: { sse }
flags for sqrtpd_xmm_m128: { sse2 }
flags for sqrtpd_xmm_xmm: { sse2 }
flags for sqrtps_xmm_m128: { sse }
flags for sqrtps_xmm_xmm: { sse }
flags for sqrtsd_xmm_m64: { sse2 }
flags for sqrtsd_xmm_xmm: { sse2 }
flags for sqrtss_xmm_m32: { sse }
flags for sqrtss_xmm_xmm: { sse }
flags for sti: { }
flags for subb_al_imm8: { }
flags for subw_ax_imm16: { }
flags for subl_eax_imm32: { }
flags for subw_m16_imm16: { }
flags for subw_m16_imm8: { }
flags for subw_m16_r16: { }
flags for subl_m32_imm32: { }
flags for subl_m32_imm8: { }
flags for subl_m32_r32: { }
flags for subq_m64_imm32: { }
flags for subq_m64_imm8: { }
flags for subq_m64_r64: { }
flags for subb_m8_imm8: { }
flags for subb_m8_r8: { }
flags for subb_m8_rh: { }
flags for subw_r16_imm16: { }
flags for subw_r16_imm8: { }
flags for subw_r16_m16: { }
flags for subw_r16_r16: { }
flags for subw_r16_r16_1: { }
flags for subl_r32_imm32: { }
flags for subl_r32_imm8: { }
flags for subl_r32_m32: { }
flags for subl_r32_r32: { }
flags for subl_r32_r32_1: { }
flags for subq_r64_imm32: { }
flags for subq_r64_imm8: { }
flags for subq_r64_m64: { }
flags for subq_r64_r64: { }
flags for subq_r64_r64_1: { }
flags for subb_r8_imm8: { }
flags for subb_r8_m8: { }
flags for subb_r8_r8: { }
flags for subb_r8_r8_1: { }
flags for subb_r8_rh: { }
flags for subb_r8_rh_1: { }
flags for subq_rax_imm32: { }
flags for subb_rh_imm8: { }
flags for subb_rh_m8: { }
flags for subb_rh_r8: { }
flags for subb_rh_r8_1: { }
flags for subb_rh_rh: { }
flags for subb_rh_rh_1: { }
flags for subpd_xmm_m128: { sse2 }
flags for subpd_xmm_xmm: { sse2 }
flags for subps_xmm_m128: { sse }
flags for subps_xmm_xmm: { sse }
flags for subsd_xmm_m64: { sse2 }
flags for subsd_xmm_xmm: { sse2 }
flags for subss_xmm_m32: { sse }
flags for subss_xmm_xmm: { sse }
flags for tzcntw_r16_m16: { bmi1 }
flags for tzcntw_r16_r16: { bmi1 }
flags for tzcntl_r32_m32: { bmi1 }
flags for tzcntl_r32_r32: { bmi1 }
flags for tzcntq_r64_m64: { bmi1 }
flags for tzcntq_r64_r64: { bmi1 }
flags for ucomisd_xmm_m64: { sse2 }
flags for ucomisd_xmm_xmm: { sse2 }
flags for ucomiss_xmm_m32: { sse }
flags for ucomiss_xmm_xmm: { sse }
flags for unpckhpd_xmm_m128: { sse2 }
flags for unpckhpd_xmm_xmm: { sse2 }
flags for unpckhps_xmm_m128: { sse }
flags for unpckhps_xmm_xmm: { sse }
flags for unpcklpd_xmm_m128: { sse2 }
flags for unpcklpd_xmm_xmm: { sse2 }
flags for unpcklps_xmm_m128: { sse }
flags for unpcklps_xmm_xmm: { sse }
flags for vaddpd_xmm_xmm_m128: { avx }
flags for vaddpd_xmm_xmm_xmm: { avx }
flags for vaddpd_ymm_ymm_m256: { avx }
flags for vaddpd_ymm_ymm_ymm: { avx }
flags for vaddps_xmm_xmm_m128: { avx }
flags for vaddps_xmm_xmm_xmm: { avx }
flags for vaddps_ymm_ymm_m256: { avx }
flags for vaddps_ymm_ymm_ymm: { avx }
flags for vaddsd_xmm_xmm_m64: { avx }
flags for vaddsd_xmm_xmm_xmm: { avx }
flags for vaddss_xmm_xmm_m32: { avx }
flags for vaddss_xmm_xmm_xmm: { avx }
flags for vaddsubpd_xmm_xmm_m128: { avx }
flags for vaddsubpd_xmm_xmm_xmm: { avx }
flags for vaddsubpd_ymm_ymm_m256: { avx }
flags for vaddsubpd_ymm_ymm_ymm: { avx }
flags for vaddsubps_xmm_xmm_m128: { avx }
flags for vaddsubps_xmm_xmm_xmm: { avx }
flags for vaddsubps_ymm_ymm_m256: { avx }
flags for vaddsubps_ymm_ymm_ymm: { avx }
flags for vaesdec_xmm_xmm_m128: { aes avx }
flags for vaesdec_xmm_xmm_xmm: { aes avx }
flags for vaesdeclast_xmm_xmm_m128: { aes avx }
flags for vaesdeclast_xmm_xmm_xmm: { aes avx }
flags for vaesenc_xmm_xmm_m128: { aes avx }
flags for vaesenc_xmm_xmm_xmm: { aes avx }
flags for vaesenclast_xmm_xmm_m128: { aes avx }
flags for vaesenclast_xmm_xmm_xmm: { aes avx }
flags for vaesimc_xmm_m128: { aes avx }
flags for vaesimc_xmm_xmm: { aes avx }
flags for vaeskeygenassist_xmm_m128_imm8: { aes avx }
flags for vaeskeygenassist_xmm_xmm_imm8: { aes avx }
flags for vandnpd_xmm_xmm_m128: { avx }
flags for vandnpd_xmm_xmm_xmm: { avx }
flags for vandnpd_ymm_ymm_m256: { avx }
flags for vandnpd_ymm_ymm_ymm: { avx }
flags for vandnps_xmm_xmm_m128: { avx }
flags for vandnps_xmm_xmm_xmm: { avx }
flags for vandnps_ymm_ymm_m256: { avx }
flags for vandnps_ymm_ymm_ymm: { avx }
flags for vandpd_xmm_xmm_m128: { avx }
flags for vandpd_xmm_xmm_xmm: { avx }
flags for vandpd_ymm_ymm_m256: { avx }
flags for vandpd_ymm_ymm_ymm: { avx }
flags for vandps_xmm_xmm_m128: { avx }
flags for vandps_xmm_xmm_xmm: { avx }
flags for vandps_ymm_ymm_m256: { avx }
flags for vandps_ymm_ymm_ymm: { avx }
flags for vblendpd_xmm_xmm_m128_imm8: { avx }
flags for vblendpd_xmm_xmm_xmm_imm8: { avx }
flags for vblendpd_ymm_ymm_m256_imm8: { avx }
flags for vblendpd_ymm_ymm_ymm_imm8: { avx }
flags for vblendps_xmm_xmm_m128_imm8: { avx }
flags for vblendps_xmm_xmm_xmm_imm8: { avx }
flags for vblendps_ymm_ymm_m256_imm8: { avx }
flags for vblendps_ymm_ymm_ymm_imm8: { avx }
flags for vblendvpd_xmm_xmm_m128_xmm: { avx }
flags for vblendvpd_xmm_xmm_xmm_xmm: { avx }
flags for vblendvpd_ymm_ymm_m256_ymm: { avx }
flags for vblendvpd_ymm_ymm_ymm_ymm: { avx }
flags for vblendvps_xmm_xmm_m128_xmm: { avx }
flags for vblendvps_xmm_xmm_xmm_xmm: { avx }
flags for vblendvps_ymm_ymm_m256_ymm: { avx }
flags for vblendvps_ymm_ymm_ymm_ymm: { avx }
flags for vbroadcastf128_ymm_m128: { avx }
flags for vpbroadcasti128_ymm_m128: { avx2 }
flags for vbroadcastsd_ymm_m64: { avx }
flags for vbroadcastsd_ymm_xmm: { avx2 }
flags for vbroadcastss_xmm_m32: { avx }
flags for vbroadcastss_xmm_xmm: { avx2 }
flags for vbroadcastss_ymm_m32: { avx }
flags for vbroadcastss_ymm_xmm: { avx2 }
flags for vcmppd_xmm_xmm_m128_imm8: { avx }
flags for vcmppd_xmm_xmm_xmm_imm8: { avx }
flags for vcmppd_ymm_ymm_m256_imm8: { avx }
flags for vcmppd_ymm_ymm_ymm_imm8: { avx }
flags for vcmpps_xmm_xmm_m128_imm8: { avx }
flags for vcmpps_xmm_xmm_xmm_imm8: { avx }
flags for vcmpps_ymm_ymm_m256_imm8: { avx }
flags for vcmpps_ymm_ymm_ymm_imm8: { avx }
flags for vcmpsd_xmm_xmm_m64_imm8: { avx }
flags for vcmpsd_xmm_xmm_xmm_imm8: { avx }
flags for vcmpss_xmm_xmm_m32_imm8: { avx }
flags for vcmpss_xmm_xmm_xmm_imm8: { avx }
flags for vcomisd_xmm_m64: { avx }
flags for vcomisd_xmm_xmm: { avx }
flags for vcomiss_xmm_m32: { avx }
flags for vcomiss_xmm_xmm: { avx }
flags for vcvtdq2pd_xmm_m64: { avx }
flags for vcvtdq2pd_xmm_xmm: { avx }
flags for vcvtdq2pd_ymm_m128: { avx }
flags for vcvtdq2pd_ymm_ymm: { avx }
flags for vcvtdq2ps_xmm_m128: { avx }
flags for vcvtdq2ps_xmm_xmm: { avx }
flags for vcvtdq2ps_ymm_m256: { avx }
flags for vcvtdq2ps_ymm_ymm: { avx }
flags for vcvtpd2dqx_xmm_m128: { avx }
flags for vcvtpd2dq_xmm_m256: { avx }
flags for vcvtpd2dqx_xmm_xmm: { avx }
flags for vcvtpd2dq_xmm_ymm: { avx }
flags for vcvtpd2ps_xmm_m128: { avx }
flags for vcvtpd2ps_xmm_m256: { avx }
flags for vcvtpd2ps_xmm_xmm: { avx }
flags for vcvtpd2ps_xmm_ymm: { avx }
flags for vcvtph2ps_xmm_m64: { f16c }
flags for vcvtph2ps_xmm_xmm: { f16c }
flags for vcvtph2ps_ymm_m128: { f16c }
flags for vcvtph2ps_ymm_xmm: { f16c }
flags for vcvtps2dq_xmm_m128: { avx }
flags for vcvtps2dq_xmm_xmm: { avx }
flags for vcvtps2dq_ymm_m256: { avx }
flags for vcvtps2dq_ymm_ymm: { avx }
flags for vcvtps2pd_xmm_m64: { avx }
flags for vcvtps2pd_xmm_xmm: { avx }
flags for vcvtps2pd_ymm_m128: { avx }
flags for vcvtps2pd_ymm_xmm: { avx }
flags for vcvtps2ph_m128_ymm_imm8: { f16c }
flags for vcvtps2ph_m64_xmm_imm8: { f16c }
flags for vcvtps2ph_xmm_xmm_imm8: { f16c }
flags for vcvtps2ph_xmm_ymm_imm8: { f16c }
flags for vcvtsd2sil_r32_m64: { avx }
flags for vcvtsd2sil_r32_xmm: { avx }
flags for vcvtsd2siq_r64_m64: { avx }
flags for vcvtsd2siq_r64_xmm: { avx }
flags for vcvtsd2ss_xmm_xmm_m64: { avx }
flags for vcvtsd2ss_xmm_xmm_xmm: { avx }
flags for vcvtsi2sdl_xmm_xmm_m32: { avx }
flags for vcvtsi2sdq_xmm_xmm_m64: { avx }
flags for vcvtsi2sdl_xmm_xmm_r32: { avx }
flags for vcvtsi2sdq_xmm_xmm_r64: { avx }
flags for vcvtsi2ssl_xmm_xmm_m32: { avx }
flags for vcvtsi2ssq_xmm_xmm_m64: { avx }
flags for vcvtsi2ssl_xmm_xmm_r32: { avx }
flags for vcvtsi2ssq_xmm_xmm_r64: { avx }
flags for vcvtss2sd_xmm_xmm_m32: { avx }
flags for vcvtss2sd_xmm_xmm_xmm: { avx }
flags for vcvtss2sil_r32_m32: { avx }
flags for vcvtss2sil_r32_xmm: { avx }
flags for vcvtss2siq_r64_m32: { avx }
flags for vcvtss2siq_r64_xmm: { avx }
flags for vcvttpd2dq_xmm_m128: { avx }
flags for vcvttpd2dq_xmm_m256: { avx }
flags for vcvttpd2dq_xmm_xmm: { avx }
flags for vcvttpd2dq_xmm_ymm: { avx }
flags for vcvttps2dq_xmm_m128: { avx }
flags for vcvttps2dq_xmm_xmm: { avx }
flags for vcvttps2dq_ymm_m256: { avx }
flags for vcvttps2dq_ymm_ymm: { avx }
flags for vcvttsd2sil_r32_m64: { avx }
flags for vcvttsd2sil_r32_xmm: { avx }
flags for vcvttsd2siq_r64_m64: { avx }
flags for vcvttsd2siq_r64_xmm: { avx }
flags for vcvttss2sil_r32_m32: { avx }
flags for vcvttss2sil_r32_xmm: { avx }
flags for vcvttss2siq_r64_m32: { avx }
flags for vcvttss2siq_r64_xmm: { avx }
flags for vdivpd_xmm_xmm_m128: { avx }
flags for vdivpd_xmm_xmm_xmm: { avx }
flags for vdivpd_ymm_ymm_m256: { avx }
flags for vdivpd_ymm_ymm_ymm: { avx }
flags for vdivps_xmm_xmm_m128: { avx }
flags for vdivps_xmm_xmm_xmm: { avx }
flags for vdivps_ymm_ymm_m256: { avx }
flags for vdivps_ymm_ymm_ymm: { avx }
flags for vdivsd_xmm_xmm_m64: { avx }
flags for vdivsd_xmm_xmm_xmm: { avx }
flags for vdivss_xmm_xmm_m32: { avx }
flags for vdivss_xmm_xmm_xmm: { avx }
flags for vdppd_xmm_xmm_m128_imm8: { avx }
flags for vdppd_xmm_xmm_xmm_imm8: { avx }
flags for vdpps_xmm_xmm_m128_imm8: { avx }
flags for vdpps_xmm_xmm_xmm_imm8: { avx }
flags for vdpps_ymm_ymm_m256_imm8: { avx }
flags for vdpps_ymm_ymm_ymm_imm8: { avx }
flags for vextractf128_m128_ymm_imm8: { avx }
flags for vextractf128_xmm_ymm_imm8: { avx }
flags for vextracti128_m128_ymm_imm8: { avx2 }
flags for vextracti128_xmm_ymm_imm8: { avx2 }
flags for vextractps_m32_xmm_imm8: { avx }
flags for vextractps_r32_xmm_imm8: { avx }
flags for vfmadd132pd_xmm_xmm_m128: { fma }
flags for vfmadd132pd_xmm_xmm_xmm: { fma }
flags for vfmadd132pd_ymm_ymm_m256: { fma }
flags for vfmadd132pd_ymm_ymm_ymm: { fma }
flags for vfmadd132ps_xmm_xmm_m128: { fma }
flags for vfmadd132ps_xmm_xmm_xmm: { fma }
flags for vfmadd132ps_ymm_ymm_m256: { fma }
flags for vfmadd132ps_ymm_ymm_ymm: { fma }
flags for vfmadd132sd_xmm_xmm_m64: { fma }
flags for vfmadd132sd_xmm_xmm_xmm: { fma }
flags for vfmadd132ss_xmm_xmm_m32: { fma }
flags for vfmadd132ss_xmm_xmm_xmm: { fma }
flags for vfmadd213pd_xmm_xmm_m128: { fma }
flags for vfmadd213pd_xmm_xmm_xmm: { fma }
flags for vfmadd213pd_ymm_ymm_m256: { fma }
flags for vfmadd213pd_ymm_ymm_ymm: { fma }
flags for vfmadd213ps_xmm_xmm_m128: { fma }
flags for vfmadd213ps_xmm_xmm_xmm: { fma }
flags for vfmadd213ps_ymm_ymm_m256: { fma }
flags for vfmadd213ps_ymm_ymm_ymm: { fma }
flags for vfmadd213sd_xmm_xmm_m64: { fma }
flags for vfmadd213sd_xmm_xmm_xmm: { fma }
flags for vfmadd213ss_xmm_xmm_m32: { fma }
flags for vfmadd213ss_xmm_xmm_xmm: { fma }
flags for vfmadd231pd_xmm_xmm_m128: { fma }
flags for vfmadd231pd_xmm_xmm_xmm: { fma }
flags for vfmadd231pd_ymm_ymm_m256: { fma }
flags for vfmadd231pd_ymm_ymm_ymm: { fma }
flags for vfmadd231ps_xmm_xmm_m128: { fma }
flags for vfmadd231ps_xmm_xmm_xmm: { fma }
flags for vfmadd231ps_ymm_ymm_m256: { fma }
flags for vfmadd231ps_ymm_ymm_ymm: { fma }
flags for vfmadd231sd_xmm_xmm_m64: { fma }
flags for vfmadd231sd_xmm_xmm_xmm: { fma }
flags for vfmadd231ss_xmm_xmm_m32: { fma }
flags for vfmadd231ss_xmm_xmm_xmm: { fma }
flags for vfmaddsub132pd_xmm_xmm_m128: { fma }
flags for vfmaddsub132pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub132pd_ymm_ymm_m256: { fma }
flags for vfmaddsub132pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub132ps_xmm_xmm_m128: { fma }
flags for vfmaddsub132ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub132ps_ymm_ymm_m256: { fma }
flags for vfmaddsub132ps_ymm_ymm_ymm: { fma }
flags for vfmaddsub213pd_xmm_xmm_m128: { fma }
flags for vfmaddsub213pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub213pd_ymm_ymm_m256: { fma }
flags for vfmaddsub213pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub213ps_xmm_xmm_m128: { fma }
flags for vfmaddsub213ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub213ps_ymm_ymm_m256: { fma }
flags for vfmaddsub213ps_ymm_ymm_ymm: { fma }
flags for vfmaddsub231pd_xmm_xmm_m128: { fma }
flags for vfmaddsub231pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub231pd_ymm_ymm_m256: { fma }
flags for vfmaddsub231pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub231ps_xmm_xmm_m128: { fma }
flags for vfmaddsub231ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub231ps_ymm_ymm_m256: { fma }
flags for vfmaddsub231ps_ymm_ymm_ymm: { fma }
flags for vfmsub132pd_xmm_xmm_m128: { fma }
flags for vfmsub132pd_xmm_xmm_xmm: { fma }
flags for vfmsub132pd_ymm_ymm_m256: { fma }
flags for vfmsub132pd_ymm_ymm_ymm: { fma }
flags for vfmsub132ps_xmm_xmm_m128: { fma }
flags for vfmsub132ps_xmm_xmm_xmm: { fma }
flags for vfmsub132ps_ymm_ymm_m256: { fma }
flags for vfmsub132ps_ymm_ymm_ymm: { fma }
flags for vfmsub132sd_xmm_xmm_m64: { fma }
flags for vfmsub132sd_xmm_xmm_xmm: { fma }
flags for vfmsub132ss_xmm_xmm_m32: { fma }
flags for vfmsub132ss_xmm_xmm_xmm: { fma }
flags for vfmsub213pd_xmm_xmm_m128: { fma }
flags for vfmsub213pd_xmm_xmm_xmm: { fma }
flags for vfmsub213pd_ymm_ymm_m256: { fma }
flags for vfmsub213pd_ymm_ymm_ymm: { fma }
flags for vfmsub213ps_xmm_xmm_m128: { fma }
flags for vfmsub213ps_xmm_xmm_xmm: { fma }
flags for vfmsub213ps_ymm_ymm_m256: { fma }
flags for vfmsub213ps_ymm_ymm_ymm: { fma }
flags for vfmsub213sd_xmm_xmm_m64: { fma }
flags for vfmsub213sd_xmm_xmm_xmm: { fma }
flags for vfmsub213ss_xmm_xmm_m32: { fma }
flags for vfmsub213ss_xmm_xmm_xmm: { fma }
flags for vfmsub231pd_xmm_xmm_m128: { fma }
flags for vfmsub231pd_xmm_xmm_xmm: { fma }
flags for vfmsub231pd_ymm_ymm_m256: { fma }
flags for vfmsub231pd_ymm_ymm_ymm: { fma }
flags for vfmsub231ps_xmm_xmm_m128: { fma }
flags for vfmsub231ps_xmm_xmm_xmm: { fma }
flags for vfmsub231ps_ymm_ymm_m256: { fma }
flags for vfmsub231ps_ymm_ymm_ymm: { fma }
flags for vfmsub231sd_xmm_xmm_m64: { fma }
flags for vfmsub231sd_xmm_xmm_xmm: { fma }
flags for vfmsub231ss_xmm_xmm_m32: { fma }
flags for vfmsub231ss_xmm_xmm_xmm: { fma }
flags for vfmsubadd132pd_xmm_xmm_m128: { fma }
flags for vfmsubadd132pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd132pd_ymm_ymm_m256: { fma }
flags for vfmsubadd132pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd132ps_xmm_xmm_m128: { fma }
flags for vfmsubadd132ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd132ps_ymm_ymm_m256: { fma }
flags for vfmsubadd132ps_ymm_ymm_ymm: { fma }
flags for vfmsubadd213pd_xmm_xmm_m128: { fma }
flags for vfmsubadd213pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd213pd_ymm_ymm_m256: { fma }
flags for vfmsubadd213pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd213ps_xmm_xmm_m128: { fma }
flags for vfmsubadd213ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd213ps_ymm_ymm_m256: { fma }
flags for vfmsubadd213ps_ymm_ymm_ymm: { fma }
flags for vfmsubadd231pd_xmm_xmm_m128: { fma }
flags for vfmsubadd231pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd231pd_ymm_ymm_m256: { fma }
flags for vfmsubadd231pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd231ps_xmm_xmm_m128: { fma }
flags for vfmsubadd231ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd231ps_ymm_ymm_m256: { fma }
flags for vfmsubadd231ps_ymm_ymm_ymm: { fma }
flags for vfnmadd132pd_xmm_xmm_m128: { fma }
flags for vfnmadd132pd_xmm_xmm_xmm: { fma }
flags for vfnmadd132pd_ymm_ymm_m256: { fma }
flags for vfnmadd132pd_ymm_ymm_ymm: { fma }
flags for vfnmadd132ps_xmm_xmm_m128: { fma }
flags for vfnmadd132ps_xmm_xmm_xmm: { fma }
flags for vfnmadd132ps_ymm_ymm_m256: { fma }
flags for vfnmadd132ps_ymm_ymm_ymm: { fma }
flags for vfnmadd132sd_xmm_xmm_m64: { fma }
flags for vfnmadd132sd_xmm_xmm_xmm: { fma }
flags for vfnmadd132ss_xmm_xmm_m32: { fma }
flags for vfnmadd132ss_xmm_xmm_xmm: { fma }
flags for vfnmadd213pd_xmm_xmm_m128: { fma }
flags for vfnmadd213pd_xmm_xmm_xmm: { fma }
flags for vfnmadd213pd_ymm_ymm_m256: { fma }
flags for vfnmadd213pd_ymm_ymm_ymm: { fma }
flags for vfnmadd213ps_xmm_xmm_m128: { fma }
flags for vfnmadd213ps_xmm_xmm_xmm: { fma }
flags for vfnmadd213ps_ymm_ymm_m256: { fma }
flags for vfnmadd213ps_ymm_ymm_ymm: { fma }
flags for vfnmadd213sd_xmm_xmm_m64: { fma }
flags for vfnmadd213sd_xmm_xmm_xmm: { fma }
flags for vfnmadd213ss_xmm_xmm_m32: { fma }
flags for vfnmadd213ss_xmm_xmm_xmm: { fma }
flags for vfnmadd231pd_xmm_xmm_m128: { fma }
flags for vfnmadd231pd_xmm_xmm_xmm: { fma }
flags for vfnmadd231pd_ymm_ymm_m256: { fma }
flags for vfnmadd231pd_ymm_ymm_ymm: { fma }
flags for vfnmadd231ps_xmm_xmm_m128: { fma }
flags for vfnmadd231ps_xmm_xmm_xmm: { fma }
flags for vfnmadd231ps_ymm_ymm_m256: { fma }
flags for vfnmadd231ps_ymm_ymm_ymm: { fma }
flags for vfnmadd231sd_xmm_xmm_m64: { fma }
flags for vfnmadd231sd_xmm_xmm_xmm: { fma }
flags for vfnmadd231ss_xmm_xmm_m32: { fma }
flags for vfnmadd231ss_xmm_xmm_xmm: { fma }
flags for vfnmsub132pd_xmm_xmm_m128: { fma }
flags for vfnmsub132pd_xmm_xmm_xmm: { fma }
flags for vfnmsub132pd_ymm_ymm_m256: { fma }
flags for vfnmsub132pd_ymm_ymm_ymm: { fma }
flags for vfnmsub132ps_xmm_xmm_m128: { fma }
flags for vfnmsub132ps_xmm_xmm_xmm: { fma }
flags for vfnmsub132ps_ymm_ymm_m256: { fma }
flags for vfnmsub132ps_ymm_ymm_ymm: { fma }
flags for vfnmsub132sd_xmm_xmm_m64: { fma }
flags for vfnmsub132sd_xmm_xmm_xmm: { fma }
flags for vfnmsub132ss_xmm_xmm_m32: { fma }
flags for vfnmsub132ss_xmm_xmm_xmm: { fma }
flags for vfnmsub213pd_xmm_xmm_m128: { fma }
flags for vfnmsub213pd_xmm_xmm_xmm: { fma }
flags for vfnmsub213pd_ymm_ymm_m256: { fma }
flags for vfnmsub213pd_ymm_ymm_ymm: { fma }
flags for vfnmsub213ps_xmm_xmm_m128: { fma }
flags for vfnmsub213ps_xmm_xmm_xmm: { fma }
flags for vfnmsub213ps_ymm_ymm_m256: { fma }
flags for vfnmsub213ps_ymm_ymm_ymm: { fma }
flags for vfnmsub213sd_xmm_xmm_m64: { fma }
flags for vfnmsub213sd_xmm_xmm_xmm: { fma }
flags for vfnmsub213ss_xmm_xmm_m32: { fma }
flags for vfnmsub213ss_xmm_xmm_xmm: { fma }
flags for vfnmsub231pd_xmm_xmm_m128: { fma }
flags for vfnmsub231pd_xmm_xmm_xmm: { fma }
flags for vfnmsub231pd_ymm_ymm_m256: { fma }
flags for vfnmsub231pd_ymm_ymm_ymm: { fma }
flags for vfnmsub231ps_xmm_xmm_m128: { fma }
flags for vfnmsub231ps_xmm_xmm_xmm: { fma }
flags for vfnmsub231ps_ymm_ymm_m256: { fma }
flags for vfnmsub231ps_ymm_ymm_ymm: { fma }
flags for vfnmsub231sd_xmm_xmm_m64: { fma }
flags for vfnmsub231sd_xmm_xmm_xmm: { fma }
flags for vfnmsub231ss_xmm_xmm_m32: { fma }
flags for vfnmsub231ss_xmm_xmm_xmm: { fma }
flags for vgatherdpd_xmm_m32_xmm: { avx2 }
flags for vgatherdpd_ymm_m32_ymm: { avx2 }
flags for vgatherdps_xmm_m32_xmm: { avx2 }
flags for vgatherdps_ymm_m32_ymm: { avx2 }
flags for vgatherqpd_xmm_m64_xmm: { avx2 }
flags for vgatherqpd_ymm_m64_ymm: { avx2 }
flags for vgatherqps_xmm_m64_xmm: { avx2 }
flags for vgatherqps_xmm_m64_xmm_1: { avx2 }
flags for vhaddpd_xmm_xmm_m128: { avx }
flags for vhaddpd_xmm_xmm_xmm: { avx }
flags for vhaddpd_ymm_ymm_m256: { avx }
flags for vhaddpd_ymm_ymm_ymm: { avx }
flags for vhaddps_xmm_xmm_m128: { avx }
flags for vhaddps_xmm_xmm_xmm: { avx }
flags for vhaddps_ymm_ymm_m256: { avx }
flags for vhaddps_ymm_ymm_ymm: { avx }
flags for vhsubpd_xmm_xmm_m128: { avx }
flags for vhsubpd_xmm_xmm_xmm: { avx }
flags for vhsubpd_ymm_ymm_m256: { avx }
flags for vhsubpd_ymm_ymm_ymm: { avx }
flags for vhsubps_xmm_xmm_m128: { avx }
flags for vhsubps_xmm_xmm_xmm: { avx }
flags for vhsubps_ymm_ymm_m256: { avx }
flags for vhsubps_ymm_ymm_ymm: { avx }
flags for vinsertf128_ymm_ymm_m128_imm8: { avx }
flags for vinsertf128_ymm_ymm_xmm_imm8: { avx }
flags for vinserti128_ymm_ymm_m128_imm8: { avx2 }
flags for vinserti128_ymm_ymm_xmm_imm8: { avx2 }
flags for vinsertps_xmm_xmm_m32_imm8: { avx }
flags for vinsertps_xmm_xmm_xmm_imm8: { avx }
flags for vlddqu_xmm_m128: { avx }
flags for vlddqu_ymm_m256: { avx }
flags for vmaskmovpd_m128_xmm_xmm: { avx }
flags for vmaskmovpd_m256_ymm_ymm: { avx }
flags for vmaskmovpd_xmm_xmm_m128: { avx }
flags for vmaskmovpd_ymm_ymm_m256: { avx }
flags for vmaskmovps_m128_xmm_xmm: { avx }
flags for vmaskmovps_m256_ymm_ymm: { avx }
flags for vmaskmovps_xmm_xmm_m128: { avx }
flags for vmaskmovps_ymm_ymm_m256: { avx }
flags for vmaxpd_xmm_xmm_m128: { avx }
flags for vmaxpd_xmm_xmm_xmm: { avx }
flags for vmaxpd_ymm_ymm_m256: { avx }
flags for vmaxpd_ymm_ymm_ymm: { avx }
flags for vmaxps_xmm_xmm_m128: { avx }
flags for vmaxps_xmm_xmm_xmm: { avx }
flags for vmaxps_ymm_ymm_m256: { avx }
flags for vmaxps_ymm_ymm_ymm: { avx }
flags for vmaxsd_xmm_xmm_m64: { avx }
flags for vmaxsd_xmm_xmm_xmm: { avx }
flags for vmaxss_xmm_xmm_m32: { avx }
flags for vmaxss_xmm_xmm_xmm: { avx }
flags for vminpd_xmm_xmm_m128: { avx }
flags for vminpd_xmm_xmm_xmm: { avx }
flags for vminpd_ymm_ymm_m256: { avx }
flags for vminpd_ymm_ymm_ymm: { avx }
flags for vminps_xmm_xmm_m128: { avx }
flags for vminps_xmm_xmm_xmm: { avx }
flags for vminps_ymm_ymm_m256: { avx }
flags for vminps_ymm_ymm_ymm: { avx }
flags for vminsd_xmm_xmm_m64: { avx }
flags for vminsd_xmm_xmm_xmm: { avx }
flags for vminss_xmm_xmm_m32: { avx }
flags for vminss_xmm_xmm_xmm: { avx }
flags for vmovapd_m128_xmm: { avx }
flags for vmovapd_m256_ymm: { avx }
flags for vmovapd_xmm_m128: { avx }
flags for vmovapd_xmm_xmm: { avx }
flags for vmovapd_xmm_xmm_1: { avx }
flags for vmovapd_ymm_m256: { avx }
flags for vmovapd_ymm_ymm: { avx }
flags for vmovapd_ymm_ymm_1: { avx }
flags for vmovaps_m128_xmm: { avx }
flags for vmovaps_m256_ymm: { avx }
flags for vmovaps_xmm_m128: { avx }
flags for vmovaps_xmm_xmm: { avx }
flags for vmovaps_xmm_xmm_1: { avx }
flags for vmovaps_ymm_m256: { avx }
flags for vmovaps_ymm_ymm: { avx }
flags for vmovaps_ymm_ymm_1: { avx }
flags for vmovd_m32_xmm: { avx }
flags for vmovd_r32_xmm: { avx }
flags for vmovd_xmm_m32: { avx }
flags for vmovd_xmm_r32: { avx }
flags for vmovddup_xmm_m64: { avx }
flags for vmovddup_xmm_xmm: { avx }
flags for vmovddup_ymm_m256: { avx }
flags for vmovddup_ymm_ymm: { avx }
flags for vmovdqa_m128_xmm: { avx }
flags for vmovdqa_m256_ymm: { avx }
flags for vmovdqa_xmm_m128: { avx }
flags for vmovdqa_xmm_xmm: { avx }
flags for vmovdqa_xmm_xmm_1: { avx }
flags for vmovdqa_ymm_m256: { avx }
flags for vmovdqa_ymm_ymm: { avx }
flags for vmovdqa_ymm_ymm_1: { avx }
flags for vmovdqu_m128_xmm: { avx }
flags for vmovdqu_m256_ymm: { avx }
flags for vmovdqu_xmm_m128: { avx }
flags for vmovdqu_xmm_xmm: { avx }
flags for vmovdqu_xmm_xmm_1: { avx }
flags for vmovdqu_ymm_m256: { avx }
flags for vmovdqu_ymm_ymm: { avx }
flags for vmovdqu_ymm_ymm_1: { avx }
flags for vmovhlps_xmm_xmm_xmm: { avx }
flags for vmovhpd_m64_xmm: { avx }
flags for vmovhpd_xmm_xmm_m64: { avx }
flags for vmovhps_m64_xmm: { avx }
flags for vmovhps_xmm_xmm_m64: { avx }
flags for vmovlhps_xmm_xmm_xmm: { avx }
flags for vmovlpd_m64_xmm: { avx }
flags for vmovlpd_xmm_xmm_m64: { avx }
flags for vmovlps_m64_xmm: { avx }
flags for vmovlps_xmm_xmm_m64: { avx }
flags for vmovmskpd_r32_xmm: { avx }
flags for vmovmskpd_r32_ymm: { avx }
flags for vmovmskpd_r64_xmm: { avx }
flags for vmovmskpd_r64_ymm: { avx }
flags for vmovmskps_r32_xmm: { avx }
flags for vmovmskps_r32_ymm: { avx }
flags for vmovmskps_r64_xmm: { avx }
flags for vmovmskps_r64_ymm: { avx }
flags for vmovntdqa_m128_xmm: { avx }
flags for vmovntdqa_xmm_m128: { avx }
flags for vmovntdqa_ymm_m256: { avx2 }
flags for vmovntpd_m128_xmm: { avx }
flags for vmovntpd_m256_ymm: { avx }
flags for vmovntps_m128_xmm: { avx }
flags for vmovntps_m256_ymm: { avx }
flags for vmovq_m64_xmm: { avx }
flags for vmovq_m64_xmm_1: { avx }
flags for vmovq_r64_xmm: { avx }
flags for vmovq_xmm_m64: { avx }
flags for vmovq_xmm_m64_1: { avx }
flags for vmovq_xmm_r64: { avx }
flags for vmovq_xmm_xmm: { avx }
flags for vmovq_xmm_xmm_1: { avx }
flags for vmovsd_m64_xmm: { avx }
flags for vmovsd_xmm_m64: { avx }
flags for vmovsd_xmm_xmm_xmm: { avx }
flags for vmovsd_xmm_xmm_xmm_1: { avx }
flags for vmovshdup_xmm_m128: { avx }
flags for vmovshdup_xmm_xmm: { avx }
flags for vmovshdup_ymm_m256: { avx }
flags for vmovshdup_ymm_ymm: { avx }
flags for vmovsldup_xmm_m128: { avx }
flags for vmovsldup_xmm_xmm: { avx }
flags for vmovsldup_ymm_m256: { avx }
flags for vmovsldup_ymm_ymm: { avx }
flags for vmovss_m32_xmm: { avx }
flags for vmovss_xmm_m32: { avx }
flags for vmovss_xmm_xmm_xmm: { avx }
flags for vmovss_xmm_xmm_xmm_1: { avx }
flags for vmovupd_m128_xmm: { avx }
flags for vmovupd_m256_ymm: { avx }
flags for vmovupd_xmm_m128: { avx }
flags for vmovupd_xmm_xmm: { avx }
flags for vmovupd_xmm_xmm_1: { avx }
flags for vmovupd_ymm_m256: { avx }
flags for vmovupd_ymm_ymm: { avx }
flags for vmovupd_ymm_ymm_1: { avx }
flags for vmovups_m128_xmm: { avx }
flags for vmovups_m256_ymm: { avx }
flags for vmovups_xmm_m128: { avx }
flags for vmovups_xmm_xmm: { avx }
flags for vmovups_xmm_xmm_1: { avx }
flags for vmovups_ymm_m256: { avx }
flags for vmovups_ymm_ymm: { avx }
flags for vmovups_ymm_ymm_1: { avx }
flags for vmpsadbw_xmm_xmm_m128_imm8: { avx }
flags for vmpsadbw_xmm_xmm_xmm_imm8: { avx }
flags for vmpsadbw_ymm_ymm_m256_imm8: { avx2 }
flags for vmpsadbw_ymm_ymm_ymm_imm8: { avx2 }
flags for vmulpd_xmm_xmm_m128: { avx }
flags for vmulpd_xmm_xmm_xmm: { avx }
flags for vmulpd_ymm_ymm_m256: { avx }
flags for vmulpd_ymm_ymm_ymm: { avx }
flags for vmulps_xmm_xmm_m128: { avx }
flags for vmulps_xmm_xmm_xmm: { avx }
flags for vmulps_ymm_ymm_m256: { avx }
flags for vmulps_ymm_ymm_ymm: { avx }
flags for vmulsd_xmm_xmm_m64: { avx }
flags for vmulsd_xmm_xmm_xmm: { avx }
flags for vmulss_xmm_xmm_m32: { avx }
flags for vmulss_xmm_xmm_xmm: { avx }
flags for vorpd_xmm_xmm_m128: { avx }
flags for vorpd_xmm_xmm_xmm: { avx }
flags for vorpd_ymm_ymm_m256: { avx }
flags for vorpd_ymm_ymm_ymm: { avx }
flags for vorps_xmm_xmm_m128: { avx }
flags for vorps_xmm_xmm_xmm: { avx }
flags for vorps_ymm_ymm_m256: { avx }
flags for vorps_ymm_ymm_ymm: { avx }
flags for vpabsb_xmm_m128: { avx }
flags for vpabsb_xmm_xmm: { avx }
flags for vpabsb_ymm_m256: { avx2 }
flags for vpabsb_ymm_ymm: { avx2 }
flags for vpabsd_xmm_m128: { avx }
flags for vpabsd_xmm_xmm: { avx }
flags for vpabsd_ymm_m256: { avx2 }
flags for vpabsd_ymm_ymm: { avx2 }
flags for vpabsw_xmm_m128: { avx }
flags for vpabsw_xmm_xmm: { avx }
flags for vpabsw_ymm_m256: { avx2 }
flags for vpabsw_ymm_ymm: { avx2 }
flags for vpackssdw_xmm_xmm_m128: { avx }
flags for vpackssdw_xmm_xmm_xmm: { avx }
flags for vpackssdw_ymm_ymm_m256: { avx2 }
flags for vpackssdw_ymm_ymm_ymm: { avx2 }
flags for vpacksswb_xmm_xmm_m128: { avx }
flags for vpacksswb_xmm_xmm_xmm: { avx }
flags for vpacksswb_ymm_ymm_m256: { avx2 }
flags for vpacksswb_ymm_ymm_ymm: { avx2 }
flags for vpackusdw_xmm_xmm_m128: { avx }
flags for vpackusdw_xmm_xmm_xmm: { avx }
flags for vpackusdw_ymm_ymm_m256: { avx2 }
flags for vpackusdw_ymm_ymm_ymm: { avx2 }
flags for vpackuswb_xmm_xmm_m128: { avx }
flags for vpackuswb_xmm_xmm_xmm: { avx }
flags for vpackuswb_ymm_ymm_m256: { avx2 }
flags for vpackuswb_ymm_ymm_ymm: { avx2 }
flags for vpaddb_xmm_xmm_m128: { avx }
flags for vpaddb_xmm_xmm_xmm: { avx }
flags for vpaddb_ymm_ymm_m256: { avx2 }
flags for vpaddb_ymm_ymm_ymm: { avx2 }
flags for vpaddd_xmm_xmm_m128: { avx }
flags for vpaddd_xmm_xmm_xmm: { avx }
flags for vpaddd_ymm_ymm_m256: { avx2 }
flags for vpaddd_ymm_ymm_ymm: { avx2 }
flags for vpaddq_xmm_xmm_m128: { avx }
flags for vpaddq_xmm_xmm_xmm: { avx }
flags for vpaddq_ymm_ymm_m256: { avx2 }
flags for vpaddq_ymm_ymm_ymm: { avx2 }
flags for vpaddsb_xmm_xmm_m128: { avx }
flags for vpaddsb_xmm_xmm_xmm: { avx }
flags for vpaddsb_ymm_ymm_m256: { avx2 }
flags for vpaddsb_ymm_ymm_ymm: { avx2 }
flags for vpaddsw_xmm_xmm_m128: { avx }
flags for vpaddsw_xmm_xmm_xmm: { avx }
flags for vpaddsw_ymm_ymm_m256: { avx2 }
flags for vpaddsw_ymm_ymm_ymm: { avx2 }
flags for vpaddusb_xmm_xmm_m128: { avx }
flags for vpaddusb_xmm_xmm_xmm: { avx }
flags for vpaddusb_ymm_ymm_m256: { avx2 }
flags for vpaddusb_ymm_ymm_ymm: { avx2 }
flags for vpaddusw_xmm_xmm_m128: { avx }
flags for vpaddusw_xmm_xmm_xmm: { avx }
flags for vpaddusw_ymm_ymm_m256: { avx2 }
flags for vpaddusw_ymm_ymm_ymm: { avx2 }
flags for vpaddw_xmm_xmm_m128: { avx }
flags for vpaddw_xmm_xmm_xmm: { avx }
flags for vpaddw_ymm_ymm_m256: { avx2 }
flags for vpaddw_ymm_ymm_ymm: { avx2 }
flags for vpalignr_xmm_xmm_m128_imm8: { avx }
flags for vpalignr_xmm_xmm_xmm_imm8: { avx }
flags for vpalignr_ymm_ymm_m256_imm8: { avx2 }
flags for vpalignr_ymm_ymm_ymm_imm8: { avx2 }
flags for vpand_xmm_xmm_m128: { avx }
flags for vpand_xmm_xmm_xmm: { avx }
flags for vpand_ymm_ymm_m256: { avx2 }
flags for vpand_ymm_ymm_ymm: { avx2 }
flags for vpandn_xmm_xmm_m128: { avx }
flags for vpandn_xmm_xmm_xmm: { avx }
flags for vpandn_ymm_ymm_m256: { avx2 }
flags for vpandn_ymm_ymm_ymm: { avx2 }
flags for vpavgb_xmm_xmm_m128: { avx }
flags for vpavgb_xmm_xmm_xmm: { avx }
flags for vpavgb_ymm_ymm_m256: { avx2 }
flags for vpavgb_ymm_ymm_ymm: { avx2 }
flags for vpavgw_xmm_xmm_m128: { avx }
flags for vpavgw_xmm_xmm_xmm: { avx }
flags for vpavgw_ymm_ymm_m256: { avx2 }
flags for vpavgw_ymm_ymm_ymm: { avx2 }
flags for vpblendd_xmm_xmm_m128_imm8: { avx2 }
flags for vpblendd_xmm_xmm_xmm_imm8: { avx2 }
flags for vpblendd_ymm_ymm_m256_imm8: { avx2 }
flags for vpblendd_ymm_ymm_ymm_imm8: { avx2 }
flags for vpblendvb_xmm_xmm_m128_xmm: { avx }
flags for vpblendvb_xmm_xmm_xmm_xmm: { avx }
flags for vpblendvb_ymm_ymm_m256_ymm: { avx2 }
flags for vpblendvb_ymm_ymm_ymm_ymm: { avx2 }
flags for vpblendw_xmm_xmm_m128_imm8: { avx }
flags for vpblendw_xmm_xmm_xmm_imm8: { avx }
flags for vpblendw_ymm_ymm_m256_imm8: { avx2 }
flags for vpblendw_ymm_ymm_ymm_imm8: { avx2 }
flags for vpbroadcastb_xmm_m8: { avx2 }
flags for vpbroadcastb_xmm_xmm: { avx2 }
flags for vpbroadcastb_ymm_m8: { avx2 }
flags for vpbroadcastb_ymm_xmm: { avx2 }
flags for vpbroadcastd_xmm_m32: { avx2 }
flags for vpbroadcastd_xmm_xmm: { avx2 }
flags for vpbroadcastd_ymm_m32: { avx2 }
flags for vpbroadcastd_ymm_xmm: { avx2 }
flags for vpbroadcastq_xmm_m64: { avx2 }
flags for vpbroadcastq_xmm_xmm: { avx2 }
flags for vpbroadcastq_ymm_m64: { avx2 }
flags for vpbroadcastq_ymm_xmm: { avx2 }
flags for vpbroadcastw_xmm_m16: { avx2 }
flags for vpbroadcastw_xmm_xmm: { avx2 }
flags for vpbroadcastw_ymm_m16: { avx2 }
flags for vpbroadcastw_ymm_xmm: { avx2 }
flags for vpclmulqdq_xmm_xmm_m128_imm8: { pclmulqdq avx }
flags for vpclmulqdq_xmm_xmm_xmm_imm8: { pclmulqdq avx }
flags for vpcmpeqb_xmm_xmm_m128: { avx }
flags for vpcmpeqb_xmm_xmm_xmm: { avx }
flags for vpcmpeqb_ymm_ymm_m256: { avx2 }
flags for vpcmpeqb_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqd_xmm_xmm_m128: { avx }
flags for vpcmpeqd_xmm_xmm_xmm: { avx }
flags for vpcmpeqd_ymm_ymm_m256: { avx2 }
flags for vpcmpeqd_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqq_xmm_xmm_m128: { avx }
flags for vpcmpeqq_xmm_xmm_xmm: { avx }
flags for vpcmpeqq_ymm_ymm_m256: { avx2 }
flags for vpcmpeqq_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqw_xmm_xmm_m128: { avx }
flags for vpcmpeqw_xmm_xmm_xmm: { avx }
flags for vpcmpeqw_ymm_ymm_m256: { avx2 }
flags for vpcmpeqw_ymm_ymm_ymm: { avx2 }
flags for vpcmpestri_xmm_m128_imm8: { avx }
flags for vpcmpestri_xmm_xmm_imm8: { avx }
flags for vpcmpestrm_xmm_m128_imm8: { avx }
flags for vpcmpestrm_xmm_xmm_imm8: { avx }
flags for vpcmpgtb_xmm_xmm_m128: { avx }
flags for vpcmpgtb_xmm_xmm_xmm: { avx }
flags for vpcmpgtb_ymm_ymm_m256: { avx }
flags for vpcmpgtb_ymm_ymm_ymm: { avx }
flags for vpcmpgtd_xmm_xmm_m128: { avx }
flags for vpcmpgtd_xmm_xmm_xmm: { avx }
flags for vpcmpgtd_ymm_ymm_m256: { avx2 }
flags for vpcmpgtd_ymm_ymm_ymm: { avx2 }
flags for vpcmpgtq_xmm_xmm_m128: { avx }
flags for vpcmpgtq_xmm_xmm_xmm: { avx }
flags for vpvmpgtq_ymm_ymm_m256: { avx2 }
flags for vpvmpgtq_ymm_ymm_ymm: { avx2 }
flags for vpcmpgtw_xmm_xmm_m128: { avx }
flags for vpcmpgtw_xmm_xmm_xmm: { avx }
flags for vpcmpgtw_ymm_ymm_m256: { avx2 }
flags for vpcmpgtw_ymm_ymm_ymm: { avx2 }
flags for vpcmpistri_xmm_m128_imm8: { avx }
flags for vpcmpistri_xmm_xmm_imm8: { avx }
flags for vpcmpistrm_xmm_m128_imm8: { avx }
flags for vpcmpistrm_xmm_xmm_imm8: { avx }
flags for vperm2f128_ymm_ymm_m256_imm8: { avx }
flags for vperm2f128_ymm_ymm_ymm_imm8: { avx }
flags for vperm2i128_ymm_ymm_m256_imm8: { avx2 }
flags for vperm2i128_ymm_ymm_ymm_imm8: { avx2 }
flags for vpermd_ymm_ymm_m256: { avx2 }
flags for vpermd_ymm_ymm_ymm: { avx2 }
flags for vpermilpd_xmm_m128_imm8: { avx }
flags for vpermilpd_xmm_xmm_imm8: { avx }
flags for vpermilpd_xmm_xmm_m128: { avx }
flags for vpermilpd_xmm_xmm_xmm: { avx }
flags for vpermilpd_ymm_m256_imm8: { avx }
flags for vpermilpd_ymm_ymm_imm8: { avx }
flags for vpermilpd_ymm_ymm_m256: { avx }
flags for vpermilpd_ymm_ymm_ymm: { avx }
flags for vpermilps_xmm_m128_imm8: { avx }
flags for vpermilps_xmm_xmm_imm8: { avx }
flags for vpermilps_xmm_xmm_m128: { avx }
flags for vpermilps_xmm_xmm_xmm: { avx }
flags for vpermilps_ymm_m256_imm8: { avx }
flags for vpermilps_ymm_ymm_imm8: { avx }
flags for vpermilps_ymm_ymm_m256: { avx }
flags for vpermilps_ymm_ymm_ymm: { avx }
flags for vpermpd_ymm_m256_imm8: { avx2 }
flags for vpermpd_ymm_ymm_imm8: { avx2 }
flags for vpermps_ymm_ymm_m256: { avx2 }
flags for vpermps_ymm_ymm_ymm: { avx2 }
flags for vpermq_ymm_m256_imm8: { avx2 }
flags for vpermq_ymm_ymm_imm8: { avx2 }
flags for vpextrb_m8_xmm_imm8: { avx }
flags for vpextrb_r32_xmm_imm8: { avx }
flags for vpextrb_r64_xmm_imm8: { avx }
flags for vpextrd_m32_xmm_imm8: { avx }
flags for vpextrd_r32_xmm_imm8: { avx }
flags for vpextrq_m64_xmm_imm8: { avx }
flags for vpextrq_r64_xmm_imm8: { avx }
flags for vpextrw_m16_xmm_imm8: { avx }
flags for vpextrw_r32_xmm_imm8: { avx }
flags for vpextrw_r32_xmm_imm8_1: { avx }
flags for vpextrw_r64_xmm_imm8: { avx }
flags for vpextrw_r64_xmm_imm8_1: { avx }
flags for vpgatherdd_xmm_m32_xmm: { avx2 }
flags for vpgatherdd_ymm_m32_ymm: { avx2 }
flags for vpgatherdq_xmm_m32_xmm: { avx2 }
flags for vpgatherdq_ymm_m32_ymm: { avx2 }
flags for vpgatherqd_xmm_m64_xmm: { avx2 }
flags for vpgatherqd_xmm_m64_xmm_1: { avx2 }
flags for vpgatherqq_xmm_m64_xmm: { avx2 }
flags for vpgatherqq_ymm_m64_ymm: { avx2 }
flags for vphaddd_xmm_xmm_m128: { avx }
flags for vphaddd_xmm_xmm_xmm: { avx }
flags for vphaddd_ymm_ymm_m256: { avx2 }
flags for vphaddd_ymm_ymm_ymm: { avx2 }
flags for vphaddsw_xmm_xmm_m128: { avx }
flags for vphaddsw_xmm_xmm_xmm: { avx }
flags for vphaddsw_ymm_ymm_m256: { avx2 }
flags for vphaddsw_ymm_ymm_ymm: { avx2 }
flags for vphaddw_xmm_xmm_m128: { avx }
flags for vphaddw_xmm_xmm_xmm: { avx }
flags for vphaddw_ymm_ymm_m256: { avx2 }
flags for vphaddw_ymm_ymm_ymm: { avx2 }
flags for vphminposuw_xmm_m128: { avx }
flags for vphminposuw_xmm_xmm: { avx }
flags for vphsubd_xmm_xmm_m128: { avx }
flags for vphsubd_xmm_xmm_xmm: { avx }
flags for vphsubd_ymm_ymm_m256: { avx2 }
flags for vphsubd_ymm_ymm_ymm: { avx2 }
flags for vphsubsw_xmm_xmm_m128: { avx }
flags for vphsubsw_xmm_xmm_xmm: { avx }
flags for vphsubsw_ymm_ymm_m256: { avx2 }
flags for vphsubsw_ymm_ymm_ymm: { avx2 }
flags for vphsubw_xmm_xmm_m128: { avx }
flags for vphsubw_xmm_xmm_xmm: { avx }
flags for vphsubw_ymm_ymm_m256: { avx2 }
flags for vphsubw_ymm_ymm_ymm: { avx2 }
flags for vpinsrb_xmm_xmm_m8_imm8: { avx }
flags for vpinsrb_xmm_xmm_r32_imm8: { avx }
flags for vpinsrd_xmm_xmm_m32_imm8: { avx }
flags for vpinsrd_xmm_xmm_r32_imm8: { avx }
flags for vpinsrq_xmm_xmm_m64_imm8: { avx }
flags for vpinsrq_xmm_xmm_r64_imm8: { avx }
flags for vpinsrw_xmm_xmm_m16_imm8: { avx }
flags for vpinsrw_xmm_xmm_r32_imm8: { avx }
flags for vpmaddubsw_xmm_xmm_m128: { avx }
flags for vpmaddubsw_xmm_xmm_xmm: { avx }
flags for vpmaddubsw_ymm_ymm_m256: { avx2 }
flags for vpmaddubsw_ymm_ymm_ymm: { avx2 }
flags for vpmaddwd_xmm_xmm_m128: { avx }
flags for vpmaddwd_xmm_xmm_xmm: { avx }
flags for vpmaddwd_ymm_ymm_m256: { avx2 }
flags for vpmaddwd_ymm_ymm_ymm: { avx2 }
flags for vpmaskmovd_m128_xmm_xmm: { avx2 }
flags for vpmaskmovd_m256_ymm_ymm: { avx2 }
flags for vpmaskmovd_xmm_xmm_m128: { avx2 }
flags for vpmaskmovd_ymm_ymm_m256: { avx2 }
flags for vpmaskmovq_m128_xmm_xmm: { avx2 }
flags for vpmaskmovq_m256_ymm_ymm: { avx2 }
flags for vpmaskmovq_xmm_xmm_m128: { avx2 }
flags for vpmaskmovq_ymm_ymm_m256: { avx2 }
flags for vpmaxsb_xmm_xmm_m128: { avx }
flags for vpmaxsb_xmm_xmm_xmm: { avx }
flags for vpmaxsb_ymm_ymm_m256: { avx2 }
flags for vpmaxsb_ymm_ymm_ymm: { avx2 }
flags for vpmaxsd_xmm_xmm_m128: { avx }
flags for vpmaxsd_xmm_xmm_xmm: { avx }
flags for vpmaxsd_ymm_ymm_m256: { avx2 }
flags for vpmaxsd_ymm_ymm_ymm: { avx2 }
flags for vpmaxsw_xmm_xmm_m128: { avx }
flags for vpmaxsw_xmm_xmm_xmm: { avx }
flags for vpmaxsw_ymm_ymm_m256: { avx2 }
flags for vpmaxsw_ymm_ymm_ymm: { avx2 }
flags for vpmaxub_xmm_xmm_m128: { avx }
flags for vpmaxub_xmm_xmm_xmm: { avx }
flags for vpmaxub_ymm_ymm_m256: { avx2 }
flags for vpmaxub_ymm_ymm_ymm: { avx2 }
flags for vpmaxud_xmm_xmm_m128: { avx }
flags for vpmaxud_xmm_xmm_xmm: { avx }
flags for vpmaxud_ymm_ymm_m256: { avx2 }
flags for vpmaxud_ymm_ymm_ymm: { avx2 }
flags for vpmaxuw_xmm_xmm_m128: { avx }
flags for vpmaxuw_xmm_xmm_xmm: { avx }
flags for vpmaxuw_ymm_ymm_m256: { avx2 }
flags for vpmaxuw_ymm_ymm_ymm: { avx2 }
flags for vpminsb_xmm_xmm_m128: { avx }
flags for vpminsb_xmm_xmm_xmm: { avx }
flags for vpminsb_ymm_ymm_m256: { avx2 }
flags for vpminsb_ymm_ymm_ymm: { avx2 }
flags for vpminsd_xmm_xmm_m128: { avx }
flags for vpminsd_xmm_xmm_xmm: { avx }
flags for vpminsd_ymm_ymm_m256: { avx2 }
flags for vpminsd_ymm_ymm_ymm: { avx2 }
flags for vpminsw_xmm_xmm_m128: { avx }
flags for vpminsw_xmm_xmm_xmm: { avx }
flags for vpminub_xmm_xmm_m128: { avx }
flags for vpminub_xmm_xmm_xmm: { avx }
flags for vpminub_ymm_ymm_m256: { avx2 }
flags for vpminub_ymm_ymm_ymm: { avx2 }
flags for vpminud_xmm_xmm_m128: { avx }
flags for vpminud_xmm_xmm_xmm: { avx }
flags for vpminud_ymm_ymm_m256: { avx2 }
flags for vpminud_ymm_ymm_ymm: { avx2 }
flags for vpminuw_xmm_xmm_m128: { avx }
flags for vpminuw_xmm_xmm_xmm: { avx }
flags for vpminuw_ymm_ymm_m256: { avx2 }
flags for vpminuw_ymm_ymm_ymm: { avx2 }
flags for vpmovmskb_r32_xmm: { avx }
flags for vpmovmskb_r32_ymm: { avx2 }
flags for vpmovmskb_r64_xmm: { avx }
flags for vpmovmskb_r64_ymm: { avx2 }
flags for vpmovsxbd_xmm_m32: { avx }
flags for vpmovsxbd_xmm_xmm: { avx }
flags for vpmovsxbd_ymm_m64: { avx2 }
flags for vpmovsxbd_ymm_xmm: { avx2 }
flags for vpmovsxbq_xmm_m16: { avx }
flags for vpmovsxbq_xmm_xmm: { avx }
flags for vpmovsxbq_ymm_m32: { avx2 }
flags for vpmovsxbq_ymm_xmm: { avx2 }
flags for vpmovsxbw_xmm_m64: { avx }
flags for vpmovsxbw_xmm_xmm: { avx }
flags for vpmovsxbw_ymm_m128: { avx2 }
flags for vpmovsxbw_ymm_xmm: { avx2 }
flags for vpmovsxdq_xmm_m64: { avx }
flags for vpmovsxdq_xmm_xmm: { avx }
flags for vpmovsxdq_ymm_m128: { avx2 }
flags for vpmovsxdq_ymm_xmm: { avx2 }
flags for vpmovsxwd_xmm_m64: { avx }
flags for vpmovsxwd_xmm_xmm: { avx }
flags for vpmovsxwd_ymm_m128: { avx2 }
flags for vpmovsxwd_ymm_xmm: { avx2 }
flags for vpmovsxwq_xmm_m32: { avx }
flags for vpmovsxwq_xmm_xmm: { avx }
flags for vpmovsxwq_ymm_m64: { avx2 }
flags for vpmovsxwq_ymm_xmm: { avx2 }
flags for vpmovzxbd_xmm_m32: { avx }
flags for vpmovzxbd_xmm_xmm: { avx }
flags for vpmovzxbd_ymm_m64: { avx2 }
flags for vpmovzxbd_ymm_xmm: { avx2 }
flags for vpmovzxbq_xmm_m16: { avx }
flags for vpmovzxbq_xmm_xmm: { avx }
flags for vpmovzxbq_ymm_m32: { avx2 }
flags for vpmovzxbq_ymm_xmm: { avx2 }
flags for vpmovzxbw_xmm_m64: { avx }
flags for vpmovzxbw_xmm_xmm: { avx }
flags for vpmovzxbw_ymm_m128: { avx2 }
flags for vpmovzxbw_ymm_xmm: { avx2 }
flags for vpmovzxdq_xmm_m64: { avx }
flags for vpmovzxdq_xmm_xmm: { avx }
flags for vpmovzxdq_ymm_m128: { avx2 }
flags for vpmovzxdq_ymm_xmm: { avx2 }
flags for vpmovzxwd_xmm_m64: { avx }
flags for vpmovzxwd_xmm_xmm: { avx }
flags for vpmovzxwd_ymm_m128: { avx2 }
flags for vpmovzxwd_ymm_xmm: { avx2 }
flags for vpmovzxwq_xmm_m32: { avx }
flags for vpmovzxwq_xmm_xmm: { avx }
flags for vpmovzxwq_ymm_m64: { avx2 }
flags for vpmovzxwq_ymm_xmm: { avx2 }
flags for vpmuldq_xmm_xmm_m128: { avx }
flags for vpmuldq_xmm_xmm_xmm: { avx }
flags for vpmuldq_ymm_ymm_m256: { avx2 }
flags for vpmuldq_ymm_ymm_ymm: { avx2 }
flags for vpmulhrsw_xmm_xmm_m128: { avx }
flags for vpmulhrsw_xmm_xmm_xmm: { avx }
flags for vpmulhrsw_ymm_ymm_m256: { avx2 }
flags for vpmulhrsw_ymm_ymm_ymm: { avx2 }
flags for vpmulhuw_xmm_xmm_m128: { avx }
flags for vpmulhuw_xmm_xmm_xmm: { avx }
flags for vpmulhuw_ymm_ymm_m256: { avx2 }
flags for vpmulhuw_ymm_ymm_ymm: { avx2 }
flags for vpmulhw_xmm_xmm_m128: { avx }
flags for vpmulhw_xmm_xmm_xmm: { avx }
flags for vpmulhw_ymm_ymm_m256: { avx2 }
flags for vpmulhw_ymm_ymm_ymm: { avx2 }
flags for vpmulld_xmm_xmm_m128: { avx }
flags for vpmulld_xmm_xmm_xmm: { avx }
flags for vpmulld_ymm_ymm_m256: { avx2 }
flags for vpmulld_ymm_ymm_ymm: { avx2 }
flags for vpmullw_xmm_xmm_m128: { avx }
flags for vpmullw_xmm_xmm_xmm: { avx }
flags for vpmullw_ymm_ymm_m256: { avx2 }
flags for vpmullw_ymm_ymm_ymm: { avx2 }
flags for vpmuludq_xmm_xmm_m128: { avx }
flags for vpmuludq_xmm_xmm_xmm: { avx }
flags for vpmuludq_ymm_ymm_m256: { avx2 }
flags for vpmuludq_ymm_ymm_ymm: { avx2 }
flags for vpor_xmm_xmm_m128: { avx }
flags for vpor_xmm_xmm_xmm: { avx }
flags for vpor_ymm_ymm_m256: { avx2 }
flags for vpor_ymm_ymm_ymm: { avx2 }
flags for vpsadbw_xmm_xmm_m128: { avx }
flags for vpsadbw_xmm_xmm_xmm: { avx }
flags for vpsadbw_ymm_ymm_m256: { avx2 }
flags for vpsadbw_ymm_ymm_ymm: { avx2 }
flags for vpshufb_xmm_xmm_m128: { avx }
flags for vpshufb_xmm_xmm_xmm: { avx }
flags for vpshufb_ymm_ymm_m256: { avx2 }
flags for vpshufb_ymm_ymm_ymm: { avx2 }
flags for vpshufd_xmm_m128_imm8: { avx }
flags for vpshufd_xmm_xmm_imm8: { avx }
flags for vpshufd_ymm_m256_imm8: { avx2 }
flags for vpshufd_ymm_ymm_imm8: { avx2 }
flags for vpshufhw_xmm_m128_imm8: { avx }
flags for vpshufhw_xmm_xmm_imm8: { avx }
flags for vpshufhw_ymm_m256_imm8: { avx2 }
flags for vpshufhw_ymm_ymm_imm8: { avx2 }
flags for vpshuflw_xmm_m128_imm8: { avx }
flags for vpshuflw_xmm_xmm_imm8: { avx }
flags for vpshuflw_ymm_m256_imm8: { avx2 }
flags for vpshuflw_ymm_ymm_imm8: { avx2 }
flags for vpsignb_xmm_xmm_m128: { avx }
flags for vpsignb_xmm_xmm_xmm: { avx }
flags for vpsignd_xmm_xmm_m128: { avx }
flags for vpsignd_xmm_xmm_xmm: { avx }
flags for vpsignw_xmm_xmm_m128: { avx }
flags for vpsignw_xmm_xmm_xmm: { avx }
flags for vpslld_xmm_xmm_imm8: { avx }
flags for vpslld_xmm_xmm_m128: { avx }
flags for vpslld_xmm_xmm_xmm: { avx }
flags for vpslld_ymm_ymm_imm8: { avx2 }
flags for vpslld_ymm_ymm_m128: { avx2 }
flags for vpslld_ymm_ymm_xmm: { avx2 }
flags for vpslldq_xmm_xmm_imm8: { avx }
flags for vpslldq_ymm_ymm_imm8: { avx2 }
flags for vpsllq_xmm_xmm_imm8: { avx }
flags for vpsllq_xmm_xmm_m128: { avx }
flags for vpsllq_xmm_xmm_xmm: { avx }
flags for vpsllq_ymm_ymm_imm8: { avx2 }
flags for vpsllq_ymm_ymm_m128: { avx2 }
flags for vpsllq_ymm_ymm_xmm: { avx2 }
flags for vpsllvd_xmm_xmm_m128: { avx2 }
flags for vpsllvd_xmm_xmm_xmm: { avx2 }
flags for vpsllvd_ymm_ymm_m256: { avx2 }
flags for vpsllvd_ymm_ymm_ymm: { avx2 }
flags for vpsllvq_xmm_xmm_m128: { avx2 }
flags for vpsllvq_xmm_xmm_xmm: { avx2 }
flags for vpsllvq_ymm_ymm_m256: { avx2 }
flags for vpsllvq_ymm_ymm_ymm: { avx2 }
flags for vpsllw_xmm_xmm_imm8: { avx }
flags for vpsllw_xmm_xmm_m128: { avx }
flags for vpsllw_xmm_xmm_xmm: { avx }
flags for vpsllw_ymm_ymm_imm8: { avx2 }
flags for vpsllw_ymm_ymm_m128: { avx2 }
flags for vpsllw_ymm_ymm_xmm: { avx2 }
flags for vpsrad_xmm_xmm_imm8: { avx }
flags for vpsrad_xmm_xmm_m128: { avx }
flags for vpsrad_xmm_xmm_xmm: { avx }
flags for vpsrad_ymm_ymm_imm8: { avx2 }
flags for vpsrad_ymm_ymm_m128: { avx2 }
flags for vpsrad_ymm_ymm_xmm: { avx2 }
flags for vpsravd_xmm_xmm_m128: { avx2 }
flags for vpsravd_xmm_xmm_xmm: { avx2 }
flags for vpsravd_ymm_ymm_m256: { avx2 }
flags for vpsravd_ymm_ymm_ymm: { avx2 }
flags for vpsraw_xmm_xmm_imm8: { avx }
flags for vpsraw_xmm_xmm_m128: { avx }
flags for vpsraw_xmm_xmm_xmm: { avx }
flags for vpsraw_ymm_ymm_imm8: { avx2 }
flags for vpsraw_ymm_ymm_m128: { avx2 }
flags for vpsraw_ymm_ymm_xmm: { avx2 }
flags for vpsrld_xmm_xmm_imm8: { avx }
flags for vpsrld_xmm_xmm_m128: { avx }
flags for vpsrld_xmm_xmm_xmm: { avx }
flags for vpsrld_ymm_ymm_imm8: { avx2 }
flags for vpsrld_ymm_ymm_m128: { avx2 }
flags for vpsrld_ymm_ymm_xmm: { avx2 }
flags for vpsrldq_xmm_xmm_imm8: { avx }
flags for vpsrldq_ymm_ymm_imm8: { avx2 }
flags for vpsrlq_xmm_xmm_imm8: { avx }
flags for vpsrlq_xmm_xmm_m128: { avx }
flags for vpsrlq_xmm_xmm_xmm: { avx }
flags for vpsrlq_ymm_ymm_imm8: { avx2 }
flags for vpsrlq_ymm_ymm_m128: { avx2 }
flags for vpsrlq_ymm_ymm_xmm: { avx2 }
flags for vpsrlvd_xmm_xmm_m128: { avx2 }
flags for vpsrlvd_xmm_xmm_xmm: { avx2 }
flags for vpsrlvd_ymm_ymm_m256: { avx2 }
flags for vpsrlvd_ymm_ymm_ymm: { avx2 }
flags for vpsrlvq_xmm_xmm_m128: { avx2 }
flags for vpsrlvq_xmm_xmm_xmm: { avx2 }
flags for vpsrlvq_ymm_ymm_m256: { avx2 }
flags for vpsrlvq_ymm_ymm_ymm: { avx2 }
flags for vpsrlw_xmm_xmm_imm8: { avx }
flags for vpsrlw_xmm_xmm_m128: { avx }
flags for vpsrlw_xmm_xmm_xmm: { avx }
flags for vpsrlw_ymm_ymm_imm8: { avx2 }
flags for vpsrlw_ymm_ymm_m128: { avx2 }
flags for vpsrlw_ymm_ymm_xmm: { avx2 }
flags for vpsubb_xmm_xmm_m128: { avx }
flags for vpsubb_xmm_xmm_xmm: { avx }
flags for vpsubb_ymm_ymm_m256: { avx2 }
flags for vpsubb_ymm_ymm_ymm: { avx2 }
flags for vpsubd_xmm_xmm_m128: { avx }
flags for vpsubd_xmm_xmm_xmm: { avx }
flags for vpsubd_ymm_ymm_m256: { avx2 }
flags for vpsubd_ymm_ymm_ymm: { avx2 }
flags for vpsubq_xmm_xmm_m128: { avx }
flags for vpsubq_xmm_xmm_xmm: { avx }
flags for vpsubq_ymm_ymm_m256: { avx2 }
flags for vpsubq_ymm_ymm_ymm: { avx2 }
flags for vpsubsb_xmm_xmm_m128: { avx }
flags for vpsubsb_xmm_xmm_xmm: { avx }
flags for vpsubsb_ymm_ymm_m256: { avx2 }
flags for vpsubsb_ymm_ymm_ymm: { avx2 }
flags for vpsubsw_xmm_xmm_m128: { avx }
flags for vpsubsw_xmm_xmm_xmm: { avx }
flags for vpsubsw_ymm_ymm_m256: { avx2 }
flags for vpsubsw_ymm_ymm_ymm: { avx2 }
flags for vpsubusb_xmm_xmm_m128: { avx }
flags for vpsubusb_xmm_xmm_xmm: { avx }
flags for vpsubusb_ymm_ymm_m256: { avx2 }
flags for vpsubusb_ymm_ymm_ymm: { avx2 }
flags for vpsubusw_xmm_xmm_m128: { avx }
flags for vpsubusw_xmm_xmm_xmm: { avx }
flags for vpsubusw_ymm_ymm_m256: { avx2 }
flags for vpsubusw_ymm_ymm_ymm: { avx2 }
flags for vpsubw_xmm_xmm_m128: { avx }
flags for vpsubw_xmm_xmm_xmm: { avx }
flags for vpsubw_ymm_ymm_m256: { avx2 }
flags for vpsubw_ymm_ymm_ymm: { avx2 }
flags for vptest_xmm_m128: { avx }
flags for vptest_xmm_xmm: { avx }
flags for vptest_ymm_m256: { avx }
flags for vptest_ymm_ymm: { avx }
flags for vpunpckhbw_xmm_xmm_m128: { avx }
flags for vpunpckhbw_xmm_xmm_xmm: { avx }
flags for vpunpckhbw_ymm_ymm_m256: { avx2 }
flags for vpunpckhbw_ymm_ymm_ymm: { avx2 }
flags for vpunpckhdq_xmm_xmm_m128: { avx }
flags for vpunpckhdq_xmm_xmm_xmm: { avx }
flags for vpunpckhdq_ymm_ymm_m256: { avx2 }
flags for vpunpckhdq_ymm_ymm_ymm: { avx2 }
flags for vpunpckhqdq_xmm_xmm_m128: { avx }
flags for vpunpckhqdq_xmm_xmm_xmm: { avx }
flags for vpunpckhqdq_ymm_ymm_m256: { avx2 }
flags for vpunpckhqdq_ymm_ymm_ymm: { avx2 }
flags for vpunpckhwd_xmm_xmm_m128: { avx }
flags for vpunpckhwd_xmm_xmm_xmm: { avx }
flags for vpunpckhwd_ymm_ymm_m256: { avx2 }
flags for vpunpckhwd_ymm_ymm_ymm: { avx2 }
flags for vpunpcklbw_xmm_xmm_m128: { avx }
flags for vpunpcklbw_xmm_xmm_xmm: { avx }
flags for vpunpcklbw_ymm_ymm_m256: { avx2 }
flags for vpunpcklbw_ymm_ymm_ymm: { avx2 }
flags for vpunpckldq_xmm_xmm_m128: { avx }
flags for vpunpckldq_xmm_xmm_xmm: { avx }
flags for vpunpckldq_ymm_ymm_m256: { avx2 }
flags for vpunpckldq_ymm_ymm_ymm: { avx2 }
flags for vpunpcklqdq_xmm_xmm_m128: { avx }
flags for vpunpcklqdq_xmm_xmm_xmm: { avx }
flags for vpunpcklqdq_ymm_ymm_m256: { avx2 }
flags for vpunpcklqdq_ymm_ymm_ymm: { avx2 }
flags for vpunpcklwd_xmm_xmm_m128: { avx }
flags for vpunpcklwd_xmm_xmm_xmm: { avx }
flags for vpunpcklwd_ymm_ymm_m256: { avx2 }
flags for vpunpcklwd_ymm_ymm_ymm: { avx2 }
flags for vpxor_xmm_xmm_m128: { avx }
flags for vpxor_xmm_xmm_xmm: { avx }
flags for vpxor_ymm_ymm_m256: { avx2 }
flags for vpxor_ymm_ymm_ymm: { avx2 }
flags for vrcpps_xmm_m128: { avx }
flags for vrcpps_xmm_xmm: { avx }
flags for vrcpps_ymm_m256: { avx }
flags for vrcpps_ymm_ymm: { avx }
flags for vrcpss_xmm_xmm_m32: { avx }
flags for vrcpss_xmm_xmm_xmm: { avx }
flags for vroundpd_xmm_m128_imm8: { avx }
flags for vroundpd_xmm_xmm_imm8: { avx }
flags for vroundpd_ymm_m256_imm8: { avx }
flags for vroundpd_ymm_ymm_imm8: { avx }
flags for vroundps_xmm_m128_imm8: { avx }
flags for vroundps_xmm_xmm_imm8: { avx }
flags for vroundps_ymm_m256_imm8: { avx }
flags for vroundps_ymm_ymm_imm8: { avx }
flags for vroundsd_xmm_xmm_m64_imm8: { avx }
flags for vroundsd_xmm_xmm_xmm_imm8: { avx }
flags for vroundss_xmm_xmm_m32_imm8: { avx }
flags for vroundss_xmm_xmm_xmm_imm8: { avx }
flags for vrsqrtps_xmm_m128: { avx }
flags for vrsqrtps_xmm_xmm: { avx }
flags for vrsqrtps_ymm_m256: { avx }
flags for vrsqrtps_ymm_ymm: { avx }
flags for vrsqrtss_xmm_xmm_m32: { avx }
flags for vrsqrtss_xmm_xmm_xmm: { avx }
flags for vshufpd_xmm_xmm_m128_imm8: { avx }
flags for vshufpd_xmm_xmm_xmm_imm8: { avx }
flags for vshufpd_ymm_ymm_m256_imm8: { avx }
flags for vshufpd_ymm_ymm_ymm_imm8: { avx }
flags for vshufps_xmm_xmm_m128_imm8: { avx }
flags for vshufps_xmm_xmm_xmm_imm8: { avx }
flags for vshufps_ymm_ymm_m256_imm8: { avx }
flags for vshufps_ymm_ymm_ymm_imm8: { avx }
flags for vsqrtpd_xmm_m128: { avx }
flags for vsqrtpd_xmm_xmm: { avx }
flags for vsqrtpd_ymm_m256: { avx }
flags for vsqrtpd_ymm_ymm: { avx }
flags for vsqrtps_xmm_m128: { avx }
flags for vsqrtps_xmm_xmm: { avx }
flags for vsqrtps_ymm_m256: { avx }
flags for vsqrtps_ymm_ymm: { avx }
flags for vsqrtsd_xmm_xmm_m64: { avx }
flags for vsqrtsd_xmm_xmm_xmm: { avx }
flags for vsqrtss_xmm_xmm_m32: { avx }
flags for vsqrtss_xmm_xmm_xmm: { avx }
flags for vsubpd_xmm_xmm_m128: { avx }
flags for vsubpd_xmm_xmm_xmm: { avx }
flags for vsubpd_ymm_ymm_m256: { avx }
flags for vsubpd_ymm_ymm_ymm: { avx }
flags for vsubps_xmm_xmm_m128: { avx }
flags for vsubps_xmm_xmm_xmm: { avx }
flags for vsubps_ymm_ymm_m256: { avx }
flags for vsubps_ymm_ymm_ymm: { avx }
flags for vsubsd_xmm_xmm_m64: { avx }
flags for vsubsd_xmm_xmm_xmm: { avx }
flags for vsubss_xmm_xmm_m32: { avx }
flags for vsubss_xmm_xmm_xmm: { avx }
flags for vtestpd_xmm_m128: { avx }
flags for vtestpd_xmm_xmm: { avx }
flags for vtestpd_ymm_m256: { avx }
flags for vtestpd_ymm_ymm: { avx }
flags for vtestps_xmm_m128: { avx }
flags for vtestps_xmm_xmm: { avx }
flags for vtestps_ymm_m256: { avx }
flags for vtestps_ymm_ymm: { avx }
flags for vucomisd_xmm_m64: { avx }
flags for vucomisd_xmm_xmm: { avx }
flags for vucomiss_xmm_m32: { avx }
flags for vucomiss_xmm_xmm: { avx }
flags for vunpckhpd_xmm_xmm_m128: { avx }
flags for vunpckhpd_xmm_xmm_xmm: { avx }
flags for vunpckhpd_ymm_ymm_m256: { avx }
flags for vunpckhpd_ymm_ymm_ymm: { avx }
flags for vunpckhps_xmm_xmm_m128: { avx }
flags for vunpckhps_xmm_xmm_xmm: { avx }
flags for vunpckhps_ymm_ymm_m256: { avx }
flags for vunpckhps_ymm_ymm_ymm: { avx }
flags for vunpcklpd_xmm_xmm_m128: { avx }
flags for vunpcklpd_xmm_xmm_xmm: { avx }
flags for vunpcklpd_ymm_ymm_m256: { avx }
flags for vunpcklpd_ymm_ymm_ymm: { avx }
flags for vunpcklps_xmm_xmm_m128: { avx }
flags for vunpcklps_xmm_xmm_xmm: { avx }
flags for vunpcklps_ymm_ymm_m256: { avx }
flags for vunpcklps_ymm_ymm_ymm: { avx }
flags for vxorpd_xmm_xmm_m128: { avx }
flags for vxorpd_xmm_xmm_xmm: { avx }
flags for vxorpd_ymm_ymm_m256: { avx }
flags for vxorpd_ymm_ymm_ymm: { avx }
flags for vxorps_xmm_xmm_m128: { avx }
flags for vxorps_xmm_xmm_xmm: { avx }
flags for vxorps_ymm_ymm_m256: { avx }
flags for vxorps_ymm_ymm_ymm: { avx }
flags for vzeroall: { avx }
flags for vzeroupper: { avx }
flags for wait: { fpu }
flags for xabort_imm8: { rtm }
flags for xacquire: { hle }
flags for xbegin_label: { rtm }
flags for xend: { rtm }
flags for xlat_m8: { }
flags for xlatb: { }
flags for xorb_al_imm8: { }
flags for xorw_ax_imm16: { }
flags for xorl_eax_imm32: { }
flags for xorw_m16_imm16: { }
flags for xorw_m16_imm8: { }
flags for xorw_m16_r16: { }
flags for xorl_m32_imm32: { }
flags for xorl_m32_imm8: { }
flags for xorl_m32_r32: { }
flags for xorq_m64_imm32: { }
flags for xorq_m64_imm8: { }
flags for xorq_m64_r64: { }
flags for xorb_m8_imm8: { }
flags for xorb_m8_r8: { }
flags for xorb_m8_rh: { }
flags for xorw_r16_imm16: { }
flags for xorw_r16_imm8: { }
flags for xorw_r16_m16: { }
flags for xorw_r16_r16: { }
flags for xorw_r16_r16_1: { }
flags for xorl_r32_imm32: { }
flags for xorl_r32_imm8: { }
flags for xorl_r32_m32: { }
flags for xorl_r32_r32: { }
flags for xorl_r32_r32_1: { }
flags for xorq_r64_imm32: { }
flags for xorq_r64_imm8: { }
flags for xorq_r64_m64: { }
flags for xorq_r64_r64: { }
flags for xorq_r64_r64_1: { }
flags for xorb_r8_imm8: { }
flags for xorb_r8_m8: { }
flags for xorb_r8_r8: { }
flags for xorb_r8_r8_1: { }
flags for xorb_r8_rh: { }
flags for xorb_r8_rh_1: { }
flags for xorq_rax_imm32: { }
flags for xorb_rh_imm8: { }
flags for xorb_rh_m8: { }
flags for xorb_rh_r8: { }
flags for xorb_rh_r8_1: { }
flags for xorb_rh_rh: { }
flags for xorb_rh_rh_1: { }
flags for xorpd_xmm_m128: { sse2 }
flags for xorpd_xmm_xmm: { sse2 }
flags for xorps_xmm_m128: { sse }
flags for xorps_xmm_xmm: { sse }
flags for xrelease: { hle }
flags for xtest: { rtm }
Computing reference outputs for 20 testcases
Computing reference outputs for 20 testcases
Computing reference outputs for 20 testcases
Computing reference outputs for 20 testcases
Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (218)                                                 Lowest Known Correct Cost (221)                                              
                                                                                                                                                          
  .text                                                                        .text                                                                      
  .globl strcpy                                                                .globl strcpy                                                              
  .type strcpy, @function                                                      .type strcpy, @function                                                    
                                                                                                                                                          
#! file-offset 0                                                             #! file-offset 0                                                             
#! rip-offset  0                                                             #! rip-offset  0                                                             
#! capacity    0 bytes                                                       #! capacity    0 bytes                                                       
                                                                                                                                                          
# Text                        #  Line  RIP   Bytes  Opcode                   # Text                        #  Line  RIP   Bytes  Opcode                   
.strcpy:                      #        0     0      OPC=<label>              .strcpy:                      #        0     0      OPC=<label>              
  movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32           movl %esi, %esi             #  1     0     2      OPC=movl_r32_r32         
  nop                         #  2     0x2   1      OPC=nop                    movl %edi, %eax             #  2     0x2   2      OPC=movl_r32_r32         
  movb %sil, %dil             #  3     0x3   3      OPC=movb_r8_r8             movl %esi, %edi             #  3     0x4   2      OPC=movl_r32_r32         
  nop                         #  4     0x6   1      OPC=nop                    movq %rsi, %rdx             #  4     0x6   3      OPC=movq_r64_r64         
  nop                         #  5     0x7   1      OPC=nop                    movq %rax, %rcx             #  5     0x9   3      OPC=movq_r64_r64         
  addl %eax, %edi             #  6     0x8   2      OPC=addl_r32_r32           orl %eax, %edi              #  6     0xc   2      OPC=orl_r32_r32          
  movq %rax, %rcx             #  7     0xa   3      OPC=movq_r64_r64           andl $0x3, %edi             #  7     0xe   3      OPC=andl_r32_imm8        
  movq %rsi, %rdx             #  8     0xd   3      OPC=movq_r64_r64           jne .L_126860               #  8     0x11  6      OPC=jne_label_1          
  andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8          movl %esi, %esi             #  9     0x17  2      OPC=movl_r32_r32         
  jne .L_126860               #  10    0x13  6      OPC=jne_label_1            movl (%r15,%rsi,1), %r8d    #  10    0x19  4      OPC=movl_r32_m32         
  nop                         #  11    0x19  1      OPC=nop                    movl %r8d, %esi             #  11    0x1d  3      OPC=movl_r32_r32         
  movl %edx, %esi             #  12    0x1a  2      OPC=movl_r32_r32           leal -0x1010101(%r8), %edi  #  12    0x20  7      OPC=leal_r32_m16         
  movl (%r15,%rsi,1), %r8d    #  13    0x1c  4      OPC=movl_r32_m32           notl %esi                   #  13    0x27  2      OPC=notl_r32             
  nop                         #  14    0x20  1      OPC=nop                    andl %edi, %esi             #  14    0x29  2      OPC=andl_r32_r32         
  orl %r8d, %esi              #  15    0x21  3      OPC=orl_r32_r32_1          andl $0x80808080, %esi      #  15    0x2b  6      OPC=andl_r32_imm32       
  nop                         #  16    0x24  1      OPC=nop                    jne .L_126860               #  16    0x31  6      OPC=jne_label_1          
  leaq -0x1010101(%r8), %rdi  #  17    0x25  7      OPC=leaq_r64_m64           nop                         #  17    0x37  1      OPC=nop                  
  notl %esi                   #  18    0x2c  2      OPC=notl_r32               nop                         #  18    0x38  1      OPC=nop                  
  nop                         #  19    0x2e  1      OPC=nop                    nop                         #  19    0x39  1      OPC=nop                  
  andl %edi, %esi             #  20    0x2f  2      OPC=andl_r32_r32           nop                         #  20    0x3a  1      OPC=nop                  
  nop                         #  21    0x31  1      OPC=nop                    nop                         #  21    0x3b  1      OPC=nop                  
  andl $0x80808080, %esi      #  22    0x32  6      OPC=andl_r32_imm32         nop                         #  22    0x3c  1      OPC=nop                  
  jne .L_126860               #  23    0x38  6      OPC=jne_label_1            nop                         #  23    0x3d  1      OPC=nop                  
  nop                         #  24    0x3e  1      OPC=nop                    nop                         #  24    0x3e  1      OPC=nop                  
  nop                         #  25    0x3f  1      OPC=nop                    nop                         #  25    0x3f  1      OPC=nop                  
  nop                         #  26    0x40  1      OPC=nop                  .L_126820:                    #        0x40  0      OPC=<label>              
.L_126820:                    #        0x41  0      OPC=<label>                addl $0x4, %edx             #  26    0x40  3      OPC=addl_r32_imm8        
  addl $0x4, %edx             #  27    0x41  3      OPC=addl_r32_imm8          movl %ecx, %ecx             #  27    0x43  2      OPC=movl_r32_r32         
  movl %ecx, %ecx             #  28    0x44  2      OPC=movl_r32_r32           movl %r8d, (%r15,%rcx,1)    #  28    0x45  4      OPC=movl_m32_r32         
  movl %r8d, (%r15,%rcx,1)    #  29    0x46  4      OPC=movl_m32_r32           addl $0x4, %ecx             #  29    0x49  3      OPC=addl_r32_imm8        
  addl $0x4, %ecx             #  30    0x4a  3      OPC=addl_r32_imm8          movl %edx, %edx             #  30    0x4c  2      OPC=movl_r32_r32         
  andl %edx, %edx             #  31    0x4d  2      OPC=andl_r32_r32           movl (%r15,%rdx,1), %r8d    #  31    0x4e  4      OPC=movl_r32_m32         
  movl (%r15,%rdx,1), %r8d    #  32    0x4f  4      OPC=movl_r32_m32           movl %r8d, %r9d             #  32    0x52  3      OPC=movl_r32_r32         
  movl %r8d, %r9d             #  33    0x53  3      OPC=movl_r32_r32           leal -0x1010101(%r8), %esi  #  33    0x55  7      OPC=leal_r32_m16         
  leal -0x1010101(%r8), %esi  #  34    0x56  7      OPC=leal_r32_m16           notl %r9d                   #  34    0x5c  3      OPC=notl_r32             
  notl %r9d                   #  35    0x5d  3      OPC=notl_r32               nop                         #  35    0x5f  1      OPC=nop                  
  nop                         #  36    0x60  1      OPC=nop                    andl %esi, %r9d             #  36    0x60  3      OPC=andl_r32_r32         
  nop                         #  37    0x61  1      OPC=nop                    andl $0x80808080, %r9d      #  37    0x63  7      OPC=andl_r32_imm32       
  nop                         #  38    0x62  1      OPC=nop                    je .L_126820                #  38    0x6a  6      OPC=je_label_1           
  andl $0x80808080, %r9d      #  39    0x63  7      OPC=andl_r32_imm32         nop                         #  39    0x70  1      OPC=nop                  
  andl %esi, %r9d             #  40    0x6a  3      OPC=andl_r32_r32           nop                         #  40    0x71  1      OPC=nop                  
  je .L_126820                #  41    0x6d  6      OPC=je_label_1             nop                         #  41    0x72  1      OPC=nop                  
  nop                         #  42    0x73  1      OPC=nop                    nop                         #  42    0x73  1      OPC=nop                  
  nop                         #  43    0x74  1      OPC=nop                    nop                         #  43    0x74  1      OPC=nop                  
  nop                         #  44    0x75  1      OPC=nop                    nop                         #  44    0x75  1      OPC=nop                  
  nop                         #  45    0x76  1      OPC=nop                    nop                         #  45    0x76  1      OPC=nop                  
  nop                         #  46    0x77  1      OPC=nop                    nop                         #  46    0x77  1      OPC=nop                  
  nop                         #  47    0x78  1      OPC=nop                    nop                         #  47    0x78  1      OPC=nop                  
  nop                         #  48    0x79  1      OPC=nop                    nop                         #  48    0x79  1      OPC=nop                  
  nop                         #  49    0x7a  1      OPC=nop                    nop                         #  49    0x7a  1      OPC=nop                  
  nop                         #  50    0x7b  1      OPC=nop                    nop                         #  50    0x7b  1      OPC=nop                  
  nop                         #  51    0x7c  1      OPC=nop                    nop                         #  51    0x7c  1      OPC=nop                  
  nop                         #  52    0x7d  1      OPC=nop                    nop                         #  52    0x7d  1      OPC=nop                  
  nop                         #  53    0x7e  1      OPC=nop                    nop                         #  53    0x7e  1      OPC=nop                  
  nop                         #  54    0x7f  1      OPC=nop                    nop                         #  54    0x7f  1      OPC=nop                  
.L_126860:                    #        0x80  0      OPC=<label>              .L_126860:                    #        0x80  0      OPC=<label>              
  movl %edx, %edx             #  55    0x80  2      OPC=movl_r32_r32           movl %edx, %edx             #  55    0x80  2      OPC=movl_r32_r32         
  movzbw (%r15,%rdx,1), %si   #  56    0x82  6      OPC=movzbw_r16_m8          movzbl (%r15,%rdx,1), %esi  #  56    0x82  5      OPC=movzbl_r32_m8        
  movl %ecx, %ecx             #  57    0x88  2      OPC=movl_r32_r32           addl $0x1, %edx             #  57    0x87  3      OPC=addl_r32_imm8        
  movb %sil, (%r15,%rcx,1)    #  58    0x8a  4      OPC=movb_m8_r8             movl %ecx, %ecx             #  58    0x8a  2      OPC=movl_r32_r32         
  addl $0x1, %ecx             #  59    0x8e  3      OPC=addl_r32_imm8          movb %sil, (%r15,%rcx,1)    #  59    0x8c  4      OPC=movb_m8_r8           
  addl $0x1, %edx             #  60    0x91  3      OPC=addl_r32_imm8          addl $0x1, %ecx             #  60    0x90  3      OPC=addl_r32_imm8        
  testb %sil, %sil            #  61    0x94  3      OPC=testb_r8_r8            testb %sil, %sil            #  61    0x93  3      OPC=testb_r8_r8          
  jne .L_126860               #  62    0x97  6      OPC=jne_label_1            jne .L_126860               #  62    0x96  6      OPC=jne_label_1          
  nop                         #  63    0x9d  1      OPC=nop                    nop                         #  63    0x9c  1      OPC=nop                  
  nop                         #  64    0x9e  1      OPC=nop                    nop                         #  64    0x9d  1      OPC=nop                  
  nop                         #  65    0x9f  1      OPC=nop                    nop                         #  65    0x9e  1      OPC=nop                  
  nop                         #  66    0xa0  1      OPC=nop                    nop                         #  66    0x9f  1      OPC=nop                  
  nop                         #  67    0xa1  1      OPC=nop                    nop                         #  67    0xa0  1      OPC=nop                  
  nop                         #  68    0xa2  1      OPC=nop                    popq %r11                   #  68    0xa1  2      OPC=popq_r64_1           
  orb %ah, %ah                #  69    0xa3  2      OPC=orb_rh_rh              andl $0xe0, %r11d           #  69    0xa3  4      OPC=andl_r32_imm8        
  nop                         #  70    0xa5  1      OPC=nop                    addq %r15, %r11             #  70    0xa7  3      OPC=addq_r64_r64         
  nop                         #  71    0xa6  1      OPC=nop                    jmpq %r11                   #  71    0xaa  3      OPC=jmpq_r64             
  popq %r11                   #  72    0xa7  2      OPC=popq_r64_1                                                                                        
  andl $0xe0, %r11d           #  73    0xa9  4      OPC=andl_r32_imm8        .size strcpy, .-strcpy                                                       
  addq %r15, %r11             #  74    0xad  3      OPC=addq_r64_r64                                                                                      
  jmpq %r11                   #  75    0xb0  3      OPC=jmpq_r64                                                                                          
                                                                                                                                                          
.size strcpy, .-strcpy                                                                                                                                    
                                                                                                                                                          

********************************************************************************

Progress Update: 

Lowest Cost Discovered (216)                                                 Lowest Known Correct Cost (216)                                              
                                                                                                                                                          
  .text                                                                        .text                                                                      
  .globl strcpy                                                                .globl strcpy                                                              
  .type strcpy, @function                                                      .type strcpy, @function                                                    
                                                                                                                                                          
#! file-offset 0                                                             #! file-offset 0                                                             
#! rip-offset  0                                                             #! rip-offset  0                                                             
#! capacity    0 bytes                                                       #! capacity    0 bytes                                                       
                                                                                                                                                          
# Text                        #  Line  RIP   Bytes  Opcode                   # Text                        #  Line  RIP   Bytes  Opcode                   
.strcpy:                      #        0     0      OPC=<label>              .strcpy:                      #        0     0      OPC=<label>              
  movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32           movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32         
  nop                         #  2     0x2   1      OPC=nop                    nop                         #  2     0x2   1      OPC=nop                  
  movb %sil, %dil             #  3     0x3   3      OPC=movb_r8_r8             movb %sil, %dil             #  3     0x3   3      OPC=movb_r8_r8           
  nop                         #  4     0x6   1      OPC=nop                    nop                         #  4     0x6   1      OPC=nop                  
  nop                         #  5     0x7   1      OPC=nop                    nop                         #  5     0x7   1      OPC=nop                  
  addl %eax, %edi             #  6     0x8   2      OPC=addl_r32_r32           addl %eax, %edi             #  6     0x8   2      OPC=addl_r32_r32         
  movq %rax, %rcx             #  7     0xa   3      OPC=movq_r64_r64           movq %rax, %rcx             #  7     0xa   3      OPC=movq_r64_r64         
  movq %rsi, %rdx             #  8     0xd   3      OPC=movq_r64_r64           movq %rsi, %rdx             #  8     0xd   3      OPC=movq_r64_r64         
  andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8          andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8        
  jne .L_126860               #  10    0x13  6      OPC=jne_label_1            jne .L_126860               #  10    0x13  6      OPC=jne_label_1          
  nop                         #  11    0x19  1      OPC=nop                    nop                         #  11    0x19  1      OPC=nop                  
  movl %edx, %esi             #  12    0x1a  2      OPC=movl_r32_r32           movl %edx, %esi             #  12    0x1a  2      OPC=movl_r32_r32         
  movl (%r15,%rsi,1), %r8d    #  13    0x1c  4      OPC=movl_r32_m32           movl (%r15,%rsi,1), %r8d    #  13    0x1c  4      OPC=movl_r32_m32         
  orl %r8d, %esi              #  14    0x20  3      OPC=orl_r32_r32_1          orl %r8d, %esi              #  14    0x20  3      OPC=orl_r32_r32_1        
  nop                         #  15    0x23  1      OPC=nop                    nop                         #  15    0x23  1      OPC=nop                  
  leaq -0x1010101(%r8), %rdi  #  16    0x24  7      OPC=leaq_r64_m64           leaq -0x1010101(%r8), %rdi  #  16    0x24  7      OPC=leaq_r64_m64         
  notl %esi                   #  17    0x2b  2      OPC=notl_r32               notl %esi                   #  17    0x2b  2      OPC=notl_r32             
  nop                         #  18    0x2d  1      OPC=nop                    nop                         #  18    0x2d  1      OPC=nop                  
  andl %edi, %esi             #  19    0x2e  2      OPC=andl_r32_r32           andl %edi, %esi             #  19    0x2e  2      OPC=andl_r32_r32         
  nop                         #  20    0x30  1      OPC=nop                    nop                         #  20    0x30  1      OPC=nop                  
  andl $0x80808080, %esi      #  21    0x31  6      OPC=andl_r32_imm32         andl $0x80808080, %esi      #  21    0x31  6      OPC=andl_r32_imm32       
  jne .L_126860               #  22    0x37  6      OPC=jne_label_1            jne .L_126860               #  22    0x37  6      OPC=jne_label_1          
  nop                         #  23    0x3d  1      OPC=nop                    nop                         #  23    0x3d  1      OPC=nop                  
  nop                         #  24    0x3e  1      OPC=nop                    nop                         #  24    0x3e  1      OPC=nop                  
  nop                         #  25    0x3f  1      OPC=nop                    nop                         #  25    0x3f  1      OPC=nop                  
.L_126820:                    #        0x40  0      OPC=<label>              .L_126820:                    #        0x40  0      OPC=<label>              
  addl $0x4, %edx             #  26    0x40  3      OPC=addl_r32_imm8          addl $0x4, %edx             #  26    0x40  3      OPC=addl_r32_imm8        
  movl %ecx, %ecx             #  27    0x43  2      OPC=movl_r32_r32           movl %ecx, %ecx             #  27    0x43  2      OPC=movl_r32_r32         
  movl %r8d, (%r15,%rcx,1)    #  28    0x45  4      OPC=movl_m32_r32           movl %r8d, (%r15,%rcx,1)    #  28    0x45  4      OPC=movl_m32_r32         
  addl $0x4, %ecx             #  29    0x49  3      OPC=addl_r32_imm8          addl $0x4, %ecx             #  29    0x49  3      OPC=addl_r32_imm8        
  andl %edx, %edx             #  30    0x4c  2      OPC=andl_r32_r32           andl %edx, %edx             #  30    0x4c  2      OPC=andl_r32_r32         
  movl (%r15,%rdx,1), %r8d    #  31    0x4e  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %r8d    #  31    0x4e  4      OPC=movl_r32_m32         
  movl %r8d, %r9d             #  32    0x52  3      OPC=movl_r32_r32           movl %r8d, %r9d             #  32    0x52  3      OPC=movl_r32_r32         
  leal -0x1010101(%r8), %esi  #  33    0x55  7      OPC=leal_r32_m16           leal -0x1010101(%r8), %esi  #  33    0x55  7      OPC=leal_r32_m16         
  notl %r9d                   #  34    0x5c  3      OPC=notl_r32               notl %r9d                   #  34    0x5c  3      OPC=notl_r32             
  nop                         #  35    0x5f  1      OPC=nop                    nop                         #  35    0x5f  1      OPC=nop                  
  nop                         #  36    0x60  1      OPC=nop                    nop                         #  36    0x60  1      OPC=nop                  
  nop                         #  37    0x61  1      OPC=nop                    nop                         #  37    0x61  1      OPC=nop                  
  andl $0x80808080, %r9d      #  38    0x62  7      OPC=andl_r32_imm32         andl $0x80808080, %r9d      #  38    0x62  7      OPC=andl_r32_imm32       
  andl %esi, %r9d             #  39    0x69  3      OPC=andl_r32_r32           andl %esi, %r9d             #  39    0x69  3      OPC=andl_r32_r32         
  je .L_126820                #  40    0x6c  6      OPC=je_label_1             je .L_126820                #  40    0x6c  6      OPC=je_label_1           
  nop                         #  41    0x72  1      OPC=nop                    nop                         #  41    0x72  1      OPC=nop                  
  nop                         #  42    0x73  1      OPC=nop                    nop                         #  42    0x73  1      OPC=nop                  
  nop                         #  43    0x74  1      OPC=nop                    nop                         #  43    0x74  1      OPC=nop                  
  nop                         #  44    0x75  1      OPC=nop                    nop                         #  44    0x75  1      OPC=nop                  
  nop                         #  45    0x76  1      OPC=nop                    nop                         #  45    0x76  1      OPC=nop                  
  nop                         #  46    0x77  1      OPC=nop                    nop                         #  46    0x77  1      OPC=nop                  
  nop                         #  47    0x78  1      OPC=nop                    nop                         #  47    0x78  1      OPC=nop                  
  nop                         #  48    0x79  1      OPC=nop                    nop                         #  48    0x79  1      OPC=nop                  
  nop                         #  49    0x7a  1      OPC=nop                    nop                         #  49    0x7a  1      OPC=nop                  
  nop                         #  50    0x7b  1      OPC=nop                    nop                         #  50    0x7b  1      OPC=nop                  
  nop                         #  51    0x7c  1      OPC=nop                    nop                         #  51    0x7c  1      OPC=nop                  
  nop                         #  52    0x7d  1      OPC=nop                    nop                         #  52    0x7d  1      OPC=nop                  
  nop                         #  53    0x7e  1      OPC=nop                    nop                         #  53    0x7e  1      OPC=nop                  
  nop                         #  54    0x7f  1      OPC=nop                    nop                         #  54    0x7f  1      OPC=nop                  
.L_126860:                    #        0x80  0      OPC=<label>              .L_126860:                    #        0x80  0      OPC=<label>              
  movl %edx, %edx             #  55    0x80  2      OPC=movl_r32_r32           movl %edx, %edx             #  55    0x80  2      OPC=movl_r32_r32         
  movzbw (%r15,%rdx,1), %si   #  56    0x82  6      OPC=movzbw_r16_m8          movzbw (%r15,%rdx,1), %si   #  56    0x82  6      OPC=movzbw_r16_m8        
  movl %ecx, %ecx             #  57    0x88  2      OPC=movl_r32_r32           movl %ecx, %ecx             #  57    0x88  2      OPC=movl_r32_r32         
  movb %sil, (%r15,%rcx,1)    #  58    0x8a  4      OPC=movb_m8_r8             movb %sil, (%r15,%rcx,1)    #  58    0x8a  4      OPC=movb_m8_r8           
  addl $0x1, %ecx             #  59    0x8e  3      OPC=addl_r32_imm8          addl $0x1, %ecx             #  59    0x8e  3      OPC=addl_r32_imm8        
  addl $0x1, %edx             #  60    0x91  3      OPC=addl_r32_imm8          addl $0x1, %edx             #  60    0x91  3      OPC=addl_r32_imm8        
  testb %sil, %sil            #  61    0x94  3      OPC=testb_r8_r8            testb %sil, %sil            #  61    0x94  3      OPC=testb_r8_r8          
  jne .L_126860               #  62    0x97  6      OPC=jne_label_1            jne .L_126860               #  62    0x97  6      OPC=jne_label_1          
  nop                         #  63    0x9d  1      OPC=nop                    nop                         #  63    0x9d  1      OPC=nop                  
  nop                         #  64    0x9e  1      OPC=nop                    nop                         #  64    0x9e  1      OPC=nop                  
  nop                         #  65    0x9f  1      OPC=nop                    nop                         #  65    0x9f  1      OPC=nop                  
  nop                         #  66    0xa0  1      OPC=nop                    nop                         #  66    0xa0  1      OPC=nop                  
  nop                         #  67    0xa1  1      OPC=nop                    nop                         #  67    0xa1  1      OPC=nop                  
  nop                         #  68    0xa2  1      OPC=nop                    nop                         #  68    0xa2  1      OPC=nop                  
  orb %ah, %ah                #  69    0xa3  2      OPC=orb_rh_rh              orb %ah, %ah                #  69    0xa3  2      OPC=orb_rh_rh            
  nop                         #  70    0xa5  1      OPC=nop                    nop                         #  70    0xa5  1      OPC=nop                  
  nop                         #  71    0xa6  1      OPC=nop                    nop                         #  71    0xa6  1      OPC=nop                  
  popq %r11                   #  72    0xa7  2      OPC=popq_r64_1             popq %r11                   #  72    0xa7  2      OPC=popq_r64_1           
  andl $0xe0, %r11d           #  73    0xa9  4      OPC=andl_r32_imm8          andl $0xe0, %r11d           #  73    0xa9  4      OPC=andl_r32_imm8        
  addq %r15, %r11             #  74    0xad  3      OPC=addq_r64_r64           addq %r15, %r11             #  74    0xad  3      OPC=addq_r64_r64         
  jmpq %r11                   #  75    0xb0  3      OPC=jmpq_r64               jmpq %r11                   #  75    0xb0  3      OPC=jmpq_r64             
                                                                                                                                                          
.size strcpy, .-strcpy                                                       .size strcpy, .-strcpy                                                       
                                                                                                                                                          

********************************************************************************

Progress Update: 

Lowest Cost Discovered (215)                                                 Lowest Known Correct Cost (215)                                              
                                                                                                                                                          
  .text                                                                        .text                                                                      
  .globl strcpy                                                                .globl strcpy                                                              
  .type strcpy, @function                                                      .type strcpy, @function                                                    
                                                                                                                                                          
#! file-offset 0                                                             #! file-offset 0                                                             
#! rip-offset  0                                                             #! rip-offset  0                                                             
#! capacity    0 bytes                                                       #! capacity    0 bytes                                                       
                                                                                                                                                          
# Text                        #  Line  RIP   Bytes  Opcode                   # Text                        #  Line  RIP   Bytes  Opcode                   
.strcpy:                      #        0     0      OPC=<label>              .strcpy:                      #        0     0      OPC=<label>              
  movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32           movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32         
  movb %sil, %dil             #  2     0x2   3      OPC=movb_r8_r8             movb %sil, %dil             #  2     0x2   3      OPC=movb_r8_r8           
  movq %rsi, %rdx             #  3     0x5   3      OPC=movq_r64_r64           movq %rsi, %rdx             #  3     0x5   3      OPC=movq_r64_r64         
  nop                         #  4     0x8   1      OPC=nop                    nop                         #  4     0x8   1      OPC=nop                  
  nop                         #  5     0x9   1      OPC=nop                    nop                         #  5     0x9   1      OPC=nop                  
  nop                         #  6     0xa   1      OPC=nop                    nop                         #  6     0xa   1      OPC=nop                  
  addl %eax, %edi             #  7     0xb   2      OPC=addl_r32_r32           addl %eax, %edi             #  7     0xb   2      OPC=addl_r32_r32         
  movq %rax, %rcx             #  8     0xd   3      OPC=movq_r64_r64           movq %rax, %rcx             #  8     0xd   3      OPC=movq_r64_r64         
  andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8          andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8        
  jne .L_126860               #  10    0x13  6      OPC=jne_label_1            jne .L_126860               #  10    0x13  6      OPC=jne_label_1          
  movl %edx, %esi             #  11    0x19  2      OPC=movl_r32_r32           movl %edx, %esi             #  11    0x19  2      OPC=movl_r32_r32         
  movl (%r15,%rsi,1), %r8d    #  12    0x1b  4      OPC=movl_r32_m32           movl (%r15,%rsi,1), %r8d    #  12    0x1b  4      OPC=movl_r32_m32         
  nop                         #  13    0x1f  1      OPC=nop                    nop                         #  13    0x1f  1      OPC=nop                  
  nop                         #  14    0x20  1      OPC=nop                    nop                         #  14    0x20  1      OPC=nop                  
  nop                         #  15    0x21  1      OPC=nop                    nop                         #  15    0x21  1      OPC=nop                  
  nop                         #  16    0x22  1      OPC=nop                    nop                         #  16    0x22  1      OPC=nop                  
  leaq -0x1010101(%r8), %rdi  #  17    0x23  7      OPC=leaq_r64_m64           leaq -0x1010101(%r8), %rdi  #  17    0x23  7      OPC=leaq_r64_m64         
  notl %esi                   #  18    0x2a  2      OPC=notl_r32               notl %esi                   #  18    0x2a  2      OPC=notl_r32             
  nop                         #  19    0x2c  1      OPC=nop                    nop                         #  19    0x2c  1      OPC=nop                  
  nop                         #  20    0x2d  1      OPC=nop                    nop                         #  20    0x2d  1      OPC=nop                  
  andl %edi, %esi             #  21    0x2e  2      OPC=andl_r32_r32           andl %edi, %esi             #  21    0x2e  2      OPC=andl_r32_r32         
  andl $0x80, %esi            #  22    0x30  6      OPC=andl_r32_imm32         andl $0x80, %esi            #  22    0x30  6      OPC=andl_r32_imm32       
  jne .L_126860               #  23    0x36  6      OPC=jne_label_1            jne .L_126860               #  23    0x36  6      OPC=jne_label_1          
  nop                         #  24    0x3c  1      OPC=nop                    nop                         #  24    0x3c  1      OPC=nop                  
  nop                         #  25    0x3d  1      OPC=nop                    nop                         #  25    0x3d  1      OPC=nop                  
  nop                         #  26    0x3e  1      OPC=nop                    nop                         #  26    0x3e  1      OPC=nop                  
  nop                         #  27    0x3f  1      OPC=nop                    nop                         #  27    0x3f  1      OPC=nop                  
.L_126820:                    #        0x40  0      OPC=<label>              .L_126820:                    #        0x40  0      OPC=<label>              
  addl $0x4, %edx             #  28    0x40  3      OPC=addl_r32_imm8          addl $0x4, %edx             #  28    0x40  3      OPC=addl_r32_imm8        
  movl %ecx, %ecx             #  29    0x43  2      OPC=movl_r32_r32_1         movl %ecx, %ecx             #  29    0x43  2      OPC=movl_r32_r32_1       
  movl %r8d, (%r15,%rcx,1)    #  30    0x45  4      OPC=movl_m32_r32           movl %r8d, (%r15,%rcx,1)    #  30    0x45  4      OPC=movl_m32_r32         
  addl $0x4, %ecx             #  31    0x49  3      OPC=addl_r32_imm8          addl $0x4, %ecx             #  31    0x49  3      OPC=addl_r32_imm8        
  xorl %esp, %edx             #  32    0x4c  2      OPC=xorl_r32_r32           xorl %esp, %edx             #  32    0x4c  2      OPC=xorl_r32_r32         
  movl (%r15,%rdx,1), %r8d    #  33    0x4e  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %r8d    #  33    0x4e  4      OPC=movl_r32_m32         
  movl %r8d, %r9d             #  34    0x52  3      OPC=movl_r32_r32           movl %r8d, %r9d             #  34    0x52  3      OPC=movl_r32_r32         
  leal -0x1010101(%r8), %esi  #  35    0x55  7      OPC=leal_r32_m16           leal -0x1010101(%r8), %esi  #  35    0x55  7      OPC=leal_r32_m16         
  notl %r9d                   #  36    0x5c  3      OPC=notl_r32               notl %r9d                   #  36    0x5c  3      OPC=notl_r32             
  nop                         #  37    0x5f  1      OPC=nop                    nop                         #  37    0x5f  1      OPC=nop                  
  andl $0x80808080, %r9d      #  38    0x60  7      OPC=andl_r32_imm32         andl $0x80808080, %r9d      #  38    0x60  7      OPC=andl_r32_imm32       
  andl %esi, %r9d             #  39    0x67  3      OPC=andl_r32_r32           andl %esi, %r9d             #  39    0x67  3      OPC=andl_r32_r32         
  je .L_126820                #  40    0x6a  6      OPC=je_label_1             je .L_126820                #  40    0x6a  6      OPC=je_label_1           
  nop                         #  41    0x70  1      OPC=nop                    nop                         #  41    0x70  1      OPC=nop                  
  nop                         #  42    0x71  1      OPC=nop                    nop                         #  42    0x71  1      OPC=nop                  
  nop                         #  43    0x72  1      OPC=nop                    nop                         #  43    0x72  1      OPC=nop                  
  nop                         #  44    0x73  1      OPC=nop                    nop                         #  44    0x73  1      OPC=nop                  
  nop                         #  45    0x74  1      OPC=nop                    nop                         #  45    0x74  1      OPC=nop                  
  nop                         #  46    0x75  1      OPC=nop                    nop                         #  46    0x75  1      OPC=nop                  
  nop                         #  47    0x76  1      OPC=nop                    nop                         #  47    0x76  1      OPC=nop                  
  nop                         #  48    0x77  1      OPC=nop                    nop                         #  48    0x77  1      OPC=nop                  
  nop                         #  49    0x78  1      OPC=nop                    nop                         #  49    0x78  1      OPC=nop                  
  nop                         #  50    0x79  1      OPC=nop                    nop                         #  50    0x79  1      OPC=nop                  
  nop                         #  51    0x7a  1      OPC=nop                    nop                         #  51    0x7a  1      OPC=nop                  
  nop                         #  52    0x7b  1      OPC=nop                    nop                         #  52    0x7b  1      OPC=nop                  
  nop                         #  53    0x7c  1      OPC=nop                    nop                         #  53    0x7c  1      OPC=nop                  
  nop                         #  54    0x7d  1      OPC=nop                    nop                         #  54    0x7d  1      OPC=nop                  
  nop                         #  55    0x7e  1      OPC=nop                    nop                         #  55    0x7e  1      OPC=nop                  
  nop                         #  56    0x7f  1      OPC=nop                    nop                         #  56    0x7f  1      OPC=nop                  
.L_126860:                    #        0x80  0      OPC=<label>              .L_126860:                    #        0x80  0      OPC=<label>              
  movl %edx, %edx             #  57    0x80  2      OPC=movl_r32_r32           movl %edx, %edx             #  57    0x80  2      OPC=movl_r32_r32         
  movzbq (%r15,%rdx,1), %rsi  #  58    0x82  5      OPC=movzbq_r64_m8          movzbq (%r15,%rdx,1), %rsi  #  58    0x82  5      OPC=movzbq_r64_m8        
  andl %ecx, %ecx             #  59    0x87  2      OPC=andl_r32_r32           andl %ecx, %ecx             #  59    0x87  2      OPC=andl_r32_r32         
  movb %sil, (%r15,%rcx,1)    #  60    0x89  4      OPC=movb_m8_r8             movb %sil, (%r15,%rcx,1)    #  60    0x89  4      OPC=movb_m8_r8           
  addl $0x1, %ecx             #  61    0x8d  3      OPC=addl_r32_imm8          addl $0x1, %ecx             #  61    0x8d  3      OPC=addl_r32_imm8        
  addl $0x1, %edx             #  62    0x90  3      OPC=addl_r32_imm8          addl $0x1, %edx             #  62    0x90  3      OPC=addl_r32_imm8        
  testb %sil, %sil            #  63    0x93  3      OPC=testb_r8_r8            testb %sil, %sil            #  63    0x93  3      OPC=testb_r8_r8          
  jne .L_126860               #  64    0x96  6      OPC=jne_label_1            jne .L_126860               #  64    0x96  6      OPC=jne_label_1          
  nop                         #  65    0x9c  1      OPC=nop                    nop                         #  65    0x9c  1      OPC=nop                  
  nop                         #  66    0x9d  1      OPC=nop                    nop                         #  66    0x9d  1      OPC=nop                  
  nop                         #  67    0x9e  1      OPC=nop                    nop                         #  67    0x9e  1      OPC=nop                  
  nop                         #  68    0x9f  1      OPC=nop                    nop                         #  68    0x9f  1      OPC=nop                  
  nop                         #  69    0xa0  1      OPC=nop                    nop                         #  69    0xa0  1      OPC=nop                  
  nop                         #  70    0xa1  1      OPC=nop                    nop                         #  70    0xa1  1      OPC=nop                  
  nop                         #  71    0xa2  1      OPC=nop                    nop                         #  71    0xa2  1      OPC=nop                  
  nop                         #  72    0xa3  1      OPC=nop                    nop                         #  72    0xa3  1      OPC=nop                  
  popq %r11                   #  73    0xa4  2      OPC=popq_r64_1             popq %r11                   #  73    0xa4  2      OPC=popq_r64_1           
  andl $0xe0, %r11d           #  74    0xa6  4      OPC=andl_r32_imm8          andl $0xe0, %r11d           #  74    0xa6  4      OPC=andl_r32_imm8        
  addq %r15, %r11             #  75    0xaa  3      OPC=addq_r64_r64           addq %r15, %r11             #  75    0xaa  3      OPC=addq_r64_r64         
  jmpq %r11                   #  76    0xad  3      OPC=jmpq_r64               jmpq %r11                   #  76    0xad  3      OPC=jmpq_r64             
                                                                                                                                                          
.size strcpy, .-strcpy                                                       .size strcpy, .-strcpy                                                       
                                                                                                                                                          

********************************************************************************

Progress Update: 

Lowest Cost Discovered (214)                                                 Lowest Known Correct Cost (214)                                              
                                                                                                                                                          
  .text                                                                        .text                                                                      
  .globl strcpy                                                                .globl strcpy                                                              
  .type strcpy, @function                                                      .type strcpy, @function                                                    
                                                                                                                                                          
#! file-offset 0                                                             #! file-offset 0                                                             
#! rip-offset  0                                                             #! rip-offset  0                                                             
#! capacity    0 bytes                                                       #! capacity    0 bytes                                                       
                                                                                                                                                          
# Text                        #  Line  RIP   Bytes  Opcode                   # Text                        #  Line  RIP   Bytes  Opcode                   
.strcpy:                      #        0     0      OPC=<label>              .strcpy:                      #        0     0      OPC=<label>              
  movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32           movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32         
  movq %rsi, %rdx             #  2     0x2   3      OPC=movq_r64_r64           movq %rsi, %rdx             #  2     0x2   3      OPC=movq_r64_r64         
  nop                         #  3     0x5   1      OPC=nop                    nop                         #  3     0x5   1      OPC=nop                  
  movq %rax, %rcx             #  4     0x6   3      OPC=movq_r64_r64           movq %rax, %rcx             #  4     0x6   3      OPC=movq_r64_r64         
  nop                         #  5     0x9   1      OPC=nop                    nop                         #  5     0x9   1      OPC=nop                  
  nop                         #  6     0xa   1      OPC=nop                    nop                         #  6     0xa   1      OPC=nop                  
  movb %sil, %dil             #  7     0xb   3      OPC=movb_r8_r8             movb %sil, %dil             #  7     0xb   3      OPC=movb_r8_r8           
  addl %eax, %edi             #  8     0xe   2      OPC=addl_r32_r32           addl %eax, %edi             #  8     0xe   2      OPC=addl_r32_r32         
  andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8          andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8        
  jne .L_126860               #  10    0x13  6      OPC=jne_label_1            jne .L_126860               #  10    0x13  6      OPC=jne_label_1          
  movl %edx, %esi             #  11    0x19  2      OPC=movl_r32_r32           movl %edx, %esi             #  11    0x19  2      OPC=movl_r32_r32         
  movl (%r15,%rsi,1), %r8d    #  12    0x1b  4      OPC=movl_r32_m32           movl (%r15,%rsi,1), %r8d    #  12    0x1b  4      OPC=movl_r32_m32         
  nop                         #  13    0x1f  1      OPC=nop                    nop                         #  13    0x1f  1      OPC=nop                  
  notl %esi                   #  14    0x20  2      OPC=notl_r32               notl %esi                   #  14    0x20  2      OPC=notl_r32             
  nop                         #  15    0x22  1      OPC=nop                    nop                         #  15    0x22  1      OPC=nop                  
  nop                         #  16    0x23  1      OPC=nop                    nop                         #  16    0x23  1      OPC=nop                  
  leaq -0x1010101(%r8), %rdi  #  17    0x24  7      OPC=leaq_r64_m64           leaq -0x1010101(%r8), %rdi  #  17    0x24  7      OPC=leaq_r64_m64         
  nop                         #  18    0x2b  1      OPC=nop                    nop                         #  18    0x2b  1      OPC=nop                  
  nop                         #  19    0x2c  1      OPC=nop                    nop                         #  19    0x2c  1      OPC=nop                  
  andl %edi, %esi             #  20    0x2d  2      OPC=andl_r32_r32           andl %edi, %esi             #  20    0x2d  2      OPC=andl_r32_r32         
  andl $0x80, %esi            #  21    0x2f  6      OPC=andl_r32_imm32         andl $0x80, %esi            #  21    0x2f  6      OPC=andl_r32_imm32       
  jne .L_126860               #  22    0x35  6      OPC=jne_label_1            jne .L_126860               #  22    0x35  6      OPC=jne_label_1          
  nop                         #  23    0x3b  1      OPC=nop                    nop                         #  23    0x3b  1      OPC=nop                  
  nop                         #  24    0x3c  1      OPC=nop                    nop                         #  24    0x3c  1      OPC=nop                  
  nop                         #  25    0x3d  1      OPC=nop                    nop                         #  25    0x3d  1      OPC=nop                  
  nop                         #  26    0x3e  1      OPC=nop                    nop                         #  26    0x3e  1      OPC=nop                  
  nop                         #  27    0x3f  1      OPC=nop                    nop                         #  27    0x3f  1      OPC=nop                  
.L_126820:                    #        0x40  0      OPC=<label>              .L_126820:                    #        0x40  0      OPC=<label>              
  addl $0x4, %edx             #  28    0x40  3      OPC=addl_r32_imm8          addl $0x4, %edx             #  28    0x40  3      OPC=addl_r32_imm8        
  movl %ecx, %ecx             #  29    0x43  2      OPC=movl_r32_r32_1         movl %ecx, %ecx             #  29    0x43  2      OPC=movl_r32_r32_1       
  movl %r8d, (%r15,%rcx,1)    #  30    0x45  4      OPC=movl_m32_r32           movl %r8d, (%r15,%rcx,1)    #  30    0x45  4      OPC=movl_m32_r32         
  addl $0x4, %ecx             #  31    0x49  3      OPC=addl_r32_imm8          addl $0x4, %ecx             #  31    0x49  3      OPC=addl_r32_imm8        
  xorl %esp, %edx             #  32    0x4c  2      OPC=xorl_r32_r32           xorl %esp, %edx             #  32    0x4c  2      OPC=xorl_r32_r32         
  movl (%r15,%rdx,1), %r8d    #  33    0x4e  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %r8d    #  33    0x4e  4      OPC=movl_r32_m32         
  movl %r8d, %r9d             #  34    0x52  3      OPC=movl_r32_r32           movl %r8d, %r9d             #  34    0x52  3      OPC=movl_r32_r32         
  leal -0x1010101(%r8), %esi  #  35    0x55  7      OPC=leal_r32_m16           leal -0x1010101(%r8), %esi  #  35    0x55  7      OPC=leal_r32_m16         
  notl %r9d                   #  36    0x5c  3      OPC=notl_r32               notl %r9d                   #  36    0x5c  3      OPC=notl_r32             
  nop                         #  37    0x5f  1      OPC=nop                    nop                         #  37    0x5f  1      OPC=nop                  
  andl $0x80808080, %r9d      #  38    0x60  7      OPC=andl_r32_imm32         andl $0x80808080, %r9d      #  38    0x60  7      OPC=andl_r32_imm32       
  andl %esi, %r9d             #  39    0x67  3      OPC=andl_r32_r32           andl %esi, %r9d             #  39    0x67  3      OPC=andl_r32_r32         
  je .L_126820                #  40    0x6a  6      OPC=je_label_1             je .L_126820                #  40    0x6a  6      OPC=je_label_1           
  nop                         #  41    0x70  1      OPC=nop                    nop                         #  41    0x70  1      OPC=nop                  
  nop                         #  42    0x71  1      OPC=nop                    nop                         #  42    0x71  1      OPC=nop                  
  nop                         #  43    0x72  1      OPC=nop                    nop                         #  43    0x72  1      OPC=nop                  
  nop                         #  44    0x73  1      OPC=nop                    nop                         #  44    0x73  1      OPC=nop                  
  nop                         #  45    0x74  1      OPC=nop                    nop                         #  45    0x74  1      OPC=nop                  
  nop                         #  46    0x75  1      OPC=nop                    nop                         #  46    0x75  1      OPC=nop                  
  nop                         #  47    0x76  1      OPC=nop                    nop                         #  47    0x76  1      OPC=nop                  
  nop                         #  48    0x77  1      OPC=nop                    nop                         #  48    0x77  1      OPC=nop                  
  nop                         #  49    0x78  1      OPC=nop                    nop                         #  49    0x78  1      OPC=nop                  
  nop                         #  50    0x79  1      OPC=nop                    nop                         #  50    0x79  1      OPC=nop                  
  nop                         #  51    0x7a  1      OPC=nop                    nop                         #  51    0x7a  1      OPC=nop                  
  nop                         #  52    0x7b  1      OPC=nop                    nop                         #  52    0x7b  1      OPC=nop                  
  nop                         #  53    0x7c  1      OPC=nop                    nop                         #  53    0x7c  1      OPC=nop                  
  nop                         #  54    0x7d  1      OPC=nop                    nop                         #  54    0x7d  1      OPC=nop                  
  nop                         #  55    0x7e  1      OPC=nop                    nop                         #  55    0x7e  1      OPC=nop                  
  nop                         #  56    0x7f  1      OPC=nop                    nop                         #  56    0x7f  1      OPC=nop                  
.L_126860:                    #        0x80  0      OPC=<label>              .L_126860:                    #        0x80  0      OPC=<label>              
  movl %edx, %edx             #  57    0x80  2      OPC=movl_r32_r32           movl %edx, %edx             #  57    0x80  2      OPC=movl_r32_r32         
  movzbq (%r15,%rdx,1), %rsi  #  58    0x82  5      OPC=movzbq_r64_m8          movzbq (%r15,%rdx,1), %rsi  #  58    0x82  5      OPC=movzbq_r64_m8        
  andl %ecx, %ecx             #  59    0x87  2      OPC=andl_r32_r32           andl %ecx, %ecx             #  59    0x87  2      OPC=andl_r32_r32         
  movb %sil, (%r15,%rcx,1)    #  60    0x89  4      OPC=movb_m8_r8             movb %sil, (%r15,%rcx,1)    #  60    0x89  4      OPC=movb_m8_r8           
  addl $0x1, %ecx             #  61    0x8d  3      OPC=addl_r32_imm8          addl $0x1, %ecx             #  61    0x8d  3      OPC=addl_r32_imm8        
  addl $0x1, %edx             #  62    0x90  3      OPC=addl_r32_imm8          addl $0x1, %edx             #  62    0x90  3      OPC=addl_r32_imm8        
  testb %sil, %sil            #  63    0x93  3      OPC=testb_r8_r8            testb %sil, %sil            #  63    0x93  3      OPC=testb_r8_r8          
  jne .L_126860               #  64    0x96  6      OPC=jne_label_1            jne .L_126860               #  64    0x96  6      OPC=jne_label_1          
  nop                         #  65    0x9c  1      OPC=nop                    nop                         #  65    0x9c  1      OPC=nop                  
  nop                         #  66    0x9d  1      OPC=nop                    nop                         #  66    0x9d  1      OPC=nop                  
  nop                         #  67    0x9e  1      OPC=nop                    nop                         #  67    0x9e  1      OPC=nop                  
  nop                         #  68    0x9f  1      OPC=nop                    nop                         #  68    0x9f  1      OPC=nop                  
  nop                         #  69    0xa0  1      OPC=nop                    nop                         #  69    0xa0  1      OPC=nop                  
  nop                         #  70    0xa1  1      OPC=nop                    nop                         #  70    0xa1  1      OPC=nop                  
  nop                         #  71    0xa2  1      OPC=nop                    nop                         #  71    0xa2  1      OPC=nop                  
  nop                         #  72    0xa3  1      OPC=nop                    nop                         #  72    0xa3  1      OPC=nop                  
  nop                         #  73    0xa4  1      OPC=nop                    nop                         #  73    0xa4  1      OPC=nop                  
  nop                         #  74    0xa5  1      OPC=nop                    nop                         #  74    0xa5  1      OPC=nop                  
  nop                         #  75    0xa6  1      OPC=nop                    nop                         #  75    0xa6  1      OPC=nop                  
  popq %r11                   #  76    0xa7  2      OPC=popq_r64_1             popq %r11                   #  76    0xa7  2      OPC=popq_r64_1           
  andl $0xe0, %r11d           #  77    0xa9  4      OPC=andl_r32_imm8          andl $0xe0, %r11d           #  77    0xa9  4      OPC=andl_r32_imm8        
  addq %r15, %r11             #  78    0xad  3      OPC=addq_r64_r64           addq %r15, %r11             #  78    0xad  3      OPC=addq_r64_r64         
  jmpq %r11                   #  79    0xb0  3      OPC=jmpq_r64               jmpq %r11                   #  79    0xb0  3      OPC=jmpq_r64             
                                                                                                                                                          
.size strcpy, .-strcpy                                                       .size strcpy, .-strcpy                                                       
                                                                                                                                                          

********************************************************************************

Progress Update: 

Lowest Cost Discovered (210)                                                 Lowest Known Correct Cost (214)                                              
                                                                                                                                                          
  .text                                                                        .text                                                                      
  .globl strcpy                                                                .globl strcpy                                                              
  .type strcpy, @function                                                      .type strcpy, @function                                                    
                                                                                                                                                          
#! file-offset 0                                                             #! file-offset 0                                                             
#! rip-offset  0                                                             #! rip-offset  0                                                             
#! capacity    0 bytes                                                       #! capacity    0 bytes                                                       
                                                                                                                                                          
# Text                        #  Line  RIP   Bytes  Opcode                   # Text                        #  Line  RIP   Bytes  Opcode                   
.strcpy:                      #        0     0      OPC=<label>              .strcpy:                      #        0     0      OPC=<label>              
  movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32_1         movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32         
  movb %sil, %dil             #  2     0x2   3      OPC=movb_r8_r8_1           movq %rsi, %rdx             #  2     0x2   3      OPC=movq_r64_r64         
  movq %rax, %rcx             #  3     0x5   3      OPC=movq_r64_r64_1         nop                         #  3     0x5   1      OPC=nop                  
  nop                         #  4     0x8   1      OPC=nop                    movq %rax, %rcx             #  4     0x6   3      OPC=movq_r64_r64         
  nop                         #  5     0x9   1      OPC=nop                    nop                         #  5     0x9   1      OPC=nop                  
  nop                         #  6     0xa   1      OPC=nop                    nop                         #  6     0xa   1      OPC=nop                  
  movq %rsi, %rdx             #  7     0xb   3      OPC=movq_r64_r64           movb %sil, %dil             #  7     0xb   3      OPC=movb_r8_r8           
  nop                         #  8     0xe   1      OPC=nop                    addl %eax, %edi             #  8     0xe   2      OPC=addl_r32_r32         
  addl %eax, %edi             #  9     0xf   2      OPC=addl_r32_r32           andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8        
  andl $0x3, %edi             #  10    0x11  3      OPC=andl_r32_imm8          jne .L_126860               #  10    0x13  6      OPC=jne_label_1          
  jne .L_126860               #  11    0x14  6      OPC=jne_label_1            movl %edx, %esi             #  11    0x19  2      OPC=movl_r32_r32         
  orl %edx, %esi              #  12    0x1a  2      OPC=orl_r32_r32_1          movl (%r15,%rsi,1), %r8d    #  12    0x1b  4      OPC=movl_r32_m32         
  movl (%r15,%rsi,1), %r8d    #  13    0x1c  4      OPC=movl_r32_m32           nop                         #  13    0x1f  1      OPC=nop                  
  nop                         #  14    0x20  1      OPC=nop                    notl %esi                   #  14    0x20  2      OPC=notl_r32             
  nop                         #  15    0x21  1      OPC=nop                    nop                         #  15    0x22  1      OPC=nop                  
  nop                         #  16    0x22  1      OPC=nop                    nop                         #  16    0x23  1      OPC=nop                  
  nop                         #  17    0x23  1      OPC=nop                    leaq -0x1010101(%r8), %rdi  #  17    0x24  7      OPC=leaq_r64_m64         
  notl %esi                   #  18    0x24  2      OPC=notl_r32               nop                         #  18    0x2b  1      OPC=nop                  
  nop                         #  19    0x26  1      OPC=nop                    nop                         #  19    0x2c  1      OPC=nop                  
  nop                         #  20    0x27  1      OPC=nop                    andl %edi, %esi             #  20    0x2d  2      OPC=andl_r32_r32         
  leaq -0x1010101(%r8), %rdi  #  21    0x28  7      OPC=leaq_r64_m64           andl $0x80, %esi            #  21    0x2f  6      OPC=andl_r32_imm32       
  andl %edi, %esi             #  22    0x2f  2      OPC=andl_r32_r32           jne .L_126860               #  22    0x35  6      OPC=jne_label_1          
  nop                         #  23    0x31  1      OPC=nop                    nop                         #  23    0x3b  1      OPC=nop                  
  nop                         #  24    0x32  1      OPC=nop                    nop                         #  24    0x3c  1      OPC=nop                  
  andl $0x80, %esi            #  25    0x33  6      OPC=andl_r32_imm32         nop                         #  25    0x3d  1      OPC=nop                  
  jne .L_126860               #  26    0x39  6      OPC=jne_label_1            nop                         #  26    0x3e  1      OPC=nop                  
  nop                         #  27    0x3f  1      OPC=nop                    nop                         #  27    0x3f  1      OPC=nop                  
  nop                         #  28    0x40  1      OPC=nop                  .L_126820:                    #        0x40  0      OPC=<label>              
  nop                         #  29    0x41  1      OPC=nop                    addl $0x4, %edx             #  28    0x40  3      OPC=addl_r32_imm8        
  nop                         #  30    0x42  1      OPC=nop                    movl %ecx, %ecx             #  29    0x43  2      OPC=movl_r32_r32_1       
  nop                         #  31    0x43  1      OPC=nop                    movl %r8d, (%r15,%rcx,1)    #  30    0x45  4      OPC=movl_m32_r32         
.L_126820:                    #        0x44  0      OPC=<label>                addl $0x4, %ecx             #  31    0x49  3      OPC=addl_r32_imm8        
  addl $0x4, %edx             #  32    0x44  3      OPC=addl_r32_imm8          xorl %esp, %edx             #  32    0x4c  2      OPC=xorl_r32_r32         
  andl %ecx, %ecx             #  33    0x47  2      OPC=andl_r32_r32           movl (%r15,%rdx,1), %r8d    #  33    0x4e  4      OPC=movl_r32_m32         
  movl %r8d, (%r15,%rcx,1)    #  34    0x49  4      OPC=movl_m32_r32           movl %r8d, %r9d             #  34    0x52  3      OPC=movl_r32_r32         
  addl $0x4, %ecx             #  35    0x4d  3      OPC=addl_r32_imm8          leal -0x1010101(%r8), %esi  #  35    0x55  7      OPC=leal_r32_m16         
  orl %esp, %edx              #  36    0x50  2      OPC=orl_r32_r32            notl %r9d                   #  36    0x5c  3      OPC=notl_r32             
  movl (%r15,%rdx,1), %r8d    #  37    0x52  4      OPC=movl_r32_m32           nop                         #  37    0x5f  1      OPC=nop                  
  movl %r8d, %r9d             #  38    0x56  3      OPC=movl_r32_r32           andl $0x80808080, %r9d      #  38    0x60  7      OPC=andl_r32_imm32       
  leal -0x1010101(%r8), %esi  #  39    0x59  7      OPC=leal_r32_m16           andl %esi, %r9d             #  39    0x67  3      OPC=andl_r32_r32         
  notl %r9d                   #  40    0x60  3      OPC=notl_r32               je .L_126820                #  40    0x6a  6      OPC=je_label_1           
  andl $0x80808080, %r9d      #  41    0x63  7      OPC=andl_r32_imm32         nop                         #  41    0x70  1      OPC=nop                  
  andl %esi, %r9d             #  42    0x6a  3      OPC=andl_r32_r32           nop                         #  42    0x71  1      OPC=nop                  
  je .L_126820                #  43    0x6d  6      OPC=je_label_1             nop                         #  43    0x72  1      OPC=nop                  
  nop                         #  44    0x73  1      OPC=nop                    nop                         #  44    0x73  1      OPC=nop                  
  nop                         #  45    0x74  1      OPC=nop                    nop                         #  45    0x74  1      OPC=nop                  
  nop                         #  46    0x75  1      OPC=nop                    nop                         #  46    0x75  1      OPC=nop                  
  nop                         #  47    0x76  1      OPC=nop                    nop                         #  47    0x76  1      OPC=nop                  
  nop                         #  48    0x77  1      OPC=nop                    nop                         #  48    0x77  1      OPC=nop                  
  nop                         #  49    0x78  1      OPC=nop                    nop                         #  49    0x78  1      OPC=nop                  
  nop                         #  50    0x79  1      OPC=nop                    nop                         #  50    0x79  1      OPC=nop                  
  nop                         #  51    0x7a  1      OPC=nop                    nop                         #  51    0x7a  1      OPC=nop                  
  nop                         #  52    0x7b  1      OPC=nop                    nop                         #  52    0x7b  1      OPC=nop                  
  nop                         #  53    0x7c  1      OPC=nop                    nop                         #  53    0x7c  1      OPC=nop                  
  nop                         #  54    0x7d  1      OPC=nop                    nop                         #  54    0x7d  1      OPC=nop                  
  nop                         #  55    0x7e  1      OPC=nop                    nop                         #  55    0x7e  1      OPC=nop                  
  nop                         #  56    0x7f  1      OPC=nop                    nop                         #  56    0x7f  1      OPC=nop                  
  nop                         #  57    0x80  1      OPC=nop                  .L_126860:                    #        0x80  0      OPC=<label>              
  nop                         #  58    0x81  1      OPC=nop                    movl %edx, %edx             #  57    0x80  2      OPC=movl_r32_r32         
  nop                         #  59    0x82  1      OPC=nop                    movzbq (%r15,%rdx,1), %rsi  #  58    0x82  5      OPC=movzbq_r64_m8        
.L_126860:                    #        0x83  0      OPC=<label>                andl %ecx, %ecx             #  59    0x87  2      OPC=andl_r32_r32         
  movl %edx, %edx             #  60    0x83  2      OPC=movl_r32_r32           movb %sil, (%r15,%rcx,1)    #  60    0x89  4      OPC=movb_m8_r8           
  movzbq (%r15,%rdx,1), %rsi  #  61    0x85  5      OPC=movzbq_r64_m8          addl $0x1, %ecx             #  61    0x8d  3      OPC=addl_r32_imm8        
  movl %ecx, %ecx             #  62    0x8a  2      OPC=movl_r32_r32_1         addl $0x1, %edx             #  62    0x90  3      OPC=addl_r32_imm8        
  movb %sil, (%r15,%rcx,1)    #  63    0x8c  4      OPC=movb_m8_r8             testb %sil, %sil            #  63    0x93  3      OPC=testb_r8_r8          
  addl $0x1, %ecx             #  64    0x90  3      OPC=addl_r32_imm8          jne .L_126860               #  64    0x96  6      OPC=jne_label_1          
  addl $0x1, %edx             #  65    0x93  3      OPC=addl_r32_imm8          nop                         #  65    0x9c  1      OPC=nop                  
  testb %sil, %sil            #  66    0x96  3      OPC=testb_r8_r8            nop                         #  66    0x9d  1      OPC=nop                  
  jne .L_126860               #  67    0x99  6      OPC=jne_label_1            nop                         #  67    0x9e  1      OPC=nop                  
  nop                         #  68    0x9f  1      OPC=nop                    nop                         #  68    0x9f  1      OPC=nop                  
  nop                         #  69    0xa0  1      OPC=nop                    nop                         #  69    0xa0  1      OPC=nop                  
  nop                         #  70    0xa1  1      OPC=nop                    nop                         #  70    0xa1  1      OPC=nop                  
  nop                         #  71    0xa2  1      OPC=nop                    nop                         #  71    0xa2  1      OPC=nop                  
  nopl %eax                   #  72    0xa3  3      OPC=nopl_r32               nop                         #  72    0xa3  1      OPC=nop                  
  nop                         #  73    0xa6  1      OPC=nop                    nop                         #  73    0xa4  1      OPC=nop                  
  popq %r11                   #  74    0xa7  2      OPC=popq_r64_1             nop                         #  74    0xa5  1      OPC=nop                  
  andl $0xe0, %r11d           #  75    0xa9  4      OPC=andl_r32_imm8          nop                         #  75    0xa6  1      OPC=nop                  
  addq %r15, %r11             #  76    0xad  3      OPC=addq_r64_r64           popq %r11                   #  76    0xa7  2      OPC=popq_r64_1           
  jmpq %r11                   #  77    0xb0  3      OPC=jmpq_r64               andl $0xe0, %r11d           #  77    0xa9  4      OPC=andl_r32_imm8        
                                                                               addq %r15, %r11             #  78    0xad  3      OPC=addq_r64_r64         
.size strcpy, .-strcpy                                                         jmpq %r11                   #  79    0xb0  3      OPC=jmpq_r64             
                                                                                                                                                          
                                                                             .size strcpy, .-strcpy                                                       
                                                                                                                                                          

********************************************************************************

Progress Update: 

Lowest Cost Discovered (209)                                                 Lowest Known Correct Cost (214)                                              
                                                                                                                                                          
  .text                                                                        .text                                                                      
  .globl strcpy                                                                .globl strcpy                                                              
  .type strcpy, @function                                                      .type strcpy, @function                                                    
                                                                                                                                                          
#! file-offset 0                                                             #! file-offset 0                                                             
#! rip-offset  0                                                             #! rip-offset  0                                                             
#! capacity    0 bytes                                                       #! capacity    0 bytes                                                       
                                                                                                                                                          
# Text                        #  Line  RIP   Bytes  Opcode                   # Text                        #  Line  RIP   Bytes  Opcode                   
.strcpy:                      #        0     0      OPC=<label>              .strcpy:                      #        0     0      OPC=<label>              
  movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32_1         movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32         
  movb %sil, %dil             #  2     0x2   3      OPC=movb_r8_r8_1           movq %rsi, %rdx             #  2     0x2   3      OPC=movq_r64_r64         
  movq %rax, %rcx             #  3     0x5   3      OPC=movq_r64_r64_1         nop                         #  3     0x5   1      OPC=nop                  
  nop                         #  4     0x8   1      OPC=nop                    movq %rax, %rcx             #  4     0x6   3      OPC=movq_r64_r64         
  nop                         #  5     0x9   1      OPC=nop                    nop                         #  5     0x9   1      OPC=nop                  
  nop                         #  6     0xa   1      OPC=nop                    nop                         #  6     0xa   1      OPC=nop                  
  movq %rsi, %rdx             #  7     0xb   3      OPC=movq_r64_r64           movb %sil, %dil             #  7     0xb   3      OPC=movb_r8_r8           
  nop                         #  8     0xe   1      OPC=nop                    addl %eax, %edi             #  8     0xe   2      OPC=addl_r32_r32         
  addl %eax, %edi             #  9     0xf   2      OPC=addl_r32_r32           andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8        
  andl $0x3, %edi             #  10    0x11  3      OPC=andl_r32_imm8          jne .L_126860               #  10    0x13  6      OPC=jne_label_1          
  jne .L_126860               #  11    0x14  6      OPC=jne_label_1            movl %edx, %esi             #  11    0x19  2      OPC=movl_r32_r32         
  orl %edx, %esi              #  12    0x1a  2      OPC=orl_r32_r32_1          movl (%r15,%rsi,1), %r8d    #  12    0x1b  4      OPC=movl_r32_m32         
  movl (%r15,%rsi,1), %r8d    #  13    0x1c  4      OPC=movl_r32_m32           nop                         #  13    0x1f  1      OPC=nop                  
  nop                         #  14    0x20  1      OPC=nop                    notl %esi                   #  14    0x20  2      OPC=notl_r32             
  nop                         #  15    0x21  1      OPC=nop                    nop                         #  15    0x22  1      OPC=nop                  
  nop                         #  16    0x22  1      OPC=nop                    nop                         #  16    0x23  1      OPC=nop                  
  nop                         #  17    0x23  1      OPC=nop                    leaq -0x1010101(%r8), %rdi  #  17    0x24  7      OPC=leaq_r64_m64         
  notl %esi                   #  18    0x24  2      OPC=notl_r32               nop                         #  18    0x2b  1      OPC=nop                  
  nop                         #  19    0x26  1      OPC=nop                    nop                         #  19    0x2c  1      OPC=nop                  
  nop                         #  20    0x27  1      OPC=nop                    andl %edi, %esi             #  20    0x2d  2      OPC=andl_r32_r32         
  leaq -0x1010101(%r8), %rdi  #  21    0x28  7      OPC=leaq_r64_m64           andl $0x80, %esi            #  21    0x2f  6      OPC=andl_r32_imm32       
  andl %edi, %esi             #  22    0x2f  2      OPC=andl_r32_r32           jne .L_126860               #  22    0x35  6      OPC=jne_label_1          
  nop                         #  23    0x31  1      OPC=nop                    nop                         #  23    0x3b  1      OPC=nop                  
  andl $0x80, %esi            #  24    0x32  6      OPC=andl_r32_imm32         nop                         #  24    0x3c  1      OPC=nop                  
  jne .L_126860               #  25    0x38  6      OPC=jne_label_1            nop                         #  25    0x3d  1      OPC=nop                  
  nop                         #  26    0x3e  1      OPC=nop                    nop                         #  26    0x3e  1      OPC=nop                  
  nop                         #  27    0x3f  1      OPC=nop                    nop                         #  27    0x3f  1      OPC=nop                  
  nop                         #  28    0x40  1      OPC=nop                  .L_126820:                    #        0x40  0      OPC=<label>              
  nop                         #  29    0x41  1      OPC=nop                    addl $0x4, %edx             #  28    0x40  3      OPC=addl_r32_imm8        
  nop                         #  30    0x42  1      OPC=nop                    movl %ecx, %ecx             #  29    0x43  2      OPC=movl_r32_r32_1       
.L_126820:                    #        0x43  0      OPC=<label>                movl %r8d, (%r15,%rcx,1)    #  30    0x45  4      OPC=movl_m32_r32         
  addl $0x4, %edx             #  31    0x43  3      OPC=addl_r32_imm8          addl $0x4, %ecx             #  31    0x49  3      OPC=addl_r32_imm8        
  andl %ecx, %ecx             #  32    0x46  2      OPC=andl_r32_r32           xorl %esp, %edx             #  32    0x4c  2      OPC=xorl_r32_r32         
  movl %r8d, (%r15,%rcx,1)    #  33    0x48  4      OPC=movl_m32_r32           movl (%r15,%rdx,1), %r8d    #  33    0x4e  4      OPC=movl_r32_m32         
  addl $0x4, %ecx             #  34    0x4c  3      OPC=addl_r32_imm8          movl %r8d, %r9d             #  34    0x52  3      OPC=movl_r32_r32         
  orl %esp, %edx              #  35    0x4f  2      OPC=orl_r32_r32            leal -0x1010101(%r8), %esi  #  35    0x55  7      OPC=leal_r32_m16         
  movl (%r15,%rdx,1), %r8d    #  36    0x51  4      OPC=movl_r32_m32           notl %r9d                   #  36    0x5c  3      OPC=notl_r32             
  movl %r8d, %r9d             #  37    0x55  3      OPC=movl_r32_r32           nop                         #  37    0x5f  1      OPC=nop                  
  leal -0x1010101(%r8), %esi  #  38    0x58  7      OPC=leal_r32_m16           andl $0x80808080, %r9d      #  38    0x60  7      OPC=andl_r32_imm32       
  notl %r9d                   #  39    0x5f  3      OPC=notl_r32               andl %esi, %r9d             #  39    0x67  3      OPC=andl_r32_r32         
  andl $0x80808080, %r9d      #  40    0x62  7      OPC=andl_r32_imm32         je .L_126820                #  40    0x6a  6      OPC=je_label_1           
  andl %esi, %r9d             #  41    0x69  3      OPC=andl_r32_r32           nop                         #  41    0x70  1      OPC=nop                  
  je .L_126820                #  42    0x6c  6      OPC=je_label_1             nop                         #  42    0x71  1      OPC=nop                  
  nop                         #  43    0x72  1      OPC=nop                    nop                         #  43    0x72  1      OPC=nop                  
  nop                         #  44    0x73  1      OPC=nop                    nop                         #  44    0x73  1      OPC=nop                  
  nop                         #  45    0x74  1      OPC=nop                    nop                         #  45    0x74  1      OPC=nop                  
  nop                         #  46    0x75  1      OPC=nop                    nop                         #  46    0x75  1      OPC=nop                  
  nop                         #  47    0x76  1      OPC=nop                    nop                         #  47    0x76  1      OPC=nop                  
  nop                         #  48    0x77  1      OPC=nop                    nop                         #  48    0x77  1      OPC=nop                  
  nop                         #  49    0x78  1      OPC=nop                    nop                         #  49    0x78  1      OPC=nop                  
  nop                         #  50    0x79  1      OPC=nop                    nop                         #  50    0x79  1      OPC=nop                  
  nop                         #  51    0x7a  1      OPC=nop                    nop                         #  51    0x7a  1      OPC=nop                  
  nop                         #  52    0x7b  1      OPC=nop                    nop                         #  52    0x7b  1      OPC=nop                  
  nop                         #  53    0x7c  1      OPC=nop                    nop                         #  53    0x7c  1      OPC=nop                  
  nop                         #  54    0x7d  1      OPC=nop                    nop                         #  54    0x7d  1      OPC=nop                  
  nop                         #  55    0x7e  1      OPC=nop                    nop                         #  55    0x7e  1      OPC=nop                  
  nop                         #  56    0x7f  1      OPC=nop                    nop                         #  56    0x7f  1      OPC=nop                  
  nop                         #  57    0x80  1      OPC=nop                  .L_126860:                    #        0x80  0      OPC=<label>              
  nop                         #  58    0x81  1      OPC=nop                    movl %edx, %edx             #  57    0x80  2      OPC=movl_r32_r32         
.L_126860:                    #        0x82  0      OPC=<label>                movzbq (%r15,%rdx,1), %rsi  #  58    0x82  5      OPC=movzbq_r64_m8        
  movl %edx, %edx             #  59    0x82  2      OPC=movl_r32_r32           andl %ecx, %ecx             #  59    0x87  2      OPC=andl_r32_r32         
  movzbq (%r15,%rdx,1), %rsi  #  60    0x84  5      OPC=movzbq_r64_m8          movb %sil, (%r15,%rcx,1)    #  60    0x89  4      OPC=movb_m8_r8           
  movl %ecx, %ecx             #  61    0x89  2      OPC=movl_r32_r32_1         addl $0x1, %ecx             #  61    0x8d  3      OPC=addl_r32_imm8        
  movb %sil, (%r15,%rcx,1)    #  62    0x8b  4      OPC=movb_m8_r8             addl $0x1, %edx             #  62    0x90  3      OPC=addl_r32_imm8        
  addl $0x1, %ecx             #  63    0x8f  3      OPC=addl_r32_imm8          testb %sil, %sil            #  63    0x93  3      OPC=testb_r8_r8          
  addl $0x1, %edx             #  64    0x92  3      OPC=addl_r32_imm8          jne .L_126860               #  64    0x96  6      OPC=jne_label_1          
  testb %sil, %sil            #  65    0x95  3      OPC=testb_r8_r8            nop                         #  65    0x9c  1      OPC=nop                  
  jne .L_126860               #  66    0x98  6      OPC=jne_label_1            nop                         #  66    0x9d  1      OPC=nop                  
  nop                         #  67    0x9e  1      OPC=nop                    nop                         #  67    0x9e  1      OPC=nop                  
  nop                         #  68    0x9f  1      OPC=nop                    nop                         #  68    0x9f  1      OPC=nop                  
  nop                         #  69    0xa0  1      OPC=nop                    nop                         #  69    0xa0  1      OPC=nop                  
  nop                         #  70    0xa1  1      OPC=nop                    nop                         #  70    0xa1  1      OPC=nop                  
  nopl %eax                   #  71    0xa2  3      OPC=nopl_r32               nop                         #  71    0xa2  1      OPC=nop                  
  nop                         #  72    0xa5  1      OPC=nop                    nop                         #  72    0xa3  1      OPC=nop                  
  popq %r11                   #  73    0xa6  2      OPC=popq_r64_1             nop                         #  73    0xa4  1      OPC=nop                  
  andl $0xe0, %r11d           #  74    0xa8  4      OPC=andl_r32_imm8          nop                         #  74    0xa5  1      OPC=nop                  
  addq %r15, %r11             #  75    0xac  3      OPC=addq_r64_r64           nop                         #  75    0xa6  1      OPC=nop                  
  jmpq %r11                   #  76    0xaf  3      OPC=jmpq_r64               popq %r11                   #  76    0xa7  2      OPC=popq_r64_1           
                                                                               andl $0xe0, %r11d           #  77    0xa9  4      OPC=andl_r32_imm8        
.size strcpy, .-strcpy                                                         addq %r15, %r11             #  78    0xad  3      OPC=addq_r64_r64         
                                                                               jmpq %r11                   #  79    0xb0  3      OPC=jmpq_r64             
                                                                                                                                                          
                                                                             .size strcpy, .-strcpy                                                       
                                                                                                                                                          

********************************************************************************

Progress Update: 

Lowest Cost Discovered (208)                                                 Lowest Known Correct Cost (214)                                              
                                                                                                                                                          
  .text                                                                        .text                                                                      
  .globl strcpy                                                                .globl strcpy                                                              
  .type strcpy, @function                                                      .type strcpy, @function                                                    
                                                                                                                                                          
#! file-offset 0                                                             #! file-offset 0                                                             
#! rip-offset  0                                                             #! rip-offset  0                                                             
#! capacity    0 bytes                                                       #! capacity    0 bytes                                                       
                                                                                                                                                          
# Text                        #  Line  RIP   Bytes  Opcode                   # Text                        #  Line  RIP   Bytes  Opcode                   
.strcpy:                      #        0     0      OPC=<label>              .strcpy:                      #        0     0      OPC=<label>              
  movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32_1         movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32         
  movb %sil, %dil             #  2     0x2   3      OPC=movb_r8_r8_1           movq %rsi, %rdx             #  2     0x2   3      OPC=movq_r64_r64         
  movq %rax, %rcx             #  3     0x5   3      OPC=movq_r64_r64_1         nop                         #  3     0x5   1      OPC=nop                  
  nop                         #  4     0x8   1      OPC=nop                    movq %rax, %rcx             #  4     0x6   3      OPC=movq_r64_r64         
  nop                         #  5     0x9   1      OPC=nop                    nop                         #  5     0x9   1      OPC=nop                  
  nop                         #  6     0xa   1      OPC=nop                    nop                         #  6     0xa   1      OPC=nop                  
  movq %rsi, %rdx             #  7     0xb   3      OPC=movq_r64_r64           movb %sil, %dil             #  7     0xb   3      OPC=movb_r8_r8           
  nop                         #  8     0xe   1      OPC=nop                    addl %eax, %edi             #  8     0xe   2      OPC=addl_r32_r32         
  addl %eax, %edi             #  9     0xf   2      OPC=addl_r32_r32           andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8        
  andl $0x3, %edi             #  10    0x11  3      OPC=andl_r32_imm8          jne .L_126860               #  10    0x13  6      OPC=jne_label_1          
  jne .L_126860               #  11    0x14  6      OPC=jne_label_1            movl %edx, %esi             #  11    0x19  2      OPC=movl_r32_r32         
  orl %edx, %esi              #  12    0x1a  2      OPC=orl_r32_r32_1          movl (%r15,%rsi,1), %r8d    #  12    0x1b  4      OPC=movl_r32_m32         
  movl (%r15,%rsi,1), %r8d    #  13    0x1c  4      OPC=movl_r32_m32           nop                         #  13    0x1f  1      OPC=nop                  
  nop                         #  14    0x20  1      OPC=nop                    notl %esi                   #  14    0x20  2      OPC=notl_r32             
  nop                         #  15    0x21  1      OPC=nop                    nop                         #  15    0x22  1      OPC=nop                  
  nop                         #  16    0x22  1      OPC=nop                    nop                         #  16    0x23  1      OPC=nop                  
  nop                         #  17    0x23  1      OPC=nop                    leaq -0x1010101(%r8), %rdi  #  17    0x24  7      OPC=leaq_r64_m64         
  notl %esi                   #  18    0x24  2      OPC=notl_r32               nop                         #  18    0x2b  1      OPC=nop                  
  nop                         #  19    0x26  1      OPC=nop                    nop                         #  19    0x2c  1      OPC=nop                  
  nop                         #  20    0x27  1      OPC=nop                    andl %edi, %esi             #  20    0x2d  2      OPC=andl_r32_r32         
  leaq -0x1010101(%r8), %rdi  #  21    0x28  7      OPC=leaq_r64_m64           andl $0x80, %esi            #  21    0x2f  6      OPC=andl_r32_imm32       
  andl %edi, %esi             #  22    0x2f  2      OPC=andl_r32_r32           jne .L_126860               #  22    0x35  6      OPC=jne_label_1          
  andl $0x80, %esi            #  23    0x31  6      OPC=andl_r32_imm32         nop                         #  23    0x3b  1      OPC=nop                  
  jne .L_126860               #  24    0x37  6      OPC=jne_label_1            nop                         #  24    0x3c  1      OPC=nop                  
  nop                         #  25    0x3d  1      OPC=nop                    nop                         #  25    0x3d  1      OPC=nop                  
  nop                         #  26    0x3e  1      OPC=nop                    nop                         #  26    0x3e  1      OPC=nop                  
  nop                         #  27    0x3f  1      OPC=nop                    nop                         #  27    0x3f  1      OPC=nop                  
  nop                         #  28    0x40  1      OPC=nop                  .L_126820:                    #        0x40  0      OPC=<label>              
  nop                         #  29    0x41  1      OPC=nop                    addl $0x4, %edx             #  28    0x40  3      OPC=addl_r32_imm8        
.L_126820:                    #        0x42  0      OPC=<label>                movl %ecx, %ecx             #  29    0x43  2      OPC=movl_r32_r32_1       
  addl $0x4, %edx             #  30    0x42  3      OPC=addl_r32_imm8          movl %r8d, (%r15,%rcx,1)    #  30    0x45  4      OPC=movl_m32_r32         
  andl %ecx, %ecx             #  31    0x45  2      OPC=andl_r32_r32           addl $0x4, %ecx             #  31    0x49  3      OPC=addl_r32_imm8        
  movl %r8d, (%r15,%rcx,1)    #  32    0x47  4      OPC=movl_m32_r32           xorl %esp, %edx             #  32    0x4c  2      OPC=xorl_r32_r32         
  addl $0x4, %ecx             #  33    0x4b  3      OPC=addl_r32_imm8          movl (%r15,%rdx,1), %r8d    #  33    0x4e  4      OPC=movl_r32_m32         
  orl %esp, %edx              #  34    0x4e  2      OPC=orl_r32_r32            movl %r8d, %r9d             #  34    0x52  3      OPC=movl_r32_r32         
  movl (%r15,%rdx,1), %r8d    #  35    0x50  4      OPC=movl_r32_m32           leal -0x1010101(%r8), %esi  #  35    0x55  7      OPC=leal_r32_m16         
  movl %r8d, %r9d             #  36    0x54  3      OPC=movl_r32_r32           notl %r9d                   #  36    0x5c  3      OPC=notl_r32             
  leal -0x1010101(%r8), %esi  #  37    0x57  7      OPC=leal_r32_m16           nop                         #  37    0x5f  1      OPC=nop                  
  notl %r9d                   #  38    0x5e  3      OPC=notl_r32               andl $0x80808080, %r9d      #  38    0x60  7      OPC=andl_r32_imm32       
  andl $0x80808080, %r9d      #  39    0x61  7      OPC=andl_r32_imm32         andl %esi, %r9d             #  39    0x67  3      OPC=andl_r32_r32         
  andl %esi, %r9d             #  40    0x68  3      OPC=andl_r32_r32           je .L_126820                #  40    0x6a  6      OPC=je_label_1           
  je .L_126820                #  41    0x6b  6      OPC=je_label_1             nop                         #  41    0x70  1      OPC=nop                  
  nop                         #  42    0x71  1      OPC=nop                    nop                         #  42    0x71  1      OPC=nop                  
  nop                         #  43    0x72  1      OPC=nop                    nop                         #  43    0x72  1      OPC=nop                  
  nop                         #  44    0x73  1      OPC=nop                    nop                         #  44    0x73  1      OPC=nop                  
  nop                         #  45    0x74  1      OPC=nop                    nop                         #  45    0x74  1      OPC=nop                  
  nop                         #  46    0x75  1      OPC=nop                    nop                         #  46    0x75  1      OPC=nop                  
  nop                         #  47    0x76  1      OPC=nop                    nop                         #  47    0x76  1      OPC=nop                  
  nop                         #  48    0x77  1      OPC=nop                    nop                         #  48    0x77  1      OPC=nop                  
  nop                         #  49    0x78  1      OPC=nop                    nop                         #  49    0x78  1      OPC=nop                  
  nop                         #  50    0x79  1      OPC=nop                    nop                         #  50    0x79  1      OPC=nop                  
  nop                         #  51    0x7a  1      OPC=nop                    nop                         #  51    0x7a  1      OPC=nop                  
  nop                         #  52    0x7b  1      OPC=nop                    nop                         #  52    0x7b  1      OPC=nop                  
  nop                         #  53    0x7c  1      OPC=nop                    nop                         #  53    0x7c  1      OPC=nop                  
  nop                         #  54    0x7d  1      OPC=nop                    nop                         #  54    0x7d  1      OPC=nop                  
  nop                         #  55    0x7e  1      OPC=nop                    nop                         #  55    0x7e  1      OPC=nop                  
  nop                         #  56    0x7f  1      OPC=nop                    nop                         #  56    0x7f  1      OPC=nop                  
  nop                         #  57    0x80  1      OPC=nop                  .L_126860:                    #        0x80  0      OPC=<label>              
.L_126860:                    #        0x81  0      OPC=<label>                movl %edx, %edx             #  57    0x80  2      OPC=movl_r32_r32         
  movl %edx, %edx             #  58    0x81  2      OPC=movl_r32_r32           movzbq (%r15,%rdx,1), %rsi  #  58    0x82  5      OPC=movzbq_r64_m8        
  movzbq (%r15,%rdx,1), %rsi  #  59    0x83  5      OPC=movzbq_r64_m8          andl %ecx, %ecx             #  59    0x87  2      OPC=andl_r32_r32         
  movl %ecx, %ecx             #  60    0x88  2      OPC=movl_r32_r32_1         movb %sil, (%r15,%rcx,1)    #  60    0x89  4      OPC=movb_m8_r8           
  movb %sil, (%r15,%rcx,1)    #  61    0x8a  4      OPC=movb_m8_r8             addl $0x1, %ecx             #  61    0x8d  3      OPC=addl_r32_imm8        
  addl $0x1, %ecx             #  62    0x8e  3      OPC=addl_r32_imm8          addl $0x1, %edx             #  62    0x90  3      OPC=addl_r32_imm8        
  addl $0x1, %edx             #  63    0x91  3      OPC=addl_r32_imm8          testb %sil, %sil            #  63    0x93  3      OPC=testb_r8_r8          
  testb %sil, %sil            #  64    0x94  3      OPC=testb_r8_r8            jne .L_126860               #  64    0x96  6      OPC=jne_label_1          
  jne .L_126860               #  65    0x97  6      OPC=jne_label_1            nop                         #  65    0x9c  1      OPC=nop                  
  nop                         #  66    0x9d  1      OPC=nop                    nop                         #  66    0x9d  1      OPC=nop                  
  nop                         #  67    0x9e  1      OPC=nop                    nop                         #  67    0x9e  1      OPC=nop                  
  nop                         #  68    0x9f  1      OPC=nop                    nop                         #  68    0x9f  1      OPC=nop                  
  nop                         #  69    0xa0  1      OPC=nop                    nop                         #  69    0xa0  1      OPC=nop                  
  nopl %eax                   #  70    0xa1  3      OPC=nopl_r32               nop                         #  70    0xa1  1      OPC=nop                  
  nop                         #  71    0xa4  1      OPC=nop                    nop                         #  71    0xa2  1      OPC=nop                  
  popq %r11                   #  72    0xa5  2      OPC=popq_r64_1             nop                         #  72    0xa3  1      OPC=nop                  
  andl $0xe0, %r11d           #  73    0xa7  4      OPC=andl_r32_imm8          nop                         #  73    0xa4  1      OPC=nop                  
  addq %r15, %r11             #  74    0xab  3      OPC=addq_r64_r64           nop                         #  74    0xa5  1      OPC=nop                  
  jmpq %r11                   #  75    0xae  3      OPC=jmpq_r64               nop                         #  75    0xa6  1      OPC=nop                  
                                                                               popq %r11                   #  76    0xa7  2      OPC=popq_r64_1           
.size strcpy, .-strcpy                                                         andl $0xe0, %r11d           #  77    0xa9  4      OPC=andl_r32_imm8        
                                                                               addq %r15, %r11             #  78    0xad  3      OPC=addq_r64_r64         
                                                                               jmpq %r11                   #  79    0xb0  3      OPC=jmpq_r64             
                                                                                                                                                          
                                                                             .size strcpy, .-strcpy                                                       
                                                                                                                                                          

********************************************************************************

Progress Update: 

Lowest Cost Discovered (207)                                                 Lowest Known Correct Cost (214)                                              
                                                                                                                                                          
  .text                                                                        .text                                                                      
  .globl strcpy                                                                .globl strcpy                                                              
  .type strcpy, @function                                                      .type strcpy, @function                                                    
                                                                                                                                                          
#! file-offset 0                                                             #! file-offset 0                                                             
#! rip-offset  0                                                             #! rip-offset  0                                                             
#! capacity    0 bytes                                                       #! capacity    0 bytes                                                       
                                                                                                                                                          
# Text                        #  Line  RIP   Bytes  Opcode                   # Text                        #  Line  RIP   Bytes  Opcode                   
.strcpy:                      #        0     0      OPC=<label>              .strcpy:                      #        0     0      OPC=<label>              
  movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32_1         movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32         
  movb %sil, %dil             #  2     0x2   3      OPC=movb_r8_r8_1           movq %rsi, %rdx             #  2     0x2   3      OPC=movq_r64_r64         
  movq %rax, %rcx             #  3     0x5   3      OPC=movq_r64_r64_1         nop                         #  3     0x5   1      OPC=nop                  
  nop                         #  4     0x8   1      OPC=nop                    movq %rax, %rcx             #  4     0x6   3      OPC=movq_r64_r64         
  nop                         #  5     0x9   1      OPC=nop                    nop                         #  5     0x9   1      OPC=nop                  
  nop                         #  6     0xa   1      OPC=nop                    nop                         #  6     0xa   1      OPC=nop                  
  movq %rsi, %rdx             #  7     0xb   3      OPC=movq_r64_r64           movb %sil, %dil             #  7     0xb   3      OPC=movb_r8_r8           
  nop                         #  8     0xe   1      OPC=nop                    addl %eax, %edi             #  8     0xe   2      OPC=addl_r32_r32         
  addl %eax, %edi             #  9     0xf   2      OPC=addl_r32_r32           andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8        
  andl $0x3, %edi             #  10    0x11  3      OPC=andl_r32_imm8          jne .L_126860               #  10    0x13  6      OPC=jne_label_1          
  jne .L_126860               #  11    0x14  6      OPC=jne_label_1            movl %edx, %esi             #  11    0x19  2      OPC=movl_r32_r32         
  orl %edx, %esi              #  12    0x1a  2      OPC=orl_r32_r32_1          movl (%r15,%rsi,1), %r8d    #  12    0x1b  4      OPC=movl_r32_m32         
  movl (%r15,%rsi,1), %r8d    #  13    0x1c  4      OPC=movl_r32_m32           nop                         #  13    0x1f  1      OPC=nop                  
  nop                         #  14    0x20  1      OPC=nop                    notl %esi                   #  14    0x20  2      OPC=notl_r32             
  nop                         #  15    0x21  1      OPC=nop                    nop                         #  15    0x22  1      OPC=nop                  
  nop                         #  16    0x22  1      OPC=nop                    nop                         #  16    0x23  1      OPC=nop                  
  notl %esi                   #  17    0x23  2      OPC=notl_r32               leaq -0x1010101(%r8), %rdi  #  17    0x24  7      OPC=leaq_r64_m64         
  nop                         #  18    0x25  1      OPC=nop                    nop                         #  18    0x2b  1      OPC=nop                  
  nop                         #  19    0x26  1      OPC=nop                    nop                         #  19    0x2c  1      OPC=nop                  
  leaq -0x1010101(%r8), %rdi  #  20    0x27  7      OPC=leaq_r64_m64           andl %edi, %esi             #  20    0x2d  2      OPC=andl_r32_r32         
  andl %edi, %esi             #  21    0x2e  2      OPC=andl_r32_r32           andl $0x80, %esi            #  21    0x2f  6      OPC=andl_r32_imm32       
  andl $0x80, %esi            #  22    0x30  6      OPC=andl_r32_imm32         jne .L_126860               #  22    0x35  6      OPC=jne_label_1          
  jne .L_126860               #  23    0x36  6      OPC=jne_label_1            nop                         #  23    0x3b  1      OPC=nop                  
  nop                         #  24    0x3c  1      OPC=nop                    nop                         #  24    0x3c  1      OPC=nop                  
  nop                         #  25    0x3d  1      OPC=nop                    nop                         #  25    0x3d  1      OPC=nop                  
  nop                         #  26    0x3e  1      OPC=nop                    nop                         #  26    0x3e  1      OPC=nop                  
  nop                         #  27    0x3f  1      OPC=nop                    nop                         #  27    0x3f  1      OPC=nop                  
  nop                         #  28    0x40  1      OPC=nop                  .L_126820:                    #        0x40  0      OPC=<label>              
.L_126820:                    #        0x41  0      OPC=<label>                addl $0x4, %edx             #  28    0x40  3      OPC=addl_r32_imm8        
  addl $0x4, %edx             #  29    0x41  3      OPC=addl_r32_imm8          movl %ecx, %ecx             #  29    0x43  2      OPC=movl_r32_r32_1       
  andl %ecx, %ecx             #  30    0x44  2      OPC=andl_r32_r32           movl %r8d, (%r15,%rcx,1)    #  30    0x45  4      OPC=movl_m32_r32         
  movl %r8d, (%r15,%rcx,1)    #  31    0x46  4      OPC=movl_m32_r32           addl $0x4, %ecx             #  31    0x49  3      OPC=addl_r32_imm8        
  addl $0x4, %ecx             #  32    0x4a  3      OPC=addl_r32_imm8          xorl %esp, %edx             #  32    0x4c  2      OPC=xorl_r32_r32         
  orl %esp, %edx              #  33    0x4d  2      OPC=orl_r32_r32            movl (%r15,%rdx,1), %r8d    #  33    0x4e  4      OPC=movl_r32_m32         
  movl (%r15,%rdx,1), %r8d    #  34    0x4f  4      OPC=movl_r32_m32           movl %r8d, %r9d             #  34    0x52  3      OPC=movl_r32_r32         
  movl %r8d, %r9d             #  35    0x53  3      OPC=movl_r32_r32           leal -0x1010101(%r8), %esi  #  35    0x55  7      OPC=leal_r32_m16         
  leal -0x1010101(%r8), %esi  #  36    0x56  7      OPC=leal_r32_m16           notl %r9d                   #  36    0x5c  3      OPC=notl_r32             
  notl %r9d                   #  37    0x5d  3      OPC=notl_r32               nop                         #  37    0x5f  1      OPC=nop                  
  andl $0x80808080, %r9d      #  38    0x60  7      OPC=andl_r32_imm32         andl $0x80808080, %r9d      #  38    0x60  7      OPC=andl_r32_imm32       
  andl %esi, %r9d             #  39    0x67  3      OPC=andl_r32_r32           andl %esi, %r9d             #  39    0x67  3      OPC=andl_r32_r32         
  je .L_126820                #  40    0x6a  6      OPC=je_label_1             je .L_126820                #  40    0x6a  6      OPC=je_label_1           
  nop                         #  41    0x70  1      OPC=nop                    nop                         #  41    0x70  1      OPC=nop                  
  nop                         #  42    0x71  1      OPC=nop                    nop                         #  42    0x71  1      OPC=nop                  
  nop                         #  43    0x72  1      OPC=nop                    nop                         #  43    0x72  1      OPC=nop                  
  nop                         #  44    0x73  1      OPC=nop                    nop                         #  44    0x73  1      OPC=nop                  
  nop                         #  45    0x74  1      OPC=nop                    nop                         #  45    0x74  1      OPC=nop                  
  nop                         #  46    0x75  1      OPC=nop                    nop                         #  46    0x75  1      OPC=nop                  
  nop                         #  47    0x76  1      OPC=nop                    nop                         #  47    0x76  1      OPC=nop                  
  nop                         #  48    0x77  1      OPC=nop                    nop                         #  48    0x77  1      OPC=nop                  
  nop                         #  49    0x78  1      OPC=nop                    nop                         #  49    0x78  1      OPC=nop                  
  nop                         #  50    0x79  1      OPC=nop                    nop                         #  50    0x79  1      OPC=nop                  
  nop                         #  51    0x7a  1      OPC=nop                    nop                         #  51    0x7a  1      OPC=nop                  
  nop                         #  52    0x7b  1      OPC=nop                    nop                         #  52    0x7b  1      OPC=nop                  
  nop                         #  53    0x7c  1      OPC=nop                    nop                         #  53    0x7c  1      OPC=nop                  
  nop                         #  54    0x7d  1      OPC=nop                    nop                         #  54    0x7d  1      OPC=nop                  
  nop                         #  55    0x7e  1      OPC=nop                    nop                         #  55    0x7e  1      OPC=nop                  
  nop                         #  56    0x7f  1      OPC=nop                    nop                         #  56    0x7f  1      OPC=nop                  
.L_126860:                    #        0x80  0      OPC=<label>              .L_126860:                    #        0x80  0      OPC=<label>              
  movl %edx, %edx             #  57    0x80  2      OPC=movl_r32_r32           movl %edx, %edx             #  57    0x80  2      OPC=movl_r32_r32         
  movzbq (%r15,%rdx,1), %rsi  #  58    0x82  5      OPC=movzbq_r64_m8          movzbq (%r15,%rdx,1), %rsi  #  58    0x82  5      OPC=movzbq_r64_m8        
  movl %ecx, %ecx             #  59    0x87  2      OPC=movl_r32_r32_1         andl %ecx, %ecx             #  59    0x87  2      OPC=andl_r32_r32         
  movb %sil, (%r15,%rcx,1)    #  60    0x89  4      OPC=movb_m8_r8             movb %sil, (%r15,%rcx,1)    #  60    0x89  4      OPC=movb_m8_r8           
  addl $0x1, %ecx             #  61    0x8d  3      OPC=addl_r32_imm8          addl $0x1, %ecx             #  61    0x8d  3      OPC=addl_r32_imm8        
  addl $0x1, %edx             #  62    0x90  3      OPC=addl_r32_imm8          addl $0x1, %edx             #  62    0x90  3      OPC=addl_r32_imm8        
  testb %sil, %sil            #  63    0x93  3      OPC=testb_r8_r8            testb %sil, %sil            #  63    0x93  3      OPC=testb_r8_r8          
  jne .L_126860               #  64    0x96  6      OPC=jne_label_1            jne .L_126860               #  64    0x96  6      OPC=jne_label_1          
  nop                         #  65    0x9c  1      OPC=nop                    nop                         #  65    0x9c  1      OPC=nop                  
  nop                         #  66    0x9d  1      OPC=nop                    nop                         #  66    0x9d  1      OPC=nop                  
  nop                         #  67    0x9e  1      OPC=nop                    nop                         #  67    0x9e  1      OPC=nop                  
  nop                         #  68    0x9f  1      OPC=nop                    nop                         #  68    0x9f  1      OPC=nop                  
  nopl %eax                   #  69    0xa0  3      OPC=nopl_r32               nop                         #  69    0xa0  1      OPC=nop                  
  nop                         #  70    0xa3  1      OPC=nop                    nop                         #  70    0xa1  1      OPC=nop                  
  popq %r11                   #  71    0xa4  2      OPC=popq_r64_1             nop                         #  71    0xa2  1      OPC=nop                  
  andl $0xe0, %r11d           #  72    0xa6  4      OPC=andl_r32_imm8          nop                         #  72    0xa3  1      OPC=nop                  
  addq %r15, %r11             #  73    0xaa  3      OPC=addq_r64_r64           nop                         #  73    0xa4  1      OPC=nop                  
  jmpq %r11                   #  74    0xad  3      OPC=jmpq_r64               nop                         #  74    0xa5  1      OPC=nop                  
                                                                               nop                         #  75    0xa6  1      OPC=nop                  
.size strcpy, .-strcpy                                                         popq %r11                   #  76    0xa7  2      OPC=popq_r64_1           
                                                                               andl $0xe0, %r11d           #  77    0xa9  4      OPC=andl_r32_imm8        
                                                                               addq %r15, %r11             #  78    0xad  3      OPC=addq_r64_r64         
                                                                               jmpq %r11                   #  79    0xb0  3      OPC=jmpq_r64             
                                                                                                                                                          
                                                                             .size strcpy, .-strcpy                                                       
                                                                                                                                                          

********************************************************************************

Progress Update: 

Lowest Cost Discovered (205)                                                 Lowest Known Correct Cost (214)                                              
                                                                                                                                                          
  .text                                                                        .text                                                                      
  .globl strcpy                                                                .globl strcpy                                                              
  .type strcpy, @function                                                      .type strcpy, @function                                                    
                                                                                                                                                          
#! file-offset 0                                                             #! file-offset 0                                                             
#! rip-offset  0                                                             #! rip-offset  0                                                             
#! capacity    0 bytes                                                       #! capacity    0 bytes                                                       
                                                                                                                                                          
# Text                        #  Line  RIP   Bytes  Opcode                   # Text                        #  Line  RIP   Bytes  Opcode                   
.strcpy:                      #        0     0      OPC=<label>              .strcpy:                      #        0     0      OPC=<label>              
  movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32_1         movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32         
  movb %sil, %dil             #  2     0x2   3      OPC=movb_r8_r8_1           movq %rsi, %rdx             #  2     0x2   3      OPC=movq_r64_r64         
  movq %rax, %rcx             #  3     0x5   3      OPC=movq_r64_r64_1         nop                         #  3     0x5   1      OPC=nop                  
  nop                         #  4     0x8   1      OPC=nop                    movq %rax, %rcx             #  4     0x6   3      OPC=movq_r64_r64         
  nop                         #  5     0x9   1      OPC=nop                    nop                         #  5     0x9   1      OPC=nop                  
  nop                         #  6     0xa   1      OPC=nop                    nop                         #  6     0xa   1      OPC=nop                  
  movq %rsi, %rdx             #  7     0xb   3      OPC=movq_r64_r64           movb %sil, %dil             #  7     0xb   3      OPC=movb_r8_r8           
  nop                         #  8     0xe   1      OPC=nop                    addl %eax, %edi             #  8     0xe   2      OPC=addl_r32_r32         
  addl %eax, %edi             #  9     0xf   2      OPC=addl_r32_r32           andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8        
  andl $0x3, %edi             #  10    0x11  3      OPC=andl_r32_imm8          jne .L_126860               #  10    0x13  6      OPC=jne_label_1          
  jne .L_126860               #  11    0x14  6      OPC=jne_label_1            movl %edx, %esi             #  11    0x19  2      OPC=movl_r32_r32         
  orl %edx, %esi              #  12    0x1a  2      OPC=orl_r32_r32_1          movl (%r15,%rsi,1), %r8d    #  12    0x1b  4      OPC=movl_r32_m32         
  movl (%r15,%rsi,1), %r8d    #  13    0x1c  4      OPC=movl_r32_m32           nop                         #  13    0x1f  1      OPC=nop                  
  notl %esi                   #  14    0x20  2      OPC=notl_r32               notl %esi                   #  14    0x20  2      OPC=notl_r32             
  nop                         #  15    0x22  1      OPC=nop                    nop                         #  15    0x22  1      OPC=nop                  
  nop                         #  16    0x23  1      OPC=nop                    nop                         #  16    0x23  1      OPC=nop                  
  leaq -0x1010101(%r8), %rdi  #  17    0x24  7      OPC=leaq_r64_m64           leaq -0x1010101(%r8), %rdi  #  17    0x24  7      OPC=leaq_r64_m64         
  andl %edi, %esi             #  18    0x2b  2      OPC=andl_r32_r32           nop                         #  18    0x2b  1      OPC=nop                  
  andl $0x80, %esi            #  19    0x2d  6      OPC=andl_r32_imm32         nop                         #  19    0x2c  1      OPC=nop                  
  jne .L_126860               #  20    0x33  6      OPC=jne_label_1            andl %edi, %esi             #  20    0x2d  2      OPC=andl_r32_r32         
  nop                         #  21    0x39  1      OPC=nop                    andl $0x80, %esi            #  21    0x2f  6      OPC=andl_r32_imm32       
  nop                         #  22    0x3a  1      OPC=nop                    jne .L_126860               #  22    0x35  6      OPC=jne_label_1          
  nop                         #  23    0x3b  1      OPC=nop                    nop                         #  23    0x3b  1      OPC=nop                  
  nop                         #  24    0x3c  1      OPC=nop                    nop                         #  24    0x3c  1      OPC=nop                  
  nop                         #  25    0x3d  1      OPC=nop                    nop                         #  25    0x3d  1      OPC=nop                  
  nop                         #  26    0x3e  1      OPC=nop                    nop                         #  26    0x3e  1      OPC=nop                  
  nop                         #  27    0x3f  1      OPC=nop                    nop                         #  27    0x3f  1      OPC=nop                  
.L_126820:                    #        0x40  0      OPC=<label>              .L_126820:                    #        0x40  0      OPC=<label>              
  addl $0x4, %edx             #  28    0x40  3      OPC=addl_r32_imm8          addl $0x4, %edx             #  28    0x40  3      OPC=addl_r32_imm8        
  andl %ecx, %ecx             #  29    0x43  2      OPC=andl_r32_r32           movl %ecx, %ecx             #  29    0x43  2      OPC=movl_r32_r32_1       
  movl %r8d, (%r15,%rcx,1)    #  30    0x45  4      OPC=movl_m32_r32           movl %r8d, (%r15,%rcx,1)    #  30    0x45  4      OPC=movl_m32_r32         
  addl $0x4, %ecx             #  31    0x49  3      OPC=addl_r32_imm8          addl $0x4, %ecx             #  31    0x49  3      OPC=addl_r32_imm8        
  orl %esp, %edx              #  32    0x4c  2      OPC=orl_r32_r32            xorl %esp, %edx             #  32    0x4c  2      OPC=xorl_r32_r32         
  movl (%r15,%rdx,1), %r8d    #  33    0x4e  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %r8d    #  33    0x4e  4      OPC=movl_r32_m32         
  leal -0x1010101(%r8), %esi  #  34    0x52  7      OPC=leal_r32_m16           movl %r8d, %r9d             #  34    0x52  3      OPC=movl_r32_r32         
  movl %r8d, %r9d             #  35    0x59  3      OPC=movl_r32_r32           leal -0x1010101(%r8), %esi  #  35    0x55  7      OPC=leal_r32_m16         
  notq %r9                    #  36    0x5c  3      OPC=notq_r64               notl %r9d                   #  36    0x5c  3      OPC=notl_r32             
  andl $0x80808080, %r9d      #  37    0x5f  7      OPC=andl_r32_imm32         nop                         #  37    0x5f  1      OPC=nop                  
  andl %esi, %r9d             #  38    0x66  3      OPC=andl_r32_r32           andl $0x80808080, %r9d      #  38    0x60  7      OPC=andl_r32_imm32       
  je .L_126820                #  39    0x69  6      OPC=je_label_1             andl %esi, %r9d             #  39    0x67  3      OPC=andl_r32_r32         
  nop                         #  40    0x6f  1      OPC=nop                    je .L_126820                #  40    0x6a  6      OPC=je_label_1           
  nop                         #  41    0x70  1      OPC=nop                    nop                         #  41    0x70  1      OPC=nop                  
  nop                         #  42    0x71  1      OPC=nop                    nop                         #  42    0x71  1      OPC=nop                  
  nop                         #  43    0x72  1      OPC=nop                    nop                         #  43    0x72  1      OPC=nop                  
  nop                         #  44    0x73  1      OPC=nop                    nop                         #  44    0x73  1      OPC=nop                  
  nop                         #  45    0x74  1      OPC=nop                    nop                         #  45    0x74  1      OPC=nop                  
  nop                         #  46    0x75  1      OPC=nop                    nop                         #  46    0x75  1      OPC=nop                  
  nop                         #  47    0x76  1      OPC=nop                    nop                         #  47    0x76  1      OPC=nop                  
  nop                         #  48    0x77  1      OPC=nop                    nop                         #  48    0x77  1      OPC=nop                  
  nop                         #  49    0x78  1      OPC=nop                    nop                         #  49    0x78  1      OPC=nop                  
  nop                         #  50    0x79  1      OPC=nop                    nop                         #  50    0x79  1      OPC=nop                  
  nop                         #  51    0x7a  1      OPC=nop                    nop                         #  51    0x7a  1      OPC=nop                  
  nop                         #  52    0x7b  1      OPC=nop                    nop                         #  52    0x7b  1      OPC=nop                  
  nop                         #  53    0x7c  1      OPC=nop                    nop                         #  53    0x7c  1      OPC=nop                  
  nop                         #  54    0x7d  1      OPC=nop                    nop                         #  54    0x7d  1      OPC=nop                  
  nop                         #  55    0x7e  1      OPC=nop                    nop                         #  55    0x7e  1      OPC=nop                  
.L_126860:                    #        0x7f  0      OPC=<label>                nop                         #  56    0x7f  1      OPC=nop                  
  movl %edx, %edx             #  56    0x7f  2      OPC=movl_r32_r32         .L_126860:                    #        0x80  0      OPC=<label>              
  movzbq (%r15,%rdx,1), %rsi  #  57    0x81  5      OPC=movzbq_r64_m8          movl %edx, %edx             #  57    0x80  2      OPC=movl_r32_r32         
  movl %ecx, %ecx             #  58    0x86  2      OPC=movl_r32_r32_1         movzbq (%r15,%rdx,1), %rsi  #  58    0x82  5      OPC=movzbq_r64_m8        
  movb %sil, (%r15,%rcx,1)    #  59    0x88  4      OPC=movb_m8_r8             andl %ecx, %ecx             #  59    0x87  2      OPC=andl_r32_r32         
  addl $0x1, %ecx             #  60    0x8c  3      OPC=addl_r32_imm8          movb %sil, (%r15,%rcx,1)    #  60    0x89  4      OPC=movb_m8_r8           
  addl $0x1, %edx             #  61    0x8f  3      OPC=addl_r32_imm8          addl $0x1, %ecx             #  61    0x8d  3      OPC=addl_r32_imm8        
  testb %sil, %sil            #  62    0x92  3      OPC=testb_r8_r8            addl $0x1, %edx             #  62    0x90  3      OPC=addl_r32_imm8        
  jne .L_126860               #  63    0x95  6      OPC=jne_label_1            testb %sil, %sil            #  63    0x93  3      OPC=testb_r8_r8          
  nop                         #  64    0x9b  1      OPC=nop                    jne .L_126860               #  64    0x96  6      OPC=jne_label_1          
  nop                         #  65    0x9c  1      OPC=nop                    nop                         #  65    0x9c  1      OPC=nop                  
  nop                         #  66    0x9d  1      OPC=nop                    nop                         #  66    0x9d  1      OPC=nop                  
  nop                         #  67    0x9e  1      OPC=nop                    nop                         #  67    0x9e  1      OPC=nop                  
  nop                         #  68    0x9f  1      OPC=nop                    nop                         #  68    0x9f  1      OPC=nop                  
  popq %r11                   #  69    0xa0  2      OPC=popq_r64_1             nop                         #  69    0xa0  1      OPC=nop                  
  andl $0xe0, %r11d           #  70    0xa2  4      OPC=andl_r32_imm8          nop                         #  70    0xa1  1      OPC=nop                  
  addq %r15, %r11             #  71    0xa6  3      OPC=addq_r64_r64           nop                         #  71    0xa2  1      OPC=nop                  
  jmpq %r11                   #  72    0xa9  3      OPC=jmpq_r64               nop                         #  72    0xa3  1      OPC=nop                  
                                                                               nop                         #  73    0xa4  1      OPC=nop                  
.size strcpy, .-strcpy                                                         nop                         #  74    0xa5  1      OPC=nop                  
                                                                               nop                         #  75    0xa6  1      OPC=nop                  
                                                                               popq %r11                   #  76    0xa7  2      OPC=popq_r64_1           
                                                                               andl $0xe0, %r11d           #  77    0xa9  4      OPC=andl_r32_imm8        
                                                                               addq %r15, %r11             #  78    0xad  3      OPC=addq_r64_r64         
                                                                               jmpq %r11                   #  79    0xb0  3      OPC=jmpq_r64             
                                                                                                                                                          
                                                                             .size strcpy, .-strcpy                                                       
                                                                                                                                                          

********************************************************************************

Progress Update: 

Lowest Cost Discovered (200)                                                 Lowest Known Correct Cost (214)                                              
                                                                                                                                                          
  .text                                                                        .text                                                                      
  .globl strcpy                                                                .globl strcpy                                                              
  .type strcpy, @function                                                      .type strcpy, @function                                                    
                                                                                                                                                          
#! file-offset 0                                                             #! file-offset 0                                                             
#! rip-offset  0                                                             #! rip-offset  0                                                             
#! capacity    0 bytes                                                       #! capacity    0 bytes                                                       
                                                                                                                                                          
# Text                        #  Line  RIP   Bytes  Opcode                   # Text                        #  Line  RIP   Bytes  Opcode                   
.strcpy:                      #        0     0      OPC=<label>              .strcpy:                      #        0     0      OPC=<label>              
  nop                         #  1     0     1      OPC=nop                    movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32         
  movq %rsi, %rdx             #  2     0x1   3      OPC=movq_r64_r64_1         movq %rsi, %rdx             #  2     0x2   3      OPC=movq_r64_r64         
  movl %edi, %eax             #  3     0x4   2      OPC=movl_r32_r32_1         nop                         #  3     0x5   1      OPC=nop                  
  movw %dx, %di               #  4     0x6   3      OPC=movw_r16_r16           movq %rax, %rcx             #  4     0x6   3      OPC=movq_r64_r64         
  addl %eax, %edi             #  5     0x9   2      OPC=addl_r32_r32           nop                         #  5     0x9   1      OPC=nop                  
  andb $0x3, %dil             #  6     0xb   4      OPC=andb_r8_imm8           nop                         #  6     0xa   1      OPC=nop                  
  movq %rax, %rcx             #  7     0xf   3      OPC=movq_r64_r64           movb %sil, %dil             #  7     0xb   3      OPC=movb_r8_r8           
  nop                         #  8     0x12  1      OPC=nop                    addl %eax, %edi             #  8     0xe   2      OPC=addl_r32_r32         
  jne .L_126860               #  9     0x13  6      OPC=jne_label_1            andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8        
  nop                         #  10    0x19  1      OPC=nop                    jne .L_126860               #  10    0x13  6      OPC=jne_label_1          
  orl %ebp, %esi              #  11    0x1a  2      OPC=orl_r32_r32_1          movl %edx, %esi             #  11    0x19  2      OPC=movl_r32_r32         
  movl (%r15,%rsi,1), %r8d    #  12    0x1c  4      OPC=movl_r32_m32           movl (%r15,%rsi,1), %r8d    #  12    0x1b  4      OPC=movl_r32_m32         
  leal -0x1010101(%r8), %edi  #  13    0x20  7      OPC=leal_r32_m16           nop                         #  13    0x1f  1      OPC=nop                  
  notw %si                    #  14    0x27  3      OPC=notw_r16               notl %esi                   #  14    0x20  2      OPC=notl_r32             
  nop                         #  15    0x2a  1      OPC=nop                    nop                         #  15    0x22  1      OPC=nop                  
  nop                         #  16    0x2b  1      OPC=nop                    nop                         #  16    0x23  1      OPC=nop                  
  andl $0x80, %esi            #  17    0x2c  6      OPC=andl_r32_imm32         leaq -0x1010101(%r8), %rdi  #  17    0x24  7      OPC=leaq_r64_m64         
  nop                         #  18    0x32  1      OPC=nop                    nop                         #  18    0x2b  1      OPC=nop                  
  andl %edi, %esi             #  19    0x33  2      OPC=andl_r32_r32           nop                         #  19    0x2c  1      OPC=nop                  
  jne .L_126860               #  20    0x35  6      OPC=jne_label_1            andl %edi, %esi             #  20    0x2d  2      OPC=andl_r32_r32         
  nop                         #  21    0x3b  1      OPC=nop                    andl $0x80, %esi            #  21    0x2f  6      OPC=andl_r32_imm32       
  nop                         #  22    0x3c  1      OPC=nop                    jne .L_126860               #  22    0x35  6      OPC=jne_label_1          
  nop                         #  23    0x3d  1      OPC=nop                    nop                         #  23    0x3b  1      OPC=nop                  
  nop                         #  24    0x3e  1      OPC=nop                    nop                         #  24    0x3c  1      OPC=nop                  
  nop                         #  25    0x3f  1      OPC=nop                    nop                         #  25    0x3d  1      OPC=nop                  
.L_126820:                    #        0x40  0      OPC=<label>                nop                         #  26    0x3e  1      OPC=nop                  
  xorl %esp, %ecx             #  26    0x40  2      OPC=xorl_r32_r32_1         nop                         #  27    0x3f  1      OPC=nop                  
  movl %r8d, (%r15,%rcx,1)    #  27    0x42  4      OPC=movl_m32_r32         .L_126820:                    #        0x40  0      OPC=<label>              
  addl $0x4, %ecx             #  28    0x46  3      OPC=addl_r32_imm8          addl $0x4, %edx             #  28    0x40  3      OPC=addl_r32_imm8        
  addw $0x4, %dx              #  29    0x49  4      OPC=addw_r16_imm8          movl %ecx, %ecx             #  29    0x43  2      OPC=movl_r32_r32_1       
  movl (%r15,%rdx,1), %r8d    #  30    0x4d  4      OPC=movl_r32_m32           movl %r8d, (%r15,%rcx,1)    #  30    0x45  4      OPC=movl_m32_r32         
  leal -0x1010101(%r8), %esi  #  31    0x51  7      OPC=leal_r32_m64           addl $0x4, %ecx             #  31    0x49  3      OPC=addl_r32_imm8        
  movl %r8d, %r9d             #  32    0x58  3      OPC=movl_r32_r32           xorl %esp, %edx             #  32    0x4c  2      OPC=xorl_r32_r32         
  notq %r9                    #  33    0x5b  3      OPC=notq_r64               movl (%r15,%rdx,1), %r8d    #  33    0x4e  4      OPC=movl_r32_m32         
  andl $0x80808080, %r9d      #  34    0x5e  7      OPC=andl_r32_imm32         movl %r8d, %r9d             #  34    0x52  3      OPC=movl_r32_r32         
  andl %esi, %r9d             #  35    0x65  3      OPC=andl_r32_r32           leal -0x1010101(%r8), %esi  #  35    0x55  7      OPC=leal_r32_m16         
  je .L_126820                #  36    0x68  6      OPC=je_label_1             notl %r9d                   #  36    0x5c  3      OPC=notl_r32             
  nop                         #  37    0x6e  1      OPC=nop                    nop                         #  37    0x5f  1      OPC=nop                  
  nop                         #  38    0x6f  1      OPC=nop                    andl $0x80808080, %r9d      #  38    0x60  7      OPC=andl_r32_imm32       
  nop                         #  39    0x70  1      OPC=nop                    andl %esi, %r9d             #  39    0x67  3      OPC=andl_r32_r32         
  nop                         #  40    0x71  1      OPC=nop                    je .L_126820                #  40    0x6a  6      OPC=je_label_1           
  nop                         #  41    0x72  1      OPC=nop                    nop                         #  41    0x70  1      OPC=nop                  
  nopl %eax                   #  42    0x73  3      OPC=nopl_r32               nop                         #  42    0x71  1      OPC=nop                  
  nop                         #  43    0x76  1      OPC=nop                    nop                         #  43    0x72  1      OPC=nop                  
  nop                         #  44    0x77  1      OPC=nop                    nop                         #  44    0x73  1      OPC=nop                  
  nop                         #  45    0x78  1      OPC=nop                    nop                         #  45    0x74  1      OPC=nop                  
  nop                         #  46    0x79  1      OPC=nop                    nop                         #  46    0x75  1      OPC=nop                  
  nop                         #  47    0x7a  1      OPC=nop                    nop                         #  47    0x76  1      OPC=nop                  
  nop                         #  48    0x7b  1      OPC=nop                    nop                         #  48    0x77  1      OPC=nop                  
  nop                         #  49    0x7c  1      OPC=nop                    nop                         #  49    0x78  1      OPC=nop                  
  nop                         #  50    0x7d  1      OPC=nop                    nop                         #  50    0x79  1      OPC=nop                  
  nop                         #  51    0x7e  1      OPC=nop                    nop                         #  51    0x7a  1      OPC=nop                  
  nop                         #  52    0x7f  1      OPC=nop                    nop                         #  52    0x7b  1      OPC=nop                  
.L_126860:                    #        0x80  0      OPC=<label>                nop                         #  53    0x7c  1      OPC=nop                  
  andl %edx, %edx             #  53    0x80  2      OPC=andl_r32_r32_1         nop                         #  54    0x7d  1      OPC=nop                  
  movsbq (%r15,%rdx,1), %rsi  #  54    0x82  5      OPC=movsbq_r64_m8          nop                         #  55    0x7e  1      OPC=nop                  
  xorl %ebp, %ecx             #  55    0x87  2      OPC=xorl_r32_r32_1         nop                         #  56    0x7f  1      OPC=nop                  
  movb %sil, (%r15,%rcx,1)    #  56    0x89  4      OPC=movb_m8_r8           .L_126860:                    #        0x80  0      OPC=<label>              
  addl $0x1, %ecx             #  57    0x8d  3      OPC=addl_r32_imm8          movl %edx, %edx             #  57    0x80  2      OPC=movl_r32_r32         
  addl $0x1, %edx             #  58    0x90  3      OPC=addl_r32_imm8          movzbq (%r15,%rdx,1), %rsi  #  58    0x82  5      OPC=movzbq_r64_m8        
  testb %sil, %sil            #  59    0x93  3      OPC=testb_r8_r8            andl %ecx, %ecx             #  59    0x87  2      OPC=andl_r32_r32         
  jne .L_126860               #  60    0x96  6      OPC=jne_label_1            movb %sil, (%r15,%rcx,1)    #  60    0x89  4      OPC=movb_m8_r8           
  nop                         #  61    0x9c  1      OPC=nop                    addl $0x1, %ecx             #  61    0x8d  3      OPC=addl_r32_imm8        
  nop                         #  62    0x9d  1      OPC=nop                    addl $0x1, %edx             #  62    0x90  3      OPC=addl_r32_imm8        
  nop                         #  63    0x9e  1      OPC=nop                    testb %sil, %sil            #  63    0x93  3      OPC=testb_r8_r8          
  nop                         #  64    0x9f  1      OPC=nop                    jne .L_126860               #  64    0x96  6      OPC=jne_label_1          
  nop                         #  65    0xa0  1      OPC=nop                    nop                         #  65    0x9c  1      OPC=nop                  
  nop                         #  66    0xa1  1      OPC=nop                    nop                         #  66    0x9d  1      OPC=nop                  
  nop                         #  67    0xa2  1      OPC=nop                    nop                         #  67    0x9e  1      OPC=nop                  
  nop                         #  68    0xa3  1      OPC=nop                    nop                         #  68    0x9f  1      OPC=nop                  
  popq %r11                   #  69    0xa4  2      OPC=popq_r64_1             nop                         #  69    0xa0  1      OPC=nop                  
  andl $0xe0, %r11d           #  70    0xa6  4      OPC=andl_r32_imm8          nop                         #  70    0xa1  1      OPC=nop                  
  addq %r15, %r11             #  71    0xaa  3      OPC=addq_r64_r64           nop                         #  71    0xa2  1      OPC=nop                  
  jmpq %r11                   #  72    0xad  3      OPC=jmpq_r64               nop                         #  72    0xa3  1      OPC=nop                  
                                                                               nop                         #  73    0xa4  1      OPC=nop                  
.size strcpy, .-strcpy                                                         nop                         #  74    0xa5  1      OPC=nop                  
                                                                               nop                         #  75    0xa6  1      OPC=nop                  
                                                                               popq %r11                   #  76    0xa7  2      OPC=popq_r64_1           
                                                                               andl $0xe0, %r11d           #  77    0xa9  4      OPC=andl_r32_imm8        
                                                                               addq %r15, %r11             #  78    0xad  3      OPC=addq_r64_r64         
                                                                               jmpq %r11                   #  79    0xb0  3      OPC=jmpq_r64             
                                                                                                                                                          
                                                                             .size strcpy, .-strcpy                                                       
                                                                                                                                                          

********************************************************************************

Progress Update: 

Lowest Cost Discovered (199)                                                 Lowest Known Correct Cost (214)                                              
                                                                                                                                                          
  .text                                                                        .text                                                                      
  .globl strcpy                                                                .globl strcpy                                                              
  .type strcpy, @function                                                      .type strcpy, @function                                                    
                                                                                                                                                          
#! file-offset 0                                                             #! file-offset 0                                                             
#! rip-offset  0                                                             #! rip-offset  0                                                             
#! capacity    0 bytes                                                       #! capacity    0 bytes                                                       
                                                                                                                                                          
# Text                        #  Line  RIP   Bytes  Opcode                   # Text                        #  Line  RIP   Bytes  Opcode                   
.strcpy:                      #        0     0      OPC=<label>              .strcpy:                      #        0     0      OPC=<label>              
  nop                         #  1     0     1      OPC=nop                    movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32         
  movq %rsi, %rdx             #  2     0x1   3      OPC=movq_r64_r64_1         movq %rsi, %rdx             #  2     0x2   3      OPC=movq_r64_r64         
  movl %edi, %eax             #  3     0x4   2      OPC=movl_r32_r32_1         nop                         #  3     0x5   1      OPC=nop                  
  movw %dx, %di               #  4     0x6   3      OPC=movw_r16_r16           movq %rax, %rcx             #  4     0x6   3      OPC=movq_r64_r64         
  addl %eax, %edi             #  5     0x9   2      OPC=addl_r32_r32           nop                         #  5     0x9   1      OPC=nop                  
  andb $0x3, %dil             #  6     0xb   4      OPC=andb_r8_imm8           nop                         #  6     0xa   1      OPC=nop                  
  movq %rax, %rcx             #  7     0xf   3      OPC=movq_r64_r64           movb %sil, %dil             #  7     0xb   3      OPC=movb_r8_r8           
  nop                         #  8     0x12  1      OPC=nop                    addl %eax, %edi             #  8     0xe   2      OPC=addl_r32_r32         
  jne .L_126860               #  9     0x13  6      OPC=jne_label_1            andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8        
  nop                         #  10    0x19  1      OPC=nop                    jne .L_126860               #  10    0x13  6      OPC=jne_label_1          
  orl %ebp, %esi              #  11    0x1a  2      OPC=orl_r32_r32_1          movl %edx, %esi             #  11    0x19  2      OPC=movl_r32_r32         
  movl (%r15,%rsi,1), %r8d    #  12    0x1c  4      OPC=movl_r32_m32           movl (%r15,%rsi,1), %r8d    #  12    0x1b  4      OPC=movl_r32_m32         
  leal -0x1010101(%r8), %edi  #  13    0x20  7      OPC=leal_r32_m16           nop                         #  13    0x1f  1      OPC=nop                  
  notw %si                    #  14    0x27  3      OPC=notw_r16               notl %esi                   #  14    0x20  2      OPC=notl_r32             
  nop                         #  15    0x2a  1      OPC=nop                    nop                         #  15    0x22  1      OPC=nop                  
  nop                         #  16    0x2b  1      OPC=nop                    nop                         #  16    0x23  1      OPC=nop                  
  andl $0x80, %esi            #  17    0x2c  6      OPC=andl_r32_imm32         leaq -0x1010101(%r8), %rdi  #  17    0x24  7      OPC=leaq_r64_m64         
  nop                         #  18    0x32  1      OPC=nop                    nop                         #  18    0x2b  1      OPC=nop                  
  andl %edi, %esi             #  19    0x33  2      OPC=andl_r32_r32           nop                         #  19    0x2c  1      OPC=nop                  
  jne .L_126860               #  20    0x35  6      OPC=jne_label_1            andl %edi, %esi             #  20    0x2d  2      OPC=andl_r32_r32         
  nop                         #  21    0x3b  1      OPC=nop                    andl $0x80, %esi            #  21    0x2f  6      OPC=andl_r32_imm32       
  nop                         #  22    0x3c  1      OPC=nop                    jne .L_126860               #  22    0x35  6      OPC=jne_label_1          
  nop                         #  23    0x3d  1      OPC=nop                    nop                         #  23    0x3b  1      OPC=nop                  
  nop                         #  24    0x3e  1      OPC=nop                    nop                         #  24    0x3c  1      OPC=nop                  
  nop                         #  25    0x3f  1      OPC=nop                    nop                         #  25    0x3d  1      OPC=nop                  
.L_126820:                    #        0x40  0      OPC=<label>                nop                         #  26    0x3e  1      OPC=nop                  
  xorl %esp, %ecx             #  26    0x40  2      OPC=xorl_r32_r32_1         nop                         #  27    0x3f  1      OPC=nop                  
  movl %r8d, (%r15,%rcx,1)    #  27    0x42  4      OPC=movl_m32_r32         .L_126820:                    #        0x40  0      OPC=<label>              
  addl $0x4, %ecx             #  28    0x46  3      OPC=addl_r32_imm8          addl $0x4, %edx             #  28    0x40  3      OPC=addl_r32_imm8        
  addw $0x4, %dx              #  29    0x49  4      OPC=addw_r16_imm8          movl %ecx, %ecx             #  29    0x43  2      OPC=movl_r32_r32_1       
  movl (%r15,%rdx,1), %r8d    #  30    0x4d  4      OPC=movl_r32_m32           movl %r8d, (%r15,%rcx,1)    #  30    0x45  4      OPC=movl_m32_r32         
  leal -0x1010101(%r8), %esi  #  31    0x51  7      OPC=leal_r32_m64           addl $0x4, %ecx             #  31    0x49  3      OPC=addl_r32_imm8        
  movl %r8d, %r9d             #  32    0x58  3      OPC=movl_r32_r32           xorl %esp, %edx             #  32    0x4c  2      OPC=xorl_r32_r32         
  notq %r9                    #  33    0x5b  3      OPC=notq_r64               movl (%r15,%rdx,1), %r8d    #  33    0x4e  4      OPC=movl_r32_m32         
  andl $0x80808080, %r9d      #  34    0x5e  7      OPC=andl_r32_imm32         movl %r8d, %r9d             #  34    0x52  3      OPC=movl_r32_r32         
  andl %esi, %r9d             #  35    0x65  3      OPC=andl_r32_r32           leal -0x1010101(%r8), %esi  #  35    0x55  7      OPC=leal_r32_m16         
  je .L_126820                #  36    0x68  6      OPC=je_label_1             notl %r9d                   #  36    0x5c  3      OPC=notl_r32             
  nop                         #  37    0x6e  1      OPC=nop                    nop                         #  37    0x5f  1      OPC=nop                  
  nop                         #  38    0x6f  1      OPC=nop                    andl $0x80808080, %r9d      #  38    0x60  7      OPC=andl_r32_imm32       
  nop                         #  39    0x70  1      OPC=nop                    andl %esi, %r9d             #  39    0x67  3      OPC=andl_r32_r32         
  nop                         #  40    0x71  1      OPC=nop                    je .L_126820                #  40    0x6a  6      OPC=je_label_1           
  nop                         #  41    0x72  1      OPC=nop                    nop                         #  41    0x70  1      OPC=nop                  
  nopl %eax                   #  42    0x73  3      OPC=nopl_r32               nop                         #  42    0x71  1      OPC=nop                  
  nop                         #  43    0x76  1      OPC=nop                    nop                         #  43    0x72  1      OPC=nop                  
  nop                         #  44    0x77  1      OPC=nop                    nop                         #  44    0x73  1      OPC=nop                  
  nop                         #  45    0x78  1      OPC=nop                    nop                         #  45    0x74  1      OPC=nop                  
  nop                         #  46    0x79  1      OPC=nop                    nop                         #  46    0x75  1      OPC=nop                  
  nop                         #  47    0x7a  1      OPC=nop                    nop                         #  47    0x76  1      OPC=nop                  
  nop                         #  48    0x7b  1      OPC=nop                    nop                         #  48    0x77  1      OPC=nop                  
  nop                         #  49    0x7c  1      OPC=nop                    nop                         #  49    0x78  1      OPC=nop                  
  nop                         #  50    0x7d  1      OPC=nop                    nop                         #  50    0x79  1      OPC=nop                  
  nop                         #  51    0x7e  1      OPC=nop                    nop                         #  51    0x7a  1      OPC=nop                  
.L_126860:                    #        0x7f  0      OPC=<label>                nop                         #  52    0x7b  1      OPC=nop                  
  andl %edx, %edx             #  52    0x7f  2      OPC=andl_r32_r32_1         nop                         #  53    0x7c  1      OPC=nop                  
  movsbq (%r15,%rdx,1), %rsi  #  53    0x81  5      OPC=movsbq_r64_m8          nop                         #  54    0x7d  1      OPC=nop                  
  xorl %ebp, %ecx             #  54    0x86  2      OPC=xorl_r32_r32_1         nop                         #  55    0x7e  1      OPC=nop                  
  movb %sil, (%r15,%rcx,1)    #  55    0x88  4      OPC=movb_m8_r8             nop                         #  56    0x7f  1      OPC=nop                  
  addl $0x1, %ecx             #  56    0x8c  3      OPC=addl_r32_imm8        .L_126860:                    #        0x80  0      OPC=<label>              
  addl $0x1, %edx             #  57    0x8f  3      OPC=addl_r32_imm8          movl %edx, %edx             #  57    0x80  2      OPC=movl_r32_r32         
  testb %sil, %sil            #  58    0x92  3      OPC=testb_r8_r8            movzbq (%r15,%rdx,1), %rsi  #  58    0x82  5      OPC=movzbq_r64_m8        
  jne .L_126860               #  59    0x95  6      OPC=jne_label_1            andl %ecx, %ecx             #  59    0x87  2      OPC=andl_r32_r32         
  nop                         #  60    0x9b  1      OPC=nop                    movb %sil, (%r15,%rcx,1)    #  60    0x89  4      OPC=movb_m8_r8           
  nop                         #  61    0x9c  1      OPC=nop                    addl $0x1, %ecx             #  61    0x8d  3      OPC=addl_r32_imm8        
  nop                         #  62    0x9d  1      OPC=nop                    addl $0x1, %edx             #  62    0x90  3      OPC=addl_r32_imm8        
  nop                         #  63    0x9e  1      OPC=nop                    testb %sil, %sil            #  63    0x93  3      OPC=testb_r8_r8          
  nop                         #  64    0x9f  1      OPC=nop                    jne .L_126860               #  64    0x96  6      OPC=jne_label_1          
  nop                         #  65    0xa0  1      OPC=nop                    nop                         #  65    0x9c  1      OPC=nop                  
  nop                         #  66    0xa1  1      OPC=nop                    nop                         #  66    0x9d  1      OPC=nop                  
  nop                         #  67    0xa2  1      OPC=nop                    nop                         #  67    0x9e  1      OPC=nop                  
  nop                         #  68    0xa3  1      OPC=nop                    nop                         #  68    0x9f  1      OPC=nop                  
  nop                         #  69    0xa4  1      OPC=nop                    nop                         #  69    0xa0  1      OPC=nop                  
  nop                         #  70    0xa5  1      OPC=nop                    nop                         #  70    0xa1  1      OPC=nop                  
  popq %r11                   #  71    0xa6  2      OPC=popq_r64_1             nop                         #  71    0xa2  1      OPC=nop                  
  andl $0xe0, %r11d           #  72    0xa8  4      OPC=andl_r32_imm8          nop                         #  72    0xa3  1      OPC=nop                  
  addq %r15, %r11             #  73    0xac  3      OPC=addq_r64_r64           nop                         #  73    0xa4  1      OPC=nop                  
  jmpq %r11                   #  74    0xaf  3      OPC=jmpq_r64               nop                         #  74    0xa5  1      OPC=nop                  
                                                                               nop                         #  75    0xa6  1      OPC=nop                  
.size strcpy, .-strcpy                                                         popq %r11                   #  76    0xa7  2      OPC=popq_r64_1           
                                                                               andl $0xe0, %r11d           #  77    0xa9  4      OPC=andl_r32_imm8        
                                                                               addq %r15, %r11             #  78    0xad  3      OPC=addq_r64_r64         
                                                                               jmpq %r11                   #  79    0xb0  3      OPC=jmpq_r64             
                                                                                                                                                          
                                                                             .size strcpy, .-strcpy                                                       
                                                                                                                                                          

********************************************************************************

Progress Update: 

Lowest Cost Discovered (198)                                                 Lowest Known Correct Cost (214)                                              
                                                                                                                                                          
  .text                                                                        .text                                                                      
  .globl strcpy                                                                .globl strcpy                                                              
  .type strcpy, @function                                                      .type strcpy, @function                                                    
                                                                                                                                                          
#! file-offset 0                                                             #! file-offset 0                                                             
#! rip-offset  0                                                             #! rip-offset  0                                                             
#! capacity    0 bytes                                                       #! capacity    0 bytes                                                       
                                                                                                                                                          
# Text                        #  Line  RIP   Bytes  Opcode                   # Text                        #  Line  RIP   Bytes  Opcode                   
.strcpy:                      #        0     0      OPC=<label>              .strcpy:                      #        0     0      OPC=<label>              
  nop                         #  1     0     1      OPC=nop                    movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32         
  movq %rsi, %rdx             #  2     0x1   3      OPC=movq_r64_r64_1         movq %rsi, %rdx             #  2     0x2   3      OPC=movq_r64_r64         
  movl %edi, %eax             #  3     0x4   2      OPC=movl_r32_r32_1         nop                         #  3     0x5   1      OPC=nop                  
  movw %dx, %di               #  4     0x6   3      OPC=movw_r16_r16           movq %rax, %rcx             #  4     0x6   3      OPC=movq_r64_r64         
  addl %eax, %edi             #  5     0x9   2      OPC=addl_r32_r32           nop                         #  5     0x9   1      OPC=nop                  
  andb $0x3, %dil             #  6     0xb   4      OPC=andb_r8_imm8           nop                         #  6     0xa   1      OPC=nop                  
  movq %rax, %rcx             #  7     0xf   3      OPC=movq_r64_r64           movb %sil, %dil             #  7     0xb   3      OPC=movb_r8_r8           
  nop                         #  8     0x12  1      OPC=nop                    addl %eax, %edi             #  8     0xe   2      OPC=addl_r32_r32         
  jne .L_126860               #  9     0x13  6      OPC=jne_label_1            andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8        
  nop                         #  10    0x19  1      OPC=nop                    jne .L_126860               #  10    0x13  6      OPC=jne_label_1          
  orl %ebp, %esi              #  11    0x1a  2      OPC=orl_r32_r32_1          movl %edx, %esi             #  11    0x19  2      OPC=movl_r32_r32         
  movl (%r15,%rsi,1), %r8d    #  12    0x1c  4      OPC=movl_r32_m32           movl (%r15,%rsi,1), %r8d    #  12    0x1b  4      OPC=movl_r32_m32         
  leal -0x1010101(%r8), %edi  #  13    0x20  7      OPC=leal_r32_m16           nop                         #  13    0x1f  1      OPC=nop                  
  nop                         #  14    0x27  1      OPC=nop                    notl %esi                   #  14    0x20  2      OPC=notl_r32             
  notw %si                    #  15    0x28  3      OPC=notw_r16               nop                         #  15    0x22  1      OPC=nop                  
  nop                         #  16    0x2b  1      OPC=nop                    nop                         #  16    0x23  1      OPC=nop                  
  nop                         #  17    0x2c  1      OPC=nop                    leaq -0x1010101(%r8), %rdi  #  17    0x24  7      OPC=leaq_r64_m64         
  andl $0x80, %esi            #  18    0x2d  6      OPC=andl_r32_imm32         nop                         #  18    0x2b  1      OPC=nop                  
  andl %edi, %esi             #  19    0x33  2      OPC=andl_r32_r32           nop                         #  19    0x2c  1      OPC=nop                  
  jne .L_126860               #  20    0x35  6      OPC=jne_label_1            andl %edi, %esi             #  20    0x2d  2      OPC=andl_r32_r32         
  nop                         #  21    0x3b  1      OPC=nop                    andl $0x80, %esi            #  21    0x2f  6      OPC=andl_r32_imm32       
  nop                         #  22    0x3c  1      OPC=nop                    jne .L_126860               #  22    0x35  6      OPC=jne_label_1          
  nop                         #  23    0x3d  1      OPC=nop                    nop                         #  23    0x3b  1      OPC=nop                  
  nop                         #  24    0x3e  1      OPC=nop                    nop                         #  24    0x3c  1      OPC=nop                  
  nop                         #  25    0x3f  1      OPC=nop                    nop                         #  25    0x3d  1      OPC=nop                  
.L_126820:                    #        0x40  0      OPC=<label>                nop                         #  26    0x3e  1      OPC=nop                  
  xorl %esp, %ecx             #  26    0x40  2      OPC=xorl_r32_r32_1         nop                         #  27    0x3f  1      OPC=nop                  
  movl %r8d, (%r15,%rcx,1)    #  27    0x42  4      OPC=movl_m32_r32         .L_126820:                    #        0x40  0      OPC=<label>              
  addl $0x4, %ecx             #  28    0x46  3      OPC=addl_r32_imm8          addl $0x4, %edx             #  28    0x40  3      OPC=addl_r32_imm8        
  addw $0x4, %dx              #  29    0x49  4      OPC=addw_r16_imm8          movl %ecx, %ecx             #  29    0x43  2      OPC=movl_r32_r32_1       
  movl (%r15,%rdx,1), %r8d    #  30    0x4d  4      OPC=movl_r32_m32           movl %r8d, (%r15,%rcx,1)    #  30    0x45  4      OPC=movl_m32_r32         
  leal -0x1010101(%r8), %esi  #  31    0x51  7      OPC=leal_r32_m64           addl $0x4, %ecx             #  31    0x49  3      OPC=addl_r32_imm8        
  movl %r8d, %r9d             #  32    0x58  3      OPC=movl_r32_r32           xorl %esp, %edx             #  32    0x4c  2      OPC=xorl_r32_r32         
  notq %r9                    #  33    0x5b  3      OPC=notq_r64               movl (%r15,%rdx,1), %r8d    #  33    0x4e  4      OPC=movl_r32_m32         
  andl $0x80808080, %r9d      #  34    0x5e  7      OPC=andl_r32_imm32         movl %r8d, %r9d             #  34    0x52  3      OPC=movl_r32_r32         
  andl %esi, %r9d             #  35    0x65  3      OPC=andl_r32_r32           leal -0x1010101(%r8), %esi  #  35    0x55  7      OPC=leal_r32_m16         
  je .L_126820                #  36    0x68  6      OPC=je_label_1             notl %r9d                   #  36    0x5c  3      OPC=notl_r32             
  nop                         #  37    0x6e  1      OPC=nop                    nop                         #  37    0x5f  1      OPC=nop                  
  nop                         #  38    0x6f  1      OPC=nop                    andl $0x80808080, %r9d      #  38    0x60  7      OPC=andl_r32_imm32       
  nop                         #  39    0x70  1      OPC=nop                    andl %esi, %r9d             #  39    0x67  3      OPC=andl_r32_r32         
  nop                         #  40    0x71  1      OPC=nop                    je .L_126820                #  40    0x6a  6      OPC=je_label_1           
  nop                         #  41    0x72  1      OPC=nop                    nop                         #  41    0x70  1      OPC=nop                  
  nopl %eax                   #  42    0x73  3      OPC=nopl_r32               nop                         #  42    0x71  1      OPC=nop                  
  nop                         #  43    0x76  1      OPC=nop                    nop                         #  43    0x72  1      OPC=nop                  
  nop                         #  44    0x77  1      OPC=nop                    nop                         #  44    0x73  1      OPC=nop                  
  nop                         #  45    0x78  1      OPC=nop                    nop                         #  45    0x74  1      OPC=nop                  
  nop                         #  46    0x79  1      OPC=nop                    nop                         #  46    0x75  1      OPC=nop                  
  nop                         #  47    0x7a  1      OPC=nop                    nop                         #  47    0x76  1      OPC=nop                  
  nop                         #  48    0x7b  1      OPC=nop                    nop                         #  48    0x77  1      OPC=nop                  
  nop                         #  49    0x7c  1      OPC=nop                    nop                         #  49    0x78  1      OPC=nop                  
  nop                         #  50    0x7d  1      OPC=nop                    nop                         #  50    0x79  1      OPC=nop                  
.L_126860:                    #        0x7e  0      OPC=<label>                nop                         #  51    0x7a  1      OPC=nop                  
  andl %edx, %edx             #  51    0x7e  2      OPC=andl_r32_r32_1         nop                         #  52    0x7b  1      OPC=nop                  
  movsbq (%r15,%rdx,1), %rsi  #  52    0x80  5      OPC=movsbq_r64_m8          nop                         #  53    0x7c  1      OPC=nop                  
  xorl %ebp, %ecx             #  53    0x85  2      OPC=xorl_r32_r32_1         nop                         #  54    0x7d  1      OPC=nop                  
  movb %sil, (%r15,%rcx,1)    #  54    0x87  4      OPC=movb_m8_r8             nop                         #  55    0x7e  1      OPC=nop                  
  addl $0x1, %ecx             #  55    0x8b  3      OPC=addl_r32_imm8          nop                         #  56    0x7f  1      OPC=nop                  
  addl $0x1, %edx             #  56    0x8e  3      OPC=addl_r32_imm8        .L_126860:                    #        0x80  0      OPC=<label>              
  testb %sil, %sil            #  57    0x91  3      OPC=testb_r8_r8            movl %edx, %edx             #  57    0x80  2      OPC=movl_r32_r32         
  jne .L_126860               #  58    0x94  6      OPC=jne_label_1            movzbq (%r15,%rdx,1), %rsi  #  58    0x82  5      OPC=movzbq_r64_m8        
  nop                         #  59    0x9a  1      OPC=nop                    andl %ecx, %ecx             #  59    0x87  2      OPC=andl_r32_r32         
  nop                         #  60    0x9b  1      OPC=nop                    movb %sil, (%r15,%rcx,1)    #  60    0x89  4      OPC=movb_m8_r8           
  nop                         #  61    0x9c  1      OPC=nop                    addl $0x1, %ecx             #  61    0x8d  3      OPC=addl_r32_imm8        
  nop                         #  62    0x9d  1      OPC=nop                    addl $0x1, %edx             #  62    0x90  3      OPC=addl_r32_imm8        
  nopl %eax                   #  63    0x9e  3      OPC=nopl_r32               testb %sil, %sil            #  63    0x93  3      OPC=testb_r8_r8          
  nop                         #  64    0xa1  1      OPC=nop                    jne .L_126860               #  64    0x96  6      OPC=jne_label_1          
  nop                         #  65    0xa2  1      OPC=nop                    nop                         #  65    0x9c  1      OPC=nop                  
  nop                         #  66    0xa3  1      OPC=nop                    nop                         #  66    0x9d  1      OPC=nop                  
  nop                         #  67    0xa4  1      OPC=nop                    nop                         #  67    0x9e  1      OPC=nop                  
  nop                         #  68    0xa5  1      OPC=nop                    nop                         #  68    0x9f  1      OPC=nop                  
  nop                         #  69    0xa6  1      OPC=nop                    nop                         #  69    0xa0  1      OPC=nop                  
  nop                         #  70    0xa7  1      OPC=nop                    nop                         #  70    0xa1  1      OPC=nop                  
  popq %r11                   #  71    0xa8  2      OPC=popq_r64_1             nop                         #  71    0xa2  1      OPC=nop                  
  andl $0xe0, %r11d           #  72    0xaa  4      OPC=andl_r32_imm8          nop                         #  72    0xa3  1      OPC=nop                  
  addq %r15, %r11             #  73    0xae  3      OPC=addq_r64_r64           nop                         #  73    0xa4  1      OPC=nop                  
  jmpq %r11                   #  74    0xb1  3      OPC=jmpq_r64               nop                         #  74    0xa5  1      OPC=nop                  
                                                                               nop                         #  75    0xa6  1      OPC=nop                  
.size strcpy, .-strcpy                                                         popq %r11                   #  76    0xa7  2      OPC=popq_r64_1           
                                                                               andl $0xe0, %r11d           #  77    0xa9  4      OPC=andl_r32_imm8        
                                                                               addq %r15, %r11             #  78    0xad  3      OPC=addq_r64_r64         
                                                                               jmpq %r11                   #  79    0xb0  3      OPC=jmpq_r64             
                                                                                                                                                          
                                                                             .size strcpy, .-strcpy                                                       
                                                                                                                                                          

********************************************************************************

Progress Update: 

Lowest Cost Discovered (197)                                                 Lowest Known Correct Cost (214)                                              
                                                                                                                                                          
  .text                                                                        .text                                                                      
  .globl strcpy                                                                .globl strcpy                                                              
  .type strcpy, @function                                                      .type strcpy, @function                                                    
                                                                                                                                                          
#! file-offset 0                                                             #! file-offset 0                                                             
#! rip-offset  0                                                             #! rip-offset  0                                                             
#! capacity    0 bytes                                                       #! capacity    0 bytes                                                       
                                                                                                                                                          
# Text                        #  Line  RIP   Bytes  Opcode                   # Text                        #  Line  RIP   Bytes  Opcode                   
.strcpy:                      #        0     0      OPC=<label>              .strcpy:                      #        0     0      OPC=<label>              
  movq %rsi, %rdx             #  1     0     3      OPC=movq_r64_r64_1         movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32         
  movl %edi, %eax             #  2     0x3   2      OPC=movl_r32_r32_1         movq %rsi, %rdx             #  2     0x2   3      OPC=movq_r64_r64         
  movw %dx, %di               #  3     0x5   3      OPC=movw_r16_r16           nop                         #  3     0x5   1      OPC=nop                  
  nop                         #  4     0x8   1      OPC=nop                    movq %rax, %rcx             #  4     0x6   3      OPC=movq_r64_r64         
  addl %eax, %edi             #  5     0x9   2      OPC=addl_r32_r32           nop                         #  5     0x9   1      OPC=nop                  
  andb $0x6, %dil             #  6     0xb   4      OPC=andb_r8_imm8           nop                         #  6     0xa   1      OPC=nop                  
  movq %rax, %rcx             #  7     0xf   3      OPC=movq_r64_r64           movb %sil, %dil             #  7     0xb   3      OPC=movb_r8_r8           
  nop                         #  8     0x12  1      OPC=nop                    addl %eax, %edi             #  8     0xe   2      OPC=addl_r32_r32         
  nop                         #  9     0x13  1      OPC=nop                    andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8        
  jne .L_126860               #  10    0x14  6      OPC=jne_label_1            jne .L_126860               #  10    0x13  6      OPC=jne_label_1          
  subl %ebp, %esi             #  11    0x1a  2      OPC=subl_r32_r32_1         movl %edx, %esi             #  11    0x19  2      OPC=movl_r32_r32         
  movl (%r15,%rsi,1), %r8d    #  12    0x1c  4      OPC=movl_r32_m32           movl (%r15,%rsi,1), %r8d    #  12    0x1b  4      OPC=movl_r32_m32         
  leal -0x1010101(%r8), %edi  #  13    0x20  7      OPC=leal_r32_m16           nop                         #  13    0x1f  1      OPC=nop                  
  nop                         #  14    0x27  1      OPC=nop                    notl %esi                   #  14    0x20  2      OPC=notl_r32             
  nop                         #  15    0x28  1      OPC=nop                    nop                         #  15    0x22  1      OPC=nop                  
  notq %rsi                   #  16    0x29  3      OPC=notq_r64               nop                         #  16    0x23  1      OPC=nop                  
  nop                         #  17    0x2c  1      OPC=nop                    leaq -0x1010101(%r8), %rdi  #  17    0x24  7      OPC=leaq_r64_m64         
  andl $0x80, %esi            #  18    0x2d  6      OPC=andl_r32_imm32         nop                         #  18    0x2b  1      OPC=nop                  
  andl %edi, %esi             #  19    0x33  2      OPC=andl_r32_r32           nop                         #  19    0x2c  1      OPC=nop                  
  jne .L_126860               #  20    0x35  6      OPC=jne_label_1            andl %edi, %esi             #  20    0x2d  2      OPC=andl_r32_r32         
  nop                         #  21    0x3b  1      OPC=nop                    andl $0x80, %esi            #  21    0x2f  6      OPC=andl_r32_imm32       
  nop                         #  22    0x3c  1      OPC=nop                    jne .L_126860               #  22    0x35  6      OPC=jne_label_1          
  nop                         #  23    0x3d  1      OPC=nop                    nop                         #  23    0x3b  1      OPC=nop                  
  nop                         #  24    0x3e  1      OPC=nop                    nop                         #  24    0x3c  1      OPC=nop                  
  nop                         #  25    0x3f  1      OPC=nop                    nop                         #  25    0x3d  1      OPC=nop                  
.L_126820:                    #        0x40  0      OPC=<label>                nop                         #  26    0x3e  1      OPC=nop                  
  xorl %ebp, %ecx             #  26    0x40  2      OPC=xorl_r32_r32_1         nop                         #  27    0x3f  1      OPC=nop                  
  movl %r8d, (%r15,%rcx,1)    #  27    0x42  4      OPC=movl_m32_r32         .L_126820:                    #        0x40  0      OPC=<label>              
  addl $0x4, %ecx             #  28    0x46  3      OPC=addl_r32_imm8          addl $0x4, %edx             #  28    0x40  3      OPC=addl_r32_imm8        
  addw $0x4, %dx              #  29    0x49  4      OPC=addw_r16_imm8          movl %ecx, %ecx             #  29    0x43  2      OPC=movl_r32_r32_1       
  movl (%r15,%rdx,1), %r8d    #  30    0x4d  4      OPC=movl_r32_m32           movl %r8d, (%r15,%rcx,1)    #  30    0x45  4      OPC=movl_m32_r32         
  leal -0x1010101(%r8), %esi  #  31    0x51  7      OPC=leal_r32_m64           addl $0x4, %ecx             #  31    0x49  3      OPC=addl_r32_imm8        
  movl %r8d, %r9d             #  32    0x58  3      OPC=movl_r32_r32           xorl %esp, %edx             #  32    0x4c  2      OPC=xorl_r32_r32         
  notq %r9                    #  33    0x5b  3      OPC=notq_r64               movl (%r15,%rdx,1), %r8d    #  33    0x4e  4      OPC=movl_r32_m32         
  andl $0x80808080, %r9d      #  34    0x5e  7      OPC=andl_r32_imm32         movl %r8d, %r9d             #  34    0x52  3      OPC=movl_r32_r32         
  andl %esi, %r9d             #  35    0x65  3      OPC=andl_r32_r32           leal -0x1010101(%r8), %esi  #  35    0x55  7      OPC=leal_r32_m16         
  je .L_126820                #  36    0x68  6      OPC=je_label_1             notl %r9d                   #  36    0x5c  3      OPC=notl_r32             
  nop                         #  37    0x6e  1      OPC=nop                    nop                         #  37    0x5f  1      OPC=nop                  
  nop                         #  38    0x6f  1      OPC=nop                    andl $0x80808080, %r9d      #  38    0x60  7      OPC=andl_r32_imm32       
  nop                         #  39    0x70  1      OPC=nop                    andl %esi, %r9d             #  39    0x67  3      OPC=andl_r32_r32         
  nop                         #  40    0x71  1      OPC=nop                    je .L_126820                #  40    0x6a  6      OPC=je_label_1           
  nop                         #  41    0x72  1      OPC=nop                    nop                         #  41    0x70  1      OPC=nop                  
  nop                         #  42    0x73  1      OPC=nop                    nop                         #  42    0x71  1      OPC=nop                  
  nop                         #  43    0x74  1      OPC=nop                    nop                         #  43    0x72  1      OPC=nop                  
  nop                         #  44    0x75  1      OPC=nop                    nop                         #  44    0x73  1      OPC=nop                  
  nop                         #  45    0x76  1      OPC=nop                    nop                         #  45    0x74  1      OPC=nop                  
  nop                         #  46    0x77  1      OPC=nop                    nop                         #  46    0x75  1      OPC=nop                  
  nop                         #  47    0x78  1      OPC=nop                    nop                         #  47    0x76  1      OPC=nop                  
  nop                         #  48    0x79  1      OPC=nop                    nop                         #  48    0x77  1      OPC=nop                  
  nop                         #  49    0x7a  1      OPC=nop                    nop                         #  49    0x78  1      OPC=nop                  
  nop                         #  50    0x7b  1      OPC=nop                    nop                         #  50    0x79  1      OPC=nop                  
  nop                         #  51    0x7c  1      OPC=nop                    nop                         #  51    0x7a  1      OPC=nop                  
  nop                         #  52    0x7d  1      OPC=nop                    nop                         #  52    0x7b  1      OPC=nop                  
.L_126860:                    #        0x7e  0      OPC=<label>                nop                         #  53    0x7c  1      OPC=nop                  
  orl %edx, %edx              #  53    0x7e  2      OPC=orl_r32_r32_1          nop                         #  54    0x7d  1      OPC=nop                  
  movsbl (%r15,%rdx,1), %esi  #  54    0x80  5      OPC=movsbl_r32_m8          nop                         #  55    0x7e  1      OPC=nop                  
  xorl %ebp, %ecx             #  55    0x85  2      OPC=xorl_r32_r32_1         nop                         #  56    0x7f  1      OPC=nop                  
  movb %sil, (%r15,%rcx,1)    #  56    0x87  4      OPC=movb_m8_r8           .L_126860:                    #        0x80  0      OPC=<label>              
  addl $0x1, %ecx             #  57    0x8b  3      OPC=addl_r32_imm8          movl %edx, %edx             #  57    0x80  2      OPC=movl_r32_r32         
  addl $0x1, %edx             #  58    0x8e  3      OPC=addl_r32_imm8          movzbq (%r15,%rdx,1), %rsi  #  58    0x82  5      OPC=movzbq_r64_m8        
  testb %sil, %sil            #  59    0x91  3      OPC=testb_r8_r8            andl %ecx, %ecx             #  59    0x87  2      OPC=andl_r32_r32         
  jne .L_126860               #  60    0x94  6      OPC=jne_label_1            movb %sil, (%r15,%rcx,1)    #  60    0x89  4      OPC=movb_m8_r8           
  nop                         #  61    0x9a  1      OPC=nop                    addl $0x1, %ecx             #  61    0x8d  3      OPC=addl_r32_imm8        
  nop                         #  62    0x9b  1      OPC=nop                    addl $0x1, %edx             #  62    0x90  3      OPC=addl_r32_imm8        
  nop                         #  63    0x9c  1      OPC=nop                    testb %sil, %sil            #  63    0x93  3      OPC=testb_r8_r8          
  nop                         #  64    0x9d  1      OPC=nop                    jne .L_126860               #  64    0x96  6      OPC=jne_label_1          
  nop                         #  65    0x9e  1      OPC=nop                    nop                         #  65    0x9c  1      OPC=nop                  
  nop                         #  66    0x9f  1      OPC=nop                    nop                         #  66    0x9d  1      OPC=nop                  
  nop                         #  67    0xa0  1      OPC=nop                    nop                         #  67    0x9e  1      OPC=nop                  
  nop                         #  68    0xa1  1      OPC=nop                    nop                         #  68    0x9f  1      OPC=nop                  
  nop                         #  69    0xa2  1      OPC=nop                    nop                         #  69    0xa0  1      OPC=nop                  
  nop                         #  70    0xa3  1      OPC=nop                    nop                         #  70    0xa1  1      OPC=nop                  
  nop                         #  71    0xa4  1      OPC=nop                    nop                         #  71    0xa2  1      OPC=nop                  
  nop                         #  72    0xa5  1      OPC=nop                    nop                         #  72    0xa3  1      OPC=nop                  
  nop                         #  73    0xa6  1      OPC=nop                    nop                         #  73    0xa4  1      OPC=nop                  
  nop                         #  74    0xa7  1      OPC=nop                    nop                         #  74    0xa5  1      OPC=nop                  
  nop                         #  75    0xa8  1      OPC=nop                    nop                         #  75    0xa6  1      OPC=nop                  
  nop                         #  76    0xa9  1      OPC=nop                    popq %r11                   #  76    0xa7  2      OPC=popq_r64_1           
  nop                         #  77    0xaa  1      OPC=nop                    andl $0xe0, %r11d           #  77    0xa9  4      OPC=andl_r32_imm8        
  nop                         #  78    0xab  1      OPC=nop                    addq %r15, %r11             #  78    0xad  3      OPC=addq_r64_r64         
  nop                         #  79    0xac  1      OPC=nop                    jmpq %r11                   #  79    0xb0  3      OPC=jmpq_r64             
  popq %r11                   #  80    0xad  2      OPC=popq_r64_1                                                                                        
  andl $0xe0, %r11d           #  81    0xaf  4      OPC=andl_r32_imm8        .size strcpy, .-strcpy                                                       
  addq %r15, %r11             #  82    0xb3  3      OPC=addq_r64_r64                                                                                      
  jmpq %r11                   #  83    0xb6  3      OPC=jmpq_r64                                                                                          
                                                                                                                                                          
.size strcpy, .-strcpy                                                                                                                                    
                                                                                                                                                          

********************************************************************************

Progress Update: 

Lowest Cost Discovered (196)                                                 Lowest Known Correct Cost (214)                                              
                                                                                                                                                          
  .text                                                                        .text                                                                      
  .globl strcpy                                                                .globl strcpy                                                              
  .type strcpy, @function                                                      .type strcpy, @function                                                    
                                                                                                                                                          
#! file-offset 0                                                             #! file-offset 0                                                             
#! rip-offset  0                                                             #! rip-offset  0                                                             
#! capacity    0 bytes                                                       #! capacity    0 bytes                                                       
                                                                                                                                                          
# Text                        #  Line  RIP   Bytes  Opcode                   # Text                        #  Line  RIP   Bytes  Opcode                   
.strcpy:                      #        0     0      OPC=<label>              .strcpy:                      #        0     0      OPC=<label>              
  movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32_1         movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32         
  movw %si, %di               #  2     0x2   3      OPC=movw_r16_r16           movq %rsi, %rdx             #  2     0x2   3      OPC=movq_r64_r64         
  addl %eax, %edi             #  3     0x5   2      OPC=addl_r32_r32           nop                         #  3     0x5   1      OPC=nop                  
  nop                         #  4     0x7   1      OPC=nop                    movq %rax, %rcx             #  4     0x6   3      OPC=movq_r64_r64         
  nop                         #  5     0x8   1      OPC=nop                    nop                         #  5     0x9   1      OPC=nop                  
  movq %rsi, %rdx             #  6     0x9   3      OPC=movq_r64_r64_1         nop                         #  6     0xa   1      OPC=nop                  
  movl %eax, %ecx             #  7     0xc   2      OPC=movl_r32_r32_1         movb %sil, %dil             #  7     0xb   3      OPC=movb_r8_r8           
  nop                         #  8     0xe   1      OPC=nop                    addl %eax, %edi             #  8     0xe   2      OPC=addl_r32_r32         
  nop                         #  9     0xf   1      OPC=nop                    andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8        
  salb $0x6, %dil             #  10    0x10  4      OPC=salb_r8_imm8           jne .L_126860               #  10    0x13  6      OPC=jne_label_1          
  jne .L_126860               #  11    0x14  6      OPC=jne_label_1            movl %edx, %esi             #  11    0x19  2      OPC=movl_r32_r32         
  orl %edx, %esi              #  12    0x1a  2      OPC=orl_r32_r32_1          movl (%r15,%rsi,1), %r8d    #  12    0x1b  4      OPC=movl_r32_m32         
  movl (%r15,%rsi,1), %r8d    #  13    0x1c  4      OPC=movl_r32_m32           nop                         #  13    0x1f  1      OPC=nop                  
  notl %esi                   #  14    0x20  2      OPC=notl_r32               notl %esi                   #  14    0x20  2      OPC=notl_r32             
  nop                         #  15    0x22  1      OPC=nop                    nop                         #  15    0x22  1      OPC=nop                  
  andl $0x80, %esi            #  16    0x23  6      OPC=andl_r32_imm32         nop                         #  16    0x23  1      OPC=nop                  
  leaq -0x1010101(%r8), %rdi  #  17    0x29  7      OPC=leaq_r64_m16           leaq -0x1010101(%r8), %rdi  #  17    0x24  7      OPC=leaq_r64_m64         
  nop                         #  18    0x30  1      OPC=nop                    nop                         #  18    0x2b  1      OPC=nop                  
  nop                         #  19    0x31  1      OPC=nop                    nop                         #  19    0x2c  1      OPC=nop                  
  nop                         #  20    0x32  1      OPC=nop                    andl %edi, %esi             #  20    0x2d  2      OPC=andl_r32_r32         
  nop                         #  21    0x33  1      OPC=nop                    andl $0x80, %esi            #  21    0x2f  6      OPC=andl_r32_imm32       
  nop                         #  22    0x34  1      OPC=nop                    jne .L_126860               #  22    0x35  6      OPC=jne_label_1          
  nop                         #  23    0x35  1      OPC=nop                    nop                         #  23    0x3b  1      OPC=nop                  
  nop                         #  24    0x36  1      OPC=nop                    nop                         #  24    0x3c  1      OPC=nop                  
  andl %edi, %esi             #  25    0x37  2      OPC=andl_r32_r32           nop                         #  25    0x3d  1      OPC=nop                  
  jne .L_126860               #  26    0x39  6      OPC=jne_label_1            nop                         #  26    0x3e  1      OPC=nop                  
.L_126820:                    #        0x3f  0      OPC=<label>                nop                         #  27    0x3f  1      OPC=nop                  
  orl %ebp, %ecx              #  27    0x3f  2      OPC=orl_r32_r32          .L_126820:                    #        0x40  0      OPC=<label>              
  movl %r8d, (%r15,%rcx,1)    #  28    0x41  4      OPC=movl_m32_r32           addl $0x4, %edx             #  28    0x40  3      OPC=addl_r32_imm8        
  addl $0x4, %ecx             #  29    0x45  3      OPC=addl_r32_imm8          movl %ecx, %ecx             #  29    0x43  2      OPC=movl_r32_r32_1       
  addl $0x4, %edx             #  30    0x48  3      OPC=addl_r32_imm8          movl %r8d, (%r15,%rcx,1)    #  30    0x45  4      OPC=movl_m32_r32         
  movl (%r15,%rdx,1), %r8d    #  31    0x4b  4      OPC=movl_r32_m32           addl $0x4, %ecx             #  31    0x49  3      OPC=addl_r32_imm8        
  leaq -0x1010101(%r8), %rsi  #  32    0x4f  7      OPC=leaq_r64_m32           xorl %esp, %edx             #  32    0x4c  2      OPC=xorl_r32_r32         
  movl %r8d, %r9d             #  33    0x56  3      OPC=movl_r32_r32_1         movl (%r15,%rdx,1), %r8d    #  33    0x4e  4      OPC=movl_r32_m32         
  notq %r9                    #  34    0x59  3      OPC=notq_r64               movl %r8d, %r9d             #  34    0x52  3      OPC=movl_r32_r32         
  andl %esi, %r9d             #  35    0x5c  3      OPC=andl_r32_r32_1         leal -0x1010101(%r8), %esi  #  35    0x55  7      OPC=leal_r32_m16         
  andl $0x80808080, %r9d      #  36    0x5f  7      OPC=andl_r32_imm32         notl %r9d                   #  36    0x5c  3      OPC=notl_r32             
  je .L_126820                #  37    0x66  6      OPC=je_label_1             nop                         #  37    0x5f  1      OPC=nop                  
  nop                         #  38    0x6c  1      OPC=nop                    andl $0x80808080, %r9d      #  38    0x60  7      OPC=andl_r32_imm32       
  nop                         #  39    0x6d  1      OPC=nop                    andl %esi, %r9d             #  39    0x67  3      OPC=andl_r32_r32         
  nop                         #  40    0x6e  1      OPC=nop                    je .L_126820                #  40    0x6a  6      OPC=je_label_1           
  nop                         #  41    0x6f  1      OPC=nop                    nop                         #  41    0x70  1      OPC=nop                  
  nop                         #  42    0x70  1      OPC=nop                    nop                         #  42    0x71  1      OPC=nop                  
  nop                         #  43    0x71  1      OPC=nop                    nop                         #  43    0x72  1      OPC=nop                  
  nop                         #  44    0x72  1      OPC=nop                    nop                         #  44    0x73  1      OPC=nop                  
  nop                         #  45    0x73  1      OPC=nop                    nop                         #  45    0x74  1      OPC=nop                  
  nop                         #  46    0x74  1      OPC=nop                    nop                         #  46    0x75  1      OPC=nop                  
  nop                         #  47    0x75  1      OPC=nop                    nop                         #  47    0x76  1      OPC=nop                  
  nop                         #  48    0x76  1      OPC=nop                    nop                         #  48    0x77  1      OPC=nop                  
  nop                         #  49    0x77  1      OPC=nop                    nop                         #  49    0x78  1      OPC=nop                  
  nop                         #  50    0x78  1      OPC=nop                    nop                         #  50    0x79  1      OPC=nop                  
  nop                         #  51    0x79  1      OPC=nop                    nop                         #  51    0x7a  1      OPC=nop                  
  nop                         #  52    0x7a  1      OPC=nop                    nop                         #  52    0x7b  1      OPC=nop                  
  nop                         #  53    0x7b  1      OPC=nop                    nop                         #  53    0x7c  1      OPC=nop                  
  nop                         #  54    0x7c  1      OPC=nop                    nop                         #  54    0x7d  1      OPC=nop                  
  nop                         #  55    0x7d  1      OPC=nop                    nop                         #  55    0x7e  1      OPC=nop                  
.L_126860:                    #        0x7e  0      OPC=<label>                nop                         #  56    0x7f  1      OPC=nop                  
  movl %edx, %edx             #  56    0x7e  2      OPC=movl_r32_r32_1       .L_126860:                    #        0x80  0      OPC=<label>              
  movsbw (%r15,%rdx,1), %si   #  57    0x80  6      OPC=movsbw_r16_m8          movl %edx, %edx             #  57    0x80  2      OPC=movl_r32_r32         
  subl %esp, %ecx             #  58    0x86  2      OPC=subl_r32_r32_1         movzbq (%r15,%rdx,1), %rsi  #  58    0x82  5      OPC=movzbq_r64_m8        
  movb %sil, (%r15,%rcx,1)    #  59    0x88  4      OPC=movb_m8_r8             andl %ecx, %ecx             #  59    0x87  2      OPC=andl_r32_r32         
  addl $0x1, %ecx             #  60    0x8c  3      OPC=addl_r32_imm8          movb %sil, (%r15,%rcx,1)    #  60    0x89  4      OPC=movb_m8_r8           
  addl $0x1, %edx             #  61    0x8f  3      OPC=addl_r32_imm8          addl $0x1, %ecx             #  61    0x8d  3      OPC=addl_r32_imm8        
  testb %sil, %sil            #  62    0x92  3      OPC=testb_r8_r8            addl $0x1, %edx             #  62    0x90  3      OPC=addl_r32_imm8        
  jne .L_126860               #  63    0x95  6      OPC=jne_label_1            testb %sil, %sil            #  63    0x93  3      OPC=testb_r8_r8          
  nop                         #  64    0x9b  1      OPC=nop                    jne .L_126860               #  64    0x96  6      OPC=jne_label_1          
  nop                         #  65    0x9c  1      OPC=nop                    nop                         #  65    0x9c  1      OPC=nop                  
  nop                         #  66    0x9d  1      OPC=nop                    nop                         #  66    0x9d  1      OPC=nop                  
  nop                         #  67    0x9e  1      OPC=nop                    nop                         #  67    0x9e  1      OPC=nop                  
  nop                         #  68    0x9f  1      OPC=nop                    nop                         #  68    0x9f  1      OPC=nop                  
  nop                         #  69    0xa0  1      OPC=nop                    nop                         #  69    0xa0  1      OPC=nop                  
  nop                         #  70    0xa1  1      OPC=nop                    nop                         #  70    0xa1  1      OPC=nop                  
  nop                         #  71    0xa2  1      OPC=nop                    nop                         #  71    0xa2  1      OPC=nop                  
  nop                         #  72    0xa3  1      OPC=nop                    nop                         #  72    0xa3  1      OPC=nop                  
  nop                         #  73    0xa4  1      OPC=nop                    nop                         #  73    0xa4  1      OPC=nop                  
  nop                         #  74    0xa5  1      OPC=nop                    nop                         #  74    0xa5  1      OPC=nop                  
  nop                         #  75    0xa6  1      OPC=nop                    nop                         #  75    0xa6  1      OPC=nop                  
  nop                         #  76    0xa7  1      OPC=nop                    popq %r11                   #  76    0xa7  2      OPC=popq_r64_1           
  nop                         #  77    0xa8  1      OPC=nop                    andl $0xe0, %r11d           #  77    0xa9  4      OPC=andl_r32_imm8        
  nop                         #  78    0xa9  1      OPC=nop                    addq %r15, %r11             #  78    0xad  3      OPC=addq_r64_r64         
  nop                         #  79    0xaa  1      OPC=nop                    jmpq %r11                   #  79    0xb0  3      OPC=jmpq_r64             
  nop                         #  80    0xab  1      OPC=nop                                                                                               
  nop                         #  81    0xac  1      OPC=nop                  .size strcpy, .-strcpy                                                       
  nop                         #  82    0xad  1      OPC=nop                                                                                               
  nop                         #  83    0xae  1      OPC=nop                                                                                               
  nop                         #  84    0xaf  1      OPC=nop                                                                                               
  nop                         #  85    0xb0  1      OPC=nop                                                                                               
  popq %r11                   #  86    0xb1  2      OPC=popq_r64_1                                                                                        
  andl $0xe0, %r11d           #  87    0xb3  4      OPC=andl_r32_imm8                                                                                     
  addq %r15, %r11             #  88    0xb7  3      OPC=addq_r64_r64                                                                                      
  jmpq %r11                   #  89    0xba  3      OPC=jmpq_r64                                                                                          
                                                                                                                                                          
.size strcpy, .-strcpy                                                                                                                                    
                                                                                                                                                          

********************************************************************************

Progress Update: 

Lowest Cost Discovered (195)                                                 Lowest Known Correct Cost (214)                                              
                                                                                                                                                          
  .text                                                                        .text                                                                      
  .globl strcpy                                                                .globl strcpy                                                              
  .type strcpy, @function                                                      .type strcpy, @function                                                    
                                                                                                                                                          
#! file-offset 0                                                             #! file-offset 0                                                             
#! rip-offset  0                                                             #! rip-offset  0                                                             
#! capacity    0 bytes                                                       #! capacity    0 bytes                                                       
                                                                                                                                                          
# Text                        #  Line  RIP   Bytes  Opcode                   # Text                        #  Line  RIP   Bytes  Opcode                   
.strcpy:                      #        0     0      OPC=<label>              .strcpy:                      #        0     0      OPC=<label>              
  movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32_1         movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32         
  movw %si, %di               #  2     0x2   3      OPC=movw_r16_r16           movq %rsi, %rdx             #  2     0x2   3      OPC=movq_r64_r64         
  addl %eax, %edi             #  3     0x5   2      OPC=addl_r32_r32           nop                         #  3     0x5   1      OPC=nop                  
  nop                         #  4     0x7   1      OPC=nop                    movq %rax, %rcx             #  4     0x6   3      OPC=movq_r64_r64         
  nop                         #  5     0x8   1      OPC=nop                    nop                         #  5     0x9   1      OPC=nop                  
  movq %rsi, %rdx             #  6     0x9   3      OPC=movq_r64_r64_1         nop                         #  6     0xa   1      OPC=nop                  
  movl %eax, %ecx             #  7     0xc   2      OPC=movl_r32_r32_1         movb %sil, %dil             #  7     0xb   3      OPC=movb_r8_r8           
  nop                         #  8     0xe   1      OPC=nop                    addl %eax, %edi             #  8     0xe   2      OPC=addl_r32_r32         
  nop                         #  9     0xf   1      OPC=nop                    andl $0x3, %edi             #  9     0x10  3      OPC=andl_r32_imm8        
  salb $0x6, %dil             #  10    0x10  4      OPC=salb_r8_imm8           jne .L_126860               #  10    0x13  6      OPC=jne_label_1          
  jne .L_126860               #  11    0x14  6      OPC=jne_label_1            movl %edx, %esi             #  11    0x19  2      OPC=movl_r32_r32         
  orl %edx, %esi              #  12    0x1a  2      OPC=orl_r32_r32_1          movl (%r15,%rsi,1), %r8d    #  12    0x1b  4      OPC=movl_r32_m32         
  movl (%r15,%rsi,1), %r8d    #  13    0x1c  4      OPC=movl_r32_m32           nop                         #  13    0x1f  1      OPC=nop                  
  notl %esi                   #  14    0x20  2      OPC=notl_r32               notl %esi                   #  14    0x20  2      OPC=notl_r32             
  nop                         #  15    0x22  1      OPC=nop                    nop                         #  15    0x22  1      OPC=nop                  
  andl $0x80, %esi            #  16    0x23  6      OPC=andl_r32_imm32         nop                         #  16    0x23  1      OPC=nop                  
  leaq -0x1010101(%r8), %rdi  #  17    0x29  7      OPC=leaq_r64_m16           leaq -0x1010101(%r8), %rdi  #  17    0x24  7      OPC=leaq_r64_m64         
  nop                         #  18    0x30  1      OPC=nop                    nop                         #  18    0x2b  1      OPC=nop                  
  nop                         #  19    0x31  1      OPC=nop                    nop                         #  19    0x2c  1      OPC=nop                  
  nop                         #  20    0x32  1      OPC=nop                    andl %edi, %esi             #  20    0x2d  2      OPC=andl_r32_r32         
  nop                         #  21    0x33  1      OPC=nop                    andl $0x80, %esi            #  21    0x2f  6      OPC=andl_r32_imm32       
  nop                         #  22    0x34  1      OPC=nop                    jne .L_126860               #  22    0x35  6      OPC=jne_label_1          
  nop                         #  23    0x35  1      OPC=nop                    nop                         #  23    0x3b  1      OPC=nop                  
  nop                         #  24    0x36  1      OPC=nop                    nop                         #  24    0x3c  1      OPC=nop                  
  andl %edi, %esi             #  25    0x37  2      OPC=andl_r32_r32           nop                         #  25    0x3d  1      OPC=nop                  
  jne .L_126860               #  26    0x39  6      OPC=jne_label_1            nop                         #  26    0x3e  1      OPC=nop                  
.L_126820:                    #        0x3f  0      OPC=<label>                nop                         #  27    0x3f  1      OPC=nop                  
  orl %ebp, %ecx              #  27    0x3f  2      OPC=orl_r32_r32          .L_126820:                    #        0x40  0      OPC=<label>              
  movl %r8d, (%r15,%rcx,1)    #  28    0x41  4      OPC=movl_m32_r32           addl $0x4, %edx             #  28    0x40  3      OPC=addl_r32_imm8        
  addl $0x4, %ecx             #  29    0x45  3      OPC=addl_r32_imm8          movl %ecx, %ecx             #  29    0x43  2      OPC=movl_r32_r32_1       
  addl $0x4, %edx             #  30    0x48  3      OPC=addl_r32_imm8          movl %r8d, (%r15,%rcx,1)    #  30    0x45  4      OPC=movl_m32_r32         
  movl (%r15,%rdx,1), %r8d    #  31    0x4b  4      OPC=movl_r32_m32           addl $0x4, %ecx             #  31    0x49  3      OPC=addl_r32_imm8        
  leaq -0x1010101(%r8), %rsi  #  32    0x4f  7      OPC=leaq_r64_m32           xorl %esp, %edx             #  32    0x4c  2      OPC=xorl_r32_r32         
  movl %r8d, %r9d             #  33    0x56  3      OPC=movl_r32_r32_1         movl (%r15,%rdx,1), %r8d    #  33    0x4e  4      OPC=movl_r32_m32         
  notq %r9                    #  34    0x59  3      OPC=notq_r64               movl %r8d, %r9d             #  34    0x52  3      OPC=movl_r32_r32         
  andl %esi, %r9d             #  35    0x5c  3      OPC=andl_r32_r32_1         leal -0x1010101(%r8), %esi  #  35    0x55  7      OPC=leal_r32_m16         
  andl $0x80808080, %r9d      #  36    0x5f  7      OPC=andl_r32_imm32         notl %r9d                   #  36    0x5c  3      OPC=notl_r32             
  je .L_126820                #  37    0x66  6      OPC=je_label_1             nop                         #  37    0x5f  1      OPC=nop                  
  nop                         #  38    0x6c  1      OPC=nop                    andl $0x80808080, %r9d      #  38    0x60  7      OPC=andl_r32_imm32       
  nop                         #  39    0x6d  1      OPC=nop                    andl %esi, %r9d             #  39    0x67  3      OPC=andl_r32_r32         
  nop                         #  40    0x6e  1      OPC=nop                    je .L_126820                #  40    0x6a  6      OPC=je_label_1           
  nop                         #  41    0x6f  1      OPC=nop                    nop                         #  41    0x70  1      OPC=nop                  
  nop                         #  42    0x70  1      OPC=nop                    nop                         #  42    0x71  1      OPC=nop                  
  nop                         #  43    0x71  1      OPC=nop                    nop                         #  43    0x72  1      OPC=nop                  
  nop                         #  44    0x72  1      OPC=nop                    nop                         #  44    0x73  1      OPC=nop                  
  nop                         #  45    0x73  1      OPC=nop                    nop                         #  45    0x74  1      OPC=nop                  
  nop                         #  46    0x74  1      OPC=nop                    nop                         #  46    0x75  1      OPC=nop                  
  nop                         #  47    0x75  1      OPC=nop                    nop                         #  47    0x76  1      OPC=nop                  
  nop                         #  48    0x76  1      OPC=nop                    nop                         #  48    0x77  1      OPC=nop                  
  nop                         #  49    0x77  1      OPC=nop                    nop                         #  49    0x78  1      OPC=nop                  
  nop                         #  50    0x78  1      OPC=nop                    nop                         #  50    0x79  1      OPC=nop                  
  nop                         #  51    0x79  1      OPC=nop                    nop                         #  51    0x7a  1      OPC=nop                  
  nop                         #  52    0x7a  1      OPC=nop                    nop                         #  52    0x7b  1      OPC=nop                  
  nop                         #  53    0x7b  1      OPC=nop                    nop                         #  53    0x7c  1      OPC=nop                  
  nop                         #  54    0x7c  1      OPC=nop                    nop                         #  54    0x7d  1      OPC=nop                  
  nop                         #  55    0x7d  1      OPC=nop                    nop                         #  55    0x7e  1      OPC=nop                  
  nop                         #  56    0x7e  1      OPC=nop                    nop                         #  56    0x7f  1      OPC=nop                  
.L_126860:                    #        0x7f  0      OPC=<label>              .L_126860:                    #        0x80  0      OPC=<label>              
  movl %edx, %edx             #  57    0x7f  2      OPC=movl_r32_r32_1         movl %edx, %edx             #  57    0x80  2      OPC=movl_r32_r32         
  movsbw (%r15,%rdx,1), %si   #  58    0x81  6      OPC=movsbw_r16_m8          movzbq (%r15,%rdx,1), %rsi  #  58    0x82  5      OPC=movzbq_r64_m8        
  subl %esp, %ecx             #  59    0x87  2      OPC=subl_r32_r32_1         andl %ecx, %ecx             #  59    0x87  2      OPC=andl_r32_r32         
  movb %sil, (%r15,%rcx,1)    #  60    0x89  4      OPC=movb_m8_r8             movb %sil, (%r15,%rcx,1)    #  60    0x89  4      OPC=movb_m8_r8           
  addl $0x1, %ecx             #  61    0x8d  3      OPC=addl_r32_imm8          addl $0x1, %ecx             #  61    0x8d  3      OPC=addl_r32_imm8        
  addl $0x1, %edx             #  62    0x90  3      OPC=addl_r32_imm8          addl $0x1, %edx             #  62    0x90  3      OPC=addl_r32_imm8        
  testb %sil, %sil            #  63    0x93  3      OPC=testb_r8_r8            testb %sil, %sil            #  63    0x93  3      OPC=testb_r8_r8          
  jne .L_126860               #  64    0x96  6      OPC=jne_label_1            jne .L_126860               #  64    0x96  6      OPC=jne_label_1          
  nop                         #  65    0x9c  1      OPC=nop                    nop                         #  65    0x9c  1      OPC=nop                  
  nop                         #  66    0x9d  1      OPC=nop                    nop                         #  66    0x9d  1      OPC=nop                  
  nop                         #  67    0x9e  1      OPC=nop                    nop                         #  67    0x9e  1      OPC=nop                  
  nop                         #  68    0x9f  1      OPC=nop                    nop                         #  68    0x9f  1      OPC=nop                  
  nop                         #  69    0xa0  1      OPC=nop                    nop                         #  69    0xa0  1      OPC=nop                  
  nop                         #  70    0xa1  1      OPC=nop                    nop                         #  70    0xa1  1      OPC=nop                  
  nop                         #  71    0xa2  1      OPC=nop                    nop                         #  71    0xa2  1      OPC=nop                  
  nop                         #  72    0xa3  1      OPC=nop                    nop                         #  72    0xa3  1      OPC=nop                  
  nop                         #  73    0xa4  1      OPC=nop                    nop                         #  73    0xa4  1      OPC=nop                  
  nop                         #  74    0xa5  1      OPC=nop                    nop                         #  74    0xa5  1      OPC=nop                  
  nop                         #  75    0xa6  1      OPC=nop                    nop                         #  75    0xa6  1      OPC=nop                  
  nop                         #  76    0xa7  1      OPC=nop                    popq %r11                   #  76    0xa7  2      OPC=popq_r64_1           
  nop                         #  77    0xa8  1      OPC=nop                    andl $0xe0, %r11d           #  77    0xa9  4      OPC=andl_r32_imm8        
  nop                         #  78    0xa9  1      OPC=nop                    addq %r15, %r11             #  78    0xad  3      OPC=addq_r64_r64         
  nop                         #  79    0xaa  1      OPC=nop                    jmpq %r11                   #  79    0xb0  3      OPC=jmpq_r64             
  nop                         #  80    0xab  1      OPC=nop                                                                                               
  nop                         #  81    0xac  1      OPC=nop                  .size strcpy, .-strcpy                                                       
  nop                         #  82    0xad  1      OPC=nop                                                                                               
  nop                         #  83    0xae  1      OPC=nop                                                                                               
  nop                         #  84    0xaf  1      OPC=nop                                                                                               
  nop                         #  85    0xb0  1      OPC=nop                                                                                               
  popq %r11                   #  86    0xb1  2      OPC=popq_r64_1                                                                                        
  andl $0xe0, %r11d           #  87    0xb3  4      OPC=andl_r32_imm8                                                                                     
  addq %r15, %r11             #  88    0xb7  3      OPC=addq_r64_r64                                                                                      
  jmpq %r11                   #  89    0xba  3      OPC=jmpq_r64                                                                                          
                                                                                                                                                          
.size strcpy, .-strcpy                                                                                                                                    
                                                                                                                                                          

********************************************************************************

Progress Update: 

Lowest Cost Discovered (194)                                                 Lowest Known Correct Cost (194)                                              
                                                                                                                                                          
  .text                                                                        .text                                                                      
  .globl strcpy                                                                .globl strcpy                                                              
  .type strcpy, @function                                                      .type strcpy, @function                                                    
                                                                                                                                                          
#! file-offset 0                                                             #! file-offset 0                                                             
#! rip-offset  0                                                             #! rip-offset  0                                                             
#! capacity    0 bytes                                                       #! capacity    0 bytes                                                       
                                                                                                                                                          
# Text                        #  Line  RIP   Bytes  Opcode                   # Text                        #  Line  RIP   Bytes  Opcode                   
.strcpy:                      #        0     0      OPC=<label>              .strcpy:                      #        0     0      OPC=<label>              
  movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32_1         movl %edi, %eax             #  1     0     2      OPC=movl_r32_r32_1       
  movw %si, %di               #  2     0x2   3      OPC=movw_r16_r16           movw %si, %di               #  2     0x2   3      OPC=movw_r16_r16         
  addl %eax, %edi             #  3     0x5   2      OPC=addl_r32_r32           addl %eax, %edi             #  3     0x5   2      OPC=addl_r32_r32         
  nop                         #  4     0x7   1      OPC=nop                    nop                         #  4     0x7   1      OPC=nop                  
  movq %rsi, %rdx             #  5     0x8   3      OPC=movq_r64_r64_1         movq %rsi, %rdx             #  5     0x8   3      OPC=movq_r64_r64_1       
  shlb $0x6, %dil             #  6     0xb   4      OPC=shlb_r8_imm8           shlb $0x6, %dil             #  6     0xb   4      OPC=shlb_r8_imm8         
  nop                         #  7     0xf   1      OPC=nop                    nop                         #  7     0xf   1      OPC=nop                  
  nop                         #  8     0x10  1      OPC=nop                    nop                         #  8     0x10  1      OPC=nop                  
  nop                         #  9     0x11  1      OPC=nop                    nop                         #  9     0x11  1      OPC=nop                  
  movl %eax, %ecx             #  10    0x12  2      OPC=movl_r32_r32_1         movl %eax, %ecx             #  10    0x12  2      OPC=movl_r32_r32_1       
  jne .L_126860               #  11    0x14  6      OPC=jne_label_1            jne .L_126860               #  11    0x14  6      OPC=jne_label_1          
  orl %edx, %esi              #  12    0x1a  2      OPC=orl_r32_r32_1          orl %edx, %esi              #  12    0x1a  2      OPC=orl_r32_r32_1        
  movl (%r15,%rsi,1), %r8d    #  13    0x1c  4      OPC=movl_r32_m32           movl (%r15,%rsi,1), %r8d    #  13    0x1c  4      OPC=movl_r32_m32         
  notl %esi                   #  14    0x20  2      OPC=notl_r32               notl %esi                   #  14    0x20  2      OPC=notl_r32             
  nop                         #  15    0x22  1      OPC=nop                    nop                         #  15    0x22  1      OPC=nop                  
  nop                         #  16    0x23  1      OPC=nop                    nop                         #  16    0x23  1      OPC=nop                  
  andl $0x80, %esi            #  17    0x24  6      OPC=andl_r32_imm32         andl $0x80, %esi            #  17    0x24  6      OPC=andl_r32_imm32       
  nop                         #  18    0x2a  1      OPC=nop                    nop                         #  18    0x2a  1      OPC=nop                  
  nop                         #  19    0x2b  1      OPC=nop                    nop                         #  19    0x2b  1      OPC=nop                  
  leaq -0x1010101(%r8), %rdi  #  20    0x2c  7      OPC=leaq_r64_m16           leaq -0x1010101(%r8), %rdi  #  20    0x2c  7      OPC=leaq_r64_m16         
  nop                         #  21    0x33  1      OPC=nop                    nop                         #  21    0x33  1      OPC=nop                  
  nop                         #  22    0x34  1      OPC=nop                    nop                         #  22    0x34  1      OPC=nop                  
  nop                         #  23    0x35  1      OPC=nop                    nop                         #  23    0x35  1      OPC=nop                  
  andl %edi, %esi             #  24    0x36  2      OPC=andl_r32_r32           andl %edi, %esi             #  24    0x36  2      OPC=andl_r32_r32         
  nop                         #  25    0x38  1      OPC=nop                    nop                         #  25    0x38  1      OPC=nop                  
  nop                         #  26    0x39  1      OPC=nop                    nop                         #  26    0x39  1      OPC=nop                  
  jne .L_126860               #  27    0x3a  6      OPC=jne_label_1            jne .L_126860               #  27    0x3a  6      OPC=jne_label_1          
.L_126820:                    #        0x40  0      OPC=<label>              .L_126820:                    #        0x40  0      OPC=<label>              
  orl %ebp, %ecx              #  28    0x40  2      OPC=orl_r32_r32            orl %ebp, %ecx              #  28    0x40  2      OPC=orl_r32_r32          
  movl %r8d, (%r15,%rcx,1)    #  29    0x42  4      OPC=movl_m32_r32           movl %r8d, (%r15,%rcx,1)    #  29    0x42  4      OPC=movl_m32_r32         
  addl $0x4, %ecx             #  30    0x46  3      OPC=addl_r32_imm8          addl $0x4, %ecx             #  30    0x46  3      OPC=addl_r32_imm8        
  addl $0x4, %edx             #  31    0x49  3      OPC=addl_r32_imm8          addl $0x4, %edx             #  31    0x49  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %r8d    #  32    0x4c  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %r8d    #  32    0x4c  4      OPC=movl_r32_m32         
  leaq -0x1010101(%r8), %rsi  #  33    0x50  7      OPC=leaq_r64_m32           leaq -0x1010101(%r8), %rsi  #  33    0x50  7      OPC=leaq_r64_m32         
  movl %r8d, %r9d             #  34    0x57  3      OPC=movl_r32_r32_1         movl %r8d, %r9d             #  34    0x57  3      OPC=movl_r32_r32_1       
  notq %r9                    #  35    0x5a  3      OPC=notq_r64               notq %r9                    #  35    0x5a  3      OPC=notq_r64             
  andl %esi, %r9d             #  36    0x5d  3      OPC=andl_r32_r32_1         andl %esi, %r9d             #  36    0x5d  3      OPC=andl_r32_r32_1       
  andl $0x80808080, %r9d      #  37    0x60  7      OPC=andl_r32_imm32         andl $0x80808080, %r9d      #  37    0x60  7      OPC=andl_r32_imm32       
  je .L_126820                #  38    0x67  6      OPC=je_label_1             je .L_126820                #  38    0x67  6      OPC=je_label_1           
  nop                         #  39    0x6d  1      OPC=nop                    nop                         #  39    0x6d  1      OPC=nop                  
  nop                         #  40    0x6e  1      OPC=nop                    nop                         #  40    0x6e  1      OPC=nop                  
  nop                         #  41    0x6f  1      OPC=nop                    nop                         #  41    0x6f  1      OPC=nop                  
  nop                         #  42    0x70  1      OPC=nop                    nop                         #  42    0x70  1      OPC=nop                  
  nop                         #  43    0x71  1      OPC=nop                    nop                         #  43    0x71  1      OPC=nop                  
  nop                         #  44    0x72  1      OPC=nop                    nop                         #  44    0x72  1      OPC=nop                  
  nop                         #  45    0x73  1      OPC=nop                    nop                         #  45    0x73  1      OPC=nop                  
  nop                         #  46    0x74  1      OPC=nop                    nop                         #  46    0x74  1      OPC=nop                  
  nop                         #  47    0x75  1      OPC=nop                    nop                         #  47    0x75  1      OPC=nop                  
  nop                         #  48    0x76  1      OPC=nop                    nop                         #  48    0x76  1      OPC=nop                  
  nop                         #  49    0x77  1      OPC=nop                    nop                         #  49    0x77  1      OPC=nop                  
  nop                         #  50    0x78  1      OPC=nop                    nop                         #  50    0x78  1      OPC=nop                  
  nop                         #  51    0x79  1      OPC=nop                    nop                         #  51    0x79  1      OPC=nop                  
  nop                         #  52    0x7a  1      OPC=nop                    nop                         #  52    0x7a  1      OPC=nop                  
  nop                         #  53    0x7b  1      OPC=nop                    nop                         #  53    0x7b  1      OPC=nop                  
  nop                         #  54    0x7c  1      OPC=nop                    nop                         #  54    0x7c  1      OPC=nop                  
  nop                         #  55    0x7d  1      OPC=nop                    nop                         #  55    0x7d  1      OPC=nop                  
  nop                         #  56    0x7e  1      OPC=nop                    nop                         #  56    0x7e  1      OPC=nop                  
  nop                         #  57    0x7f  1      OPC=nop                    nop                         #  57    0x7f  1      OPC=nop                  
.L_126860:                    #        0x80  0      OPC=<label>              .L_126860:                    #        0x80  0      OPC=<label>              
  movl %edx, %edx             #  58    0x80  2      OPC=movl_r32_r32_1         movl %edx, %edx             #  58    0x80  2      OPC=movl_r32_r32_1       
  movsbq (%r15,%rdx,1), %rsi  #  59    0x82  5      OPC=movsbq_r64_m8          movsbq (%r15,%rdx,1), %rsi  #  59    0x82  5      OPC=movsbq_r64_m8        
  subl %esp, %ecx             #  60    0x87  2      OPC=subl_r32_r32_1         subl %esp, %ecx             #  60    0x87  2      OPC=subl_r32_r32_1       
  movb %sil, (%r15,%rcx,1)    #  61    0x89  4      OPC=movb_m8_r8             movb %sil, (%r15,%rcx,1)    #  61    0x89  4      OPC=movb_m8_r8           
  addl $0x1, %edx             #  62    0x8d  3      OPC=addl_r32_imm8          addl $0x1, %edx             #  62    0x8d  3      OPC=addl_r32_imm8        
  addl $0x1, %ecx             #  63    0x90  3      OPC=addl_r32_imm8          addl $0x1, %ecx             #  63    0x90  3      OPC=addl_r32_imm8        
  testb %sil, %sil            #  64    0x93  3      OPC=testb_r8_r8            testb %sil, %sil            #  64    0x93  3      OPC=testb_r8_r8          
  jne .L_126860               #  65    0x96  6      OPC=jne_label_1            jne .L_126860               #  65    0x96  6      OPC=jne_label_1          
  nop                         #  66    0x9c  1      OPC=nop                    nop                         #  66    0x9c  1      OPC=nop                  
  nop                         #  67    0x9d  1      OPC=nop                    nop                         #  67    0x9d  1      OPC=nop                  
  nop                         #  68    0x9e  1      OPC=nop                    nop                         #  68    0x9e  1      OPC=nop                  
  nop                         #  69    0x9f  1      OPC=nop                    nop                         #  69    0x9f  1      OPC=nop                  
  nop                         #  70    0xa0  1      OPC=nop                    nop                         #  70    0xa0  1      OPC=nop                  
  nop                         #  71    0xa1  1      OPC=nop                    nop                         #  71    0xa1  1      OPC=nop                  
  nop                         #  72    0xa2  1      OPC=nop                    nop                         #  72    0xa2  1      OPC=nop                  
  nop                         #  73    0xa3  1      OPC=nop                    nop                         #  73    0xa3  1      OPC=nop                  
  nop                         #  74    0xa4  1      OPC=nop                    nop                         #  74    0xa4  1      OPC=nop                  
  popq %r11                   #  75    0xa5  2      OPC=popq_r64_1             popq %r11                   #  75    0xa5  2      OPC=popq_r64_1           
  andl $0xe0, %r11d           #  76    0xa7  4      OPC=andl_r32_imm8          andl $0xe0, %r11d           #  76    0xa7  4      OPC=andl_r32_imm8        
  addq %r15, %r11             #  77    0xab  3      OPC=addq_r64_r64           addq %r15, %r11             #  77    0xab  3      OPC=addq_r64_r64         
  jmpq %r11                   #  78    0xae  3      OPC=jmpq_r64               jmpq %r11                   #  78    0xae  3      OPC=jmpq_r64             
                                                                                                                                                          
.size strcpy, .-strcpy                                                       .size strcpy, .-strcpy                                                       
                                                                                                                                                          

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  107.853s
Iterations/s:                  927.192

Starting cost:                 221
Lowest cost:                   194
Lowest correct cost:           194

Move Type       Proposed     Succeeded     Accepted     
                                                        
ReplaceNop      8.23%        7.291%        5.42%        
Rotate          8.395%       6.623%        2.648%       
Global Swap     8.238%       6.006%        3.558%       
Global Copy     8.383%       7.214%        7.214%       
Opcode          8.447%       7.449%        6.133%       
Instruction     8.431%       3.789%        0.127%       
Add Nops        8.149%       8.149%        4.197%       
Operand         8.438%       5.504%        0.732%       
Local Swap      8.385%       4.624%        3.041%       
OpcodeWidth     8.301%       6.692%        5.611%       
Delete          8.477%       7.458%        4.336%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.126%       4.741%        0.002%       
                                                        
Total           100%         75.54%        43.019%      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (193)                                                          Lowest Known Correct Cost (193)                                                       
                                                                                                                                                                            
  .text                                                                                 .text                                                                               
  .globl strcpy                                                                         .globl strcpy                                                                       
  .type strcpy, @function                                                               .type strcpy, @function                                                             
                                                                                                                                                                            
#! file-offset 0                                                                      #! file-offset 0                                                                      
#! rip-offset  0                                                                      #! rip-offset  0                                                                      
#! capacity    0 bytes                                                                #! capacity    0 bytes                                                                
                                                                                                                                                                            
# Text                                 #  Line  RIP   Bytes  Opcode                   # Text                                 #  Line  RIP   Bytes  Opcode                   
.strcpy:                               #        0     0      OPC=<label>              .strcpy:                               #        0     0      OPC=<label>              
  movl %edi, %ecx                      #  1     0     2      OPC=movl_r32_r32_1         movl %edi, %ecx                      #  1     0     2      OPC=movl_r32_r32_1       
  movw %si, %di                        #  2     0x2   3      OPC=movw_r16_r16           movw %si, %di                        #  2     0x2   3      OPC=movw_r16_r16         
  nop                                  #  3     0x5   1      OPC=nop                    nop                                  #  3     0x5   1      OPC=nop                  
  nop                                  #  4     0x6   1      OPC=nop                    nop                                  #  4     0x6   1      OPC=nop                  
  nop                                  #  5     0x7   1      OPC=nop                    nop                                  #  5     0x7   1      OPC=nop                  
  movl %ecx, %eax                      #  6     0x8   2      OPC=movl_r32_r32_1         movl %ecx, %eax                      #  6     0x8   2      OPC=movl_r32_r32_1       
  nop                                  #  7     0xa   1      OPC=nop                    nop                                  #  7     0xa   1      OPC=nop                  
  nop                                  #  8     0xb   1      OPC=nop                    nop                                  #  8     0xb   1      OPC=nop                  
  nop                                  #  9     0xc   1      OPC=nop                    nop                                  #  9     0xc   1      OPC=nop                  
  nop                                  #  10    0xd   1      OPC=nop                    nop                                  #  10    0xd   1      OPC=nop                  
  addb %al, %dil                       #  11    0xe   3      OPC=addb_r8_r8_1           addb %al, %dil                       #  11    0xe   3      OPC=addb_r8_r8_1         
  andl $0x6, %edi                      #  12    0x11  3      OPC=andl_r32_imm8          andl $0x6, %edi                      #  12    0x11  3      OPC=andl_r32_imm8        
  leaq -0x7f7f7f80(%rcx,%rcx,8), %rdi  #  13    0x14  8      OPC=leaq_r64_m32           leaq -0x7f7f7f80(%rcx,%rcx,8), %rdi  #  13    0x14  8      OPC=leaq_r64_m32         
  movl %esi, %edx                      #  14    0x1c  2      OPC=movl_r32_r32           movl %esi, %edx                      #  14    0x1c  2      OPC=movl_r32_r32         
  nop                                  #  15    0x1e  1      OPC=nop                    nop                                  #  15    0x1e  1      OPC=nop                  
  nop                                  #  16    0x1f  1      OPC=nop                    nop                                  #  16    0x1f  1      OPC=nop                  
  nop                                  #  17    0x20  1      OPC=nop                    nop                                  #  17    0x20  1      OPC=nop                  
  nop                                  #  18    0x21  1      OPC=nop                    nop                                  #  18    0x21  1      OPC=nop                  
  jne .L_126860                        #  19    0x22  6      OPC=jne_label_1            jne .L_126860                        #  19    0x22  6      OPC=jne_label_1          
  nop                                  #  20    0x28  1      OPC=nop                    nop                                  #  20    0x28  1      OPC=nop                  
  nop                                  #  21    0x29  1      OPC=nop                    nop                                  #  21    0x29  1      OPC=nop                  
  nop                                  #  22    0x2a  1      OPC=nop                    nop                                  #  22    0x2a  1      OPC=nop                  
  nop                                  #  23    0x2b  1      OPC=nop                    nop                                  #  23    0x2b  1      OPC=nop                  
  nop                                  #  24    0x2c  1      OPC=nop                    nop                                  #  24    0x2c  1      OPC=nop                  
  nop                                  #  25    0x2d  1      OPC=nop                    nop                                  #  25    0x2d  1      OPC=nop                  
  nop                                  #  26    0x2e  1      OPC=nop                    nop                                  #  26    0x2e  1      OPC=nop                  
  nop                                  #  27    0x2f  1      OPC=nop                    nop                                  #  27    0x2f  1      OPC=nop                  
  subl %esp, %esi                      #  28    0x30  2      OPC=subl_r32_r32           subl %esp, %esi                      #  28    0x30  2      OPC=subl_r32_r32         
  movl (%r15,%rsi,1), %r8d             #  29    0x32  4      OPC=movl_r32_m32           movl (%r15,%rsi,1), %r8d             #  29    0x32  4      OPC=movl_r32_m32         
  andb $0x80, %dil                     #  30    0x36  4      OPC=andb_r8_imm8           andb $0x80, %dil                     #  30    0x36  4      OPC=andb_r8_imm8         
  jne .L_126860                        #  31    0x3a  6      OPC=jne_label_1            jne .L_126860                        #  31    0x3a  6      OPC=jne_label_1          
.L_126820:                             #        0x40  0      OPC=<label>              .L_126820:                             #        0x40  0      OPC=<label>              
  movl %ecx, %ecx                      #  32    0x40  2      OPC=movl_r32_r32           movl %ecx, %ecx                      #  32    0x40  2      OPC=movl_r32_r32         
  movl %r8d, (%r15,%rcx,1)             #  33    0x42  4      OPC=movl_m32_r32           movl %r8d, (%r15,%rcx,1)             #  33    0x42  4      OPC=movl_m32_r32         
  addl $0x4, %edx                      #  34    0x46  3      OPC=addl_r32_imm8          addl $0x4, %edx                      #  34    0x46  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %r8d             #  35    0x49  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %r8d             #  35    0x49  4      OPC=movl_r32_m32         
  movl %r8d, %r9d                      #  36    0x4d  3      OPC=movl_r32_r32_1         movl %r8d, %r9d                      #  36    0x4d  3      OPC=movl_r32_r32_1       
  notq %r9                             #  37    0x50  3      OPC=notq_r64               notq %r9                             #  37    0x50  3      OPC=notq_r64             
  leaq -0x1010101(%r8), %rsi           #  38    0x53  7      OPC=leaq_r64_m32           leaq -0x1010101(%r8), %rsi           #  38    0x53  7      OPC=leaq_r64_m32         
  addl $0x4, %ecx                      #  39    0x5a  6      OPC=addl_r32_imm32         addl $0x4, %ecx                      #  39    0x5a  6      OPC=addl_r32_imm32       
  andq $0x80808080, %r9                #  40    0x60  7      OPC=andq_r64_imm32         andq $0x80808080, %r9                #  40    0x60  7      OPC=andq_r64_imm32       
  andq %rsi, %r9                       #  41    0x67  3      OPC=andq_r64_r64_1         andq %rsi, %r9                       #  41    0x67  3      OPC=andq_r64_r64_1       
  je .L_126820                         #  42    0x6a  6      OPC=je_label_1             je .L_126820                         #  42    0x6a  6      OPC=je_label_1           
  nop                                  #  43    0x70  1      OPC=nop                    nop                                  #  43    0x70  1      OPC=nop                  
  nop                                  #  44    0x71  1      OPC=nop                    nop                                  #  44    0x71  1      OPC=nop                  
  nop                                  #  45    0x72  1      OPC=nop                    nop                                  #  45    0x72  1      OPC=nop                  
  nop                                  #  46    0x73  1      OPC=nop                    nop                                  #  46    0x73  1      OPC=nop                  
  nop                                  #  47    0x74  1      OPC=nop                    nop                                  #  47    0x74  1      OPC=nop                  
  nop                                  #  48    0x75  1      OPC=nop                    nop                                  #  48    0x75  1      OPC=nop                  
  nop                                  #  49    0x76  1      OPC=nop                    nop                                  #  49    0x76  1      OPC=nop                  
  nop                                  #  50    0x77  1      OPC=nop                    nop                                  #  50    0x77  1      OPC=nop                  
  nop                                  #  51    0x78  1      OPC=nop                    nop                                  #  51    0x78  1      OPC=nop                  
  nop                                  #  52    0x79  1      OPC=nop                    nop                                  #  52    0x79  1      OPC=nop                  
  nop                                  #  53    0x7a  1      OPC=nop                    nop                                  #  53    0x7a  1      OPC=nop                  
  nop                                  #  54    0x7b  1      OPC=nop                    nop                                  #  54    0x7b  1      OPC=nop                  
  nop                                  #  55    0x7c  1      OPC=nop                    nop                                  #  55    0x7c  1      OPC=nop                  
  nop                                  #  56    0x7d  1      OPC=nop                    nop                                  #  56    0x7d  1      OPC=nop                  
  nop                                  #  57    0x7e  1      OPC=nop                    nop                                  #  57    0x7e  1      OPC=nop                  
  nop                                  #  58    0x7f  1      OPC=nop                    nop                                  #  58    0x7f  1      OPC=nop                  
.L_126860:                             #        0x80  0      OPC=<label>              .L_126860:                             #        0x80  0      OPC=<label>              
  orl %ebp, %edx                       #  59    0x80  2      OPC=orl_r32_r32_1          orl %ebp, %edx                       #  59    0x80  2      OPC=orl_r32_r32_1        
  movzbq (%r15,%rdx,1), %rsi           #  60    0x82  5      OPC=movzbq_r64_m8          movzbq (%r15,%rdx,1), %rsi           #  60    0x82  5      OPC=movzbq_r64_m8        
  xorl %esp, %ecx                      #  61    0x87  2      OPC=xorl_r32_r32           xorl %esp, %ecx                      #  61    0x87  2      OPC=xorl_r32_r32         
  movb %sil, (%r15,%rcx,1)             #  62    0x89  4      OPC=movb_m8_r8             movb %sil, (%r15,%rcx,1)             #  62    0x89  4      OPC=movb_m8_r8           
  addl $0x1, %ecx                      #  63    0x8d  6      OPC=addl_r32_imm32         addl $0x1, %ecx                      #  63    0x8d  6      OPC=addl_r32_imm32       
  addq $0x1, %rdx                      #  64    0x93  4      OPC=addq_r64_imm8          addq $0x1, %rdx                      #  64    0x93  4      OPC=addq_r64_imm8        
  testb %sil, %sil                     #  65    0x97  3      OPC=testb_r8_r8            testb %sil, %sil                     #  65    0x97  3      OPC=testb_r8_r8          
  jne .L_126860                        #  66    0x9a  6      OPC=jne_label_1            jne .L_126860                        #  66    0x9a  6      OPC=jne_label_1          
  nop                                  #  67    0xa0  1      OPC=nop                    nop                                  #  67    0xa0  1      OPC=nop                  
  nop                                  #  68    0xa1  1      OPC=nop                    nop                                  #  68    0xa1  1      OPC=nop                  
  nop                                  #  69    0xa2  1      OPC=nop                    nop                                  #  69    0xa2  1      OPC=nop                  
  nop                                  #  70    0xa3  1      OPC=nop                    nop                                  #  70    0xa3  1      OPC=nop                  
  nop                                  #  71    0xa4  1      OPC=nop                    nop                                  #  71    0xa4  1      OPC=nop                  
  nop                                  #  72    0xa5  1      OPC=nop                    nop                                  #  72    0xa5  1      OPC=nop                  
  nop                                  #  73    0xa6  1      OPC=nop                    nop                                  #  73    0xa6  1      OPC=nop                  
  nop                                  #  74    0xa7  1      OPC=nop                    nop                                  #  74    0xa7  1      OPC=nop                  
  popq %r11                            #  75    0xa8  2      OPC=popq_r64_1             popq %r11                            #  75    0xa8  2      OPC=popq_r64_1           
  andl $0xe0, %r11d                    #  76    0xaa  4      OPC=andl_r32_imm8          andl $0xe0, %r11d                    #  76    0xaa  4      OPC=andl_r32_imm8        
  addq %r15, %r11                      #  77    0xae  3      OPC=addq_r64_r64           addq %r15, %r11                      #  77    0xae  3      OPC=addq_r64_r64         
  jmpq %r11                            #  78    0xb1  3      OPC=jmpq_r64               jmpq %r11                            #  78    0xb1  3      OPC=jmpq_r64             
                                                                                                                                                                            
.size strcpy, .-strcpy                                                                .size strcpy, .-strcpy                                                                
                                                                                                                                                                            

********************************************************************************

Progress Update: 

Lowest Cost Discovered (184)                                                         Lowest Known Correct Cost (193)                                                       
                                                                                                                                                                           
  .text                                                                                .text                                                                               
  .globl strcpy                                                                        .globl strcpy                                                                       
  .type strcpy, @function                                                              .type strcpy, @function                                                             
                                                                                                                                                                           
#! file-offset 0                                                                     #! file-offset 0                                                                      
#! rip-offset  0                                                                     #! rip-offset  0                                                                      
#! capacity    0 bytes                                                               #! capacity    0 bytes                                                                
                                                                                                                                                                           
# Text                                #  Line  RIP   Bytes  Opcode                   # Text                                 #  Line  RIP   Bytes  Opcode                   
.strcpy:                              #        0     0      OPC=<label>              .strcpy:                               #        0     0      OPC=<label>              
  movl %esi, %edx                     #  1     0     2      OPC=movl_r32_r32           movl %edi, %ecx                      #  1     0     2      OPC=movl_r32_r32_1       
  nop                                 #  2     0x2   1      OPC=nop                    movw %si, %di                        #  2     0x2   3      OPC=movw_r16_r16         
  nop                                 #  3     0x3   1      OPC=nop                    nop                                  #  3     0x5   1      OPC=nop                  
  movl %edi, %ecx                     #  4     0x4   2      OPC=movl_r32_r32           nop                                  #  4     0x6   1      OPC=nop                  
  movq %rcx, %rax                     #  5     0x6   3      OPC=movq_r64_r64_1         nop                                  #  5     0x7   1      OPC=nop                  
  nop                                 #  6     0x9   1      OPC=nop                    movl %ecx, %eax                      #  6     0x8   2      OPC=movl_r32_r32_1       
  nop                                 #  7     0xa   1      OPC=nop                    nop                                  #  7     0xa   1      OPC=nop                  
  nop                                 #  8     0xb   1      OPC=nop                    nop                                  #  8     0xb   1      OPC=nop                  
  nop                                 #  9     0xc   1      OPC=nop                    nop                                  #  9     0xc   1      OPC=nop                  
  nop                                 #  10    0xd   1      OPC=nop                    nop                                  #  10    0xd   1      OPC=nop                  
  nop                                 #  11    0xe   1      OPC=nop                    addb %al, %dil                       #  11    0xe   3      OPC=addb_r8_r8_1         
  nop                                 #  12    0xf   1      OPC=nop                    andl $0x6, %edi                      #  12    0x11  3      OPC=andl_r32_imm8        
  nop                                 #  13    0x10  1      OPC=nop                    leaq -0x7f7f7f80(%rcx,%rcx,8), %rdi  #  13    0x14  8      OPC=leaq_r64_m32         
  nop                                 #  14    0x11  1      OPC=nop                    movl %esi, %edx                      #  14    0x1c  2      OPC=movl_r32_r32         
  movw %si, %di                       #  15    0x12  3      OPC=movw_r16_r16_1         nop                                  #  15    0x1e  1      OPC=nop                  
  nop                                 #  16    0x15  1      OPC=nop                    nop                                  #  16    0x1f  1      OPC=nop                  
  addl %ecx, %edi                     #  17    0x16  2      OPC=addl_r32_r32           nop                                  #  17    0x20  1      OPC=nop                  
  nop                                 #  18    0x18  1      OPC=nop                    nop                                  #  18    0x21  1      OPC=nop                  
  nop                                 #  19    0x19  1      OPC=nop                    jne .L_126860                        #  19    0x22  6      OPC=jne_label_1          
  nop                                 #  20    0x1a  1      OPC=nop                    nop                                  #  20    0x28  1      OPC=nop                  
  shlb $0x6, %dil                     #  21    0x1b  4      OPC=shlb_r8_imm8           nop                                  #  21    0x29  1      OPC=nop                  
  nop                                 #  22    0x1f  1      OPC=nop                    nop                                  #  22    0x2a  1      OPC=nop                  
  jne .L_126860                       #  23    0x20  6      OPC=jne_label_1            nop                                  #  23    0x2b  1      OPC=nop                  
  nop                                 #  24    0x26  1      OPC=nop                    nop                                  #  24    0x2c  1      OPC=nop                  
  orl %ebp, %esi                      #  25    0x27  2      OPC=orl_r32_r32_1          nop                                  #  25    0x2d  1      OPC=nop                  
  movl (%r15,%rsi,1), %r8d            #  26    0x29  4      OPC=movl_r32_m32           nop                                  #  26    0x2e  1      OPC=nop                  
  leaw -0x7f7f7f80(%rcx,%rcx,8), %di  #  27    0x2d  8      OPC=leaw_r16_m16           nop                                  #  27    0x2f  1      OPC=nop                  
  nop                                 #  28    0x35  1      OPC=nop                    subl %esp, %esi                      #  28    0x30  2      OPC=subl_r32_r32         
  andb $0x80, %dil                    #  29    0x36  4      OPC=andb_r8_imm8           movl (%r15,%rsi,1), %r8d             #  29    0x32  4      OPC=movl_r32_m32         
  jne .L_126860                       #  30    0x3a  6      OPC=jne_label_1            andb $0x80, %dil                     #  30    0x36  4      OPC=andb_r8_imm8         
.L_126820:                            #        0x40  0      OPC=<label>                jne .L_126860                        #  31    0x3a  6      OPC=jne_label_1          
  andq %rcx, %rcx                     #  31    0x40  3      OPC=andq_r64_r64         .L_126820:                             #        0x40  0      OPC=<label>              
  movl %r8d, (%r15,%rcx,1)            #  32    0x43  4      OPC=movl_m32_r32           movl %ecx, %ecx                      #  32    0x40  2      OPC=movl_r32_r32         
  addl $0x4, %edx                     #  33    0x47  6      OPC=addl_r32_imm32         movl %r8d, (%r15,%rcx,1)             #  33    0x42  4      OPC=movl_m32_r32         
  movl (%r15,%rdx,1), %r8d            #  34    0x4d  4      OPC=movl_r32_m32           addl $0x4, %edx                      #  34    0x46  3      OPC=addl_r32_imm8        
  leal -0x1010101(%r8), %esi          #  35    0x51  7      OPC=leal_r32_m16           movl (%r15,%rdx,1), %r8d             #  35    0x49  4      OPC=movl_r32_m32         
  andq $0x80808080, %rsi              #  36    0x58  7      OPC=andq_r64_imm32         movl %r8d, %r9d                      #  36    0x4d  3      OPC=movl_r32_r32_1       
  movq %r8, %r9                       #  37    0x5f  3      OPC=movq_r64_r64_1         notq %r9                             #  37    0x50  3      OPC=notq_r64             
  notl %r9d                           #  38    0x62  3      OPC=notl_r32               leaq -0x1010101(%r8), %rsi           #  38    0x53  7      OPC=leaq_r64_m32         
  addq $0x4, %rcx                     #  39    0x65  4      OPC=addq_r64_imm8          addl $0x4, %ecx                      #  39    0x5a  6      OPC=addl_r32_imm32       
  andl %esi, %r9d                     #  40    0x69  3      OPC=andl_r32_r32           andq $0x80808080, %r9                #  40    0x60  7      OPC=andq_r64_imm32       
  je .L_126820                        #  41    0x6c  6      OPC=je_label_1             andq %rsi, %r9                       #  41    0x67  3      OPC=andq_r64_r64_1       
  nop                                 #  42    0x72  1      OPC=nop                    je .L_126820                         #  42    0x6a  6      OPC=je_label_1           
  nop                                 #  43    0x73  1      OPC=nop                    nop                                  #  43    0x70  1      OPC=nop                  
  nop                                 #  44    0x74  1      OPC=nop                    nop                                  #  44    0x71  1      OPC=nop                  
  nop                                 #  45    0x75  1      OPC=nop                    nop                                  #  45    0x72  1      OPC=nop                  
  nop                                 #  46    0x76  1      OPC=nop                    nop                                  #  46    0x73  1      OPC=nop                  
  nop                                 #  47    0x77  1      OPC=nop                    nop                                  #  47    0x74  1      OPC=nop                  
  nop                                 #  48    0x78  1      OPC=nop                    nop                                  #  48    0x75  1      OPC=nop                  
  nop                                 #  49    0x79  1      OPC=nop                    nop                                  #  49    0x76  1      OPC=nop                  
  nop                                 #  50    0x7a  1      OPC=nop                    nop                                  #  50    0x77  1      OPC=nop                  
  nop                                 #  51    0x7b  1      OPC=nop                    nop                                  #  51    0x78  1      OPC=nop                  
  nop                                 #  52    0x7c  1      OPC=nop                    nop                                  #  52    0x79  1      OPC=nop                  
  nop                                 #  53    0x7d  1      OPC=nop                    nop                                  #  53    0x7a  1      OPC=nop                  
  nop                                 #  54    0x7e  1      OPC=nop                    nop                                  #  54    0x7b  1      OPC=nop                  
.L_126860:                            #        0x7f  0      OPC=<label>                nop                                  #  55    0x7c  1      OPC=nop                  
  incl %edx                           #  55    0x7f  2      OPC=incl_r32               nop                                  #  56    0x7d  1      OPC=nop                  
  movzbl -0x1(%r15,%rdx,1), %esi      #  56    0x81  6      OPC=movzbl_r32_m8          nop                                  #  57    0x7e  1      OPC=nop                  
  subl %esp, %ecx                     #  57    0x87  2      OPC=subl_r32_r32           nop                                  #  58    0x7f  1      OPC=nop                  
  movb %sil, (%r15,%rcx,1)            #  58    0x89  4      OPC=movb_m8_r8           .L_126860:                             #        0x80  0      OPC=<label>              
  addl $0x1, %ecx                     #  59    0x8d  6      OPC=addl_r32_imm32         orl %ebp, %edx                       #  59    0x80  2      OPC=orl_r32_r32_1        
  testb %sil, %sil                    #  60    0x93  3      OPC=testb_r8_r8            movzbq (%r15,%rdx,1), %rsi           #  60    0x82  5      OPC=movzbq_r64_m8        
  jne .L_126860                       #  61    0x96  6      OPC=jne_label_1            xorl %esp, %ecx                      #  61    0x87  2      OPC=xorl_r32_r32         
  nop                                 #  62    0x9c  1      OPC=nop                    movb %sil, (%r15,%rcx,1)             #  62    0x89  4      OPC=movb_m8_r8           
  nop                                 #  63    0x9d  1      OPC=nop                    addl $0x1, %ecx                      #  63    0x8d  6      OPC=addl_r32_imm32       
  nop                                 #  64    0x9e  1      OPC=nop                    addq $0x1, %rdx                      #  64    0x93  4      OPC=addq_r64_imm8        
  nop                                 #  65    0x9f  1      OPC=nop                    testb %sil, %sil                     #  65    0x97  3      OPC=testb_r8_r8          
  nop                                 #  66    0xa0  1      OPC=nop                    jne .L_126860                        #  66    0x9a  6      OPC=jne_label_1          
  nop                                 #  67    0xa1  1      OPC=nop                    nop                                  #  67    0xa0  1      OPC=nop                  
  nop                                 #  68    0xa2  1      OPC=nop                    nop                                  #  68    0xa1  1      OPC=nop                  
  nop                                 #  69    0xa3  1      OPC=nop                    nop                                  #  69    0xa2  1      OPC=nop                  
  nop                                 #  70    0xa4  1      OPC=nop                    nop                                  #  70    0xa3  1      OPC=nop                  
  nop                                 #  71    0xa5  1      OPC=nop                    nop                                  #  71    0xa4  1      OPC=nop                  
  nop                                 #  72    0xa6  1      OPC=nop                    nop                                  #  72    0xa5  1      OPC=nop                  
  nop                                 #  73    0xa7  1      OPC=nop                    nop                                  #  73    0xa6  1      OPC=nop                  
  nop                                 #  74    0xa8  1      OPC=nop                    nop                                  #  74    0xa7  1      OPC=nop                  
  nop                                 #  75    0xa9  1      OPC=nop                    popq %r11                            #  75    0xa8  2      OPC=popq_r64_1           
  nop                                 #  76    0xaa  1      OPC=nop                    andl $0xe0, %r11d                    #  76    0xaa  4      OPC=andl_r32_imm8        
  nop                                 #  77    0xab  1      OPC=nop                    addq %r15, %r11                      #  77    0xae  3      OPC=addq_r64_r64         
  nop                                 #  78    0xac  1      OPC=nop                    jmpq %r11                            #  78    0xb1  3      OPC=jmpq_r64             
  popq %r11                           #  79    0xad  2      OPC=popq_r64_1                                                                                                 
  andl $0xe0, %r11d                   #  80    0xaf  4      OPC=andl_r32_imm8        .size strcpy, .-strcpy                                                                
  addq %r15, %r11                     #  81    0xb3  3      OPC=addq_r64_r64                                                                                               
  jmpq %r11                           #  82    0xb6  3      OPC=jmpq_r64                                                                                                   
                                                                                                                                                                           
.size strcpy, .-strcpy                                                                                                                                                     
                                                                                                                                                                           

********************************************************************************

Progress Update: 

Lowest Cost Discovered (183)                                                          Lowest Known Correct Cost (193)                                                       
                                                                                                                                                                            
  .text                                                                                 .text                                                                               
  .globl strcpy                                                                         .globl strcpy                                                                       
  .type strcpy, @function                                                               .type strcpy, @function                                                             
                                                                                                                                                                            
#! file-offset 0                                                                      #! file-offset 0                                                                      
#! rip-offset  0                                                                      #! rip-offset  0                                                                      
#! capacity    0 bytes                                                                #! capacity    0 bytes                                                                
                                                                                                                                                                            
# Text                                 #  Line  RIP   Bytes  Opcode                   # Text                                 #  Line  RIP   Bytes  Opcode                   
.strcpy:                               #        0     0      OPC=<label>              .strcpy:                               #        0     0      OPC=<label>              
  nop                                  #  1     0     1      OPC=nop                    movl %edi, %ecx                      #  1     0     2      OPC=movl_r32_r32_1       
  nop                                  #  2     0x1   1      OPC=nop                    movw %si, %di                        #  2     0x2   3      OPC=movw_r16_r16         
  movl %edi, %ecx                      #  3     0x2   2      OPC=movl_r32_r32_1         nop                                  #  3     0x5   1      OPC=nop                  
  movq %rcx, %rax                      #  4     0x4   3      OPC=movq_r64_r64_1         nop                                  #  4     0x6   1      OPC=nop                  
  nop                                  #  5     0x7   1      OPC=nop                    nop                                  #  5     0x7   1      OPC=nop                  
  nop                                  #  6     0x8   1      OPC=nop                    movl %ecx, %eax                      #  6     0x8   2      OPC=movl_r32_r32_1       
  nop                                  #  7     0x9   1      OPC=nop                    nop                                  #  7     0xa   1      OPC=nop                  
  nop                                  #  8     0xa   1      OPC=nop                    nop                                  #  8     0xb   1      OPC=nop                  
  nop                                  #  9     0xb   1      OPC=nop                    nop                                  #  9     0xc   1      OPC=nop                  
  nop                                  #  10    0xc   1      OPC=nop                    nop                                  #  10    0xd   1      OPC=nop                  
  nop                                  #  11    0xd   1      OPC=nop                    addb %al, %dil                       #  11    0xe   3      OPC=addb_r8_r8_1         
  nop                                  #  12    0xe   1      OPC=nop                    andl $0x6, %edi                      #  12    0x11  3      OPC=andl_r32_imm8        
  nop                                  #  13    0xf   1      OPC=nop                    leaq -0x7f7f7f80(%rcx,%rcx,8), %rdi  #  13    0x14  8      OPC=leaq_r64_m32         
  nop                                  #  14    0x10  1      OPC=nop                    movl %esi, %edx                      #  14    0x1c  2      OPC=movl_r32_r32         
  movw %si, %di                        #  15    0x11  3      OPC=movw_r16_r16_1         nop                                  #  15    0x1e  1      OPC=nop                  
  addl %ecx, %edi                      #  16    0x14  2      OPC=addl_r32_r32           nop                                  #  16    0x1f  1      OPC=nop                  
  movq %rsi, %rdx                      #  17    0x16  3      OPC=movq_r64_r64           nop                                  #  17    0x20  1      OPC=nop                  
  nop                                  #  18    0x19  1      OPC=nop                    nop                                  #  18    0x21  1      OPC=nop                  
  shlb $0x6, %dil                      #  19    0x1a  4      OPC=shlb_r8_imm8           jne .L_126860                        #  19    0x22  6      OPC=jne_label_1          
  nop                                  #  20    0x1e  1      OPC=nop                    nop                                  #  20    0x28  1      OPC=nop                  
  nop                                  #  21    0x1f  1      OPC=nop                    nop                                  #  21    0x29  1      OPC=nop                  
  nop                                  #  22    0x20  1      OPC=nop                    nop                                  #  22    0x2a  1      OPC=nop                  
  jne .L_126860                        #  23    0x21  6      OPC=jne_label_1            nop                                  #  23    0x2b  1      OPC=nop                  
  orl %esp, %esi                       #  24    0x27  2      OPC=orl_r32_r32_1          nop                                  #  24    0x2c  1      OPC=nop                  
  movl (%r15,%rsi,1), %r8d             #  25    0x29  4      OPC=movl_r32_m32           nop                                  #  25    0x2d  1      OPC=nop                  
  nop                                  #  26    0x2d  1      OPC=nop                    nop                                  #  26    0x2e  1      OPC=nop                  
  leal -0x7f7f7f80(%rcx,%rcx,8), %edi  #  27    0x2e  7      OPC=leal_r32_m64           nop                                  #  27    0x2f  1      OPC=nop                  
  nop                                  #  28    0x35  1      OPC=nop                    subl %esp, %esi                      #  28    0x30  2      OPC=subl_r32_r32         
  andb $0x80, %dil                     #  29    0x36  4      OPC=andb_r8_imm8           movl (%r15,%rsi,1), %r8d             #  29    0x32  4      OPC=movl_r32_m32         
  jne .L_126860                        #  30    0x3a  6      OPC=jne_label_1            andb $0x80, %dil                     #  30    0x36  4      OPC=andb_r8_imm8         
.L_126820:                             #        0x40  0      OPC=<label>                jne .L_126860                        #  31    0x3a  6      OPC=jne_label_1          
  orq %rcx, %rcx                       #  31    0x40  3      OPC=orq_r64_r64          .L_126820:                             #        0x40  0      OPC=<label>              
  movl %r8d, (%r15,%rcx,1)             #  32    0x43  4      OPC=movl_m32_r32           movl %ecx, %ecx                      #  32    0x40  2      OPC=movl_r32_r32         
  addl $0x4, %edx                      #  33    0x47  6      OPC=addl_r32_imm32         movl %r8d, (%r15,%rcx,1)             #  33    0x42  4      OPC=movl_m32_r32         
  movl (%r15,%rdx,1), %r8d             #  34    0x4d  4      OPC=movl_r32_m32           addl $0x4, %edx                      #  34    0x46  3      OPC=addl_r32_imm8        
  leal -0x1010101(%r8), %esi           #  35    0x51  7      OPC=leal_r32_m16           movl (%r15,%rdx,1), %r8d             #  35    0x49  4      OPC=movl_r32_m32         
  andq $0x80808080, %rsi               #  36    0x58  7      OPC=andq_r64_imm32         movl %r8d, %r9d                      #  36    0x4d  3      OPC=movl_r32_r32_1       
  movq %r8, %r9                        #  37    0x5f  3      OPC=movq_r64_r64_1         notq %r9                             #  37    0x50  3      OPC=notq_r64             
  notl %r9d                            #  38    0x62  3      OPC=notl_r32               leaq -0x1010101(%r8), %rsi           #  38    0x53  7      OPC=leaq_r64_m32         
  addq $0x4, %rcx                      #  39    0x65  4      OPC=addq_r64_imm8          addl $0x4, %ecx                      #  39    0x5a  6      OPC=addl_r32_imm32       
  andl %esi, %r9d                      #  40    0x69  3      OPC=andl_r32_r32           andq $0x80808080, %r9                #  40    0x60  7      OPC=andq_r64_imm32       
  je .L_126820                         #  41    0x6c  6      OPC=je_label_1             andq %rsi, %r9                       #  41    0x67  3      OPC=andq_r64_r64_1       
  nop                                  #  42    0x72  1      OPC=nop                    je .L_126820                         #  42    0x6a  6      OPC=je_label_1           
  nop                                  #  43    0x73  1      OPC=nop                    nop                                  #  43    0x70  1      OPC=nop                  
  nop                                  #  44    0x74  1      OPC=nop                    nop                                  #  44    0x71  1      OPC=nop                  
  nop                                  #  45    0x75  1      OPC=nop                    nop                                  #  45    0x72  1      OPC=nop                  
  nop                                  #  46    0x76  1      OPC=nop                    nop                                  #  46    0x73  1      OPC=nop                  
  nop                                  #  47    0x77  1      OPC=nop                    nop                                  #  47    0x74  1      OPC=nop                  
  nop                                  #  48    0x78  1      OPC=nop                    nop                                  #  48    0x75  1      OPC=nop                  
  nop                                  #  49    0x79  1      OPC=nop                    nop                                  #  49    0x76  1      OPC=nop                  
  nop                                  #  50    0x7a  1      OPC=nop                    nop                                  #  50    0x77  1      OPC=nop                  
  nop                                  #  51    0x7b  1      OPC=nop                    nop                                  #  51    0x78  1      OPC=nop                  
  nop                                  #  52    0x7c  1      OPC=nop                    nop                                  #  52    0x79  1      OPC=nop                  
  nop                                  #  53    0x7d  1      OPC=nop                    nop                                  #  53    0x7a  1      OPC=nop                  
  nop                                  #  54    0x7e  1      OPC=nop                    nop                                  #  54    0x7b  1      OPC=nop                  
.L_126860:                             #        0x7f  0      OPC=<label>                nop                                  #  55    0x7c  1      OPC=nop                  
  incl %edx                            #  55    0x7f  2      OPC=incl_r32               nop                                  #  56    0x7d  1      OPC=nop                  
  movzbl -0x1(%r15,%rdx,1), %esi       #  56    0x81  6      OPC=movzbl_r32_m8          nop                                  #  57    0x7e  1      OPC=nop                  
  subl %esp, %ecx                      #  57    0x87  2      OPC=subl_r32_r32           nop                                  #  58    0x7f  1      OPC=nop                  
  movb %sil, (%r15,%rcx,1)             #  58    0x89  4      OPC=movb_m8_r8           .L_126860:                             #        0x80  0      OPC=<label>              
  addl $0x1, %ecx                      #  59    0x8d  6      OPC=addl_r32_imm32         orl %ebp, %edx                       #  59    0x80  2      OPC=orl_r32_r32_1        
  testb %sil, %sil                     #  60    0x93  3      OPC=testb_r8_r8            movzbq (%r15,%rdx,1), %rsi           #  60    0x82  5      OPC=movzbq_r64_m8        
  jne .L_126860                        #  61    0x96  6      OPC=jne_label_1            xorl %esp, %ecx                      #  61    0x87  2      OPC=xorl_r32_r32         
  nop                                  #  62    0x9c  1      OPC=nop                    movb %sil, (%r15,%rcx,1)             #  62    0x89  4      OPC=movb_m8_r8           
  nop                                  #  63    0x9d  1      OPC=nop                    addl $0x1, %ecx                      #  63    0x8d  6      OPC=addl_r32_imm32       
  nop                                  #  64    0x9e  1      OPC=nop                    addq $0x1, %rdx                      #  64    0x93  4      OPC=addq_r64_imm8        
  nop                                  #  65    0x9f  1      OPC=nop                    testb %sil, %sil                     #  65    0x97  3      OPC=testb_r8_r8          
  nop                                  #  66    0xa0  1      OPC=nop                    jne .L_126860                        #  66    0x9a  6      OPC=jne_label_1          
  nop                                  #  67    0xa1  1      OPC=nop                    nop                                  #  67    0xa0  1      OPC=nop                  
  nop                                  #  68    0xa2  1      OPC=nop                    nop                                  #  68    0xa1  1      OPC=nop                  
  nop                                  #  69    0xa3  1      OPC=nop                    nop                                  #  69    0xa2  1      OPC=nop                  
  nop                                  #  70    0xa4  1      OPC=nop                    nop                                  #  70    0xa3  1      OPC=nop                  
  nop                                  #  71    0xa5  1      OPC=nop                    nop                                  #  71    0xa4  1      OPC=nop                  
  nop                                  #  72    0xa6  1      OPC=nop                    nop                                  #  72    0xa5  1      OPC=nop                  
  nop                                  #  73    0xa7  1      OPC=nop                    nop                                  #  73    0xa6  1      OPC=nop                  
  nop                                  #  74    0xa8  1      OPC=nop                    nop                                  #  74    0xa7  1      OPC=nop                  
  nop                                  #  75    0xa9  1      OPC=nop                    popq %r11                            #  75    0xa8  2      OPC=popq_r64_1           
  nop                                  #  76    0xaa  1      OPC=nop                    andl $0xe0, %r11d                    #  76    0xaa  4      OPC=andl_r32_imm8        
  popq %r11                            #  77    0xab  2      OPC=popq_r64_1             addq %r15, %r11                      #  77    0xae  3      OPC=addq_r64_r64         
  andl $0xe0, %r11d                    #  78    0xad  4      OPC=andl_r32_imm8          jmpq %r11                            #  78    0xb1  3      OPC=jmpq_r64             
  addq %r15, %r11                      #  79    0xb1  3      OPC=addq_r64_r64                                                                                               
  jmpq %r11                            #  80    0xb4  3      OPC=jmpq_r64             .size strcpy, .-strcpy                                                                
                                                                                                                                                                            
.size strcpy, .-strcpy                                                                                                                                                      
                                                                                                                                                                            

********************************************************************************

Progress Update: 

Lowest Cost Discovered (173)                                                          Lowest Known Correct Cost (193)                                                       
                                                                                                                                                                            
  .text                                                                                 .text                                                                               
  .globl strcpy                                                                         .globl strcpy                                                                       
  .type strcpy, @function                                                               .type strcpy, @function                                                             
                                                                                                                                                                            
#! file-offset 0                                                                      #! file-offset 0                                                                      
#! rip-offset  0                                                                      #! rip-offset  0                                                                      
#! capacity    0 bytes                                                                #! capacity    0 bytes                                                                
                                                                                                                                                                            
# Text                                 #  Line  RIP   Bytes  Opcode                   # Text                                 #  Line  RIP   Bytes  Opcode                   
.strcpy:                               #        0     0      OPC=<label>              .strcpy:                               #        0     0      OPC=<label>              
  movl %edi, %ecx                      #  1     0     2      OPC=movl_r32_r32           movl %edi, %ecx                      #  1     0     2      OPC=movl_r32_r32_1       
  nop                                  #  2     0x2   1      OPC=nop                    movw %si, %di                        #  2     0x2   3      OPC=movw_r16_r16         
  nop                                  #  3     0x3   1      OPC=nop                    nop                                  #  3     0x5   1      OPC=nop                  
  nop                                  #  4     0x4   1      OPC=nop                    nop                                  #  4     0x6   1      OPC=nop                  
  nop                                  #  5     0x5   1      OPC=nop                    nop                                  #  5     0x7   1      OPC=nop                  
  nop                                  #  6     0x6   1      OPC=nop                    movl %ecx, %eax                      #  6     0x8   2      OPC=movl_r32_r32_1       
  movq %rsi, %rdi                      #  7     0x7   3      OPC=movq_r64_r64           nop                                  #  7     0xa   1      OPC=nop                  
  addb %cl, %dil                       #  8     0xa   3      OPC=addb_r8_r8             nop                                  #  8     0xb   1      OPC=nop                  
  andw $0x3, %di                       #  9     0xd   4      OPC=andw_r16_imm8          nop                                  #  9     0xc   1      OPC=nop                  
  movl %esi, %edx                      #  10    0x11  2      OPC=movl_r32_r32_1         nop                                  #  10    0xd   1      OPC=nop                  
  nop                                  #  11    0x13  1      OPC=nop                    addb %al, %dil                       #  11    0xe   3      OPC=addb_r8_r8_1         
  leal -0x7f7f7f80(%rcx,%rcx,8), %edi  #  12    0x14  7      OPC=leal_r32_m64           andl $0x6, %edi                      #  12    0x11  3      OPC=andl_r32_imm8        
  movq %rcx, %rax                      #  13    0x1b  3      OPC=movq_r64_r64_1         leaq -0x7f7f7f80(%rcx,%rcx,8), %rdi  #  13    0x14  8      OPC=leaq_r64_m32         
  nop                                  #  14    0x1e  1      OPC=nop                    movl %esi, %edx                      #  14    0x1c  2      OPC=movl_r32_r32         
  nop                                  #  15    0x1f  1      OPC=nop                    nop                                  #  15    0x1e  1      OPC=nop                  
  jne .L_126860                        #  16    0x20  6      OPC=jne_label_1            nop                                  #  16    0x1f  1      OPC=nop                  
  addl %esp, %esi                      #  17    0x26  2      OPC=addl_r32_r32_1         nop                                  #  17    0x20  1      OPC=nop                  
  movl (%r15,%rsi,1), %r8d             #  18    0x28  4      OPC=movl_r32_m32           nop                                  #  18    0x21  1      OPC=nop                  
  andb $0x80, %dil                     #  19    0x2c  4      OPC=andb_r8_imm8           jne .L_126860                        #  19    0x22  6      OPC=jne_label_1          
  nop                                  #  20    0x30  1      OPC=nop                    nop                                  #  20    0x28  1      OPC=nop                  
  jne .L_126860                        #  21    0x31  6      OPC=jne_label_1            nop                                  #  21    0x29  1      OPC=nop                  
  nop                                  #  22    0x37  1      OPC=nop                    nop                                  #  22    0x2a  1      OPC=nop                  
  nop                                  #  23    0x38  1      OPC=nop                    nop                                  #  23    0x2b  1      OPC=nop                  
  nop                                  #  24    0x39  1      OPC=nop                    nop                                  #  24    0x2c  1      OPC=nop                  
  nop                                  #  25    0x3a  1      OPC=nop                    nop                                  #  25    0x2d  1      OPC=nop                  
  nop                                  #  26    0x3b  1      OPC=nop                    nop                                  #  26    0x2e  1      OPC=nop                  
  nop                                  #  27    0x3c  1      OPC=nop                    nop                                  #  27    0x2f  1      OPC=nop                  
  nop                                  #  28    0x3d  1      OPC=nop                    subl %esp, %esi                      #  28    0x30  2      OPC=subl_r32_r32         
  nop                                  #  29    0x3e  1      OPC=nop                    movl (%r15,%rsi,1), %r8d             #  29    0x32  4      OPC=movl_r32_m32         
  nop                                  #  30    0x3f  1      OPC=nop                    andb $0x80, %dil                     #  30    0x36  4      OPC=andb_r8_imm8         
.L_126820:                             #        0x40  0      OPC=<label>                jne .L_126860                        #  31    0x3a  6      OPC=jne_label_1          
  subw %bp, %cx                        #  31    0x40  3      OPC=subw_r16_r16         .L_126820:                             #        0x40  0      OPC=<label>              
  movl %r8d, (%r15,%rcx,1)             #  32    0x43  4      OPC=movl_m32_r32           movl %ecx, %ecx                      #  32    0x40  2      OPC=movl_r32_r32         
  addl $0x4, %edx                      #  33    0x47  6      OPC=addl_r32_imm32         movl %r8d, (%r15,%rcx,1)             #  33    0x42  4      OPC=movl_m32_r32         
  movl (%r15,%rdx,1), %r8d             #  34    0x4d  4      OPC=movl_r32_m32           addl $0x4, %edx                      #  34    0x46  3      OPC=addl_r32_imm8        
  addw $0x4, %cx                       #  35    0x51  4      OPC=addw_r16_imm8          movl (%r15,%rdx,1), %r8d             #  35    0x49  4      OPC=movl_r32_m32         
  leal -0x1010101(%r8), %esi           #  36    0x55  7      OPC=leal_r32_m32           movl %r8d, %r9d                      #  36    0x4d  3      OPC=movl_r32_r32_1       
  movl %r8d, %r9d                      #  37    0x5c  3      OPC=movl_r32_r32           notq %r9                             #  37    0x50  3      OPC=notq_r64             
  notq %r9                             #  38    0x5f  3      OPC=notq_r64               leaq -0x1010101(%r8), %rsi           #  38    0x53  7      OPC=leaq_r64_m32         
  andq $0x80808080, %r9                #  39    0x62  7      OPC=andq_r64_imm32         addl $0x4, %ecx                      #  39    0x5a  6      OPC=addl_r32_imm32       
  andl %esi, %r9d                      #  40    0x69  3      OPC=andl_r32_r32_1         andq $0x80808080, %r9                #  40    0x60  7      OPC=andq_r64_imm32       
  je .L_126820                         #  41    0x6c  6      OPC=je_label_1             andq %rsi, %r9                       #  41    0x67  3      OPC=andq_r64_r64_1       
  nop                                  #  42    0x72  1      OPC=nop                    je .L_126820                         #  42    0x6a  6      OPC=je_label_1           
  nop                                  #  43    0x73  1      OPC=nop                    nop                                  #  43    0x70  1      OPC=nop                  
  nop                                  #  44    0x74  1      OPC=nop                    nop                                  #  44    0x71  1      OPC=nop                  
  nop                                  #  45    0x75  1      OPC=nop                    nop                                  #  45    0x72  1      OPC=nop                  
  nop                                  #  46    0x76  1      OPC=nop                    nop                                  #  46    0x73  1      OPC=nop                  
  nop                                  #  47    0x77  1      OPC=nop                    nop                                  #  47    0x74  1      OPC=nop                  
  nop                                  #  48    0x78  1      OPC=nop                    nop                                  #  48    0x75  1      OPC=nop                  
  nop                                  #  49    0x79  1      OPC=nop                    nop                                  #  49    0x76  1      OPC=nop                  
  nop                                  #  50    0x7a  1      OPC=nop                    nop                                  #  50    0x77  1      OPC=nop                  
  nop                                  #  51    0x7b  1      OPC=nop                    nop                                  #  51    0x78  1      OPC=nop                  
  nop                                  #  52    0x7c  1      OPC=nop                    nop                                  #  52    0x79  1      OPC=nop                  
  nop                                  #  53    0x7d  1      OPC=nop                    nop                                  #  53    0x7a  1      OPC=nop                  
  nop                                  #  54    0x7e  1      OPC=nop                    nop                                  #  54    0x7b  1      OPC=nop                  
.L_126860:                             #        0x7f  0      OPC=<label>                nop                                  #  55    0x7c  1      OPC=nop                  
  incl %edx                            #  55    0x7f  2      OPC=incl_r32               nop                                  #  56    0x7d  1      OPC=nop                  
  movsbq -0x1(%r15,%rdx,1), %rsi       #  56    0x81  6      OPC=movsbq_r64_m8          nop                                  #  57    0x7e  1      OPC=nop                  
  addq $0x1, %rcx                      #  57    0x87  4      OPC=addq_r64_imm8          nop                                  #  58    0x7f  1      OPC=nop                  
  movb %sil, -0x1(%r15,%rcx,1)         #  58    0x8b  5      OPC=movb_m8_r8           .L_126860:                             #        0x80  0      OPC=<label>              
  testb %sil, %sil                     #  59    0x90  3      OPC=testb_r8_r8            orl %ebp, %edx                       #  59    0x80  2      OPC=orl_r32_r32_1        
  jne .L_126860                        #  60    0x93  6      OPC=jne_label_1            movzbq (%r15,%rdx,1), %rsi           #  60    0x82  5      OPC=movzbq_r64_m8        
  nop                                  #  61    0x99  1      OPC=nop                    xorl %esp, %ecx                      #  61    0x87  2      OPC=xorl_r32_r32         
  nop                                  #  62    0x9a  1      OPC=nop                    movb %sil, (%r15,%rcx,1)             #  62    0x89  4      OPC=movb_m8_r8           
  nop                                  #  63    0x9b  1      OPC=nop                    addl $0x1, %ecx                      #  63    0x8d  6      OPC=addl_r32_imm32       
  nop                                  #  64    0x9c  1      OPC=nop                    addq $0x1, %rdx                      #  64    0x93  4      OPC=addq_r64_imm8        
  nop                                  #  65    0x9d  1      OPC=nop                    testb %sil, %sil                     #  65    0x97  3      OPC=testb_r8_r8          
  nop                                  #  66    0x9e  1      OPC=nop                    jne .L_126860                        #  66    0x9a  6      OPC=jne_label_1          
  nop                                  #  67    0x9f  1      OPC=nop                    nop                                  #  67    0xa0  1      OPC=nop                  
  nop                                  #  68    0xa0  1      OPC=nop                    nop                                  #  68    0xa1  1      OPC=nop                  
  nop                                  #  69    0xa1  1      OPC=nop                    nop                                  #  69    0xa2  1      OPC=nop                  
  nop                                  #  70    0xa2  1      OPC=nop                    nop                                  #  70    0xa3  1      OPC=nop                  
  nop                                  #  71    0xa3  1      OPC=nop                    nop                                  #  71    0xa4  1      OPC=nop                  
  nop                                  #  72    0xa4  1      OPC=nop                    nop                                  #  72    0xa5  1      OPC=nop                  
  nop                                  #  73    0xa5  1      OPC=nop                    nop                                  #  73    0xa6  1      OPC=nop                  
  nop                                  #  74    0xa6  1      OPC=nop                    nop                                  #  74    0xa7  1      OPC=nop                  
  nop                                  #  75    0xa7  1      OPC=nop                    popq %r11                            #  75    0xa8  2      OPC=popq_r64_1           
  nop                                  #  76    0xa8  1      OPC=nop                    andl $0xe0, %r11d                    #  76    0xaa  4      OPC=andl_r32_imm8        
  nop                                  #  77    0xa9  1      OPC=nop                    addq %r15, %r11                      #  77    0xae  3      OPC=addq_r64_r64         
  nop                                  #  78    0xaa  1      OPC=nop                    jmpq %r11                            #  78    0xb1  3      OPC=jmpq_r64             
  nop                                  #  79    0xab  1      OPC=nop                                                                                                        
  nop                                  #  80    0xac  1      OPC=nop                  .size strcpy, .-strcpy                                                                
  nop                                  #  81    0xad  1      OPC=nop                                                                                                        
  nop                                  #  82    0xae  1      OPC=nop                                                                                                        
  popq %r11                            #  83    0xaf  2      OPC=popq_r64_1                                                                                                 
  andl $0xe0, %r11d                    #  84    0xb1  4      OPC=andl_r32_imm8                                                                                              
  addq %r15, %r11                      #  85    0xb5  3      OPC=addq_r64_r64                                                                                               
  jmpq %r11                            #  86    0xb8  3      OPC=jmpq_r64                                                                                                   
                                                                                                                                                                            
.size strcpy, .-strcpy                                                                                                                                                      
                                                                                                                                                                            

********************************************************************************

Progress Update: 

Lowest Cost Discovered (172)                                                          Lowest Known Correct Cost (193)                                                       
                                                                                                                                                                            
  .text                                                                                 .text                                                                               
  .globl strcpy                                                                         .globl strcpy                                                                       
  .type strcpy, @function                                                               .type strcpy, @function                                                             
                                                                                                                                                                            
#! file-offset 0                                                                      #! file-offset 0                                                                      
#! rip-offset  0                                                                      #! rip-offset  0                                                                      
#! capacity    0 bytes                                                                #! capacity    0 bytes                                                                
                                                                                                                                                                            
# Text                                 #  Line  RIP   Bytes  Opcode                   # Text                                 #  Line  RIP   Bytes  Opcode                   
.strcpy:                               #        0     0      OPC=<label>              .strcpy:                               #        0     0      OPC=<label>              
  movl %edi, %ecx                      #  1     0     2      OPC=movl_r32_r32           movl %edi, %ecx                      #  1     0     2      OPC=movl_r32_r32_1       
  nop                                  #  2     0x2   1      OPC=nop                    movw %si, %di                        #  2     0x2   3      OPC=movw_r16_r16         
  movq %rsi, %rdi                      #  3     0x3   3      OPC=movq_r64_r64_1         nop                                  #  3     0x5   1      OPC=nop                  
  nop                                  #  4     0x6   1      OPC=nop                    nop                                  #  4     0x6   1      OPC=nop                  
  addb %cl, %dil                       #  5     0x7   3      OPC=addb_r8_r8             nop                                  #  5     0x7   1      OPC=nop                  
  nop                                  #  6     0xa   1      OPC=nop                    movl %ecx, %eax                      #  6     0x8   2      OPC=movl_r32_r32_1       
  andw $0x3, %di                       #  7     0xb   4      OPC=andw_r16_imm8          nop                                  #  7     0xa   1      OPC=nop                  
  nop                                  #  8     0xf   1      OPC=nop                    nop                                  #  8     0xb   1      OPC=nop                  
  nop                                  #  9     0x10  1      OPC=nop                    nop                                  #  9     0xc   1      OPC=nop                  
  nop                                  #  10    0x11  1      OPC=nop                    nop                                  #  10    0xd   1      OPC=nop                  
  nop                                  #  11    0x12  1      OPC=nop                    addb %al, %dil                       #  11    0xe   3      OPC=addb_r8_r8_1         
  nop                                  #  12    0x13  1      OPC=nop                    andl $0x6, %edi                      #  12    0x11  3      OPC=andl_r32_imm8        
  movq %rcx, %rax                      #  13    0x14  3      OPC=movq_r64_r64_1         leaq -0x7f7f7f80(%rcx,%rcx,8), %rdi  #  13    0x14  8      OPC=leaq_r64_m32         
  movl %esi, %edx                      #  14    0x17  2      OPC=movl_r32_r32           movl %esi, %edx                      #  14    0x1c  2      OPC=movl_r32_r32         
  leal -0x7f7f7f80(%rcx,%rcx,8), %edi  #  15    0x19  7      OPC=leal_r32_m64           nop                                  #  15    0x1e  1      OPC=nop                  
  jne .L_126860                        #  16    0x20  6      OPC=jne_label_1            nop                                  #  16    0x1f  1      OPC=nop                  
  subl %ebp, %esi                      #  17    0x26  2      OPC=subl_r32_r32           nop                                  #  17    0x20  1      OPC=nop                  
  movl (%r15,%rsi,1), %r8d             #  18    0x28  4      OPC=movl_r32_m32           nop                                  #  18    0x21  1      OPC=nop                  
  nop                                  #  19    0x2c  1      OPC=nop                    jne .L_126860                        #  19    0x22  6      OPC=jne_label_1          
  andb $0x80, %dil                     #  20    0x2d  4      OPC=andb_r8_imm8           nop                                  #  20    0x28  1      OPC=nop                  
  jne .L_126860                        #  21    0x31  6      OPC=jne_label_1            nop                                  #  21    0x29  1      OPC=nop                  
  nop                                  #  22    0x37  1      OPC=nop                    nop                                  #  22    0x2a  1      OPC=nop                  
  nop                                  #  23    0x38  1      OPC=nop                    nop                                  #  23    0x2b  1      OPC=nop                  
  nop                                  #  24    0x39  1      OPC=nop                    nop                                  #  24    0x2c  1      OPC=nop                  
  nop                                  #  25    0x3a  1      OPC=nop                    nop                                  #  25    0x2d  1      OPC=nop                  
  nop                                  #  26    0x3b  1      OPC=nop                    nop                                  #  26    0x2e  1      OPC=nop                  
  nop                                  #  27    0x3c  1      OPC=nop                    nop                                  #  27    0x2f  1      OPC=nop                  
  nop                                  #  28    0x3d  1      OPC=nop                    subl %esp, %esi                      #  28    0x30  2      OPC=subl_r32_r32         
  nop                                  #  29    0x3e  1      OPC=nop                    movl (%r15,%rsi,1), %r8d             #  29    0x32  4      OPC=movl_r32_m32         
  nop                                  #  30    0x3f  1      OPC=nop                    andb $0x80, %dil                     #  30    0x36  4      OPC=andb_r8_imm8         
.L_126820:                             #        0x40  0      OPC=<label>                jne .L_126860                        #  31    0x3a  6      OPC=jne_label_1          
  orw %bp, %cx                         #  31    0x40  3      OPC=orw_r16_r16          .L_126820:                             #        0x40  0      OPC=<label>              
  movl %r8d, (%r15,%rcx,1)             #  32    0x43  4      OPC=movl_m32_r32           movl %ecx, %ecx                      #  32    0x40  2      OPC=movl_r32_r32         
  addl $0x4, %edx                      #  33    0x47  6      OPC=addl_r32_imm32         movl %r8d, (%r15,%rcx,1)             #  33    0x42  4      OPC=movl_m32_r32         
  movl (%r15,%rdx,1), %r8d             #  34    0x4d  4      OPC=movl_r32_m32           addl $0x4, %edx                      #  34    0x46  3      OPC=addl_r32_imm8        
  addw $0x4, %cx                       #  35    0x51  4      OPC=addw_r16_imm8          movl (%r15,%rdx,1), %r8d             #  35    0x49  4      OPC=movl_r32_m32         
  leal -0x1010101(%r8), %esi           #  36    0x55  7      OPC=leal_r32_m32           movl %r8d, %r9d                      #  36    0x4d  3      OPC=movl_r32_r32_1       
  movl %r8d, %r9d                      #  37    0x5c  3      OPC=movl_r32_r32           notq %r9                             #  37    0x50  3      OPC=notq_r64             
  notq %r9                             #  38    0x5f  3      OPC=notq_r64               leaq -0x1010101(%r8), %rsi           #  38    0x53  7      OPC=leaq_r64_m32         
  andq $0x80808080, %r9                #  39    0x62  7      OPC=andq_r64_imm32         addl $0x4, %ecx                      #  39    0x5a  6      OPC=addl_r32_imm32       
  andl %esi, %r9d                      #  40    0x69  3      OPC=andl_r32_r32_1         andq $0x80808080, %r9                #  40    0x60  7      OPC=andq_r64_imm32       
  je .L_126820                         #  41    0x6c  6      OPC=je_label_1             andq %rsi, %r9                       #  41    0x67  3      OPC=andq_r64_r64_1       
  nop                                  #  42    0x72  1      OPC=nop                    je .L_126820                         #  42    0x6a  6      OPC=je_label_1           
  nop                                  #  43    0x73  1      OPC=nop                    nop                                  #  43    0x70  1      OPC=nop                  
  nop                                  #  44    0x74  1      OPC=nop                    nop                                  #  44    0x71  1      OPC=nop                  
  nop                                  #  45    0x75  1      OPC=nop                    nop                                  #  45    0x72  1      OPC=nop                  
  nop                                  #  46    0x76  1      OPC=nop                    nop                                  #  46    0x73  1      OPC=nop                  
  nop                                  #  47    0x77  1      OPC=nop                    nop                                  #  47    0x74  1      OPC=nop                  
  nop                                  #  48    0x78  1      OPC=nop                    nop                                  #  48    0x75  1      OPC=nop                  
  nop                                  #  49    0x79  1      OPC=nop                    nop                                  #  49    0x76  1      OPC=nop                  
  nop                                  #  50    0x7a  1      OPC=nop                    nop                                  #  50    0x77  1      OPC=nop                  
  nop                                  #  51    0x7b  1      OPC=nop                    nop                                  #  51    0x78  1      OPC=nop                  
  nop                                  #  52    0x7c  1      OPC=nop                    nop                                  #  52    0x79  1      OPC=nop                  
  nop                                  #  53    0x7d  1      OPC=nop                    nop                                  #  53    0x7a  1      OPC=nop                  
  nop                                  #  54    0x7e  1      OPC=nop                    nop                                  #  54    0x7b  1      OPC=nop                  
.L_126860:                             #        0x7f  0      OPC=<label>                nop                                  #  55    0x7c  1      OPC=nop                  
  incl %edx                            #  55    0x7f  2      OPC=incl_r32               nop                                  #  56    0x7d  1      OPC=nop                  
  movsbq -0x1(%r15,%rdx,1), %rsi       #  56    0x81  6      OPC=movsbq_r64_m8          nop                                  #  57    0x7e  1      OPC=nop                  
  addq $0x1, %rcx                      #  57    0x87  7      OPC=addq_r64_imm32         nop                                  #  58    0x7f  1      OPC=nop                  
  movb %sil, -0x1(%r15,%rcx,1)         #  58    0x8e  5      OPC=movb_m8_r8           .L_126860:                             #        0x80  0      OPC=<label>              
  testb %sil, %sil                     #  59    0x93  3      OPC=testb_r8_r8            orl %ebp, %edx                       #  59    0x80  2      OPC=orl_r32_r32_1        
  jne .L_126860                        #  60    0x96  6      OPC=jne_label_1            movzbq (%r15,%rdx,1), %rsi           #  60    0x82  5      OPC=movzbq_r64_m8        
  nop                                  #  61    0x9c  1      OPC=nop                    xorl %esp, %ecx                      #  61    0x87  2      OPC=xorl_r32_r32         
  nop                                  #  62    0x9d  1      OPC=nop                    movb %sil, (%r15,%rcx,1)             #  62    0x89  4      OPC=movb_m8_r8           
  nop                                  #  63    0x9e  1      OPC=nop                    addl $0x1, %ecx                      #  63    0x8d  6      OPC=addl_r32_imm32       
  nop                                  #  64    0x9f  1      OPC=nop                    addq $0x1, %rdx                      #  64    0x93  4      OPC=addq_r64_imm8        
  nop                                  #  65    0xa0  1      OPC=nop                    testb %sil, %sil                     #  65    0x97  3      OPC=testb_r8_r8          
  nop                                  #  66    0xa1  1      OPC=nop                    jne .L_126860                        #  66    0x9a  6      OPC=jne_label_1          
  nop                                  #  67    0xa2  1      OPC=nop                    nop                                  #  67    0xa0  1      OPC=nop                  
  nop                                  #  68    0xa3  1      OPC=nop                    nop                                  #  68    0xa1  1      OPC=nop                  
  nop                                  #  69    0xa4  1      OPC=nop                    nop                                  #  69    0xa2  1      OPC=nop                  
  nop                                  #  70    0xa5  1      OPC=nop                    nop                                  #  70    0xa3  1      OPC=nop                  
  nop                                  #  71    0xa6  1      OPC=nop                    nop                                  #  71    0xa4  1      OPC=nop                  
  nop                                  #  72    0xa7  1      OPC=nop                    nop                                  #  72    0xa5  1      OPC=nop                  
  popq %r11                            #  73    0xa8  2      OPC=popq_r64_1             nop                                  #  73    0xa6  1      OPC=nop                  
  andl $0xe0, %r11d                    #  74    0xaa  4      OPC=andl_r32_imm8          nop                                  #  74    0xa7  1      OPC=nop                  
  addq %r15, %r11                      #  75    0xae  3      OPC=addq_r64_r64           popq %r11                            #  75    0xa8  2      OPC=popq_r64_1           
  jmpq %r11                            #  76    0xb1  3      OPC=jmpq_r64               andl $0xe0, %r11d                    #  76    0xaa  4      OPC=andl_r32_imm8        
                                                                                        addq %r15, %r11                      #  77    0xae  3      OPC=addq_r64_r64         
.size strcpy, .-strcpy                                                                  jmpq %r11                            #  78    0xb1  3      OPC=jmpq_r64             
                                                                                                                                                                            
                                                                                      .size strcpy, .-strcpy                                                                
                                                                                                                                                                            

********************************************************************************

Progress Update: 

Lowest Cost Discovered (171)                                                          Lowest Known Correct Cost (193)                                                       
                                                                                                                                                                            
  .text                                                                                 .text                                                                               
  .globl strcpy                                                                         .globl strcpy                                                                       
  .type strcpy, @function                                                               .type strcpy, @function                                                             
                                                                                                                                                                            
#! file-offset 0                                                                      #! file-offset 0                                                                      
#! rip-offset  0                                                                      #! rip-offset  0                                                                      
#! capacity    0 bytes                                                                #! capacity    0 bytes                                                                
                                                                                                                                                                            
# Text                                 #  Line  RIP   Bytes  Opcode                   # Text                                 #  Line  RIP   Bytes  Opcode                   
.strcpy:                               #        0     0      OPC=<label>              .strcpy:                               #        0     0      OPC=<label>              
  nop                                  #  1     0     1      OPC=nop                    movl %edi, %ecx                      #  1     0     2      OPC=movl_r32_r32_1       
  nop                                  #  2     0x1   1      OPC=nop                    movw %si, %di                        #  2     0x2   3      OPC=movw_r16_r16         
  movl %edi, %ecx                      #  3     0x2   2      OPC=movl_r32_r32           nop                                  #  3     0x5   1      OPC=nop                  
  nop                                  #  4     0x4   1      OPC=nop                    nop                                  #  4     0x6   1      OPC=nop                  
  movw %si, %di                        #  5     0x5   3      OPC=movw_r16_r16           nop                                  #  5     0x7   1      OPC=nop                  
  subl %ecx, %edi                      #  6     0x8   2      OPC=subl_r32_r32_1         movl %ecx, %eax                      #  6     0x8   2      OPC=movl_r32_r32_1       
  movl %esi, %edx                      #  7     0xa   2      OPC=movl_r32_r32           nop                                  #  7     0xa   1      OPC=nop                  
  nop                                  #  8     0xc   1      OPC=nop                    nop                                  #  8     0xb   1      OPC=nop                  
  nop                                  #  9     0xd   1      OPC=nop                    nop                                  #  9     0xc   1      OPC=nop                  
  nop                                  #  10    0xe   1      OPC=nop                    nop                                  #  10    0xd   1      OPC=nop                  
  nop                                  #  11    0xf   1      OPC=nop                    addb %al, %dil                       #  11    0xe   3      OPC=addb_r8_r8_1         
  movl %ecx, %eax                      #  12    0x10  2      OPC=movl_r32_r32           andl $0x6, %edi                      #  12    0x11  3      OPC=andl_r32_imm8        
  andw $0x5, %di                       #  13    0x12  4      OPC=andw_r16_imm8          leaq -0x7f7f7f80(%rcx,%rcx,8), %rdi  #  13    0x14  8      OPC=leaq_r64_m32         
  leaq -0x7f7f7f80(%rcx,%rcx,8), %rdi  #  14    0x16  8      OPC=leaq_r64_m32           movl %esi, %edx                      #  14    0x1c  2      OPC=movl_r32_r32         
  nop                                  #  15    0x1e  1      OPC=nop                    nop                                  #  15    0x1e  1      OPC=nop                  
  nop                                  #  16    0x1f  1      OPC=nop                    nop                                  #  16    0x1f  1      OPC=nop                  
  nop                                  #  17    0x20  1      OPC=nop                    nop                                  #  17    0x20  1      OPC=nop                  
  jne .L_126860                        #  18    0x21  6      OPC=jne_label_1            nop                                  #  18    0x21  1      OPC=nop                  
  addl %esp, %esi                      #  19    0x27  2      OPC=addl_r32_r32           jne .L_126860                        #  19    0x22  6      OPC=jne_label_1          
  movl (%r15,%rsi,1), %r8d             #  20    0x29  4      OPC=movl_r32_m32           nop                                  #  20    0x28  1      OPC=nop                  
  nop                                  #  21    0x2d  1      OPC=nop                    nop                                  #  21    0x29  1      OPC=nop                  
  nop                                  #  22    0x2e  1      OPC=nop                    nop                                  #  22    0x2a  1      OPC=nop                  
  nop                                  #  23    0x2f  1      OPC=nop                    nop                                  #  23    0x2b  1      OPC=nop                  
  nop                                  #  24    0x30  1      OPC=nop                    nop                                  #  24    0x2c  1      OPC=nop                  
  nop                                  #  25    0x31  1      OPC=nop                    nop                                  #  25    0x2d  1      OPC=nop                  
  nop                                  #  26    0x32  1      OPC=nop                    nop                                  #  26    0x2e  1      OPC=nop                  
  andb $0x80, %dil                     #  27    0x33  4      OPC=andb_r8_imm8           nop                                  #  27    0x2f  1      OPC=nop                  
  jne .L_126860                        #  28    0x37  6      OPC=jne_label_1            subl %esp, %esi                      #  28    0x30  2      OPC=subl_r32_r32         
  nop                                  #  29    0x3d  1      OPC=nop                    movl (%r15,%rsi,1), %r8d             #  29    0x32  4      OPC=movl_r32_m32         
  nop                                  #  30    0x3e  1      OPC=nop                    andb $0x80, %dil                     #  30    0x36  4      OPC=andb_r8_imm8         
  nop                                  #  31    0x3f  1      OPC=nop                    jne .L_126860                        #  31    0x3a  6      OPC=jne_label_1          
.L_126820:                             #        0x40  0      OPC=<label>              .L_126820:                             #        0x40  0      OPC=<label>              
  orl %ebp, %ecx                       #  32    0x40  2      OPC=orl_r32_r32_1          movl %ecx, %ecx                      #  32    0x40  2      OPC=movl_r32_r32         
  movl %r8d, (%r15,%rcx,1)             #  33    0x42  4      OPC=movl_m32_r32           movl %r8d, (%r15,%rcx,1)             #  33    0x42  4      OPC=movl_m32_r32         
  addl $0x4, %edx                      #  34    0x46  6      OPC=addl_r32_imm32         addl $0x4, %edx                      #  34    0x46  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %r8d             #  35    0x4c  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %r8d             #  35    0x49  4      OPC=movl_r32_m32         
  addq $0x4, %rcx                      #  36    0x50  4      OPC=addq_r64_imm8          movl %r8d, %r9d                      #  36    0x4d  3      OPC=movl_r32_r32_1       
  leaq -0x1010101(%r8), %rsi           #  37    0x54  7      OPC=leaq_r64_m32           notq %r9                             #  37    0x50  3      OPC=notq_r64             
  movl %r8d, %r9d                      #  38    0x5b  3      OPC=movl_r32_r32           leaq -0x1010101(%r8), %rsi           #  38    0x53  7      OPC=leaq_r64_m32         
  notq %r9                             #  39    0x5e  3      OPC=notq_r64               addl $0x4, %ecx                      #  39    0x5a  6      OPC=addl_r32_imm32       
  andl %esi, %r9d                      #  40    0x61  3      OPC=andl_r32_r32_1         andq $0x80808080, %r9                #  40    0x60  7      OPC=andq_r64_imm32       
  andq $0x80808080, %r9                #  41    0x64  7      OPC=andq_r64_imm32         andq %rsi, %r9                       #  41    0x67  3      OPC=andq_r64_r64_1       
  je .L_126820                         #  42    0x6b  6      OPC=je_label_1             je .L_126820                         #  42    0x6a  6      OPC=je_label_1           
  nop                                  #  43    0x71  1      OPC=nop                    nop                                  #  43    0x70  1      OPC=nop                  
  nop                                  #  44    0x72  1      OPC=nop                    nop                                  #  44    0x71  1      OPC=nop                  
  nop                                  #  45    0x73  1      OPC=nop                    nop                                  #  45    0x72  1      OPC=nop                  
  nop                                  #  46    0x74  1      OPC=nop                    nop                                  #  46    0x73  1      OPC=nop                  
  nop                                  #  47    0x75  1      OPC=nop                    nop                                  #  47    0x74  1      OPC=nop                  
  nop                                  #  48    0x76  1      OPC=nop                    nop                                  #  48    0x75  1      OPC=nop                  
  nop                                  #  49    0x77  1      OPC=nop                    nop                                  #  49    0x76  1      OPC=nop                  
  nop                                  #  50    0x78  1      OPC=nop                    nop                                  #  50    0x77  1      OPC=nop                  
  nop                                  #  51    0x79  1      OPC=nop                    nop                                  #  51    0x78  1      OPC=nop                  
  nop                                  #  52    0x7a  1      OPC=nop                    nop                                  #  52    0x79  1      OPC=nop                  
  nop                                  #  53    0x7b  1      OPC=nop                    nop                                  #  53    0x7a  1      OPC=nop                  
  nop                                  #  54    0x7c  1      OPC=nop                    nop                                  #  54    0x7b  1      OPC=nop                  
  nop                                  #  55    0x7d  1      OPC=nop                    nop                                  #  55    0x7c  1      OPC=nop                  
.L_126860:                             #        0x7e  0      OPC=<label>                nop                                  #  56    0x7d  1      OPC=nop                  
  incl %edx                            #  56    0x7e  2      OPC=incl_r32               nop                                  #  57    0x7e  1      OPC=nop                  
  movzbw -0x1(%r15,%rdx,1), %si        #  57    0x80  7      OPC=movzbw_r16_m8          nop                                  #  58    0x7f  1      OPC=nop                  
  addl $0x1, %ecx                      #  58    0x87  6      OPC=addl_r32_imm32       .L_126860:                             #        0x80  0      OPC=<label>              
  movb %sil, -0x1(%r15,%rcx,1)         #  59    0x8d  5      OPC=movb_m8_r8             orl %ebp, %edx                       #  59    0x80  2      OPC=orl_r32_r32_1        
  testb %sil, %sil                     #  60    0x92  3      OPC=testb_r8_r8            movzbq (%r15,%rdx,1), %rsi           #  60    0x82  5      OPC=movzbq_r64_m8        
  jne .L_126860                        #  61    0x95  6      OPC=jne_label_1            xorl %esp, %ecx                      #  61    0x87  2      OPC=xorl_r32_r32         
  nop                                  #  62    0x9b  1      OPC=nop                    movb %sil, (%r15,%rcx,1)             #  62    0x89  4      OPC=movb_m8_r8           
  nop                                  #  63    0x9c  1      OPC=nop                    addl $0x1, %ecx                      #  63    0x8d  6      OPC=addl_r32_imm32       
  nop                                  #  64    0x9d  1      OPC=nop                    addq $0x1, %rdx                      #  64    0x93  4      OPC=addq_r64_imm8        
  nop                                  #  65    0x9e  1      OPC=nop                    testb %sil, %sil                     #  65    0x97  3      OPC=testb_r8_r8          
  nop                                  #  66    0x9f  1      OPC=nop                    jne .L_126860                        #  66    0x9a  6      OPC=jne_label_1          
  nop                                  #  67    0xa0  1      OPC=nop                    nop                                  #  67    0xa0  1      OPC=nop                  
  nop                                  #  68    0xa1  1      OPC=nop                    nop                                  #  68    0xa1  1      OPC=nop                  
  nop                                  #  69    0xa2  1      OPC=nop                    nop                                  #  69    0xa2  1      OPC=nop                  
  nop                                  #  70    0xa3  1      OPC=nop                    nop                                  #  70    0xa3  1      OPC=nop                  
  nop                                  #  71    0xa4  1      OPC=nop                    nop                                  #  71    0xa4  1      OPC=nop                  
  nop                                  #  72    0xa5  1      OPC=nop                    nop                                  #  72    0xa5  1      OPC=nop                  
  nop                                  #  73    0xa6  1      OPC=nop                    nop                                  #  73    0xa6  1      OPC=nop                  
  nop                                  #  74    0xa7  1      OPC=nop                    nop                                  #  74    0xa7  1      OPC=nop                  
  nop                                  #  75    0xa8  1      OPC=nop                    popq %r11                            #  75    0xa8  2      OPC=popq_r64_1           
  nop                                  #  76    0xa9  1      OPC=nop                    andl $0xe0, %r11d                    #  76    0xaa  4      OPC=andl_r32_imm8        
  nop                                  #  77    0xaa  1      OPC=nop                    addq %r15, %r11                      #  77    0xae  3      OPC=addq_r64_r64         
  popq %r11                            #  78    0xab  2      OPC=popq_r64_1             jmpq %r11                            #  78    0xb1  3      OPC=jmpq_r64             
  andl $0xe0, %r11d                    #  79    0xad  4      OPC=andl_r32_imm8                                                                                              
  addq %r15, %r11                      #  80    0xb1  3      OPC=addq_r64_r64         .size strcpy, .-strcpy                                                                
  jmpq %r11                            #  81    0xb4  3      OPC=jmpq_r64                                                                                                   
                                                                                                                                                                            
.size strcpy, .-strcpy                                                                                                                                                      
                                                                                                                                                                            

********************************************************************************

Progress Update: 

Lowest Cost Discovered (170)                                                         Lowest Known Correct Cost (193)                                                       
                                                                                                                                                                           
  .text                                                                                .text                                                                               
  .globl strcpy                                                                        .globl strcpy                                                                       
  .type strcpy, @function                                                              .type strcpy, @function                                                             
                                                                                                                                                                           
#! file-offset 0                                                                     #! file-offset 0                                                                      
#! rip-offset  0                                                                     #! rip-offset  0                                                                      
#! capacity    0 bytes                                                               #! capacity    0 bytes                                                                
                                                                                                                                                                           
# Text                                #  Line  RIP   Bytes  Opcode                   # Text                                 #  Line  RIP   Bytes  Opcode                   
.strcpy:                              #        0     0      OPC=<label>              .strcpy:                               #        0     0      OPC=<label>              
  nop                                 #  1     0     1      OPC=nop                    movl %edi, %ecx                      #  1     0     2      OPC=movl_r32_r32_1       
  movl %edi, %ecx                     #  2     0x1   2      OPC=movl_r32_r32           movw %si, %di                        #  2     0x2   3      OPC=movw_r16_r16         
  nop                                 #  3     0x3   1      OPC=nop                    nop                                  #  3     0x5   1      OPC=nop                  
  nop                                 #  4     0x4   1      OPC=nop                    nop                                  #  4     0x6   1      OPC=nop                  
  nop                                 #  5     0x5   1      OPC=nop                    nop                                  #  5     0x7   1      OPC=nop                  
  nop                                 #  6     0x6   1      OPC=nop                    movl %ecx, %eax                      #  6     0x8   2      OPC=movl_r32_r32_1       
  nop                                 #  7     0x7   1      OPC=nop                    nop                                  #  7     0xa   1      OPC=nop                  
  nop                                 #  8     0x8   1      OPC=nop                    nop                                  #  8     0xb   1      OPC=nop                  
  movw %si, %di                       #  9     0x9   3      OPC=movw_r16_r16_1         nop                                  #  9     0xc   1      OPC=nop                  
  subl %ecx, %edi                     #  10    0xc   2      OPC=subl_r32_r32_1         nop                                  #  10    0xd   1      OPC=nop                  
  movl %esi, %edx                     #  11    0xe   2      OPC=movl_r32_r32           addb %al, %dil                       #  11    0xe   3      OPC=addb_r8_r8_1         
  nop                                 #  12    0x10  1      OPC=nop                    andl $0x6, %edi                      #  12    0x11  3      OPC=andl_r32_imm8        
  nop                                 #  13    0x11  1      OPC=nop                    leaq -0x7f7f7f80(%rcx,%rcx,8), %rdi  #  13    0x14  8      OPC=leaq_r64_m32         
  nop                                 #  14    0x12  1      OPC=nop                    movl %esi, %edx                      #  14    0x1c  2      OPC=movl_r32_r32         
  andw $0x5, %di                      #  15    0x13  4      OPC=andw_r16_imm8          nop                                  #  15    0x1e  1      OPC=nop                  
  nop                                 #  16    0x17  1      OPC=nop                    nop                                  #  16    0x1f  1      OPC=nop                  
  movl %ecx, %eax                     #  17    0x18  2      OPC=movl_r32_r32           nop                                  #  17    0x20  1      OPC=nop                  
  jne .L_126860                       #  18    0x1a  6      OPC=jne_label_1            nop                                  #  18    0x21  1      OPC=nop                  
  leaw -0x7f7f7f80(%rcx,%rcx,8), %di  #  19    0x20  8      OPC=leaw_r16_m64           jne .L_126860                        #  19    0x22  6      OPC=jne_label_1          
  orl %ebp, %esi                      #  20    0x28  2      OPC=orl_r32_r32            nop                                  #  20    0x28  1      OPC=nop                  
  movl (%r15,%rsi,1), %r8d            #  21    0x2a  4      OPC=movl_r32_m32           nop                                  #  21    0x29  1      OPC=nop                  
  nop                                 #  22    0x2e  1      OPC=nop                    nop                                  #  22    0x2a  1      OPC=nop                  
  nop                                 #  23    0x2f  1      OPC=nop                    nop                                  #  23    0x2b  1      OPC=nop                  
  nop                                 #  24    0x30  1      OPC=nop                    nop                                  #  24    0x2c  1      OPC=nop                  
  nop                                 #  25    0x31  1      OPC=nop                    nop                                  #  25    0x2d  1      OPC=nop                  
  nop                                 #  26    0x32  1      OPC=nop                    nop                                  #  26    0x2e  1      OPC=nop                  
  nop                                 #  27    0x33  1      OPC=nop                    nop                                  #  27    0x2f  1      OPC=nop                  
  nop                                 #  28    0x34  1      OPC=nop                    subl %esp, %esi                      #  28    0x30  2      OPC=subl_r32_r32         
  nop                                 #  29    0x35  1      OPC=nop                    movl (%r15,%rsi,1), %r8d             #  29    0x32  4      OPC=movl_r32_m32         
  andb $0x80, %dil                    #  30    0x36  4      OPC=andb_r8_imm8           andb $0x80, %dil                     #  30    0x36  4      OPC=andb_r8_imm8         
  jne .L_126860                       #  31    0x3a  6      OPC=jne_label_1            jne .L_126860                        #  31    0x3a  6      OPC=jne_label_1          
.L_126820:                            #        0x40  0      OPC=<label>              .L_126820:                             #        0x40  0      OPC=<label>              
  orl %ebp, %ecx                      #  32    0x40  2      OPC=orl_r32_r32_1          movl %ecx, %ecx                      #  32    0x40  2      OPC=movl_r32_r32         
  movl %r8d, (%r15,%rcx,1)            #  33    0x42  4      OPC=movl_m32_r32           movl %r8d, (%r15,%rcx,1)             #  33    0x42  4      OPC=movl_m32_r32         
  addl $0x4, %edx                     #  34    0x46  6      OPC=addl_r32_imm32         addl $0x4, %edx                      #  34    0x46  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %r8d            #  35    0x4c  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %r8d             #  35    0x49  4      OPC=movl_r32_m32         
  addq $0x4, %rcx                     #  36    0x50  4      OPC=addq_r64_imm8          movl %r8d, %r9d                      #  36    0x4d  3      OPC=movl_r32_r32_1       
  movl %r8d, %r9d                     #  37    0x54  3      OPC=movl_r32_r32           notq %r9                             #  37    0x50  3      OPC=notq_r64             
  leaq -0x1010101(%r8), %rsi          #  38    0x57  7      OPC=leaq_r64_m32           leaq -0x1010101(%r8), %rsi           #  38    0x53  7      OPC=leaq_r64_m32         
  notq %r9                            #  39    0x5e  3      OPC=notq_r64               addl $0x4, %ecx                      #  39    0x5a  6      OPC=addl_r32_imm32       
  andl %esi, %r9d                     #  40    0x61  3      OPC=andl_r32_r32_1         andq $0x80808080, %r9                #  40    0x60  7      OPC=andq_r64_imm32       
  andq $0x80808080, %r9               #  41    0x64  7      OPC=andq_r64_imm32         andq %rsi, %r9                       #  41    0x67  3      OPC=andq_r64_r64_1       
  je .L_126820                        #  42    0x6b  6      OPC=je_label_1             je .L_126820                         #  42    0x6a  6      OPC=je_label_1           
  nop                                 #  43    0x71  1      OPC=nop                    nop                                  #  43    0x70  1      OPC=nop                  
  nop                                 #  44    0x72  1      OPC=nop                    nop                                  #  44    0x71  1      OPC=nop                  
  nop                                 #  45    0x73  1      OPC=nop                    nop                                  #  45    0x72  1      OPC=nop                  
  nop                                 #  46    0x74  1      OPC=nop                    nop                                  #  46    0x73  1      OPC=nop                  
  nop                                 #  47    0x75  1      OPC=nop                    nop                                  #  47    0x74  1      OPC=nop                  
  nop                                 #  48    0x76  1      OPC=nop                    nop                                  #  48    0x75  1      OPC=nop                  
  nop                                 #  49    0x77  1      OPC=nop                    nop                                  #  49    0x76  1      OPC=nop                  
  nop                                 #  50    0x78  1      OPC=nop                    nop                                  #  50    0x77  1      OPC=nop                  
  nop                                 #  51    0x79  1      OPC=nop                    nop                                  #  51    0x78  1      OPC=nop                  
  nop                                 #  52    0x7a  1      OPC=nop                    nop                                  #  52    0x79  1      OPC=nop                  
  nop                                 #  53    0x7b  1      OPC=nop                    nop                                  #  53    0x7a  1      OPC=nop                  
  nop                                 #  54    0x7c  1      OPC=nop                    nop                                  #  54    0x7b  1      OPC=nop                  
  nop                                 #  55    0x7d  1      OPC=nop                    nop                                  #  55    0x7c  1      OPC=nop                  
.L_126860:                            #        0x7e  0      OPC=<label>                nop                                  #  56    0x7d  1      OPC=nop                  
  incl %edx                           #  56    0x7e  2      OPC=incl_r32               nop                                  #  57    0x7e  1      OPC=nop                  
  movzbw -0x1(%r15,%rdx,1), %si       #  57    0x80  7      OPC=movzbw_r16_m8          nop                                  #  58    0x7f  1      OPC=nop                  
  addl $0x1, %ecx                     #  58    0x87  6      OPC=addl_r32_imm32       .L_126860:                             #        0x80  0      OPC=<label>              
  movb %sil, -0x1(%r15,%rcx,1)        #  59    0x8d  5      OPC=movb_m8_r8             orl %ebp, %edx                       #  59    0x80  2      OPC=orl_r32_r32_1        
  testb %sil, %sil                    #  60    0x92  3      OPC=testb_r8_r8            movzbq (%r15,%rdx,1), %rsi           #  60    0x82  5      OPC=movzbq_r64_m8        
  jne .L_126860                       #  61    0x95  6      OPC=jne_label_1            xorl %esp, %ecx                      #  61    0x87  2      OPC=xorl_r32_r32         
  nop                                 #  62    0x9b  1      OPC=nop                    movb %sil, (%r15,%rcx,1)             #  62    0x89  4      OPC=movb_m8_r8           
  nop                                 #  63    0x9c  1      OPC=nop                    addl $0x1, %ecx                      #  63    0x8d  6      OPC=addl_r32_imm32       
  nop                                 #  64    0x9d  1      OPC=nop                    addq $0x1, %rdx                      #  64    0x93  4      OPC=addq_r64_imm8        
  nop                                 #  65    0x9e  1      OPC=nop                    testb %sil, %sil                     #  65    0x97  3      OPC=testb_r8_r8          
  nop                                 #  66    0x9f  1      OPC=nop                    jne .L_126860                        #  66    0x9a  6      OPC=jne_label_1          
  nop                                 #  67    0xa0  1      OPC=nop                    nop                                  #  67    0xa0  1      OPC=nop                  
  popq %r11                           #  68    0xa1  2      OPC=popq_r64_1             nop                                  #  68    0xa1  1      OPC=nop                  
  andl $0xe0, %r11d                   #  69    0xa3  4      OPC=andl_r32_imm8          nop                                  #  69    0xa2  1      OPC=nop                  
  addq %r15, %r11                     #  70    0xa7  3      OPC=addq_r64_r64           nop                                  #  70    0xa3  1      OPC=nop                  
  jmpq %r11                           #  71    0xaa  3      OPC=jmpq_r64               nop                                  #  71    0xa4  1      OPC=nop                  
                                                                                       nop                                  #  72    0xa5  1      OPC=nop                  
.size strcpy, .-strcpy                                                                 nop                                  #  73    0xa6  1      OPC=nop                  
                                                                                       nop                                  #  74    0xa7  1      OPC=nop                  
                                                                                       popq %r11                            #  75    0xa8  2      OPC=popq_r64_1           
                                                                                       andl $0xe0, %r11d                    #  76    0xaa  4      OPC=andl_r32_imm8        
                                                                                       addq %r15, %r11                      #  77    0xae  3      OPC=addq_r64_r64         
                                                                                       jmpq %r11                            #  78    0xb1  3      OPC=jmpq_r64             
                                                                                                                                                                           
                                                                                     .size strcpy, .-strcpy                                                                
                                                                                                                                                                           

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  201.398s
Iterations/s:                  993.057

Starting cost:                 221
Lowest cost:                   170
Lowest correct cost:           193

Move Type       Proposed     Succeeded     Accepted     
                                                        
ReplaceNop      8.3155%      7.1855%       5.12%        
Rotate          8.394%       6.3475%       2.325%       
Global Swap     8.229%       5.613%        3.1435%      
Global Copy     8.327%       6.951%        6.951%       
Opcode          8.3715%      7.226%        5.8015%      
Instruction     8.415%       3.743%        0.137%       
Add Nops        8.177%       8.177%        3.6085%      
Operand         8.389%       5.3455%       0.7255%      
Local Swap      8.3795%      4.9505%       3.218%       
OpcodeWidth     8.369%       6.494%        5.391%       
Delete          8.413%       7.2735%       3.7485%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.2205%      4.8405%       0.003%       
                                                        
Total           100%         74.147%       40.1725%     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (169)                                                          Lowest Known Correct Cost (169)                                                       
                                                                                                                                                                            
  .text                                                                                 .text                                                                               
  .globl strcpy                                                                         .globl strcpy                                                                       
  .type strcpy, @function                                                               .type strcpy, @function                                                             
                                                                                                                                                                            
#! file-offset 0                                                                      #! file-offset 0                                                                      
#! rip-offset  0                                                                      #! rip-offset  0                                                                      
#! capacity    0 bytes                                                                #! capacity    0 bytes                                                                
                                                                                                                                                                            
# Text                                 #  Line  RIP   Bytes  Opcode                   # Text                                 #  Line  RIP   Bytes  Opcode                   
.strcpy:                               #        0     0      OPC=<label>              .strcpy:                               #        0     0      OPC=<label>              
  movq %rdi, %rcx                      #  1     0     3      OPC=movq_r64_r64           movq %rdi, %rcx                      #  1     0     3      OPC=movq_r64_r64         
  nop                                  #  2     0x3   1      OPC=nop                    nop                                  #  2     0x3   1      OPC=nop                  
  nop                                  #  3     0x4   1      OPC=nop                    nop                                  #  3     0x4   1      OPC=nop                  
  nop                                  #  4     0x5   1      OPC=nop                    nop                                  #  4     0x5   1      OPC=nop                  
  nop                                  #  5     0x6   1      OPC=nop                    nop                                  #  5     0x6   1      OPC=nop                  
  nop                                  #  6     0x7   1      OPC=nop                    nop                                  #  6     0x7   1      OPC=nop                  
  movl %esi, %edx                      #  7     0x8   2      OPC=movl_r32_r32           movl %esi, %edx                      #  7     0x8   2      OPC=movl_r32_r32         
  nop                                  #  8     0xa   1      OPC=nop                    nop                                  #  8     0xa   1      OPC=nop                  
  movq %rdi, %rax                      #  9     0xb   3      OPC=movq_r64_r64_1         movq %rdi, %rax                      #  9     0xb   3      OPC=movq_r64_r64_1       
  nop                                  #  10    0xe   1      OPC=nop                    nop                                  #  10    0xe   1      OPC=nop                  
  nop                                  #  11    0xf   1      OPC=nop                    nop                                  #  11    0xf   1      OPC=nop                  
  movq %rsi, %rdi                      #  12    0x10  3      OPC=movq_r64_r64           movq %rsi, %rdi                      #  12    0x10  3      OPC=movq_r64_r64         
  addb %cl, %dil                       #  13    0x13  3      OPC=addb_r8_r8_1           addb %cl, %dil                       #  13    0x13  3      OPC=addb_r8_r8_1         
  shlb $0x5, %dil                      #  14    0x16  4      OPC=shlb_r8_imm8           shlb $0x5, %dil                      #  14    0x16  4      OPC=shlb_r8_imm8         
  jne .L_126860                        #  15    0x1a  6      OPC=jne_label_1            jne .L_126860                        #  15    0x1a  6      OPC=jne_label_1          
  nop                                  #  16    0x20  1      OPC=nop                    nop                                  #  16    0x20  1      OPC=nop                  
  leaq -0x7f7f7f80(%rcx,%rcx,8), %rdi  #  17    0x21  8      OPC=leaq_r64_m16           leaq -0x7f7f7f80(%rcx,%rcx,8), %rdi  #  17    0x21  8      OPC=leaq_r64_m16         
  nop                                  #  18    0x29  1      OPC=nop                    nop                                  #  18    0x29  1      OPC=nop                  
  nop                                  #  19    0x2a  1      OPC=nop                    nop                                  #  19    0x2a  1      OPC=nop                  
  nop                                  #  20    0x2b  1      OPC=nop                    nop                                  #  20    0x2b  1      OPC=nop                  
  orl %esi, %esi                       #  21    0x2c  2      OPC=orl_r32_r32            orl %esi, %esi                       #  21    0x2c  2      OPC=orl_r32_r32          
  movl (%r15,%rsi,1), %r8d             #  22    0x2e  4      OPC=movl_r32_m32           movl (%r15,%rsi,1), %r8d             #  22    0x2e  4      OPC=movl_r32_m32         
  andb $0x80, %dil                     #  23    0x32  4      OPC=andb_r8_imm8           andb $0x80, %dil                     #  23    0x32  4      OPC=andb_r8_imm8         
  nop                                  #  24    0x36  1      OPC=nop                    nop                                  #  24    0x36  1      OPC=nop                  
  nop                                  #  25    0x37  1      OPC=nop                    nop                                  #  25    0x37  1      OPC=nop                  
  nop                                  #  26    0x38  1      OPC=nop                    nop                                  #  26    0x38  1      OPC=nop                  
  jne .L_126860                        #  27    0x39  6      OPC=jne_label_1            jne .L_126860                        #  27    0x39  6      OPC=jne_label_1          
  nop                                  #  28    0x3f  1      OPC=nop                    nop                                  #  28    0x3f  1      OPC=nop                  
.L_126820:                             #        0x40  0      OPC=<label>              .L_126820:                             #        0x40  0      OPC=<label>              
  orl %esp, %ecx                       #  29    0x40  2      OPC=orl_r32_r32_1          orl %esp, %ecx                       #  29    0x40  2      OPC=orl_r32_r32_1        
  movl %r8d, (%r15,%rcx,1)             #  30    0x42  4      OPC=movl_m32_r32           movl %r8d, (%r15,%rcx,1)             #  30    0x42  4      OPC=movl_m32_r32         
  addl $0x4, %edx                      #  31    0x46  6      OPC=addl_r32_imm32         addl $0x4, %edx                      #  31    0x46  6      OPC=addl_r32_imm32       
  movl (%r15,%rdx,1), %r8d             #  32    0x4c  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %r8d             #  32    0x4c  4      OPC=movl_r32_m32         
  addl $0x4, %ecx                      #  33    0x50  6      OPC=addl_r32_imm32         addl $0x4, %ecx                      #  33    0x50  6      OPC=addl_r32_imm32       
  movl %r8d, %r9d                      #  34    0x56  3      OPC=movl_r32_r32           movl %r8d, %r9d                      #  34    0x56  3      OPC=movl_r32_r32         
  leal -0x1010101(%r8), %esi           #  35    0x59  7      OPC=leal_r32_m16           leal -0x1010101(%r8), %esi           #  35    0x59  7      OPC=leal_r32_m16         
  notl %r9d                            #  36    0x60  3      OPC=notl_r32               notl %r9d                            #  36    0x60  3      OPC=notl_r32             
  andl $0x80808080, %r9d               #  37    0x63  7      OPC=andl_r32_imm32         andl $0x80808080, %r9d               #  37    0x63  7      OPC=andl_r32_imm32       
  andl %esi, %r9d                      #  38    0x6a  3      OPC=andl_r32_r32_1         andl %esi, %r9d                      #  38    0x6a  3      OPC=andl_r32_r32_1       
  je .L_126820                         #  39    0x6d  6      OPC=je_label_1             je .L_126820                         #  39    0x6d  6      OPC=je_label_1           
  nop                                  #  40    0x73  1      OPC=nop                    nop                                  #  40    0x73  1      OPC=nop                  
  nop                                  #  41    0x74  1      OPC=nop                    nop                                  #  41    0x74  1      OPC=nop                  
  nop                                  #  42    0x75  1      OPC=nop                    nop                                  #  42    0x75  1      OPC=nop                  
  nop                                  #  43    0x76  1      OPC=nop                    nop                                  #  43    0x76  1      OPC=nop                  
  nop                                  #  44    0x77  1      OPC=nop                    nop                                  #  44    0x77  1      OPC=nop                  
  nop                                  #  45    0x78  1      OPC=nop                    nop                                  #  45    0x78  1      OPC=nop                  
  nop                                  #  46    0x79  1      OPC=nop                    nop                                  #  46    0x79  1      OPC=nop                  
  nop                                  #  47    0x7a  1      OPC=nop                    nop                                  #  47    0x7a  1      OPC=nop                  
  nop                                  #  48    0x7b  1      OPC=nop                    nop                                  #  48    0x7b  1      OPC=nop                  
  nop                                  #  49    0x7c  1      OPC=nop                    nop                                  #  49    0x7c  1      OPC=nop                  
  nop                                  #  50    0x7d  1      OPC=nop                    nop                                  #  50    0x7d  1      OPC=nop                  
  nop                                  #  51    0x7e  1      OPC=nop                    nop                                  #  51    0x7e  1      OPC=nop                  
  nop                                  #  52    0x7f  1      OPC=nop                    nop                                  #  52    0x7f  1      OPC=nop                  
.L_126860:                             #        0x80  0      OPC=<label>              .L_126860:                             #        0x80  0      OPC=<label>              
  incl %edx                            #  53    0x80  2      OPC=incl_r32               incl %edx                            #  53    0x80  2      OPC=incl_r32             
  movsbl -0x1(%r15,%rdx,1), %esi       #  54    0x82  6      OPC=movsbl_r32_m8          movsbl -0x1(%r15,%rdx,1), %esi       #  54    0x82  6      OPC=movsbl_r32_m8        
  addl $0x1, %ecx                      #  55    0x88  6      OPC=addl_r32_imm32         addl $0x1, %ecx                      #  55    0x88  6      OPC=addl_r32_imm32       
  movb %sil, -0x1(%r15,%rcx,1)         #  56    0x8e  5      OPC=movb_m8_r8             movb %sil, -0x1(%r15,%rcx,1)         #  56    0x8e  5      OPC=movb_m8_r8           
  orq %rsi, %rsi                       #  57    0x93  3      OPC=orq_r64_r64_1          orq %rsi, %rsi                       #  57    0x93  3      OPC=orq_r64_r64_1        
  jne .L_126860                        #  58    0x96  6      OPC=jne_label_1            jne .L_126860                        #  58    0x96  6      OPC=jne_label_1          
  nop                                  #  59    0x9c  1      OPC=nop                    nop                                  #  59    0x9c  1      OPC=nop                  
  nop                                  #  60    0x9d  1      OPC=nop                    nop                                  #  60    0x9d  1      OPC=nop                  
  nop                                  #  61    0x9e  1      OPC=nop                    nop                                  #  61    0x9e  1      OPC=nop                  
  nop                                  #  62    0x9f  1      OPC=nop                    nop                                  #  62    0x9f  1      OPC=nop                  
  nop                                  #  63    0xa0  1      OPC=nop                    nop                                  #  63    0xa0  1      OPC=nop                  
  nop                                  #  64    0xa1  1      OPC=nop                    nop                                  #  64    0xa1  1      OPC=nop                  
  nop                                  #  65    0xa2  1      OPC=nop                    nop                                  #  65    0xa2  1      OPC=nop                  
  nop                                  #  66    0xa3  1      OPC=nop                    nop                                  #  66    0xa3  1      OPC=nop                  
  nop                                  #  67    0xa4  1      OPC=nop                    nop                                  #  67    0xa4  1      OPC=nop                  
  nop                                  #  68    0xa5  1      OPC=nop                    nop                                  #  68    0xa5  1      OPC=nop                  
  nop                                  #  69    0xa6  1      OPC=nop                    nop                                  #  69    0xa6  1      OPC=nop                  
  nop                                  #  70    0xa7  1      OPC=nop                    nop                                  #  70    0xa7  1      OPC=nop                  
  nop                                  #  71    0xa8  1      OPC=nop                    nop                                  #  71    0xa8  1      OPC=nop                  
  nop                                  #  72    0xa9  1      OPC=nop                    nop                                  #  72    0xa9  1      OPC=nop                  
  nop                                  #  73    0xaa  1      OPC=nop                    nop                                  #  73    0xaa  1      OPC=nop                  
  nop                                  #  74    0xab  1      OPC=nop                    nop                                  #  74    0xab  1      OPC=nop                  
  nop                                  #  75    0xac  1      OPC=nop                    nop                                  #  75    0xac  1      OPC=nop                  
  nop                                  #  76    0xad  1      OPC=nop                    nop                                  #  76    0xad  1      OPC=nop                  
  nop                                  #  77    0xae  1      OPC=nop                    nop                                  #  77    0xae  1      OPC=nop                  
  nop                                  #  78    0xaf  1      OPC=nop                    nop                                  #  78    0xaf  1      OPC=nop                  
  popq %r11                            #  79    0xb0  2      OPC=popq_r64_1             popq %r11                            #  79    0xb0  2      OPC=popq_r64_1           
  andl $0xe0, %r11d                    #  80    0xb2  4      OPC=andl_r32_imm8          andl $0xe0, %r11d                    #  80    0xb2  4      OPC=andl_r32_imm8        
  addq %r15, %r11                      #  81    0xb6  3      OPC=addq_r64_r64           addq %r15, %r11                      #  81    0xb6  3      OPC=addq_r64_r64         
  jmpq %r11                            #  82    0xb9  3      OPC=jmpq_r64               jmpq %r11                            #  82    0xb9  3      OPC=jmpq_r64             
                                                                                                                                                                            
.size strcpy, .-strcpy                                                                .size strcpy, .-strcpy                                                                
                                                                                                                                                                            

********************************************************************************

Progress Update: 

Lowest Cost Discovered (168)                                                          Lowest Known Correct Cost (168)                                                       
                                                                                                                                                                            
  .text                                                                                 .text                                                                               
  .globl strcpy                                                                         .globl strcpy                                                                       
  .type strcpy, @function                                                               .type strcpy, @function                                                             
                                                                                                                                                                            
#! file-offset 0                                                                      #! file-offset 0                                                                      
#! rip-offset  0                                                                      #! rip-offset  0                                                                      
#! capacity    0 bytes                                                                #! capacity    0 bytes                                                                
                                                                                                                                                                            
# Text                                 #  Line  RIP   Bytes  Opcode                   # Text                                 #  Line  RIP   Bytes  Opcode                   
.strcpy:                               #        0     0      OPC=<label>              .strcpy:                               #        0     0      OPC=<label>              
  nop                                  #  1     0     1      OPC=nop                    nop                                  #  1     0     1      OPC=nop                  
  nop                                  #  2     0x1   1      OPC=nop                    nop                                  #  2     0x1   1      OPC=nop                  
  nop                                  #  3     0x2   1      OPC=nop                    nop                                  #  3     0x2   1      OPC=nop                  
  nop                                  #  4     0x3   1      OPC=nop                    nop                                  #  4     0x3   1      OPC=nop                  
  movq %rdi, %rcx                      #  5     0x4   3      OPC=movq_r64_r64_1         movq %rdi, %rcx                      #  5     0x4   3      OPC=movq_r64_r64_1       
  movl %esi, %edx                      #  6     0x7   2      OPC=movl_r32_r32           movl %esi, %edx                      #  6     0x7   2      OPC=movl_r32_r32         
  movq %rdi, %rax                      #  7     0x9   3      OPC=movq_r64_r64_1         movq %rdi, %rax                      #  7     0x9   3      OPC=movq_r64_r64_1       
  nop                                  #  8     0xc   1      OPC=nop                    nop                                  #  8     0xc   1      OPC=nop                  
  nop                                  #  9     0xd   1      OPC=nop                    nop                                  #  9     0xd   1      OPC=nop                  
  nop                                  #  10    0xe   1      OPC=nop                    nop                                  #  10    0xe   1      OPC=nop                  
  movq %rsi, %rdi                      #  11    0xf   3      OPC=movq_r64_r64           movq %rsi, %rdi                      #  11    0xf   3      OPC=movq_r64_r64         
  addb %al, %dil                       #  12    0x12  3      OPC=addb_r8_r8_1           addb %al, %dil                       #  12    0x12  3      OPC=addb_r8_r8_1         
  salb $0x5, %dil                      #  13    0x15  4      OPC=salb_r8_imm8           salb $0x5, %dil                      #  13    0x15  4      OPC=salb_r8_imm8         
  jne .L_126860                        #  14    0x19  6      OPC=jne_label_1            jne .L_126860                        #  14    0x19  6      OPC=jne_label_1          
  nop                                  #  15    0x1f  1      OPC=nop                    nop                                  #  15    0x1f  1      OPC=nop                  
  nop                                  #  16    0x20  1      OPC=nop                    nop                                  #  16    0x20  1      OPC=nop                  
  leal -0x7f7f7f80(%rcx,%rcx,8), %edi  #  17    0x21  7      OPC=leal_r32_m64           leal -0x7f7f7f80(%rcx,%rcx,8), %edi  #  17    0x21  7      OPC=leal_r32_m64         
  nop                                  #  18    0x28  1      OPC=nop                    nop                                  #  18    0x28  1      OPC=nop                  
  nop                                  #  19    0x29  1      OPC=nop                    nop                                  #  19    0x29  1      OPC=nop                  
  nop                                  #  20    0x2a  1      OPC=nop                    nop                                  #  20    0x2a  1      OPC=nop                  
  andl %esi, %esi                      #  21    0x2b  2      OPC=andl_r32_r32           andl %esi, %esi                      #  21    0x2b  2      OPC=andl_r32_r32         
  movl (%r15,%rsi,1), %r8d             #  22    0x2d  4      OPC=movl_r32_m32           movl (%r15,%rsi,1), %r8d             #  22    0x2d  4      OPC=movl_r32_m32         
  nop                                  #  23    0x31  1      OPC=nop                    nop                                  #  23    0x31  1      OPC=nop                  
  nop                                  #  24    0x32  1      OPC=nop                    nop                                  #  24    0x32  1      OPC=nop                  
  nop                                  #  25    0x33  1      OPC=nop                    nop                                  #  25    0x33  1      OPC=nop                  
  nop                                  #  26    0x34  1      OPC=nop                    nop                                  #  26    0x34  1      OPC=nop                  
  nop                                  #  27    0x35  1      OPC=nop                    nop                                  #  27    0x35  1      OPC=nop                  
  andb $0x80, %dil                     #  28    0x36  4      OPC=andb_r8_imm8           andb $0x80, %dil                     #  28    0x36  4      OPC=andb_r8_imm8         
  jne .L_126860                        #  29    0x3a  6      OPC=jne_label_1            jne .L_126860                        #  29    0x3a  6      OPC=jne_label_1          
.L_126820:                             #        0x40  0      OPC=<label>              .L_126820:                             #        0x40  0      OPC=<label>              
  orl %ebp, %ecx                       #  30    0x40  2      OPC=orl_r32_r32            orl %ebp, %ecx                       #  30    0x40  2      OPC=orl_r32_r32          
  movl %r8d, (%r15,%rcx,1)             #  31    0x42  4      OPC=movl_m32_r32           movl %r8d, (%r15,%rcx,1)             #  31    0x42  4      OPC=movl_m32_r32         
  addl $0x4, %edx                      #  32    0x46  6      OPC=addl_r32_imm32         addl $0x4, %edx                      #  32    0x46  6      OPC=addl_r32_imm32       
  movl (%r15,%rdx,1), %r8d             #  33    0x4c  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %r8d             #  33    0x4c  4      OPC=movl_r32_m32         
  addl $0x4, %ecx                      #  34    0x50  6      OPC=addl_r32_imm32         addl $0x4, %ecx                      #  34    0x50  6      OPC=addl_r32_imm32       
  movl %r8d, %r9d                      #  35    0x56  3      OPC=movl_r32_r32_1         movl %r8d, %r9d                      #  35    0x56  3      OPC=movl_r32_r32_1       
  leal -0x1010101(%r8), %esi           #  36    0x59  7      OPC=leal_r32_m16           leal -0x1010101(%r8), %esi           #  36    0x59  7      OPC=leal_r32_m16         
  notl %r9d                            #  37    0x60  3      OPC=notl_r32               notl %r9d                            #  37    0x60  3      OPC=notl_r32             
  andl $0x80808080, %r9d               #  38    0x63  7      OPC=andl_r32_imm32         andl $0x80808080, %r9d               #  38    0x63  7      OPC=andl_r32_imm32       
  andl %esi, %r9d                      #  39    0x6a  3      OPC=andl_r32_r32           andl %esi, %r9d                      #  39    0x6a  3      OPC=andl_r32_r32         
  je .L_126820                         #  40    0x6d  6      OPC=je_label_1             je .L_126820                         #  40    0x6d  6      OPC=je_label_1           
  nop                                  #  41    0x73  1      OPC=nop                    nop                                  #  41    0x73  1      OPC=nop                  
  nop                                  #  42    0x74  1      OPC=nop                    nop                                  #  42    0x74  1      OPC=nop                  
  nop                                  #  43    0x75  1      OPC=nop                    nop                                  #  43    0x75  1      OPC=nop                  
  nop                                  #  44    0x76  1      OPC=nop                    nop                                  #  44    0x76  1      OPC=nop                  
  nop                                  #  45    0x77  1      OPC=nop                    nop                                  #  45    0x77  1      OPC=nop                  
  nop                                  #  46    0x78  1      OPC=nop                    nop                                  #  46    0x78  1      OPC=nop                  
  nop                                  #  47    0x79  1      OPC=nop                    nop                                  #  47    0x79  1      OPC=nop                  
  nop                                  #  48    0x7a  1      OPC=nop                    nop                                  #  48    0x7a  1      OPC=nop                  
  nop                                  #  49    0x7b  1      OPC=nop                    nop                                  #  49    0x7b  1      OPC=nop                  
  nop                                  #  50    0x7c  1      OPC=nop                    nop                                  #  50    0x7c  1      OPC=nop                  
  nop                                  #  51    0x7d  1      OPC=nop                    nop                                  #  51    0x7d  1      OPC=nop                  
  nop                                  #  52    0x7e  1      OPC=nop                    nop                                  #  52    0x7e  1      OPC=nop                  
  nop                                  #  53    0x7f  1      OPC=nop                    nop                                  #  53    0x7f  1      OPC=nop                  
.L_126860:                             #        0x80  0      OPC=<label>              .L_126860:                             #        0x80  0      OPC=<label>              
  incl %edx                            #  54    0x80  2      OPC=incl_r32               incl %edx                            #  54    0x80  2      OPC=incl_r32             
  movsbl -0x1(%r15,%rdx,1), %esi       #  55    0x82  6      OPC=movsbl_r32_m8          movsbl -0x1(%r15,%rdx,1), %esi       #  55    0x82  6      OPC=movsbl_r32_m8        
  addl $0x1, %ecx                      #  56    0x88  6      OPC=addl_r32_imm32         addl $0x1, %ecx                      #  56    0x88  6      OPC=addl_r32_imm32       
  movb %sil, -0x1(%r15,%rcx,1)         #  57    0x8e  5      OPC=movb_m8_r8             movb %sil, -0x1(%r15,%rcx,1)         #  57    0x8e  5      OPC=movb_m8_r8           
  orq %rsi, %rsi                       #  58    0x93  3      OPC=orq_r64_r64_1          orq %rsi, %rsi                       #  58    0x93  3      OPC=orq_r64_r64_1        
  jne .L_126860                        #  59    0x96  6      OPC=jne_label_1            jne .L_126860                        #  59    0x96  6      OPC=jne_label_1          
  nop                                  #  60    0x9c  1      OPC=nop                    nop                                  #  60    0x9c  1      OPC=nop                  
  nop                                  #  61    0x9d  1      OPC=nop                    nop                                  #  61    0x9d  1      OPC=nop                  
  nop                                  #  62    0x9e  1      OPC=nop                    nop                                  #  62    0x9e  1      OPC=nop                  
  nop                                  #  63    0x9f  1      OPC=nop                    nop                                  #  63    0x9f  1      OPC=nop                  
  nop                                  #  64    0xa0  1      OPC=nop                    nop                                  #  64    0xa0  1      OPC=nop                  
  popq %r11                            #  65    0xa1  2      OPC=popq_r64_1             popq %r11                            #  65    0xa1  2      OPC=popq_r64_1           
  andl $0xe0, %r11d                    #  66    0xa3  4      OPC=andl_r32_imm8          andl $0xe0, %r11d                    #  66    0xa3  4      OPC=andl_r32_imm8        
  addq %r15, %r11                      #  67    0xa7  3      OPC=addq_r64_r64           addq %r15, %r11                      #  67    0xa7  3      OPC=addq_r64_r64         
  jmpq %r11                            #  68    0xaa  3      OPC=jmpq_r64               jmpq %r11                            #  68    0xaa  3      OPC=jmpq_r64             
                                                                                                                                                                            
.size strcpy, .-strcpy                                                                .size strcpy, .-strcpy                                                                
                                                                                                                                                                            

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  292.503s
Iterations/s:                  1025.63

Starting cost:                 221
Lowest cost:                   168
Lowest correct cost:           168

Move Type       Proposed     Succeeded     Accepted        
                                                           
ReplaceNop      8.29033%     7.104%        5.049%          
Rotate          8.36667%     6.229%        2.26633%        
Global Swap     8.24667%     5.53%         3.069%          
Global Copy     8.36033%     6.90433%      6.90433%        
Opcode          8.362%       7.19333%      5.76967%        
Instruction     8.427%       3.754%        0.146333%       
Add Nops        8.19033%     8.19033%      3.54167%        
Operand         8.38833%     5.28633%      0.734667%       
Local Swap      8.39533%     5.06167%      3.35433%        
OpcodeWidth     8.29833%     6.424%        5.34067%        
Delete          8.414%       7.226%        3.69367%        
2xWeighted      0%           0%            0%              
Memory+Swap     8.26067%     4.80867%      0.00233333%     
                                                           
Total           100%         73.7117%      39.872%         

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  384.555s
Iterations/s:                  1040.16

Starting cost:                 221
Lowest cost:                   168
Lowest correct cost:           168

Move Type       Proposed     Succeeded     Accepted     
                                                        
ReplaceNop      8.273%       7.0935%       5.0535%      
Rotate          8.34825%     6.18875%      2.2655%      
Global Swap     8.261%       5.526%        3.08175%     
Global Copy     8.355%       6.89325%      6.89325%     
Opcode          8.369%       7.2055%       5.75875%     
Instruction     8.3975%      3.7405%       0.1445%      
Add Nops        8.2555%      8.2555%       3.53675%     
Operand         8.35425%     5.1995%       0.73525%     
Local Swap      8.38625%     5.12325%      3.425%       
OpcodeWidth     8.34875%     6.446%        5.3745%      
Delete          8.3995%      7.18875%      3.68525%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.252%       4.817%        0.00175%     
                                                        
Total           100%         73.6775%      39.9558%     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (164)                                                          Lowest Known Correct Cost (168)                                                       
                                                                                                                                                                            
  .text                                                                                 .text                                                                               
  .globl strcpy                                                                         .globl strcpy                                                                       
  .type strcpy, @function                                                               .type strcpy, @function                                                             
                                                                                                                                                                            
#! file-offset 0                                                                      #! file-offset 0                                                                      
#! rip-offset  0                                                                      #! rip-offset  0                                                                      
#! capacity    0 bytes                                                                #! capacity    0 bytes                                                                
                                                                                                                                                                            
# Text                                 #  Line  RIP   Bytes  Opcode                   # Text                                 #  Line  RIP   Bytes  Opcode                   
.strcpy:                               #        0     0      OPC=<label>              .strcpy:                               #        0     0      OPC=<label>              
  movq %rsi, %rdx                      #  1     0     3      OPC=movq_r64_r64           nop                                  #  1     0     1      OPC=nop                  
  movq %rdi, %rcx                      #  2     0x3   3      OPC=movq_r64_r64_1         nop                                  #  2     0x1   1      OPC=nop                  
  movl %edi, %eax                      #  3     0x6   2      OPC=movl_r32_r32_1         nop                                  #  3     0x2   1      OPC=nop                  
  nop                                  #  4     0x8   1      OPC=nop                    nop                                  #  4     0x3   1      OPC=nop                  
  movw %dx, %di                        #  5     0x9   3      OPC=movw_r16_r16           movq %rdi, %rcx                      #  5     0x4   3      OPC=movq_r64_r64_1       
  nop                                  #  6     0xc   1      OPC=nop                    movl %esi, %edx                      #  6     0x7   2      OPC=movl_r32_r32         
  addq %rcx, %rdi                      #  7     0xd   3      OPC=addq_r64_r64           movq %rdi, %rax                      #  7     0x9   3      OPC=movq_r64_r64_1       
  nop                                  #  8     0x10  1      OPC=nop                    nop                                  #  8     0xc   1      OPC=nop                  
  nop                                  #  9     0x11  1      OPC=nop                    nop                                  #  9     0xd   1      OPC=nop                  
  andq $0x5, %rdi                      #  10    0x12  4      OPC=andq_r64_imm8          nop                                  #  10    0xe   1      OPC=nop                  
  nop                                  #  11    0x16  1      OPC=nop                    movq %rsi, %rdi                      #  11    0xf   3      OPC=movq_r64_r64         
  jne .L_126860                        #  12    0x17  6      OPC=jne_label_1            addb %al, %dil                       #  12    0x12  3      OPC=addb_r8_r8_1         
  nop                                  #  13    0x1d  1      OPC=nop                    salb $0x5, %dil                      #  13    0x15  4      OPC=salb_r8_imm8         
  nop                                  #  14    0x1e  1      OPC=nop                    jne .L_126860                        #  14    0x19  6      OPC=jne_label_1          
  nop                                  #  15    0x1f  1      OPC=nop                    nop                                  #  15    0x1f  1      OPC=nop                  
  leaq -0x7f7f7f80(%rcx,%rcx,8), %rdi  #  16    0x20  8      OPC=leaq_r64_m64           nop                                  #  16    0x20  1      OPC=nop                  
  movw %si, %si                        #  17    0x28  3      OPC=movw_r16_r16           leal -0x7f7f7f80(%rcx,%rcx,8), %edi  #  17    0x21  7      OPC=leal_r32_m64         
  movq (%r15,%rsi,1), %r8              #  18    0x2b  4      OPC=movq_r64_m64           nop                                  #  18    0x28  1      OPC=nop                  
  nop                                  #  19    0x2f  1      OPC=nop                    nop                                  #  19    0x29  1      OPC=nop                  
  nop                                  #  20    0x30  1      OPC=nop                    nop                                  #  20    0x2a  1      OPC=nop                  
  nop                                  #  21    0x31  1      OPC=nop                    andl %esi, %esi                      #  21    0x2b  2      OPC=andl_r32_r32         
  nop                                  #  22    0x32  1      OPC=nop                    movl (%r15,%rsi,1), %r8d             #  22    0x2d  4      OPC=movl_r32_m32         
  nop                                  #  23    0x33  1      OPC=nop                    nop                                  #  23    0x31  1      OPC=nop                  
  nop                                  #  24    0x34  1      OPC=nop                    nop                                  #  24    0x32  1      OPC=nop                  
  nop                                  #  25    0x35  1      OPC=nop                    nop                                  #  25    0x33  1      OPC=nop                  
  andb $0x80, %dil                     #  26    0x36  4      OPC=andb_r8_imm8           nop                                  #  26    0x34  1      OPC=nop                  
  jne .L_126860                        #  27    0x3a  6      OPC=jne_label_1            nop                                  #  27    0x35  1      OPC=nop                  
.L_126820:                             #        0x40  0      OPC=<label>                andb $0x80, %dil                     #  28    0x36  4      OPC=andb_r8_imm8         
  addq $0x4, %rcx                      #  28    0x40  4      OPC=addq_r64_imm8          jne .L_126860                        #  29    0x3a  6      OPC=jne_label_1          
  movl %r8d, -0x4(%r15,%rcx,1)         #  29    0x44  5      OPC=movl_m32_r32         .L_126820:                             #        0x40  0      OPC=<label>              
  addl $0x4, %edx                      #  30    0x49  6      OPC=addl_r32_imm32         orl %ebp, %ecx                       #  30    0x40  2      OPC=orl_r32_r32          
  movl (%r15,%rdx,1), %r8d             #  31    0x4f  4      OPC=movl_r32_m32           movl %r8d, (%r15,%rcx,1)             #  31    0x42  4      OPC=movl_m32_r32         
  movq %r8, %r9                        #  32    0x53  3      OPC=movq_r64_r64_1         addl $0x4, %edx                      #  32    0x46  6      OPC=addl_r32_imm32       
  leaq -0x1010101(%r8), %rsi           #  33    0x56  7      OPC=leaq_r64_m32           movl (%r15,%rdx,1), %r8d             #  33    0x4c  4      OPC=movl_r32_m32         
  notl %r9d                            #  34    0x5d  3      OPC=notl_r32               addl $0x4, %ecx                      #  34    0x50  6      OPC=addl_r32_imm32       
  andq $0x80808080, %rsi               #  35    0x60  7      OPC=andq_r64_imm32         movl %r8d, %r9d                      #  35    0x56  3      OPC=movl_r32_r32_1       
  andl %esi, %r9d                      #  36    0x67  3      OPC=andl_r32_r32_1         leal -0x1010101(%r8), %esi           #  36    0x59  7      OPC=leal_r32_m16         
  je .L_126820                         #  37    0x6a  6      OPC=je_label_1             notl %r9d                            #  37    0x60  3      OPC=notl_r32             
  nop                                  #  38    0x70  1      OPC=nop                    andl $0x80808080, %r9d               #  38    0x63  7      OPC=andl_r32_imm32       
  nop                                  #  39    0x71  1      OPC=nop                    andl %esi, %r9d                      #  39    0x6a  3      OPC=andl_r32_r32         
  nop                                  #  40    0x72  1      OPC=nop                    je .L_126820                         #  40    0x6d  6      OPC=je_label_1           
  nop                                  #  41    0x73  1      OPC=nop                    nop                                  #  41    0x73  1      OPC=nop                  
  nop                                  #  42    0x74  1      OPC=nop                    nop                                  #  42    0x74  1      OPC=nop                  
  nop                                  #  43    0x75  1      OPC=nop                    nop                                  #  43    0x75  1      OPC=nop                  
  nop                                  #  44    0x76  1      OPC=nop                    nop                                  #  44    0x76  1      OPC=nop                  
  nop                                  #  45    0x77  1      OPC=nop                    nop                                  #  45    0x77  1      OPC=nop                  
  nop                                  #  46    0x78  1      OPC=nop                    nop                                  #  46    0x78  1      OPC=nop                  
  nop                                  #  47    0x79  1      OPC=nop                    nop                                  #  47    0x79  1      OPC=nop                  
  nop                                  #  48    0x7a  1      OPC=nop                    nop                                  #  48    0x7a  1      OPC=nop                  
  nop                                  #  49    0x7b  1      OPC=nop                    nop                                  #  49    0x7b  1      OPC=nop                  
  nopl %eax                            #  50    0x7c  3      OPC=nopl_r32               nop                                  #  50    0x7c  1      OPC=nop                  
.L_126860:                             #        0x7f  0      OPC=<label>                nop                                  #  51    0x7d  1      OPC=nop                  
  incw %dx                             #  51    0x7f  3      OPC=incw_r16               nop                                  #  52    0x7e  1      OPC=nop                  
  movsbq -0x1(%r15,%rdx,1), %rsi       #  52    0x82  6      OPC=movsbq_r64_m8          nop                                  #  53    0x7f  1      OPC=nop                  
  addl $0x1, %ecx                      #  53    0x88  3      OPC=addl_r32_imm8        .L_126860:                             #        0x80  0      OPC=<label>              
  movb %sil, -0x1(%r15,%rcx,1)         #  54    0x8b  5      OPC=movb_m8_r8             incl %edx                            #  54    0x80  2      OPC=incl_r32             
  shll $0x4, %esi                      #  55    0x90  3      OPC=shll_r32_imm8          movsbl -0x1(%r15,%rdx,1), %esi       #  55    0x82  6      OPC=movsbl_r32_m8        
  jne .L_126860                        #  56    0x93  6      OPC=jne_label_1            addl $0x1, %ecx                      #  56    0x88  6      OPC=addl_r32_imm32       
  nop                                  #  57    0x99  1      OPC=nop                    movb %sil, -0x1(%r15,%rcx,1)         #  57    0x8e  5      OPC=movb_m8_r8           
  nop                                  #  58    0x9a  1      OPC=nop                    orq %rsi, %rsi                       #  58    0x93  3      OPC=orq_r64_r64_1        
  nop                                  #  59    0x9b  1      OPC=nop                    jne .L_126860                        #  59    0x96  6      OPC=jne_label_1          
  nop                                  #  60    0x9c  1      OPC=nop                    nop                                  #  60    0x9c  1      OPC=nop                  
  nop                                  #  61    0x9d  1      OPC=nop                    nop                                  #  61    0x9d  1      OPC=nop                  
  nop                                  #  62    0x9e  1      OPC=nop                    nop                                  #  62    0x9e  1      OPC=nop                  
  nop                                  #  63    0x9f  1      OPC=nop                    nop                                  #  63    0x9f  1      OPC=nop                  
  nop                                  #  64    0xa0  1      OPC=nop                    nop                                  #  64    0xa0  1      OPC=nop                  
  nop                                  #  65    0xa1  1      OPC=nop                    popq %r11                            #  65    0xa1  2      OPC=popq_r64_1           
  nop                                  #  66    0xa2  1      OPC=nop                    andl $0xe0, %r11d                    #  66    0xa3  4      OPC=andl_r32_imm8        
  nop                                  #  67    0xa3  1      OPC=nop                    addq %r15, %r11                      #  67    0xa7  3      OPC=addq_r64_r64         
  nop                                  #  68    0xa4  1      OPC=nop                    jmpq %r11                            #  68    0xaa  3      OPC=jmpq_r64             
  nop                                  #  69    0xa5  1      OPC=nop                                                                                                        
  nop                                  #  70    0xa6  1      OPC=nop                  .size strcpy, .-strcpy                                                                
  nop                                  #  71    0xa7  1      OPC=nop                                                                                                        
  nop                                  #  72    0xa8  1      OPC=nop                                                                                                        
  nop                                  #  73    0xa9  1      OPC=nop                                                                                                        
  nop                                  #  74    0xaa  1      OPC=nop                                                                                                        
  nop                                  #  75    0xab  1      OPC=nop                                                                                                        
  nop                                  #  76    0xac  1      OPC=nop                                                                                                        
  nop                                  #  77    0xad  1      OPC=nop                                                                                                        
  popq %r11                            #  78    0xae  2      OPC=popq_r64_1                                                                                                 
  andl $0xe0, %r11d                    #  79    0xb0  4      OPC=andl_r32_imm8                                                                                              
  addq %r15, %r11                      #  80    0xb4  3      OPC=addq_r64_r64                                                                                               
  jmpq %r11                            #  81    0xb7  3      OPC=jmpq_r64                                                                                                   
                                                                                                                                                                            
.size strcpy, .-strcpy                                                                                                                                                      
                                                                                                                                                                            

********************************************************************************

Progress Update: 

Lowest Cost Discovered (163)                                                          Lowest Known Correct Cost (168)                                                       
                                                                                                                                                                            
  .text                                                                                 .text                                                                               
  .globl strcpy                                                                         .globl strcpy                                                                       
  .type strcpy, @function                                                               .type strcpy, @function                                                             
                                                                                                                                                                            
#! file-offset 0                                                                      #! file-offset 0                                                                      
#! rip-offset  0                                                                      #! rip-offset  0                                                                      
#! capacity    0 bytes                                                                #! capacity    0 bytes                                                                
                                                                                                                                                                            
# Text                                 #  Line  RIP   Bytes  Opcode                   # Text                                 #  Line  RIP   Bytes  Opcode                   
.strcpy:                               #        0     0      OPC=<label>              .strcpy:                               #        0     0      OPC=<label>              
  movq %rsi, %rdx                      #  1     0     3      OPC=movq_r64_r64           nop                                  #  1     0     1      OPC=nop                  
  movq %rdi, %rcx                      #  2     0x3   3      OPC=movq_r64_r64_1         nop                                  #  2     0x1   1      OPC=nop                  
  movl %edi, %eax                      #  3     0x6   2      OPC=movl_r32_r32_1         nop                                  #  3     0x2   1      OPC=nop                  
  nop                                  #  4     0x8   1      OPC=nop                    nop                                  #  4     0x3   1      OPC=nop                  
  movw %dx, %di                        #  5     0x9   3      OPC=movw_r16_r16           movq %rdi, %rcx                      #  5     0x4   3      OPC=movq_r64_r64_1       
  nop                                  #  6     0xc   1      OPC=nop                    movl %esi, %edx                      #  6     0x7   2      OPC=movl_r32_r32         
  addw %cx, %di                        #  7     0xd   3      OPC=addw_r16_r16           movq %rdi, %rax                      #  7     0x9   3      OPC=movq_r64_r64_1       
  nop                                  #  8     0x10  1      OPC=nop                    nop                                  #  8     0xc   1      OPC=nop                  
  nop                                  #  9     0x11  1      OPC=nop                    nop                                  #  9     0xd   1      OPC=nop                  
  andq $0x5, %rdi                      #  10    0x12  4      OPC=andq_r64_imm8          nop                                  #  10    0xe   1      OPC=nop                  
  nop                                  #  11    0x16  1      OPC=nop                    movq %rsi, %rdi                      #  11    0xf   3      OPC=movq_r64_r64         
  jne .L_126860                        #  12    0x17  6      OPC=jne_label_1            addb %al, %dil                       #  12    0x12  3      OPC=addb_r8_r8_1         
  nop                                  #  13    0x1d  1      OPC=nop                    salb $0x5, %dil                      #  13    0x15  4      OPC=salb_r8_imm8         
  nop                                  #  14    0x1e  1      OPC=nop                    jne .L_126860                        #  14    0x19  6      OPC=jne_label_1          
  nop                                  #  15    0x1f  1      OPC=nop                    nop                                  #  15    0x1f  1      OPC=nop                  
  leaq -0x7f7f7f80(%rcx,%rcx,8), %rdi  #  16    0x20  8      OPC=leaq_r64_m64           nop                                  #  16    0x20  1      OPC=nop                  
  movw %si, %si                        #  17    0x28  3      OPC=movw_r16_r16           leal -0x7f7f7f80(%rcx,%rcx,8), %edi  #  17    0x21  7      OPC=leal_r32_m64         
  movq (%r15,%rsi,1), %r8              #  18    0x2b  4      OPC=movq_r64_m64           nop                                  #  18    0x28  1      OPC=nop                  
  nop                                  #  19    0x2f  1      OPC=nop                    nop                                  #  19    0x29  1      OPC=nop                  
  nop                                  #  20    0x30  1      OPC=nop                    nop                                  #  20    0x2a  1      OPC=nop                  
  nop                                  #  21    0x31  1      OPC=nop                    andl %esi, %esi                      #  21    0x2b  2      OPC=andl_r32_r32         
  nop                                  #  22    0x32  1      OPC=nop                    movl (%r15,%rsi,1), %r8d             #  22    0x2d  4      OPC=movl_r32_m32         
  nop                                  #  23    0x33  1      OPC=nop                    nop                                  #  23    0x31  1      OPC=nop                  
  nop                                  #  24    0x34  1      OPC=nop                    nop                                  #  24    0x32  1      OPC=nop                  
  andb $0x80, %dil                     #  25    0x35  4      OPC=andb_r8_imm8           nop                                  #  25    0x33  1      OPC=nop                  
  jne .L_126860                        #  26    0x39  6      OPC=jne_label_1            nop                                  #  26    0x34  1      OPC=nop                  
  nop                                  #  27    0x3f  1      OPC=nop                    nop                                  #  27    0x35  1      OPC=nop                  
.L_126820:                             #        0x40  0      OPC=<label>                andb $0x80, %dil                     #  28    0x36  4      OPC=andb_r8_imm8         
  addq $0x4, %rcx                      #  28    0x40  4      OPC=addq_r64_imm8          jne .L_126860                        #  29    0x3a  6      OPC=jne_label_1          
  movl %r8d, -0x4(%r15,%rcx,1)         #  29    0x44  5      OPC=movl_m32_r32         .L_126820:                             #        0x40  0      OPC=<label>              
  addl $0x4, %edx                      #  30    0x49  6      OPC=addl_r32_imm32         orl %ebp, %ecx                       #  30    0x40  2      OPC=orl_r32_r32          
  movl (%r15,%rdx,1), %r8d             #  31    0x4f  4      OPC=movl_r32_m32           movl %r8d, (%r15,%rcx,1)             #  31    0x42  4      OPC=movl_m32_r32         
  movq %r8, %r9                        #  32    0x53  3      OPC=movq_r64_r64_1         addl $0x4, %edx                      #  32    0x46  6      OPC=addl_r32_imm32       
  leaq -0x1010101(%r8), %rsi           #  33    0x56  7      OPC=leaq_r64_m32           movl (%r15,%rdx,1), %r8d             #  33    0x4c  4      OPC=movl_r32_m32         
  notl %r9d                            #  34    0x5d  3      OPC=notl_r32               addl $0x4, %ecx                      #  34    0x50  6      OPC=addl_r32_imm32       
  andq $0x80808080, %rsi               #  35    0x60  7      OPC=andq_r64_imm32         movl %r8d, %r9d                      #  35    0x56  3      OPC=movl_r32_r32_1       
  andl %esi, %r9d                      #  36    0x67  3      OPC=andl_r32_r32_1         leal -0x1010101(%r8), %esi           #  36    0x59  7      OPC=leal_r32_m16         
  je .L_126820                         #  37    0x6a  6      OPC=je_label_1             notl %r9d                            #  37    0x60  3      OPC=notl_r32             
  nop                                  #  38    0x70  1      OPC=nop                    andl $0x80808080, %r9d               #  38    0x63  7      OPC=andl_r32_imm32       
  nop                                  #  39    0x71  1      OPC=nop                    andl %esi, %r9d                      #  39    0x6a  3      OPC=andl_r32_r32         
  nop                                  #  40    0x72  1      OPC=nop                    je .L_126820                         #  40    0x6d  6      OPC=je_label_1           
  nop                                  #  41    0x73  1      OPC=nop                    nop                                  #  41    0x73  1      OPC=nop                  
  nop                                  #  42    0x74  1      OPC=nop                    nop                                  #  42    0x74  1      OPC=nop                  
  nop                                  #  43    0x75  1      OPC=nop                    nop                                  #  43    0x75  1      OPC=nop                  
  nop                                  #  44    0x76  1      OPC=nop                    nop                                  #  44    0x76  1      OPC=nop                  
  nop                                  #  45    0x77  1      OPC=nop                    nop                                  #  45    0x77  1      OPC=nop                  
  nop                                  #  46    0x78  1      OPC=nop                    nop                                  #  46    0x78  1      OPC=nop                  
  nop                                  #  47    0x79  1      OPC=nop                    nop                                  #  47    0x79  1      OPC=nop                  
  nop                                  #  48    0x7a  1      OPC=nop                    nop                                  #  48    0x7a  1      OPC=nop                  
  nop                                  #  49    0x7b  1      OPC=nop                    nop                                  #  49    0x7b  1      OPC=nop                  
  nop                                  #  50    0x7c  1      OPC=nop                    nop                                  #  50    0x7c  1      OPC=nop                  
  nopl %eax                            #  51    0x7d  3      OPC=nopl_r32               nop                                  #  51    0x7d  1      OPC=nop                  
.L_126860:                             #        0x80  0      OPC=<label>                nop                                  #  52    0x7e  1      OPC=nop                  
  incw %dx                             #  52    0x80  3      OPC=incw_r16               nop                                  #  53    0x7f  1      OPC=nop                  
  movsbq -0x1(%r15,%rdx,1), %rsi       #  53    0x83  6      OPC=movsbq_r64_m8        .L_126860:                             #        0x80  0      OPC=<label>              
  addl $0x1, %ecx                      #  54    0x89  3      OPC=addl_r32_imm8          incl %edx                            #  54    0x80  2      OPC=incl_r32             
  movb %sil, -0x1(%r15,%rcx,1)         #  55    0x8c  5      OPC=movb_m8_r8             movsbl -0x1(%r15,%rdx,1), %esi       #  55    0x82  6      OPC=movsbl_r32_m8        
  shll $0x4, %esi                      #  56    0x91  3      OPC=shll_r32_imm8          addl $0x1, %ecx                      #  56    0x88  6      OPC=addl_r32_imm32       
  jne .L_126860                        #  57    0x94  6      OPC=jne_label_1            movb %sil, -0x1(%r15,%rcx,1)         #  57    0x8e  5      OPC=movb_m8_r8           
  nop                                  #  58    0x9a  1      OPC=nop                    orq %rsi, %rsi                       #  58    0x93  3      OPC=orq_r64_r64_1        
  nop                                  #  59    0x9b  1      OPC=nop                    jne .L_126860                        #  59    0x96  6      OPC=jne_label_1          
  nop                                  #  60    0x9c  1      OPC=nop                    nop                                  #  60    0x9c  1      OPC=nop                  
  nop                                  #  61    0x9d  1      OPC=nop                    nop                                  #  61    0x9d  1      OPC=nop                  
  nop                                  #  62    0x9e  1      OPC=nop                    nop                                  #  62    0x9e  1      OPC=nop                  
  nop                                  #  63    0x9f  1      OPC=nop                    nop                                  #  63    0x9f  1      OPC=nop                  
  nop                                  #  64    0xa0  1      OPC=nop                    nop                                  #  64    0xa0  1      OPC=nop                  
  nop                                  #  65    0xa1  1      OPC=nop                    popq %r11                            #  65    0xa1  2      OPC=popq_r64_1           
  nop                                  #  66    0xa2  1      OPC=nop                    andl $0xe0, %r11d                    #  66    0xa3  4      OPC=andl_r32_imm8        
  nop                                  #  67    0xa3  1      OPC=nop                    addq %r15, %r11                      #  67    0xa7  3      OPC=addq_r64_r64         
  nop                                  #  68    0xa4  1      OPC=nop                    jmpq %r11                            #  68    0xaa  3      OPC=jmpq_r64             
  nop                                  #  69    0xa5  1      OPC=nop                                                                                                        
  nop                                  #  70    0xa6  1      OPC=nop                  .size strcpy, .-strcpy                                                                
  nop                                  #  71    0xa7  1      OPC=nop                                                                                                        
  nop                                  #  72    0xa8  1      OPC=nop                                                                                                        
  nop                                  #  73    0xa9  1      OPC=nop                                                                                                        
  nop                                  #  74    0xaa  1      OPC=nop                                                                                                        
  nop                                  #  75    0xab  1      OPC=nop                                                                                                        
  nop                                  #  76    0xac  1      OPC=nop                                                                                                        
  nop                                  #  77    0xad  1      OPC=nop                                                                                                        
  nop                                  #  78    0xae  1      OPC=nop                                                                                                        
  popq %r11                            #  79    0xaf  2      OPC=popq_r64_1                                                                                                 
  andl $0xe0, %r11d                    #  80    0xb1  4      OPC=andl_r32_imm8                                                                                              
  addq %r15, %r11                      #  81    0xb5  3      OPC=addq_r64_r64                                                                                               
  jmpq %r11                            #  82    0xb8  3      OPC=jmpq_r64                                                                                                   
                                                                                                                                                                            
.size strcpy, .-strcpy                                                                                                                                                      
                                                                                                                                                                            

********************************************************************************

Progress Update: 

Lowest Cost Discovered (162)                                                         Lowest Known Correct Cost (168)                                                       
                                                                                                                                                                           
  .text                                                                                .text                                                                               
  .globl strcpy                                                                        .globl strcpy                                                                       
  .type strcpy, @function                                                              .type strcpy, @function                                                             
                                                                                                                                                                           
#! file-offset 0                                                                     #! file-offset 0                                                                      
#! rip-offset  0                                                                     #! rip-offset  0                                                                      
#! capacity    0 bytes                                                               #! capacity    0 bytes                                                                
                                                                                                                                                                           
# Text                                #  Line  RIP   Bytes  Opcode                   # Text                                 #  Line  RIP   Bytes  Opcode                   
.strcpy:                              #        0     0      OPC=<label>              .strcpy:                               #        0     0      OPC=<label>              
  movq %rsi, %rdx                     #  1     0     3      OPC=movq_r64_r64           nop                                  #  1     0     1      OPC=nop                  
  movq %rdi, %rcx                     #  2     0x3   3      OPC=movq_r64_r64_1         nop                                  #  2     0x1   1      OPC=nop                  
  movl %edi, %eax                     #  3     0x6   2      OPC=movl_r32_r32_1         nop                                  #  3     0x2   1      OPC=nop                  
  movw %dx, %di                       #  4     0x8   3      OPC=movw_r16_r16           nop                                  #  4     0x3   1      OPC=nop                  
  nop                                 #  5     0xb   1      OPC=nop                    movq %rdi, %rcx                      #  5     0x4   3      OPC=movq_r64_r64_1       
  nop                                 #  6     0xc   1      OPC=nop                    movl %esi, %edx                      #  6     0x7   2      OPC=movl_r32_r32         
  addw %cx, %di                       #  7     0xd   3      OPC=addw_r16_r16           movq %rdi, %rax                      #  7     0x9   3      OPC=movq_r64_r64_1       
  nop                                 #  8     0x10  1      OPC=nop                    nop                                  #  8     0xc   1      OPC=nop                  
  nop                                 #  9     0x11  1      OPC=nop                    nop                                  #  9     0xd   1      OPC=nop                  
  andq $0x5, %rdi                     #  10    0x12  4      OPC=andq_r64_imm8          nop                                  #  10    0xe   1      OPC=nop                  
  jne .L_126860                       #  11    0x16  6      OPC=jne_label_1            movq %rsi, %rdi                      #  11    0xf   3      OPC=movq_r64_r64         
  nop                                 #  12    0x1c  1      OPC=nop                    addb %al, %dil                       #  12    0x12  3      OPC=addb_r8_r8_1         
  nop                                 #  13    0x1d  1      OPC=nop                    salb $0x5, %dil                      #  13    0x15  4      OPC=salb_r8_imm8         
  nop                                 #  14    0x1e  1      OPC=nop                    jne .L_126860                        #  14    0x19  6      OPC=jne_label_1          
  nop                                 #  15    0x1f  1      OPC=nop                    nop                                  #  15    0x1f  1      OPC=nop                  
  leaw -0x7f7f7f80(%rcx,%rcx,8), %di  #  16    0x20  8      OPC=leaw_r16_m64           nop                                  #  16    0x20  1      OPC=nop                  
  movw %si, %si                       #  17    0x28  3      OPC=movw_r16_r16           leal -0x7f7f7f80(%rcx,%rcx,8), %edi  #  17    0x21  7      OPC=leal_r32_m64         
  movq (%r15,%rsi,1), %r8             #  18    0x2b  4      OPC=movq_r64_m64           nop                                  #  18    0x28  1      OPC=nop                  
  nop                                 #  19    0x2f  1      OPC=nop                    nop                                  #  19    0x29  1      OPC=nop                  
  nop                                 #  20    0x30  1      OPC=nop                    nop                                  #  20    0x2a  1      OPC=nop                  
  andb $0x80, %dil                    #  21    0x31  4      OPC=andb_r8_imm8           andl %esi, %esi                      #  21    0x2b  2      OPC=andl_r32_r32         
  nop                                 #  22    0x35  1      OPC=nop                    movl (%r15,%rsi,1), %r8d             #  22    0x2d  4      OPC=movl_r32_m32         
  nop                                 #  23    0x36  1      OPC=nop                    nop                                  #  23    0x31  1      OPC=nop                  
  nop                                 #  24    0x37  1      OPC=nop                    nop                                  #  24    0x32  1      OPC=nop                  
  nop                                 #  25    0x38  1      OPC=nop                    nop                                  #  25    0x33  1      OPC=nop                  
  jne .L_126860                       #  26    0x39  6      OPC=jne_label_1            nop                                  #  26    0x34  1      OPC=nop                  
  nop                                 #  27    0x3f  1      OPC=nop                    nop                                  #  27    0x35  1      OPC=nop                  
.L_126820:                            #        0x40  0      OPC=<label>                andb $0x80, %dil                     #  28    0x36  4      OPC=andb_r8_imm8         
  addq $0x4, %rcx                     #  28    0x40  4      OPC=addq_r64_imm8          jne .L_126860                        #  29    0x3a  6      OPC=jne_label_1          
  movl %r8d, -0x4(%r15,%rcx,1)        #  29    0x44  5      OPC=movl_m32_r32         .L_126820:                             #        0x40  0      OPC=<label>              
  addl $0x4, %edx                     #  30    0x49  6      OPC=addl_r32_imm32         orl %ebp, %ecx                       #  30    0x40  2      OPC=orl_r32_r32          
  movl (%r15,%rdx,1), %r8d            #  31    0x4f  4      OPC=movl_r32_m32           movl %r8d, (%r15,%rcx,1)             #  31    0x42  4      OPC=movl_m32_r32         
  movq %r8, %r9                       #  32    0x53  3      OPC=movq_r64_r64_1         addl $0x4, %edx                      #  32    0x46  6      OPC=addl_r32_imm32       
  leaq -0x1010101(%r8), %rsi          #  33    0x56  7      OPC=leaq_r64_m32           movl (%r15,%rdx,1), %r8d             #  33    0x4c  4      OPC=movl_r32_m32         
  notl %r9d                           #  34    0x5d  3      OPC=notl_r32               addl $0x4, %ecx                      #  34    0x50  6      OPC=addl_r32_imm32       
  andq $0x80808080, %rsi              #  35    0x60  7      OPC=andq_r64_imm32         movl %r8d, %r9d                      #  35    0x56  3      OPC=movl_r32_r32_1       
  andl %esi, %r9d                     #  36    0x67  3      OPC=andl_r32_r32_1         leal -0x1010101(%r8), %esi           #  36    0x59  7      OPC=leal_r32_m16         
  je .L_126820                        #  37    0x6a  6      OPC=je_label_1             notl %r9d                            #  37    0x60  3      OPC=notl_r32             
  nop                                 #  38    0x70  1      OPC=nop                    andl $0x80808080, %r9d               #  38    0x63  7      OPC=andl_r32_imm32       
  nop                                 #  39    0x71  1      OPC=nop                    andl %esi, %r9d                      #  39    0x6a  3      OPC=andl_r32_r32         
  nop                                 #  40    0x72  1      OPC=nop                    je .L_126820                         #  40    0x6d  6      OPC=je_label_1           
  nop                                 #  41    0x73  1      OPC=nop                    nop                                  #  41    0x73  1      OPC=nop                  
  nop                                 #  42    0x74  1      OPC=nop                    nop                                  #  42    0x74  1      OPC=nop                  
  nop                                 #  43    0x75  1      OPC=nop                    nop                                  #  43    0x75  1      OPC=nop                  
  nop                                 #  44    0x76  1      OPC=nop                    nop                                  #  44    0x76  1      OPC=nop                  
  nop                                 #  45    0x77  1      OPC=nop                    nop                                  #  45    0x77  1      OPC=nop                  
  nop                                 #  46    0x78  1      OPC=nop                    nop                                  #  46    0x78  1      OPC=nop                  
  nop                                 #  47    0x79  1      OPC=nop                    nop                                  #  47    0x79  1      OPC=nop                  
  nop                                 #  48    0x7a  1      OPC=nop                    nop                                  #  48    0x7a  1      OPC=nop                  
  nop                                 #  49    0x7b  1      OPC=nop                    nop                                  #  49    0x7b  1      OPC=nop                  
  nop                                 #  50    0x7c  1      OPC=nop                    nop                                  #  50    0x7c  1      OPC=nop                  
  nopl %eax                           #  51    0x7d  3      OPC=nopl_r32               nop                                  #  51    0x7d  1      OPC=nop                  
.L_126860:                            #        0x80  0      OPC=<label>                nop                                  #  52    0x7e  1      OPC=nop                  
  incw %dx                            #  52    0x80  3      OPC=incw_r16               nop                                  #  53    0x7f  1      OPC=nop                  
  movsbq -0x1(%r15,%rdx,1), %rsi      #  53    0x83  6      OPC=movsbq_r64_m8        .L_126860:                             #        0x80  0      OPC=<label>              
  addl $0x1, %ecx                     #  54    0x89  3      OPC=addl_r32_imm8          incl %edx                            #  54    0x80  2      OPC=incl_r32             
  movb %sil, -0x1(%r15,%rcx,1)        #  55    0x8c  5      OPC=movb_m8_r8             movsbl -0x1(%r15,%rdx,1), %esi       #  55    0x82  6      OPC=movsbl_r32_m8        
  shll $0x4, %esi                     #  56    0x91  3      OPC=shll_r32_imm8          addl $0x1, %ecx                      #  56    0x88  6      OPC=addl_r32_imm32       
  jne .L_126860                       #  57    0x94  6      OPC=jne_label_1            movb %sil, -0x1(%r15,%rcx,1)         #  57    0x8e  5      OPC=movb_m8_r8           
  nop                                 #  58    0x9a  1      OPC=nop                    orq %rsi, %rsi                       #  58    0x93  3      OPC=orq_r64_r64_1        
  nop                                 #  59    0x9b  1      OPC=nop                    jne .L_126860                        #  59    0x96  6      OPC=jne_label_1          
  nop                                 #  60    0x9c  1      OPC=nop                    nop                                  #  60    0x9c  1      OPC=nop                  
  nop                                 #  61    0x9d  1      OPC=nop                    nop                                  #  61    0x9d  1      OPC=nop                  
  nop                                 #  62    0x9e  1      OPC=nop                    nop                                  #  62    0x9e  1      OPC=nop                  
  nop                                 #  63    0x9f  1      OPC=nop                    nop                                  #  63    0x9f  1      OPC=nop                  
  nop                                 #  64    0xa0  1      OPC=nop                    nop                                  #  64    0xa0  1      OPC=nop                  
  nop                                 #  65    0xa1  1      OPC=nop                    popq %r11                            #  65    0xa1  2      OPC=popq_r64_1           
  nop                                 #  66    0xa2  1      OPC=nop                    andl $0xe0, %r11d                    #  66    0xa3  4      OPC=andl_r32_imm8        
  nop                                 #  67    0xa3  1      OPC=nop                    addq %r15, %r11                      #  67    0xa7  3      OPC=addq_r64_r64         
  nop                                 #  68    0xa4  1      OPC=nop                    jmpq %r11                            #  68    0xaa  3      OPC=jmpq_r64             
  nop                                 #  69    0xa5  1      OPC=nop                                                                                                        
  nop                                 #  70    0xa6  1      OPC=nop                  .size strcpy, .-strcpy                                                                
  nop                                 #  71    0xa7  1      OPC=nop                                                                                                        
  nop                                 #  72    0xa8  1      OPC=nop                                                                                                        
  nop                                 #  73    0xa9  1      OPC=nop                                                                                                        
  nop                                 #  74    0xaa  1      OPC=nop                                                                                                        
  popq %r11                           #  75    0xab  2      OPC=popq_r64_1                                                                                                 
  andl $0xe0, %r11d                   #  76    0xad  4      OPC=andl_r32_imm8                                                                                              
  addq %r15, %r11                     #  77    0xb1  3      OPC=addq_r64_r64                                                                                               
  jmpq %r11                           #  78    0xb4  3      OPC=jmpq_r64                                                                                                   
                                                                                                                                                                           
.size strcpy, .-strcpy                                                                                                                                                     
                                                                                                                                                                           

********************************************************************************

Progress Update: 

Lowest Cost Discovered (161)                                                          Lowest Known Correct Cost (168)                                                       
                                                                                                                                                                            
  .text                                                                                 .text                                                                               
  .globl strcpy                                                                         .globl strcpy                                                                       
  .type strcpy, @function                                                               .type strcpy, @function                                                             
                                                                                                                                                                            
#! file-offset 0                                                                      #! file-offset 0                                                                      
#! rip-offset  0                                                                      #! rip-offset  0                                                                      
#! capacity    0 bytes                                                                #! capacity    0 bytes                                                                
                                                                                                                                                                            
# Text                                 #  Line  RIP   Bytes  Opcode                   # Text                                 #  Line  RIP   Bytes  Opcode                   
.strcpy:                               #        0     0      OPC=<label>              .strcpy:                               #        0     0      OPC=<label>              
  nop                                  #  1     0     1      OPC=nop                    nop                                  #  1     0     1      OPC=nop                  
  movl %edi, %eax                      #  2     0x1   2      OPC=movl_r32_r32           nop                                  #  2     0x1   1      OPC=nop                  
  nop                                  #  3     0x3   1      OPC=nop                    nop                                  #  3     0x2   1      OPC=nop                  
  nop                                  #  4     0x4   1      OPC=nop                    nop                                  #  4     0x3   1      OPC=nop                  
  movq %rsi, %rdx                      #  5     0x5   3      OPC=movq_r64_r64           movq %rdi, %rcx                      #  5     0x4   3      OPC=movq_r64_r64_1       
  nop                                  #  6     0x8   1      OPC=nop                    movl %esi, %edx                      #  6     0x7   2      OPC=movl_r32_r32         
  nop                                  #  7     0x9   1      OPC=nop                    movq %rdi, %rax                      #  7     0x9   3      OPC=movq_r64_r64_1       
  nop                                  #  8     0xa   1      OPC=nop                    nop                                  #  8     0xc   1      OPC=nop                  
  nop                                  #  9     0xb   1      OPC=nop                    nop                                  #  9     0xd   1      OPC=nop                  
  movq %rdi, %rcx                      #  10    0xc   3      OPC=movq_r64_r64           nop                                  #  10    0xe   1      OPC=nop                  
  nop                                  #  11    0xf   1      OPC=nop                    movq %rsi, %rdi                      #  11    0xf   3      OPC=movq_r64_r64         
  movw %dx, %di                        #  12    0x10  3      OPC=movw_r16_r16           addb %al, %dil                       #  12    0x12  3      OPC=addb_r8_r8_1         
  subw %cx, %di                        #  13    0x13  3      OPC=subw_r16_r16_1         salb $0x5, %dil                      #  13    0x15  4      OPC=salb_r8_imm8         
  andq $0x5, %rdi                      #  14    0x16  4      OPC=andq_r64_imm8          jne .L_126860                        #  14    0x19  6      OPC=jne_label_1          
  jne .L_126860                        #  15    0x1a  6      OPC=jne_label_1            nop                                  #  15    0x1f  1      OPC=nop                  
  nop                                  #  16    0x20  1      OPC=nop                    nop                                  #  16    0x20  1      OPC=nop                  
  nop                                  #  17    0x21  1      OPC=nop                    leal -0x7f7f7f80(%rcx,%rcx,8), %edi  #  17    0x21  7      OPC=leal_r32_m64         
  nop                                  #  18    0x22  1      OPC=nop                    nop                                  #  18    0x28  1      OPC=nop                  
  nop                                  #  19    0x23  1      OPC=nop                    nop                                  #  19    0x29  1      OPC=nop                  
  nop                                  #  20    0x24  1      OPC=nop                    nop                                  #  20    0x2a  1      OPC=nop                  
  nop                                  #  21    0x25  1      OPC=nop                    andl %esi, %esi                      #  21    0x2b  2      OPC=andl_r32_r32         
  movq %rdx, %rsi                      #  22    0x26  3      OPC=movq_r64_r64_1         movl (%r15,%rsi,1), %r8d             #  22    0x2d  4      OPC=movl_r32_m32         
  movl (%r15,%rsi,1), %r8d             #  23    0x29  4      OPC=movl_r32_m32           nop                                  #  23    0x31  1      OPC=nop                  
  nop                                  #  24    0x2d  1      OPC=nop                    nop                                  #  24    0x32  1      OPC=nop                  
  nop                                  #  25    0x2e  1      OPC=nop                    nop                                  #  25    0x33  1      OPC=nop                  
  leal -0x7f7f7f80(%rcx,%rcx,8), %edi  #  26    0x2f  7      OPC=leal_r32_m16           nop                                  #  26    0x34  1      OPC=nop                  
  andb $0x80, %dil                     #  27    0x36  4      OPC=andb_r8_imm8           nop                                  #  27    0x35  1      OPC=nop                  
  jne .L_126860                        #  28    0x3a  6      OPC=jne_label_1            andb $0x80, %dil                     #  28    0x36  4      OPC=andb_r8_imm8         
.L_126820:                             #        0x40  0      OPC=<label>                jne .L_126860                        #  29    0x3a  6      OPC=jne_label_1          
  addq $0x4, %rcx                      #  29    0x40  4      OPC=addq_r64_imm8        .L_126820:                             #        0x40  0      OPC=<label>              
  movl %r8d, -0x4(%r15,%rcx,1)         #  30    0x44  5      OPC=movl_m32_r32           orl %ebp, %ecx                       #  30    0x40  2      OPC=orl_r32_r32          
  addl $0x4, %edx                      #  31    0x49  6      OPC=addl_r32_imm32         movl %r8d, (%r15,%rcx,1)             #  31    0x42  4      OPC=movl_m32_r32         
  movl (%r15,%rdx,1), %r8d             #  32    0x4f  4      OPC=movl_r32_m32           addl $0x4, %edx                      #  32    0x46  6      OPC=addl_r32_imm32       
  movq %r8, %r9                        #  33    0x53  3      OPC=movq_r64_r64           movl (%r15,%rdx,1), %r8d             #  33    0x4c  4      OPC=movl_r32_m32         
  notl %r9d                            #  34    0x56  3      OPC=notl_r32               addl $0x4, %ecx                      #  34    0x50  6      OPC=addl_r32_imm32       
  andq $0x80808080, %r9                #  35    0x59  7      OPC=andq_r64_imm32         movl %r8d, %r9d                      #  35    0x56  3      OPC=movl_r32_r32_1       
  leal -0x1010101(%r8), %esi           #  36    0x60  7      OPC=leal_r32_m16           leal -0x1010101(%r8), %esi           #  36    0x59  7      OPC=leal_r32_m16         
  andl %esi, %r9d                      #  37    0x67  3      OPC=andl_r32_r32_1         notl %r9d                            #  37    0x60  3      OPC=notl_r32             
  je .L_126820                         #  38    0x6a  6      OPC=je_label_1             andl $0x80808080, %r9d               #  38    0x63  7      OPC=andl_r32_imm32       
  nop                                  #  39    0x70  1      OPC=nop                    andl %esi, %r9d                      #  39    0x6a  3      OPC=andl_r32_r32         
  nop                                  #  40    0x71  1      OPC=nop                    je .L_126820                         #  40    0x6d  6      OPC=je_label_1           
  nop                                  #  41    0x72  1      OPC=nop                    nop                                  #  41    0x73  1      OPC=nop                  
  nop                                  #  42    0x73  1      OPC=nop                    nop                                  #  42    0x74  1      OPC=nop                  
  nop                                  #  43    0x74  1      OPC=nop                    nop                                  #  43    0x75  1      OPC=nop                  
  nop                                  #  44    0x75  1      OPC=nop                    nop                                  #  44    0x76  1      OPC=nop                  
  nop                                  #  45    0x76  1      OPC=nop                    nop                                  #  45    0x77  1      OPC=nop                  
  nop                                  #  46    0x77  1      OPC=nop                    nop                                  #  46    0x78  1      OPC=nop                  
  nop                                  #  47    0x78  1      OPC=nop                    nop                                  #  47    0x79  1      OPC=nop                  
  nop                                  #  48    0x79  1      OPC=nop                    nop                                  #  48    0x7a  1      OPC=nop                  
  nop                                  #  49    0x7a  1      OPC=nop                    nop                                  #  49    0x7b  1      OPC=nop                  
  nop                                  #  50    0x7b  1      OPC=nop                    nop                                  #  50    0x7c  1      OPC=nop                  
  nop                                  #  51    0x7c  1      OPC=nop                    nop                                  #  51    0x7d  1      OPC=nop                  
  nop                                  #  52    0x7d  1      OPC=nop                    nop                                  #  52    0x7e  1      OPC=nop                  
  nop                                  #  53    0x7e  1      OPC=nop                    nop                                  #  53    0x7f  1      OPC=nop                  
  nop                                  #  54    0x7f  1      OPC=nop                  .L_126860:                             #        0x80  0      OPC=<label>              
.L_126860:                             #        0x80  0      OPC=<label>                incl %edx                            #  54    0x80  2      OPC=incl_r32             
  incl %edx                            #  55    0x80  2      OPC=incl_r32               movsbl -0x1(%r15,%rdx,1), %esi       #  55    0x82  6      OPC=movsbl_r32_m8        
  movzbq -0x1(%r15,%rdx,1), %rsi       #  56    0x82  6      OPC=movzbq_r64_m8          addl $0x1, %ecx                      #  56    0x88  6      OPC=addl_r32_imm32       
  addl $0x1, %ecx                      #  57    0x88  3      OPC=addl_r32_imm8          movb %sil, -0x1(%r15,%rcx,1)         #  57    0x8e  5      OPC=movb_m8_r8           
  movb %sil, -0x1(%r15,%rcx,1)         #  58    0x8b  5      OPC=movb_m8_r8             orq %rsi, %rsi                       #  58    0x93  3      OPC=orq_r64_r64_1        
  shll $0x7, %esi                      #  59    0x90  3      OPC=shll_r32_imm8          jne .L_126860                        #  59    0x96  6      OPC=jne_label_1          
  jne .L_126860                        #  60    0x93  6      OPC=jne_label_1            nop                                  #  60    0x9c  1      OPC=nop                  
  nop                                  #  61    0x99  1      OPC=nop                    nop                                  #  61    0x9d  1      OPC=nop                  
  nop                                  #  62    0x9a  1      OPC=nop                    nop                                  #  62    0x9e  1      OPC=nop                  
  nop                                  #  63    0x9b  1      OPC=nop                    nop                                  #  63    0x9f  1      OPC=nop                  
  nop                                  #  64    0x9c  1      OPC=nop                    nop                                  #  64    0xa0  1      OPC=nop                  
  nop                                  #  65    0x9d  1      OPC=nop                    popq %r11                            #  65    0xa1  2      OPC=popq_r64_1           
  nop                                  #  66    0x9e  1      OPC=nop                    andl $0xe0, %r11d                    #  66    0xa3  4      OPC=andl_r32_imm8        
  nop                                  #  67    0x9f  1      OPC=nop                    addq %r15, %r11                      #  67    0xa7  3      OPC=addq_r64_r64         
  nop                                  #  68    0xa0  1      OPC=nop                    jmpq %r11                            #  68    0xaa  3      OPC=jmpq_r64             
  nop                                  #  69    0xa1  1      OPC=nop                                                                                                        
  nop                                  #  70    0xa2  1      OPC=nop                  .size strcpy, .-strcpy                                                                
  nop                                  #  71    0xa3  1      OPC=nop                                                                                                        
  nop                                  #  72    0xa4  1      OPC=nop                                                                                                        
  nop                                  #  73    0xa5  1      OPC=nop                                                                                                        
  nop                                  #  74    0xa6  1      OPC=nop                                                                                                        
  nop                                  #  75    0xa7  1      OPC=nop                                                                                                        
  nop                                  #  76    0xa8  1      OPC=nop                                                                                                        
  nop                                  #  77    0xa9  1      OPC=nop                                                                                                        
  nop                                  #  78    0xaa  1      OPC=nop                                                                                                        
  popq %r11                            #  79    0xab  2      OPC=popq_r64_1                                                                                                 
  andl $0xe0, %r11d                    #  80    0xad  4      OPC=andl_r32_imm8                                                                                              
  addq %r15, %r11                      #  81    0xb1  3      OPC=addq_r64_r64                                                                                               
  jmpq %r11                            #  82    0xb4  3      OPC=jmpq_r64                                                                                                   
                                                                                                                                                                            
.size strcpy, .-strcpy                                                                                                                                                      
                                                                                                                                                                            

********************************************************************************

Progress Update: 

Lowest Cost Discovered (160)                                                         Lowest Known Correct Cost (168)                                                       
                                                                                                                                                                           
  .text                                                                                .text                                                                               
  .globl strcpy                                                                        .globl strcpy                                                                       
  .type strcpy, @function                                                              .type strcpy, @function                                                             
                                                                                                                                                                           
#! file-offset 0                                                                     #! file-offset 0                                                                      
#! rip-offset  0                                                                     #! rip-offset  0                                                                      
#! capacity    0 bytes                                                               #! capacity    0 bytes                                                                
                                                                                                                                                                           
# Text                                #  Line  RIP   Bytes  Opcode                   # Text                                 #  Line  RIP   Bytes  Opcode                   
.strcpy:                              #        0     0      OPC=<label>              .strcpy:                               #        0     0      OPC=<label>              
  movl %edi, %ecx                     #  1     0     2      OPC=movl_r32_r32           nop                                  #  1     0     1      OPC=nop                  
  movl %ecx, %eax                     #  2     0x2   2      OPC=movl_r32_r32_1         nop                                  #  2     0x1   1      OPC=nop                  
  movw %si, %di                       #  3     0x4   3      OPC=movw_r16_r16           nop                                  #  3     0x2   1      OPC=nop                  
  movq %rsi, %rdx                     #  4     0x7   3      OPC=movq_r64_r64_1         nop                                  #  4     0x3   1      OPC=nop                  
  subq %rax, %rdi                     #  5     0xa   3      OPC=subq_r64_r64           movq %rdi, %rcx                      #  5     0x4   3      OPC=movq_r64_r64_1       
  nop                                 #  6     0xd   1      OPC=nop                    movl %esi, %edx                      #  6     0x7   2      OPC=movl_r32_r32         
  andq $0x5, %rdi                     #  7     0xe   4      OPC=andq_r64_imm8          movq %rdi, %rax                      #  7     0x9   3      OPC=movq_r64_r64_1       
  leaw -0x7f7f7f80(%rcx,%rcx,8), %di  #  8     0x12  8      OPC=leaw_r16_m64           nop                                  #  8     0xc   1      OPC=nop                  
  nop                                 #  9     0x1a  1      OPC=nop                    nop                                  #  9     0xd   1      OPC=nop                  
  nop                                 #  10    0x1b  1      OPC=nop                    nop                                  #  10    0xe   1      OPC=nop                  
  nop                                 #  11    0x1c  1      OPC=nop                    movq %rsi, %rdi                      #  11    0xf   3      OPC=movq_r64_r64         
  nop                                 #  12    0x1d  1      OPC=nop                    addb %al, %dil                       #  12    0x12  3      OPC=addb_r8_r8_1         
  nop                                 #  13    0x1e  1      OPC=nop                    salb $0x5, %dil                      #  13    0x15  4      OPC=salb_r8_imm8         
  nop                                 #  14    0x1f  1      OPC=nop                    jne .L_126860                        #  14    0x19  6      OPC=jne_label_1          
  nop                                 #  15    0x20  1      OPC=nop                    nop                                  #  15    0x1f  1      OPC=nop                  
  nop                                 #  16    0x21  1      OPC=nop                    nop                                  #  16    0x20  1      OPC=nop                  
  jne .L_126860                       #  17    0x22  6      OPC=jne_label_1            leal -0x7f7f7f80(%rcx,%rcx,8), %edi  #  17    0x21  7      OPC=leal_r32_m64         
  andq %rsi, %rsi                     #  18    0x28  3      OPC=andq_r64_r64_1         nop                                  #  18    0x28  1      OPC=nop                  
  movl (%r15,%rsi,1), %r8d            #  19    0x2b  4      OPC=movl_r32_m32           nop                                  #  19    0x29  1      OPC=nop                  
  andb $0x80, %dil                    #  20    0x2f  4      OPC=andb_r8_imm8           nop                                  #  20    0x2a  1      OPC=nop                  
  nop                                 #  21    0x33  1      OPC=nop                    andl %esi, %esi                      #  21    0x2b  2      OPC=andl_r32_r32         
  nop                                 #  22    0x34  1      OPC=nop                    movl (%r15,%rsi,1), %r8d             #  22    0x2d  4      OPC=movl_r32_m32         
  nop                                 #  23    0x35  1      OPC=nop                    nop                                  #  23    0x31  1      OPC=nop                  
  nop                                 #  24    0x36  1      OPC=nop                    nop                                  #  24    0x32  1      OPC=nop                  
  jne .L_126860                       #  25    0x37  6      OPC=jne_label_1            nop                                  #  25    0x33  1      OPC=nop                  
  nopl %eax                           #  26    0x3d  3      OPC=nopl_r32               nop                                  #  26    0x34  1      OPC=nop                  
.L_126820:                            #        0x40  0      OPC=<label>                nop                                  #  27    0x35  1      OPC=nop                  
  addq $0x4, %rcx                     #  27    0x40  4      OPC=addq_r64_imm8          andb $0x80, %dil                     #  28    0x36  4      OPC=andb_r8_imm8         
  movl %r8d, -0x4(%r15,%rcx,1)        #  28    0x44  5      OPC=movl_m32_r32           jne .L_126860                        #  29    0x3a  6      OPC=jne_label_1          
  addl $0x4, %edx                     #  29    0x49  6      OPC=addl_r32_imm32       .L_126820:                             #        0x40  0      OPC=<label>              
  movq (%r15,%rdx,1), %r8             #  30    0x4f  4      OPC=movq_r64_m64           orl %ebp, %ecx                       #  30    0x40  2      OPC=orl_r32_r32          
  movq %r8, %r9                       #  31    0x53  3      OPC=movq_r64_r64_1         movl %r8d, (%r15,%rcx,1)             #  31    0x42  4      OPC=movl_m32_r32         
  notq %r9                            #  32    0x56  3      OPC=notq_r64               addl $0x4, %edx                      #  32    0x46  6      OPC=addl_r32_imm32       
  leal -0x1010101(%r8), %esi          #  33    0x59  7      OPC=leal_r32_m16           movl (%r15,%rdx,1), %r8d             #  33    0x4c  4      OPC=movl_r32_m32         
  andq $0x80808080, %rsi              #  34    0x60  7      OPC=andq_r64_imm32         addl $0x4, %ecx                      #  34    0x50  6      OPC=addl_r32_imm32       
  andl %esi, %r9d                     #  35    0x67  3      OPC=andl_r32_r32           movl %r8d, %r9d                      #  35    0x56  3      OPC=movl_r32_r32_1       
  je .L_126820                        #  36    0x6a  6      OPC=je_label_1             leal -0x1010101(%r8), %esi           #  36    0x59  7      OPC=leal_r32_m16         
  nopl %eax                           #  37    0x70  3      OPC=nopl_r32               notl %r9d                            #  37    0x60  3      OPC=notl_r32             
  nop                                 #  38    0x73  1      OPC=nop                    andl $0x80808080, %r9d               #  38    0x63  7      OPC=andl_r32_imm32       
  nop                                 #  39    0x74  1      OPC=nop                    andl %esi, %r9d                      #  39    0x6a  3      OPC=andl_r32_r32         
  nop                                 #  40    0x75  1      OPC=nop                    je .L_126820                         #  40    0x6d  6      OPC=je_label_1           
  nop                                 #  41    0x76  1      OPC=nop                    nop                                  #  41    0x73  1      OPC=nop                  
  nop                                 #  42    0x77  1      OPC=nop                    nop                                  #  42    0x74  1      OPC=nop                  
  nop                                 #  43    0x78  1      OPC=nop                    nop                                  #  43    0x75  1      OPC=nop                  
  nop                                 #  44    0x79  1      OPC=nop                    nop                                  #  44    0x76  1      OPC=nop                  
  nop                                 #  45    0x7a  1      OPC=nop                    nop                                  #  45    0x77  1      OPC=nop                  
  nop                                 #  46    0x7b  1      OPC=nop                    nop                                  #  46    0x78  1      OPC=nop                  
  nop                                 #  47    0x7c  1      OPC=nop                    nop                                  #  47    0x79  1      OPC=nop                  
  nop                                 #  48    0x7d  1      OPC=nop                    nop                                  #  48    0x7a  1      OPC=nop                  
  nop                                 #  49    0x7e  1      OPC=nop                    nop                                  #  49    0x7b  1      OPC=nop                  
  nop                                 #  50    0x7f  1      OPC=nop                    nop                                  #  50    0x7c  1      OPC=nop                  
.L_126860:                            #        0x80  0      OPC=<label>                nop                                  #  51    0x7d  1      OPC=nop                  
  incl %edx                           #  51    0x80  2      OPC=incl_r32               nop                                  #  52    0x7e  1      OPC=nop                  
  movzbl -0x1(%r15,%rdx,1), %esi      #  52    0x82  6      OPC=movzbl_r32_m8          nop                                  #  53    0x7f  1      OPC=nop                  
  addl $0x1, %ecx                     #  53    0x88  3      OPC=addl_r32_imm8        .L_126860:                             #        0x80  0      OPC=<label>              
  movb %sil, -0x1(%r15,%rcx,1)        #  54    0x8b  5      OPC=movb_m8_r8             incl %edx                            #  54    0x80  2      OPC=incl_r32             
  sall $0xf8, %esi                    #  55    0x90  3      OPC=sall_r32_imm8          movsbl -0x1(%r15,%rdx,1), %esi       #  55    0x82  6      OPC=movsbl_r32_m8        
  jne .L_126860                       #  56    0x93  6      OPC=jne_label_1            addl $0x1, %ecx                      #  56    0x88  6      OPC=addl_r32_imm32       
  nop                                 #  57    0x99  1      OPC=nop                    movb %sil, -0x1(%r15,%rcx,1)         #  57    0x8e  5      OPC=movb_m8_r8           
  nop                                 #  58    0x9a  1      OPC=nop                    orq %rsi, %rsi                       #  58    0x93  3      OPC=orq_r64_r64_1        
  nop                                 #  59    0x9b  1      OPC=nop                    jne .L_126860                        #  59    0x96  6      OPC=jne_label_1          
  nop                                 #  60    0x9c  1      OPC=nop                    nop                                  #  60    0x9c  1      OPC=nop                  
  nop                                 #  61    0x9d  1      OPC=nop                    nop                                  #  61    0x9d  1      OPC=nop                  
  nop                                 #  62    0x9e  1      OPC=nop                    nop                                  #  62    0x9e  1      OPC=nop                  
  nop                                 #  63    0x9f  1      OPC=nop                    nop                                  #  63    0x9f  1      OPC=nop                  
  nop                                 #  64    0xa0  1      OPC=nop                    nop                                  #  64    0xa0  1      OPC=nop                  
  nop                                 #  65    0xa1  1      OPC=nop                    popq %r11                            #  65    0xa1  2      OPC=popq_r64_1           
  nop                                 #  66    0xa2  1      OPC=nop                    andl $0xe0, %r11d                    #  66    0xa3  4      OPC=andl_r32_imm8        
  nop                                 #  67    0xa3  1      OPC=nop                    addq %r15, %r11                      #  67    0xa7  3      OPC=addq_r64_r64         
  popq %r11                           #  68    0xa4  2      OPC=popq_r64_1             jmpq %r11                            #  68    0xaa  3      OPC=jmpq_r64             
  andl $0xe0, %r11d                   #  69    0xa6  4      OPC=andl_r32_imm8                                                                                              
  addq %r15, %r11                     #  70    0xaa  3      OPC=addq_r64_r64         .size strcpy, .-strcpy                                                                
  jmpq %r11                           #  71    0xad  3      OPC=jmpq_r64                                                                                                   
                                                                                                                                                                           
.size strcpy, .-strcpy                                                                                                                                                     
                                                                                                                                                                           

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  479.749s
Iterations/s:                  1042.21

Starting cost:                 221
Lowest cost:                   160
Lowest correct cost:           168

Move Type       Proposed     Succeeded     Accepted     
                                                        
ReplaceNop      8.3202%      7.1108%       5.0686%      
Rotate          8.3602%      6.1788%       2.2182%      
Global Swap     8.2732%      5.4952%       3.0554%      
Global Copy     8.356%       6.8928%       6.8928%      
Opcode          8.3452%      7.1856%       5.7204%      
Instruction     8.3754%      3.7308%       0.1442%      
Add Nops        8.2866%      8.2866%       3.4308%      
Operand         8.337%       5.1202%       0.715%       
Local Swap      8.3564%      5.1382%       3.4312%      
OpcodeWidth     8.3628%      6.451%        5.381%       
Delete          8.3932%      7.174%        3.5802%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.2338%      4.7712%       0.0016%      
                                                        
Total           100%         73.5352%      39.6394%     

********************************************************************************

################################################################################

Final update:

Total search iterations:       500000
Number of attempted searches:  1
Total search time:             479.753s
Total time:                    480.525s

Statistics of last search

Iterations:                    500000
Elapsed Time:                  479.749s
Iterations/s:                  1042.21

Starting cost:                 221
Lowest cost:                   160
Lowest correct cost:           168

Move Type       Proposed     Succeeded     Accepted     
                                                        
ReplaceNop      8.3202%      7.1108%       5.0686%      
Rotate          8.3602%      6.1788%       2.2182%      
Global Swap     8.2732%      5.4952%       3.0554%      
Global Copy     8.356%       6.8928%       6.8928%      
Opcode          8.3452%      7.1856%       5.7204%      
Instruction     8.3754%      3.7308%       0.1442%      
Add Nops        8.2866%      8.2866%       3.4308%      
Operand         8.337%       5.1202%       0.715%       
Local Swap      8.3564%      5.1382%       3.4312%      
OpcodeWidth     8.3628%      6.451%        5.381%       
Delete          8.3932%      7.174%        3.5802%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.2338%      4.7712%       0.0016%      
                                                        
Total           100%         73.5352%      39.6394%     

Lowest Cost Discovered (160)                                                          
                                                                                      
  .text                                                                               
  .globl strcpy                                                                       
  .type strcpy, @function                                                             
                                                                                      
#! file-offset 0                                                                      
#! rip-offset  0                                                                      
#! capacity    0 bytes                                                                
                                                                                      
# Text                                #  Line  RIP   Bytes  Opcode                    
.strcpy:                              #        0     0      OPC=<label>               
  movl %edi, %ecx                     #  1     0     2      OPC=movl_r32_r32          
  movl %ecx, %eax                     #  2     0x2   2      OPC=movl_r32_r32_1        
  movw %si, %di                       #  3     0x4   3      OPC=movw_r16_r16          
  movq %rsi, %rdx                     #  4     0x7   3      OPC=movq_r64_r64_1        
  subq %rax, %rdi                     #  5     0xa   3      OPC=subq_r64_r64          
  nop                                 #  6     0xd   1      OPC=nop                   
  andq $0x5, %rdi                     #  7     0xe   4      OPC=andq_r64_imm8         
  leaw -0x7f7f7f80(%rcx,%rcx,8), %di  #  8     0x12  8      OPC=leaw_r16_m64          
  nop                                 #  9     0x1a  1      OPC=nop                   
  nop                                 #  10    0x1b  1      OPC=nop                   
  nop                                 #  11    0x1c  1      OPC=nop                   
  nop                                 #  12    0x1d  1      OPC=nop                   
  nop                                 #  13    0x1e  1      OPC=nop                   
  nop                                 #  14    0x1f  1      OPC=nop                   
  nop                                 #  15    0x20  1      OPC=nop                   
  nop                                 #  16    0x21  1      OPC=nop                   
  jne .L_126860                       #  17    0x22  6      OPC=jne_label_1           
  andq %rsi, %rsi                     #  18    0x28  3      OPC=andq_r64_r64_1        
  movl (%r15,%rsi,1), %r8d            #  19    0x2b  4      OPC=movl_r32_m32          
  andb $0x80, %dil                    #  20    0x2f  4      OPC=andb_r8_imm8          
  nop                                 #  21    0x33  1      OPC=nop                   
  nop                                 #  22    0x34  1      OPC=nop                   
  nop                                 #  23    0x35  1      OPC=nop                   
  nop                                 #  24    0x36  1      OPC=nop                   
  jne .L_126860                       #  25    0x37  6      OPC=jne_label_1           
  nopl %eax                           #  26    0x3d  3      OPC=nopl_r32              
.L_126820:                            #        0x40  0      OPC=<label>               
  addq $0x4, %rcx                     #  27    0x40  4      OPC=addq_r64_imm8         
  movl %r8d, -0x4(%r15,%rcx,1)        #  28    0x44  5      OPC=movl_m32_r32          
  addl $0x4, %edx                     #  29    0x49  6      OPC=addl_r32_imm32        
  movq (%r15,%rdx,1), %r8             #  30    0x4f  4      OPC=movq_r64_m64          
  movq %r8, %r9                       #  31    0x53  3      OPC=movq_r64_r64_1        
  notq %r9                            #  32    0x56  3      OPC=notq_r64              
  leal -0x1010101(%r8), %esi          #  33    0x59  7      OPC=leal_r32_m16          
  andq $0x80808080, %rsi              #  34    0x60  7      OPC=andq_r64_imm32        
  andl %esi, %r9d                     #  35    0x67  3      OPC=andl_r32_r32          
  je .L_126820                        #  36    0x6a  6      OPC=je_label_1            
  nopl %eax                           #  37    0x70  3      OPC=nopl_r32              
  nop                                 #  38    0x73  1      OPC=nop                   
  nop                                 #  39    0x74  1      OPC=nop                   
  nop                                 #  40    0x75  1      OPC=nop                   
  nop                                 #  41    0x76  1      OPC=nop                   
  nop                                 #  42    0x77  1      OPC=nop                   
  nop                                 #  43    0x78  1      OPC=nop                   
  nop                                 #  44    0x79  1      OPC=nop                   
  nop                                 #  45    0x7a  1      OPC=nop                   
  nop                                 #  46    0x7b  1      OPC=nop                   
  nop                                 #  47    0x7c  1      OPC=nop                   
  nop                                 #  48    0x7d  1      OPC=nop                   
  nop                                 #  49    0x7e  1      OPC=nop                   
  nop                                 #  50    0x7f  1      OPC=nop                   
.L_126860:                            #        0x80  0      OPC=<label>               
  incl %edx                           #  51    0x80  2      OPC=incl_r32              
  movzbl -0x1(%r15,%rdx,1), %esi      #  52    0x82  6      OPC=movzbl_r32_m8         
  addl $0x1, %ecx                     #  53    0x88  3      OPC=addl_r32_imm8         
  movb %sil, -0x1(%r15,%rcx,1)        #  54    0x8b  5      OPC=movb_m8_r8            
  sall $0xf8, %esi                    #  55    0x90  3      OPC=sall_r32_imm8         
  jne .L_126860                       #  56    0x93  6      OPC=jne_label_1           
  nop                                 #  57    0x99  1      OPC=nop                   
  nop                                 #  58    0x9a  1      OPC=nop                   
  nop                                 #  59    0x9b  1      OPC=nop                   
  nop                                 #  60    0x9c  1      OPC=nop                   
  nop                                 #  61    0x9d  1      OPC=nop                   
  nop                                 #  62    0x9e  1      OPC=nop                   
  nop                                 #  63    0x9f  1      OPC=nop                   
  nop                                 #  64    0xa0  1      OPC=nop                   
  nop                                 #  65    0xa1  1      OPC=nop                   
  nop                                 #  66    0xa2  1      OPC=nop                   
  nop                                 #  67    0xa3  1      OPC=nop                   
  popq %r11                           #  68    0xa4  2      OPC=popq_r64_1            
  andl $0xe0, %r11d                   #  69    0xa6  4      OPC=andl_r32_imm8         
  addq %r15, %r11                     #  70    0xaa  3      OPC=addq_r64_r64          
  jmpq %r11                           #  71    0xad  3      OPC=jmpq_r64              
                                                                                      
.size strcpy, .-strcpy                                                                
Lowest Known Correct Cost (168)                                                       
                                                                                      
  .text                                                                               
  .globl strcpy                                                                       
  .type strcpy, @function                                                             
                                                                                      
#! file-offset 0                                                                      
#! rip-offset  0                                                                      
#! capacity    0 bytes                                                                
                                                                                      
# Text                                 #  Line  RIP   Bytes  Opcode                   
.strcpy:                               #        0     0      OPC=<label>              
  nop                                  #  1     0     1      OPC=nop                  
  nop                                  #  2     0x1   1      OPC=nop                  
  nop                                  #  3     0x2   1      OPC=nop                  
  nop                                  #  4     0x3   1      OPC=nop                  
  movq %rdi, %rcx                      #  5     0x4   3      OPC=movq_r64_r64_1       
  movl %esi, %edx                      #  6     0x7   2      OPC=movl_r32_r32         
  movq %rdi, %rax                      #  7     0x9   3      OPC=movq_r64_r64_1       
  nop                                  #  8     0xc   1      OPC=nop                  
  nop                                  #  9     0xd   1      OPC=nop                  
  nop                                  #  10    0xe   1      OPC=nop                  
  movq %rsi, %rdi                      #  11    0xf   3      OPC=movq_r64_r64         
  addb %al, %dil                       #  12    0x12  3      OPC=addb_r8_r8_1         
  salb $0x5, %dil                      #  13    0x15  4      OPC=salb_r8_imm8         
  jne .L_126860                        #  14    0x19  6      OPC=jne_label_1          
  nop                                  #  15    0x1f  1      OPC=nop                  
  nop                                  #  16    0x20  1      OPC=nop                  
  leal -0x7f7f7f80(%rcx,%rcx,8), %edi  #  17    0x21  7      OPC=leal_r32_m64         
  nop                                  #  18    0x28  1      OPC=nop                  
  nop                                  #  19    0x29  1      OPC=nop                  
  nop                                  #  20    0x2a  1      OPC=nop                  
  andl %esi, %esi                      #  21    0x2b  2      OPC=andl_r32_r32         
  movl (%r15,%rsi,1), %r8d             #  22    0x2d  4      OPC=movl_r32_m32         
  nop                                  #  23    0x31  1      OPC=nop                  
  nop                                  #  24    0x32  1      OPC=nop                  
  nop                                  #  25    0x33  1      OPC=nop                  
  nop                                  #  26    0x34  1      OPC=nop                  
  nop                                  #  27    0x35  1      OPC=nop                  
  andb $0x80, %dil                     #  28    0x36  4      OPC=andb_r8_imm8         
  jne .L_126860                        #  29    0x3a  6      OPC=jne_label_1          
.L_126820:                             #        0x40  0      OPC=<label>              
  orl %ebp, %ecx                       #  30    0x40  2      OPC=orl_r32_r32          
  movl %r8d, (%r15,%rcx,1)             #  31    0x42  4      OPC=movl_m32_r32         
  addl $0x4, %edx                      #  32    0x46  6      OPC=addl_r32_imm32       
  movl (%r15,%rdx,1), %r8d             #  33    0x4c  4      OPC=movl_r32_m32         
  addl $0x4, %ecx                      #  34    0x50  6      OPC=addl_r32_imm32       
  movl %r8d, %r9d                      #  35    0x56  3      OPC=movl_r32_r32_1       
  leal -0x1010101(%r8), %esi           #  36    0x59  7      OPC=leal_r32_m16         
  notl %r9d                            #  37    0x60  3      OPC=notl_r32             
  andl $0x80808080, %r9d               #  38    0x63  7      OPC=andl_r32_imm32       
  andl %esi, %r9d                      #  39    0x6a  3      OPC=andl_r32_r32         
  je .L_126820                         #  40    0x6d  6      OPC=je_label_1           
  nop                                  #  41    0x73  1      OPC=nop                  
  nop                                  #  42    0x74  1      OPC=nop                  
  nop                                  #  43    0x75  1      OPC=nop                  
  nop                                  #  44    0x76  1      OPC=nop                  
  nop                                  #  45    0x77  1      OPC=nop                  
  nop                                  #  46    0x78  1      OPC=nop                  
  nop                                  #  47    0x79  1      OPC=nop                  
  nop                                  #  48    0x7a  1      OPC=nop                  
  nop                                  #  49    0x7b  1      OPC=nop                  
  nop                                  #  50    0x7c  1      OPC=nop                  
  nop                                  #  51    0x7d  1      OPC=nop                  
  nop                                  #  52    0x7e  1      OPC=nop                  
  nop                                  #  53    0x7f  1      OPC=nop                  
.L_126860:                             #        0x80  0      OPC=<label>              
  incl %edx                            #  54    0x80  2      OPC=incl_r32             
  movsbl -0x1(%r15,%rdx,1), %esi       #  55    0x82  6      OPC=movsbl_r32_m8        
  addl $0x1, %ecx                      #  56    0x88  6      OPC=addl_r32_imm32       
  movb %sil, -0x1(%r15,%rcx,1)         #  57    0x8e  5      OPC=movb_m8_r8           
  orq %rsi, %rsi                       #  58    0x93  3      OPC=orq_r64_r64_1        
  jne .L_126860                        #  59    0x96  6      OPC=jne_label_1          
  nop                                  #  60    0x9c  1      OPC=nop                  
  nop                                  #  61    0x9d  1      OPC=nop                  
  nop                                  #  62    0x9e  1      OPC=nop                  
  nop                                  #  63    0x9f  1      OPC=nop                  
  nop                                  #  64    0xa0  1      OPC=nop                  
  popq %r11                            #  65    0xa1  2      OPC=popq_r64_1           
  andl $0xe0, %r11d                    #  66    0xa3  4      OPC=andl_r32_imm8        
  addq %r15, %r11                      #  67    0xa7  3      OPC=addq_r64_r64         
  jmpq %r11                            #  68    0xaa  3      OPC=jmpq_r64             
                                                                                      
.size strcpy, .-strcpy                                                                
                                                                                      

################################################################################

Search terminated successfully with a verified rewrite!
