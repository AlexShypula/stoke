Training TCs: 6
flags for addb_al_imm8: { }
flags for addw_ax_imm16: { }
flags for addl_eax_imm32: { }
flags for addw_m16_imm16: { }
flags for addw_m16_imm8: { }
flags for addw_m16_r16: { }
flags for addl_m32_imm32: { }
flags for addl_m32_imm8: { }
flags for addl_m32_r32: { }
flags for addq_m64_imm32: { }
flags for addq_m64_imm8: { }
flags for addq_m64_r64: { }
flags for addb_m8_imm8: { }
flags for addb_m8_r8: { }
flags for addb_m8_rh: { }
flags for addw_r16_imm16: { }
flags for addw_r16_imm8: { }
flags for addw_r16_m16: { }
flags for addw_r16_r16: { }
flags for addw_r16_r16_1: { }
flags for addl_r32_imm32: { }
flags for addl_r32_imm8: { }
flags for addl_r32_m32: { }
flags for addl_r32_r32: { }
flags for addl_r32_r32_1: { }
flags for addq_r64_imm32: { }
flags for addq_r64_imm8: { }
flags for addq_r64_m64: { }
flags for addq_r64_r64: { }
flags for addq_r64_r64_1: { }
flags for addb_r8_imm8: { }
flags for addb_r8_m8: { }
flags for addb_r8_r8: { }
flags for addb_r8_r8_1: { }
flags for addb_r8_rh: { }
flags for addb_r8_rh_1: { }
flags for addq_rax_imm32: { }
flags for addb_rh_imm8: { }
flags for addb_rh_m8: { }
flags for addb_rh_r8: { }
flags for addb_rh_r8_1: { }
flags for addb_rh_rh: { }
flags for addb_rh_rh_1: { }
flags for addpd_xmm_m128: { sse2 }
flags for addpd_xmm_xmm: { sse2 }
flags for addps_xmm_m128: { sse }
flags for addps_xmm_xmm: { sse }
flags for addsd_xmm_m64: { sse2 }
flags for addsd_xmm_xmm: { sse2 }
flags for addss_xmm_m32: { sse }
flags for addss_xmm_xmm: { sse }
flags for addsubpd_xmm_m128: { pni }
flags for addsubpd_xmm_xmm: { pni }
flags for addsubps_xmm_m128: { pni }
flags for addsubps_xmm_xmm: { pni }
flags for aesdec_xmm_m128: { aes }
flags for aesdec_xmm_xmm: { aes }
flags for aesdeclast_xmm_m128: { aes }
flags for aesdeclast_xmm_xmm: { aes }
flags for aesenc_xmm_m128: { aes }
flags for aesenc_xmm_xmm: { aes }
flags for aesenclast_xmm_m128: { aes }
flags for aesenclast_xmm_xmm: { aes }
flags for aesimc_xmm_m128: { aes }
flags for aesimc_xmm_xmm: { aes }
flags for aeskeygenassist_xmm_m128_imm8: { aes }
flags for aeskeygenassist_xmm_xmm_imm8: { aes }
flags for andb_al_imm8: { }
flags for andw_ax_imm16: { }
flags for andl_eax_imm32: { }
flags for andw_m16_imm16: { }
flags for andw_m16_imm8: { }
flags for andw_m16_r16: { }
flags for andl_m32_imm32: { }
flags for andl_m32_imm8: { }
flags for andl_m32_r32: { }
flags for andq_m64_imm32: { }
flags for andq_m64_imm8: { }
flags for andq_m64_r64: { }
flags for andb_m8_imm8: { }
flags for andb_m8_r8: { }
flags for andb_m8_rh: { }
flags for andw_r16_imm16: { }
flags for andw_r16_imm8: { }
flags for andw_r16_m16: { }
flags for andw_r16_r16: { }
flags for andw_r16_r16_1: { }
flags for andl_r32_imm32: { }
flags for andl_r32_imm8: { }
flags for andl_r32_m32: { }
flags for andl_r32_r32: { }
flags for andl_r32_r32_1: { }
flags for andq_r64_imm32: { }
flags for andq_r64_imm8: { }
flags for andq_r64_m64: { }
flags for andq_r64_r64: { }
flags for andq_r64_r64_1: { }
flags for andb_r8_imm8: { }
flags for andb_r8_m8: { }
flags for andb_r8_r8: { }
flags for andb_r8_r8_1: { }
flags for andb_r8_rh: { }
flags for andb_r8_rh_1: { }
flags for andq_rax_imm32: { }
flags for andb_rh_imm8: { }
flags for andb_rh_m8: { }
flags for andb_rh_r8: { }
flags for andb_rh_r8_1: { }
flags for andb_rh_rh: { }
flags for andb_rh_rh_1: { }
flags for andnl_r32_r32_m32: { bmi1 }
flags for andnl_r32_r32_r32: { bmi1 }
flags for andnq_r64_r64_m64: { bmi1 }
flags for andnq_r64_r64_r64: { bmi1 }
flags for andnpd_xmm_m128: { sse2 }
flags for andnpd_xmm_xmm: { sse2 }
flags for andnps_xmm_m128: { sse }
flags for andnps_xmm_xmm: { sse }
flags for andpd_xmm_m128: { sse2 }
flags for andpd_xmm_xmm: { sse2 }
flags for andps_xmm_m128: { sse }
flags for andps_xmm_xmm: { sse }
flags for bextrl_r32_m32_r32: { bmi1 }
flags for bextrl_r32_r32_r32: { bmi1 }
flags for bextrq_r64_m64_r64: { bmi1 }
flags for bextrq_r64_r64_r64: { bmi1 }
flags for blendpd_xmm_m128_imm8: { sse4_1 }
flags for blendpd_xmm_xmm_imm8: { sse4_1 }
flags for blendps_xmm_m128_imm8: { sse4_1 }
flags for blendps_xmm_xmm_imm8: { sse4_1 }
flags for blendvpd_xmm_m128_xmm0: { sse4_1 }
flags for blendvpd_xmm_xmm_xmm0: { sse4_1 }
flags for blendvps_xmm_m128_xmm0: { sse4_1 }
flags for blendvps_xmm_xmm_xmm0: { sse4_1 }
flags for blsil_r32_m32: { bmi1 }
flags for blsil_r32_r32: { bmi1 }
flags for blsiq_r64_m64: { bmi1 }
flags for blsiq_r64_r64: { bmi1 }
flags for blsmskl_r32_m32: { bmi1 }
flags for blsmskl_r32_r32: { bmi1 }
flags for blsmskq_r64_m64: { bmi1 }
flags for blsmskq_r64_r64: { bmi1 }
flags for blsrl_r32_m32: { bmi1 }
flags for blsrl_r32_r32: { bmi1 }
flags for blsrq_r64_m64: { bmi1 }
flags for blsrq_r64_r64: { bmi1 }
flags for bzhil_r32_m32_r32: { bmi2 }
flags for bzhil_r32_r32_r32: { bmi2 }
flags for bzhiq_r64_m64_r64: { bmi2 }
flags for bzhiq_r64_r64_r64: { bmi2 }
flags for cmovaw_r16_m16: { cmov }
flags for cmovaw_r16_r16: { cmov }
flags for cmoval_r32_m32: { cmov }
flags for cmoval_r32_r32: { cmov }
flags for cmovaq_r64_m64: { cmov }
flags for cmovaq_r64_r64: { cmov }
flags for cmovaew_r16_m16: { cmov }
flags for cmovaew_r16_r16: { cmov }
flags for cmovael_r32_m32: { cmov }
flags for cmovael_r32_r32: { cmov }
flags for cmovaeq_r64_m64: { cmov }
flags for cmovaeq_r64_r64: { cmov }
flags for cmovbw_r16_m16: { cmov }
flags for cmovbw_r16_r16: { cmov }
flags for cmovbl_r32_m32: { cmov }
flags for cmovbl_r32_r32: { cmov }
flags for cmovbq_r64_m64: { cmov }
flags for cmovbq_r64_r64: { cmov }
flags for cmovbew_r16_m16: { cmov }
flags for cmovbew_r16_r16: { cmov }
flags for cmovbel_r32_m32: { cmov }
flags for cmovbel_r32_r32: { cmov }
flags for cmovbeq_r64_m64: { cmov }
flags for cmovbeq_r64_r64: { cmov }
flags for cmovcw_r16_m16: { cmov }
flags for cmovcw_r16_r16: { cmov }
flags for cmovcl_r32_m32: { cmov }
flags for cmovcl_r32_r32: { cmov }
flags for cmovcq_r64_m64: { cmov }
flags for cmovcq_r64_r64: { cmov }
flags for cmovew_r16_m16: { cmov }
flags for cmovew_r16_r16: { cmov }
flags for cmovel_r32_m32: { cmov }
flags for cmovel_r32_r32: { cmov }
flags for cmoveq_r64_m64: { cmov }
flags for cmoveq_r64_r64: { cmov }
flags for cmovgw_r16_m16: { cmov }
flags for cmovgw_r16_r16: { cmov }
flags for cmovgl_r32_m32: { cmov }
flags for cmovgl_r32_r32: { cmov }
flags for cmovgq_r64_m64: { cmov }
flags for cmovgq_r64_r64: { cmov }
flags for cmovgew_r16_m16: { cmov }
flags for cmovgew_r16_r16: { cmov }
flags for cmovgel_r32_m32: { cmov }
flags for cmovgel_r32_r32: { cmov }
flags for cmovgeq_r64_m64: { cmov }
flags for cmovgeq_r64_r64: { cmov }
flags for cmovlw_r16_m16: { cmov }
flags for cmovlw_r16_r16: { cmov }
flags for cmovll_r32_m32: { cmov }
flags for cmovll_r32_r32: { cmov }
flags for cmovlq_r64_m64: { cmov }
flags for cmovlq_r64_r64: { cmov }
flags for cmovlew_r16_m16: { cmov }
flags for cmovlew_r16_r16: { cmov }
flags for cmovlel_r32_m32: { cmov }
flags for cmovlel_r32_r32: { cmov }
flags for cmovleq_r64_m64: { cmov }
flags for cmovleq_r64_r64: { cmov }
flags for cmovnaw_r16_m16: { cmov }
flags for cmovnaw_r16_r16: { cmov }
flags for cmovnal_r32_m32: { cmov }
flags for cmovnal_r32_r32: { cmov }
flags for cmovnaq_r64_m64: { cmov }
flags for cmovnaq_r64_r64: { cmov }
flags for cmovnaew_r16_m16: { cmov }
flags for cmovnaew_r16_r16: { cmov }
flags for cmovnael_r32_m32: { cmov }
flags for cmovnael_r32_r32: { cmov }
flags for cmovnaeq_r64_m64: { cmov }
flags for cmovnaeq_r64_r64: { cmov }
flags for cmovnbw_r16_m16: { cmov }
flags for cmovnbw_r16_r16: { cmov }
flags for cmovnbl_r32_m32: { cmov }
flags for cmovnbl_r32_r32: { cmov }
flags for cmovnbq_r64_m64: { cmov }
flags for cmovnbq_r64_r64: { cmov }
flags for cmovnbew_r16_m16: { cmov }
flags for cmovnbew_r16_r16: { cmov }
flags for cmovnbel_r32_m32: { cmov }
flags for cmovnbel_r32_r32: { cmov }
flags for cmovnbeq_r64_m64: { cmov }
flags for cmovnbeq_r64_r64: { cmov }
flags for cmovncw_r16_m16: { cmov }
flags for cmovncw_r16_r16: { cmov }
flags for cmovncl_r32_m32: { cmov }
flags for cmovncl_r32_r32: { cmov }
flags for cmovncq_r64_m64: { cmov }
flags for cmovncq_r64_r64: { cmov }
flags for cmovnew_r16_m16: { cmov }
flags for cmovnew_r16_r16: { cmov }
flags for cmovnel_r32_m32: { cmov }
flags for cmovnel_r32_r32: { cmov }
flags for cmovneq_r64_m64: { cmov }
flags for cmovneq_r64_r64: { cmov }
flags for cmovngw_r16_m16: { cmov }
flags for cmovngw_r16_r16: { cmov }
flags for cmovngl_r32_m32: { cmov }
flags for cmovngl_r32_r32: { cmov }
flags for cmovngq_r64_m64: { cmov }
flags for cmovngq_r64_r64: { cmov }
flags for cmovngew_r16_m16: { cmov }
flags for cmovngew_r16_r16: { cmov }
flags for cmovngel_r32_m32: { cmov }
flags for cmovngel_r32_r32: { cmov }
flags for cmovngeq_r64_m64: { cmov }
flags for cmovngeq_r64_r64: { cmov }
flags for cmovnlw_r16_m16: { cmov }
flags for cmovnlw_r16_r16: { cmov }
flags for cmovnll_r32_m32: { cmov }
flags for cmovnll_r32_r32: { cmov }
flags for cmovnlq_r64_m64: { cmov }
flags for cmovnlq_r64_r64: { cmov }
flags for cmovnlew_r16_m16: { cmov }
flags for cmovnlew_r16_r16: { cmov }
flags for cmovnlel_r32_m32: { cmov }
flags for cmovnlel_r32_r32: { cmov }
flags for cmovnleq_r64_m64: { cmov }
flags for cmovnleq_r64_r64: { cmov }
flags for cmovnow_r16_m16: { cmov }
flags for cmovnow_r16_r16: { cmov }
flags for cmovnol_r32_m32: { cmov }
flags for cmovnol_r32_r32: { cmov }
flags for cmovnoq_r64_m64: { cmov }
flags for cmovnoq_r64_r64: { cmov }
flags for cmovnpw_r16_m16: { cmov }
flags for cmovnpw_r16_r16: { cmov }
flags for cmovnpl_r32_m32: { cmov }
flags for cmovnpl_r32_r32: { cmov }
flags for cmovnpq_r64_m64: { cmov }
flags for cmovnpq_r64_r64: { cmov }
flags for cmovnsw_r16_m16: { cmov }
flags for cmovnsw_r16_r16: { cmov }
flags for cmovnsl_r32_m32: { cmov }
flags for cmovnsl_r32_r32: { cmov }
flags for cmovnsq_r64_m64: { cmov }
flags for cmovnsq_r64_r64: { cmov }
flags for cmovnzw_r16_m16: { cmov }
flags for cmovnzw_r16_r16: { cmov }
flags for cmovnzl_r32_m32: { cmov }
flags for cmovnzl_r32_r32: { cmov }
flags for cmovnzq_r64_m64: { cmov }
flags for cmovnzq_r64_r64: { cmov }
flags for cmovow_r16_m16: { cmov }
flags for cmovow_r16_r16: { cmov }
flags for cmovol_r32_m32: { cmov }
flags for cmovol_r32_r32: { cmov }
flags for cmovoq_r64_m64: { cmov }
flags for cmovoq_r64_r64: { cmov }
flags for cmovpw_r16_m16: { cmov }
flags for cmovpw_r16_r16: { cmov }
flags for cmovpl_r32_m32: { cmov }
flags for cmovpl_r32_r32: { cmov }
flags for cmovpq_r64_m64: { cmov }
flags for cmovpq_r64_r64: { cmov }
flags for cmovpew_r16_m16: { cmov }
flags for cmovpew_r16_r16: { cmov }
flags for cmovpel_r32_m32: { cmov }
flags for cmovpel_r32_r32: { cmov }
flags for cmovpeq_r64_m64: { cmov }
flags for cmovpeq_r64_r64: { cmov }
flags for cmovpow_r16_m16: { cmov }
flags for cmovpow_r16_r16: { cmov }
flags for cmovpol_r32_m32: { cmov }
flags for cmovpol_r32_r32: { cmov }
flags for cmovpoq_r64_m64: { cmov }
flags for cmovpoq_r64_r64: { cmov }
flags for cmovsw_r16_m16: { cmov }
flags for cmovsw_r16_r16: { cmov }
flags for cmovsl_r32_m32: { cmov }
flags for cmovsl_r32_r32: { cmov }
flags for cmovsq_r64_m64: { cmov }
flags for cmovsq_r64_r64: { cmov }
flags for cmovzw_r16_m16: { cmov }
flags for cmovzw_r16_r16: { cmov }
flags for cmovzl_r32_m32: { cmov }
flags for cmovzl_r32_r32: { cmov }
flags for cmovzq_r64_m64: { cmov }
flags for cmovzq_r64_r64: { cmov }
flags for comisd_xmm_m64: { sse2 }
flags for comisd_xmm_xmm: { sse2 }
flags for comiss_xmm_m32: { sse }
flags for comiss_xmm_xmm: { sse }
flags for cvtdq2pd_xmm_m64: { sse2 }
flags for cvtdq2pd_xmm_xmm: { sse2 }
flags for cvtdq2ps_xmm_m128: { sse2 }
flags for cvtdq2ps_xmm_xmm: { sse2 }
flags for cvtpd2dq_xmm_m128: { sse2 }
flags for cvtpd2dq_xmm_xmm: { sse2 }
flags for cvtpd2pi_mm_m128: { }
flags for cvtpd2pi_mm_xmm: { }
flags for cvtpd2ps_xmm_m128: { sse2 }
flags for cvtpd2ps_xmm_xmm: { sse2 }
flags for cvtpi2pd_xmm_m64: { }
flags for cvtpi2pd_xmm_mm: { }
flags for cvtpi2ps_xmm_m64: { }
flags for cvtpi2ps_xmm_mm: { }
flags for cvtps2dq_xmm_m128: { sse2 }
flags for cvtps2dq_xmm_xmm: { sse2 }
flags for cvtps2pd_xmm_m64: { sse2 }
flags for cvtps2pd_xmm_xmm: { sse2 }
flags for cvtps2pi_mm_m64: { }
flags for cvtps2pi_mm_xmm: { }
flags for cvtsd2si_r32_m64: { sse2 }
flags for cvtsd2si_r32_xmm: { sse2 }
flags for cvtsd2si_r64_m64: { sse2 }
flags for cvtsd2si_r64_xmm: { sse2 }
flags for cvtsd2ss_xmm_m64: { sse2 }
flags for cvtsd2ss_xmm_xmm: { sse2 }
flags for cvtsi2sdl_xmm_m32: { sse2 }
flags for cvtsi2sdq_xmm_m64: { sse2 }
flags for cvtsi2sdl_xmm_r32: { sse2 }
flags for cvtsi2sdq_xmm_r64: { sse2 }
flags for cvtsi2ssl_xmm_m32: { sse }
flags for cvtsi2ssq_xmm_m64: { sse }
flags for cvtsi2ssl_xmm_r32: { sse }
flags for cvtsi2ssq_xmm_r64: { sse }
flags for cvtss2sd_xmm_m32: { sse2 }
flags for cvtss2sd_xmm_xmm: { sse2 }
flags for cvtss2sil_r32_m32: { sse }
flags for cvtss2sil_r32_xmm: { sse }
flags for cvtss2siq_r64_m32: { sse }
flags for cvtss2siq_r64_xmm: { sse }
flags for cvttpd2dq_xmm_m128: { sse2 }
flags for cvttpd2dq_xmm_xmm: { sse2 }
flags for cvttpd2pi_mm_m128: { }
flags for cvttpd2pi_mm_xmm: { }
flags for cvttps2dq_xmm_m128: { sse2 }
flags for cvttps2dq_xmm_xmm: { sse2 }
flags for cvttps2pi_mm_m64: { }
flags for cvttps2pi_mm_xmm: { }
flags for cvttsd2si_r32_m64: { sse2 }
flags for cvttsd2si_r32_xmm: { sse2 }
flags for cvttsd2siq_r64_m64: { sse2 }
flags for cvttsd2siq_r64_xmm: { sse2 }
flags for cvttss2si_r32_m32: { sse }
flags for cvttss2si_r32_xmm: { sse }
flags for cvttss2siq_r64_m32: { sse }
flags for cvttss2siq_r64_xmm: { sse }
flags for decw_m16: { }
flags for decl_m32: { }
flags for decq_m64: { }
flags for decb_m8: { }
flags for decw_r16: { }
flags for decl_r32: { }
flags for decq_r64: { }
flags for decb_r8: { }
flags for decb_rh: { }
flags for dppd_xmm_m128_imm8: { sse4_1 }
flags for dppd_xmm_xmm_imm8: { sse4_1 }
flags for dpps_xmm_m128_imm8: { sse4_1 }
flags for dpps_xmm_xmm_imm8: { sse4_1 }
flags for extractps_m32_xmm_imm8: { sse4_1 }
flags for extractps_r32_xmm_imm8: { sse4_1 }
flags for extractps_r64_xmm_imm8: { sse4_1 }
flags for f2xm1: { fpu }
flags for fabs: { fpu }
flags for fadds_m32fp: { fpu }
flags for faddl_m64fp: { fpu }
flags for faddp: { fpu }
flags for fbld_m80bcd: { fpu }
flags for fbstp_m80bcd: { fpu }
flags for fchs: { fpu }
flags for fclex: { fpu }
flags for fcom: { fpu }
flags for fcoms_m32fp: { fpu }
flags for fcoml_m64fp: { fpu }
flags for fcomp: { fpu }
flags for fcomps_m32fp: { fpu }
flags for fcompl_m64fp: { fpu }
flags for fcompp: { fpu }
flags for fcos: { fpu }
flags for fdecstp: { fpu }
flags for fdivs_m32fp: { fpu }
flags for fdivl_m64fp: { fpu }
flags for fdivp: { fpu }
flags for fdivrs_m32fp: { fpu }
flags for fdivrl_m64fp: { fpu }
flags for fdivrp: { fpu }
flags for fiadd_m16int: { fpu }
flags for fiaddl_m32int: { fpu }
flags for ficom_m16int: { fpu }
flags for ficoml_m32int: { fpu }
flags for ficomp_m16int: { fpu }
flags for ficompl_m32int: { fpu }
flags for fidiv_m16int: { fpu }
flags for fidivl_m32int: { fpu }
flags for fidivr_m16int: { fpu }
flags for fidivrl_m32int: { fpu }
flags for fild_m16int: { fpu }
flags for fildl_m32int: { fpu }
flags for fildll_m64int: { fpu }
flags for fimul_m16int: { fpu }
flags for fimull_m32int: { fpu }
flags for fincstp: { fpu }
flags for finit: { fpu }
flags for fist_m16int: { fpu }
flags for fistl_m32int: { fpu }
flags for fistp_m16int: { fpu }
flags for fistpl_m32int: { fpu }
flags for fistpll_m64int: { fpu }
flags for fisttp_m16int: { fpu }
flags for fisttpl_m32int: { fpu }
flags for fisttpll_m64int: { fpu }
flags for fisub_m16int: { fpu }
flags for fisubl_m32int: { fpu }
flags for fisubr_m16int: { fpu }
flags for fisubrl_m32int: { fpu }
flags for flds_m32fp: { fpu }
flags for fldl_m64fp: { fpu }
flags for fldt_m80fp: { fpu }
flags for fld1: { fpu }
flags for fldl2e: { fpu }
flags for fldl2t: { fpu }
flags for fldlg2: { fpu }
flags for fldln2: { fpu }
flags for fldpi: { fpu }
flags for fldz: { fpu }
flags for fmuls_m32fp: { fpu }
flags for fmull_m64fp: { fpu }
flags for fmulp: { fpu }
flags for fnclex: { fpu }
flags for fninit: { fpu }
flags for fnop: { fpu }
flags for fnstsw_ax: { fpu }
flags for fpatan: { fpu }
flags for fprem: { fpu }
flags for fprem1: { fpu }
flags for fptan: { fpu }
flags for frndint: { fpu }
flags for fscale: { fpu }
flags for fsin: { fpu }
flags for fsincos: { fpu }
flags for fsqrt: { fpu }
flags for fsts_m32fp: { fpu }
flags for fstl_m64fp: { fpu }
flags for fstps_m32fp: { fpu }
flags for fstpl_m64fp: { fpu }
flags for fstpt_m80fp: { fpu }
flags for fstsw_ax: { fpu }
flags for fsubs_m32fp: { fpu }
flags for fsubl_m64fp: { fpu }
flags for fsubp: { fpu }
flags for fsubrs_m32fp: { fpu }
flags for fsubrl_m64fp: { fpu }
flags for fsubrp: { fpu }
flags for ftst: { fpu }
flags for fucom: { fpu }
flags for fucomp: { fpu }
flags for fucompp: { fpu }
flags for fwait: { fpu }
flags for fxam: { fpu }
flags for fxch: { fpu }
flags for fxtract: { fpu }
flags for fyl2x: { fpu }
flags for fyl2xp1: { fpu }
flags for haddpd_xmm_m128: { pni }
flags for haddpd_xmm_xmm: { pni }
flags for haddps_xmm_m128: { pni }
flags for haddps_xmm_xmm: { pni }
flags for hsubpd_xmm_m128: { pni }
flags for hsubpd_xmm_xmm: { pni }
flags for hsubps_xmm_m128: { pni }
flags for hsubps_xmm_xmm: { pni }
flags for incw_m16: { }
flags for incl_m32: { }
flags for incq_m64: { }
flags for incb_m8: { }
flags for incw_r16: { }
flags for incl_r32: { }
flags for incq_r64: { }
flags for incb_r8: { }
flags for incb_rh: { }
flags for insertps_xmm_m32_imm8: { sse4_1 }
flags for insertps_xmm_xmm_imm8: { sse4_1 }
flags for int_imm8: { }
flags for int_three: { }
flags for lahf: { lahf_lm }
flags for lddqu_xmm_m128: { pni }
flags for leaw_r16_m16: { }
flags for leaw_r16_m32: { }
flags for leaw_r16_m64: { }
flags for leal_r32_m16: { }
flags for leal_r32_m32: { }
flags for leal_r32_m64: { }
flags for leaq_r64_m16: { }
flags for leaq_r64_m32: { }
flags for leaq_r64_m64: { }
flags for lzcntw_r16_m16: { bmi1 }
flags for lzcntw_r16_r16: { bmi1 }
flags for lzcntl_r32_m32: { bmi1 }
flags for lzcntl_r32_r32: { bmi1 }
flags for lzcntq_r64_m64: { bmi1 }
flags for lzcntq_r64_r64: { bmi1 }
flags for maxpd_xmm_m128: { sse2 }
flags for maxpd_xmm_xmm: { sse2 }
flags for maxps_xmm_m128: { sse }
flags for maxps_xmm_xmm: { sse }
flags for maxsd_xmm_m64: { sse2 }
flags for maxsd_xmm_xmm: { sse2 }
flags for maxss_xmm_m32: { sse }
flags for maxss_xmm_xmm: { sse }
flags for minpd_xmm_m128: { sse2 }
flags for minpd_xmm_xmm: { sse2 }
flags for minps_xmm_m128: { sse }
flags for minps_xmm_xmm: { sse }
flags for minsd_xmm_m64: { sse2 }
flags for minsd_xmm_xmm: { sse2 }
flags for minss_xmm_m32: { sse }
flags for minss_xmm_xmm: { sse }
flags for movw_m16_imm16: { }
flags for movw_m16_r16: { }
flags for movl_m32_imm32: { }
flags for movl_m32_r32: { }
flags for movq_m64_imm32: { }
flags for movq_m64_r64: { }
flags for movb_m8_imm8: { }
flags for movb_m8_r8: { }
flags for movb_m8_rh: { }
flags for movw_r16_imm16: { }
flags for movw_r16_imm16_1: { }
flags for movw_r16_m16: { }
flags for movw_r16_r16: { }
flags for movw_r16_r16_1: { }
flags for movl_r32_imm32: { }
flags for movl_r32_imm32_1: { }
flags for movl_r32_m32: { }
flags for movl_r32_r32: { }
flags for movl_r32_r32_1: { }
flags for movq_r64_imm32: { }
flags for movq_r64_imm64: { }
flags for movq_r64_m64: { }
flags for movq_r64_r64: { }
flags for movq_r64_r64_1: { }
flags for movb_r8_imm8: { }
flags for movb_r8_imm8_1: { }
flags for movb_r8_m8: { }
flags for movb_r8_r8: { }
flags for movb_r8_r8_1: { }
flags for movb_r8_rh: { }
flags for movb_r8_rh_1: { }
flags for movb_rh_imm8: { }
flags for movb_rh_imm8_1: { }
flags for movb_rh_m8: { }
flags for movb_rh_r8: { }
flags for movb_rh_r8_1: { }
flags for movb_rh_rh: { }
flags for movb_rh_rh_1: { }
flags for movapd_m128_xmm: { sse2 }
flags for movapd_xmm_m128: { sse2 }
flags for movapd_xmm_xmm: { sse2 }
flags for movapd_xmm_xmm_1: { sse2 }
flags for movaps_m128_xmm: { sse }
flags for movaps_xmm_m128: { sse }
flags for movaps_xmm_xmm: { sse }
flags for movaps_xmm_xmm_1: { sse }
flags for movbew_m16_r16: { movbe }
flags for movbel_m32_r32: { movbe }
flags for movbeq_m64_r64: { movbe }
flags for movbew_r16_m16: { movbe }
flags for movbel_r32_m32: { movbe }
flags for movbeq_r64_m64: { movbe }
flags for movd_m32_mm: { mmx }
flags for movd_m32_xmm: { sse2 }
flags for movd_mm_m32: { mmx }
flags for movd_mm_r32: { mmx }
flags for movd_r32_mm: { mmx }
flags for movd_r32_xmm: { sse2 }
flags for movd_xmm_m32: { sse2 }
flags for movd_xmm_r32: { sse2 }
flags for movddup_xmm_m64: { pni }
flags for movddup_xmm_xmm: { pni }
flags for movdq2q_mm_xmm: { mmx }
flags for movdqa_m128_xmm: { sse2 }
flags for movdqa_xmm_m128: { sse2 }
flags for movdqa_xmm_xmm: { sse2 }
flags for movdqa_xmm_xmm_1: { sse2 }
flags for movdqu_m128_xmm: { sse2 }
flags for movdqu_xmm_m128: { sse2 }
flags for movdqu_xmm_xmm: { sse2 }
flags for movdqu_xmm_xmm_1: { sse2 }
flags for movhlps_xmm_xmm: { sse }
flags for movhpd_m64_xmm: { sse2 }
flags for movhpd_xmm_m64: { sse2 }
flags for movhps_m64_xmm: { sse }
flags for movhps_xmm_m64: { sse }
flags for movlhps_xmm_xmm: { sse }
flags for movlpd_m64_xmm: { sse2 }
flags for movlpd_xmm_m64: { sse2 }
flags for movlps_m64_xmm: { sse }
flags for movlps_xmm_m64: { sse }
flags for movmskpd_r32_xmm: { sse2 }
flags for movmskpd_r64_xmm: { sse2 }
flags for movmskps_r32_xmm: { sse }
flags for movmskps_r64_xmm: { sse }
flags for movntdq_m128_xmm: { sse2 }
flags for movntdq_m256_ymm: { avx }
flags for movntdqa_xmm_m128: { sse4_1 }
flags for movnti_m32_r32: { }
flags for movnti_m64_r64: { }
flags for movntpd_m128_xmm: { sse2 }
flags for movntps_m128_xmm: { sse }
flags for movntq_m64_mm: { }
flags for movq_m64_mm: { mmx }
flags for movq_m64_mm_1: { mmx }
flags for movq_m64_xmm: { sse2 }
flags for movq_m64_xmm_1: { sse2 }
flags for movq_mm_m64: { mmx }
flags for movq_mm_m64_1: { mmx }
flags for movq_mm_mm: { mmx }
flags for movq_mm_mm_1: { mmx }
flags for movq_mm_r64: { mmx }
flags for movq_r64_mm: { mmx }
flags for movq_r64_xmm: { sse2 }
flags for movq_xmm_m64: { sse2 }
flags for movq_xmm_m64_1: { sse2 }
flags for movq_xmm_r64: { sse2 }
flags for movq_xmm_xmm: { sse2 }
flags for movq_xmm_xmm_1: { sse2 }
flags for movq2dq_xmm_mm: { mmx }
flags for movsd_m64_xmm: { sse2 }
flags for movsd_xmm_m64: { sse2 }
flags for movsd_xmm_xmm: { sse2 }
flags for movsd_xmm_xmm_1: { sse2 }
flags for movshdup_xmm_m128: { pni }
flags for movshdup_xmm_xmm: { pni }
flags for movsldup_xmm_m128: { pni }
flags for movsldup_xmm_xmm: { pni }
flags for movss_m32_xmm: { sse }
flags for movss_xmm_m32: { sse }
flags for movss_xmm_xmm: { sse }
flags for movss_xmm_xmm_1: { sse }
flags for movsbw_r16_m8: { }
flags for movsbw_r16_r8: { }
flags for movsbw_r16_rh: { }
flags for movswl_r32_m16: { }
flags for movsbl_r32_m8: { }
flags for movswl_r32_r16: { }
flags for movsbl_r32_r8: { }
flags for movsbl_r32_rh: { }
flags for movswq_r64_m16: { }
flags for movsbq_r64_m8: { }
flags for movswq_r64_r16: { }
flags for movsbq_r64_r8: { }
flags for movslq_r64_m32: { }
flags for movslq_r64_r32: { }
flags for movupd_m128_xmm: { sse2 }
flags for movupd_xmm_m128: { sse2 }
flags for movupd_xmm_xmm: { sse2 }
flags for movupd_xmm_xmm_1: { sse2 }
flags for movups_m128_xmm: { sse }
flags for movups_xmm_m128: { sse }
flags for movups_xmm_xmm: { sse }
flags for movups_xmm_xmm_1: { sse }
flags for movzbw_r16_m8: { }
flags for movzbw_r16_r8: { }
flags for movzbw_r16_rh: { }
flags for movzwl_r32_m16: { }
flags for movzbl_r32_m8: { }
flags for movzwl_r32_r16: { }
flags for movzbl_r32_r8: { }
flags for movzbl_r32_rh: { }
flags for movzwq_r64_m16: { }
flags for movzbq_r64_m8: { }
flags for movzwq_r64_r16: { }
flags for movzbq_r64_r8: { }
flags for mpsadbw_xmm_m128_imm8: { sse4_1 }
flags for mpsadbw_xmm_xmm_imm8: { sse4_1 }
flags for negw_m16: { }
flags for negl_m32: { }
flags for negq_m64: { }
flags for negb_m8: { }
flags for negw_r16: { }
flags for negl_r32: { }
flags for negq_r64: { }
flags for negb_r8: { }
flags for negb_rh: { }
flags for nop: { }
flags for nopw_m16: { nopl }
flags for nopl_m32: { nopl }
flags for nopw_r16: { nopl }
flags for nopl_r32: { nopl }
flags for notw_m16: { }
flags for notl_m32: { }
flags for notq_m64: { }
flags for notb_m8: { }
flags for notw_r16: { }
flags for notl_r32: { }
flags for notq_r64: { }
flags for notb_r8: { }
flags for notb_rh: { }
flags for orb_al_imm8: { }
flags for orw_ax_imm16: { }
flags for orl_eax_imm32: { }
flags for orw_m16_imm16: { }
flags for orw_m16_imm8: { }
flags for orw_m16_r16: { }
flags for orl_m32_imm32: { }
flags for orl_m32_imm8: { }
flags for orl_m32_r32: { }
flags for orq_m64_imm32: { }
flags for orq_m64_imm8: { }
flags for orq_m64_r64: { }
flags for orb_m8_imm8: { }
flags for orb_m8_r8: { }
flags for orb_m8_rh: { }
flags for orw_r16_imm16: { }
flags for orw_r16_imm8: { }
flags for orw_r16_m16: { }
flags for orw_r16_r16: { }
flags for orw_r16_r16_1: { }
flags for orl_r32_imm32: { }
flags for orl_r32_imm8: { }
flags for orl_r32_m32: { }
flags for orl_r32_r32: { }
flags for orl_r32_r32_1: { }
flags for orq_r64_imm32: { }
flags for orq_r64_imm8: { }
flags for orq_r64_m64: { }
flags for orq_r64_r64: { }
flags for orq_r64_r64_1: { }
flags for orb_r8_imm8: { }
flags for orb_r8_m8: { }
flags for orb_r8_r8: { }
flags for orb_r8_r8_1: { }
flags for orb_r8_rh: { }
flags for orb_r8_rh_1: { }
flags for orq_rax_imm32: { }
flags for orb_rh_imm8: { }
flags for orb_rh_m8: { }
flags for orb_rh_r8: { }
flags for orb_rh_r8_1: { }
flags for orb_rh_rh: { }
flags for orb_rh_rh_1: { }
flags for orpd_xmm_m128: { sse2 }
flags for orpd_xmm_xmm: { sse2 }
flags for orps_xmm_m128: { sse }
flags for orps_xmm_xmm: { sse }
flags for pabsb_mm_m64: { ssse3 }
flags for pabsb_mm_mm: { ssse3 }
flags for pabsb_xmm_m128: { ssse3 }
flags for pabsb_xmm_xmm: { ssse3 }
flags for pabsd_mm_m64: { ssse3 }
flags for pabsd_mm_mm: { ssse3 }
flags for pabsd_xmm_m128: { ssse3 }
flags for pabsd_xmm_xmm: { ssse3 }
flags for pabsw_mm_m64: { ssse3 }
flags for pabsw_mm_mm: { ssse3 }
flags for pabsw_xmm_m128: { ssse3 }
flags for pabsw_xmm_xmm: { ssse3 }
flags for packssdw_mm_m64: { mmx }
flags for packssdw_mm_mm: { mmx }
flags for packssdw_xmm_m128: { sse2 }
flags for packssdw_xmm_xmm: { sse2 }
flags for packsswb_mm_m64: { mmx }
flags for packsswb_mm_mm: { mmx }
flags for packsswb_xmm_m128: { sse2 }
flags for packsswb_xmm_xmm: { sse2 }
flags for packusdw_xmm_m128: { sse4_1 }
flags for packusdw_xmm_xmm: { sse4_1 }
flags for packuswb_mm_m64: { mmx }
flags for packuswb_mm_mm: { mmx }
flags for packuswb_xmm_m128: { sse2 }
flags for packuswb_xmm_xmm: { sse2 }
flags for paddb_mm_m64: { mmx }
flags for paddb_mm_mm: { mmx }
flags for paddb_xmm_m128: { sse2 }
flags for paddb_xmm_xmm: { sse2 }
flags for paddd_mm_m64: { mmx }
flags for paddd_mm_mm: { mmx }
flags for paddd_xmm_m128: { sse2 }
flags for paddd_xmm_xmm: { sse2 }
flags for paddq_mm_m64: { sse2 }
flags for paddq_mm_mm: { sse2 }
flags for paddq_xmm_m128: { sse2 }
flags for paddq_xmm_xmm: { sse2 }
flags for paddsb_mm_m64: { mmx }
flags for paddsb_mm_mm: { mmx }
flags for paddsb_xmm_m128: { sse2 }
flags for paddsb_xmm_xmm: { sse2 }
flags for paddsw_mm_m64: { mmx }
flags for paddsw_mm_mm: { mmx }
flags for paddsw_xmm_m128: { sse2 }
flags for paddsw_xmm_xmm: { sse2 }
flags for paddusb_mm_m64: { mmx }
flags for paddusb_mm_mm: { mmx }
flags for paddusb_xmm_m128: { sse2 }
flags for paddusb_xmm_xmm: { sse2 }
flags for paddusw_mm_m64: { mmx }
flags for paddusw_mm_mm: { mmx }
flags for paddusw_xmm_m128: { sse2 }
flags for paddusw_xmm_xmm: { sse2 }
flags for paddw_mm_m64: { mmx }
flags for paddw_mm_mm: { mmx }
flags for paddw_xmm_m128: { sse2 }
flags for paddw_xmm_xmm: { sse2 }
flags for palignr_mm_m64_imm8: { ssse3 }
flags for palignr_mm_mm_imm8: { ssse3 }
flags for palignr_xmm_m128_imm8: { ssse3 }
flags for palignr_xmm_xmm_imm8: { ssse3 }
flags for pand_mm_m64: { mmx }
flags for pand_mm_mm: { mmx }
flags for pand_xmm_m128: { sse2 }
flags for pand_xmm_xmm: { sse2 }
flags for pandn_mm_m64: { mmx }
flags for pandn_mm_mm: { mmx }
flags for pandn_xmm_m128: { sse2 }
flags for pandn_xmm_xmm: { sse2 }
flags for pavgb_mm_m64: { sse }
flags for pavgb_mm_mm: { sse }
flags for pavgb_xmm_m128: { sse2 }
flags for pavgb_xmm_xmm: { sse2 }
flags for pavgw_mm_m64: { sse }
flags for pavgw_mm_mm: { sse }
flags for pavgw_xmm_m128: { sse2 }
flags for pavgw_xmm_xmm: { sse2 }
flags for pblendvb_xmm_m128_xmm0: { sse4_1 }
flags for pblendvb_xmm_xmm_xmm0: { sse4_1 }
flags for pblendw_xmm_m128_imm8: { sse4_1 }
flags for pblendw_xmm_xmm_imm8: { sse4_1 }
flags for pclmulqdq_xmm_m128_imm8: { pclmulqdq }
flags for pclmulqdq_xmm_xmm_imm8: { pclmulqdq }
flags for pcmpeqb_mm_m64: { mmx }
flags for pcmpeqb_mm_mm: { mmx }
flags for pcmpeqb_xmm_m128: { sse2 }
flags for pcmpeqb_xmm_xmm: { sse2 }
flags for pcmpeqd_mm_m64: { mmx }
flags for pcmpeqd_mm_mm: { mmx }
flags for pcmpeqd_xmm_m128: { sse2 }
flags for pcmpeqd_xmm_xmm: { sse2 }
flags for pcmpeqq_xmm_m128: { sse4_1 }
flags for pcmpeqq_xmm_xmm: { sse4_1 }
flags for pcmpeqw_mm_m64: { mmx }
flags for pcmpeqw_mm_mm: { mmx }
flags for pcmpeqw_xmm_m128: { sse2 }
flags for pcmpeqw_xmm_xmm: { sse2 }
flags for pcmpestri_xmm_m128_imm8: { sse4_2 }
flags for pcmpestri_xmm_xmm_imm8: { sse4_2 }
flags for pcmpestrm_xmm_m128_imm8: { sse4_2 }
flags for pcmpestrm_xmm_xmm_imm8: { sse4_2 }
flags for pcmpgtb_mm_m64: { mmx }
flags for pcmpgtb_mm_mm: { mmx }
flags for pcmpgtb_xmm_m128: { sse2 }
flags for pcmpgtb_xmm_xmm: { sse2 }
flags for pcmpgtd_mm_m64: { mmx }
flags for pcmpgtd_mm_mm: { mmx }
flags for pcmpgtd_xmm_m128: { sse2 }
flags for pcmpgtd_xmm_xmm: { sse2 }
flags for pcmpgtq_xmm_m128: { sse4_2 }
flags for pcmpgtq_xmm_xmm: { sse4_2 }
flags for pcmpgtw_mm_m64: { mmx }
flags for pcmpgtw_mm_mm: { mmx }
flags for pcmpgtw_xmm_m128: { sse2 }
flags for pcmpgtw_xmm_xmm: { sse2 }
flags for pcmpistri_xmm_m128_imm8: { sse4_2 }
flags for pcmpistri_xmm_xmm_imm8: { sse4_2 }
flags for pcmpistrm_xmm_m128_imm8: { sse4_2 }
flags for pcmpistrm_xmm_xmm_imm8: { sse4_2 }
flags for pdepl_r32_r32_m32: { bmi2 }
flags for pdepl_r32_r32_r32: { bmi2 }
flags for pdepq_r64_r64_m64: { bmi2 }
flags for pdepq_r64_r64_r64: { bmi2 }
flags for pextl_r32_r32_m32: { bmi2 }
flags for pextl_r32_r32_r32: { bmi2 }
flags for pextq_r64_r64_m64: { bmi2 }
flags for pextq_r64_r64_r64: { bmi2 }
flags for pextrb_m8_xmm_imm8: { sse4_1 }
flags for pextrb_r32_xmm_imm8: { sse4_1 }
flags for pextrb_r64_xmm_imm8: { sse4_1 }
flags for pextrd_m32_xmm_imm8: { sse4_1 }
flags for pextrd_r32_xmm_imm8: { sse4_1 }
flags for pextrq_m64_xmm_imm8: { sse4_1 }
flags for pextrq_r64_xmm_imm8: { sse4_1 }
flags for pextrw_m16_xmm_imm8: { sse4_1 }
flags for pextrw_r32_mm_imm8: { sse }
flags for pextrw_r32_xmm_imm8: { sse2 }
flags for pextrw_r32_xmm_imm8_1: { sse4_1 }
flags for pextrw_r64_mm_imm8: { sse }
flags for pextrw_r64_xmm_imm8: { sse2 }
flags for pextrw_r64_xmm_imm8_1: { sse4_1 }
flags for phaddd_mm_m64: { ssse3 }
flags for phaddd_mm_mm: { ssse3 }
flags for phaddd_xmm_m128: { ssse3 }
flags for phaddd_xmm_xmm: { ssse3 }
flags for phaddsw_mm_m64: { ssse3 }
flags for phaddsw_mm_mm: { ssse3 }
flags for phaddsw_xmm_m128: { ssse3 }
flags for phaddsw_xmm_xmm: { ssse3 }
flags for phaddw_mm_m64: { ssse3 }
flags for phaddw_mm_mm: { ssse3 }
flags for phaddw_xmm_m128: { ssse3 }
flags for phaddw_xmm_xmm: { ssse3 }
flags for phminposuw_xmm_m128: { sse4_1 }
flags for phminposuw_xmm_xmm: { sse4_1 }
flags for phsubd_mm_m64: { ssse3 }
flags for phsubd_mm_mm: { ssse3 }
flags for phsubd_xmm_m128: { ssse3 }
flags for phsubd_xmm_xmm: { ssse3 }
flags for phsubsw_mm_m64: { ssse3 }
flags for phsubsw_mm_mm: { ssse3 }
flags for phsubsw_xmm_m128: { ssse3 }
flags for phsubsw_xmm_xmm: { ssse3 }
flags for phsubw_mm_m64: { ssse3 }
flags for phsubw_mm_mm: { ssse3 }
flags for phsubw_xmm_m128: { ssse3 }
flags for phsubw_xmm_xmm: { ssse3 }
flags for pinsrb_xmm_m8_imm8: { sse4_1 }
flags for pinsrb_xmm_r32_imm8: { sse4_1 }
flags for pinsrd_xmm_m32_imm8: { sse4_1 }
flags for pinsrd_xmm_r32_imm8: { sse4_1 }
flags for pinsrw_mm_m16_imm8: { sse }
flags for pinsrw_mm_r32_imm8: { sse }
flags for pinsrw_xmm_m16_imm8: { sse2 }
flags for pinsrw_xmm_r32_imm8: { sse2 }
flags for pmaddubsw_mm_m64: { mmx ssse3 }
flags for pmaddubsw_mm_mm: { mmx ssse3 }
flags for pmaddubsw_xmm_m128: { ssse3 }
flags for pmaddubsw_xmm_xmm: { ssse3 }
flags for pmaddwd_mm_m64: { mmx }
flags for pmaddwd_mm_mm: { mmx }
flags for pmaddwd_xmm_m128: { sse2 }
flags for pmaddwd_xmm_xmm: { sse2 }
flags for pmaxsb_xmm_m128: { sse4_1 }
flags for pmaxsb_xmm_xmm: { sse4_1 }
flags for pmaxsd_xmm_m128: { sse4_1 }
flags for pmaxsd_xmm_xmm: { sse4_1 }
flags for pmaxsw_mm_m64: { sse }
flags for pmaxsw_mm_mm: { sse }
flags for pmaxsw_xmm_m128: { sse2 }
flags for pmaxsw_xmm_xmm: { sse2 }
flags for pmaxub_mm_m64: { sse }
flags for pmaxub_mm_mm: { sse }
flags for pmaxub_xmm_m128: { sse2 }
flags for pmaxub_xmm_xmm: { sse2 }
flags for pmaxud_xmm_m128: { sse4_1 }
flags for pmaxud_xmm_xmm: { sse4_1 }
flags for pmaxuw_xmm_m128: { sse4_1 }
flags for pmaxuw_xmm_xmm: { sse4_1 }
flags for pminsb_xmm_m128: { sse4_1 }
flags for pminsb_xmm_xmm: { sse4_1 }
flags for pminsd_xmm_m128: { sse4_1 }
flags for pminsd_xmm_xmm: { sse4_1 }
flags for pminsw_mm_m64: { sse }
flags for pminsw_mm_mm: { sse }
flags for pminsw_xmm_m128: { sse2 }
flags for pminsw_xmm_xmm: { sse2 }
flags for pminub_mm_m64: { sse }
flags for pminub_mm_mm: { sse }
flags for pminub_xmm_m128: { sse2 }
flags for pminub_xmm_xmm: { sse2 }
flags for pminud_xmm_m128: { sse4_1 }
flags for pminud_xmm_xmm: { sse4_1 }
flags for pminuw_xmm_m128: { sse4_1 }
flags for pminuw_xmm_xmm: { sse4_1 }
flags for pmovmskb_r32_mm: { sse }
flags for pmovmskb_r32_xmm: { sse2 }
flags for pmovmskb_r64_mm: { sse }
flags for pmovmskb_r64_xmm: { sse2 }
flags for pmovsxbd_xmm_m32: { sse4_1 }
flags for pmovsxbd_xmm_xmm: { sse4_1 }
flags for pmovsxbq_xmm_m16: { sse4_1 }
flags for pmovsxbq_xmm_xmm: { sse4_1 }
flags for pmovsxbw_xmm_m64: { sse4_1 }
flags for pmovsxbw_xmm_xmm: { sse4_1 }
flags for pmovsxdq_xmm_m64: { sse4_1 }
flags for pmovsxdq_xmm_xmm: { sse4_1 }
flags for pmovsxwd_xmm_m64: { sse4_1 }
flags for pmovsxwd_xmm_xmm: { sse4_1 }
flags for pmovsxwq_xmm_m32: { sse4_1 }
flags for pmovsxwq_xmm_xmm: { sse4_1 }
flags for pmovzxbd_xmm_m32: { sse4_1 }
flags for pmovzxbd_xmm_xmm: { sse4_1 }
flags for pmovzxbq_xmm_m16: { sse4_1 }
flags for pmovzxbq_xmm_xmm: { sse4_1 }
flags for pmovzxbw_xmm_m64: { sse4_1 }
flags for pmovzxbw_xmm_xmm: { sse4_1 }
flags for pmovzxdq_xmm_m64: { sse4_1 }
flags for pmovzxdq_xmm_xmm: { sse4_1 }
flags for pmovzxwd_xmm_m64: { sse4_1 }
flags for pmovzxwd_xmm_xmm: { sse4_1 }
flags for pmovzxwq_xmm_m32: { sse4_1 }
flags for pmovzxwq_xmm_xmm: { sse4_1 }
flags for pmuldq_xmm_m128: { sse4_1 }
flags for pmuldq_xmm_xmm: { sse4_1 }
flags for pmulhrsw_mm_m64: { ssse3 }
flags for pmulhrsw_mm_mm: { ssse3 }
flags for pmulhrsw_xmm_m128: { ssse3 }
flags for pmulhrsw_xmm_xmm: { ssse3 }
flags for pmulhuw_mm_m64: { sse }
flags for pmulhuw_mm_mm: { sse }
flags for pmulhuw_xmm_m128: { sse2 }
flags for pmulhuw_xmm_xmm: { sse2 }
flags for pmulhw_mm_m64: { mmx }
flags for pmulhw_mm_mm: { mmx }
flags for pmulhw_xmm_m128: { sse2 }
flags for pmulhw_xmm_xmm: { sse2 }
flags for pmulld_xmm_m128: { sse4_1 }
flags for pmulld_xmm_xmm: { sse4_1 }
flags for pmullw_mm_m64: { mmx }
flags for pmullw_mm_mm: { mmx }
flags for pmullw_xmm_m128: { sse2 }
flags for pmullw_xmm_xmm: { sse2 }
flags for pmuludq_mm_m64: { sse2 }
flags for pmuludq_mm_mm: { sse2 }
flags for pmuludq_xmm_m128: { sse2 }
flags for pmuludq_xmm_xmm: { sse2 }
flags for popw_m16: { }
flags for popq_m64: { }
flags for popw_r16: { }
flags for popw_r16_1: { }
flags for popq_r64: { }
flags for popq_r64_1: { }
flags for popcntw_r16_m16: { popcnt }
flags for popcntw_r16_r16: { popcnt }
flags for popcntl_r32_m32: { popcnt }
flags for popcntl_r32_r32: { popcnt }
flags for popcntq_r64_m64: { popcnt }
flags for popcntq_r64_r64: { popcnt }
flags for popf: { }
flags for popfq: { }
flags for por_mm_m64: { mmx }
flags for por_mm_mm: { mmx }
flags for por_xmm_m128: { sse2 }
flags for por_xmm_xmm: { sse2 }
flags for psadbw_mm_m64: { sse }
flags for psadbw_mm_mm: { sse }
flags for psadbw_xmm_m128: { sse2 }
flags for psadbw_xmm_xmm: { sse2 }
flags for pshufb_mm_m64: { ssse3 }
flags for pshufb_mm_mm: { ssse3 }
flags for pshufb_xmm_m128: { ssse3 }
flags for pshufb_xmm_xmm: { ssse3 }
flags for pshufd_xmm_m128_imm8: { sse2 }
flags for pshufd_xmm_xmm_imm8: { sse2 }
flags for pshufhw_xmm_m128_imm8: { sse2 }
flags for pshufhw_xmm_xmm_imm8: { sse2 }
flags for pshuflw_xmm_m128_imm8: { sse2 }
flags for pshuflw_xmm_xmm_imm8: { sse2 }
flags for pshufw_mm_m64_imm8: { }
flags for pshufw_mm_mm_imm8: { }
flags for psignb_mm_m64: { ssse3 }
flags for psignb_mm_mm: { ssse3 }
flags for psignb_xmm_m128: { ssse3 }
flags for psignb_xmm_xmm: { ssse3 }
flags for psignd_mm_m64: { ssse3 }
flags for psignd_mm_mm: { ssse3 }
flags for psignd_xmm_m128: { ssse3 }
flags for psignd_xmm_xmm: { ssse3 }
flags for psignw_mm_m64: { ssse3 }
flags for psignw_mm_mm: { ssse3 }
flags for psignw_xmm_m128: { ssse3 }
flags for psignw_xmm_xmm: { ssse3 }
flags for pslld_mm_imm8: { mmx }
flags for pslld_mm_m64: { mmx }
flags for pslld_mm_mm: { mmx }
flags for pslld_xmm_imm8: { sse2 }
flags for pslld_xmm_m128: { sse2 }
flags for pslld_xmm_xmm: { sse2 }
flags for pslldq_xmm_imm8: { sse2 }
flags for psllq_mm_imm8: { mmx }
flags for psllq_mm_m64: { mmx }
flags for psllq_mm_mm: { mmx }
flags for psllq_xmm_imm8: { sse2 }
flags for psllq_xmm_m128: { sse2 }
flags for psllq_xmm_xmm: { sse2 }
flags for psllw_mm_imm8: { mmx }
flags for psllw_mm_m64: { mmx }
flags for psllw_mm_mm: { mmx }
flags for psllw_xmm_imm8: { sse2 }
flags for psllw_xmm_m128: { sse2 }
flags for psllw_xmm_xmm: { sse2 }
flags for psrad_mm_imm8: { mmx }
flags for psrad_mm_m64: { mmx }
flags for psrad_mm_mm: { mmx }
flags for psrad_xmm_imm8: { sse2 }
flags for psrad_xmm_m128: { sse2 }
flags for psrad_xmm_xmm: { sse2 }
flags for psraw_mm_imm8: { mmx }
flags for psraw_mm_m64: { mmx }
flags for psraw_mm_mm: { mmx }
flags for psraw_xmm_imm8: { sse2 }
flags for psraw_xmm_m128: { sse2 }
flags for psraw_xmm_xmm: { sse2 }
flags for psrld_mm_imm8: { mmx }
flags for psrld_mm_m64: { mmx }
flags for psrld_mm_mm: { mmx }
flags for psrld_xmm_imm8: { sse2 }
flags for psrld_xmm_m128: { sse2 }
flags for psrld_xmm_xmm: { sse2 }
flags for psrldq_xmm_imm8: { sse2 }
flags for psrlq_mm_imm8: { mmx }
flags for psrlq_mm_m64: { mmx }
flags for psrlq_mm_mm: { mmx }
flags for psrlq_xmm_imm8: { sse2 }
flags for psrlq_xmm_m128: { sse2 }
flags for psrlq_xmm_xmm: { sse2 }
flags for psrlw_mm_imm8: { mmx }
flags for psrlw_mm_m64: { mmx }
flags for psrlw_mm_mm: { mmx }
flags for psrlw_xmm_imm8: { sse2 }
flags for psrlw_xmm_m128: { sse2 }
flags for psrlw_xmm_xmm: { sse2 }
flags for psubb_mm_m64: { mmx }
flags for psubb_mm_mm: { mmx }
flags for psubb_xmm_m128: { sse2 }
flags for psubb_xmm_xmm: { sse2 }
flags for psubd_mm_m64: { mmx }
flags for psubd_mm_mm: { mmx }
flags for psubd_xmm_m128: { sse2 }
flags for psubd_xmm_xmm: { sse2 }
flags for psubq_mm_m64: { sse2 }
flags for psubq_mm_mm: { sse2 }
flags for psubq_xmm_m128: { sse2 }
flags for psubq_xmm_xmm: { sse2 }
flags for psubsb_mm_m64: { mmx }
flags for psubsb_mm_mm: { mmx }
flags for psubsb_xmm_m128: { sse2 }
flags for psubsb_xmm_xmm: { sse2 }
flags for psubsw_mm_m64: { mmx }
flags for psubsw_mm_mm: { mmx }
flags for psubsw_xmm_m128: { sse2 }
flags for psubsw_xmm_xmm: { sse2 }
flags for psubusb_mm_m64: { mmx }
flags for psubusb_mm_mm: { mmx }
flags for psubusb_xmm_m128: { sse2 }
flags for psubusb_xmm_xmm: { sse2 }
flags for psubusw_mm_m64: { mmx }
flags for psubusw_mm_mm: { mmx }
flags for psubusw_xmm_m128: { sse2 }
flags for psubusw_xmm_xmm: { sse2 }
flags for psubw_mm_m64: { mmx }
flags for psubw_mm_mm: { mmx }
flags for psubw_xmm_m128: { sse2 }
flags for psubw_xmm_xmm: { sse2 }
flags for ptest_xmm_m128: { sse4_1 }
flags for ptest_xmm_xmm: { sse4_1 }
flags for punpckhbw_mm_m64: { mmx }
flags for punpckhbw_mm_mm: { mmx }
flags for punpckhbw_xmm_m128: { sse2 }
flags for punpckhbw_xmm_xmm: { sse2 }
flags for punpckhdq_mm_m64: { mmx }
flags for punpckhdq_mm_mm: { mmx }
flags for punpckhdq_xmm_m128: { sse2 }
flags for punpckhdq_xmm_xmm: { sse2 }
flags for punpckhqdq_xmm_m128: { sse2 }
flags for punpckhqdq_xmm_xmm: { sse2 }
flags for punpckhwd_mm_m64: { mmx }
flags for punpckhwd_mm_mm: { mmx }
flags for punpckhwd_xmm_m128: { sse2 }
flags for punpckhwd_xmm_xmm: { sse2 }
flags for punpcklbw_mm_m32: { mmx }
flags for punpcklbw_mm_mm: { mmx }
flags for punpcklbw_xmm_m128: { sse2 }
flags for punpcklbw_xmm_xmm: { sse2 }
flags for punpckldq_mm_m32: { mmx }
flags for punpckldq_mm_mm: { mmx }
flags for punpckldq_xmm_m128: { sse2 }
flags for punpckldq_xmm_xmm: { sse2 }
flags for punpcklqdq_xmm_m128: { sse2 }
flags for punpcklqdq_xmm_xmm: { sse2 }
flags for punpcklwd_mm_m32: { mmx }
flags for punpcklwd_mm_mm: { mmx }
flags for punpcklwd_xmm_m128: { sse2 }
flags for punpcklwd_xmm_xmm: { sse2 }
flags for pushq_imm16: { }
flags for pushq_imm32: { }
flags for pushq_imm8: { }
flags for pushw_m16: { }
flags for pushq_m64: { }
flags for pushw_r16: { }
flags for pushw_r16_1: { }
flags for pushq_r64: { }
flags for pushq_r64_1: { }
flags for pushf: { }
flags for pushfq: { }
flags for pxor_mm_m64: { mmx }
flags for pxor_mm_mm: { mmx }
flags for pxor_xmm_m128: { sse2 }
flags for pxor_xmm_xmm: { sse2 }
flags for rcpps_xmm_m128: { sse }
flags for rcpps_xmm_xmm: { sse }
flags for rcpss_xmm_m32: { sse }
flags for rcpss_xmm_xmm: { sse }
flags for rdrand_r16: { rdrand }
flags for rdrand_r32: { rdrand }
flags for rdrand_r64: { rdrand }
flags for repz scasb_m8_1: { rep_good }
flags for roundpd_xmm_m128_imm8: { sse4_1 }
flags for roundpd_xmm_xmm_imm8: { sse4_1 }
flags for roundps_xmm_m128_imm8: { sse4_1 }
flags for roundps_xmm_xmm_imm8: { sse4_1 }
flags for roundsd_xmm_m64_imm8: { sse4_1 }
flags for roundsd_xmm_xmm_imm8: { sse4_1 }
flags for roundss_xmm_m32_imm8: { sse4_1 }
flags for roundss_xmm_xmm_imm8: { sse4_1 }
flags for rsqrtps_xmm_m128: { sse }
flags for rsqrtps_xmm_xmm: { sse }
flags for rsqrtss_xmm_m32: { sse }
flags for rsqrtss_xmm_xmm: { sse }
flags for sahf: { lahf_lm }
flags for salw_m16_cl: { }
flags for salw_m16_imm8: { }
flags for salw_m16_one: { }
flags for sall_m32_cl: { }
flags for sall_m32_imm8: { }
flags for sall_m32_one: { }
flags for salq_m64_cl: { }
flags for salq_m64_imm8: { }
flags for salq_m64_one: { }
flags for salb_m8_cl: { }
flags for salb_m8_imm8: { }
flags for salb_m8_one: { }
flags for salw_r16_cl: { }
flags for salw_r16_imm8: { }
flags for salw_r16_one: { }
flags for sall_r32_cl: { }
flags for sall_r32_imm8: { }
flags for sall_r32_one: { }
flags for salq_r64_cl: { }
flags for salq_r64_imm8: { }
flags for salq_r64_one: { }
flags for salb_r8_cl: { }
flags for salb_r8_imm8: { }
flags for salb_r8_one: { }
flags for salb_rh_cl: { }
flags for salb_rh_imm8: { }
flags for salb_rh_one: { }
flags for sarw_m16_cl: { }
flags for sarw_m16_imm8: { }
flags for sarw_m16_one: { }
flags for sarl_m32_cl: { }
flags for sarl_m32_imm8: { }
flags for sarl_m32_one: { }
flags for sarq_m64_cl: { }
flags for sarq_m64_imm8: { }
flags for sarq_m64_one: { }
flags for sarb_m8_cl: { }
flags for sarb_m8_imm8: { }
flags for sarb_m8_one: { }
flags for sarw_r16_cl: { }
flags for sarw_r16_imm8: { }
flags for sarw_r16_one: { }
flags for sarl_r32_cl: { }
flags for sarl_r32_imm8: { }
flags for sarl_r32_one: { }
flags for sarq_r64_cl: { }
flags for sarq_r64_imm8: { }
flags for sarq_r64_one: { }
flags for sarb_r8_cl: { }
flags for sarb_r8_imm8: { }
flags for sarb_r8_one: { }
flags for sarb_rh_cl: { }
flags for sarb_rh_imm8: { }
flags for sarb_rh_one: { }
flags for sarxl_r32_m32_r32: { bmi2 }
flags for sarxl_r32_r32_r32: { bmi2 }
flags for sarxq_r64_m64_r64: { bmi2 }
flags for sarxq_r64_r64_r64: { bmi2 }
flags for shlw_m16_cl: { }
flags for shlw_m16_imm8: { }
flags for shlw_m16_one: { }
flags for shll_m32_cl: { }
flags for shll_m32_imm8: { }
flags for shll_m32_one: { }
flags for shlq_m64_cl: { }
flags for shlq_m64_imm8: { }
flags for shlq_m64_one: { }
flags for shlb_m8_cl: { }
flags for shlb_m8_imm8: { }
flags for shlb_m8_one: { }
flags for shlw_r16_cl: { }
flags for shlw_r16_imm8: { }
flags for shlw_r16_one: { }
flags for shll_r32_cl: { }
flags for shll_r32_imm8: { }
flags for shll_r32_one: { }
flags for shlq_r64_cl: { }
flags for shlq_r64_imm8: { }
flags for shlq_r64_one: { }
flags for shlb_r8_cl: { }
flags for shlb_r8_imm8: { }
flags for shlb_r8_one: { }
flags for shlb_rh_cl: { }
flags for shlb_rh_imm8: { }
flags for shlb_rh_one: { }
flags for shldw_m16_r16_cl: { }
flags for shldw_m16_r16_imm8: { }
flags for shldl_m32_r32_cl: { }
flags for shldl_m32_r32_imm8: { }
flags for shldq_m64_r64_cl: { }
flags for shldq_m64_r64_imm8: { }
flags for shldw_r16_r16_cl: { }
flags for shldw_r16_r16_imm8: { }
flags for shldl_r32_r32_cl: { }
flags for shldl_r32_r32_imm8: { }
flags for shldq_r64_r64_cl: { }
flags for shldq_r64_r64_imm8: { }
flags for shlxl_r32_m32_r32: { bmi2 }
flags for shlxl_r32_r32_r32: { bmi2 }
flags for shlxq_r64_m64_r64: { bmi2 }
flags for shlxq_r64_r64_r64: { bmi2 }
flags for shrw_m16_cl: { }
flags for shrw_m16_imm8: { }
flags for shrw_m16_one: { }
flags for shrl_m32_cl: { }
flags for shrl_m32_imm8: { }
flags for shrl_m32_one: { }
flags for shrq_m64_cl: { }
flags for shrq_m64_imm8: { }
flags for shrq_m64_one: { }
flags for shrb_m8_cl: { }
flags for shrb_m8_imm8: { }
flags for shrb_m8_one: { }
flags for shrw_r16_cl: { }
flags for shrw_r16_imm8: { }
flags for shrw_r16_one: { }
flags for shrl_r32_cl: { }
flags for shrl_r32_imm8: { }
flags for shrl_r32_one: { }
flags for shrq_r64_cl: { }
flags for shrq_r64_imm8: { }
flags for shrq_r64_one: { }
flags for shrb_r8_cl: { }
flags for shrb_r8_imm8: { }
flags for shrb_r8_one: { }
flags for shrb_rh_cl: { }
flags for shrb_rh_imm8: { }
flags for shrb_rh_one: { }
flags for shrxl_r32_m32_r32: { bmi2 }
flags for shrxl_r32_r32_r32: { bmi2 }
flags for shrxq_r64_m64_r64: { bmi2 }
flags for shrxq_r64_r64_r64: { bmi2 }
flags for shufpd_xmm_m128_imm8: { sse2 }
flags for shufpd_xmm_xmm_imm8: { sse2 }
flags for shufps_xmm_m128_imm8: { sse }
flags for shufps_xmm_xmm_imm8: { sse }
flags for sqrtpd_xmm_m128: { sse2 }
flags for sqrtpd_xmm_xmm: { sse2 }
flags for sqrtps_xmm_m128: { sse }
flags for sqrtps_xmm_xmm: { sse }
flags for sqrtsd_xmm_m64: { sse2 }
flags for sqrtsd_xmm_xmm: { sse2 }
flags for sqrtss_xmm_m32: { sse }
flags for sqrtss_xmm_xmm: { sse }
flags for subb_al_imm8: { }
flags for subw_ax_imm16: { }
flags for subl_eax_imm32: { }
flags for subw_m16_imm16: { }
flags for subw_m16_imm8: { }
flags for subw_m16_r16: { }
flags for subl_m32_imm32: { }
flags for subl_m32_imm8: { }
flags for subl_m32_r32: { }
flags for subq_m64_imm32: { }
flags for subq_m64_imm8: { }
flags for subq_m64_r64: { }
flags for subb_m8_imm8: { }
flags for subb_m8_r8: { }
flags for subb_m8_rh: { }
flags for subw_r16_imm16: { }
flags for subw_r16_imm8: { }
flags for subw_r16_m16: { }
flags for subw_r16_r16: { }
flags for subw_r16_r16_1: { }
flags for subl_r32_imm32: { }
flags for subl_r32_imm8: { }
flags for subl_r32_m32: { }
flags for subl_r32_r32: { }
flags for subl_r32_r32_1: { }
flags for subq_r64_imm32: { }
flags for subq_r64_imm8: { }
flags for subq_r64_m64: { }
flags for subq_r64_r64: { }
flags for subq_r64_r64_1: { }
flags for subb_r8_imm8: { }
flags for subb_r8_m8: { }
flags for subb_r8_r8: { }
flags for subb_r8_r8_1: { }
flags for subb_r8_rh: { }
flags for subb_r8_rh_1: { }
flags for subq_rax_imm32: { }
flags for subb_rh_imm8: { }
flags for subb_rh_m8: { }
flags for subb_rh_r8: { }
flags for subb_rh_r8_1: { }
flags for subb_rh_rh: { }
flags for subb_rh_rh_1: { }
flags for subpd_xmm_m128: { sse2 }
flags for subpd_xmm_xmm: { sse2 }
flags for subps_xmm_m128: { sse }
flags for subps_xmm_xmm: { sse }
flags for subsd_xmm_m64: { sse2 }
flags for subsd_xmm_xmm: { sse2 }
flags for subss_xmm_m32: { sse }
flags for subss_xmm_xmm: { sse }
flags for tzcntw_r16_m16: { bmi1 }
flags for tzcntw_r16_r16: { bmi1 }
flags for tzcntl_r32_m32: { bmi1 }
flags for tzcntl_r32_r32: { bmi1 }
flags for tzcntq_r64_m64: { bmi1 }
flags for tzcntq_r64_r64: { bmi1 }
flags for ucomisd_xmm_m64: { sse2 }
flags for ucomisd_xmm_xmm: { sse2 }
flags for ucomiss_xmm_m32: { sse }
flags for ucomiss_xmm_xmm: { sse }
flags for unpckhpd_xmm_m128: { sse2 }
flags for unpckhpd_xmm_xmm: { sse2 }
flags for unpckhps_xmm_m128: { sse }
flags for unpckhps_xmm_xmm: { sse }
flags for unpcklpd_xmm_m128: { sse2 }
flags for unpcklpd_xmm_xmm: { sse2 }
flags for unpcklps_xmm_m128: { sse }
flags for unpcklps_xmm_xmm: { sse }
flags for vaddpd_xmm_xmm_m128: { avx }
flags for vaddpd_xmm_xmm_xmm: { avx }
flags for vaddpd_ymm_ymm_m256: { avx }
flags for vaddpd_ymm_ymm_ymm: { avx }
flags for vaddps_xmm_xmm_m128: { avx }
flags for vaddps_xmm_xmm_xmm: { avx }
flags for vaddps_ymm_ymm_m256: { avx }
flags for vaddps_ymm_ymm_ymm: { avx }
flags for vaddsd_xmm_xmm_m64: { avx }
flags for vaddsd_xmm_xmm_xmm: { avx }
flags for vaddss_xmm_xmm_m32: { avx }
flags for vaddss_xmm_xmm_xmm: { avx }
flags for vaddsubpd_xmm_xmm_m128: { avx }
flags for vaddsubpd_xmm_xmm_xmm: { avx }
flags for vaddsubpd_ymm_ymm_m256: { avx }
flags for vaddsubpd_ymm_ymm_ymm: { avx }
flags for vaddsubps_xmm_xmm_m128: { avx }
flags for vaddsubps_xmm_xmm_xmm: { avx }
flags for vaddsubps_ymm_ymm_m256: { avx }
flags for vaddsubps_ymm_ymm_ymm: { avx }
flags for vaesdec_xmm_xmm_m128: { aes avx }
flags for vaesdec_xmm_xmm_xmm: { aes avx }
flags for vaesdeclast_xmm_xmm_m128: { aes avx }
flags for vaesdeclast_xmm_xmm_xmm: { aes avx }
flags for vaesenc_xmm_xmm_m128: { aes avx }
flags for vaesenc_xmm_xmm_xmm: { aes avx }
flags for vaesenclast_xmm_xmm_m128: { aes avx }
flags for vaesenclast_xmm_xmm_xmm: { aes avx }
flags for vaesimc_xmm_m128: { aes avx }
flags for vaesimc_xmm_xmm: { aes avx }
flags for vaeskeygenassist_xmm_m128_imm8: { aes avx }
flags for vaeskeygenassist_xmm_xmm_imm8: { aes avx }
flags for vandnpd_xmm_xmm_m128: { avx }
flags for vandnpd_xmm_xmm_xmm: { avx }
flags for vandnpd_ymm_ymm_m256: { avx }
flags for vandnpd_ymm_ymm_ymm: { avx }
flags for vandnps_xmm_xmm_m128: { avx }
flags for vandnps_xmm_xmm_xmm: { avx }
flags for vandnps_ymm_ymm_m256: { avx }
flags for vandnps_ymm_ymm_ymm: { avx }
flags for vandpd_xmm_xmm_m128: { avx }
flags for vandpd_xmm_xmm_xmm: { avx }
flags for vandpd_ymm_ymm_m256: { avx }
flags for vandpd_ymm_ymm_ymm: { avx }
flags for vandps_xmm_xmm_m128: { avx }
flags for vandps_xmm_xmm_xmm: { avx }
flags for vandps_ymm_ymm_m256: { avx }
flags for vandps_ymm_ymm_ymm: { avx }
flags for vblendpd_xmm_xmm_m128_imm8: { avx }
flags for vblendpd_xmm_xmm_xmm_imm8: { avx }
flags for vblendpd_ymm_ymm_m256_imm8: { avx }
flags for vblendpd_ymm_ymm_ymm_imm8: { avx }
flags for vblendps_xmm_xmm_m128_imm8: { avx }
flags for vblendps_xmm_xmm_xmm_imm8: { avx }
flags for vblendps_ymm_ymm_m256_imm8: { avx }
flags for vblendps_ymm_ymm_ymm_imm8: { avx }
flags for vblendvpd_xmm_xmm_m128_xmm: { avx }
flags for vblendvpd_xmm_xmm_xmm_xmm: { avx }
flags for vblendvpd_ymm_ymm_m256_ymm: { avx }
flags for vblendvpd_ymm_ymm_ymm_ymm: { avx }
flags for vblendvps_xmm_xmm_m128_xmm: { avx }
flags for vblendvps_xmm_xmm_xmm_xmm: { avx }
flags for vblendvps_ymm_ymm_m256_ymm: { avx }
flags for vblendvps_ymm_ymm_ymm_ymm: { avx }
flags for vbroadcastf128_ymm_m128: { avx }
flags for vpbroadcasti128_ymm_m128: { avx2 }
flags for vbroadcastsd_ymm_m64: { avx }
flags for vbroadcastsd_ymm_xmm: { avx2 }
flags for vbroadcastss_xmm_m32: { avx }
flags for vbroadcastss_xmm_xmm: { avx2 }
flags for vbroadcastss_ymm_m32: { avx }
flags for vbroadcastss_ymm_xmm: { avx2 }
flags for vcmppd_xmm_xmm_m128_imm8: { avx }
flags for vcmppd_xmm_xmm_xmm_imm8: { avx }
flags for vcmppd_ymm_ymm_m256_imm8: { avx }
flags for vcmppd_ymm_ymm_ymm_imm8: { avx }
flags for vcmpps_xmm_xmm_m128_imm8: { avx }
flags for vcmpps_xmm_xmm_xmm_imm8: { avx }
flags for vcmpps_ymm_ymm_m256_imm8: { avx }
flags for vcmpps_ymm_ymm_ymm_imm8: { avx }
flags for vcmpsd_xmm_xmm_m64_imm8: { avx }
flags for vcmpsd_xmm_xmm_xmm_imm8: { avx }
flags for vcmpss_xmm_xmm_m32_imm8: { avx }
flags for vcmpss_xmm_xmm_xmm_imm8: { avx }
flags for vcomisd_xmm_m64: { avx }
flags for vcomisd_xmm_xmm: { avx }
flags for vcomiss_xmm_m32: { avx }
flags for vcomiss_xmm_xmm: { avx }
flags for vcvtdq2pd_xmm_m64: { avx }
flags for vcvtdq2pd_xmm_xmm: { avx }
flags for vcvtdq2pd_ymm_m128: { avx }
flags for vcvtdq2pd_ymm_ymm: { avx }
flags for vcvtdq2ps_xmm_m128: { avx }
flags for vcvtdq2ps_xmm_xmm: { avx }
flags for vcvtdq2ps_ymm_m256: { avx }
flags for vcvtdq2ps_ymm_ymm: { avx }
flags for vcvtpd2dqx_xmm_m128: { avx }
flags for vcvtpd2dq_xmm_m256: { avx }
flags for vcvtpd2dqx_xmm_xmm: { avx }
flags for vcvtpd2dq_xmm_ymm: { avx }
flags for vcvtpd2ps_xmm_m128: { avx }
flags for vcvtpd2ps_xmm_m256: { avx }
flags for vcvtpd2ps_xmm_xmm: { avx }
flags for vcvtpd2ps_xmm_ymm: { avx }
flags for vcvtph2ps_xmm_m64: { f16c }
flags for vcvtph2ps_xmm_xmm: { f16c }
flags for vcvtph2ps_ymm_m128: { f16c }
flags for vcvtph2ps_ymm_xmm: { f16c }
flags for vcvtps2dq_xmm_m128: { avx }
flags for vcvtps2dq_xmm_xmm: { avx }
flags for vcvtps2dq_ymm_m256: { avx }
flags for vcvtps2dq_ymm_ymm: { avx }
flags for vcvtps2pd_xmm_m64: { avx }
flags for vcvtps2pd_xmm_xmm: { avx }
flags for vcvtps2pd_ymm_m128: { avx }
flags for vcvtps2pd_ymm_xmm: { avx }
flags for vcvtps2ph_m128_ymm_imm8: { f16c }
flags for vcvtps2ph_m64_xmm_imm8: { f16c }
flags for vcvtps2ph_xmm_xmm_imm8: { f16c }
flags for vcvtps2ph_xmm_ymm_imm8: { f16c }
flags for vcvtsd2sil_r32_m64: { avx }
flags for vcvtsd2sil_r32_xmm: { avx }
flags for vcvtsd2siq_r64_m64: { avx }
flags for vcvtsd2siq_r64_xmm: { avx }
flags for vcvtsd2ss_xmm_xmm_m64: { avx }
flags for vcvtsd2ss_xmm_xmm_xmm: { avx }
flags for vcvtsi2sdl_xmm_xmm_m32: { avx }
flags for vcvtsi2sdq_xmm_xmm_m64: { avx }
flags for vcvtsi2sdl_xmm_xmm_r32: { avx }
flags for vcvtsi2sdq_xmm_xmm_r64: { avx }
flags for vcvtsi2ssl_xmm_xmm_m32: { avx }
flags for vcvtsi2ssq_xmm_xmm_m64: { avx }
flags for vcvtsi2ssl_xmm_xmm_r32: { avx }
flags for vcvtsi2ssq_xmm_xmm_r64: { avx }
flags for vcvtss2sd_xmm_xmm_m32: { avx }
flags for vcvtss2sd_xmm_xmm_xmm: { avx }
flags for vcvtss2sil_r32_m32: { avx }
flags for vcvtss2sil_r32_xmm: { avx }
flags for vcvtss2siq_r64_m32: { avx }
flags for vcvtss2siq_r64_xmm: { avx }
flags for vcvttpd2dq_xmm_m128: { avx }
flags for vcvttpd2dq_xmm_m256: { avx }
flags for vcvttpd2dq_xmm_xmm: { avx }
flags for vcvttpd2dq_xmm_ymm: { avx }
flags for vcvttps2dq_xmm_m128: { avx }
flags for vcvttps2dq_xmm_xmm: { avx }
flags for vcvttps2dq_ymm_m256: { avx }
flags for vcvttps2dq_ymm_ymm: { avx }
flags for vcvttsd2si_r32_m64: { avx }
flags for vcvttsd2si_r32_xmm: { avx }
flags for vcvttsd2siq_r64_m64: { avx }
flags for vcvttsd2siq_r64_xmm: { avx }
flags for vcvttss2si_r32_m32: { avx }
flags for vcvttss2si_r32_xmm: { avx }
flags for vcvttss2siq_r64_m32: { avx }
flags for vcvttss2siq_r64_xmm: { avx }
flags for vdivpd_xmm_xmm_m128: { avx }
flags for vdivpd_xmm_xmm_xmm: { avx }
flags for vdivpd_ymm_ymm_m256: { avx }
flags for vdivpd_ymm_ymm_ymm: { avx }
flags for vdivps_xmm_xmm_m128: { avx }
flags for vdivps_xmm_xmm_xmm: { avx }
flags for vdivps_ymm_ymm_m256: { avx }
flags for vdivps_ymm_ymm_ymm: { avx }
flags for vdivsd_xmm_xmm_m64: { avx }
flags for vdivsd_xmm_xmm_xmm: { avx }
flags for vdivss_xmm_xmm_m32: { avx }
flags for vdivss_xmm_xmm_xmm: { avx }
flags for vdppd_xmm_xmm_m128_imm8: { avx }
flags for vdppd_xmm_xmm_xmm_imm8: { avx }
flags for vdpps_xmm_xmm_m128_imm8: { avx }
flags for vdpps_xmm_xmm_xmm_imm8: { avx }
flags for vdpps_ymm_ymm_m256_imm8: { avx }
flags for vdpps_ymm_ymm_ymm_imm8: { avx }
flags for vextractf128_m128_ymm_imm8: { avx }
flags for vextractf128_xmm_ymm_imm8: { avx }
flags for vextracti128_m128_ymm_imm8: { avx2 }
flags for vextracti128_xmm_ymm_imm8: { avx2 }
flags for vextractps_m32_xmm_imm8: { avx }
flags for vextractps_r32_xmm_imm8: { avx }
flags for vfmadd132pd_xmm_xmm_m128: { fma }
flags for vfmadd132pd_xmm_xmm_xmm: { fma }
flags for vfmadd132pd_ymm_ymm_m256: { fma }
flags for vfmadd132pd_ymm_ymm_ymm: { fma }
flags for vfmadd132ps_xmm_xmm_m128: { fma }
flags for vfmadd132ps_xmm_xmm_xmm: { fma }
flags for vfmadd132ps_ymm_ymm_m256: { fma }
flags for vfmadd132ps_ymm_ymm_ymm: { fma }
flags for vfmadd132sd_xmm_xmm_m64: { fma }
flags for vfmadd132sd_xmm_xmm_xmm: { fma }
flags for vfmadd132ss_xmm_xmm_m32: { fma }
flags for vfmadd132ss_xmm_xmm_xmm: { fma }
flags for vfmadd213pd_xmm_xmm_m128: { fma }
flags for vfmadd213pd_xmm_xmm_xmm: { fma }
flags for vfmadd213pd_ymm_ymm_m256: { fma }
flags for vfmadd213pd_ymm_ymm_ymm: { fma }
flags for vfmadd213ps_xmm_xmm_m128: { fma }
flags for vfmadd213ps_xmm_xmm_xmm: { fma }
flags for vfmadd213ps_ymm_ymm_m256: { fma }
flags for vfmadd213ps_ymm_ymm_ymm: { fma }
flags for vfmadd213sd_xmm_xmm_m64: { fma }
flags for vfmadd213sd_xmm_xmm_xmm: { fma }
flags for vfmadd213ss_xmm_xmm_m32: { fma }
flags for vfmadd213ss_xmm_xmm_xmm: { fma }
flags for vfmadd231pd_xmm_xmm_m128: { fma }
flags for vfmadd231pd_xmm_xmm_xmm: { fma }
flags for vfmadd231pd_ymm_ymm_m256: { fma }
flags for vfmadd231pd_ymm_ymm_ymm: { fma }
flags for vfmadd231ps_xmm_xmm_m128: { fma }
flags for vfmadd231ps_xmm_xmm_xmm: { fma }
flags for vfmadd231ps_ymm_ymm_m256: { fma }
flags for vfmadd231ps_ymm_ymm_ymm: { fma }
flags for vfmadd231sd_xmm_xmm_m64: { fma }
flags for vfmadd231sd_xmm_xmm_xmm: { fma }
flags for vfmadd231ss_xmm_xmm_m32: { fma }
flags for vfmadd231ss_xmm_xmm_xmm: { fma }
flags for vfmaddsub132pd_xmm_xmm_m128: { fma }
flags for vfmaddsub132pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub132pd_ymm_ymm_m256: { fma }
flags for vfmaddsub132pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub132ps_xmm_xmm_m128: { fma }
flags for vfmaddsub132ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub132ps_ymm_ymm_m256: { fma }
flags for vfmaddsub132ps_ymm_ymm_ymm: { fma }
flags for vfmaddsub213pd_xmm_xmm_m128: { fma }
flags for vfmaddsub213pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub213pd_ymm_ymm_m256: { fma }
flags for vfmaddsub213pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub213ps_xmm_xmm_m128: { fma }
flags for vfmaddsub213ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub213ps_ymm_ymm_m256: { fma }
flags for vfmaddsub213ps_ymm_ymm_ymm: { fma }
flags for vfmaddsub231pd_xmm_xmm_m128: { fma }
flags for vfmaddsub231pd_xmm_xmm_xmm: { fma }
flags for vfmaddsub231pd_ymm_ymm_m256: { fma }
flags for vfmaddsub231pd_ymm_ymm_ymm: { fma }
flags for vfmaddsub231ps_xmm_xmm_m128: { fma }
flags for vfmaddsub231ps_xmm_xmm_xmm: { fma }
flags for vfmaddsub231ps_ymm_ymm_m256: { fma }
flags for vfmaddsub231ps_ymm_ymm_ymm: { fma }
flags for vfmsub132pd_xmm_xmm_m128: { fma }
flags for vfmsub132pd_xmm_xmm_xmm: { fma }
flags for vfmsub132pd_ymm_ymm_m256: { fma }
flags for vfmsub132pd_ymm_ymm_ymm: { fma }
flags for vfmsub132ps_xmm_xmm_m128: { fma }
flags for vfmsub132ps_xmm_xmm_xmm: { fma }
flags for vfmsub132ps_ymm_ymm_m256: { fma }
flags for vfmsub132ps_ymm_ymm_ymm: { fma }
flags for vfmsub132sd_xmm_xmm_m64: { fma }
flags for vfmsub132sd_xmm_xmm_xmm: { fma }
flags for vfmsub132ss_xmm_xmm_m32: { fma }
flags for vfmsub132ss_xmm_xmm_xmm: { fma }
flags for vfmsub213pd_xmm_xmm_m128: { fma }
flags for vfmsub213pd_xmm_xmm_xmm: { fma }
flags for vfmsub213pd_ymm_ymm_m256: { fma }
flags for vfmsub213pd_ymm_ymm_ymm: { fma }
flags for vfmsub213ps_xmm_xmm_m128: { fma }
flags for vfmsub213ps_xmm_xmm_xmm: { fma }
flags for vfmsub213ps_ymm_ymm_m256: { fma }
flags for vfmsub213ps_ymm_ymm_ymm: { fma }
flags for vfmsub213sd_xmm_xmm_m64: { fma }
flags for vfmsub213sd_xmm_xmm_xmm: { fma }
flags for vfmsub213ss_xmm_xmm_m32: { fma }
flags for vfmsub213ss_xmm_xmm_xmm: { fma }
flags for vfmsub231pd_xmm_xmm_m128: { fma }
flags for vfmsub231pd_xmm_xmm_xmm: { fma }
flags for vfmsub231pd_ymm_ymm_m256: { fma }
flags for vfmsub231pd_ymm_ymm_ymm: { fma }
flags for vfmsub231ps_xmm_xmm_m128: { fma }
flags for vfmsub231ps_xmm_xmm_xmm: { fma }
flags for vfmsub231ps_ymm_ymm_m256: { fma }
flags for vfmsub231ps_ymm_ymm_ymm: { fma }
flags for vfmsub231sd_xmm_xmm_m64: { fma }
flags for vfmsub231sd_xmm_xmm_xmm: { fma }
flags for vfmsub231ss_xmm_xmm_m32: { fma }
flags for vfmsub231ss_xmm_xmm_xmm: { fma }
flags for vfmsubadd132pd_xmm_xmm_m128: { fma }
flags for vfmsubadd132pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd132pd_ymm_ymm_m256: { fma }
flags for vfmsubadd132pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd132ps_xmm_xmm_m128: { fma }
flags for vfmsubadd132ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd132ps_ymm_ymm_m256: { fma }
flags for vfmsubadd132ps_ymm_ymm_ymm: { fma }
flags for vfmsubadd213pd_xmm_xmm_m128: { fma }
flags for vfmsubadd213pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd213pd_ymm_ymm_m256: { fma }
flags for vfmsubadd213pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd213ps_xmm_xmm_m128: { fma }
flags for vfmsubadd213ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd213ps_ymm_ymm_m256: { fma }
flags for vfmsubadd213ps_ymm_ymm_ymm: { fma }
flags for vfmsubadd231pd_xmm_xmm_m128: { fma }
flags for vfmsubadd231pd_xmm_xmm_xmm: { fma }
flags for vfmsubadd231pd_ymm_ymm_m256: { fma }
flags for vfmsubadd231pd_ymm_ymm_ymm: { fma }
flags for vfmsubadd231ps_xmm_xmm_m128: { fma }
flags for vfmsubadd231ps_xmm_xmm_xmm: { fma }
flags for vfmsubadd231ps_ymm_ymm_m256: { fma }
flags for vfmsubadd231ps_ymm_ymm_ymm: { fma }
flags for vfnmadd132pd_xmm_xmm_m128: { fma }
flags for vfnmadd132pd_xmm_xmm_xmm: { fma }
flags for vfnmadd132pd_ymm_ymm_m256: { fma }
flags for vfnmadd132pd_ymm_ymm_ymm: { fma }
flags for vfnmadd132ps_xmm_xmm_m128: { fma }
flags for vfnmadd132ps_xmm_xmm_xmm: { fma }
flags for vfnmadd132ps_ymm_ymm_m256: { fma }
flags for vfnmadd132ps_ymm_ymm_ymm: { fma }
flags for vfnmadd132sd_xmm_xmm_m64: { fma }
flags for vfnmadd132sd_xmm_xmm_xmm: { fma }
flags for vfnmadd132ss_xmm_xmm_m32: { fma }
flags for vfnmadd132ss_xmm_xmm_xmm: { fma }
flags for vfnmadd213pd_xmm_xmm_m128: { fma }
flags for vfnmadd213pd_xmm_xmm_xmm: { fma }
flags for vfnmadd213pd_ymm_ymm_m256: { fma }
flags for vfnmadd213pd_ymm_ymm_ymm: { fma }
flags for vfnmadd213ps_xmm_xmm_m128: { fma }
flags for vfnmadd213ps_xmm_xmm_xmm: { fma }
flags for vfnmadd213ps_ymm_ymm_m256: { fma }
flags for vfnmadd213ps_ymm_ymm_ymm: { fma }
flags for vfnmadd213sd_xmm_xmm_m64: { fma }
flags for vfnmadd213sd_xmm_xmm_xmm: { fma }
flags for vfnmadd213ss_xmm_xmm_m32: { fma }
flags for vfnmadd213ss_xmm_xmm_xmm: { fma }
flags for vfnmadd231pd_xmm_xmm_m128: { fma }
flags for vfnmadd231pd_xmm_xmm_xmm: { fma }
flags for vfnmadd231pd_ymm_ymm_m256: { fma }
flags for vfnmadd231pd_ymm_ymm_ymm: { fma }
flags for vfnmadd231ps_xmm_xmm_m128: { fma }
flags for vfnmadd231ps_xmm_xmm_xmm: { fma }
flags for vfnmadd231ps_ymm_ymm_m256: { fma }
flags for vfnmadd231ps_ymm_ymm_ymm: { fma }
flags for vfnmadd231sd_xmm_xmm_m64: { fma }
flags for vfnmadd231sd_xmm_xmm_xmm: { fma }
flags for vfnmadd231ss_xmm_xmm_m32: { fma }
flags for vfnmadd231ss_xmm_xmm_xmm: { fma }
flags for vfnmsub132pd_xmm_xmm_m128: { fma }
flags for vfnmsub132pd_xmm_xmm_xmm: { fma }
flags for vfnmsub132pd_ymm_ymm_m256: { fma }
flags for vfnmsub132pd_ymm_ymm_ymm: { fma }
flags for vfnmsub132ps_xmm_xmm_m128: { fma }
flags for vfnmsub132ps_xmm_xmm_xmm: { fma }
flags for vfnmsub132ps_ymm_ymm_m256: { fma }
flags for vfnmsub132ps_ymm_ymm_ymm: { fma }
flags for vfnmsub132sd_xmm_xmm_m64: { fma }
flags for vfnmsub132sd_xmm_xmm_xmm: { fma }
flags for vfnmsub132ss_xmm_xmm_m32: { fma }
flags for vfnmsub132ss_xmm_xmm_xmm: { fma }
flags for vfnmsub213pd_xmm_xmm_m128: { fma }
flags for vfnmsub213pd_xmm_xmm_xmm: { fma }
flags for vfnmsub213pd_ymm_ymm_m256: { fma }
flags for vfnmsub213pd_ymm_ymm_ymm: { fma }
flags for vfnmsub213ps_xmm_xmm_m128: { fma }
flags for vfnmsub213ps_xmm_xmm_xmm: { fma }
flags for vfnmsub213ps_ymm_ymm_m256: { fma }
flags for vfnmsub213ps_ymm_ymm_ymm: { fma }
flags for vfnmsub213sd_xmm_xmm_m64: { fma }
flags for vfnmsub213sd_xmm_xmm_xmm: { fma }
flags for vfnmsub213ss_xmm_xmm_m32: { fma }
flags for vfnmsub213ss_xmm_xmm_xmm: { fma }
flags for vfnmsub231pd_xmm_xmm_m128: { fma }
flags for vfnmsub231pd_xmm_xmm_xmm: { fma }
flags for vfnmsub231pd_ymm_ymm_m256: { fma }
flags for vfnmsub231pd_ymm_ymm_ymm: { fma }
flags for vfnmsub231ps_xmm_xmm_m128: { fma }
flags for vfnmsub231ps_xmm_xmm_xmm: { fma }
flags for vfnmsub231ps_ymm_ymm_m256: { fma }
flags for vfnmsub231ps_ymm_ymm_ymm: { fma }
flags for vfnmsub231sd_xmm_xmm_m64: { fma }
flags for vfnmsub231sd_xmm_xmm_xmm: { fma }
flags for vfnmsub231ss_xmm_xmm_m32: { fma }
flags for vfnmsub231ss_xmm_xmm_xmm: { fma }
flags for vgatherdpd_xmm_m32_xmm: { avx2 }
flags for vgatherdpd_ymm_m32_ymm: { avx2 }
flags for vgatherdps_xmm_m32_xmm: { avx2 }
flags for vgatherdps_ymm_m32_ymm: { avx2 }
flags for vgatherqpd_xmm_m64_xmm: { avx2 }
flags for vgatherqpd_ymm_m64_ymm: { avx2 }
flags for vgatherqps_xmm_m64_xmm: { avx2 }
flags for vgatherqps_xmm_m64_xmm_1: { avx2 }
flags for vhaddpd_xmm_xmm_m128: { avx }
flags for vhaddpd_xmm_xmm_xmm: { avx }
flags for vhaddpd_ymm_ymm_m256: { avx }
flags for vhaddpd_ymm_ymm_ymm: { avx }
flags for vhaddps_xmm_xmm_m128: { avx }
flags for vhaddps_xmm_xmm_xmm: { avx }
flags for vhaddps_ymm_ymm_m256: { avx }
flags for vhaddps_ymm_ymm_ymm: { avx }
flags for vhsubpd_xmm_xmm_m128: { avx }
flags for vhsubpd_xmm_xmm_xmm: { avx }
flags for vhsubpd_ymm_ymm_m256: { avx }
flags for vhsubpd_ymm_ymm_ymm: { avx }
flags for vhsubps_xmm_xmm_m128: { avx }
flags for vhsubps_xmm_xmm_xmm: { avx }
flags for vhsubps_ymm_ymm_m256: { avx }
flags for vhsubps_ymm_ymm_ymm: { avx }
flags for vinsertf128_ymm_ymm_m128_imm8: { avx }
flags for vinsertf128_ymm_ymm_xmm_imm8: { avx }
flags for vinserti128_ymm_ymm_m128_imm8: { avx2 }
flags for vinserti128_ymm_ymm_xmm_imm8: { avx2 }
flags for vinsertps_xmm_xmm_m32_imm8: { avx }
flags for vinsertps_xmm_xmm_xmm_imm8: { avx }
flags for vlddqu_xmm_m128: { avx }
flags for vlddqu_ymm_m256: { avx }
flags for vmaskmovpd_m128_xmm_xmm: { avx }
flags for vmaskmovpd_m256_ymm_ymm: { avx }
flags for vmaskmovpd_xmm_xmm_m128: { avx }
flags for vmaskmovpd_ymm_ymm_m256: { avx }
flags for vmaskmovps_m128_xmm_xmm: { avx }
flags for vmaskmovps_m256_ymm_ymm: { avx }
flags for vmaskmovps_xmm_xmm_m128: { avx }
flags for vmaskmovps_ymm_ymm_m256: { avx }
flags for vmaxpd_xmm_xmm_m128: { avx }
flags for vmaxpd_xmm_xmm_xmm: { avx }
flags for vmaxpd_ymm_ymm_m256: { avx }
flags for vmaxpd_ymm_ymm_ymm: { avx }
flags for vmaxps_xmm_xmm_m128: { avx }
flags for vmaxps_xmm_xmm_xmm: { avx }
flags for vmaxps_ymm_ymm_m256: { avx }
flags for vmaxps_ymm_ymm_ymm: { avx }
flags for vmaxsd_xmm_xmm_m64: { avx }
flags for vmaxsd_xmm_xmm_xmm: { avx }
flags for vmaxss_xmm_xmm_m32: { avx }
flags for vmaxss_xmm_xmm_xmm: { avx }
flags for vminpd_xmm_xmm_m128: { avx }
flags for vminpd_xmm_xmm_xmm: { avx }
flags for vminpd_ymm_ymm_m256: { avx }
flags for vminpd_ymm_ymm_ymm: { avx }
flags for vminps_xmm_xmm_m128: { avx }
flags for vminps_xmm_xmm_xmm: { avx }
flags for vminps_ymm_ymm_m256: { avx }
flags for vminps_ymm_ymm_ymm: { avx }
flags for vminsd_xmm_xmm_m64: { avx }
flags for vminsd_xmm_xmm_xmm: { avx }
flags for vminss_xmm_xmm_m32: { avx }
flags for vminss_xmm_xmm_xmm: { avx }
flags for vmovapd_m128_xmm: { avx }
flags for vmovapd_m256_ymm: { avx }
flags for vmovapd_xmm_m128: { avx }
flags for vmovapd_xmm_xmm: { avx }
flags for vmovapd_xmm_xmm_1: { avx }
flags for vmovapd_ymm_m256: { avx }
flags for vmovapd_ymm_ymm: { avx }
flags for vmovapd_ymm_ymm_1: { avx }
flags for vmovaps_m128_xmm: { avx }
flags for vmovaps_m256_ymm: { avx }
flags for vmovaps_xmm_m128: { avx }
flags for vmovaps_xmm_xmm: { avx }
flags for vmovaps_xmm_xmm_1: { avx }
flags for vmovaps_ymm_m256: { avx }
flags for vmovaps_ymm_ymm: { avx }
flags for vmovaps_ymm_ymm_1: { avx }
flags for vmovd_m32_xmm: { avx }
flags for vmovd_r32_xmm: { avx }
flags for vmovd_xmm_m32: { avx }
flags for vmovd_xmm_r32: { avx }
flags for vmovddup_xmm_m64: { avx }
flags for vmovddup_xmm_xmm: { avx }
flags for vmovddup_ymm_m256: { avx }
flags for vmovddup_ymm_ymm: { avx }
flags for vmovdqa_m128_xmm: { avx }
flags for vmovdqa_m256_ymm: { avx }
flags for vmovdqa_xmm_m128: { avx }
flags for vmovdqa_xmm_xmm: { avx }
flags for vmovdqa_xmm_xmm_1: { avx }
flags for vmovdqa_ymm_m256: { avx }
flags for vmovdqa_ymm_ymm: { avx }
flags for vmovdqa_ymm_ymm_1: { avx }
flags for vmovdqu_m128_xmm: { avx }
flags for vmovdqu_m256_ymm: { avx }
flags for vmovdqu_xmm_m128: { avx }
flags for vmovdqu_xmm_xmm: { avx }
flags for vmovdqu_xmm_xmm_1: { avx }
flags for vmovdqu_ymm_m256: { avx }
flags for vmovdqu_ymm_ymm: { avx }
flags for vmovdqu_ymm_ymm_1: { avx }
flags for vmovhlps_xmm_xmm_xmm: { avx }
flags for vmovhpd_m64_xmm: { avx }
flags for vmovhpd_xmm_xmm_m64: { avx }
flags for vmovhps_m64_xmm: { avx }
flags for vmovhps_xmm_xmm_m64: { avx }
flags for vmovlhps_xmm_xmm_xmm: { avx }
flags for vmovlpd_m64_xmm: { avx }
flags for vmovlpd_xmm_xmm_m64: { avx }
flags for vmovlps_m64_xmm: { avx }
flags for vmovlps_xmm_xmm_m64: { avx }
flags for vmovmskpd_r32_xmm: { avx }
flags for vmovmskpd_r32_ymm: { avx }
flags for vmovmskpd_r64_xmm: { avx }
flags for vmovmskpd_r64_ymm: { avx }
flags for vmovmskps_r32_xmm: { avx }
flags for vmovmskps_r32_ymm: { avx }
flags for vmovmskps_r64_xmm: { avx }
flags for vmovmskps_r64_ymm: { avx }
flags for vmovntdqa_m128_xmm: { avx }
flags for vmovntdqa_xmm_m128: { avx }
flags for vmovntdqa_ymm_m256: { avx2 }
flags for vmovntpd_m128_xmm: { avx }
flags for vmovntpd_m256_ymm: { avx }
flags for vmovntps_m128_xmm: { avx }
flags for vmovntps_m256_ymm: { avx }
flags for vmovq_m64_xmm: { avx }
flags for vmovq_m64_xmm_1: { avx }
flags for vmovq_r64_xmm: { avx }
flags for vmovq_xmm_m64: { avx }
flags for vmovq_xmm_m64_1: { avx }
flags for vmovq_xmm_r64: { avx }
flags for vmovq_xmm_xmm: { avx }
flags for vmovq_xmm_xmm_1: { avx }
flags for vmovsd_m64_xmm: { avx }
flags for vmovsd_xmm_m64: { avx }
flags for vmovsd_xmm_xmm_xmm: { avx }
flags for vmovsd_xmm_xmm_xmm_1: { avx }
flags for vmovshdup_xmm_m128: { avx }
flags for vmovshdup_xmm_xmm: { avx }
flags for vmovshdup_ymm_m256: { avx }
flags for vmovshdup_ymm_ymm: { avx }
flags for vmovsldup_xmm_m128: { avx }
flags for vmovsldup_xmm_xmm: { avx }
flags for vmovsldup_ymm_m256: { avx }
flags for vmovsldup_ymm_ymm: { avx }
flags for vmovss_m32_xmm: { avx }
flags for vmovss_xmm_m32: { avx }
flags for vmovss_xmm_xmm_xmm: { avx }
flags for vmovss_xmm_xmm_xmm_1: { avx }
flags for vmovupd_m128_xmm: { avx }
flags for vmovupd_m256_ymm: { avx }
flags for vmovupd_xmm_m128: { avx }
flags for vmovupd_xmm_xmm: { avx }
flags for vmovupd_xmm_xmm_1: { avx }
flags for vmovupd_ymm_m256: { avx }
flags for vmovupd_ymm_ymm: { avx }
flags for vmovupd_ymm_ymm_1: { avx }
flags for vmovups_m128_xmm: { avx }
flags for vmovups_m256_ymm: { avx }
flags for vmovups_xmm_m128: { avx }
flags for vmovups_xmm_xmm: { avx }
flags for vmovups_xmm_xmm_1: { avx }
flags for vmovups_ymm_m256: { avx }
flags for vmovups_ymm_ymm: { avx }
flags for vmovups_ymm_ymm_1: { avx }
flags for vmpsadbw_xmm_xmm_m128_imm8: { avx }
flags for vmpsadbw_xmm_xmm_xmm_imm8: { avx }
flags for vmpsadbw_ymm_ymm_m256_imm8: { avx2 }
flags for vmpsadbw_ymm_ymm_ymm_imm8: { avx2 }
flags for vmulpd_xmm_xmm_m128: { avx }
flags for vmulpd_xmm_xmm_xmm: { avx }
flags for vmulpd_ymm_ymm_m256: { avx }
flags for vmulpd_ymm_ymm_ymm: { avx }
flags for vmulps_xmm_xmm_m128: { avx }
flags for vmulps_xmm_xmm_xmm: { avx }
flags for vmulps_ymm_ymm_m256: { avx }
flags for vmulps_ymm_ymm_ymm: { avx }
flags for vmulsd_xmm_xmm_m64: { avx }
flags for vmulsd_xmm_xmm_xmm: { avx }
flags for vmulss_xmm_xmm_m32: { avx }
flags for vmulss_xmm_xmm_xmm: { avx }
flags for vorpd_xmm_xmm_m128: { avx }
flags for vorpd_xmm_xmm_xmm: { avx }
flags for vorpd_ymm_ymm_m256: { avx }
flags for vorpd_ymm_ymm_ymm: { avx }
flags for vorps_xmm_xmm_m128: { avx }
flags for vorps_xmm_xmm_xmm: { avx }
flags for vorps_ymm_ymm_m256: { avx }
flags for vorps_ymm_ymm_ymm: { avx }
flags for vpabsb_xmm_m128: { avx }
flags for vpabsb_xmm_xmm: { avx }
flags for vpabsb_ymm_m256: { avx2 }
flags for vpabsb_ymm_ymm: { avx2 }
flags for vpabsd_xmm_m128: { avx }
flags for vpabsd_xmm_xmm: { avx }
flags for vpabsd_ymm_m256: { avx2 }
flags for vpabsd_ymm_ymm: { avx2 }
flags for vpabsw_xmm_m128: { avx }
flags for vpabsw_xmm_xmm: { avx }
flags for vpabsw_ymm_m256: { avx2 }
flags for vpabsw_ymm_ymm: { avx2 }
flags for vpackssdw_xmm_xmm_m128: { avx }
flags for vpackssdw_xmm_xmm_xmm: { avx }
flags for vpackssdw_ymm_ymm_m256: { avx2 }
flags for vpackssdw_ymm_ymm_ymm: { avx2 }
flags for vpacksswb_xmm_xmm_m128: { avx }
flags for vpacksswb_xmm_xmm_xmm: { avx }
flags for vpacksswb_ymm_ymm_m256: { avx2 }
flags for vpacksswb_ymm_ymm_ymm: { avx2 }
flags for vpackusdw_xmm_xmm_m128: { avx }
flags for vpackusdw_xmm_xmm_xmm: { avx }
flags for vpackusdw_ymm_ymm_m256: { avx2 }
flags for vpackusdw_ymm_ymm_ymm: { avx2 }
flags for vpackuswb_xmm_xmm_m128: { avx }
flags for vpackuswb_xmm_xmm_xmm: { avx }
flags for vpackuswb_ymm_ymm_m256: { avx2 }
flags for vpackuswb_ymm_ymm_ymm: { avx2 }
flags for vpaddb_xmm_xmm_m128: { avx }
flags for vpaddb_xmm_xmm_xmm: { avx }
flags for vpaddb_ymm_ymm_m256: { avx2 }
flags for vpaddb_ymm_ymm_ymm: { avx2 }
flags for vpaddd_xmm_xmm_m128: { avx }
flags for vpaddd_xmm_xmm_xmm: { avx }
flags for vpaddd_ymm_ymm_m256: { avx2 }
flags for vpaddd_ymm_ymm_ymm: { avx2 }
flags for vpaddq_xmm_xmm_m128: { avx }
flags for vpaddq_xmm_xmm_xmm: { avx }
flags for vpaddq_ymm_ymm_m256: { avx2 }
flags for vpaddq_ymm_ymm_ymm: { avx2 }
flags for vpaddsb_xmm_xmm_m128: { avx }
flags for vpaddsb_xmm_xmm_xmm: { avx }
flags for vpaddsb_ymm_ymm_m256: { avx2 }
flags for vpaddsb_ymm_ymm_ymm: { avx2 }
flags for vpaddsw_xmm_xmm_m128: { avx }
flags for vpaddsw_xmm_xmm_xmm: { avx }
flags for vpaddsw_ymm_ymm_m256: { avx2 }
flags for vpaddsw_ymm_ymm_ymm: { avx2 }
flags for vpaddusb_xmm_xmm_m128: { avx }
flags for vpaddusb_xmm_xmm_xmm: { avx }
flags for vpaddusb_ymm_ymm_m256: { avx2 }
flags for vpaddusb_ymm_ymm_ymm: { avx2 }
flags for vpaddusw_xmm_xmm_m128: { avx }
flags for vpaddusw_xmm_xmm_xmm: { avx }
flags for vpaddusw_ymm_ymm_m256: { avx2 }
flags for vpaddusw_ymm_ymm_ymm: { avx2 }
flags for vpaddw_xmm_xmm_m128: { avx }
flags for vpaddw_xmm_xmm_xmm: { avx }
flags for vpaddw_ymm_ymm_m256: { avx2 }
flags for vpaddw_ymm_ymm_ymm: { avx2 }
flags for vpalignr_xmm_xmm_m128_imm8: { avx }
flags for vpalignr_xmm_xmm_xmm_imm8: { avx }
flags for vpalignr_ymm_ymm_m256_imm8: { avx2 }
flags for vpalignr_ymm_ymm_ymm_imm8: { avx2 }
flags for vpand_xmm_xmm_m128: { avx }
flags for vpand_xmm_xmm_xmm: { avx }
flags for vpand_ymm_ymm_m256: { avx2 }
flags for vpand_ymm_ymm_ymm: { avx2 }
flags for vpandn_xmm_xmm_m128: { avx }
flags for vpandn_xmm_xmm_xmm: { avx }
flags for vpandn_ymm_ymm_m256: { avx2 }
flags for vpandn_ymm_ymm_ymm: { avx2 }
flags for vpavgb_xmm_xmm_m128: { avx }
flags for vpavgb_xmm_xmm_xmm: { avx }
flags for vpavgb_ymm_ymm_m256: { avx2 }
flags for vpavgb_ymm_ymm_ymm: { avx2 }
flags for vpavgw_xmm_xmm_m128: { avx }
flags for vpavgw_xmm_xmm_xmm: { avx }
flags for vpavgw_ymm_ymm_m256: { avx2 }
flags for vpavgw_ymm_ymm_ymm: { avx2 }
flags for vpblendd_xmm_xmm_m128_imm8: { avx2 }
flags for vpblendd_xmm_xmm_xmm_imm8: { avx2 }
flags for vpblendd_ymm_ymm_m256_imm8: { avx2 }
flags for vpblendd_ymm_ymm_ymm_imm8: { avx2 }
flags for vpblendvb_xmm_xmm_m128_xmm: { avx }
flags for vpblendvb_xmm_xmm_xmm_xmm: { avx }
flags for vpblendvb_ymm_ymm_m256_ymm: { avx2 }
flags for vpblendvb_ymm_ymm_ymm_ymm: { avx2 }
flags for vpblendw_xmm_xmm_m128_imm8: { avx }
flags for vpblendw_xmm_xmm_xmm_imm8: { avx }
flags for vpblendw_ymm_ymm_m256_imm8: { avx2 }
flags for vpblendw_ymm_ymm_ymm_imm8: { avx2 }
flags for vpbroadcastb_xmm_m8: { avx2 }
flags for vpbroadcastb_xmm_xmm: { avx2 }
flags for vpbroadcastb_ymm_m8: { avx2 }
flags for vpbroadcastb_ymm_xmm: { avx2 }
flags for vpbroadcastd_xmm_m32: { avx2 }
flags for vpbroadcastd_xmm_xmm: { avx2 }
flags for vpbroadcastd_ymm_m32: { avx2 }
flags for vpbroadcastd_ymm_xmm: { avx2 }
flags for vpbroadcastq_xmm_m64: { avx2 }
flags for vpbroadcastq_xmm_xmm: { avx2 }
flags for vpbroadcastq_ymm_m64: { avx2 }
flags for vpbroadcastq_ymm_xmm: { avx2 }
flags for vpbroadcastw_xmm_m16: { avx2 }
flags for vpbroadcastw_xmm_xmm: { avx2 }
flags for vpbroadcastw_ymm_m16: { avx2 }
flags for vpbroadcastw_ymm_xmm: { avx2 }
flags for vpclmulqdq_xmm_xmm_m128_imm8: { pclmulqdq avx }
flags for vpclmulqdq_xmm_xmm_xmm_imm8: { pclmulqdq avx }
flags for vpcmpeqb_xmm_xmm_m128: { avx }
flags for vpcmpeqb_xmm_xmm_xmm: { avx }
flags for vpcmpeqb_ymm_ymm_m256: { avx2 }
flags for vpcmpeqb_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqd_xmm_xmm_m128: { avx }
flags for vpcmpeqd_xmm_xmm_xmm: { avx }
flags for vpcmpeqd_ymm_ymm_m256: { avx2 }
flags for vpcmpeqd_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqq_xmm_xmm_m128: { avx }
flags for vpcmpeqq_xmm_xmm_xmm: { avx }
flags for vpcmpeqq_ymm_ymm_m256: { avx2 }
flags for vpcmpeqq_ymm_ymm_ymm: { avx2 }
flags for vpcmpeqw_xmm_xmm_m128: { avx }
flags for vpcmpeqw_xmm_xmm_xmm: { avx }
flags for vpcmpeqw_ymm_ymm_m256: { avx2 }
flags for vpcmpeqw_ymm_ymm_ymm: { avx2 }
flags for vpcmpestri_xmm_m128_imm8: { avx }
flags for vpcmpestri_xmm_xmm_imm8: { avx }
flags for vpcmpestrm_xmm_m128_imm8: { avx }
flags for vpcmpestrm_xmm_xmm_imm8: { avx }
flags for vpcmpgtb_xmm_xmm_m128: { avx }
flags for vpcmpgtb_xmm_xmm_xmm: { avx }
flags for vpcmpgtb_ymm_ymm_m256: { avx }
flags for vpcmpgtb_ymm_ymm_ymm: { avx }
flags for vpcmpgtd_xmm_xmm_m128: { avx }
flags for vpcmpgtd_xmm_xmm_xmm: { avx }
flags for vpcmpgtd_ymm_ymm_m256: { avx2 }
flags for vpcmpgtd_ymm_ymm_ymm: { avx2 }
flags for vpcmpgtq_xmm_xmm_m128: { avx }
flags for vpcmpgtq_xmm_xmm_xmm: { avx }
flags for vpvmpgtq_ymm_ymm_m256: { avx2 }
flags for vpvmpgtq_ymm_ymm_ymm: { avx2 }
flags for vpcmpgtw_xmm_xmm_m128: { avx }
flags for vpcmpgtw_xmm_xmm_xmm: { avx }
flags for vpcmpgtw_ymm_ymm_m256: { avx2 }
flags for vpcmpgtw_ymm_ymm_ymm: { avx2 }
flags for vpcmpistri_xmm_m128_imm8: { avx }
flags for vpcmpistri_xmm_xmm_imm8: { avx }
flags for vpcmpistrm_xmm_m128_imm8: { avx }
flags for vpcmpistrm_xmm_xmm_imm8: { avx }
flags for vperm2f128_ymm_ymm_m256_imm8: { avx }
flags for vperm2f128_ymm_ymm_ymm_imm8: { avx }
flags for vperm2i128_ymm_ymm_m256_imm8: { avx2 }
flags for vperm2i128_ymm_ymm_ymm_imm8: { avx2 }
flags for vpermd_ymm_ymm_m256: { avx2 }
flags for vpermd_ymm_ymm_ymm: { avx2 }
flags for vpermilpd_xmm_m128_imm8: { avx }
flags for vpermilpd_xmm_xmm_imm8: { avx }
flags for vpermilpd_xmm_xmm_m128: { avx }
flags for vpermilpd_xmm_xmm_xmm: { avx }
flags for vpermilpd_ymm_m256_imm8: { avx }
flags for vpermilpd_ymm_ymm_imm8: { avx }
flags for vpermilpd_ymm_ymm_m256: { avx }
flags for vpermilpd_ymm_ymm_ymm: { avx }
flags for vpermilps_xmm_m128_imm8: { avx }
flags for vpermilps_xmm_xmm_imm8: { avx }
flags for vpermilps_xmm_xmm_m128: { avx }
flags for vpermilps_xmm_xmm_xmm: { avx }
flags for vpermilps_ymm_m256_imm8: { avx }
flags for vpermilps_ymm_ymm_imm8: { avx }
flags for vpermilps_ymm_ymm_m256: { avx }
flags for vpermilps_ymm_ymm_ymm: { avx }
flags for vpermpd_ymm_m256_imm8: { avx2 }
flags for vpermpd_ymm_ymm_imm8: { avx2 }
flags for vpermps_ymm_ymm_m256: { avx2 }
flags for vpermps_ymm_ymm_ymm: { avx2 }
flags for vpermq_ymm_m256_imm8: { avx2 }
flags for vpermq_ymm_ymm_imm8: { avx2 }
flags for vpextrb_m8_xmm_imm8: { avx }
flags for vpextrb_r32_xmm_imm8: { avx }
flags for vpextrb_r64_xmm_imm8: { avx }
flags for vpextrd_m32_xmm_imm8: { avx }
flags for vpextrd_r32_xmm_imm8: { avx }
flags for vpextrq_m64_xmm_imm8: { avx }
flags for vpextrq_r64_xmm_imm8: { avx }
flags for vpextrw_m16_xmm_imm8: { avx }
flags for vpextrw_r32_xmm_imm8: { avx }
flags for vpextrw_r32_xmm_imm8_1: { avx }
flags for vpextrw_r64_xmm_imm8: { avx }
flags for vpextrw_r64_xmm_imm8_1: { avx }
flags for vpgatherdd_xmm_m32_xmm: { avx2 }
flags for vpgatherdd_ymm_m32_ymm: { avx2 }
flags for vpgatherdq_xmm_m32_xmm: { avx2 }
flags for vpgatherdq_ymm_m32_ymm: { avx2 }
flags for vpgatherqd_xmm_m64_xmm: { avx2 }
flags for vpgatherqd_xmm_m64_xmm_1: { avx2 }
flags for vpgatherqq_xmm_m64_xmm: { avx2 }
flags for vpgatherqq_ymm_m64_ymm: { avx2 }
flags for vphaddd_xmm_xmm_m128: { avx }
flags for vphaddd_xmm_xmm_xmm: { avx }
flags for vphaddd_ymm_ymm_m256: { avx2 }
flags for vphaddd_ymm_ymm_ymm: { avx2 }
flags for vphaddsw_xmm_xmm_m128: { avx }
flags for vphaddsw_xmm_xmm_xmm: { avx }
flags for vphaddsw_ymm_ymm_m256: { avx2 }
flags for vphaddsw_ymm_ymm_ymm: { avx2 }
flags for vphaddw_xmm_xmm_m128: { avx }
flags for vphaddw_xmm_xmm_xmm: { avx }
flags for vphaddw_ymm_ymm_m256: { avx2 }
flags for vphaddw_ymm_ymm_ymm: { avx2 }
flags for vphminposuw_xmm_m128: { avx }
flags for vphminposuw_xmm_xmm: { avx }
flags for vphsubd_xmm_xmm_m128: { avx }
flags for vphsubd_xmm_xmm_xmm: { avx }
flags for vphsubd_ymm_ymm_m256: { avx2 }
flags for vphsubd_ymm_ymm_ymm: { avx2 }
flags for vphsubsw_xmm_xmm_m128: { avx }
flags for vphsubsw_xmm_xmm_xmm: { avx }
flags for vphsubsw_ymm_ymm_m256: { avx2 }
flags for vphsubsw_ymm_ymm_ymm: { avx2 }
flags for vphsubw_xmm_xmm_m128: { avx }
flags for vphsubw_xmm_xmm_xmm: { avx }
flags for vphsubw_ymm_ymm_m256: { avx2 }
flags for vphsubw_ymm_ymm_ymm: { avx2 }
flags for vpinsrb_xmm_xmm_m8_imm8: { avx }
flags for vpinsrb_xmm_xmm_r32_imm8: { avx }
flags for vpinsrd_xmm_xmm_m32_imm8: { avx }
flags for vpinsrd_xmm_xmm_r32_imm8: { avx }
flags for vpinsrq_xmm_xmm_m64_imm8: { avx }
flags for vpinsrq_xmm_xmm_r64_imm8: { avx }
flags for vpinsrw_xmm_xmm_m16_imm8: { avx }
flags for vpinsrw_xmm_xmm_r32_imm8: { avx }
flags for vpmaddubsw_xmm_xmm_m128: { avx }
flags for vpmaddubsw_xmm_xmm_xmm: { avx }
flags for vpmaddubsw_ymm_ymm_m256: { avx2 }
flags for vpmaddubsw_ymm_ymm_ymm: { avx2 }
flags for vpmaddwd_xmm_xmm_m128: { avx }
flags for vpmaddwd_xmm_xmm_xmm: { avx }
flags for vpmaddwd_ymm_ymm_m256: { avx2 }
flags for vpmaddwd_ymm_ymm_ymm: { avx2 }
flags for vpmaskmovd_m128_xmm_xmm: { avx2 }
flags for vpmaskmovd_m256_ymm_ymm: { avx2 }
flags for vpmaskmovd_xmm_xmm_m128: { avx2 }
flags for vpmaskmovd_ymm_ymm_m256: { avx2 }
flags for vpmaskmovq_m128_xmm_xmm: { avx2 }
flags for vpmaskmovq_m256_ymm_ymm: { avx2 }
flags for vpmaskmovq_xmm_xmm_m128: { avx2 }
flags for vpmaskmovq_ymm_ymm_m256: { avx2 }
flags for vpmaxsb_xmm_xmm_m128: { avx }
flags for vpmaxsb_xmm_xmm_xmm: { avx }
flags for vpmaxsb_ymm_ymm_m256: { avx2 }
flags for vpmaxsb_ymm_ymm_ymm: { avx2 }
flags for vpmaxsd_xmm_xmm_m128: { avx }
flags for vpmaxsd_xmm_xmm_xmm: { avx }
flags for vpmaxsd_ymm_ymm_m256: { avx2 }
flags for vpmaxsd_ymm_ymm_ymm: { avx2 }
flags for vpmaxsw_xmm_xmm_m128: { avx }
flags for vpmaxsw_xmm_xmm_xmm: { avx }
flags for vpmaxsw_ymm_ymm_m256: { avx2 }
flags for vpmaxsw_ymm_ymm_ymm: { avx2 }
flags for vpmaxub_xmm_xmm_m128: { avx }
flags for vpmaxub_xmm_xmm_xmm: { avx }
flags for vpmaxub_ymm_ymm_m256: { avx2 }
flags for vpmaxub_ymm_ymm_ymm: { avx2 }
flags for vpmaxud_xmm_xmm_m128: { avx }
flags for vpmaxud_xmm_xmm_xmm: { avx }
flags for vpmaxud_ymm_ymm_m256: { avx2 }
flags for vpmaxud_ymm_ymm_ymm: { avx2 }
flags for vpmaxuw_xmm_xmm_m128: { avx }
flags for vpmaxuw_xmm_xmm_xmm: { avx }
flags for vpmaxuw_ymm_ymm_m256: { avx2 }
flags for vpmaxuw_ymm_ymm_ymm: { avx2 }
flags for vpminsb_xmm_xmm_m128: { avx }
flags for vpminsb_xmm_xmm_xmm: { avx }
flags for vpminsb_ymm_ymm_m256: { avx2 }
flags for vpminsb_ymm_ymm_ymm: { avx2 }
flags for vpminsd_xmm_xmm_m128: { avx }
flags for vpminsd_xmm_xmm_xmm: { avx }
flags for vpminsd_ymm_ymm_m256: { avx2 }
flags for vpminsd_ymm_ymm_ymm: { avx2 }
flags for vpminsw_xmm_xmm_m128: { avx }
flags for vpminsw_xmm_xmm_xmm: { avx }
flags for vpminub_xmm_xmm_m128: { avx }
flags for vpminub_xmm_xmm_xmm: { avx }
flags for vpminub_ymm_ymm_m256: { avx2 }
flags for vpminub_ymm_ymm_ymm: { avx2 }
flags for vpminud_xmm_xmm_m128: { avx }
flags for vpminud_xmm_xmm_xmm: { avx }
flags for vpminud_ymm_ymm_m256: { avx2 }
flags for vpminud_ymm_ymm_ymm: { avx2 }
flags for vpminuw_xmm_xmm_m128: { avx }
flags for vpminuw_xmm_xmm_xmm: { avx }
flags for vpminuw_ymm_ymm_m256: { avx2 }
flags for vpminuw_ymm_ymm_ymm: { avx2 }
flags for vpmovmskb_r32_xmm: { avx }
flags for vpmovmskb_r32_ymm: { avx2 }
flags for vpmovmskb_r64_xmm: { avx }
flags for vpmovmskb_r64_ymm: { avx2 }
flags for vpmovsxbd_xmm_m32: { avx }
flags for vpmovsxbd_xmm_xmm: { avx }
flags for vpmovsxbd_ymm_m64: { avx2 }
flags for vpmovsxbd_ymm_xmm: { avx2 }
flags for vpmovsxbq_xmm_m16: { avx }
flags for vpmovsxbq_xmm_xmm: { avx }
flags for vpmovsxbq_ymm_m32: { avx2 }
flags for vpmovsxbq_ymm_xmm: { avx2 }
flags for vpmovsxbw_xmm_m64: { avx }
flags for vpmovsxbw_xmm_xmm: { avx }
flags for vpmovsxbw_ymm_m128: { avx2 }
flags for vpmovsxbw_ymm_xmm: { avx2 }
flags for vpmovsxdq_xmm_m64: { avx }
flags for vpmovsxdq_xmm_xmm: { avx }
flags for vpmovsxdq_ymm_m128: { avx2 }
flags for vpmovsxdq_ymm_xmm: { avx2 }
flags for vpmovsxwd_xmm_m64: { avx }
flags for vpmovsxwd_xmm_xmm: { avx }
flags for vpmovsxwd_ymm_m128: { avx2 }
flags for vpmovsxwd_ymm_xmm: { avx2 }
flags for vpmovsxwq_xmm_m32: { avx }
flags for vpmovsxwq_xmm_xmm: { avx }
flags for vpmovsxwq_ymm_m64: { avx2 }
flags for vpmovsxwq_ymm_xmm: { avx2 }
flags for vpmovzxbd_xmm_m32: { avx }
flags for vpmovzxbd_xmm_xmm: { avx }
flags for vpmovzxbd_ymm_m64: { avx2 }
flags for vpmovzxbd_ymm_xmm: { avx2 }
flags for vpmovzxbq_xmm_m16: { avx }
flags for vpmovzxbq_xmm_xmm: { avx }
flags for vpmovzxbq_ymm_m32: { avx2 }
flags for vpmovzxbq_ymm_xmm: { avx2 }
flags for vpmovzxbw_xmm_m64: { avx }
flags for vpmovzxbw_xmm_xmm: { avx }
flags for vpmovzxbw_ymm_m128: { avx2 }
flags for vpmovzxbw_ymm_xmm: { avx2 }
flags for vpmovzxdq_xmm_m64: { avx }
flags for vpmovzxdq_xmm_xmm: { avx }
flags for vpmovzxdq_ymm_m128: { avx2 }
flags for vpmovzxdq_ymm_xmm: { avx2 }
flags for vpmovzxwd_xmm_m64: { avx }
flags for vpmovzxwd_xmm_xmm: { avx }
flags for vpmovzxwd_ymm_m128: { avx2 }
flags for vpmovzxwd_ymm_xmm: { avx2 }
flags for vpmovzxwq_xmm_m32: { avx }
flags for vpmovzxwq_xmm_xmm: { avx }
flags for vpmovzxwq_ymm_m64: { avx2 }
flags for vpmovzxwq_ymm_xmm: { avx2 }
flags for vpmuldq_xmm_xmm_m128: { avx }
flags for vpmuldq_xmm_xmm_xmm: { avx }
flags for vpmuldq_ymm_ymm_m256: { avx2 }
flags for vpmuldq_ymm_ymm_ymm: { avx2 }
flags for vpmulhrsw_xmm_xmm_m128: { avx }
flags for vpmulhrsw_xmm_xmm_xmm: { avx }
flags for vpmulhrsw_ymm_ymm_m256: { avx2 }
flags for vpmulhrsw_ymm_ymm_ymm: { avx2 }
flags for vpmulhuw_xmm_xmm_m128: { avx }
flags for vpmulhuw_xmm_xmm_xmm: { avx }
flags for vpmulhuw_ymm_ymm_m256: { avx2 }
flags for vpmulhuw_ymm_ymm_ymm: { avx2 }
flags for vpmulhw_xmm_xmm_m128: { avx }
flags for vpmulhw_xmm_xmm_xmm: { avx }
flags for vpmulhw_ymm_ymm_m256: { avx2 }
flags for vpmulhw_ymm_ymm_ymm: { avx2 }
flags for vpmulld_xmm_xmm_m128: { avx }
flags for vpmulld_xmm_xmm_xmm: { avx }
flags for vpmulld_ymm_ymm_m256: { avx2 }
flags for vpmulld_ymm_ymm_ymm: { avx2 }
flags for vpmullw_xmm_xmm_m128: { avx }
flags for vpmullw_xmm_xmm_xmm: { avx }
flags for vpmullw_ymm_ymm_m256: { avx2 }
flags for vpmullw_ymm_ymm_ymm: { avx2 }
flags for vpmuludq_xmm_xmm_m128: { avx }
flags for vpmuludq_xmm_xmm_xmm: { avx }
flags for vpmuludq_ymm_ymm_m256: { avx2 }
flags for vpmuludq_ymm_ymm_ymm: { avx2 }
flags for vpor_xmm_xmm_m128: { avx }
flags for vpor_xmm_xmm_xmm: { avx }
flags for vpor_ymm_ymm_m256: { avx2 }
flags for vpor_ymm_ymm_ymm: { avx2 }
flags for vpsadbw_xmm_xmm_m128: { avx }
flags for vpsadbw_xmm_xmm_xmm: { avx }
flags for vpsadbw_ymm_ymm_m256: { avx2 }
flags for vpsadbw_ymm_ymm_ymm: { avx2 }
flags for vpshufb_xmm_xmm_m128: { avx }
flags for vpshufb_xmm_xmm_xmm: { avx }
flags for vpshufb_ymm_ymm_m256: { avx2 }
flags for vpshufb_ymm_ymm_ymm: { avx2 }
flags for vpshufd_xmm_m128_imm8: { avx }
flags for vpshufd_xmm_xmm_imm8: { avx }
flags for vpshufd_ymm_m256_imm8: { avx2 }
flags for vpshufd_ymm_ymm_imm8: { avx2 }
flags for vpshufhw_xmm_m128_imm8: { avx }
flags for vpshufhw_xmm_xmm_imm8: { avx }
flags for vpshufhw_ymm_m256_imm8: { avx2 }
flags for vpshufhw_ymm_ymm_imm8: { avx2 }
flags for vpshuflw_xmm_m128_imm8: { avx }
flags for vpshuflw_xmm_xmm_imm8: { avx }
flags for vpshuflw_ymm_m256_imm8: { avx2 }
flags for vpshuflw_ymm_ymm_imm8: { avx2 }
flags for vpsignb_xmm_xmm_m128: { avx }
flags for vpsignb_xmm_xmm_xmm: { avx }
flags for vpsignd_xmm_xmm_m128: { avx }
flags for vpsignd_xmm_xmm_xmm: { avx }
flags for vpsignw_xmm_xmm_m128: { avx }
flags for vpsignw_xmm_xmm_xmm: { avx }
flags for vpslld_xmm_xmm_imm8: { avx }
flags for vpslld_xmm_xmm_m128: { avx }
flags for vpslld_xmm_xmm_xmm: { avx }
flags for vpslld_ymm_ymm_imm8: { avx2 }
flags for vpslld_ymm_ymm_m128: { avx2 }
flags for vpslld_ymm_ymm_xmm: { avx2 }
flags for vpslldq_xmm_xmm_imm8: { avx }
flags for vpslldq_ymm_ymm_imm8: { avx2 }
flags for vpsllq_xmm_xmm_imm8: { avx }
flags for vpsllq_xmm_xmm_m128: { avx }
flags for vpsllq_xmm_xmm_xmm: { avx }
flags for vpsllq_ymm_ymm_imm8: { avx2 }
flags for vpsllq_ymm_ymm_m128: { avx2 }
flags for vpsllq_ymm_ymm_xmm: { avx2 }
flags for vpsllvd_xmm_xmm_m128: { avx2 }
flags for vpsllvd_xmm_xmm_xmm: { avx2 }
flags for vpsllvd_ymm_ymm_m256: { avx2 }
flags for vpsllvd_ymm_ymm_ymm: { avx2 }
flags for vpsllvq_xmm_xmm_m128: { avx2 }
flags for vpsllvq_xmm_xmm_xmm: { avx2 }
flags for vpsllvq_ymm_ymm_m256: { avx2 }
flags for vpsllvq_ymm_ymm_ymm: { avx2 }
flags for vpsllw_xmm_xmm_imm8: { avx }
flags for vpsllw_xmm_xmm_m128: { avx }
flags for vpsllw_xmm_xmm_xmm: { avx }
flags for vpsllw_ymm_ymm_imm8: { avx2 }
flags for vpsllw_ymm_ymm_m128: { avx2 }
flags for vpsllw_ymm_ymm_xmm: { avx2 }
flags for vpsrad_xmm_xmm_imm8: { avx }
flags for vpsrad_xmm_xmm_m128: { avx }
flags for vpsrad_xmm_xmm_xmm: { avx }
flags for vpsrad_ymm_ymm_imm8: { avx2 }
flags for vpsrad_ymm_ymm_m128: { avx2 }
flags for vpsrad_ymm_ymm_xmm: { avx2 }
flags for vpsravd_xmm_xmm_m128: { avx2 }
flags for vpsravd_xmm_xmm_xmm: { avx2 }
flags for vpsravd_ymm_ymm_m256: { avx2 }
flags for vpsravd_ymm_ymm_ymm: { avx2 }
flags for vpsraw_xmm_xmm_imm8: { avx }
flags for vpsraw_xmm_xmm_m128: { avx }
flags for vpsraw_xmm_xmm_xmm: { avx }
flags for vpsraw_ymm_ymm_imm8: { avx2 }
flags for vpsraw_ymm_ymm_m128: { avx2 }
flags for vpsraw_ymm_ymm_xmm: { avx2 }
flags for vpsrld_xmm_xmm_imm8: { avx }
flags for vpsrld_xmm_xmm_m128: { avx }
flags for vpsrld_xmm_xmm_xmm: { avx }
flags for vpsrld_ymm_ymm_imm8: { avx2 }
flags for vpsrld_ymm_ymm_m128: { avx2 }
flags for vpsrld_ymm_ymm_xmm: { avx2 }
flags for vpsrldq_xmm_xmm_imm8: { avx }
flags for vpsrldq_ymm_ymm_imm8: { avx2 }
flags for vpsrlq_xmm_xmm_imm8: { avx }
flags for vpsrlq_xmm_xmm_m128: { avx }
flags for vpsrlq_xmm_xmm_xmm: { avx }
flags for vpsrlq_ymm_ymm_imm8: { avx2 }
flags for vpsrlq_ymm_ymm_m128: { avx2 }
flags for vpsrlq_ymm_ymm_xmm: { avx2 }
flags for vpsrlvd_xmm_xmm_m128: { avx2 }
flags for vpsrlvd_xmm_xmm_xmm: { avx2 }
flags for vpsrlvd_ymm_ymm_m256: { avx2 }
flags for vpsrlvd_ymm_ymm_ymm: { avx2 }
flags for vpsrlvq_xmm_xmm_m128: { avx2 }
flags for vpsrlvq_xmm_xmm_xmm: { avx2 }
flags for vpsrlvq_ymm_ymm_m256: { avx2 }
flags for vpsrlvq_ymm_ymm_ymm: { avx2 }
flags for vpsrlw_xmm_xmm_imm8: { avx }
flags for vpsrlw_xmm_xmm_m128: { avx }
flags for vpsrlw_xmm_xmm_xmm: { avx }
flags for vpsrlw_ymm_ymm_imm8: { avx2 }
flags for vpsrlw_ymm_ymm_m128: { avx2 }
flags for vpsrlw_ymm_ymm_xmm: { avx2 }
flags for vpsubb_xmm_xmm_m128: { avx }
flags for vpsubb_xmm_xmm_xmm: { avx }
flags for vpsubb_ymm_ymm_m256: { avx2 }
flags for vpsubb_ymm_ymm_ymm: { avx2 }
flags for vpsubd_xmm_xmm_m128: { avx }
flags for vpsubd_xmm_xmm_xmm: { avx }
flags for vpsubd_ymm_ymm_m256: { avx2 }
flags for vpsubd_ymm_ymm_ymm: { avx2 }
flags for vpsubq_xmm_xmm_m128: { avx }
flags for vpsubq_xmm_xmm_xmm: { avx }
flags for vpsubq_ymm_ymm_m256: { avx2 }
flags for vpsubq_ymm_ymm_ymm: { avx2 }
flags for vpsubsb_xmm_xmm_m128: { avx }
flags for vpsubsb_xmm_xmm_xmm: { avx }
flags for vpsubsb_ymm_ymm_m256: { avx2 }
flags for vpsubsb_ymm_ymm_ymm: { avx2 }
flags for vpsubsw_xmm_xmm_m128: { avx }
flags for vpsubsw_xmm_xmm_xmm: { avx }
flags for vpsubsw_ymm_ymm_m256: { avx2 }
flags for vpsubsw_ymm_ymm_ymm: { avx2 }
flags for vpsubusb_xmm_xmm_m128: { avx }
flags for vpsubusb_xmm_xmm_xmm: { avx }
flags for vpsubusb_ymm_ymm_m256: { avx2 }
flags for vpsubusb_ymm_ymm_ymm: { avx2 }
flags for vpsubusw_xmm_xmm_m128: { avx }
flags for vpsubusw_xmm_xmm_xmm: { avx }
flags for vpsubusw_ymm_ymm_m256: { avx2 }
flags for vpsubusw_ymm_ymm_ymm: { avx2 }
flags for vpsubw_xmm_xmm_m128: { avx }
flags for vpsubw_xmm_xmm_xmm: { avx }
flags for vpsubw_ymm_ymm_m256: { avx2 }
flags for vpsubw_ymm_ymm_ymm: { avx2 }
flags for vptest_xmm_m128: { avx }
flags for vptest_xmm_xmm: { avx }
flags for vptest_ymm_m256: { avx }
flags for vptest_ymm_ymm: { avx }
flags for vpunpckhbw_xmm_xmm_m128: { avx }
flags for vpunpckhbw_xmm_xmm_xmm: { avx }
flags for vpunpckhbw_ymm_ymm_m256: { avx2 }
flags for vpunpckhbw_ymm_ymm_ymm: { avx2 }
flags for vpunpckhdq_xmm_xmm_m128: { avx }
flags for vpunpckhdq_xmm_xmm_xmm: { avx }
flags for vpunpckhdq_ymm_ymm_m256: { avx2 }
flags for vpunpckhdq_ymm_ymm_ymm: { avx2 }
flags for vpunpckhqdq_xmm_xmm_m128: { avx }
flags for vpunpckhqdq_xmm_xmm_xmm: { avx }
flags for vpunpckhqdq_ymm_ymm_m256: { avx2 }
flags for vpunpckhqdq_ymm_ymm_ymm: { avx2 }
flags for vpunpckhwd_xmm_xmm_m128: { avx }
flags for vpunpckhwd_xmm_xmm_xmm: { avx }
flags for vpunpckhwd_ymm_ymm_m256: { avx2 }
flags for vpunpckhwd_ymm_ymm_ymm: { avx2 }
flags for vpunpcklbw_xmm_xmm_m128: { avx }
flags for vpunpcklbw_xmm_xmm_xmm: { avx }
flags for vpunpcklbw_ymm_ymm_m256: { avx2 }
flags for vpunpcklbw_ymm_ymm_ymm: { avx2 }
flags for vpunpckldq_xmm_xmm_m128: { avx }
flags for vpunpckldq_xmm_xmm_xmm: { avx }
flags for vpunpckldq_ymm_ymm_m256: { avx2 }
flags for vpunpckldq_ymm_ymm_ymm: { avx2 }
flags for vpunpcklqdq_xmm_xmm_m128: { avx }
flags for vpunpcklqdq_xmm_xmm_xmm: { avx }
flags for vpunpcklqdq_ymm_ymm_m256: { avx2 }
flags for vpunpcklqdq_ymm_ymm_ymm: { avx2 }
flags for vpunpcklwd_xmm_xmm_m128: { avx }
flags for vpunpcklwd_xmm_xmm_xmm: { avx }
flags for vpunpcklwd_ymm_ymm_m256: { avx2 }
flags for vpunpcklwd_ymm_ymm_ymm: { avx2 }
flags for vpxor_xmm_xmm_m128: { avx }
flags for vpxor_xmm_xmm_xmm: { avx }
flags for vpxor_ymm_ymm_m256: { avx2 }
flags for vpxor_ymm_ymm_ymm: { avx2 }
flags for vrcpps_xmm_m128: { avx }
flags for vrcpps_xmm_xmm: { avx }
flags for vrcpps_ymm_m256: { avx }
flags for vrcpps_ymm_ymm: { avx }
flags for vrcpss_xmm_xmm_m32: { avx }
flags for vrcpss_xmm_xmm_xmm: { avx }
flags for vroundpd_xmm_m128_imm8: { avx }
flags for vroundpd_xmm_xmm_imm8: { avx }
flags for vroundpd_ymm_m256_imm8: { avx }
flags for vroundpd_ymm_ymm_imm8: { avx }
flags for vroundps_xmm_m128_imm8: { avx }
flags for vroundps_xmm_xmm_imm8: { avx }
flags for vroundps_ymm_m256_imm8: { avx }
flags for vroundps_ymm_ymm_imm8: { avx }
flags for vroundsd_xmm_xmm_m64_imm8: { avx }
flags for vroundsd_xmm_xmm_xmm_imm8: { avx }
flags for vroundss_xmm_xmm_m32_imm8: { avx }
flags for vroundss_xmm_xmm_xmm_imm8: { avx }
flags for vrsqrtps_xmm_m128: { avx }
flags for vrsqrtps_xmm_xmm: { avx }
flags for vrsqrtps_ymm_m256: { avx }
flags for vrsqrtps_ymm_ymm: { avx }
flags for vrsqrtss_xmm_xmm_m32: { avx }
flags for vrsqrtss_xmm_xmm_xmm: { avx }
flags for vshufpd_xmm_xmm_m128_imm8: { avx }
flags for vshufpd_xmm_xmm_xmm_imm8: { avx }
flags for vshufpd_ymm_ymm_m256_imm8: { avx }
flags for vshufpd_ymm_ymm_ymm_imm8: { avx }
flags for vshufps_xmm_xmm_m128_imm8: { avx }
flags for vshufps_xmm_xmm_xmm_imm8: { avx }
flags for vshufps_ymm_ymm_m256_imm8: { avx }
flags for vshufps_ymm_ymm_ymm_imm8: { avx }
flags for vsqrtpd_xmm_m128: { avx }
flags for vsqrtpd_xmm_xmm: { avx }
flags for vsqrtpd_ymm_m256: { avx }
flags for vsqrtpd_ymm_ymm: { avx }
flags for vsqrtps_xmm_m128: { avx }
flags for vsqrtps_xmm_xmm: { avx }
flags for vsqrtps_ymm_m256: { avx }
flags for vsqrtps_ymm_ymm: { avx }
flags for vsqrtsd_xmm_xmm_m64: { avx }
flags for vsqrtsd_xmm_xmm_xmm: { avx }
flags for vsqrtss_xmm_xmm_m32: { avx }
flags for vsqrtss_xmm_xmm_xmm: { avx }
flags for vsubpd_xmm_xmm_m128: { avx }
flags for vsubpd_xmm_xmm_xmm: { avx }
flags for vsubpd_ymm_ymm_m256: { avx }
flags for vsubpd_ymm_ymm_ymm: { avx }
flags for vsubps_xmm_xmm_m128: { avx }
flags for vsubps_xmm_xmm_xmm: { avx }
flags for vsubps_ymm_ymm_m256: { avx }
flags for vsubps_ymm_ymm_ymm: { avx }
flags for vsubsd_xmm_xmm_m64: { avx }
flags for vsubsd_xmm_xmm_xmm: { avx }
flags for vsubss_xmm_xmm_m32: { avx }
flags for vsubss_xmm_xmm_xmm: { avx }
flags for vtestpd_xmm_m128: { avx }
flags for vtestpd_xmm_xmm: { avx }
flags for vtestpd_ymm_m256: { avx }
flags for vtestpd_ymm_ymm: { avx }
flags for vtestps_xmm_m128: { avx }
flags for vtestps_xmm_xmm: { avx }
flags for vtestps_ymm_m256: { avx }
flags for vtestps_ymm_ymm: { avx }
flags for vucomisd_xmm_m64: { avx }
flags for vucomisd_xmm_xmm: { avx }
flags for vucomiss_xmm_m32: { avx }
flags for vucomiss_xmm_xmm: { avx }
flags for vunpckhpd_xmm_xmm_m128: { avx }
flags for vunpckhpd_xmm_xmm_xmm: { avx }
flags for vunpckhpd_ymm_ymm_m256: { avx }
flags for vunpckhpd_ymm_ymm_ymm: { avx }
flags for vunpckhps_xmm_xmm_m128: { avx }
flags for vunpckhps_xmm_xmm_xmm: { avx }
flags for vunpckhps_ymm_ymm_m256: { avx }
flags for vunpckhps_ymm_ymm_ymm: { avx }
flags for vunpcklpd_xmm_xmm_m128: { avx }
flags for vunpcklpd_xmm_xmm_xmm: { avx }
flags for vunpcklpd_ymm_ymm_m256: { avx }
flags for vunpcklpd_ymm_ymm_ymm: { avx }
flags for vunpcklps_xmm_xmm_m128: { avx }
flags for vunpcklps_xmm_xmm_xmm: { avx }
flags for vunpcklps_ymm_ymm_m256: { avx }
flags for vunpcklps_ymm_ymm_ymm: { avx }
flags for vxorpd_xmm_xmm_m128: { avx }
flags for vxorpd_xmm_xmm_xmm: { avx }
flags for vxorpd_ymm_ymm_m256: { avx }
flags for vxorpd_ymm_ymm_ymm: { avx }
flags for vxorps_xmm_xmm_m128: { avx }
flags for vxorps_xmm_xmm_xmm: { avx }
flags for vxorps_ymm_ymm_m256: { avx }
flags for vxorps_ymm_ymm_ymm: { avx }
flags for vzeroall: { avx }
flags for vzeroupper: { avx }
flags for wait: { fpu }
flags for xabort_imm8: { rtm }
flags for xacquire: { hle }
flags for xbegin_label: { rtm }
flags for xend: { rtm }
flags for xorb_al_imm8: { }
flags for xorw_ax_imm16: { }
flags for xorl_eax_imm32: { }
flags for xorw_m16_imm16: { }
flags for xorw_m16_imm8: { }
flags for xorw_m16_r16: { }
flags for xorl_m32_imm32: { }
flags for xorl_m32_imm8: { }
flags for xorl_m32_r32: { }
flags for xorq_m64_imm32: { }
flags for xorq_m64_imm8: { }
flags for xorq_m64_r64: { }
flags for xorb_m8_imm8: { }
flags for xorb_m8_r8: { }
flags for xorb_m8_rh: { }
flags for xorw_r16_imm16: { }
flags for xorw_r16_imm8: { }
flags for xorw_r16_m16: { }
flags for xorw_r16_r16: { }
flags for xorw_r16_r16_1: { }
flags for xorl_r32_imm32: { }
flags for xorl_r32_imm8: { }
flags for xorl_r32_m32: { }
flags for xorl_r32_r32: { }
flags for xorl_r32_r32_1: { }
flags for xorq_r64_imm32: { }
flags for xorq_r64_imm8: { }
flags for xorq_r64_m64: { }
flags for xorq_r64_r64: { }
flags for xorq_r64_r64_1: { }
flags for xorb_r8_imm8: { }
flags for xorb_r8_m8: { }
flags for xorb_r8_r8: { }
flags for xorb_r8_r8_1: { }
flags for xorb_r8_rh: { }
flags for xorb_r8_rh_1: { }
flags for xorq_rax_imm32: { }
flags for xorb_rh_imm8: { }
flags for xorb_rh_m8: { }
flags for xorb_rh_r8: { }
flags for xorb_rh_r8_1: { }
flags for xorb_rh_rh: { }
flags for xorb_rh_rh_1: { }
flags for xorpd_xmm_m128: { sse2 }
flags for xorpd_xmm_xmm: { sse2 }
flags for xorps_xmm_m128: { sse }
flags for xorps_xmm_xmm: { sse }
flags for xrelease: { hle }
flags for xtest: { rtm }
Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (8)                                                   Lowest Known Correct Cost (8)                                                
                                                                                                                                                          
  .text                                                                        .text                                                                      
  .globl wcslen                                                                .globl wcslen                                                              
  .type wcslen, @function                                                      .type wcslen, @function                                                    
                                                                                                                                                          
#! file-offset 0                                                             #! file-offset 0                                                             
#! rip-offset  0                                                             #! rip-offset  0                                                             
#! capacity    0 bytes                                                       #! capacity    0 bytes                                                       
                                                                                                                                                          
# Text                        #  Line  RIP   Bytes  Opcode                   # Text                        #  Line  RIP   Bytes  Opcode                   
.wcslen:                      #        0     0      OPC=<label>              .wcslen:                      #        0     0      OPC=<label>              
  nop                         #  1     0     1      OPC=nop                    nop                         #  1     0     1      OPC=nop                  
  nop                         #  2     0x1   1      OPC=nop                    nop                         #  2     0x1   1      OPC=nop                  
  nop                         #  3     0x2   1      OPC=nop                    nop                         #  3     0x2   1      OPC=nop                  
  nop                         #  4     0x3   1      OPC=nop                    nop                         #  4     0x3   1      OPC=nop                  
  nop                         #  5     0x4   1      OPC=nop                    nop                         #  5     0x4   1      OPC=nop                  
  nop                         #  6     0x5   1      OPC=nop                    nop                         #  6     0x5   1      OPC=nop                  
  nop                         #  7     0x6   1      OPC=nop                    nop                         #  7     0x6   1      OPC=nop                  
  nop                         #  8     0x7   1      OPC=nop                    nop                         #  8     0x7   1      OPC=nop                  
  nop                         #  9     0x8   1      OPC=nop                    nop                         #  9     0x8   1      OPC=nop                  
  nop                         #  10    0x9   1      OPC=nop                    nop                         #  10    0x9   1      OPC=nop                  
  nop                         #  11    0xa   1      OPC=nop                    nop                         #  11    0xa   1      OPC=nop                  
  nop                         #  12    0xb   1      OPC=nop                    nop                         #  12    0xb   1      OPC=nop                  
  xorq %rax, %rax             #  13    0xc   3      OPC=xorq_r64_r64           xorq %rax, %rax             #  13    0xc   3      OPC=xorq_r64_r64         
  nop                         #  14    0xf   1      OPC=nop                    nop                         #  14    0xf   1      OPC=nop                  
  nop                         #  15    0x10  1      OPC=nop                    nop                         #  15    0x10  1      OPC=nop                  
  nop                         #  16    0x11  1      OPC=nop                    nop                         #  16    0x11  1      OPC=nop                  
  movl %edi, %edx             #  17    0x12  2      OPC=movl_r32_r32           movl %edi, %edx             #  17    0x12  2      OPC=movl_r32_r32         
  subq $0x8, %rax             #  18    0x14  6      OPC=subq_rax_imm32         subq $0x8, %rax             #  18    0x14  6      OPC=subq_rax_imm32       
  je .L_142ce0                #  19    0x1a  2      OPC=je_label               je .L_142ce0                #  19    0x1a  2      OPC=je_label             
  nop                         #  20    0x1c  1      OPC=nop                    nop                         #  20    0x1c  1      OPC=nop                  
  nop                         #  21    0x1d  1      OPC=nop                    nop                         #  21    0x1d  1      OPC=nop                  
  nop                         #  22    0x1e  1      OPC=nop                    nop                         #  22    0x1e  1      OPC=nop                  
  nop                         #  23    0x1f  1      OPC=nop                    nop                         #  23    0x1f  1      OPC=nop                  
.L_142cc0:                    #        0x20  0      OPC=<label>              .L_142cc0:                    #        0x20  0      OPC=<label>              
  addl $0x4, %edx             #  24    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx             #  24    0x20  3      OPC=addl_r32_imm8        
  movslq (%r15,%rdx,1), %rax  #  25    0x23  4      OPC=movslq_r64_m32         movslq (%r15,%rdx,1), %rax  #  25    0x23  4      OPC=movslq_r64_m32       
  negb %ah                    #  26    0x27  2      OPC=negb_rh                negb %ah                    #  26    0x27  2      OPC=negb_rh              
  jne .L_142cc0               #  27    0x29  2      OPC=jne_label              jne .L_142cc0               #  27    0x29  2      OPC=jne_label            
  nop                         #  28    0x2b  1      OPC=nop                    nop                         #  28    0x2b  1      OPC=nop                  
  nop                         #  29    0x2c  1      OPC=nop                    nop                         #  29    0x2c  1      OPC=nop                  
  nop                         #  30    0x2d  1      OPC=nop                    nop                         #  30    0x2d  1      OPC=nop                  
  nop                         #  31    0x2e  1      OPC=nop                    nop                         #  31    0x2e  1      OPC=nop                  
  nop                         #  32    0x2f  1      OPC=nop                    nop                         #  32    0x2f  1      OPC=nop                  
  nop                         #  33    0x30  1      OPC=nop                    nop                         #  33    0x30  1      OPC=nop                  
  nop                         #  34    0x31  1      OPC=nop                    nop                         #  34    0x31  1      OPC=nop                  
  nop                         #  35    0x32  1      OPC=nop                    nop                         #  35    0x32  1      OPC=nop                  
  nop                         #  36    0x33  1      OPC=nop                    nop                         #  36    0x33  1      OPC=nop                  
  nop                         #  37    0x34  1      OPC=nop                    nop                         #  37    0x34  1      OPC=nop                  
  subq %rdi, %rax             #  38    0x35  3      OPC=subq_r64_r64_1         subq %rdi, %rax             #  38    0x35  3      OPC=subq_r64_r64_1       
  addq %rdx, %rax             #  39    0x38  3      OPC=addq_r64_r64           addq %rdx, %rax             #  39    0x38  3      OPC=addq_r64_r64         
  nop                         #  40    0x3b  1      OPC=nop                    nop                         #  40    0x3b  1      OPC=nop                  
  nop                         #  41    0x3c  1      OPC=nop                    nop                         #  41    0x3c  1      OPC=nop                  
  nop                         #  42    0x3d  1      OPC=nop                    nop                         #  42    0x3d  1      OPC=nop                  
  nop                         #  43    0x3e  1      OPC=nop                    nop                         #  43    0x3e  1      OPC=nop                  
  nop                         #  44    0x3f  1      OPC=nop                    nop                         #  44    0x3f  1      OPC=nop                  
.L_142ce0:                    #        0x40  0      OPC=<label>              .L_142ce0:                    #        0x40  0      OPC=<label>              
  nop                         #  45    0x40  1      OPC=nop                    nop                         #  45    0x40  1      OPC=nop                  
  nop                         #  46    0x41  1      OPC=nop                    nop                         #  46    0x41  1      OPC=nop                  
  nop                         #  47    0x42  1      OPC=nop                    nop                         #  47    0x42  1      OPC=nop                  
  sarb $0x2, %al              #  48    0x43  3      OPC=sarb_r8_imm8           sarb $0x2, %al              #  48    0x43  3      OPC=sarb_r8_imm8         
  nop                         #  49    0x46  1      OPC=nop                    nop                         #  49    0x46  1      OPC=nop                  
  nop                         #  50    0x47  1      OPC=nop                    nop                         #  50    0x47  1      OPC=nop                  
  nop                         #  51    0x48  1      OPC=nop                    nop                         #  51    0x48  1      OPC=nop                  
  nop                         #  52    0x49  1      OPC=nop                    nop                         #  52    0x49  1      OPC=nop                  
  nop                         #  53    0x4a  1      OPC=nop                    nop                         #  53    0x4a  1      OPC=nop                  
  nop                         #  54    0x4b  1      OPC=nop                    nop                         #  54    0x4b  1      OPC=nop                  
  nop                         #  55    0x4c  1      OPC=nop                    nop                         #  55    0x4c  1      OPC=nop                  
  nop                         #  56    0x4d  1      OPC=nop                    nop                         #  56    0x4d  1      OPC=nop                  
  nop                         #  57    0x4e  1      OPC=nop                    nop                         #  57    0x4e  1      OPC=nop                  
  nop                         #  58    0x4f  1      OPC=nop                    nop                         #  58    0x4f  1      OPC=nop                  
  nop                         #  59    0x50  1      OPC=nop                    nop                         #  59    0x50  1      OPC=nop                  
  nop                         #  60    0x51  1      OPC=nop                    nop                         #  60    0x51  1      OPC=nop                  
  popq %r11                   #  61    0x52  2      OPC=popq_r64_1             popq %r11                   #  61    0x52  2      OPC=popq_r64_1           
  andl $0xe0, %r11d           #  62    0x54  4      OPC=andl_r32_imm8          andl $0xe0, %r11d           #  62    0x54  4      OPC=andl_r32_imm8        
  addq %r15, %r11             #  63    0x58  3      OPC=addq_r64_r64           addq %r15, %r11             #  63    0x58  3      OPC=addq_r64_r64         
  jmpq %r11                   #  64    0x5b  3      OPC=jmpq_r64               jmpq %r11                   #  64    0x5b  3      OPC=jmpq_r64             
                                                                                                                                                          
.size wcslen, .-wcslen                                                       .size wcslen, .-wcslen                                                       
                                                                                                                                                          

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  52.3053s
Iterations/s:                  1911.85

Starting cost:                 9
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.306%       4.078%        1.641%       
Opcode          8.424%       7.467%        6.836%       
Local Swap      8.293%       5.544%        4.764%       
Global Swap     8.389%       6.376%        5.024%       
Global Copy     8.259%       6.892%        6.892%       
Rotate          8.342%       6.634%        4.007%       
ReplaceNop      8.282%       7.314%        6.408%       
Delete          8.339%       7.378%        4.524%       
Instruction     8.277%       4.693%        0.471%       
Add Nops        8.498%       8.498%        4.155%       
OpcodeWidth     8.253%       6.701%        6.355%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.338%       1.649%        0.002%       
                                                        
Total           100%         73.224%       51.079%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  146.793s
Iterations/s:                  1362.46

Starting cost:                 9
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.3045%      4.197%        1.666%       
Opcode          8.418%       7.46%         6.8365%      
Local Swap      8.3065%      5.695%        4.8525%      
Global Swap     8.3635%      6.342%        4.9995%      
Global Copy     8.2995%      6.9185%       6.9185%      
Rotate          8.373%       6.658%        4.0155%      
ReplaceNop      8.3085%      7.3505%       6.42%        
Delete          8.3265%      7.389%        4.54%        
Instruction     8.2755%      4.6975%       0.4875%      
Add Nops        8.503%       8.503%        4.149%       
OpcodeWidth     8.2415%      6.7035%       6.3725%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.28%        1.611%        0.001%       
                                                        
Total           100%         73.525%       51.2585%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  237.905s
Iterations/s:                  1261.01

Starting cost:                 9
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted         
                                                            
Operand         8.26833%     4.07767%      1.67767%         
Opcode          8.36967%     7.43167%      6.828%           
Local Swap      8.391%       5.76867%      4.98867%         
Global Swap     8.34633%     6.27367%      5.05133%         
Global Copy     8.29733%     6.937%        6.937%           
Rotate          8.42533%     6.68967%      4.10233%         
ReplaceNop      8.30767%     7.33967%      6.49033%         
Delete          8.311%       7.33833%      4.512%           
Instruction     8.29567%     4.66867%      0.47%            
Add Nops        8.47367%     8.47367%      4.14467%         
OpcodeWidth     8.256%       6.74767%      6.43867%         
2xWeighted      0%           0%            0%               
Memory+Swap     8.258%       1.42167%      0.000666667%     
                                                            
Total           100%         73.168%       51.6413%         

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  350.712s
Iterations/s:                  1140.54

Starting cost:                 9
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.3075%      4.2015%       1.7955%      
Opcode          8.3525%      7.4855%       6.92475%     
Local Swap      8.3695%      5.81875%      5.0855%      
Global Swap     8.316%       6.365%        5.225%       
Global Copy     8.32075%     7.052%        7.052%       
Rotate          8.4015%      6.7585%       4.2085%      
ReplaceNop      8.308%       7.376%        6.598%       
Delete          8.29475%     7.35125%      4.71525%     
Instruction     8.246%       4.64825%      0.472%       
Add Nops        8.4775%      8.4775%       4.35425%     
OpcodeWidth     8.2985%      6.8695%       6.57725%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.3075%      1.41575%      0.0005%      
                                                        
Total           100%         73.8195%      53.0085%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  444.23s
Iterations/s:                  1125.54

Starting cost:                 9
Lowest cost:                   8
Lowest correct cost:           8

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.3162%      4.2322%       1.8888%      
Opcode          8.3506%      7.5446%       7.035%       
Local Swap      8.3686%      5.851%        5.1918%      
Global Swap     8.3258%      6.4768%       5.4576%      
Global Copy     8.3196%      7.1508%       7.1508%      
Rotate          8.383%       6.8428%       4.3458%      
ReplaceNop      8.3008%      7.422%        6.7334%      
Delete          8.3392%      7.451%        4.9714%      
Instruction     8.257%       4.5804%       0.4738%      
Add Nops        8.4482%      8.4482%       4.5994%      
OpcodeWidth     8.2996%      6.9868%       6.7288%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.2914%      1.274%        0.0004%      
                                                        
Total           100%         74.2606%      54.577%      

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     e6 00 48 a4 3e 0d 77 e8
%rcx     c0 d2 80 52 aa 2f 67 31
%rdx     aa c6 dc 79 e6 cf d9 db
%rbx     78 0c 57 90 85 38 57 85
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 04 e0 0a c0
%rdi     00 00 00 00 02 e5 0d c0
%r8      7d 01 36 5e 6e dd a7 0c
%r9      37 ab 1f 4e c7 ee 3e be
%r10     ec 5e a7 05 fc 9a 75 20
%r11     44 f2 54 37 88 64 44 ec
%r12     c5 d7 b3 06 59 b2 d0 fb
%r13     05 77 37 e5 40 8c c5 f1
%r14     a4 9d 5f b8 b1 01 11 ac
%r15     00 00 00 00 0c 2d e0 b0

%ymm0    d6 1f 30 e7 cf 11 c8 79 35 9c 78 91 f7 da 32 3f 29 30 2d 7d 2b b6 46 46 76 ba 81 84 f5 aa d1 ef
%ymm1    29 39 2e 27 62 0f f7 7b 40 e6 b2 c6 b0 16 4e 1f 1f 74 ed e0 4a bc b2 cd 91 fc 86 4a 86 cc c9 02
%ymm2    a1 7a 3d a9 51 04 7b 29 a2 6c 32 27 2c 4c 74 65 9c 5e 17 7d 3f a3 90 5f 58 d3 ac 8b 42 b0 05 f8
%ymm3    95 a4 d4 52 02 5a 15 59 09 10 de df 6e 72 ad 47 46 60 d3 e0 c4 75 c9 47 36 26 b7 d7 ce e4 2a 42
%ymm4    6f 17 c9 70 82 25 9b 2f 22 41 1a c9 38 0a eb 59 9b 79 ac 54 33 4b 81 53 87 0c 89 3f d6 63 88 ff
%ymm5    1a 5c ae c9 ed 97 00 7d 15 db e2 e6 b8 a0 cb ef 68 c1 03 0f 26 8a 63 d2 56 17 51 03 90 45 7a 51
%ymm6    e1 75 e6 b9 5b 89 0a 92 9c 73 92 1e 5d b7 3c 77 ff 9c ac 10 34 ea 0c 25 c4 82 c2 f2 2c aa a1 28
%ymm7    c5 c2 59 3d e0 e3 57 27 88 ce 1d f5 32 aa 63 13 4c ab d7 d5 ac 3b 29 9c 07 3e 90 e2 7a 0d 20 87
%ymm8    ea e1 59 71 1c 97 18 df b6 34 87 8f ac b9 72 b7 87 c8 54 74 7b a8 9d a6 fc 62 7d 5f 5b 3f cf 79
%ymm9    58 8b 5d 2f a1 7c d6 30 5f 3f 18 80 89 e4 f9 fa 37 3f 88 80 b8 c0 2c 44 44 84 a7 9e 88 45 20 28
%ymm10   e3 c9 a2 65 71 17 08 41 75 8c 6b 45 2c 2b 2c ac a2 48 b3 a8 11 73 20 90 bb 60 64 77 1c e0 d0 7e
%ymm11   0a 82 dd 97 9e 14 f5 39 a3 de 31 62 68 a5 f7 23 78 cb f7 cc 29 ae 19 80 9d a6 60 0d ea ff a9 73
%ymm12   cb d7 29 45 cd a7 67 35 08 53 40 cf af 62 9e 4d fa f9 56 d6 81 8b df b4 62 31 9b e1 93 f5 81 86
%ymm13   87 97 bd dd cc e5 b4 87 18 0d 1f e3 04 cc a2 35 1d 40 96 cf 46 9d 79 6f 1c ee 90 67 8c 5f cc aa
%ymm14   46 9f 3d bc 18 a6 ff 3b da 1a 87 53 01 7a 33 1e 75 67 7c 40 4a 3c aa 7a f6 0d 01 86 f1 13 f6 89
%ymm15   58 a4 97 24 5e f8 e6 a2 e0 40 a2 a5 66 88 1e 13 87 a4 e0 68 2e 79 ec ee 2f b0 44 b4 ba 37 b3 34

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      1 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   8a 79 6a 5c b6 4a 5d a4 
00000006 fffffff0   v v v v v v v v   6f 12 4c ca 7b 28 6c 83 
00000006 ffffffe8   v v v v v v v v   41 ca a3 01 27 fe 9a 9f 
00000006 ffffffe0   v v v v v v v v   e0 87 18 3c a7 af 0d 2e 

[ 00000000 0f12ee88 - 00000000 0f12ee60 ]
[ 1 valid rows shown ]

00000000 0f12ee70   . . . . v v v v   00 00 00 00 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (7)                                                Lowest Known Correct Cost (7)                                             
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32          movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %edx, %ecx          #  6     0xd   2      OPC=testl_r32_r32         testl %edx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xf   2      OPC=je_label              je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x11  1      OPC=nop                   nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x12  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x13  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32          movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32        
  testl %edx, %eax          #  25    0x27  2      OPC=testl_r32_r32         testl %edx, %eax          #  25    0x27  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label             jne .L_142cc0             #  26    0x29  2      OPC=jne_label           
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32          movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32          subl %edi, %eax           #  28    0x2d  2      OPC=subl_r32_r32        
  sarl $0x2, %eax           #  29    0x2f  3      OPC=sarl_r32_imm8         sarl $0x2, %eax           #  29    0x2f  3      OPC=sarl_r32_imm8       
  nop                       #  30    0x32  1      OPC=nop                   nop                       #  30    0x32  1      OPC=nop                 
  nop                       #  31    0x33  1      OPC=nop                   nop                       #  31    0x33  1      OPC=nop                 
  nop                       #  32    0x34  1      OPC=nop                   nop                       #  32    0x34  1      OPC=nop                 
  nop                       #  33    0x35  1      OPC=nop                   nop                       #  33    0x35  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                   nop                       #  34    0x36  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                   nop                       #  35    0x37  1      OPC=nop                 
  nop                       #  36    0x38  1      OPC=nop                   nop                       #  36    0x38  1      OPC=nop                 
  nop                       #  37    0x39  1      OPC=nop                   nop                       #  37    0x39  1      OPC=nop                 
  nop                       #  38    0x3a  1      OPC=nop                   nop                       #  38    0x3a  1      OPC=nop                 
  nop                       #  39    0x3b  1      OPC=nop                   nop                       #  39    0x3b  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                   nop                       #  40    0x3c  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                   nop                       #  41    0x3d  1      OPC=nop                 
  nop                       #  42    0x3e  1      OPC=nop                   nop                       #  42    0x3e  1      OPC=nop                 
  nop                       #  43    0x3f  1      OPC=nop                   nop                       #  43    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>             .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  44    0x40  2      OPC=popq_r64_1            popq %r11                 #  44    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64          addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64              jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  142.908s
Iterations/s:                  699.751

Starting cost:                 8
Lowest cost:                   7
Lowest correct cost:           7

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.355%       4.533%        2.097%       
Opcode          8.298%       7.948%        7.761%       
Local Swap      8.181%       4.482%        3.622%       
Global Swap     8.47%        7.737%        7.092%       
Global Copy     8.46%        7.977%        7.977%       
Rotate          8.216%       7.61%         6.03%        
ReplaceNop      8.361%       8.013%        7.706%       
Delete          8.313%       7.945%        7.002%       
Instruction     8.333%       4.933%        0.623%       
Add Nops        8.364%       8.364%        6.897%       
OpcodeWidth     8.229%       7.702%        7.532%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.42%        1.719%        0.003%       
                                                        
Total           100%         78.963%       64.342%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  388.123s
Iterations/s:                  515.3

Starting cost:                 8
Lowest cost:                   7
Lowest correct cost:           7

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.2945%      4.6765%       2.233%       
Opcode          8.3465%      8.0975%       7.949%       
Local Swap      8.357%       4.5105%       3.6715%      
Global Swap     8.408%       7.856%        7.371%       
Global Copy     8.402%       8.0565%       8.0565%      
Rotate          8.2565%      7.8075%       6.4825%      
ReplaceNop      8.303%       8.0495%       7.819%       
Delete          8.3095%      8.038%        7.2245%      
Instruction     8.3175%      4.879%        0.6375%      
Add Nops        8.325%       8.325%        7.113%       
OpcodeWidth     8.2995%      7.888%        7.75%        
2xWeighted      0%           0%            0%           
Memory+Swap     8.381%       1.8355%       0.0025%      
                                                        
Total           100%         80.0195%      66.31%       

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  731.595s
Iterations/s:                  410.063

Starting cost:                 8
Lowest cost:                   7
Lowest correct cost:           7

Move Type       Proposed     Succeeded     Accepted        
                                                           
Operand         8.28133%     4.80167%      2.47067%        
Opcode          8.38533%     8.18967%      8.06667%        
Local Swap      8.36133%     4.513%        3.67%           
Global Swap     8.32933%     7.88933%      7.47933%        
Global Copy     8.39%        8.11367%      8.11367%        
Rotate          8.32167%     7.955%        6.722%          
ReplaceNop      8.291%       8.08333%      7.90067%        
Delete          8.33733%     8.12233%      7.29733%        
Instruction     8.30867%     4.89667%      0.660333%       
Add Nops        8.31533%     8.31533%      7.17033%        
OpcodeWidth     8.31433%     7.96933%      7.84967%        
2xWeighted      0%           0%            0%              
Memory+Swap     8.36433%     1.98333%      0.00166667%     
                                                           
Total           100%         80.8327%      67.4023%        

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  1158.79s
Iterations/s:                  345.188

Starting cost:                 8
Lowest cost:                   7
Lowest correct cost:           7

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.27375%     5.004%        2.65675%     
Opcode          8.37775%     8.21575%      8.11075%     
Local Swap      8.3555%      4.513%        3.6965%      
Global Swap     8.3455%      7.98%         7.6275%      
Global Copy     8.36175%     8.131%        8.131%       
Rotate          8.34225%     8.03075%      6.85125%     
ReplaceNop      8.28025%     8.1055%       7.95275%     
Delete          8.32675%     8.14575%      7.28675%     
Instruction     8.329%       4.85025%      0.64675%     
Add Nops        8.34875%     8.34875%      7.19025%     
OpcodeWidth     8.30575%     8.00525%      7.89925%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.353%       2.05075%      0.00125%     
                                                        
Total           100%         81.3808%      68.0507%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  1493.45s
Iterations/s:                  334.795

Starting cost:                 8
Lowest cost:                   7
Lowest correct cost:           7

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.2802%      5.2058%       2.8836%      
Opcode          8.3296%      8.1864%       8.0934%      
Local Swap      8.345%       4.4622%       3.5882%      
Global Swap     8.3634%      8.038%        7.7146%      
Global Copy     8.3758%      8.175%        8.175%       
Rotate          8.3432%      8.069%        6.9006%      
ReplaceNop      8.2982%      8.1436%       8.0112%      
Delete          8.3004%      8.1374%       7.2152%      
Instruction     8.346%       4.851%        0.6546%      
Add Nops        8.3332%      8.3332%       7.1254%      
OpcodeWidth     8.3362%      8.066%        7.9702%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3488%      2.0454%       0.001%       
                                                        
Total           100%         81.713%       68.333%      

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     31 59 1a b3 85 1a c1 be
%rcx     11 73 b3 0e 0a dd 9e e6
%rdx     c1 5a 16 14 85 1a 50 0b
%rbx     e1 70 a1 64 09 72 ae da
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 01 45 37 bd
%rdi     00 00 00 00 01 45 3d 53
%r8      b6 97 1d 62 7b 15 fe 23
%r9      7a 27 16 f4 ab 45 ba d9
%r10     34 29 ee 7c d5 f4 20 a8
%r11     7f ce 09 f5 9e 3c 57 32
%r12     7e 41 b1 05 9b 09 fb c8
%r13     d0 c6 0e b1 38 fb bb b0
%r14     fe 66 f9 30 0f 75 d1 1f
%r15     00 00 00 00 01 29 92 c0

%ymm0    51 a4 b6 7a e6 45 93 12 90 59 9a 63 08 3f f3 6b 22 fa 9c b4 31 e3 4a f0 9e da 8b d5 38 60 c5 dd
%ymm1    df 45 91 27 0d c1 43 67 09 b7 fc 95 f7 da df 83 8e c0 ce 79 a1 5e aa 18 89 db 8e e2 0c 52 a2 a5
%ymm2    6d 01 1c 23 8f 1f 46 3c 9c 82 00 53 d8 df 3a 11 0b b8 e5 f1 0d 07 b8 64 af ad 18 08 79 87 11 a7
%ymm3    fb 8f b1 d3 b5 7f eb 73 e5 07 33 69 2b b3 ec 07 13 f3 36 2e b0 6d 98 b7 b4 9a 58 83 ba 3e bf bd
%ymm4    c3 6f 32 63 94 a9 bb 9e 41 ec 7d ca 5b 03 9d 3f 70 59 f3 37 b7 0c 21 a7 78 c6 7d 77 15 90 69 32
%ymm5    80 34 c0 87 e4 6e 53 b9 ba 97 d2 62 3c 3a 4c 97 4e c2 60 45 ca 76 5f 84 58 9d 0e 2a 15 74 89 24
%ymm6    ce 31 a9 71 19 4e 4b 22 c2 ca 26 f8 8e 1b 4e d2 ae 85 59 35 b8 e5 0a 19 0c 28 0a 3d 1a ea d7 1c
%ymm7    21 43 15 1f a7 73 fa 67 1a 7d f3 21 68 70 8e 59 b8 e9 d0 00 5b a7 a9 ef 2d e4 f2 42 4a 3f 20 d2
%ymm8    52 6a 1c b7 79 9c ea 2b 37 48 cf 49 74 51 b3 eb b3 00 2e 36 0f 1d 22 22 41 61 47 91 7f 2d 7b e5
%ymm9    76 0f 21 7c 37 f8 3e 16 05 18 04 8e ea ff 9f 57 74 21 1e 98 03 16 9b 17 87 29 aa 9c af 33 ee 80
%ymm10   fa d1 ab 7c 54 b2 41 ce c6 0f fa df d3 85 95 58 dd d7 49 09 5e a4 28 dd 75 02 b6 e6 82 58 c2 df
%ymm11   70 33 a6 d6 df 52 06 e4 a6 9d 9c 95 36 c5 89 fe ce 8a 84 bd 2f 04 6e ff 6e 1d 12 9c c3 ed dc c3
%ymm12   e0 ba ae 53 2c 43 ed 71 a6 c0 d0 55 18 40 0d 77 8b 88 2b 0d 27 6b e3 de 18 ca 26 b3 f8 05 06 9b
%ymm13   9a 81 07 2d 3a 41 12 20 61 9a 71 34 78 18 b9 95 74 52 e1 de cf c5 4a d0 ad 29 26 18 ab 10 58 47
%ymm14   7c 81 2a 84 ea 61 9b 8f 52 eb 6e 30 44 83 c5 bf c7 86 12 c0 7b d1 2e 44 a7 0b c9 90 4e 0d 03 6f
%ymm15   71 38 8c dd fa 92 23 7f 33 4b cd 68 87 9a ae 4b 50 59 f6 2a 9c 8e 45 43 c7 93 71 fc 49 f4 89 6d

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   d8 bf e7 e3 4f 1d 13 d7 
00000006 fffffff0   v v v v v v v v   f3 dc fb 09 68 f9 f5 89 
00000006 ffffffe8   v v v v v v v v   4f 80 6f 89 8f 70 ed 9a 
00000006 ffffffe0   v v v v v v v v   df 44 6f 0f ee 74 1c e8 

[ 00000000 026ed228 - 00000000 026eca20 ]
[ 36 valid rows shown ]

00000000 026ed128   . v v v v v v v   00 00 00 00 00 8a 4a d3 
00000000 026ed120   v v v v v v v v   93 79 3d 19 9b a3 33 eb 
00000000 026ed118   v v v v v v v v   67 87 3c bd 04 92 fd 99 
00000000 026ed110   v v v v v v v v   9f f2 b3 26 2c cc a8 73 
00000000 026ed108   v v v v v v v v   5d 3d 6b 6f f7 d1 96 79 
00000000 026ed100   v v v v v v v v   dd 9a e6 b0 3c ac ae a9 
00000000 026ed0f8   v v v v v v v v   83 aa c0 6b f3 0b e6 78 
00000000 026ed0f0   v v v v v v v v   c6 e6 7e b8 6f 6a 08 ee 
00000000 026ed0e8   v v v v v v v v   46 9a d9 7d f4 fc 93 2d 
00000000 026ed0e0   v v v v v v v v   5e 3a 02 92 28 04 e9 18 
00000000 026ed0d8   v v v v v v v v   b6 b5 85 7b 44 ff fa 0e 
00000000 026ed0d0   v v v v v v v v   77 14 b0 81 24 6e 14 c9 
00000000 026ed0c8   v v v v v v v v   a6 dd ea c7 9e 59 2b cb 
00000000 026ed0c0   v v v v v v v v   11 fd a9 10 4e 34 93 3b 
00000000 026ed0b8   v v v v v v v v   70 85 81 36 88 e6 5d f6 
00000000 026ed0b0   v v v v v v v v   f0 42 6c 5b c8 37 df df 
00000000 026ed0a8   v v v v v v v v   3f 90 9c d2 48 2d 22 01 
00000000 026ed0a0   v v v v v v v v   af 74 7c 12 c4 0e ba 3a 
00000000 026ed098   v v v v v v v v   fd 9b d9 91 f6 1b 8a 95 
00000000 026ed090   v v v v v v v v   7a 35 7c e9 f7 4e 43 6d 
00000000 026ed088   v v v v v v v v   48 6e b0 46 7e ae 85 9d 
00000000 026ed080   v v v v v v v v   b0 6e 58 8a 10 1f 61 6c 
00000000 026ed078   v v v v v v v v   a5 be 07 61 a0 54 19 91 
00000000 026ed070   v v v v v v v v   3e 2d a6 8a 06 d4 bd 02 
00000000 026ed068   v v v v v v v v   f0 02 c1 e1 fd 16 45 26 
00000000 026ed060   v v v v v v v v   5e 38 29 a4 7a a3 64 44 
00000000 026ed058   v v v v v v v v   1d b3 48 0f 16 eb eb b3 
00000000 026ed050   v v v v v v v v   27 d1 cd 04 e4 bb 40 0f 
00000000 026ed048   v v v v v v v v   04 ab 9c d7 b8 0c fd b9 
00000000 026ed040   v v v v v v v v   be 86 40 36 85 b1 fc 0e 
00000000 026ed038   v v v v v v v v   9c 5c 23 63 c4 1a e6 23 
00000000 026ed030   v v v v v v v v   ed 12 c3 d4 b6 95 73 2d 
00000000 026ed028   v v v v v v v v   f2 8f d9 ff 4e 77 79 87 
00000000 026ed020   v v v v v v v v   00 8e 3a 77 15 9f eb 39 
00000000 026ed018   v v v v v v v v   98 09 7d a0 2c d3 60 19 
00000000 026ed010   v v v v v . . .   5c 2e 61 89 a3 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (31)                                                Lowest Known Correct Cost (36)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                    movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x1   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x4   1      OPC=nop                    movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  subl %eax, %edi           #  5     0x5   2      OPC=subl_r32_r32_1         movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  movl (%r15,%rdi,1), %ecx  #  6     0x7   4      OPC=movl_r32_m32           testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  movq %rdi, %rdx           #  7     0xb   3      OPC=movq_r64_r64           je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xe   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  testl %ecx, %r15d         #  9     0xf   3      OPC=testl_r32_r32          nop                       #  9     0x12  1      OPC=nop                 
  je .L_142ce0              #  10    0x12  2      OPC=je_label               nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x14  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x15  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x16  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x17  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x18  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x19  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1a  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1b  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1c  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1d  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1e  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1f  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  24    0x23  4      OPC=movl_r32_m32           movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  testl %eax, %eax          #  25    0x27  2      OPC=testl_r32_r32          movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  jne .L_142cc0             #  26    0x29  2      OPC=jne_label              testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  movl %edx, %eax           #  27    0x2b  2      OPC=movl_r32_r32           jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  nop                       #  28    0x2d  1      OPC=nop                    movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2e  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  subl %edi, %eax           #  30    0x2f  2      OPC=subl_r32_r32           sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x31  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nopl %eax                 #  32    0x32  3      OPC=nopl_r32               nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x35  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nopl %eax                 #  36    0x38  3      OPC=nopl_r32               nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x3b  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3c  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3d  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3e  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3f  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  sarl $0x2, %eax           #  42    0x40  3      OPC=sarl_r32_imm8          nop                       #  42    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x43  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  43    0x43  1      OPC=nop                    popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  nop                       #  44    0x44  1      OPC=nop                    andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  popq %r11                 #  45    0x45  2      OPC=popq_r64_1             addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  andl $0xe0, %r11d         #  46    0x47  4      OPC=andl_r32_imm8          jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  addq %r15, %r11           #  47    0x4b  3      OPC=addq_r64_r64                                                                                   
  jmpq %r11                 #  48    0x4e  3      OPC=jmpq_r64             .size wcslen, .-wcslen                                                    
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (30)                                                Lowest Known Correct Cost (36)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                    movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x1   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movq %rdi, %rdx           #  4     0x4   3      OPC=movq_r64_r64           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0x7   1      OPC=nop                    movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  subl %eax, %edi           #  6     0x8   2      OPC=subl_r32_r32_1         testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  movl (%r15,%rdi,1), %ecx  #  7     0xa   4      OPC=movl_r32_m32           je .L_142ce0              #  7     0xf   2      OPC=je_label            
  testl %ecx, %ecx          #  8     0xe   2      OPC=testl_r32_r32          nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x10  1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x11  1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x12  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  je .L_142ce0              #  12    0x13  2      OPC=je_label               nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x20  0      OPC=<label>                addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  xorl %edx, %eax           #  28    0x2b  2      OPC=xorl_r32_r32           movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2d  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2e  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x2f  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x30  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x31  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x32  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x33  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x34  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  subl %edi, %eax           #  37    0x35  2      OPC=subl_r32_r32           nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x37  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x38  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  sarl $0x2, %eax           #  40    0x39  3      OPC=sarl_r32_imm8          nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3d  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  43    0x3e  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  44    0x3f  1      OPC=nop                    popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  nop                       #  45    0x40  1      OPC=nop                    andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  nop                       #  46    0x41  1      OPC=nop                    addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
.L_142ce0:                  #        0x42  0      OPC=<label>                jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  nopl %eax                 #  47    0x42  3      OPC=nopl_r32                                                                                       
  nop                       #  48    0x45  1      OPC=nop                  .size wcslen, .-wcslen                                                    
  nopl %eax                 #  49    0x46  3      OPC=nopl_r32                                                                                       
  nop                       #  50    0x49  1      OPC=nop                                                                                            
  nop                       #  51    0x4a  1      OPC=nop                                                                                            
  popq %r11                 #  52    0x4b  2      OPC=popq_r64_1                                                                                     
  andl $0xe0, %r11d         #  53    0x4d  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11           #  54    0x51  3      OPC=addq_r64_r64                                                                                   
  jmpq %r11                 #  55    0x54  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (29)                                                Lowest Known Correct Cost (36)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x2   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x3   1      OPC=nop                    movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movq %rdi, %rdx           #  4     0x4   3      OPC=movq_r64_r64           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  subl %eax, %edi           #  5     0x7   2      OPC=subl_r32_r32_1         movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  movl (%r15,%rdi,1), %ecx  #  6     0x9   4      OPC=movl_r32_m32           testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  testl %ecx, %ecx          #  7     0xd   2      OPC=testl_r32_r32          je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0xf   1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x10  1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x11  1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  je .L_142ce0              #  11    0x12  2      OPC=je_label               nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x20  0      OPC=<label>                addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  xorl %edx, %eax           #  28    0x2b  2      OPC=xorl_r32_r32           movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2d  1      OPC=nop                    subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2e  1      OPC=nop                    sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x2f  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x30  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x31  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x32  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x33  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  subl %edi, %eax           #  36    0x34  2      OPC=subl_r32_r32           nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x36  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x37  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x38  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  sarl $0x2, %eax           #  40    0x39  3      OPC=sarl_r32_imm8          nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3d  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  43    0x3e  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  44    0x3f  1      OPC=nop                    popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  nop                       #  45    0x40  1      OPC=nop                    andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
.L_142ce0:                  #        0x41  0      OPC=<label>                addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  nopl %eax                 #  46    0x41  3      OPC=nopl_r32               jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  nop                       #  47    0x44  1      OPC=nop                                                                                            
  nop                       #  48    0x45  1      OPC=nop                  .size wcslen, .-wcslen                                                    
  nop                       #  49    0x46  1      OPC=nop                                                                                            
  popq %r11                 #  50    0x47  2      OPC=popq_r64_1                                                                                     
  andl $0xe0, %r11d         #  51    0x49  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11           #  52    0x4d  3      OPC=addq_r64_r64                                                                                   
  jmpq %r11                 #  53    0x50  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (28)                                                Lowest Known Correct Cost (28)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  nop                       #  2     0x2   1      OPC=nop                    nop                       #  2     0x2   1      OPC=nop                  
  nop                       #  3     0x3   1      OPC=nop                    nop                       #  3     0x3   1      OPC=nop                  
  movq %rdi, %rdx           #  4     0x4   3      OPC=movq_r64_r64           movq %rdi, %rdx           #  4     0x4   3      OPC=movq_r64_r64         
  subl %eax, %edi           #  5     0x7   2      OPC=subl_r32_r32_1         subl %eax, %edi           #  5     0x7   2      OPC=subl_r32_r32_1       
  movl (%r15,%rdi,1), %ecx  #  6     0x9   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  6     0x9   4      OPC=movl_r32_m32         
  testl %ecx, %ecx          #  7     0xd   2      OPC=testl_r32_r32          testl %ecx, %ecx          #  7     0xd   2      OPC=testl_r32_r32        
  nop                       #  8     0xf   1      OPC=nop                    nop                       #  8     0xf   1      OPC=nop                  
  nop                       #  9     0x10  1      OPC=nop                    nop                       #  9     0x10  1      OPC=nop                  
  nop                       #  10    0x11  1      OPC=nop                    nop                       #  10    0x11  1      OPC=nop                  
  je .L_142ce0              #  11    0x12  2      OPC=je_label               je .L_142ce0              #  11    0x12  2      OPC=je_label             
  nop                       #  12    0x14  1      OPC=nop                    nop                       #  12    0x14  1      OPC=nop                  
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x15  1      OPC=nop                  
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x16  1      OPC=nop                  
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x17  1      OPC=nop                  
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x18  1      OPC=nop                  
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x19  1      OPC=nop                  
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1a  1      OPC=nop                  
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1b  1      OPC=nop                  
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1c  1      OPC=nop                  
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1d  1      OPC=nop                  
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1e  1      OPC=nop                  
  nop                       #  23    0x1f  1      OPC=nop                    nop                       #  23    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32         
  testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32          testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x29  2      OPC=jne_label            
  xorl %edx, %eax           #  28    0x2b  2      OPC=xorl_r32_r32           xorl %edx, %eax           #  28    0x2b  2      OPC=xorl_r32_r32         
  nop                       #  29    0x2d  1      OPC=nop                    nop                       #  29    0x2d  1      OPC=nop                  
  nop                       #  30    0x2e  1      OPC=nop                    nop                       #  30    0x2e  1      OPC=nop                  
  nop                       #  31    0x2f  1      OPC=nop                    nop                       #  31    0x2f  1      OPC=nop                  
  nop                       #  32    0x30  1      OPC=nop                    nop                       #  32    0x30  1      OPC=nop                  
  nop                       #  33    0x31  1      OPC=nop                    nop                       #  33    0x31  1      OPC=nop                  
  nop                       #  34    0x32  1      OPC=nop                    nop                       #  34    0x32  1      OPC=nop                  
  subl %edi, %eax           #  35    0x33  2      OPC=subl_r32_r32           subl %edi, %eax           #  35    0x33  2      OPC=subl_r32_r32         
  nop                       #  36    0x35  1      OPC=nop                    nop                       #  36    0x35  1      OPC=nop                  
  nop                       #  37    0x36  1      OPC=nop                    nop                       #  37    0x36  1      OPC=nop                  
  nop                       #  38    0x37  1      OPC=nop                    nop                       #  38    0x37  1      OPC=nop                  
  nop                       #  39    0x38  1      OPC=nop                    nop                       #  39    0x38  1      OPC=nop                  
  nop                       #  40    0x39  1      OPC=nop                    nop                       #  40    0x39  1      OPC=nop                  
  nop                       #  41    0x3a  1      OPC=nop                    nop                       #  41    0x3a  1      OPC=nop                  
  nop                       #  42    0x3b  1      OPC=nop                    nop                       #  42    0x3b  1      OPC=nop                  
  sarl $0x2, %eax           #  43    0x3c  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  43    0x3c  3      OPC=sarl_r32_imm8        
  nop                       #  44    0x3f  1      OPC=nop                    nop                       #  44    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  45    0x40  1      OPC=nop                    nop                       #  45    0x40  1      OPC=nop                  
  nop                       #  46    0x41  1      OPC=nop                    nop                       #  46    0x41  1      OPC=nop                  
  nop                       #  47    0x42  1      OPC=nop                    nop                       #  47    0x42  1      OPC=nop                  
  nop                       #  48    0x43  1      OPC=nop                    nop                       #  48    0x43  1      OPC=nop                  
  nop                       #  49    0x44  1      OPC=nop                    nop                       #  49    0x44  1      OPC=nop                  
  popq %r11                 #  50    0x45  2      OPC=popq_r64_1             popq %r11                 #  50    0x45  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  51    0x47  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  51    0x47  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  52    0x4b  3      OPC=addq_r64_r64           addq %r15, %r11           #  52    0x4b  3      OPC=addq_r64_r64         
  jmpq %r11                 #  53    0x4e  3      OPC=jmpq_r64               jmpq %r11                 #  53    0x4e  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (27)                                                Lowest Known Correct Cost (27)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x2   1      OPC=nop                  
  nop                       #  4     0x3   1      OPC=nop                    nop                       #  4     0x3   1      OPC=nop                  
  movl %edi, %edx           #  5     0x4   2      OPC=movl_r32_r32_1         movl %edi, %edx           #  5     0x4   2      OPC=movl_r32_r32_1       
  movw (%r15,%rdx,1), %cx   #  6     0x6   5      OPC=movw_r16_m16           movw (%r15,%rdx,1), %cx   #  6     0x6   5      OPC=movw_r16_m16         
  nop                       #  7     0xb   1      OPC=nop                    nop                       #  7     0xb   1      OPC=nop                  
  nop                       #  8     0xc   1      OPC=nop                    nop                       #  8     0xc   1      OPC=nop                  
  nop                       #  9     0xd   1      OPC=nop                    nop                       #  9     0xd   1      OPC=nop                  
  nop                       #  10    0xe   1      OPC=nop                    nop                       #  10    0xe   1      OPC=nop                  
  xorq %rax, %rax           #  11    0xf   3      OPC=xorq_r64_r64           xorq %rax, %rax           #  11    0xf   3      OPC=xorq_r64_r64         
  nop                       #  12    0x12  1      OPC=nop                    nop                       #  12    0x12  1      OPC=nop                  
  nop                       #  13    0x13  1      OPC=nop                    nop                       #  13    0x13  1      OPC=nop                  
  nop                       #  14    0x14  1      OPC=nop                    nop                       #  14    0x14  1      OPC=nop                  
  nop                       #  15    0x15  1      OPC=nop                    nop                       #  15    0x15  1      OPC=nop                  
  shlb $0x1, %ch            #  16    0x16  2      OPC=shlb_rh_one            shlb $0x1, %ch            #  16    0x16  2      OPC=shlb_rh_one          
  nop                       #  17    0x18  1      OPC=nop                    nop                       #  17    0x18  1      OPC=nop                  
  nop                       #  18    0x19  1      OPC=nop                    nop                       #  18    0x19  1      OPC=nop                  
  nop                       #  19    0x1a  1      OPC=nop                    nop                       #  19    0x1a  1      OPC=nop                  
  nop                       #  20    0x1b  1      OPC=nop                    nop                       #  20    0x1b  1      OPC=nop                  
  nop                       #  21    0x1c  1      OPC=nop                    nop                       #  21    0x1c  1      OPC=nop                  
  nop                       #  22    0x1d  1      OPC=nop                    nop                       #  22    0x1d  1      OPC=nop                  
  je .L_142ce0              #  23    0x1e  2      OPC=je_label               je .L_142ce0              #  23    0x1e  2      OPC=je_label             
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32         
  salb $0x1, %ah            #  26    0x27  2      OPC=salb_rh_one            salb $0x1, %ah            #  26    0x27  2      OPC=salb_rh_one          
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x29  2      OPC=jne_label            
  subq %rdi, %rdx           #  28    0x2b  3      OPC=subq_r64_r64_1         subq %rdi, %rdx           #  28    0x2b  3      OPC=subq_r64_r64_1       
  movq %rdx, %rax           #  29    0x2e  3      OPC=movq_r64_r64_1         movq %rdx, %rax           #  29    0x2e  3      OPC=movq_r64_r64_1       
  sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8        
  nop                       #  31    0x34  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                  
  nop                       #  32    0x35  1      OPC=nop                    nop                       #  32    0x35  1      OPC=nop                  
  nop                       #  33    0x36  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                  
  nop                       #  34    0x37  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                  
  nop                       #  35    0x38  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                  
  nop                       #  36    0x39  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                  
  nop                       #  37    0x3a  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                  
  nop                       #  38    0x3b  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                  
  nop                       #  39    0x3c  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                  
  nop                       #  40    0x3d  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                  
  nop                       #  41    0x3e  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                  
  nop                       #  42    0x3f  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  nop                       #  43    0x40  1      OPC=nop                    nop                       #  43    0x40  1      OPC=nop                  
  nop                       #  44    0x41  1      OPC=nop                    nop                       #  44    0x41  1      OPC=nop                  
  nop                       #  45    0x42  1      OPC=nop                    nop                       #  45    0x42  1      OPC=nop                  
  nop                       #  46    0x43  1      OPC=nop                    nop                       #  46    0x43  1      OPC=nop                  
  nop                       #  47    0x44  1      OPC=nop                    nop                       #  47    0x44  1      OPC=nop                  
  nop                       #  48    0x45  1      OPC=nop                    nop                       #  48    0x45  1      OPC=nop                  
  nop                       #  49    0x46  1      OPC=nop                    nop                       #  49    0x46  1      OPC=nop                  
  nop                       #  50    0x47  1      OPC=nop                    nop                       #  50    0x47  1      OPC=nop                  
  nop                       #  51    0x48  1      OPC=nop                    nop                       #  51    0x48  1      OPC=nop                  
  nop                       #  52    0x49  1      OPC=nop                    nop                       #  52    0x49  1      OPC=nop                  
  nop                       #  53    0x4a  1      OPC=nop                    nop                       #  53    0x4a  1      OPC=nop                  
  nop                       #  54    0x4b  1      OPC=nop                    nop                       #  54    0x4b  1      OPC=nop                  
  popq %r11                 #  55    0x4c  2      OPC=popq_r64_1             popq %r11                 #  55    0x4c  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  56    0x4e  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  56    0x4e  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  57    0x52  3      OPC=addq_r64_r64           addq %r15, %r11           #  57    0x52  3      OPC=addq_r64_r64         
  jmpq %r11                 #  58    0x55  3      OPC=jmpq_r64               jmpq %r11                 #  58    0x55  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  43.623s
Iterations/s:                  2292.37

Starting cost:                 36
Lowest cost:                   27
Lowest correct cost:           27

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.39%        4.064%        1.563%       
Opcode          8.415%       7.382%        6.768%       
Local Swap      8.292%       4.998%        4.201%       
Global Swap     8.469%       6.25%         4.776%       
Global Copy     8.389%       6.979%        6.979%       
Rotate          8.118%       6.352%        3.686%       
ReplaceNop      8.186%       7.185%        6.271%       
Delete          8.431%       7.369%        4.819%       
Instruction     8.291%       4.882%        0.666%       
Add Nops        8.418%       8.418%        4.307%       
OpcodeWidth     8.274%       6.653%        6.254%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.327%       1.388%        0.001%       
                                                        
Total           100%         71.92%        50.291%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  95.4222s
Iterations/s:                  2095.95

Starting cost:                 36
Lowest cost:                   27
Lowest correct cost:           27

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.2895%      4.1475%       1.7085%      
Opcode          8.389%       7.4855%       6.908%       
Local Swap      8.402%       5.3085%       4.505%       
Global Swap     8.3305%      6.393%        5.099%       
Global Copy     8.332%       7.12%         7.12%        
Rotate          8.261%       6.714%        4.0405%      
ReplaceNop      8.293%       7.3635%       6.558%       
Delete          8.4495%      7.5245%       5.2345%      
Instruction     8.322%       4.987%        0.728%       
Add Nops        8.3235%      8.3235%       4.673%       
OpcodeWidth     8.2885%      6.827%        6.452%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.3195%      1.46%         0.0005%      
                                                        
Total           100%         73.654%       53.027%      

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  160.75s
Iterations/s:                  1866.26

Starting cost:                 36
Lowest cost:                   27
Lowest correct cost:           27

Move Type       Proposed     Succeeded     Accepted         
                                                            
Operand         8.28733%     4.39467%      1.87133%         
Opcode          8.37867%     7.59833%      7.10233%         
Local Swap      8.35733%     5.43533%      4.67767%         
Global Swap     8.28633%     6.59467%      5.40933%         
Global Copy     8.37567%     7.33%         7.33%            
Rotate          8.27367%     6.91433%      4.406%           
ReplaceNop      8.32767%     7.51467%      6.80367%         
Delete          8.4%         7.601%        5.539%           
Instruction     8.29267%     4.94167%      0.726333%        
Add Nops        8.38567%     8.38567%      4.97133%         
OpcodeWidth     8.29233%     7.015%        6.68167%         
2xWeighted      0%           0%            0%               
Memory+Swap     8.34267%     1.59633%      0.000333333%     
                                                            
Total           100%         75.3217%      55.519%          

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  232.181s
Iterations/s:                  1722.79

Starting cost:                 36
Lowest cost:                   27
Lowest correct cost:           27

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.279%       4.4905%       1.9735%      
Opcode          8.38825%     7.7%          7.24825%     
Local Swap      8.34825%     5.452%        4.70675%     
Global Swap     8.29825%     6.7615%       5.65525%     
Global Copy     8.34275%     7.40175%      7.40175%     
Rotate          8.3025%      7.06525%      4.654%       
ReplaceNop      8.3365%      7.597%        6.95975%     
Delete          8.39375%     7.6785%       5.74925%     
Instruction     8.29975%     4.96425%      0.761%       
Add Nops        8.34725%     8.34725%      5.1565%      
OpcodeWidth     8.285%       7.1235%       6.80775%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.37875%     1.71225%      0.00025%     
                                                        
Total           100%         76.2938%      57.074%      

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  303.663s
Iterations/s:                  1646.56

Starting cost:                 36
Lowest cost:                   27
Lowest correct cost:           27

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.3266%      4.626%        2.0824%      
Opcode          8.358%       7.7268%       7.2974%      
Local Swap      8.3464%      5.4798%       4.7278%      
Global Swap     8.2956%      6.8498%       5.789%       
Global Copy     8.3406%      7.4648%       7.4648%      
Rotate          8.3042%      7.1446%       4.7992%      
ReplaceNop      8.3314%      7.6416%       7.0474%      
Delete          8.3712%      7.7048%       5.8866%      
Instruction     8.3016%      4.9902%       0.781%       
Add Nops        8.3436%      8.3436%       5.2772%      
OpcodeWidth     8.2882%      7.1904%       6.8936%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3926%      1.761%        0.0002%      
                                                        
Total           100%         76.9234%      58.0466%     

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     62 d9 9b b4 c6 97 5a ca
%rcx     5a c0 f9 fb 24 b2 81 64
%rdx     c9 6f 6a b7 49 ca 8e 3c
%rbx     46 53 a6 c7 17 6c 47 fe
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 4d e7 fb db
%rdi     00 00 00 00 4d e7 fb fc
%r8      d1 6f cc cf 62 7b 07 25
%r9      ce 67 4a c6 01 eb 5b 4f
%r10     d7 90 a1 2b 06 67 aa 76
%r11     ca 02 1c 12 b4 78 9d 65
%r12     5c ed f5 a1 b6 de a8 90
%r13     e5 0e 9c 27 08 de 06 09
%r14     3f c0 46 4c f8 9a 17 cf
%r15     00 00 00 00 00 ee 5b 90

%ymm0    3c d4 f2 07 8a 86 34 93 31 f8 1d ae ee 6b 59 b7 8f 7e 4f 99 58 29 37 ab 56 0f b7 8a f8 9f 88 3e
%ymm1    55 8e 97 ca 7b bc 28 42 86 f9 3e 57 5c ed 68 3b cf b1 a1 95 5a b9 48 03 63 9b 10 1e cc 34 b0 8a
%ymm2    5d ba e6 a8 1f 6a ed ba fd 57 bb ff fc cd f2 a8 8b 0b 8d 09 9d e6 99 d0 c0 73 62 cc 59 ea 3a 91
%ymm3    d5 5d 22 d0 4f 62 7a 7b fc 1a 8f a4 b3 74 bf 76 00 a4 99 cd 29 37 21 08 7c 2c 9e b3 4c a3 dd 30
%ymm4    88 cb 05 29 cb 13 c8 2b c9 8c 5e c9 6b b9 dc 5b cf af 02 17 6f e4 29 76 7b 28 85 c3 41 03 45 8e
%ymm5    b2 23 0e 6b dd d0 3c 07 f6 ed 04 fc 7e dc dc de de 21 11 30 de c7 20 dd fa 0c ea 74 94 1e a6 b5
%ymm6    8c 4a dc 29 40 e2 8b 1b 83 ff b6 25 b0 f9 44 11 6a df 9b 4e db 98 5f 4f 62 82 c4 a3 06 c5 7b 1d
%ymm7    a2 44 fc f3 37 ef d1 24 02 2f 3d cc 31 4e 98 5f b3 b8 f5 d1 2d 1c bc 18 a8 7f 2d 41 19 4a 7b 1b
%ymm8    15 49 d5 46 d2 53 3f d9 f4 88 99 9f f8 17 0d 31 ec 14 75 ac 47 d9 4a 01 d2 e8 27 84 3d c0 42 1d
%ymm9    59 b3 5e 68 30 92 14 15 a5 21 7a 8f 60 2b b7 8e 71 07 1a 37 6a e4 21 6f c3 c3 cf ee 21 d9 35 50
%ymm10   fc 3f 63 54 67 37 2d 20 e2 07 1a 1a b6 b8 1b 23 03 66 f2 e6 c6 5f e2 0e 75 2a d9 15 3e ac 84 2f
%ymm11   fa c8 ac 24 ef 1f 3c e7 0f b9 a0 90 3f 22 9d 4a 17 52 6a eb e3 64 c2 0a ba 85 50 a3 cb 4a 86 71
%ymm12   48 84 bb 0f 09 93 8c 61 91 7b 79 34 9d ec 48 8f a2 65 48 69 e3 cf 19 0d 47 3b db ab 1c d5 4d 8c
%ymm13   73 c3 26 70 0a f9 23 ad 01 81 8f 3d 48 be c8 36 6c 53 f9 c7 7f 1e 79 be f7 94 10 14 3c 27 ac 7d
%ymm14   28 03 7f 40 f7 3c 63 ef ed d7 5a a3 61 b7 bf 3d a0 d7 fc d3 dd 4f 1b 28 fc d9 ea c1 93 20 da 1c
%ymm15   0b a7 92 79 bd 75 0e 6e 17 c3 c3 9e 7b a1 f3 f4 68 b5 95 dc b7 83 25 de 2a b3 07 b8 0c 75 ac af

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      1 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   2a da b7 db c9 e2 ea 26 
00000006 fffffff0   v v v v v v v v   81 1a 60 39 5e 57 c5 b1 
00000006 ffffffe8   v v v v v v v v   7e 54 04 38 72 43 ff e2 
00000006 ffffffe0   v v v v v v v v   d6 1e 40 50 da 55 39 34 

[ 00000000 4ed657b8 - 00000000 4ed656a0 ]
[ 4 valid rows shown ]

00000000 4ed657a0   v v v v v v v v   00 00 00 00 46 be 98 b7 
00000000 4ed65798   v v v v v v v v   26 1e ad be 70 4c 19 e5 
00000000 4ed65790   v v v v v v v v   b0 d6 28 1a 98 19 73 76 
00000000 4ed65788   v v v v . . . .   fa f4 80 6b 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (27)                                               Lowest Known Correct Cost (32)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x3   1      OPC=nop                   movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  movq %rdi, %rdx           #  6     0xa   3      OPC=movq_r64_r64          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  testl %edx, %ecx          #  7     0xd   2      OPC=testl_r32_r32         je .L_142ce0              #  7     0xf   2      OPC=je_label            
  je .L_142ce0              #  8     0xf   2      OPC=je_label              nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x11  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x12  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nopl %eax                 #  11    0x13  3      OPC=nopl_r32              nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x16  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x17  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x18  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x19  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x1a  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1b  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1c  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1d  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1e  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1f  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>               nop                       #  22    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8       .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32          addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  testl %ecx, %eax          #  24    0x27  2      OPC=testl_r32_r32         movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  25    0x29  2      OPC=jne_label             movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl %edx, %eax           #  26    0x2b  2      OPC=movl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  nop                       #  27    0x2d  1      OPC=nop                   jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  nop                       #  28    0x2e  1      OPC=nop                   movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2f  1      OPC=nop                   subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x30  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  subl %edi, %eax           #  31    0x31  2      OPC=subl_r32_r32          nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x33  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  sarl $0x2, %eax           #  37    0x38  3      OPC=sarl_r32_imm8         nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3b  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3c  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3d  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
.L_142ce0:                  #        0x3e  0      OPC=<label>               nop                       #  41    0x3e  1      OPC=nop                 
  popq %r11                 #  41    0x3e  2      OPC=popq_r64_1            nop                       #  42    0x3f  1      OPC=nop                 
  andl $0xe0, %r11d         #  42    0x40  4      OPC=andl_r32_imm8       .L_142ce0:                  #        0x40  0      OPC=<label>             
  addq %r15, %r11           #  43    0x44  3      OPC=addq_r64_r64          popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  jmpq %r11                 #  44    0x47  3      OPC=jmpq_r64              andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
                                                                            addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
.size wcslen, .-wcslen                                                      jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (26)                                               Lowest Known Correct Cost (32)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x3   1      OPC=nop                   movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  movq %rdi, %rdx           #  6     0xa   3      OPC=movq_r64_r64          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  testl %edx, %ecx          #  7     0xd   2      OPC=testl_r32_r32         je .L_142ce0              #  7     0xf   2      OPC=je_label            
  je .L_142ce0              #  8     0xf   2      OPC=je_label              nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x11  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x12  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nopl %eax                 #  11    0x13  3      OPC=nopl_r32              nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x16  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x17  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x18  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x19  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x1a  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1b  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1c  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1d  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1e  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1f  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>               nop                       #  22    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8       .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32          addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  testl %ecx, %eax          #  24    0x27  2      OPC=testl_r32_r32         movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  25    0x29  2      OPC=jne_label             movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  nop                       #  26    0x2b  1      OPC=nop                   testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  movl %edx, %eax           #  27    0x2c  2      OPC=movl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  nop                       #  28    0x2e  1      OPC=nop                   movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x2f  1      OPC=nop                   subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x30  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x31  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  subl %edi, %eax           #  32    0x32  2      OPC=subl_r32_r32          nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  sarl $0x2, %eax           #  38    0x39  3      OPC=sarl_r32_imm8         nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3c  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3d  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3e  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
.L_142ce0:                  #        0x3f  0      OPC=<label>               nop                       #  42    0x3f  1      OPC=nop                 
  popq %r11                 #  42    0x3f  2      OPC=popq_r64_1          .L_142ce0:                  #        0x40  0      OPC=<label>             
  andl $0xe0, %r11d         #  43    0x41  4      OPC=andl_r32_imm8         popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  addq %r15, %r11           #  44    0x45  3      OPC=addq_r64_r64          andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  jmpq %r11                 #  45    0x48  3      OPC=jmpq_r64              addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
                                                                            jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
.size wcslen, .-wcslen                                                                                                                              
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (25)                                               Lowest Known Correct Cost (25)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   nop                       #  1     0     1      OPC=nop                 
  nop                       #  2     0x1   1      OPC=nop                   nop                       #  2     0x1   1      OPC=nop                 
  xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  3     0x2   2      OPC=xorl_r32_r32        
  nop                       #  4     0x4   1      OPC=nop                   nop                       #  4     0x4   1      OPC=nop                 
  movl %edi, %edi           #  5     0x5   2      OPC=movl_r32_r32          movl %edi, %edi           #  5     0x5   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  6     0x7   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  6     0x7   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  7     0xb   3      OPC=movq_r64_r64          movq %rdi, %rdx           #  7     0xb   3      OPC=movq_r64_r64        
  nop                       #  8     0xe   1      OPC=nop                   nop                       #  8     0xe   1      OPC=nop                 
  testl %edx, %ecx          #  9     0xf   2      OPC=testl_r32_r32         testl %edx, %ecx          #  9     0xf   2      OPC=testl_r32_r32       
  je .L_142ce0              #  10    0x11  2      OPC=je_label              je .L_142ce0              #  10    0x11  2      OPC=je_label            
  nop                       #  11    0x13  1      OPC=nop                   nop                       #  11    0x13  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                   nop                       #  12    0x14  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                   nop                       #  13    0x15  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                   nop                       #  14    0x16  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                   nop                       #  15    0x17  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                   nop                       #  16    0x18  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                   nop                       #  17    0x19  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                   nop                       #  18    0x1a  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                   nop                       #  19    0x1b  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                   nop                       #  20    0x1c  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                   nop                       #  21    0x1d  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                   nop                       #  22    0x1e  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                   nop                       #  23    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32          movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32        
  testl %ecx, %eax          #  26    0x27  2      OPC=testl_r32_r32         testl %ecx, %eax          #  26    0x27  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label             jne .L_142cc0             #  27    0x29  2      OPC=jne_label           
  nop                       #  28    0x2b  1      OPC=nop                   nop                       #  28    0x2b  1      OPC=nop                 
  nop                       #  29    0x2c  1      OPC=nop                   nop                       #  29    0x2c  1      OPC=nop                 
  nop                       #  30    0x2d  1      OPC=nop                   nop                       #  30    0x2d  1      OPC=nop                 
  xorl %edx, %eax           #  31    0x2e  2      OPC=xorl_r32_r32          xorl %edx, %eax           #  31    0x2e  2      OPC=xorl_r32_r32        
  nop                       #  32    0x30  1      OPC=nop                   nop                       #  32    0x30  1      OPC=nop                 
  nop                       #  33    0x31  1      OPC=nop                   nop                       #  33    0x31  1      OPC=nop                 
  nop                       #  34    0x32  1      OPC=nop                   nop                       #  34    0x32  1      OPC=nop                 
  nop                       #  35    0x33  1      OPC=nop                   nop                       #  35    0x33  1      OPC=nop                 
  nop                       #  36    0x34  1      OPC=nop                   nop                       #  36    0x34  1      OPC=nop                 
  nop                       #  37    0x35  1      OPC=nop                   nop                       #  37    0x35  1      OPC=nop                 
  nop                       #  38    0x36  1      OPC=nop                   nop                       #  38    0x36  1      OPC=nop                 
  nop                       #  39    0x37  1      OPC=nop                   nop                       #  39    0x37  1      OPC=nop                 
  subl %edi, %eax           #  40    0x38  2      OPC=subl_r32_r32          subl %edi, %eax           #  40    0x38  2      OPC=subl_r32_r32        
  nop                       #  41    0x3a  1      OPC=nop                   nop                       #  41    0x3a  1      OPC=nop                 
  sarl $0x2, %eax           #  42    0x3b  3      OPC=sarl_r32_imm8         sarl $0x2, %eax           #  42    0x3b  3      OPC=sarl_r32_imm8       
  nop                       #  43    0x3e  1      OPC=nop                   nop                       #  43    0x3e  1      OPC=nop                 
  nop                       #  44    0x3f  1      OPC=nop                   nop                       #  44    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>             .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  45    0x40  2      OPC=popq_r64_1            popq %r11                 #  45    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  46    0x42  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  46    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  47    0x46  3      OPC=addq_r64_r64          addq %r15, %r11           #  47    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  48    0x49  3      OPC=jmpq_r64              jmpq %r11                 #  48    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (24)                                                Lowest Known Correct Cost (24)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  nop                       #  1     0     1      OPC=nop                    nop                       #  1     0     1      OPC=nop                  
  nop                       #  2     0x1   1      OPC=nop                    nop                       #  2     0x1   1      OPC=nop                  
  nop                       #  3     0x2   1      OPC=nop                    nop                       #  3     0x2   1      OPC=nop                  
  nop                       #  4     0x3   1      OPC=nop                    nop                       #  4     0x3   1      OPC=nop                  
  nop                       #  5     0x4   1      OPC=nop                    nop                       #  5     0x4   1      OPC=nop                  
  nop                       #  6     0x5   1      OPC=nop                    nop                       #  6     0x5   1      OPC=nop                  
  nop                       #  7     0x6   1      OPC=nop                    nop                       #  7     0x6   1      OPC=nop                  
  movl %edi, %edx           #  8     0x7   2      OPC=movl_r32_r32           movl %edi, %edx           #  8     0x7   2      OPC=movl_r32_r32         
  movl (%r15,%rdx,1), %ecx  #  9     0x9   4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %ecx  #  9     0x9   4      OPC=movl_r32_m32         
  xorl %eax, %eax           #  10    0xd   2      OPC=xorl_r32_r32           xorl %eax, %eax           #  10    0xd   2      OPC=xorl_r32_r32         
  testl %ecx, %edi          #  11    0xf   2      OPC=testl_r32_r32          testl %ecx, %edi          #  11    0xf   2      OPC=testl_r32_r32        
  nop                       #  12    0x11  1      OPC=nop                    nop                       #  12    0x11  1      OPC=nop                  
  nop                       #  13    0x12  1      OPC=nop                    nop                       #  13    0x12  1      OPC=nop                  
  nop                       #  14    0x13  1      OPC=nop                    nop                       #  14    0x13  1      OPC=nop                  
  nop                       #  15    0x14  1      OPC=nop                    nop                       #  15    0x14  1      OPC=nop                  
  nop                       #  16    0x15  1      OPC=nop                    nop                       #  16    0x15  1      OPC=nop                  
  je .L_142ce0              #  17    0x16  2      OPC=je_label               je .L_142ce0              #  17    0x16  2      OPC=je_label             
  nop                       #  18    0x18  1      OPC=nop                    nop                       #  18    0x18  1      OPC=nop                  
  nop                       #  19    0x19  1      OPC=nop                    nop                       #  19    0x19  1      OPC=nop                  
  nop                       #  20    0x1a  1      OPC=nop                    nop                       #  20    0x1a  1      OPC=nop                  
  nop                       #  21    0x1b  1      OPC=nop                    nop                       #  21    0x1b  1      OPC=nop                  
  nop                       #  22    0x1c  1      OPC=nop                    nop                       #  22    0x1c  1      OPC=nop                  
  nop                       #  23    0x1d  1      OPC=nop                    nop                       #  23    0x1d  1      OPC=nop                  
  nop                       #  24    0x1e  1      OPC=nop                    nop                       #  24    0x1e  1      OPC=nop                  
  nop                       #  25    0x1f  1      OPC=nop                    nop                       #  25    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  26    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  26    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  27    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  27    0x23  4      OPC=movl_r32_m32         
  testl %eax, %eax          #  28    0x27  2      OPC=testl_r32_r32          testl %eax, %eax          #  28    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  29    0x29  2      OPC=jne_label              jne .L_142cc0             #  29    0x29  2      OPC=jne_label            
  nop                       #  30    0x2b  1      OPC=nop                    nop                       #  30    0x2b  1      OPC=nop                  
  nop                       #  31    0x2c  1      OPC=nop                    nop                       #  31    0x2c  1      OPC=nop                  
  nop                       #  32    0x2d  1      OPC=nop                    nop                       #  32    0x2d  1      OPC=nop                  
  movl %edx, %eax           #  33    0x2e  2      OPC=movl_r32_r32           movl %edx, %eax           #  33    0x2e  2      OPC=movl_r32_r32         
  nop                       #  34    0x30  1      OPC=nop                    nop                       #  34    0x30  1      OPC=nop                  
  subl %edi, %eax           #  35    0x31  2      OPC=subl_r32_r32_1         subl %edi, %eax           #  35    0x31  2      OPC=subl_r32_r32_1       
  nop                       #  36    0x33  1      OPC=nop                    nop                       #  36    0x33  1      OPC=nop                  
  sarl $0x2, %eax           #  37    0x34  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  37    0x34  3      OPC=sarl_r32_imm8        
  nop                       #  38    0x37  1      OPC=nop                    nop                       #  38    0x37  1      OPC=nop                  
  nop                       #  39    0x38  1      OPC=nop                    nop                       #  39    0x38  1      OPC=nop                  
  nop                       #  40    0x39  1      OPC=nop                    nop                       #  40    0x39  1      OPC=nop                  
  nop                       #  41    0x3a  1      OPC=nop                    nop                       #  41    0x3a  1      OPC=nop                  
  nop                       #  42    0x3b  1      OPC=nop                    nop                       #  42    0x3b  1      OPC=nop                  
  nop                       #  43    0x3c  1      OPC=nop                    nop                       #  43    0x3c  1      OPC=nop                  
  nop                       #  44    0x3d  1      OPC=nop                    nop                       #  44    0x3d  1      OPC=nop                  
  nop                       #  45    0x3e  1      OPC=nop                    nop                       #  45    0x3e  1      OPC=nop                  
  nop                       #  46    0x3f  1      OPC=nop                    nop                       #  46    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  popq %r11                 #  47    0x40  2      OPC=popq_r64_1             popq %r11                 #  47    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  48    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  48    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  49    0x46  3      OPC=addq_r64_r64           addq %r15, %r11           #  49    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                 #  50    0x49  3      OPC=jmpq_r64               jmpq %r11                 #  50    0x49  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  51.77s
Iterations/s:                  1931.62

Starting cost:                 32
Lowest cost:                   24
Lowest correct cost:           24

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.467%       4.427%        2.022%       
Opcode          8.369%       7.448%        6.903%       
Local Swap      8.443%       5.424%        4.698%       
Global Swap     8.124%       6.324%        5.04%        
Global Copy     8.338%       7.211%        7.211%       
Rotate          8.27%        6.765%        4.028%       
ReplaceNop      8.158%       7.252%        6.57%        
Delete          8.429%       7.526%        5.264%       
Instruction     8.31%        5.073%        0.735%       
Add Nops        8.31%        8.31%         4.669%       
OpcodeWidth     8.358%       6.843%        6.471%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.424%       1.467%        0.001%       
                                                        
Total           100%         74.07%        53.612%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  118.26s
Iterations/s:                  1691.2

Starting cost:                 32
Lowest cost:                   24
Lowest correct cost:           24

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.4355%      4.7225%       2.1985%      
Opcode          8.2885%      7.5755%       7.123%       
Local Swap      8.393%       5.4905%       4.743%       
Global Swap     8.2355%      6.6995%       5.594%       
Global Copy     8.2935%      7.357%        7.357%       
Rotate          8.2965%      7.034%        4.593%       
ReplaceNop      8.2575%      7.5105%       6.9205%      
Delete          8.406%       7.6605%       5.7725%      
Instruction     8.3245%      5.0365%       0.7975%      
Add Nops        8.37%        8.37%         5.156%       
OpcodeWidth     8.344%       7.1115%       6.794%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.3555%      1.4315%       0.0005%      
                                                        
Total           100%         75.9995%      57.0495%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  189.473s
Iterations/s:                  1583.34

Starting cost:                 32
Lowest cost:                   24
Lowest correct cost:           24

Move Type       Proposed     Succeeded     Accepted         
                                                            
Operand         8.41867%     4.69933%      2.32733%         
Opcode          8.35667%     7.72067%      7.33133%         
Local Swap      8.377%       5.563%        4.792%           
Global Swap     8.28367%     6.88867%      5.855%           
Global Copy     8.24533%     7.41167%      7.41167%         
Rotate          8.278%       7.14967%      4.821%           
ReplaceNop      8.316%       7.66033%      7.12067%         
Delete          8.27667%     7.60667%      5.876%           
Instruction     8.40267%     5.04833%      0.783%           
Add Nops        8.34933%     8.34933%      5.26133%         
OpcodeWidth     8.37033%     7.24967%      6.96267%         
2xWeighted      0%           0%            0%               
Memory+Swap     8.32567%     1.38033%      0.000333333%     
                                                            
Total           100%         76.7277%      58.5423%         

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  262.824s
Iterations/s:                  1521.93

Starting cost:                 32
Lowest cost:                   24
Lowest correct cost:           24

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.38325%     4.718%        2.35675%     
Opcode          8.318%       7.72425%      7.362%       
Local Swap      8.3465%      5.58825%      4.8125%      
Global Swap     8.29425%     7.01%         6.01625%     
Global Copy     8.31925%     7.54%         7.54%        
Rotate          8.28725%     7.237%        4.9725%      
ReplaceNop      8.33775%     7.72475%      7.22425%     
Delete          8.262%       7.64575%      5.9985%      
Instruction     8.36%        5.0125%       0.76475%     
Add Nops        8.3765%      8.3765%       5.3825%      
OpcodeWidth     8.3865%      7.33625%      7.071%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.32875%     1.3795%       0.00125%     
                                                        
Total           100%         77.2927%      59.5022%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  337.143s
Iterations/s:                  1483.05

Starting cost:                 32
Lowest cost:                   24
Lowest correct cost:           24

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.3666%      4.666%        2.327%       
Opcode          8.3298%      7.766%        7.4144%      
Local Swap      8.3282%      5.5952%       4.8394%      
Global Swap     8.2766%      7.056%        6.0888%      
Global Copy     8.3604%      7.6142%       7.6142%      
Rotate          8.3308%      7.3338%       5.0946%      
ReplaceNop      8.3434%      7.762%        7.2768%      
Delete          8.248%       7.6656%       6.0652%      
Instruction     8.385%       5.0184%       0.754%       
Add Nops        8.3882%      8.3882%       5.4584%      
OpcodeWidth     8.322%       7.3078%       7.051%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.321%       1.3488%       0.001%       
                                                        
Total           100%         77.522%       59.9848%     

********************************************************************************

TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
xorl %eax, %eax
testl %ecx, %edi
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 2
SAME MAP
     0 1 
------------------
0  |   1 
1  |     

NEXT MAP
     0 1 
------------------
0  |   0 
1  |     

TOTAL CELLS: 1
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
ALIASING CASES: 1
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
xorl %eax, %eax
testl %ecx, %edi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
nop 
nop 
nop 
movl %edx, %eax
nop 
subl %edi, %eax
nop 
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   1 0 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
xorl %eax, %eax
testl %ecx, %edi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
nop 
nop 
nop 
movl %edx, %eax
nop 
subl %edi, %eax
nop 
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   1 0 0 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
Access 3 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edi, %edx
movl (%r15,%rdx,1), %ecx
xorl %eax, %eax
testl %ecx, %edi
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   0 1 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     00 00 00 00 00 00 00 00
%rcx     00 00 00 00 00 00 00 00
%rdx     00 00 00 00 00 00 00 00
%rbx     00 00 00 00 00 00 00 00
%rsp     00 00 00 00 00 00 00 00
%rbp     00 00 00 00 00 00 00 00
%rsi     00 00 00 00 00 00 00 00
%rdi     00 00 00 00 d0 00 10 03
%r8      00 00 00 00 00 00 00 00
%r9      00 00 00 00 00 00 00 00
%r10     00 00 00 00 00 00 00 00
%r11     00 00 00 00 00 00 00 00
%r12     00 00 00 00 00 00 00 00
%r13     00 00 00 00 00 00 00 00
%r14     00 00 00 00 00 00 00 00
%r15     79 ff ff ff 24 3f f3 fb

%ymm0    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm1    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm2    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm3    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm4    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm5    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm6    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm7    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm8    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm9    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm10   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm11   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm12   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm13   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm14   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
%ymm15   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

%cf      0 
%1       1 
%pf      0 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000007 00000000 ]
[ 0 valid rows shown ]

[ 79ffffff f4400408 - 79ffffff f44003e0 ]
[ 2 valid rows shown ]

79ffffff f4400400   . . v v v v v v   00 00 00 00 00 00 0f ff 
79ffffff f44003f8   v v . . . . . .   ef fc 00 00 00 00 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (23)                                               Lowest Known Correct Cost (29)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  nop                       #  3     0x3   1      OPC=nop                   movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  andl %edi, %edi           #  4     0x4   2      OPC=andl_r32_r32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  movq %rdi, %rdx           #  6     0xa   3      OPC=movq_r64_r64          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  testl %ecx, %ecx          #  7     0xd   2      OPC=testl_r32_r32         je .L_142ce0              #  7     0xf   2      OPC=je_label            
  je .L_142ce0              #  8     0xf   2      OPC=je_label              nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x11  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x12  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x13  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                 .L_142cc0:                  #        0x20  0      OPC=<label>             
.L_142cc0:                  #        0x20  0      OPC=<label>               addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8         movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32          movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32         testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label             jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32          subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x2f  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  sarw $0x2, %ax            #  31    0x30  4      OPC=sarw_r16_imm8         nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x34  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x35  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x38  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x39  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3a  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3b  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3e  1      OPC=nop                   nop                       #  42    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x3f  0      OPC=<label>             .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  43    0x3f  2      OPC=popq_r64_1            popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  44    0x41  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  45    0x45  3      OPC=addq_r64_r64          addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  46    0x48  3      OPC=jmpq_r64              jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (22)                                               Lowest Known Correct Cost (22)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   nop                       #  1     0     1      OPC=nop                 
  xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32        
  nop                       #  3     0x3   1      OPC=nop                   nop                       #  3     0x3   1      OPC=nop                 
  andl %edi, %edi           #  4     0x4   2      OPC=andl_r32_r32          andl %edi, %edi           #  4     0x4   2      OPC=andl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  6     0xa   3      OPC=movq_r64_r64          movq %rdi, %rdx           #  6     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  7     0xd   2      OPC=testl_r32_r32         testl %ecx, %ecx          #  7     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  8     0xf   2      OPC=je_label              je .L_142ce0              #  8     0xf   2      OPC=je_label            
  nop                       #  9     0x11  1      OPC=nop                   nop                       #  9     0x11  1      OPC=nop                 
  nop                       #  10    0x12  1      OPC=nop                   nop                       #  10    0x12  1      OPC=nop                 
  nop                       #  11    0x13  1      OPC=nop                   nop                       #  11    0x13  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                   nop                       #  12    0x14  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                   nop                       #  13    0x15  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                   nop                       #  14    0x16  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                   nop                       #  15    0x17  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                   nop                       #  16    0x18  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                   nop                       #  17    0x19  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                   nop                       #  18    0x1a  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                   nop                       #  19    0x1b  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                   nop                       #  20    0x1c  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                   nop                       #  21    0x1d  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                   nop                       #  22    0x1e  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                   nop                       #  23    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32          movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32        
  testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32         testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32       
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label             jne .L_142cc0             #  27    0x29  2      OPC=jne_label           
  movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32          movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32          subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32        
  nop                       #  30    0x2f  1      OPC=nop                   nop                       #  30    0x2f  1      OPC=nop                 
  sarw $0x2, %ax            #  31    0x30  4      OPC=sarw_r16_imm8         sarw $0x2, %ax            #  31    0x30  4      OPC=sarw_r16_imm8       
  nop                       #  32    0x34  1      OPC=nop                   nop                       #  32    0x34  1      OPC=nop                 
  nop                       #  33    0x35  1      OPC=nop                   nop                       #  33    0x35  1      OPC=nop                 
  nop                       #  34    0x36  1      OPC=nop                   nop                       #  34    0x36  1      OPC=nop                 
  nop                       #  35    0x37  1      OPC=nop                   nop                       #  35    0x37  1      OPC=nop                 
  nop                       #  36    0x38  1      OPC=nop                   nop                       #  36    0x38  1      OPC=nop                 
  nop                       #  37    0x39  1      OPC=nop                   nop                       #  37    0x39  1      OPC=nop                 
  nop                       #  38    0x3a  1      OPC=nop                   nop                       #  38    0x3a  1      OPC=nop                 
  nop                       #  39    0x3b  1      OPC=nop                   nop                       #  39    0x3b  1      OPC=nop                 
  nop                       #  40    0x3c  1      OPC=nop                   nop                       #  40    0x3c  1      OPC=nop                 
  nop                       #  41    0x3d  1      OPC=nop                   nop                       #  41    0x3d  1      OPC=nop                 
  nop                       #  42    0x3e  1      OPC=nop                   nop                       #  42    0x3e  1      OPC=nop                 
  nop                       #  43    0x3f  1      OPC=nop                   nop                       #  43    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>             .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  44    0x40  2      OPC=popq_r64_1            popq %r11                 #  44    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64          addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64              jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  83.5219s
Iterations/s:                  1197.29

Starting cost:                 29
Lowest cost:                   22
Lowest correct cost:           22

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.437%       4.402%        1.866%       
Opcode          8.447%       8.091%        7.895%       
Local Swap      8.248%       4.293%        3.655%       
Global Swap     8.255%       7.508%        6.844%       
Global Copy     8.355%       7.89%         7.89%        
Rotate          8.248%       7.625%        6.004%       
ReplaceNop      8.339%       7.989%        7.677%       
Delete          8.213%       7.881%        6.922%       
Instruction     8.441%       4.863%        0.713%       
Add Nops        8.164%       8.164%        6.677%       
OpcodeWidth     8.373%       7.727%        7.548%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.48%        1.583%        0.003%       
                                                        
Total           100%         78.016%       63.694%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  191.721s
Iterations/s:                  1043.18

Starting cost:                 29
Lowest cost:                   22
Lowest correct cost:           22

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.411%       4.5245%       1.9745%      
Opcode          8.398%       8.1215%       7.959%       
Local Swap      8.2895%      4.2325%       3.565%       
Global Swap     8.3275%      7.7235%       7.16%        
Global Copy     8.374%       7.993%        7.993%       
Rotate          8.349%       7.839%        6.3975%      
ReplaceNop      8.2845%      8.002%        7.7615%      
Delete          8.326%       8.0445%       7.1645%      
Instruction     8.3455%      4.7875%       0.6905%      
Add Nops        8.2305%      8.2305%       6.9195%      
OpcodeWidth     8.295%       7.78%         7.6245%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3695%      1.652%        0.0015%      
                                                        
Total           100%         78.9305%      65.211%      

********************************************************************************

Progress Update: 

Lowest Cost Discovered (17)                                               Lowest Known Correct Cost (22)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                     #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                   #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  movslq %edi, %rcx        #  1     0     3      OPC=movslq_r64_r32         nop                       #  1     0     1      OPC=nop                 
  movl %edi, %edx          #  2     0x3   2      OPC=movl_r32_r32_1         xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32        
  nop                      #  3     0x5   1      OPC=nop                    nop                       #  3     0x3   1      OPC=nop                 
  nop                      #  4     0x6   1      OPC=nop                    andl %edi, %edi           #  4     0x4   2      OPC=andl_r32_r32        
  nop                      #  5     0x7   1      OPC=nop                    movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32        
  nop                      #  6     0x8   1      OPC=nop                    movq %rdi, %rdx           #  6     0xa   3      OPC=movq_r64_r64        
  nop                      #  7     0x9   1      OPC=nop                    testl %ecx, %ecx          #  7     0xd   2      OPC=testl_r32_r32       
  nopl %eax                #  8     0xa   3      OPC=nopl_r32               je .L_142ce0              #  8     0xf   2      OPC=je_label            
  xorl %eax, %eax          #  9     0xd   2      OPC=xorl_r32_r32           nop                       #  9     0x11  1      OPC=nop                 
  shlb $0x3, %dil          #  10    0xf   4      OPC=shlb_r8_imm8           nop                       #  10    0x12  1      OPC=nop                 
  je .L_142ce0             #  11    0x13  2      OPC=je_label               nop                       #  11    0x13  1      OPC=nop                 
  nop                      #  12    0x15  1      OPC=nop                    nop                       #  12    0x14  1      OPC=nop                 
  nop                      #  13    0x16  1      OPC=nop                    nop                       #  13    0x15  1      OPC=nop                 
  nop                      #  14    0x17  1      OPC=nop                    nop                       #  14    0x16  1      OPC=nop                 
  nop                      #  15    0x18  1      OPC=nop                    nop                       #  15    0x17  1      OPC=nop                 
  nop                      #  16    0x19  1      OPC=nop                    nop                       #  16    0x18  1      OPC=nop                 
  nop                      #  17    0x1a  1      OPC=nop                    nop                       #  17    0x19  1      OPC=nop                 
  nop                      #  18    0x1b  1      OPC=nop                    nop                       #  18    0x1a  1      OPC=nop                 
  nop                      #  19    0x1c  1      OPC=nop                    nop                       #  19    0x1b  1      OPC=nop                 
  nop                      #  20    0x1d  1      OPC=nop                    nop                       #  20    0x1c  1      OPC=nop                 
  nop                      #  21    0x1e  1      OPC=nop                    nop                       #  21    0x1d  1      OPC=nop                 
  nop                      #  22    0x1f  1      OPC=nop                    nop                       #  22    0x1e  1      OPC=nop                 
.L_142cc0:                 #        0x20  0      OPC=<label>                nop                       #  23    0x1f  1      OPC=nop                 
  addl $0x4, %edx          #  23    0x20  6      OPC=addl_r32_imm32       .L_142cc0:                  #        0x20  0      OPC=<label>             
  movw (%r15,%rdx,1), %ax  #  24    0x26  5      OPC=movw_r16_m16           addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8       
  shrb $0x1, %ah           #  25    0x2b  3      OPC=shrb_rh_imm8           movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32        
  jne .L_142cc0            #  26    0x2e  2      OPC=jne_label              testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32       
  incb %dl                 #  27    0x30  2      OPC=incb_r8                jne .L_142cc0             #  27    0x29  2      OPC=jne_label           
  nop                      #  28    0x32  1      OPC=nop                    movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32        
  nop                      #  29    0x33  1      OPC=nop                    subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32        
  subl %ecx, %edx          #  30    0x34  2      OPC=subl_r32_r32_1         nop                       #  30    0x2f  1      OPC=nop                 
  andb %dl, %al            #  31    0x36  2      OPC=andb_r8_r8             sarw $0x2, %ax            #  31    0x30  4      OPC=sarw_r16_imm8       
  nop                      #  32    0x38  1      OPC=nop                    nop                       #  32    0x34  1      OPC=nop                 
  nop                      #  33    0x39  1      OPC=nop                    nop                       #  33    0x35  1      OPC=nop                 
  nop                      #  34    0x3a  1      OPC=nop                    nop                       #  34    0x36  1      OPC=nop                 
  addq %rdx, %rax          #  35    0x3b  3      OPC=addq_r64_r64           nop                       #  35    0x37  1      OPC=nop                 
  nop                      #  36    0x3e  1      OPC=nop                    nop                       #  36    0x38  1      OPC=nop                 
.L_142ce0:                 #        0x3f  0      OPC=<label>                nop                       #  37    0x39  1      OPC=nop                 
  nop                      #  37    0x3f  1      OPC=nop                    nop                       #  38    0x3a  1      OPC=nop                 
  nop                      #  38    0x40  1      OPC=nop                    nop                       #  39    0x3b  1      OPC=nop                 
  nop                      #  39    0x41  1      OPC=nop                    nop                       #  40    0x3c  1      OPC=nop                 
  nop                      #  40    0x42  1      OPC=nop                    nop                       #  41    0x3d  1      OPC=nop                 
  nop                      #  41    0x43  1      OPC=nop                    nop                       #  42    0x3e  1      OPC=nop                 
  nop                      #  42    0x44  1      OPC=nop                    nop                       #  43    0x3f  1      OPC=nop                 
  nop                      #  43    0x45  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                      #  44    0x46  1      OPC=nop                    popq %r11                 #  44    0x40  2      OPC=popq_r64_1          
  nop                      #  45    0x47  1      OPC=nop                    andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8       
  sarw $0x2, %ax           #  46    0x48  4      OPC=sarw_r16_imm8          addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64        
  nop                      #  47    0x4c  1      OPC=nop                    jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64            
  nop                      #  48    0x4d  1      OPC=nop                                                                                            
  nopl %eax                #  49    0x4e  3      OPC=nopl_r32             .size wcslen, .-wcslen                                                    
  nop                      #  50    0x51  1      OPC=nop                                                                                            
  nopl %eax                #  51    0x52  3      OPC=nopl_r32                                                                                       
  nop                      #  52    0x55  1      OPC=nop                                                                                            
  nop                      #  53    0x56  1      OPC=nop                                                                                            
  nop                      #  54    0x57  1      OPC=nop                                                                                            
  nop                      #  55    0x58  1      OPC=nop                                                                                            
  nopl %eax                #  56    0x59  3      OPC=nopl_r32                                                                                       
  nopl %eax                #  57    0x5c  3      OPC=nopl_r32                                                                                       
  nop                      #  58    0x5f  1      OPC=nop                                                                                            
  nop                      #  59    0x60  1      OPC=nop                                                                                            
  nop                      #  60    0x61  1      OPC=nop                                                                                            
  nop                      #  61    0x62  1      OPC=nop                                                                                            
  nop                      #  62    0x63  1      OPC=nop                                                                                            
  nop                      #  63    0x64  1      OPC=nop                                                                                            
  nop                      #  64    0x65  1      OPC=nop                                                                                            
  nop                      #  65    0x66  1      OPC=nop                                                                                            
  nop                      #  66    0x67  1      OPC=nop                                                                                            
  nop                      #  67    0x68  1      OPC=nop                                                                                            
  nop                      #  68    0x69  1      OPC=nop                                                                                            
  nop                      #  69    0x6a  1      OPC=nop                                                                                            
  nop                      #  70    0x6b  1      OPC=nop                                                                                            
  nop                      #  71    0x6c  1      OPC=nop                                                                                            
  nop                      #  72    0x6d  1      OPC=nop                                                                                            
  nopl %eax                #  73    0x6e  3      OPC=nopl_r32                                                                                       
  nopl %eax                #  74    0x71  3      OPC=nopl_r32                                                                                       
  nop                      #  75    0x74  1      OPC=nop                                                                                            
  nop                      #  76    0x75  1      OPC=nop                                                                                            
  nop                      #  77    0x76  1      OPC=nop                                                                                            
  nop                      #  78    0x77  1      OPC=nop                                                                                            
  nop                      #  79    0x78  1      OPC=nop                                                                                            
  nop                      #  80    0x79  1      OPC=nop                                                                                            
  nop                      #  81    0x7a  1      OPC=nop                                                                                            
  nop                      #  82    0x7b  1      OPC=nop                                                                                            
  nop                      #  83    0x7c  1      OPC=nop                                                                                            
  popq %r11                #  84    0x7d  2      OPC=popq_r64_1                                                                                     
  andl $0xe0, %r11d        #  85    0x7f  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11          #  86    0x83  3      OPC=addq_r64_r64                                                                                   
  jmpq %r11                #  87    0x86  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                    
.size wcslen, .-wcslen                                                                                                                              
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (16)                                               Lowest Known Correct Cost (22)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                     #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                   #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  movslq %edi, %rcx        #  1     0     3      OPC=movslq_r64_r32         nop                       #  1     0     1      OPC=nop                 
  nop                      #  2     0x3   1      OPC=nop                    xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32        
  nop                      #  3     0x4   1      OPC=nop                    nop                       #  3     0x3   1      OPC=nop                 
  nop                      #  4     0x5   1      OPC=nop                    andl %edi, %edi           #  4     0x4   2      OPC=andl_r32_r32        
  xorl %eax, %eax          #  5     0x6   2      OPC=xorl_r32_r32           movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32        
  movl %edi, %edx          #  6     0x8   2      OPC=movl_r32_r32_1         movq %rdi, %rdx           #  6     0xa   3      OPC=movq_r64_r64        
  nop                      #  7     0xa   1      OPC=nop                    testl %ecx, %ecx          #  7     0xd   2      OPC=testl_r32_r32       
  nop                      #  8     0xb   1      OPC=nop                    je .L_142ce0              #  8     0xf   2      OPC=je_label            
  nopl %eax                #  9     0xc   3      OPC=nopl_r32               nop                       #  9     0x11  1      OPC=nop                 
  nop                      #  10    0xf   1      OPC=nop                    nop                       #  10    0x12  1      OPC=nop                 
  shlb $0x3, %dil          #  11    0x10  4      OPC=shlb_r8_imm8           nop                       #  11    0x13  1      OPC=nop                 
  je .L_142ce0             #  12    0x14  2      OPC=je_label               nop                       #  12    0x14  1      OPC=nop                 
  nop                      #  13    0x16  1      OPC=nop                    nop                       #  13    0x15  1      OPC=nop                 
  nop                      #  14    0x17  1      OPC=nop                    nop                       #  14    0x16  1      OPC=nop                 
  nop                      #  15    0x18  1      OPC=nop                    nop                       #  15    0x17  1      OPC=nop                 
  nop                      #  16    0x19  1      OPC=nop                    nop                       #  16    0x18  1      OPC=nop                 
  nop                      #  17    0x1a  1      OPC=nop                    nop                       #  17    0x19  1      OPC=nop                 
  nop                      #  18    0x1b  1      OPC=nop                    nop                       #  18    0x1a  1      OPC=nop                 
  nop                      #  19    0x1c  1      OPC=nop                    nop                       #  19    0x1b  1      OPC=nop                 
  nop                      #  20    0x1d  1      OPC=nop                    nop                       #  20    0x1c  1      OPC=nop                 
  nop                      #  21    0x1e  1      OPC=nop                    nop                       #  21    0x1d  1      OPC=nop                 
  nop                      #  22    0x1f  1      OPC=nop                    nop                       #  22    0x1e  1      OPC=nop                 
.L_142cc0:                 #        0x20  0      OPC=<label>                nop                       #  23    0x1f  1      OPC=nop                 
  addl $0x4, %edx          #  23    0x20  6      OPC=addl_r32_imm32       .L_142cc0:                  #        0x20  0      OPC=<label>             
  movw (%r15,%rdx,1), %ax  #  24    0x26  5      OPC=movw_r16_m16           addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8       
  shrb $0x1, %ah           #  25    0x2b  3      OPC=shrb_rh_imm8           movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32        
  jne .L_142cc0            #  26    0x2e  2      OPC=jne_label              testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32       
  nop                      #  27    0x30  1      OPC=nop                    jne .L_142cc0             #  27    0x29  2      OPC=jne_label           
  nop                      #  28    0x31  1      OPC=nop                    movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32        
  nop                      #  29    0x32  1      OPC=nop                    subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32        
  subl %ecx, %edx          #  30    0x33  2      OPC=subl_r32_r32_1         nop                       #  30    0x2f  1      OPC=nop                 
  andb %dl, %al            #  31    0x35  2      OPC=andb_r8_r8             sarw $0x2, %ax            #  31    0x30  4      OPC=sarw_r16_imm8       
  nop                      #  32    0x37  1      OPC=nop                    nop                       #  32    0x34  1      OPC=nop                 
  nop                      #  33    0x38  1      OPC=nop                    nop                       #  33    0x35  1      OPC=nop                 
  nop                      #  34    0x39  1      OPC=nop                    nop                       #  34    0x36  1      OPC=nop                 
  addq %rdx, %rax          #  35    0x3a  3      OPC=addq_r64_r64           nop                       #  35    0x37  1      OPC=nop                 
  nopl %eax                #  36    0x3d  3      OPC=nopl_r32               nop                       #  36    0x38  1      OPC=nop                 
.L_142ce0:                 #        0x40  0      OPC=<label>                nop                       #  37    0x39  1      OPC=nop                 
  nop                      #  37    0x40  1      OPC=nop                    nop                       #  38    0x3a  1      OPC=nop                 
  nop                      #  38    0x41  1      OPC=nop                    nop                       #  39    0x3b  1      OPC=nop                 
  nop                      #  39    0x42  1      OPC=nop                    nop                       #  40    0x3c  1      OPC=nop                 
  nop                      #  40    0x43  1      OPC=nop                    nop                       #  41    0x3d  1      OPC=nop                 
  nop                      #  41    0x44  1      OPC=nop                    nop                       #  42    0x3e  1      OPC=nop                 
  nop                      #  42    0x45  1      OPC=nop                    nop                       #  43    0x3f  1      OPC=nop                 
  nop                      #  43    0x46  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
  nopl %eax                #  44    0x47  3      OPC=nopl_r32               popq %r11                 #  44    0x40  2      OPC=popq_r64_1          
  nop                      #  45    0x4a  1      OPC=nop                    andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8       
  sarw $0x2, %ax           #  46    0x4b  4      OPC=sarw_r16_imm8          addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64        
  nop                      #  47    0x4f  1      OPC=nop                    jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64            
  nopl %eax                #  48    0x50  3      OPC=nopl_r32                                                                                       
  nopl %eax                #  49    0x53  3      OPC=nopl_r32             .size wcslen, .-wcslen                                                    
  nop                      #  50    0x56  1      OPC=nop                                                                                            
  nopl %eax                #  51    0x57  3      OPC=nopl_r32                                                                                       
  nop                      #  52    0x5a  1      OPC=nop                                                                                            
  nop                      #  53    0x5b  1      OPC=nop                                                                                            
  nop                      #  54    0x5c  1      OPC=nop                                                                                            
  nopl %eax                #  55    0x5d  3      OPC=nopl_r32                                                                                       
  nopl %eax                #  56    0x60  3      OPC=nopl_r32                                                                                       
  nop                      #  57    0x63  1      OPC=nop                                                                                            
  nop                      #  58    0x64  1      OPC=nop                                                                                            
  nop                      #  59    0x65  1      OPC=nop                                                                                            
  nop                      #  60    0x66  1      OPC=nop                                                                                            
  nop                      #  61    0x67  1      OPC=nop                                                                                            
  nop                      #  62    0x68  1      OPC=nop                                                                                            
  nop                      #  63    0x69  1      OPC=nop                                                                                            
  nop                      #  64    0x6a  1      OPC=nop                                                                                            
  nop                      #  65    0x6b  1      OPC=nop                                                                                            
  nop                      #  66    0x6c  1      OPC=nop                                                                                            
  nop                      #  67    0x6d  1      OPC=nop                                                                                            
  nop                      #  68    0x6e  1      OPC=nop                                                                                            
  nopl %eax                #  69    0x6f  3      OPC=nopl_r32                                                                                       
  nopl %eax                #  70    0x72  3      OPC=nopl_r32                                                                                       
  nop                      #  71    0x75  1      OPC=nop                                                                                            
  nop                      #  72    0x76  1      OPC=nop                                                                                            
  nop                      #  73    0x77  1      OPC=nop                                                                                            
  nop                      #  74    0x78  1      OPC=nop                                                                                            
  nop                      #  75    0x79  1      OPC=nop                                                                                            
  nop                      #  76    0x7a  1      OPC=nop                                                                                            
  nop                      #  77    0x7b  1      OPC=nop                                                                                            
  nop                      #  78    0x7c  1      OPC=nop                                                                                            
  nop                      #  79    0x7d  1      OPC=nop                                                                                            
  popq %r11                #  80    0x7e  2      OPC=popq_r64_1                                                                                     
  andl $0xe0, %r11d        #  81    0x80  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11          #  82    0x84  3      OPC=addq_r64_r64                                                                                   
  jmpq %r11                #  83    0x87  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                    
.size wcslen, .-wcslen                                                                                                                              
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (15)                                               Lowest Known Correct Cost (22)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                     #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                   #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  movslq %edi, %rcx        #  1     0     3      OPC=movslq_r64_r32         nop                       #  1     0     1      OPC=nop                 
  nop                      #  2     0x3   1      OPC=nop                    xorl %eax, %eax           #  2     0x1   2      OPC=xorl_r32_r32        
  nop                      #  3     0x4   1      OPC=nop                    nop                       #  3     0x3   1      OPC=nop                 
  nop                      #  4     0x5   1      OPC=nop                    andl %edi, %edi           #  4     0x4   2      OPC=andl_r32_r32        
  xorl %eax, %eax          #  5     0x6   2      OPC=xorl_r32_r32           movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32        
  nop                      #  6     0x8   1      OPC=nop                    movq %rdi, %rdx           #  6     0xa   3      OPC=movq_r64_r64        
  nop                      #  7     0x9   1      OPC=nop                    testl %ecx, %ecx          #  7     0xd   2      OPC=testl_r32_r32       
  movl %edi, %edx          #  8     0xa   2      OPC=movl_r32_r32_1         je .L_142ce0              #  8     0xf   2      OPC=je_label            
  nopl %eax                #  9     0xc   3      OPC=nopl_r32               nop                       #  9     0x11  1      OPC=nop                 
  nop                      #  10    0xf   1      OPC=nop                    nop                       #  10    0x12  1      OPC=nop                 
  shlb $0x3, %dil          #  11    0x10  4      OPC=shlb_r8_imm8           nop                       #  11    0x13  1      OPC=nop                 
  je .L_142ce0             #  12    0x14  2      OPC=je_label               nop                       #  12    0x14  1      OPC=nop                 
  nop                      #  13    0x16  1      OPC=nop                    nop                       #  13    0x15  1      OPC=nop                 
  nop                      #  14    0x17  1      OPC=nop                    nop                       #  14    0x16  1      OPC=nop                 
  nop                      #  15    0x18  1      OPC=nop                    nop                       #  15    0x17  1      OPC=nop                 
  nop                      #  16    0x19  1      OPC=nop                    nop                       #  16    0x18  1      OPC=nop                 
  nop                      #  17    0x1a  1      OPC=nop                    nop                       #  17    0x19  1      OPC=nop                 
  nop                      #  18    0x1b  1      OPC=nop                    nop                       #  18    0x1a  1      OPC=nop                 
  nop                      #  19    0x1c  1      OPC=nop                    nop                       #  19    0x1b  1      OPC=nop                 
  nop                      #  20    0x1d  1      OPC=nop                    nop                       #  20    0x1c  1      OPC=nop                 
  nop                      #  21    0x1e  1      OPC=nop                    nop                       #  21    0x1d  1      OPC=nop                 
  nop                      #  22    0x1f  1      OPC=nop                    nop                       #  22    0x1e  1      OPC=nop                 
.L_142cc0:                 #        0x20  0      OPC=<label>                nop                       #  23    0x1f  1      OPC=nop                 
  addl $0x4, %edx          #  23    0x20  6      OPC=addl_r32_imm32       .L_142cc0:                  #        0x20  0      OPC=<label>             
  movw (%r15,%rdx,1), %ax  #  24    0x26  5      OPC=movw_r16_m16           addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8       
  shrb $0x1, %ah           #  25    0x2b  3      OPC=shrb_rh_imm8           movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32        
  jne .L_142cc0            #  26    0x2e  2      OPC=jne_label              testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32       
  nop                      #  27    0x30  1      OPC=nop                    jne .L_142cc0             #  27    0x29  2      OPC=jne_label           
  nop                      #  28    0x31  1      OPC=nop                    movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32        
  nop                      #  29    0x32  1      OPC=nop                    subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32        
  subl %ecx, %edx          #  30    0x33  2      OPC=subl_r32_r32_1         nop                       #  30    0x2f  1      OPC=nop                 
  andb %dl, %al            #  31    0x35  2      OPC=andb_r8_r8             sarw $0x2, %ax            #  31    0x30  4      OPC=sarw_r16_imm8       
  nop                      #  32    0x37  1      OPC=nop                    nop                       #  32    0x34  1      OPC=nop                 
  nop                      #  33    0x38  1      OPC=nop                    nop                       #  33    0x35  1      OPC=nop                 
  nop                      #  34    0x39  1      OPC=nop                    nop                       #  34    0x36  1      OPC=nop                 
  addq %rdx, %rax          #  35    0x3a  3      OPC=addq_r64_r64           nop                       #  35    0x37  1      OPC=nop                 
  nopl %eax                #  36    0x3d  3      OPC=nopl_r32               nop                       #  36    0x38  1      OPC=nop                 
.L_142ce0:                 #        0x40  0      OPC=<label>                nop                       #  37    0x39  1      OPC=nop                 
  nop                      #  37    0x40  1      OPC=nop                    nop                       #  38    0x3a  1      OPC=nop                 
  nop                      #  38    0x41  1      OPC=nop                    nop                       #  39    0x3b  1      OPC=nop                 
  nop                      #  39    0x42  1      OPC=nop                    nop                       #  40    0x3c  1      OPC=nop                 
  nop                      #  40    0x43  1      OPC=nop                    nop                       #  41    0x3d  1      OPC=nop                 
  nop                      #  41    0x44  1      OPC=nop                    nop                       #  42    0x3e  1      OPC=nop                 
  nop                      #  42    0x45  1      OPC=nop                    nop                       #  43    0x3f  1      OPC=nop                 
  nop                      #  43    0x46  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
  nopl %eax                #  44    0x47  3      OPC=nopl_r32               popq %r11                 #  44    0x40  2      OPC=popq_r64_1          
  nop                      #  45    0x4a  1      OPC=nop                    andl $0xe0, %r11d         #  45    0x42  4      OPC=andl_r32_imm8       
  sarw $0x2, %ax           #  46    0x4b  4      OPC=sarw_r16_imm8          addq %r15, %r11           #  46    0x46  3      OPC=addq_r64_r64        
  nop                      #  47    0x4f  1      OPC=nop                    jmpq %r11                 #  47    0x49  3      OPC=jmpq_r64            
  nopl %eax                #  48    0x50  3      OPC=nopl_r32                                                                                       
  nopl %eax                #  49    0x53  3      OPC=nopl_r32             .size wcslen, .-wcslen                                                    
  nop                      #  50    0x56  1      OPC=nop                                                                                            
  nopl %eax                #  51    0x57  3      OPC=nopl_r32                                                                                       
  nop                      #  52    0x5a  1      OPC=nop                                                                                            
  nop                      #  53    0x5b  1      OPC=nop                                                                                            
  nop                      #  54    0x5c  1      OPC=nop                                                                                            
  nopl %eax                #  55    0x5d  3      OPC=nopl_r32                                                                                       
  nop                      #  56    0x60  1      OPC=nop                                                                                            
  nop                      #  57    0x61  1      OPC=nop                                                                                            
  nop                      #  58    0x62  1      OPC=nop                                                                                            
  nop                      #  59    0x63  1      OPC=nop                                                                                            
  nop                      #  60    0x64  1      OPC=nop                                                                                            
  nop                      #  61    0x65  1      OPC=nop                                                                                            
  nop                      #  62    0x66  1      OPC=nop                                                                                            
  nop                      #  63    0x67  1      OPC=nop                                                                                            
  nop                      #  64    0x68  1      OPC=nop                                                                                            
  nop                      #  65    0x69  1      OPC=nop                                                                                            
  nop                      #  66    0x6a  1      OPC=nop                                                                                            
  nop                      #  67    0x6b  1      OPC=nop                                                                                            
  nop                      #  68    0x6c  1      OPC=nop                                                                                            
  nop                      #  69    0x6d  1      OPC=nop                                                                                            
  nop                      #  70    0x6e  1      OPC=nop                                                                                            
  nopl %eax                #  71    0x6f  3      OPC=nopl_r32                                                                                       
  nopl %eax                #  72    0x72  3      OPC=nopl_r32                                                                                       
  nopl %eax                #  73    0x75  3      OPC=nopl_r32                                                                                       
  nop                      #  74    0x78  1      OPC=nop                                                                                            
  nop                      #  75    0x79  1      OPC=nop                                                                                            
  nop                      #  76    0x7a  1      OPC=nop                                                                                            
  nop                      #  77    0x7b  1      OPC=nop                                                                                            
  nop                      #  78    0x7c  1      OPC=nop                                                                                            
  nop                      #  79    0x7d  1      OPC=nop                                                                                            
  nop                      #  80    0x7e  1      OPC=nop                                                                                            
  popq %r11                #  81    0x7f  2      OPC=popq_r64_1                                                                                     
  andl $0xe0, %r11d        #  82    0x81  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11          #  83    0x85  3      OPC=addq_r64_r64                                                                                   
  jmpq %r11                #  84    0x88  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                    
.size wcslen, .-wcslen                                                                                                                              
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (14)                                               Lowest Known Correct Cost (14)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                     #  Line  RIP   Bytes  Opcode                   # Text                     #  Line  RIP   Bytes  Opcode                   
.wcslen:                   #        0     0      OPC=<label>              .wcslen:                   #        0     0      OPC=<label>              
  movslq %edi, %rcx        #  1     0     3      OPC=movslq_r64_r32         movslq %edi, %rcx        #  1     0     3      OPC=movslq_r64_r32       
  nop                      #  2     0x3   1      OPC=nop                    nop                      #  2     0x3   1      OPC=nop                  
  nop                      #  3     0x4   1      OPC=nop                    nop                      #  3     0x4   1      OPC=nop                  
  nop                      #  4     0x5   1      OPC=nop                    nop                      #  4     0x5   1      OPC=nop                  
  xorl %eax, %eax          #  5     0x6   2      OPC=xorl_r32_r32           xorl %eax, %eax          #  5     0x6   2      OPC=xorl_r32_r32         
  nop                      #  6     0x8   1      OPC=nop                    nop                      #  6     0x8   1      OPC=nop                  
  nop                      #  7     0x9   1      OPC=nop                    nop                      #  7     0x9   1      OPC=nop                  
  movl %edi, %edx          #  8     0xa   2      OPC=movl_r32_r32_1         movl %edi, %edx          #  8     0xa   2      OPC=movl_r32_r32_1       
  nopl %eax                #  9     0xc   3      OPC=nopl_r32               nopl %eax                #  9     0xc   3      OPC=nopl_r32             
  shlb $0x3, %dil          #  10    0xf   4      OPC=shlb_r8_imm8           shlb $0x3, %dil          #  10    0xf   4      OPC=shlb_r8_imm8         
  nop                      #  11    0x13  1      OPC=nop                    nop                      #  11    0x13  1      OPC=nop                  
  je .L_142ce0             #  12    0x14  2      OPC=je_label               je .L_142ce0             #  12    0x14  2      OPC=je_label             
  nop                      #  13    0x16  1      OPC=nop                    nop                      #  13    0x16  1      OPC=nop                  
  nop                      #  14    0x17  1      OPC=nop                    nop                      #  14    0x17  1      OPC=nop                  
  nop                      #  15    0x18  1      OPC=nop                    nop                      #  15    0x18  1      OPC=nop                  
  nop                      #  16    0x19  1      OPC=nop                    nop                      #  16    0x19  1      OPC=nop                  
  nop                      #  17    0x1a  1      OPC=nop                    nop                      #  17    0x1a  1      OPC=nop                  
  nop                      #  18    0x1b  1      OPC=nop                    nop                      #  18    0x1b  1      OPC=nop                  
  nop                      #  19    0x1c  1      OPC=nop                    nop                      #  19    0x1c  1      OPC=nop                  
  nop                      #  20    0x1d  1      OPC=nop                    nop                      #  20    0x1d  1      OPC=nop                  
  nop                      #  21    0x1e  1      OPC=nop                    nop                      #  21    0x1e  1      OPC=nop                  
  nop                      #  22    0x1f  1      OPC=nop                    nop                      #  22    0x1f  1      OPC=nop                  
.L_142cc0:                 #        0x20  0      OPC=<label>              .L_142cc0:                 #        0x20  0      OPC=<label>              
  addl $0x4, %edx          #  23    0x20  6      OPC=addl_r32_imm32         addl $0x4, %edx          #  23    0x20  6      OPC=addl_r32_imm32       
  movw (%r15,%rdx,1), %ax  #  24    0x26  5      OPC=movw_r16_m16           movw (%r15,%rdx,1), %ax  #  24    0x26  5      OPC=movw_r16_m16         
  shrb $0x1, %ah           #  25    0x2b  3      OPC=shrb_rh_imm8           shrb $0x1, %ah           #  25    0x2b  3      OPC=shrb_rh_imm8         
  jne .L_142cc0            #  26    0x2e  2      OPC=jne_label              jne .L_142cc0            #  26    0x2e  2      OPC=jne_label            
  nop                      #  27    0x30  1      OPC=nop                    nop                      #  27    0x30  1      OPC=nop                  
  nop                      #  28    0x31  1      OPC=nop                    nop                      #  28    0x31  1      OPC=nop                  
  nop                      #  29    0x32  1      OPC=nop                    nop                      #  29    0x32  1      OPC=nop                  
  subl %ecx, %edx          #  30    0x33  2      OPC=subl_r32_r32_1         subl %ecx, %edx          #  30    0x33  2      OPC=subl_r32_r32_1       
  andb %dl, %al            #  31    0x35  2      OPC=andb_r8_r8             andb %dl, %al            #  31    0x35  2      OPC=andb_r8_r8           
  nop                      #  32    0x37  1      OPC=nop                    nop                      #  32    0x37  1      OPC=nop                  
  nop                      #  33    0x38  1      OPC=nop                    nop                      #  33    0x38  1      OPC=nop                  
  nop                      #  34    0x39  1      OPC=nop                    nop                      #  34    0x39  1      OPC=nop                  
  addq %rdx, %rax          #  35    0x3a  3      OPC=addq_r64_r64           addq %rdx, %rax          #  35    0x3a  3      OPC=addq_r64_r64         
  nopl %eax                #  36    0x3d  3      OPC=nopl_r32               nopl %eax                #  36    0x3d  3      OPC=nopl_r32             
.L_142ce0:                 #        0x40  0      OPC=<label>              .L_142ce0:                 #        0x40  0      OPC=<label>              
  nop                      #  37    0x40  1      OPC=nop                    nop                      #  37    0x40  1      OPC=nop                  
  nop                      #  38    0x41  1      OPC=nop                    nop                      #  38    0x41  1      OPC=nop                  
  nop                      #  39    0x42  1      OPC=nop                    nop                      #  39    0x42  1      OPC=nop                  
  nop                      #  40    0x43  1      OPC=nop                    nop                      #  40    0x43  1      OPC=nop                  
  nop                      #  41    0x44  1      OPC=nop                    nop                      #  41    0x44  1      OPC=nop                  
  nop                      #  42    0x45  1      OPC=nop                    nop                      #  42    0x45  1      OPC=nop                  
  nop                      #  43    0x46  1      OPC=nop                    nop                      #  43    0x46  1      OPC=nop                  
  nopl %eax                #  44    0x47  3      OPC=nopl_r32               nopl %eax                #  44    0x47  3      OPC=nopl_r32             
  nop                      #  45    0x4a  1      OPC=nop                    nop                      #  45    0x4a  1      OPC=nop                  
  sarw $0x2, %ax           #  46    0x4b  4      OPC=sarw_r16_imm8          sarw $0x2, %ax           #  46    0x4b  4      OPC=sarw_r16_imm8        
  nop                      #  47    0x4f  1      OPC=nop                    nop                      #  47    0x4f  1      OPC=nop                  
  nopl %eax                #  48    0x50  3      OPC=nopl_r32               nopl %eax                #  48    0x50  3      OPC=nopl_r32             
  nopl %eax                #  49    0x53  3      OPC=nopl_r32               nopl %eax                #  49    0x53  3      OPC=nopl_r32             
  nop                      #  50    0x56  1      OPC=nop                    nop                      #  50    0x56  1      OPC=nop                  
  nopl %eax                #  51    0x57  3      OPC=nopl_r32               nopl %eax                #  51    0x57  3      OPC=nopl_r32             
  nop                      #  52    0x5a  1      OPC=nop                    nop                      #  52    0x5a  1      OPC=nop                  
  nop                      #  53    0x5b  1      OPC=nop                    nop                      #  53    0x5b  1      OPC=nop                  
  nop                      #  54    0x5c  1      OPC=nop                    nop                      #  54    0x5c  1      OPC=nop                  
  nopl %eax                #  55    0x5d  3      OPC=nopl_r32               nopl %eax                #  55    0x5d  3      OPC=nopl_r32             
  nop                      #  56    0x60  1      OPC=nop                    nop                      #  56    0x60  1      OPC=nop                  
  nop                      #  57    0x61  1      OPC=nop                    nop                      #  57    0x61  1      OPC=nop                  
  nop                      #  58    0x62  1      OPC=nop                    nop                      #  58    0x62  1      OPC=nop                  
  nop                      #  59    0x63  1      OPC=nop                    nop                      #  59    0x63  1      OPC=nop                  
  nop                      #  60    0x64  1      OPC=nop                    nop                      #  60    0x64  1      OPC=nop                  
  nop                      #  61    0x65  1      OPC=nop                    nop                      #  61    0x65  1      OPC=nop                  
  nop                      #  62    0x66  1      OPC=nop                    nop                      #  62    0x66  1      OPC=nop                  
  nop                      #  63    0x67  1      OPC=nop                    nop                      #  63    0x67  1      OPC=nop                  
  nop                      #  64    0x68  1      OPC=nop                    nop                      #  64    0x68  1      OPC=nop                  
  nopl %eax                #  65    0x69  3      OPC=nopl_r32               nopl %eax                #  65    0x69  3      OPC=nopl_r32             
  nopl %eax                #  66    0x6c  3      OPC=nopl_r32               nopl %eax                #  66    0x6c  3      OPC=nopl_r32             
  nop                      #  67    0x6f  1      OPC=nop                    nop                      #  67    0x6f  1      OPC=nop                  
  nop                      #  68    0x70  1      OPC=nop                    nop                      #  68    0x70  1      OPC=nop                  
  nop                      #  69    0x71  1      OPC=nop                    nop                      #  69    0x71  1      OPC=nop                  
  nop                      #  70    0x72  1      OPC=nop                    nop                      #  70    0x72  1      OPC=nop                  
  nop                      #  71    0x73  1      OPC=nop                    nop                      #  71    0x73  1      OPC=nop                  
  nopl %eax                #  72    0x74  3      OPC=nopl_r32               nopl %eax                #  72    0x74  3      OPC=nopl_r32             
  nopl %eax                #  73    0x77  3      OPC=nopl_r32               nopl %eax                #  73    0x77  3      OPC=nopl_r32             
  nopl %eax                #  74    0x7a  3      OPC=nopl_r32               nopl %eax                #  74    0x7a  3      OPC=nopl_r32             
  nop                      #  75    0x7d  1      OPC=nop                    nop                      #  75    0x7d  1      OPC=nop                  
  nop                      #  76    0x7e  1      OPC=nop                    nop                      #  76    0x7e  1      OPC=nop                  
  nop                      #  77    0x7f  1      OPC=nop                    nop                      #  77    0x7f  1      OPC=nop                  
  nop                      #  78    0x80  1      OPC=nop                    nop                      #  78    0x80  1      OPC=nop                  
  nop                      #  79    0x81  1      OPC=nop                    nop                      #  79    0x81  1      OPC=nop                  
  nop                      #  80    0x82  1      OPC=nop                    nop                      #  80    0x82  1      OPC=nop                  
  nop                      #  81    0x83  1      OPC=nop                    nop                      #  81    0x83  1      OPC=nop                  
  popq %r11                #  82    0x84  2      OPC=popq_r64_1             popq %r11                #  82    0x84  2      OPC=popq_r64_1           
  andl $0xe0, %r11d        #  83    0x86  4      OPC=andl_r32_imm8          andl $0xe0, %r11d        #  83    0x86  4      OPC=andl_r32_imm8        
  addq %r15, %r11          #  84    0x8a  3      OPC=addq_r64_r64           addq %r15, %r11          #  84    0x8a  3      OPC=addq_r64_r64         
  jmpq %r11                #  85    0x8d  3      OPC=jmpq_r64               jmpq %r11                #  85    0x8d  3      OPC=jmpq_r64             
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (13)                                               Lowest Known Correct Cost (13)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                     #  Line  RIP   Bytes  Opcode                   # Text                     #  Line  RIP   Bytes  Opcode                   
.wcslen:                   #        0     0      OPC=<label>              .wcslen:                   #        0     0      OPC=<label>              
  movslq %edi, %rcx        #  1     0     3      OPC=movslq_r64_r32         movslq %edi, %rcx        #  1     0     3      OPC=movslq_r64_r32       
  nopl %eax                #  2     0x3   3      OPC=nopl_r32               nopl %eax                #  2     0x3   3      OPC=nopl_r32             
  movl %edi, %edx          #  3     0x6   2      OPC=movl_r32_r32_1         movl %edi, %edx          #  3     0x6   2      OPC=movl_r32_r32_1       
  nop                      #  4     0x8   1      OPC=nop                    nop                      #  4     0x8   1      OPC=nop                  
  nop                      #  5     0x9   1      OPC=nop                    nop                      #  5     0x9   1      OPC=nop                  
  nop                      #  6     0xa   1      OPC=nop                    nop                      #  6     0xa   1      OPC=nop                  
  nop                      #  7     0xb   1      OPC=nop                    nop                      #  7     0xb   1      OPC=nop                  
  nop                      #  8     0xc   1      OPC=nop                    nop                      #  8     0xc   1      OPC=nop                  
  xorl %eax, %eax          #  9     0xd   2      OPC=xorl_r32_r32           xorl %eax, %eax          #  9     0xd   2      OPC=xorl_r32_r32         
  shlb $0x2, %cl           #  10    0xf   3      OPC=shlb_r8_imm8           shlb $0x2, %cl           #  10    0xf   3      OPC=shlb_r8_imm8         
  nop                      #  11    0x12  1      OPC=nop                    nop                      #  11    0x12  1      OPC=nop                  
  je .L_142ce0             #  12    0x13  2      OPC=je_label               je .L_142ce0             #  12    0x13  2      OPC=je_label             
  nop                      #  13    0x15  1      OPC=nop                    nop                      #  13    0x15  1      OPC=nop                  
  nop                      #  14    0x16  1      OPC=nop                    nop                      #  14    0x16  1      OPC=nop                  
  nop                      #  15    0x17  1      OPC=nop                    nop                      #  15    0x17  1      OPC=nop                  
  nop                      #  16    0x18  1      OPC=nop                    nop                      #  16    0x18  1      OPC=nop                  
  nop                      #  17    0x19  1      OPC=nop                    nop                      #  17    0x19  1      OPC=nop                  
  nop                      #  18    0x1a  1      OPC=nop                    nop                      #  18    0x1a  1      OPC=nop                  
  nop                      #  19    0x1b  1      OPC=nop                    nop                      #  19    0x1b  1      OPC=nop                  
  nop                      #  20    0x1c  1      OPC=nop                    nop                      #  20    0x1c  1      OPC=nop                  
  nop                      #  21    0x1d  1      OPC=nop                    nop                      #  21    0x1d  1      OPC=nop                  
  nop                      #  22    0x1e  1      OPC=nop                    nop                      #  22    0x1e  1      OPC=nop                  
  nop                      #  23    0x1f  1      OPC=nop                    nop                      #  23    0x1f  1      OPC=nop                  
.L_142cc0:                 #        0x20  0      OPC=<label>              .L_142cc0:                 #        0x20  0      OPC=<label>              
  addl $0x4, %edx          #  24    0x20  6      OPC=addl_r32_imm32         addl $0x4, %edx          #  24    0x20  6      OPC=addl_r32_imm32       
  movw (%r15,%rdx,1), %ax  #  25    0x26  5      OPC=movw_r16_m16           movw (%r15,%rdx,1), %ax  #  25    0x26  5      OPC=movw_r16_m16         
  shrb $0x1, %ah           #  26    0x2b  3      OPC=shrb_rh_imm8           shrb $0x1, %ah           #  26    0x2b  3      OPC=shrb_rh_imm8         
  jne .L_142cc0            #  27    0x2e  2      OPC=jne_label              jne .L_142cc0            #  27    0x2e  2      OPC=jne_label            
  nop                      #  28    0x30  1      OPC=nop                    nop                      #  28    0x30  1      OPC=nop                  
  nop                      #  29    0x31  1      OPC=nop                    nop                      #  29    0x31  1      OPC=nop                  
  nop                      #  30    0x32  1      OPC=nop                    nop                      #  30    0x32  1      OPC=nop                  
  nop                      #  31    0x33  1      OPC=nop                    nop                      #  31    0x33  1      OPC=nop                  
  subl %edi, %edx          #  32    0x34  2      OPC=subl_r32_r32_1         subl %edi, %edx          #  32    0x34  2      OPC=subl_r32_r32_1       
  nop                      #  33    0x36  1      OPC=nop                    nop                      #  33    0x36  1      OPC=nop                  
  andb %dl, %al            #  34    0x37  2      OPC=andb_r8_r8_1           andb %dl, %al            #  34    0x37  2      OPC=andb_r8_r8_1         
  nop                      #  35    0x39  1      OPC=nop                    nop                      #  35    0x39  1      OPC=nop                  
  andb %dl, %ah            #  36    0x3a  2      OPC=andb_rh_r8_1           andb %dl, %ah            #  36    0x3a  2      OPC=andb_rh_r8_1         
  addl %edx, %eax          #  37    0x3c  2      OPC=addl_r32_r32           addl %edx, %eax          #  37    0x3c  2      OPC=addl_r32_r32         
  nop                      #  38    0x3e  1      OPC=nop                    nop                      #  38    0x3e  1      OPC=nop                  
  nop                      #  39    0x3f  1      OPC=nop                    nop                      #  39    0x3f  1      OPC=nop                  
.L_142ce0:                 #        0x40  0      OPC=<label>              .L_142ce0:                 #        0x40  0      OPC=<label>              
  sarw $0x2, %ax           #  40    0x40  4      OPC=sarw_r16_imm8          sarw $0x2, %ax           #  40    0x40  4      OPC=sarw_r16_imm8        
  nop                      #  41    0x44  1      OPC=nop                    nop                      #  41    0x44  1      OPC=nop                  
  nop                      #  42    0x45  1      OPC=nop                    nop                      #  42    0x45  1      OPC=nop                  
  nop                      #  43    0x46  1      OPC=nop                    nop                      #  43    0x46  1      OPC=nop                  
  nop                      #  44    0x47  1      OPC=nop                    nop                      #  44    0x47  1      OPC=nop                  
  nop                      #  45    0x48  1      OPC=nop                    nop                      #  45    0x48  1      OPC=nop                  
  nop                      #  46    0x49  1      OPC=nop                    nop                      #  46    0x49  1      OPC=nop                  
  nop                      #  47    0x4a  1      OPC=nop                    nop                      #  47    0x4a  1      OPC=nop                  
  nop                      #  48    0x4b  1      OPC=nop                    nop                      #  48    0x4b  1      OPC=nop                  
  nop                      #  49    0x4c  1      OPC=nop                    nop                      #  49    0x4c  1      OPC=nop                  
  nop                      #  50    0x4d  1      OPC=nop                    nop                      #  50    0x4d  1      OPC=nop                  
  nop                      #  51    0x4e  1      OPC=nop                    nop                      #  51    0x4e  1      OPC=nop                  
  nop                      #  52    0x4f  1      OPC=nop                    nop                      #  52    0x4f  1      OPC=nop                  
  nop                      #  53    0x50  1      OPC=nop                    nop                      #  53    0x50  1      OPC=nop                  
  nop                      #  54    0x51  1      OPC=nop                    nop                      #  54    0x51  1      OPC=nop                  
  nop                      #  55    0x52  1      OPC=nop                    nop                      #  55    0x52  1      OPC=nop                  
  nop                      #  56    0x53  1      OPC=nop                    nop                      #  56    0x53  1      OPC=nop                  
  nop                      #  57    0x54  1      OPC=nop                    nop                      #  57    0x54  1      OPC=nop                  
  nop                      #  58    0x55  1      OPC=nop                    nop                      #  58    0x55  1      OPC=nop                  
  nop                      #  59    0x56  1      OPC=nop                    nop                      #  59    0x56  1      OPC=nop                  
  nop                      #  60    0x57  1      OPC=nop                    nop                      #  60    0x57  1      OPC=nop                  
  nop                      #  61    0x58  1      OPC=nop                    nop                      #  61    0x58  1      OPC=nop                  
  nop                      #  62    0x59  1      OPC=nop                    nop                      #  62    0x59  1      OPC=nop                  
  nop                      #  63    0x5a  1      OPC=nop                    nop                      #  63    0x5a  1      OPC=nop                  
  nop                      #  64    0x5b  1      OPC=nop                    nop                      #  64    0x5b  1      OPC=nop                  
  nopl %eax                #  65    0x5c  3      OPC=nopl_r32               nopl %eax                #  65    0x5c  3      OPC=nopl_r32             
  nop                      #  66    0x5f  1      OPC=nop                    nop                      #  66    0x5f  1      OPC=nop                  
  nopl %eax                #  67    0x60  3      OPC=nopl_r32               nopl %eax                #  67    0x60  3      OPC=nopl_r32             
  nop                      #  68    0x63  1      OPC=nop                    nop                      #  68    0x63  1      OPC=nop                  
  nop                      #  69    0x64  1      OPC=nop                    nop                      #  69    0x64  1      OPC=nop                  
  nop                      #  70    0x65  1      OPC=nop                    nop                      #  70    0x65  1      OPC=nop                  
  nop                      #  71    0x66  1      OPC=nop                    nop                      #  71    0x66  1      OPC=nop                  
  nop                      #  72    0x67  1      OPC=nop                    nop                      #  72    0x67  1      OPC=nop                  
  nop                      #  73    0x68  1      OPC=nop                    nop                      #  73    0x68  1      OPC=nop                  
  nop                      #  74    0x69  1      OPC=nop                    nop                      #  74    0x69  1      OPC=nop                  
  nop                      #  75    0x6a  1      OPC=nop                    nop                      #  75    0x6a  1      OPC=nop                  
  nop                      #  76    0x6b  1      OPC=nop                    nop                      #  76    0x6b  1      OPC=nop                  
  nop                      #  77    0x6c  1      OPC=nop                    nop                      #  77    0x6c  1      OPC=nop                  
  nopl %eax                #  78    0x6d  3      OPC=nopl_r32               nopl %eax                #  78    0x6d  3      OPC=nopl_r32             
  nop                      #  79    0x70  1      OPC=nop                    nop                      #  79    0x70  1      OPC=nop                  
  nop                      #  80    0x71  1      OPC=nop                    nop                      #  80    0x71  1      OPC=nop                  
  nop                      #  81    0x72  1      OPC=nop                    nop                      #  81    0x72  1      OPC=nop                  
  nop                      #  82    0x73  1      OPC=nop                    nop                      #  82    0x73  1      OPC=nop                  
  nop                      #  83    0x74  1      OPC=nop                    nop                      #  83    0x74  1      OPC=nop                  
  nop                      #  84    0x75  1      OPC=nop                    nop                      #  84    0x75  1      OPC=nop                  
  nop                      #  85    0x76  1      OPC=nop                    nop                      #  85    0x76  1      OPC=nop                  
  nop                      #  86    0x77  1      OPC=nop                    nop                      #  86    0x77  1      OPC=nop                  
  nop                      #  87    0x78  1      OPC=nop                    nop                      #  87    0x78  1      OPC=nop                  
  nop                      #  88    0x79  1      OPC=nop                    nop                      #  88    0x79  1      OPC=nop                  
  nop                      #  89    0x7a  1      OPC=nop                    nop                      #  89    0x7a  1      OPC=nop                  
  nop                      #  90    0x7b  1      OPC=nop                    nop                      #  90    0x7b  1      OPC=nop                  
  nop                      #  91    0x7c  1      OPC=nop                    nop                      #  91    0x7c  1      OPC=nop                  
  nop                      #  92    0x7d  1      OPC=nop                    nop                      #  92    0x7d  1      OPC=nop                  
  nop                      #  93    0x7e  1      OPC=nop                    nop                      #  93    0x7e  1      OPC=nop                  
  nop                      #  94    0x7f  1      OPC=nop                    nop                      #  94    0x7f  1      OPC=nop                  
  nop                      #  95    0x80  1      OPC=nop                    nop                      #  95    0x80  1      OPC=nop                  
  nop                      #  96    0x81  1      OPC=nop                    nop                      #  96    0x81  1      OPC=nop                  
  nop                      #  97    0x82  1      OPC=nop                    nop                      #  97    0x82  1      OPC=nop                  
  nop                      #  98    0x83  1      OPC=nop                    nop                      #  98    0x83  1      OPC=nop                  
  nop                      #  99    0x84  1      OPC=nop                    nop                      #  99    0x84  1      OPC=nop                  
  nop                      #  100   0x85  1      OPC=nop                    nop                      #  100   0x85  1      OPC=nop                  
  nop                      #  101   0x86  1      OPC=nop                    nop                      #  101   0x86  1      OPC=nop                  
  nop                      #  102   0x87  1      OPC=nop                    nop                      #  102   0x87  1      OPC=nop                  
  nop                      #  103   0x88  1      OPC=nop                    nop                      #  103   0x88  1      OPC=nop                  
  nop                      #  104   0x89  1      OPC=nop                    nop                      #  104   0x89  1      OPC=nop                  
  nop                      #  105   0x8a  1      OPC=nop                    nop                      #  105   0x8a  1      OPC=nop                  
  nop                      #  106   0x8b  1      OPC=nop                    nop                      #  106   0x8b  1      OPC=nop                  
  nop                      #  107   0x8c  1      OPC=nop                    nop                      #  107   0x8c  1      OPC=nop                  
  popq %r11                #  108   0x8d  2      OPC=popq_r64_1             popq %r11                #  108   0x8d  2      OPC=popq_r64_1           
  andl $0xe0, %r11d        #  109   0x8f  4      OPC=andl_r32_imm8          andl $0xe0, %r11d        #  109   0x8f  4      OPC=andl_r32_imm8        
  addq %r15, %r11          #  110   0x93  3      OPC=addq_r64_r64           addq %r15, %r11          #  110   0x93  3      OPC=addq_r64_r64         
  jmpq %r11                #  111   0x96  3      OPC=jmpq_r64               jmpq %r11                #  111   0x96  3      OPC=jmpq_r64             
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  427.54s
Iterations/s:                  701.689

Starting cost:                 29
Lowest cost:                   13
Lowest correct cost:           13

Move Type       Proposed     Succeeded     Accepted      
                                                         
Operand         8.36733%     4.85267%      2.25233%      
Opcode          8.325%       8.10467%      7.96633%      
Local Swap      8.294%       4.35633%      3.64833%      
Global Swap     8.35233%     7.85933%      7.37867%      
Global Copy     8.35833%     8.061%        8.061%        
Rotate          8.33567%     7.925%        6.58333%      
ReplaceNop      8.316%       8.08567%      7.88633%      
Delete          8.351%       8.12467%      7.244%        
Instruction     8.33733%     4.86533%      0.711667%     
Add Nops        8.29333%     8.29333%      7.04067%      
OpcodeWidth     8.29167%     7.863%        7.72367%      
2xWeighted      0%           0%            0%            
Memory+Swap     8.378%       1.89133%      0.001%        
                                                         
Total           100%         80.2823%      66.4973%      

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  878.343s
Iterations/s:                  455.403

Starting cost:                 29
Lowest cost:                   13
Lowest correct cost:           13

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.3755%      5.095%        2.52275%     
Opcode          8.379%       8.19225%      8.06875%     
Local Swap      8.27025%     4.4285%       3.666%       
Global Swap     8.339%       7.9225%       7.5035%      
Global Copy     8.3625%      8.11175%      8.11175%     
Rotate          8.34%        7.99075%      6.67925%     
ReplaceNop      8.328%       8.1295%       7.96%        
Delete          8.32775%     8.1385%       7.18325%     
Instruction     8.33275%     4.91925%      0.69375%     
Add Nops        8.29225%     8.29225%      7.009%       
OpcodeWidth     8.289%       7.92%         7.7865%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.364%       1.989%        0.00075%     
                                                        
Total           100%         81.1292%      67.1852%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  1440.23s
Iterations/s:                  347.168

Starting cost:                 29
Lowest cost:                   13
Lowest correct cost:           13

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.3352%      5.2174%       2.692%       
Opcode          8.3794%      8.2164%       8.1072%      
Local Swap      8.2892%      4.4964%       3.6916%      
Global Swap     8.3446%      7.9804%       7.5958%      
Global Copy     8.3364%      8.119%        8.119%       
Rotate          8.353%       8.0478%       6.722%       
ReplaceNop      8.338%       8.1652%       8.0162%      
Delete          8.3198%      8.1532%       7.1328%      
Instruction     8.3254%      4.9384%       0.7032%      
Add Nops        8.3064%      8.3064%       6.9644%      
OpcodeWidth     8.2844%      7.9544%       7.828%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.3882%      2.116%        0.0008%      
                                                        
Total           100%         81.711%       67.573%      

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     01 25 93 17 52 76 51 d7
%rcx     00 16 2f d1 17 8c 15 29
%rdx     b2 0a e8 6a a4 1b 8b b4
%rbx     db 0e 1d 1f c8 f2 c7 01
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 44 53 09 0c
%rdi     00 00 00 00 44 53 09 40
%r8      b1 22 88 b1 80 d0 9b cf
%r9      50 14 12 b1 95 76 47 83
%r10     e0 26 97 20 9c 8a d0 0b
%r11     8e a9 7f 49 99 32 f3 e3
%r12     5d a8 29 a9 ae c9 4c 3b
%r13     ec 47 9c bd 76 4e 03 6d
%r14     0b 6f 97 89 e2 21 f2 86
%r15     00 00 00 00 00 c7 18 80

%ymm0    6e 10 1c a7 d1 bf ae ef b5 74 21 d3 13 81 86 82 c9 58 de e0 a4 a2 b4 73 f6 5c f9 f9 4c 8c c8 ab
%ymm1    d4 9b 85 79 3b 40 e6 ce 01 90 86 43 4d a9 42 4e 5f d7 1d b2 5c e3 16 3a 4d 0c b9 20 6c c0 0e b8
%ymm2    11 2a 20 a6 b6 49 da 71 a7 0e 68 6e fe d9 69 58 44 ad 70 30 01 13 ad c9 33 3f 5c 0a 8e d0 e2 b9
%ymm3    74 41 bc e6 89 2e 83 22 97 9e e8 45 cc cf 92 f2 a1 11 6a 60 f5 97 93 e9 a0 cb 55 4b a4 91 54 b1
%ymm4    63 5d 51 0c 5c e3 9c 65 5e 95 c1 66 9e 50 f9 75 31 c5 77 2c 02 9e 38 55 28 ef a2 2e 3d 1a 1d dc
%ymm5    89 61 df 51 ae db e5 92 6e a8 7e e2 39 94 0e 0f 74 b5 dd c6 ec 6d af f4 53 ab cd 2b ae 46 9b f4
%ymm6    d1 c9 7a 68 d7 ce 7d 02 13 ef ae 5a 5f 9e 74 54 50 45 c0 be 50 dc 73 64 fe a8 f7 25 99 14 fa f4
%ymm7    c5 6b 61 cc d5 9c ba f2 d2 e1 41 d2 ab 0d 21 77 05 f3 fb 5a b3 88 e4 63 1f 3c 07 a4 11 a6 05 6a
%ymm8    ff 22 59 52 e0 29 5d 5c 92 8a de 2f a9 31 46 b5 64 eb 8c cb 98 5a 0f 7e bc 70 a9 a1 d6 0c 71 a1
%ymm9    d3 1c ef ca e9 61 b0 5a 8d 4b d6 f1 23 47 a3 b7 11 c3 c3 60 a8 f2 34 c0 8e 4b bd eb 59 76 d0 07
%ymm10   26 8b 5c 4c 8f b9 f1 46 8d ab d6 d4 da 51 41 60 3a e4 73 c5 a7 f2 b1 42 e8 2a 36 8f 69 1e 0b 9b
%ymm11   e2 67 5f 1d 0e 5c 74 0e 3c 45 79 a0 1a a4 6c 7a a8 de 17 48 64 c6 37 36 84 da 99 29 25 df e4 2c
%ymm12   06 4a f6 98 7c de 7b ab 36 d8 cc 52 b1 2c 5f 82 59 4d fa 28 53 ed 5a 10 58 c9 73 4c a3 7b 99 e8
%ymm13   77 dd 62 13 20 8c 78 7a a2 d6 c3 02 98 bd 9f c3 3f e6 5a e1 5b 8a 87 e5 00 f9 8a 4a 8e e8 fb 75
%ymm14   1e a8 43 7e 3e 96 5f e7 7b 51 9b 8b 19 66 81 1e 39 e3 d8 12 a9 ee 86 f3 bc 60 27 45 39 9e a2 64
%ymm15   67 d3 77 7b e6 72 5d 0a 42 e4 3a 72 75 40 00 84 7d 5d 3a eb b2 35 42 a0 c3 79 03 5d 88 c7 7f ca

%cf      0 
%1       1 
%pf      1 
%0       0 
%af      1 
%0       0 
%zf      1 
%sf      0 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   b1 ae 0b 35 be 6b 26 71 
00000006 fffffff0   v v v v v v v v   9e a9 80 b4 52 01 01 cf 
00000006 ffffffe8   v v v v v v v v   a3 69 f0 10 63 79 78 f1 
00000006 ffffffe0   v v v v v v v v   cb dc 2a 1d d6 ed 6a c2 

[ 00000000 451a2228 - 00000000 451a2120 ]
[ 2 valid rows shown ]

00000000 451a21c8   . . . . v v v v   00 00 00 00 00 00 00 00 
00000000 451a21c0   v v v v v v v v   7d bf f7 bb a8 e4 e4 e8 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (25)                                               Lowest Known Correct Cost (26)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x1   1      OPC=nop                   xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x2   2      OPC=movl_r32_r32          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  4     0x4   2      OPC=xorl_r32_r32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0x6   1      OPC=nop                   movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  movl %edi, %edi           #  6     0x7   2      OPC=movl_r32_r32          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  movl (%r15,%rdi,1), %ecx  #  7     0x9   4      OPC=movl_r32_m32          je .L_142ce0              #  7     0xf   2      OPC=je_label            
  testl %r15d, %ecx         #  8     0xd   3      OPC=testl_r32_r32         nop                       #  8     0x11  1      OPC=nop                 
  je .L_142ce0              #  9     0x10  2      OPC=je_label              nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x12  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x13  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  movq %rdi, %rdx           #  12    0x14  3      OPC=movq_r64_r64          nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x17  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x18  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x19  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x1a  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1b  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1c  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1d  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nopl %eax                 #  20    0x1e  3      OPC=nopl_r32              nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x21  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x22  1      OPC=nop                   nop                       #  22    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x23  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  23    0x23  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  24    0x26  4      OPC=movl_r32_m32          movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  testl %eax, %eax          #  25    0x2a  2      OPC=testl_r32_r32         movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  jne .L_142cc0             #  26    0x2c  2      OPC=jne_label             testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  movl %edx, %eax           #  27    0x2e  2      OPC=movl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  subl %edi, %eax           #  28    0x30  2      OPC=subl_r32_r32          movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  sarl $0x2, %eax           #  29    0x32  3      OPC=sarl_r32_imm8         subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x35  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x36  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x37  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x38  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x39  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x3a  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x3b  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x3c  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3d  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3e  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3f  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x40  1      OPC=nop                   nop                       #  41    0x3e  1      OPC=nop                 
.L_142ce0:                  #        0x41  0      OPC=<label>               nop                       #  42    0x3f  1      OPC=nop                 
  popq %r11                 #  42    0x41  2      OPC=popq_r64_1          .L_142ce0:                  #        0x40  0      OPC=<label>             
  andl $0xe0, %r11d         #  43    0x43  4      OPC=andl_r32_imm8         popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  addq %r15, %r11           #  44    0x47  3      OPC=addq_r64_r64          andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  jmpq %r11                 #  45    0x4a  3      OPC=jmpq_r64              addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
                                                                            jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
.size wcslen, .-wcslen                                                                                                                              
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (24)                                               Lowest Known Correct Cost (26)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x1   1      OPC=nop                   xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x2   2      OPC=movl_r32_r32          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  4     0x4   2      OPC=xorl_r32_r32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0x6   1      OPC=nop                   movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  movl %edi, %edi           #  6     0x7   2      OPC=movl_r32_r32          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  movl (%r15,%rdi,1), %ecx  #  7     0x9   4      OPC=movl_r32_m32          je .L_142ce0              #  7     0xf   2      OPC=je_label            
  testl %r15d, %ecx         #  8     0xd   3      OPC=testl_r32_r32         nop                       #  8     0x11  1      OPC=nop                 
  je .L_142ce0              #  9     0x10  2      OPC=je_label              nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x12  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x13  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  movq %rdi, %rdx           #  12    0x14  3      OPC=movq_r64_r64          nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x17  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x18  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x19  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x1a  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1b  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1c  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nopl %eax                 #  19    0x1d  3      OPC=nopl_r32              nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x20  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x21  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x22  0      OPC=<label>               nop                       #  22    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  22    0x22  3      OPC=addl_r32_imm8       .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  23    0x25  4      OPC=movl_r32_m32          addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  testl %eax, %eax          #  24    0x29  2      OPC=testl_r32_r32         movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  25    0x2b  2      OPC=jne_label             movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl %edx, %eax           #  26    0x2d  2      OPC=movl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  subl %edi, %eax           #  27    0x2f  2      OPC=subl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  sarl $0x2, %eax           #  28    0x31  3      OPC=sarl_r32_imm8         movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x34  1      OPC=nop                   subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x35  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x36  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x37  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x38  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x39  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x3a  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x3b  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x3c  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3d  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3e  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3f  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>               nop                       #  41    0x3e  1      OPC=nop                 
  popq %r11                 #  41    0x40  2      OPC=popq_r64_1            nop                       #  42    0x3f  1      OPC=nop                 
  andl $0xe0, %r11d         #  42    0x42  4      OPC=andl_r32_imm8       .L_142ce0:                  #        0x40  0      OPC=<label>             
  addq %r15, %r11           #  43    0x46  3      OPC=addq_r64_r64          popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  jmpq %r11                 #  44    0x49  3      OPC=jmpq_r64              andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
                                                                            addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
.size wcslen, .-wcslen                                                      jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (23)                                               Lowest Known Correct Cost (26)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x1   1      OPC=nop                   xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x2   2      OPC=movl_r32_r32          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  4     0x4   2      OPC=xorl_r32_r32          movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  nop                       #  5     0x6   1      OPC=nop                   movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  movl %edi, %edi           #  6     0x7   2      OPC=movl_r32_r32          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  movl (%r15,%rdi,1), %ecx  #  7     0x9   4      OPC=movl_r32_m32          je .L_142ce0              #  7     0xf   2      OPC=je_label            
  testl %r15d, %ecx         #  8     0xd   3      OPC=testl_r32_r32         nop                       #  8     0x11  1      OPC=nop                 
  je .L_142ce0              #  9     0x10  2      OPC=je_label              nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x12  1      OPC=nop                   nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x13  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  movq %rdi, %rdx           #  12    0x14  3      OPC=movq_r64_r64          nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x17  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x18  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x19  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x1a  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1b  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1c  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1d  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1e  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1f  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>               nop                       #  22    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8       .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32          addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  testl %eax, %eax          #  24    0x27  2      OPC=testl_r32_r32         movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  25    0x29  2      OPC=jne_label             movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl %edx, %eax           #  26    0x2b  2      OPC=movl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  subl %edi, %eax           #  27    0x2d  2      OPC=subl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  sarl $0x2, %eax           #  28    0x2f  3      OPC=sarl_r32_imm8         movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x32  1      OPC=nop                   subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x33  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x34  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x35  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x36  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x37  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x38  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x39  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x3a  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3b  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3c  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
.L_142ce0:                  #        0x3d  0      OPC=<label>               nop                       #  40    0x3d  1      OPC=nop                 
  popq %r11                 #  40    0x3d  2      OPC=popq_r64_1            nop                       #  41    0x3e  1      OPC=nop                 
  andl $0xe0, %r11d         #  41    0x3f  4      OPC=andl_r32_imm8         nop                       #  42    0x3f  1      OPC=nop                 
  addq %r15, %r11           #  42    0x43  3      OPC=addq_r64_r64        .L_142ce0:                  #        0x40  0      OPC=<label>             
  jmpq %r11                 #  43    0x46  3      OPC=jmpq_r64              popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
                                                                            andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
.size wcslen, .-wcslen                                                      addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
                                                                            jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (22)                                               Lowest Known Correct Cost (26)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  movl %edi, %edi           #  2     0x1   2      OPC=movl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  xorl %eax, %eax           #  3     0x3   2      OPC=xorl_r32_r32          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x5   1      OPC=nop                   movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl %edi, %edi           #  5     0x6   2      OPC=movl_r32_r32          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  movl (%r15,%rdi,1), %ecx  #  6     0x8   4      OPC=movl_r32_m32          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  testl %r15d, %ecx         #  7     0xc   3      OPC=testl_r32_r32         je .L_142ce0              #  7     0xf   2      OPC=je_label            
  je .L_142ce0              #  8     0xf   2      OPC=je_label              nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x11  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  movq %rdi, %rdx           #  10    0x12  3      OPC=movq_r64_r64          nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x15  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x16  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x17  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x18  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x19  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x1a  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1b  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1c  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1d  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1e  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1f  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>               nop                       #  22    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8       .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32          addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  testl %r15d, %eax         #  24    0x27  3      OPC=testl_r32_r32         movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  25    0x2a  2      OPC=jne_label             movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl %edx, %eax           #  26    0x2c  2      OPC=movl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  subl %edi, %eax           #  27    0x2e  2      OPC=subl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  sarl $0x2, %eax           #  28    0x30  3      OPC=sarl_r32_imm8         movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x33  1      OPC=nop                   subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x34  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x35  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x36  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x37  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x38  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x39  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x3a  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x3b  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3c  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3d  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
.L_142ce0:                  #        0x3e  0      OPC=<label>               nop                       #  40    0x3d  1      OPC=nop                 
  popq %r11                 #  40    0x3e  2      OPC=popq_r64_1            nop                       #  41    0x3e  1      OPC=nop                 
  andl $0xe0, %r11d         #  41    0x40  4      OPC=andl_r32_imm8         nop                       #  42    0x3f  1      OPC=nop                 
  addq %r15, %r11           #  42    0x44  3      OPC=addq_r64_r64        .L_142ce0:                  #        0x40  0      OPC=<label>             
  jmpq %r11                 #  43    0x47  3      OPC=jmpq_r64              popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
                                                                            andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
.size wcslen, .-wcslen                                                      addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
                                                                            jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (21)                                               Lowest Known Correct Cost (26)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  movl %edi, %edi           #  2     0x1   2      OPC=movl_r32_r32          xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  xorl %eax, %eax           #  3     0x3   2      OPC=xorl_r32_r32          movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  nop                       #  4     0x5   1      OPC=nop                   movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movl %edi, %edi           #  5     0x6   2      OPC=movl_r32_r32          movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  movl (%r15,%rdi,1), %ecx  #  6     0x8   4      OPC=movl_r32_m32          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  testl %r15d, %ecx         #  7     0xc   3      OPC=testl_r32_r32         je .L_142ce0              #  7     0xf   2      OPC=je_label            
  je .L_142ce0              #  8     0xf   2      OPC=je_label              nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x11  1      OPC=nop                   nop                       #  9     0x12  1      OPC=nop                 
  movq %rdi, %rdx           #  10    0x12  3      OPC=movq_r64_r64          nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x15  1      OPC=nop                   nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x16  1      OPC=nop                   nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x17  1      OPC=nop                   nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x18  1      OPC=nop                   nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x19  1      OPC=nop                   nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x1a  1      OPC=nop                   nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x1b  1      OPC=nop                   nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1c  1      OPC=nop                   nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1d  1      OPC=nop                   nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1e  1      OPC=nop                   nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1f  1      OPC=nop                   nop                       #  21    0x1e  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>               nop                       #  22    0x1f  1      OPC=nop                 
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8       .L_142cc0:                  #        0x20  0      OPC=<label>             
  movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32          addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
  testl %r15d, %eax         #  24    0x27  3      OPC=testl_r32_r32         movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  jne .L_142cc0             #  25    0x2a  2      OPC=jne_label             movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl %edx, %eax           #  26    0x2c  2      OPC=movl_r32_r32          testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  subl %edi, %eax           #  27    0x2e  2      OPC=subl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  sarl $0x2, %eax           #  28    0x30  3      OPC=sarl_r32_imm8         movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  nop                       #  29    0x33  1      OPC=nop                   subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  nop                       #  30    0x34  1      OPC=nop                   sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x35  1      OPC=nop                   nop                       #  31    0x34  1      OPC=nop                 
  nop                       #  32    0x36  1      OPC=nop                   nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x37  1      OPC=nop                   nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x38  1      OPC=nop                   nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x39  1      OPC=nop                   nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x3a  1      OPC=nop                   nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x3b  1      OPC=nop                   nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x3c  1      OPC=nop                   nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3d  1      OPC=nop                   nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3e  1      OPC=nop                   nop                       #  40    0x3d  1      OPC=nop                 
.L_142ce0:                  #        0x3f  0      OPC=<label>               nop                       #  41    0x3e  1      OPC=nop                 
  popq %r11                 #  41    0x3f  2      OPC=popq_r64_1            nop                       #  42    0x3f  1      OPC=nop                 
  andl $0xe0, %r11d         #  42    0x41  4      OPC=andl_r32_imm8       .L_142ce0:                  #        0x40  0      OPC=<label>             
  addq %r15, %r11           #  43    0x45  3      OPC=addq_r64_r64          popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  jmpq %r11                 #  44    0x48  3      OPC=jmpq_r64              andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
                                                                            addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
.size wcslen, .-wcslen                                                      jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
                                                                          .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Progress Update: 

Lowest Cost Discovered (20)                                               Lowest Known Correct Cost (20)                                            
                                                                                                                                                    
  .text                                                                     .text                                                                   
  .globl wcslen                                                             .globl wcslen                                                           
  .type wcslen, @function                                                   .type wcslen, @function                                                 
                                                                                                                                                    
#! file-offset 0                                                          #! file-offset 0                                                          
#! rip-offset  0                                                          #! rip-offset  0                                                          
#! capacity    0 bytes                                                    #! capacity    0 bytes                                                    
                                                                                                                                                    
# Text                      #  Line  RIP   Bytes  Opcode                  # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>             .wcslen:                    #        0     0      OPC=<label>             
  nop                       #  1     0     1      OPC=nop                   nop                       #  1     0     1      OPC=nop                 
  movl %edi, %edi           #  2     0x1   2      OPC=movl_r32_r32          movl %edi, %edi           #  2     0x1   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  3     0x3   4      OPC=movl_r32_m32          movl (%r15,%rdi,1), %ecx  #  3     0x3   4      OPC=movl_r32_m32        
  nop                       #  4     0x7   1      OPC=nop                   nop                       #  4     0x7   1      OPC=nop                 
  movl %edi, %edi           #  5     0x8   2      OPC=movl_r32_r32          movl %edi, %edi           #  5     0x8   2      OPC=movl_r32_r32        
  xorl %eax, %eax           #  6     0xa   2      OPC=xorl_r32_r32          xorl %eax, %eax           #  6     0xa   2      OPC=xorl_r32_r32        
  nop                       #  7     0xc   1      OPC=nop                   nop                       #  7     0xc   1      OPC=nop                 
  testl %r15d, %ecx         #  8     0xd   3      OPC=testl_r32_r32         testl %r15d, %ecx         #  8     0xd   3      OPC=testl_r32_r32       
  je .L_142ce0              #  9     0x10  2      OPC=je_label              je .L_142ce0              #  9     0x10  2      OPC=je_label            
  nop                       #  10    0x12  1      OPC=nop                   nop                       #  10    0x12  1      OPC=nop                 
  movq %rdi, %rdx           #  11    0x13  3      OPC=movq_r64_r64          movq %rdi, %rdx           #  11    0x13  3      OPC=movq_r64_r64        
  nop                       #  12    0x16  1      OPC=nop                   nop                       #  12    0x16  1      OPC=nop                 
  nop                       #  13    0x17  1      OPC=nop                   nop                       #  13    0x17  1      OPC=nop                 
  nop                       #  14    0x18  1      OPC=nop                   nop                       #  14    0x18  1      OPC=nop                 
  nop                       #  15    0x19  1      OPC=nop                   nop                       #  15    0x19  1      OPC=nop                 
  nop                       #  16    0x1a  1      OPC=nop                   nop                       #  16    0x1a  1      OPC=nop                 
  nop                       #  17    0x1b  1      OPC=nop                   nop                       #  17    0x1b  1      OPC=nop                 
  nop                       #  18    0x1c  1      OPC=nop                   nop                       #  18    0x1c  1      OPC=nop                 
  nop                       #  19    0x1d  1      OPC=nop                   nop                       #  19    0x1d  1      OPC=nop                 
  nop                       #  20    0x1e  1      OPC=nop                   nop                       #  20    0x1e  1      OPC=nop                 
  nop                       #  21    0x1f  1      OPC=nop                   nop                       #  21    0x1f  1      OPC=nop                 
.L_142cc0:                  #        0x20  0      OPC=<label>             .L_142cc0:                  #        0x20  0      OPC=<label>             
  addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8         addl $0x4, %edx           #  22    0x20  3      OPC=addl_r32_imm8       
  movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32          movl (%r15,%rdx,1), %eax  #  23    0x23  4      OPC=movl_r32_m32        
  testl %r15d, %eax         #  24    0x27  3      OPC=testl_r32_r32         testl %r15d, %eax         #  24    0x27  3      OPC=testl_r32_r32       
  jne .L_142cc0             #  25    0x2a  2      OPC=jne_label             jne .L_142cc0             #  25    0x2a  2      OPC=jne_label           
  movl %edx, %eax           #  26    0x2c  2      OPC=movl_r32_r32          movl %edx, %eax           #  26    0x2c  2      OPC=movl_r32_r32        
  subl %edi, %eax           #  27    0x2e  2      OPC=subl_r32_r32          subl %edi, %eax           #  27    0x2e  2      OPC=subl_r32_r32        
  sarl $0x2, %eax           #  28    0x30  3      OPC=sarl_r32_imm8         sarl $0x2, %eax           #  28    0x30  3      OPC=sarl_r32_imm8       
  nop                       #  29    0x33  1      OPC=nop                   nop                       #  29    0x33  1      OPC=nop                 
  nop                       #  30    0x34  1      OPC=nop                   nop                       #  30    0x34  1      OPC=nop                 
  nop                       #  31    0x35  1      OPC=nop                   nop                       #  31    0x35  1      OPC=nop                 
  nop                       #  32    0x36  1      OPC=nop                   nop                       #  32    0x36  1      OPC=nop                 
  nop                       #  33    0x37  1      OPC=nop                   nop                       #  33    0x37  1      OPC=nop                 
  nop                       #  34    0x38  1      OPC=nop                   nop                       #  34    0x38  1      OPC=nop                 
  nop                       #  35    0x39  1      OPC=nop                   nop                       #  35    0x39  1      OPC=nop                 
  nop                       #  36    0x3a  1      OPC=nop                   nop                       #  36    0x3a  1      OPC=nop                 
  nop                       #  37    0x3b  1      OPC=nop                   nop                       #  37    0x3b  1      OPC=nop                 
  nop                       #  38    0x3c  1      OPC=nop                   nop                       #  38    0x3c  1      OPC=nop                 
  nop                       #  39    0x3d  1      OPC=nop                   nop                       #  39    0x3d  1      OPC=nop                 
  nop                       #  40    0x3e  1      OPC=nop                   nop                       #  40    0x3e  1      OPC=nop                 
  nop                       #  41    0x3f  1      OPC=nop                   nop                       #  41    0x3f  1      OPC=nop                 
.L_142ce0:                  #        0x40  0      OPC=<label>             .L_142ce0:                  #        0x40  0      OPC=<label>             
  popq %r11                 #  42    0x40  2      OPC=popq_r64_1            popq %r11                 #  42    0x40  2      OPC=popq_r64_1          
  andl $0xe0, %r11d         #  43    0x42  4      OPC=andl_r32_imm8         andl $0xe0, %r11d         #  43    0x42  4      OPC=andl_r32_imm8       
  addq %r15, %r11           #  44    0x46  3      OPC=addq_r64_r64          addq %r15, %r11           #  44    0x46  3      OPC=addq_r64_r64        
  jmpq %r11                 #  45    0x49  3      OPC=jmpq_r64              jmpq %r11                 #  45    0x49  3      OPC=jmpq_r64            
                                                                                                                                                    
.size wcslen, .-wcslen                                                    .size wcslen, .-wcslen                                                    
                                                                                                                                                    

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  83.9384s
Iterations/s:                  1191.35

Starting cost:                 26
Lowest cost:                   20
Lowest correct cost:           20

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.329%       4.133%        1.56%        
Opcode          8.298%       7.15%         6.493%       
Local Swap      8.384%       5.138%        4.426%       
Global Swap     8.226%       5.924%        4.397%       
Global Copy     8.199%       6.74%         6.74%        
Rotate          8.452%       6.449%        3.596%       
ReplaceNop      8.489%       7.312%        6.26%        
Delete          8.338%       7.249%        4.557%       
Instruction     8.231%       4.817%        0.659%       
Add Nops        8.386%       8.386%        4.018%       
OpcodeWidth     8.305%       6.538%        6.088%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.363%       1.337%        0.001%       
                                                        
Total           100%         71.173%       48.795%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  162.786s
Iterations/s:                  1228.61

Starting cost:                 26
Lowest cost:                   20
Lowest correct cost:           20

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.305%       4.0655%       1.5445%      
Opcode          8.296%       7.165%        6.501%       
Local Swap      8.3325%      5.224%        4.4765%      
Global Swap     8.3385%      5.941%        4.392%       
Global Copy     8.258%       6.7675%       6.7675%      
Rotate          8.331%       6.3395%       3.5265%      
ReplaceNop      8.388%       7.2225%       6.1595%      
Delete          8.363%       7.241%        4.5365%      
Instruction     8.241%       4.8155%       0.678%       
Add Nops        8.4505%      8.4505%       3.9775%      
OpcodeWidth     8.374%       6.547%        6.1165%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3225%      1.352%        0.0035%      
                                                        
Total           100%         71.131%       48.6795%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  216.808s
Iterations/s:                  1383.71

Starting cost:                 26
Lowest cost:                   20
Lowest correct cost:           20

Move Type       Proposed     Succeeded     Accepted        
                                                           
Operand         8.28867%     4.036%        1.54467%        
Opcode          8.29867%     7.17033%      6.46233%        
Local Swap      8.351%       5.18%         4.43233%        
Global Swap     8.369%       5.93267%      4.36433%        
Global Copy     8.32233%     6.80833%      6.80833%        
Rotate          8.305%       6.31333%      3.49133%        
ReplaceNop      8.33367%     7.154%        6.10067%        
Delete          8.38133%     7.22533%      4.52567%        
Instruction     8.26267%     4.859%        0.678333%       
Add Nops        8.38933%     8.38933%      3.962%          
OpcodeWidth     8.356%       6.48967%      6.06%           
2xWeighted      0%           0%            0%              
Memory+Swap     8.34233%     1.321%        0.00366667%     
                                                           
Total           100%         70.879%       48.4337%        

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  268.714s
Iterations/s:                  1488.57

Starting cost:                 26
Lowest cost:                   20
Lowest correct cost:           20

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.29825%     4.0715%       1.56525%     
Opcode          8.32075%     7.20625%      6.4915%      
Local Swap      8.36775%     5.19375%      4.4395%      
Global Swap     8.31275%     5.93125%      4.3965%      
Global Copy     8.38625%     6.855%        6.855%       
Rotate          8.312%       6.3195%       3.51675%     
ReplaceNop      8.33775%     7.17425%      6.12875%     
Delete          8.37425%     7.2125%       4.49875%     
Instruction     8.27825%     4.887%        0.67325%     
Add Nops        8.3595%      8.3595%       3.94525%     
OpcodeWidth     8.328%       6.4695%       6.05025%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.3245%      1.32825%      0.00275%     
                                                        
Total           100%         71.0083%      48.5635%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  324.956s
Iterations/s:                  1538.67

Starting cost:                 26
Lowest cost:                   20
Lowest correct cost:           20

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.3292%      4.1564%       1.5884%      
Opcode          8.3182%      7.2314%       6.5258%      
Local Swap      8.3502%      5.1998%       4.4394%      
Global Swap     8.3042%      5.981%        4.472%       
Global Copy     8.4178%      6.9232%       6.9232%      
Rotate          8.2762%      6.3316%       3.5764%      
ReplaceNop      8.363%       7.2238%       6.209%       
Delete          8.337%       7.2038%       4.568%       
Instruction     8.2724%      4.9104%       0.6874%      
Add Nops        8.3744%      8.3744%       4.0254%      
OpcodeWidth     8.3338%      6.5234%       6.1108%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3236%      1.3514%       0.0022%      
                                                        
Total           100%         71.4106%      49.128%      

********************************************************************************

Unable to verify new rewrite...

********************************************************************************

Restarting search using new testcase (counterexample from verifier):

SIGNAL 0 [normal exit]

%rax     89 cc d0 8c ab 3f f9 89
%rcx     85 79 dd 2c e5 a2 58 1f
%rdx     ee 3f e9 1e f3 43 ae 40
%rbx     f9 d5 9a 2b cc 85 23 e7
%rsp     00 00 00 07 00 00 00 00
%rbp     00 00 00 07 00 00 00 00
%rsi     00 00 00 00 3c ad cf fb
%rdi     00 00 00 00 3c ad d0 22
%r8      69 f1 63 19 58 cf d9 e3
%r9      fe 34 2a 04 9a 86 9a cc
%r10     4b fa 57 ba f6 01 32 4a
%r11     8f 52 c8 8b 8a ae ad 19
%r12     d5 27 0f c9 42 e3 29 27
%r13     99 55 6f 29 aa 63 c3 a9
%r14     0f 58 93 4d ee 85 85 c1
%r15     00 00 00 00 04 c8 90 20

%ymm0    90 09 5a 8a 2c 22 26 19 d3 8f 8c fc 47 cd f3 f8 6e 2f 8f ef 57 0b 53 d4 0f 1e d0 a4 65 16 1b 1c
%ymm1    9b 7a e6 5d ac d9 45 03 b1 44 f5 9e 61 8f 2e 0f d0 63 d3 10 86 a7 9c 6e f5 be fa 5e e4 eb ce 63
%ymm2    28 b1 af f9 94 2c b6 84 73 53 ca 67 af d5 df 4a 56 3b 3e 91 c9 3f 1f c9 00 3d a9 14 4a 8c 16 25
%ymm3    5c 62 e0 09 29 9b a1 50 20 b4 1e 21 c9 ad 39 d1 0f 8a 3c 86 33 2d 5a 24 4e 3e 5c f7 32 56 c9 b8
%ymm4    1c a5 fd 39 46 d9 6b 1d 0a 39 3c ff 98 e6 dd d7 15 f2 4a 49 27 18 6c c6 64 3b 9e 4e 42 86 2c b5
%ymm5    19 5b 62 ac 6d fa 18 dd 29 fe e6 33 53 4b 91 74 4a dc 08 42 15 82 d0 e9 7a 1c 5f 75 cd 38 96 6d
%ymm6    76 75 56 67 e0 4d 08 2f 60 da 12 e1 e5 9c 80 f7 d3 2e e7 49 97 0f c1 5f b9 70 eb 45 f1 25 54 8d
%ymm7    4d ac 7d d1 79 75 95 b1 26 b3 dd b8 ad b0 8d 05 f5 d1 f6 94 28 7a 6b d8 34 66 45 74 7a 11 19 be
%ymm8    ee cf c5 4a 68 13 3e 1e ae 51 a8 ac 6b a1 45 ac 52 90 d6 d8 f6 32 74 9e 9e c4 58 b2 ae c1 ab 8f
%ymm9    72 67 7e 2a e5 2f c0 cc d9 b0 b7 8e 5c e6 4e 2d 91 56 67 d2 1e cc ef 0b 00 63 b9 e3 1b 9e 17 28
%ymm10   98 14 6a 74 8f 96 e8 d4 25 7d 7a 7d 59 6d 5b 6e 67 28 e9 ce 62 7c 89 df 7f fd 50 94 62 67 b9 82
%ymm11   c5 ee f0 d8 3b b5 24 f2 7f 92 44 74 d5 b8 77 47 30 fa 67 18 fb 63 aa d6 74 ee f7 24 93 a9 5f 6d
%ymm12   40 4e 26 a6 48 54 48 16 9d bb 39 a8 14 33 24 30 96 b3 9c d7 38 5f c3 17 1d 72 59 b6 2e b6 dd 0c
%ymm13   bc 3b 03 ff cb 34 6c a3 d0 e0 5c aa fd 48 92 f0 60 35 d1 73 13 ff bc 6b b7 ad b4 b3 8a 7e 33 e5
%ymm14   2a c3 ac 4c 21 28 ed 99 c9 86 4e 76 24 7a 28 00 87 ab b1 e5 00 a9 2f 4e 59 ba 6c de 2d aa a5 11
%ymm15   48 fc d3 1d 16 de d4 3f 6e 8d 95 88 0c 39 c9 66 68 dc a8 5b d5 d4 ac d9 e0 a5 6c 2a 67 3d 9f 32

%cf      1 
%1       1 
%pf      1 
%0       0 
%af      0 
%0       0 
%zf      0 
%sf      1 
%tf      0 
%if      1 
%df      0 
%of      0 
%iopl[0] 0 
%iopl[1] 0 
%nt      0 
%0       0 
%rf      0 
%vm      0 
%ac      0 
%vif     0 
%vip     0 
%id      0 

[ 00000007 00000000 - 00000006 ffffffe0 ]
[ 4 valid rows shown ]

00000006 fffffff8   v v v v v v v v   1e 46 19 dd e3 ef 2a 00 
00000006 fffffff0   v v v v v v v v   fe 65 dc 91 1c 0b 3a e0 
00000006 ffffffe8   v v v v v v v v   1d 78 a4 8d 36 c2 74 d6 
00000006 ffffffe0   v v v v v v v v   14 64 f1 29 26 d2 bd 99 

[ 00000000 41766068 - 00000000 41765fe0 ]
[ 3 valid rows shown ]

00000000 41766050   . . . . . . v v   00 00 00 00 00 00 00 00 
00000000 41766048   v v v v v v v v   00 00 cd 01 c7 96 6a 37 
00000000 41766040   v v v v v v . .   43 9b ea c0 84 0d 00 00 

[ 00000000 00000000 - 00000000 00000000 ]
[ 0 valid rows shown ]

0 more segment(s)


Running search (timeout is 500000 iterations):

Progress Update: 

Lowest Cost Discovered (20)                                                Lowest Known Correct Cost (24)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x2   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x3   2      OPC=movl_r32_r32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x5   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0x9   3      OPC=movq_r64_r64           movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  6     0xc   2      OPC=testl_r32_r32          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xe   2      OPC=je_label               je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x10  1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x11  1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x12  1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x13  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
  nop                       #  24    0x20  1      OPC=nop                    addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
.L_142cc0:                  #        0x21  0      OPC=<label>                movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  addl $0x4, %edx           #  25    0x21  3      OPC=addl_r32_imm8          movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl (%r15,%rdx,1), %eax  #  26    0x24  4      OPC=movl_r32_m32           testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  testl %eax, %eax          #  27    0x28  2      OPC=testl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  jne .L_142cc0             #  28    0x2a  2      OPC=jne_label              movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  movl %edx, %eax           #  29    0x2c  2      OPC=movl_r32_r32           subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32_1         sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  sarl $0x2, %eax           #  32    0x31  3      OPC=sarl_r32_imm8          nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3d  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  43    0x3e  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  44    0x3f  1      OPC=nop                    popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
.L_142ce0:                  #        0x40  0      OPC=<label>                andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
  popq %r11                 #  45    0x40  2      OPC=popq_r64_1             addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  andl $0xe0, %r11d         #  46    0x42  4      OPC=andl_r32_imm8          jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  addq %r15, %r11           #  47    0x46  3      OPC=addq_r64_r64                                                                                   
  jmpq %r11                 #  48    0x49  3      OPC=jmpq_r64             .size wcslen, .-wcslen                                                    
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (19)                                                Lowest Known Correct Cost (24)                                            
                                                                                                                                                     
  .text                                                                      .text                                                                   
  .globl wcslen                                                              .globl wcslen                                                           
  .type wcslen, @function                                                    .type wcslen, @function                                                 
                                                                                                                                                     
#! file-offset 0                                                           #! file-offset 0                                                          
#! rip-offset  0                                                           #! rip-offset  0                                                          
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                    
                                                                                                                                                     
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                  
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>             
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           movl %edi, %edi           #  1     0     2      OPC=movl_r32_r32        
  nop                       #  2     0x2   1      OPC=nop                    xorl %eax, %eax           #  2     0x2   2      OPC=xorl_r32_r32        
  movl %edi, %edi           #  3     0x3   2      OPC=movl_r32_r32           movl %edi, %edi           #  3     0x4   2      OPC=movl_r32_r32        
  movl (%r15,%rdi,1), %ecx  #  4     0x5   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  4     0x6   4      OPC=movl_r32_m32        
  movq %rdi, %rdx           #  5     0x9   3      OPC=movq_r64_r64           movq %rdi, %rdx           #  5     0xa   3      OPC=movq_r64_r64        
  testl %ecx, %ecx          #  6     0xc   2      OPC=testl_r32_r32          testl %ecx, %ecx          #  6     0xd   2      OPC=testl_r32_r32       
  je .L_142ce0              #  7     0xe   2      OPC=je_label               je .L_142ce0              #  7     0xf   2      OPC=je_label            
  nop                       #  8     0x10  1      OPC=nop                    nop                       #  8     0x11  1      OPC=nop                 
  nop                       #  9     0x11  1      OPC=nop                    nop                       #  9     0x12  1      OPC=nop                 
  nop                       #  10    0x12  1      OPC=nop                    nop                       #  10    0x13  1      OPC=nop                 
  nop                       #  11    0x13  1      OPC=nop                    nop                       #  11    0x14  1      OPC=nop                 
  nop                       #  12    0x14  1      OPC=nop                    nop                       #  12    0x15  1      OPC=nop                 
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x16  1      OPC=nop                 
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x17  1      OPC=nop                 
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x18  1      OPC=nop                 
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x19  1      OPC=nop                 
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x1a  1      OPC=nop                 
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1b  1      OPC=nop                 
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1c  1      OPC=nop                 
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1d  1      OPC=nop                 
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1e  1      OPC=nop                 
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1f  1      OPC=nop                 
  nop                       #  23    0x1f  1      OPC=nop                  .L_142cc0:                  #        0x20  0      OPC=<label>             
  nop                       #  24    0x20  1      OPC=nop                    addl $0x4, %edx           #  23    0x20  3      OPC=addl_r32_imm8       
.L_142cc0:                  #        0x21  0      OPC=<label>                movl %edx, %edx           #  24    0x23  2      OPC=movl_r32_r32        
  addl $0x4, %edx           #  25    0x21  3      OPC=addl_r32_imm8          movl (%r15,%rdx,1), %eax  #  25    0x25  4      OPC=movl_r32_m32        
  movl (%r15,%rdx,1), %eax  #  26    0x24  4      OPC=movl_r32_m32           testl %eax, %eax          #  26    0x29  2      OPC=testl_r32_r32       
  testl %eax, %eax          #  27    0x28  2      OPC=testl_r32_r32          jne .L_142cc0             #  27    0x2b  2      OPC=jne_label           
  jne .L_142cc0             #  28    0x2a  2      OPC=jne_label              movl %edx, %eax           #  28    0x2d  2      OPC=movl_r32_r32        
  movl %edx, %eax           #  29    0x2c  2      OPC=movl_r32_r32           subl %edi, %eax           #  29    0x2f  2      OPC=subl_r32_r32        
  subl %edi, %eax           #  30    0x2e  2      OPC=subl_r32_r32_1         sarl $0x2, %eax           #  30    0x31  3      OPC=sarl_r32_imm8       
  nop                       #  31    0x30  1      OPC=nop                    nop                       #  31    0x34  1      OPC=nop                 
  sarl $0x2, %eax           #  32    0x31  3      OPC=sarl_r32_imm8          nop                       #  32    0x35  1      OPC=nop                 
  nop                       #  33    0x34  1      OPC=nop                    nop                       #  33    0x36  1      OPC=nop                 
  nop                       #  34    0x35  1      OPC=nop                    nop                       #  34    0x37  1      OPC=nop                 
  nop                       #  35    0x36  1      OPC=nop                    nop                       #  35    0x38  1      OPC=nop                 
  nop                       #  36    0x37  1      OPC=nop                    nop                       #  36    0x39  1      OPC=nop                 
  nop                       #  37    0x38  1      OPC=nop                    nop                       #  37    0x3a  1      OPC=nop                 
  nop                       #  38    0x39  1      OPC=nop                    nop                       #  38    0x3b  1      OPC=nop                 
  nop                       #  39    0x3a  1      OPC=nop                    nop                       #  39    0x3c  1      OPC=nop                 
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3d  1      OPC=nop                 
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3e  1      OPC=nop                 
  nop                       #  42    0x3d  1      OPC=nop                    nop                       #  42    0x3f  1      OPC=nop                 
  nop                       #  43    0x3e  1      OPC=nop                  .L_142ce0:                  #        0x40  0      OPC=<label>             
  nop                       #  44    0x3f  1      OPC=nop                    popq %r11                 #  43    0x40  2      OPC=popq_r64_1          
  nop                       #  45    0x40  1      OPC=nop                    andl $0xe0, %r11d         #  44    0x42  4      OPC=andl_r32_imm8       
.L_142ce0:                  #        0x41  0      OPC=<label>                addq %r15, %r11           #  45    0x46  3      OPC=addq_r64_r64        
  popq %r11                 #  46    0x41  2      OPC=popq_r64_1             jmpq %r11                 #  46    0x49  3      OPC=jmpq_r64            
  andl $0xe0, %r11d         #  47    0x43  4      OPC=andl_r32_imm8                                                                                  
  addq %r15, %r11           #  48    0x47  3      OPC=addq_r64_r64         .size wcslen, .-wcslen                                                    
  jmpq %r11                 #  49    0x4a  3      OPC=jmpq_r64                                                                                       
                                                                                                                                                     
.size wcslen, .-wcslen                                                                                                                               
                                                                                                                                                     

********************************************************************************

Progress Update: 

Lowest Cost Discovered (18)                                                Lowest Known Correct Cost (18)                                             
                                                                                                                                                      
  .text                                                                      .text                                                                    
  .globl wcslen                                                              .globl wcslen                                                            
  .type wcslen, @function                                                    .type wcslen, @function                                                  
                                                                                                                                                      
#! file-offset 0                                                           #! file-offset 0                                                           
#! rip-offset  0                                                           #! rip-offset  0                                                           
#! capacity    0 bytes                                                     #! capacity    0 bytes                                                     
                                                                                                                                                      
# Text                      #  Line  RIP   Bytes  Opcode                   # Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              .wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32           xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  nop                       #  2     0x2   1      OPC=nop                    nop                       #  2     0x2   1      OPC=nop                  
  nop                       #  3     0x3   1      OPC=nop                    nop                       #  3     0x3   1      OPC=nop                  
  movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32           movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32         
  movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32           movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32         
  movq %rdi, %rdx           #  6     0xa   3      OPC=movq_r64_r64           movq %rdi, %rdx           #  6     0xa   3      OPC=movq_r64_r64         
  testl %ecx, %ecx          #  7     0xd   2      OPC=testl_r32_r32          testl %ecx, %ecx          #  7     0xd   2      OPC=testl_r32_r32        
  je .L_142ce0              #  8     0xf   2      OPC=je_label               je .L_142ce0              #  8     0xf   2      OPC=je_label             
  nop                       #  9     0x11  1      OPC=nop                    nop                       #  9     0x11  1      OPC=nop                  
  nop                       #  10    0x12  1      OPC=nop                    nop                       #  10    0x12  1      OPC=nop                  
  nop                       #  11    0x13  1      OPC=nop                    nop                       #  11    0x13  1      OPC=nop                  
  nop                       #  12    0x14  1      OPC=nop                    nop                       #  12    0x14  1      OPC=nop                  
  nop                       #  13    0x15  1      OPC=nop                    nop                       #  13    0x15  1      OPC=nop                  
  nop                       #  14    0x16  1      OPC=nop                    nop                       #  14    0x16  1      OPC=nop                  
  nop                       #  15    0x17  1      OPC=nop                    nop                       #  15    0x17  1      OPC=nop                  
  nop                       #  16    0x18  1      OPC=nop                    nop                       #  16    0x18  1      OPC=nop                  
  nop                       #  17    0x19  1      OPC=nop                    nop                       #  17    0x19  1      OPC=nop                  
  nop                       #  18    0x1a  1      OPC=nop                    nop                       #  18    0x1a  1      OPC=nop                  
  nop                       #  19    0x1b  1      OPC=nop                    nop                       #  19    0x1b  1      OPC=nop                  
  nop                       #  20    0x1c  1      OPC=nop                    nop                       #  20    0x1c  1      OPC=nop                  
  nop                       #  21    0x1d  1      OPC=nop                    nop                       #  21    0x1d  1      OPC=nop                  
  nop                       #  22    0x1e  1      OPC=nop                    nop                       #  22    0x1e  1      OPC=nop                  
  nop                       #  23    0x1f  1      OPC=nop                    nop                       #  23    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              .L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8          addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32           movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32         
  testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32          testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label              jne .L_142cc0             #  27    0x29  2      OPC=jne_label            
  movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32           movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32         
  subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32_1         subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32_1       
  nop                       #  30    0x2f  1      OPC=nop                    nop                       #  30    0x2f  1      OPC=nop                  
  sarl $0x2, %eax           #  31    0x30  3      OPC=sarl_r32_imm8          sarl $0x2, %eax           #  31    0x30  3      OPC=sarl_r32_imm8        
  nop                       #  32    0x33  1      OPC=nop                    nop                       #  32    0x33  1      OPC=nop                  
  nop                       #  33    0x34  1      OPC=nop                    nop                       #  33    0x34  1      OPC=nop                  
  nop                       #  34    0x35  1      OPC=nop                    nop                       #  34    0x35  1      OPC=nop                  
  nop                       #  35    0x36  1      OPC=nop                    nop                       #  35    0x36  1      OPC=nop                  
  nop                       #  36    0x37  1      OPC=nop                    nop                       #  36    0x37  1      OPC=nop                  
  nop                       #  37    0x38  1      OPC=nop                    nop                       #  37    0x38  1      OPC=nop                  
  nop                       #  38    0x39  1      OPC=nop                    nop                       #  38    0x39  1      OPC=nop                  
  nop                       #  39    0x3a  1      OPC=nop                    nop                       #  39    0x3a  1      OPC=nop                  
  nop                       #  40    0x3b  1      OPC=nop                    nop                       #  40    0x3b  1      OPC=nop                  
  nop                       #  41    0x3c  1      OPC=nop                    nop                       #  41    0x3c  1      OPC=nop                  
  nop                       #  42    0x3d  1      OPC=nop                    nop                       #  42    0x3d  1      OPC=nop                  
  nop                       #  43    0x3e  1      OPC=nop                    nop                       #  43    0x3e  1      OPC=nop                  
  nop                       #  44    0x3f  1      OPC=nop                    nop                       #  44    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              .L_142ce0:                  #        0x40  0      OPC=<label>              
  popq %r11                 #  45    0x40  2      OPC=popq_r64_1             popq %r11                 #  45    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  46    0x42  4      OPC=andl_r32_imm8          andl $0xe0, %r11d         #  46    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  47    0x46  3      OPC=addq_r64_r64           addq %r15, %r11           #  47    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                 #  48    0x49  3      OPC=jmpq_r64               jmpq %r11                 #  48    0x49  3      OPC=jmpq_r64             
                                                                                                                                                      
.size wcslen, .-wcslen                                                     .size wcslen, .-wcslen                                                     
                                                                                                                                                      

********************************************************************************

Statistics Update: 

Iterations:                    100000
Elapsed Time:                  55.8036s
Iterations/s:                  1792

Starting cost:                 24
Lowest cost:                   18
Lowest correct cost:           18

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.357%       4.29%         1.586%       
Opcode          8.354%       7.273%        6.477%       
Local Swap      8.244%       4.901%        4.129%       
Global Swap     8.345%       5.901%        4.314%       
Global Copy     8.276%       6.782%        6.782%       
Rotate          8.334%       6.28%         3.515%       
ReplaceNop      8.272%       7.048%        5.921%       
Delete          8.29%        7.056%        4.326%       
Instruction     8.271%       4.952%        0.696%       
Add Nops        8.315%       8.315%        3.798%       
OpcodeWidth     8.447%       6.543%        6.039%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.495%       1.429%        0.003%       
                                                        
Total           100%         70.77%        47.586%      

********************************************************************************

Statistics Update: 

Iterations:                    200000
Elapsed Time:                  101.798s
Iterations/s:                  1964.67

Starting cost:                 24
Lowest cost:                   18
Lowest correct cost:           18

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.4015%      4.192%        1.4985%      
Opcode          8.304%       7.2315%       6.4725%      
Local Swap      8.301%       5.1045%       4.3385%      
Global Swap     8.3575%      6.0225%       4.5255%      
Global Copy     8.3235%      6.82%         6.82%        
Rotate          8.331%       6.367%        3.6545%      
ReplaceNop      8.2565%      7.1495%       6.073%       
Delete          8.3045%      7.145%        4.4605%      
Instruction     8.307%       4.798%        0.6305%      
Add Nops        8.37%        8.37%         3.951%       
OpcodeWidth     8.3695%      6.59%         6.134%       
2xWeighted      0%           0%            0%           
Memory+Swap     8.374%       1.5645%       0.002%       
                                                        
Total           100%         71.3545%      48.5605%     

********************************************************************************

Statistics Update: 

Iterations:                    300000
Elapsed Time:                  166.069s
Iterations/s:                  1806.48

Starting cost:                 24
Lowest cost:                   18
Lowest correct cost:           18

Move Type       Proposed     Succeeded     Accepted        
                                                           
Operand         8.37467%     4.409%        1.73967%        
Opcode          8.33367%     7.417%        6.76567%        
Local Swap      8.33167%     5.28033%      4.58133%        
Global Swap     8.343%       6.319%        4.96533%        
Global Copy     8.35767%     7.034%        7.034%          
Rotate          8.349%       6.64033%      4.03133%        
ReplaceNop      8.28233%     7.31267%      6.37567%        
Delete          8.353%       7.336%        4.86633%        
Instruction     8.29067%     4.73867%      0.644667%       
Add Nops        8.34267%     8.34267%      4.34167%        
OpcodeWidth     8.327%       6.77933%      6.37067%        
2xWeighted      0%           0%            0%              
Memory+Swap     8.31467%     1.68167%      0.00133333%     
                                                           
Total           100%         73.2907%      51.7177%        

********************************************************************************

Statistics Update: 

Iterations:                    400000
Elapsed Time:                  244.855s
Iterations/s:                  1633.62

Starting cost:                 24
Lowest cost:                   18
Lowest correct cost:           18

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.31075%     4.52525%      1.91575%     
Opcode          8.33625%     7.54725%      6.97725%     
Local Swap      8.29725%     5.38675%      4.7285%      
Global Swap     8.36825%     6.59175%      5.37125%     
Global Copy     8.3485%      7.2045%       7.2045%      
Rotate          8.333%       6.849%        4.37675%     
ReplaceNop      8.2995%      7.44525%      6.642%       
Delete          8.39875%     7.51775%      5.25975%     
Instruction     8.2815%      4.69925%      0.65025%     
Add Nops        8.3655%      8.3655%       4.708%       
OpcodeWidth     8.32825%     6.9665%       6.60475%     
2xWeighted      0%           0%            0%           
Memory+Swap     8.3325%      1.73475%      0.001%       
                                                        
Total           100%         74.8335%      54.4397%     

********************************************************************************

Statistics Update: 

Iterations:                    500000
Elapsed Time:                  323.759s
Iterations/s:                  1544.36

Starting cost:                 24
Lowest cost:                   18
Lowest correct cost:           18

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.303%       4.6232%       2.0506%      
Opcode          8.3876%      7.6734%       7.1408%      
Local Swap      8.2914%      5.425%        4.7788%      
Global Swap     8.3682%      6.7438%       5.596%       
Global Copy     8.3664%      7.329%        7.329%       
Rotate          8.3298%      6.9758%       4.5772%      
ReplaceNop      8.3338%      7.5504%       6.823%       
Delete          8.3712%      7.5686%       5.441%       
Instruction     8.2788%      4.7082%       0.675%       
Add Nops        8.3296%      8.3296%       4.8782%      
OpcodeWidth     8.3104%      7.0642%       6.7186%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3298%      1.7456%       0.0008%      
                                                        
Total           100%         75.7368%      56.009%      

********************************************************************************

TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
Total accesses: 2
SAME MAP
     0 1 
------------------
0  |   1 
1  |     

NEXT MAP
     0 1 
------------------
0  |   0 
1  |     

TOTAL CELLS: 1
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
ALIASING CASES: 1
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
nop 
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
negb %dh
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   1 0 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
nop 
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
negb %dh
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   1 0 0 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 4 (cell size 4)
Access 2 cell 1 offset 0 size 4 (cell size 4)
Access 3 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
Total accesses: 3
SAME MAP
     0 1 2 
------------------
0  |   0 1 
1  |     0 
2  |       

NEXT MAP
     0 1 2 
------------------
0  |   0 0 
1  |     0 
2  |       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
nop 
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
negb %dh
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 1 0 
1  |     0 1 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
nop 
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
negb %dh
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 1 0 0 
1  |     0 1 0 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 4 (cell size 4)
Access 4 cell 2 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
.L_142ce0:
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 0 1 
1  |     0 0 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
nop 
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
negb %dh
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 0 1 0 
1  |     0 0 1 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 4 (cell size 4)
TARGET: 
.wcslen:
movl %edi, %edi
xorl %eax, %eax
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl %edx, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
REWRITE: 
.wcslen:
xorl %eax, %eax
nop 
nop 
movl %edi, %edi
movl (%r15,%rdi,1), %ecx
movq %rdi, %rdx
testl %ecx, %ecx
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
.L_142cc0:
addl $0x4, %edx
movl (%r15,%rdx,1), %eax
testl %eax, %eax
nop 
movl %edx, %eax
subl %edi, %eax
nop 
sarl $0x2, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
negb %dh
nop 
nop 
nop 
nop 
.L_142ce0:
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 1 0 0 
1  |     0 0 1 0 
2  |       0 0 1 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 0 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 1 offset 0 size 4 (cell size 4)
Access 2 cell 2 offset 0 size 4 (cell size 4)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 4 (cell size 4)
Access 5 cell 2 offset 0 size 4 (cell size 4)
################################################################################

Final update:

Total search iterations:       3500000
Number of attempted searches:  7
Total search time:             4667.44s
Total time:                    4681.88s

Statistics of last search

Iterations:                    500000
Elapsed Time:                  323.759s
Iterations/s:                  1544.36

Starting cost:                 24
Lowest cost:                   18
Lowest correct cost:           18

Move Type       Proposed     Succeeded     Accepted     
                                                        
Operand         8.303%       4.6232%       2.0506%      
Opcode          8.3876%      7.6734%       7.1408%      
Local Swap      8.2914%      5.425%        4.7788%      
Global Swap     8.3682%      6.7438%       5.596%       
Global Copy     8.3664%      7.329%        7.329%       
Rotate          8.3298%      6.9758%       4.5772%      
ReplaceNop      8.3338%      7.5504%       6.823%       
Delete          8.3712%      7.5686%       5.441%       
Instruction     8.2788%      4.7082%       0.675%       
Add Nops        8.3296%      8.3296%       4.8782%      
OpcodeWidth     8.3104%      7.0642%       6.7186%      
2xWeighted      0%           0%            0%           
Memory+Swap     8.3298%      1.7456%       0.0008%      
                                                        
Total           100%         75.7368%      56.009%      

Lowest Cost Discovered (18)                                                
                                                                           
  .text                                                                    
  .globl wcslen                                                            
  .type wcslen, @function                                                  
                                                                           
#! file-offset 0                                                           
#! rip-offset  0                                                           
#! capacity    0 bytes                                                     
                                                                           
# Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  nop                       #  2     0x2   1      OPC=nop                  
  nop                       #  3     0x3   1      OPC=nop                  
  movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32         
  movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32         
  movq %rdi, %rdx           #  6     0xa   3      OPC=movq_r64_r64         
  testl %ecx, %ecx          #  7     0xd   2      OPC=testl_r32_r32        
  je .L_142ce0              #  8     0xf   2      OPC=je_label             
  nop                       #  9     0x11  1      OPC=nop                  
  nop                       #  10    0x12  1      OPC=nop                  
  nop                       #  11    0x13  1      OPC=nop                  
  nop                       #  12    0x14  1      OPC=nop                  
  nop                       #  13    0x15  1      OPC=nop                  
  nop                       #  14    0x16  1      OPC=nop                  
  nop                       #  15    0x17  1      OPC=nop                  
  nop                       #  16    0x18  1      OPC=nop                  
  nop                       #  17    0x19  1      OPC=nop                  
  nop                       #  18    0x1a  1      OPC=nop                  
  nop                       #  19    0x1b  1      OPC=nop                  
  nop                       #  20    0x1c  1      OPC=nop                  
  nop                       #  21    0x1d  1      OPC=nop                  
  nop                       #  22    0x1e  1      OPC=nop                  
  nop                       #  23    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32         
  testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label            
  movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32         
  subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32_1       
  nop                       #  30    0x2f  1      OPC=nop                  
  sarl $0x2, %eax           #  31    0x30  3      OPC=sarl_r32_imm8        
  nop                       #  32    0x33  1      OPC=nop                  
  nop                       #  33    0x34  1      OPC=nop                  
  nop                       #  34    0x35  1      OPC=nop                  
  nop                       #  35    0x36  1      OPC=nop                  
  nop                       #  36    0x37  1      OPC=nop                  
  nop                       #  37    0x38  1      OPC=nop                  
  nop                       #  38    0x39  1      OPC=nop                  
  nop                       #  39    0x3a  1      OPC=nop                  
  nop                       #  40    0x3b  1      OPC=nop                  
  nop                       #  41    0x3c  1      OPC=nop                  
  nop                       #  42    0x3d  1      OPC=nop                  
  nop                       #  43    0x3e  1      OPC=nop                  
  nop                       #  44    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              
  popq %r11                 #  45    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  46    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  47    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                 #  48    0x49  3      OPC=jmpq_r64             
                                                                           
.size wcslen, .-wcslen                                                     
Lowest Known Correct Cost (18)                                             
                                                                           
  .text                                                                    
  .globl wcslen                                                            
  .type wcslen, @function                                                  
                                                                           
#! file-offset 0                                                           
#! rip-offset  0                                                           
#! capacity    0 bytes                                                     
                                                                           
# Text                      #  Line  RIP   Bytes  Opcode                   
.wcslen:                    #        0     0      OPC=<label>              
  xorl %eax, %eax           #  1     0     2      OPC=xorl_r32_r32         
  nop                       #  2     0x2   1      OPC=nop                  
  nop                       #  3     0x3   1      OPC=nop                  
  movl %edi, %edi           #  4     0x4   2      OPC=movl_r32_r32         
  movl (%r15,%rdi,1), %ecx  #  5     0x6   4      OPC=movl_r32_m32         
  movq %rdi, %rdx           #  6     0xa   3      OPC=movq_r64_r64         
  testl %ecx, %ecx          #  7     0xd   2      OPC=testl_r32_r32        
  je .L_142ce0              #  8     0xf   2      OPC=je_label             
  nop                       #  9     0x11  1      OPC=nop                  
  nop                       #  10    0x12  1      OPC=nop                  
  nop                       #  11    0x13  1      OPC=nop                  
  nop                       #  12    0x14  1      OPC=nop                  
  nop                       #  13    0x15  1      OPC=nop                  
  nop                       #  14    0x16  1      OPC=nop                  
  nop                       #  15    0x17  1      OPC=nop                  
  nop                       #  16    0x18  1      OPC=nop                  
  nop                       #  17    0x19  1      OPC=nop                  
  nop                       #  18    0x1a  1      OPC=nop                  
  nop                       #  19    0x1b  1      OPC=nop                  
  nop                       #  20    0x1c  1      OPC=nop                  
  nop                       #  21    0x1d  1      OPC=nop                  
  nop                       #  22    0x1e  1      OPC=nop                  
  nop                       #  23    0x1f  1      OPC=nop                  
.L_142cc0:                  #        0x20  0      OPC=<label>              
  addl $0x4, %edx           #  24    0x20  3      OPC=addl_r32_imm8        
  movl (%r15,%rdx,1), %eax  #  25    0x23  4      OPC=movl_r32_m32         
  testl %eax, %eax          #  26    0x27  2      OPC=testl_r32_r32        
  jne .L_142cc0             #  27    0x29  2      OPC=jne_label            
  movl %edx, %eax           #  28    0x2b  2      OPC=movl_r32_r32         
  subl %edi, %eax           #  29    0x2d  2      OPC=subl_r32_r32_1       
  nop                       #  30    0x2f  1      OPC=nop                  
  sarl $0x2, %eax           #  31    0x30  3      OPC=sarl_r32_imm8        
  nop                       #  32    0x33  1      OPC=nop                  
  nop                       #  33    0x34  1      OPC=nop                  
  nop                       #  34    0x35  1      OPC=nop                  
  nop                       #  35    0x36  1      OPC=nop                  
  nop                       #  36    0x37  1      OPC=nop                  
  nop                       #  37    0x38  1      OPC=nop                  
  nop                       #  38    0x39  1      OPC=nop                  
  nop                       #  39    0x3a  1      OPC=nop                  
  nop                       #  40    0x3b  1      OPC=nop                  
  nop                       #  41    0x3c  1      OPC=nop                  
  nop                       #  42    0x3d  1      OPC=nop                  
  nop                       #  43    0x3e  1      OPC=nop                  
  nop                       #  44    0x3f  1      OPC=nop                  
.L_142ce0:                  #        0x40  0      OPC=<label>              
  popq %r11                 #  45    0x40  2      OPC=popq_r64_1           
  andl $0xe0, %r11d         #  46    0x42  4      OPC=andl_r32_imm8        
  addq %r15, %r11           #  47    0x46  3      OPC=addq_r64_r64         
  jmpq %r11                 #  48    0x49  3      OPC=jmpq_r64             
                                                                           
.size wcslen, .-wcslen                                                     
                                                                           

################################################################################

Search terminated successfully with a verified rewrite!
