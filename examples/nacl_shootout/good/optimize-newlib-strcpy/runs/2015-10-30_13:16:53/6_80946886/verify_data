time stoke debug verify --config verify.conf
Computing reference outputs for 0 testcases
Computing reference outputs for 0 testcases
Target                       Rewrite                          
                                                              
.strcpy:                     .strcpy:                         
movl %esi, %esi              nop                              
movl %edi, %eax              movl %edi, %ecx                  
movl %esi, %edi              movl %edi, %eax                  
movq %rsi, %rdx              nop                              
movq %rax, %rcx              nop                              
orl %eax, %edi               nop                              
andl $0x3, %edi              nop                              
jne .L_126860                nop                              
movl %esi, %esi              nop                              
movl (%r15,%rsi,1), %r8d     nop                              
movl %r8d, %esi              nop                              
leal -0x1010101(%r8), %edi   movq %rsi, %rdx                  
notl %esi                    nop                              
andl %edi, %esi              nop                              
andl $0x80808080, %esi       nop                              
jne .L_126860                nop                              
nop                          addl %edx, %edi                  
nop                          salb $0x7, %dil                  
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
.L_126820:                   jne .L_126860                    
addl $0x4, %edx              movl %edx, %esi                  
movl %ecx, %ecx              movl (%r15,%rsi,1), %r8d         
movl %r8d, (%r15,%rcx,1)     nop                              
addl $0x4, %ecx              nop                              
movl %edx, %edx              nop                              
movl (%r15,%rdx,1), %r8d     nop                              
movl %r8d, %r9d              nop                              
leal -0x1010101(%r8), %esi   nop                              
notl %r9d                    nop                              
nop                          nop                              
andl %esi, %r9d              shrb %cl, %dl                    
andl $0x80808080, %r9d       nop                              
je .L_126820                 nop                              
nop                          nop                              
nop                          jne .L_126860                    
nop                          .L_126820:                       
nop                          addl $0x4, %ecx                  
nop                          movq %r8, -0x4(%r15,%rcx,1)      
nop                          addl $0x4, %edx                  
nop                          movq (%r15,%rdx,1), %r8          
nop                          movl %r8d, %r9d                  
nop                          leaq -0x1010101(%r8), %rsi       
nop                          negl %r9d                        
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          andq $0x80808080, %r9            
nop                          andq %rsi, %r9                   
.L_126860:                   je .L_126820                     
movl %edx, %edx              nop                              
movzbl (%r15,%rdx,1), %esi   nop                              
addl $0x1, %edx              nop                              
movl %ecx, %ecx              nop                              
movb %sil, (%r15,%rcx,1)     nop                              
addl $0x1, %ecx              nop                              
testb %sil, %sil             nop                              
jne .L_126860                nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
retq                         .L_126860:                       
nop                          addl $0x1, %edx                  
nop                          movsbq -0x1(%r15,%rdx,1), %rsi   
nop                          addl $0x1, %ecx                  
nop                          movb %sil, -0x1(%r15,%rcx,1)     
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
nop                          nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             shlq $0x6, %rsi                  
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             jne .L_126860                    
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             nop                              
                             retq                             
                                                              
===========================================
Working on pair / P: 1 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 1 0 
1  |     0 1 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 1)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 0 offset 0 size 1 (cell size 1)
Access 3 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 1 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
29 -> 0 (size 1 / cell size 1 / offset 0
31 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_8_4|8> <TMP_BV_8_6|8>)) (== <TMP_BV_8_5|8> <TMP_BV_8_7|8>))

CONSTRAINTS

(not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_8_6|8>)) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_4|8>))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_4|8>))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_8_4|8> <TMP_BV_8_6|8>)) (== <TMP_BV_8_5|8> <TMP_BV_8_7|8>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 1 0 0 
1  |     0 0 1 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 2 offset 0 size 1 (cell size 1)
Access 4 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 2 (size 1 / cell size 1 / offset 0
46 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_13|32> <TMP_BV_32_15|32>)) (== <TMP_BV_8_14|8> <TMP_BV_8_17|8>)) (== <TMP_BV_8_18|8> <TMP_BV_8_16|8>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_8_16|8>)) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_13|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_13|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_13|32> <TMP_BV_32_15|32>)) (== <TMP_BV_8_14|8> <TMP_BV_8_17|8>)) (== <TMP_BV_8_18|8> <TMP_BV_8_16|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 1 0 0 0 
1  |     0 1 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 1 0 
1  |     0 0 0 1 
2  |       0 1 0 
3  |         0 1 
4  |           0 
5  |             

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 0 size 1 (cell size 2)
Access 3 cell 1 offset 0 size 1 (cell size 2)
Access 4 cell 0 offset 1 size 1 (cell size 2)
Access 5 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
29 -> 0 (size 1 / cell size 2 / offset 0
31 -> 1 (size 1 / cell size 2 / offset 0
67 -> 0 (size 1 / cell size 2 / offset 1
69 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_16_25|16> <TMP_BV_16_27|16>)) (== <TMP_BV_16_26|16> <TMP_BV_16_28|16>))

CONSTRAINTS

(not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_27|16>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_27|16>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_25|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_25|16>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_16_25|16> <TMP_BV_16_27|16>)) (== <TMP_BV_16_26|16> <TMP_BV_16_28|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 0 0 0 0 
1  |     0 0 1 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 0 1 
2  |       0 0 0 0 
3  |         0 1 0 
4  |           0 1 
5  |             0 
6  |               

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 2 offset 0 size 1 (cell size 2)
Access 4 cell 1 offset 0 size 1 (cell size 2)
Access 5 cell 2 offset 1 size 1 (cell size 2)
Access 6 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 2 (size 1 / cell size 2 / offset 0
46 -> 1 (size 1 / cell size 2 / offset 0
82 -> 2 (size 1 / cell size 2 / offset 1
84 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_36|32> <TMP_BV_32_38|32>)) (== <TMP_BV_16_37|16> <TMP_BV_16_40|16>)) (== <TMP_BV_16_41|16> <TMP_BV_16_39|16>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_39|16>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_39|16>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_36|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_36|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_36|32> <TMP_BV_32_38|32>)) (== <TMP_BV_16_37|16> <TMP_BV_16_40|16>)) (== <TMP_BV_16_41|16> <TMP_BV_16_39|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 0 0 0 0 
1  |     0 1 0 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           1 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 8)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 8 (cell size 8)
Access 4 cell 2 offset 0 size 8 (cell size 8)
Access 5 cell 2 offset 0 size 1 (cell size 8)
Access 6 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 8 / offset 0
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 1 (size 8 / cell size 8 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
72 -> 2 (size 1 / cell size 8 / offset 0
74 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_48|32> <TMP_BV_32_50|32>)) (== <TMP_BV_64_49|64> <TMP_BV_64_51|64>)) (== <TMP_BV_64_54|64> <TMP_BV_64_52|64>)) (== <TMP_BV_8_55|8> <TMP_BV_8_53|8>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_52|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_52|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_52|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_48|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_48|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_48|32> <TMP_BV_32_50|32>)) (== <TMP_BV_64_49|64> <TMP_BV_64_51|64>)) (== <TMP_BV_64_54|64> <TMP_BV_64_52|64>)) (== <TMP_BV_8_55|8> <TMP_BV_8_53|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           1 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 1 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 8)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 8 (cell size 8)
Access 4 cell 2 offset 0 size 8 (cell size 8)
Access 5 cell 2 offset 0 size 1 (cell size 8)
Access 6 cell 3 offset 0 size 1 (cell size 2)
Access 7 cell 2 offset 1 size 1 (cell size 8)
Access 8 cell 3 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 8 / offset 0
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 1 (size 8 / cell size 8 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
72 -> 2 (size 1 / cell size 8 / offset 0
74 -> 3 (size 1 / cell size 2 / offset 0
110 -> 2 (size 1 / cell size 8 / offset 1
112 -> 3 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_64|32> <TMP_BV_32_66|32>)) (== <TMP_BV_64_65|64> <TMP_BV_64_67|64>)) (== <TMP_BV_64_70|64> <TMP_BV_64_68|64>)) (== <TMP_BV_16_71|16> <TMP_BV_16_69|16>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_68|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_68|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_68|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_68|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_64|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_64|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_64|32> <TMP_BV_32_66|32>)) (== <TMP_BV_64_65|64> <TMP_BV_64_67|64>)) (== <TMP_BV_64_70|64> <TMP_BV_64_68|64>)) (== <TMP_BV_16_71|16> <TMP_BV_16_69|16>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               1 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 1 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 9)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 8 (cell size 9)
Access 4 cell 2 offset 0 size 8 (cell size 8)
Access 5 cell 3 offset 0 size 8 (cell size 8)
Access 6 cell 4 offset 0 size 8 (cell size 8)
Access 7 cell 4 offset 0 size 1 (cell size 8)
Access 8 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 9 / offset 0
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 1 (size 8 / cell size 9 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
59 -> 3 (size 8 / cell size 8 / offset 0
61 -> 4 (size 8 / cell size 8 / offset 0
87 -> 4 (size 1 / cell size 8 / offset 0
89 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_32_79|32> <TMP_BV_32_81|32>)) (== <TMP_BV_72_80|72> <TMP_BV_72_82|72>)) (== <TMP_BV_64_86|64> <TMP_BV_64_83|64>)) (== <TMP_BV_64_87|64> <TMP_BV_64_84|64>)) (== <TMP_BV_64_88|64> <TMP_BV_64_85|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_83|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_83|64>)[63:0]) <0x0|64>)
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_85|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_85|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_85|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_79|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_79|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_32_79|32> <TMP_BV_32_81|32>)) (== <TMP_BV_72_80|72> <TMP_BV_72_82|72>)) (== <TMP_BV_64_86|64> <TMP_BV_64_83|64>)) (== <TMP_BV_64_87|64> <TMP_BV_64_84|64>)) (== <TMP_BV_64_88|64> <TMP_BV_64_85|64>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               1 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 1 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 1 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 10)
Access 2 cell 0 offset 0 size 4 (cell size 4)
Access 3 cell 1 offset 0 size 8 (cell size 10)
Access 4 cell 2 offset 0 size 8 (cell size 8)
Access 5 cell 3 offset 0 size 8 (cell size 8)
Access 6 cell 4 offset 0 size 8 (cell size 8)
Access 7 cell 4 offset 0 size 1 (cell size 8)
Access 8 cell 1 offset 8 size 1 (cell size 10)
Access 9 cell 4 offset 1 size 1 (cell size 8)
Access 10 cell 1 offset 9 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 10 / offset 0
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 1 (size 8 / cell size 10 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
59 -> 3 (size 8 / cell size 8 / offset 0
61 -> 4 (size 8 / cell size 8 / offset 0
87 -> 4 (size 1 / cell size 8 / offset 0
89 -> 1 (size 1 / cell size 10 / offset 8
125 -> 4 (size 1 / cell size 8 / offset 1
127 -> 1 (size 1 / cell size 10 / offset 9
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_32_98|32> <TMP_BV_32_100|32>)) (== <TMP_BV_80_99|80> <TMP_BV_80_101|80>)) (== <TMP_BV_64_105|64> <TMP_BV_64_102|64>)) (== <TMP_BV_64_106|64> <TMP_BV_64_103|64>)) (== <TMP_BV_64_107|64> <TMP_BV_64_104|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_102|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_102|64>)[63:0]) <0x0|64>)
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_104|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_104|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_104|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_104|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_98|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_98|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_32_98|32> <TMP_BV_32_100|32>)) (== <TMP_BV_80_99|80> <TMP_BV_80_101|80>)) (== <TMP_BV_64_105|64> <TMP_BV_64_102|64>)) (== <TMP_BV_64_106|64> <TMP_BV_64_103|64>)) (== <TMP_BV_64_107|64> <TMP_BV_64_104|64>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   1 0 1 0 
1  |     0 1 0 
2  |       0 1 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
29 -> 0 (size 1 / cell size 4 / offset 0
31 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_32_113|32> <TMP_BV_32_115|32>)) (== <TMP_BV_8_114|8> <TMP_BV_8_116|8>))

CONSTRAINTS

(not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_32_115|32>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_113|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_113|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_113|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_113|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_113|32> <TMP_BV_32_115|32>)) (== <TMP_BV_8_114|8> <TMP_BV_8_116|8>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   1 0 1 0 0 
1  |     0 1 0 0 
2  |       0 0 1 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 0 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 2 offset 0 size 1 (cell size 1)
Access 5 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 2 (size 1 / cell size 1 / offset 0
46 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_123|32> <TMP_BV_32_125|32>)) (== <TMP_BV_8_124|8> <TMP_BV_8_127|8>)) (== <TMP_BV_8_128|8> <TMP_BV_8_126|8>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_8_126|8>)) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_123|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_123|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_123|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_123|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_123|32> <TMP_BV_32_125|32>)) (== <TMP_BV_8_124|8> <TMP_BV_8_127|8>)) (== <TMP_BV_8_128|8> <TMP_BV_8_126|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   1 0 1 0 0 0 
1  |     0 1 0 0 0 
2  |       0 1 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 1 0 
2  |       0 0 0 1 
3  |         0 1 0 
4  |           0 1 
5  |             0 
6  |               

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 0 size 1 (cell size 4)
Access 4 cell 1 offset 0 size 1 (cell size 2)
Access 5 cell 0 offset 1 size 1 (cell size 4)
Access 6 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
29 -> 0 (size 1 / cell size 4 / offset 0
31 -> 1 (size 1 / cell size 2 / offset 0
67 -> 0 (size 1 / cell size 4 / offset 1
69 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_32_136|32> <TMP_BV_32_138|32>)) (== <TMP_BV_16_137|16> <TMP_BV_16_139|16>))

CONSTRAINTS

(not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_32_138|32>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_32_138|32>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_136|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_136|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_136|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_136|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_136|32> <TMP_BV_32_138|32>)) (== <TMP_BV_16_137|16> <TMP_BV_16_139|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   1 0 1 0 0 0 0 
1  |     0 1 0 0 0 0 
2  |       0 0 1 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 
2  |       0 0 0 0 1 
3  |         0 0 0 0 
4  |           0 1 0 
5  |             0 1 
6  |               0 
7  |                 

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 2 offset 0 size 1 (cell size 2)
Access 5 cell 1 offset 0 size 1 (cell size 2)
Access 6 cell 2 offset 1 size 1 (cell size 2)
Access 7 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 2 (size 1 / cell size 2 / offset 0
46 -> 1 (size 1 / cell size 2 / offset 0
82 -> 2 (size 1 / cell size 2 / offset 1
84 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_148|32> <TMP_BV_32_150|32>)) (== <TMP_BV_16_149|16> <TMP_BV_16_152|16>)) (== <TMP_BV_16_153|16> <TMP_BV_16_151|16>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_151|16>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_151|16>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_148|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_148|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_148|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_148|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_148|32> <TMP_BV_32_150|32>)) (== <TMP_BV_16_149|16> <TMP_BV_16_152|16>)) (== <TMP_BV_16_153|16> <TMP_BV_16_151|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   1 0 1 0 0 0 0 
1  |     0 1 0 0 0 0 
2  |       0 1 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             1 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 8)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 8 (cell size 8)
Access 5 cell 2 offset 0 size 8 (cell size 8)
Access 6 cell 2 offset 0 size 1 (cell size 8)
Access 7 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 8 / offset 0
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 1 (size 8 / cell size 8 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
72 -> 2 (size 1 / cell size 8 / offset 0
74 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_161|32> <TMP_BV_32_163|32>)) (== <TMP_BV_64_162|64> <TMP_BV_64_164|64>)) (== <TMP_BV_64_167|64> <TMP_BV_64_165|64>)) (== <TMP_BV_8_168|8> <TMP_BV_8_166|8>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_165|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_165|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_165|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_161|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_161|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_161|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_161|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_161|32> <TMP_BV_32_163|32>)) (== <TMP_BV_64_162|64> <TMP_BV_64_164|64>)) (== <TMP_BV_64_167|64> <TMP_BV_64_165|64>)) (== <TMP_BV_8_168|8> <TMP_BV_8_166|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   1 0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             1 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 1 0 
7  |                 0 1 
8  |                   0 
9  |                     

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 8)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 8 (cell size 8)
Access 5 cell 2 offset 0 size 8 (cell size 8)
Access 6 cell 2 offset 0 size 1 (cell size 8)
Access 7 cell 3 offset 0 size 1 (cell size 2)
Access 8 cell 2 offset 1 size 1 (cell size 8)
Access 9 cell 3 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 8 / offset 0
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 1 (size 8 / cell size 8 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
72 -> 2 (size 1 / cell size 8 / offset 0
74 -> 3 (size 1 / cell size 2 / offset 0
110 -> 2 (size 1 / cell size 8 / offset 1
112 -> 3 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_178|32> <TMP_BV_32_180|32>)) (== <TMP_BV_64_179|64> <TMP_BV_64_181|64>)) (== <TMP_BV_64_184|64> <TMP_BV_64_182|64>)) (== <TMP_BV_16_185|16> <TMP_BV_16_183|16>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_182|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_182|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_182|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_182|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_178|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_178|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_178|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_178|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_178|32> <TMP_BV_32_180|32>)) (== <TMP_BV_64_179|64> <TMP_BV_64_181|64>)) (== <TMP_BV_64_184|64> <TMP_BV_64_182|64>)) (== <TMP_BV_16_185|16> <TMP_BV_16_183|16>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   1 0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 1 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 1 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 9)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 8 (cell size 9)
Access 5 cell 2 offset 0 size 8 (cell size 8)
Access 6 cell 3 offset 0 size 8 (cell size 8)
Access 7 cell 4 offset 0 size 8 (cell size 8)
Access 8 cell 4 offset 0 size 1 (cell size 8)
Access 9 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 9 / offset 0
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 1 (size 8 / cell size 9 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
59 -> 3 (size 8 / cell size 8 / offset 0
61 -> 4 (size 8 / cell size 8 / offset 0
87 -> 4 (size 1 / cell size 8 / offset 0
89 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_32_194|32> <TMP_BV_32_196|32>)) (== <TMP_BV_72_195|72> <TMP_BV_72_197|72>)) (== <TMP_BV_64_201|64> <TMP_BV_64_198|64>)) (== <TMP_BV_64_202|64> <TMP_BV_64_199|64>)) (== <TMP_BV_64_203|64> <TMP_BV_64_200|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_198|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_198|64>)[63:0]) <0x0|64>)
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_200|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_200|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_200|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_194|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_194|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_194|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_194|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_32_194|32> <TMP_BV_32_196|32>)) (== <TMP_BV_72_195|72> <TMP_BV_72_197|72>)) (== <TMP_BV_64_201|64> <TMP_BV_64_198|64>)) (== <TMP_BV_64_202|64> <TMP_BV_64_199|64>)) (== <TMP_BV_64_203|64> <TMP_BV_64_200|64>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   1 0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 1 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 1 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 1 0 
9  |                     0 1 
10 |                       0 
11 |                         

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 10)
Access 3 cell 0 offset 0 size 4 (cell size 4)
Access 4 cell 1 offset 0 size 8 (cell size 10)
Access 5 cell 2 offset 0 size 8 (cell size 8)
Access 6 cell 3 offset 0 size 8 (cell size 8)
Access 7 cell 4 offset 0 size 8 (cell size 8)
Access 8 cell 4 offset 0 size 1 (cell size 8)
Access 9 cell 1 offset 8 size 1 (cell size 10)
Access 10 cell 4 offset 1 size 1 (cell size 8)
Access 11 cell 1 offset 9 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 10 / offset 0
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 1 (size 8 / cell size 10 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
59 -> 3 (size 8 / cell size 8 / offset 0
61 -> 4 (size 8 / cell size 8 / offset 0
87 -> 4 (size 1 / cell size 8 / offset 0
89 -> 1 (size 1 / cell size 10 / offset 8
125 -> 4 (size 1 / cell size 8 / offset 1
127 -> 1 (size 1 / cell size 10 / offset 9
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_32_214|32> <TMP_BV_32_216|32>)) (== <TMP_BV_80_215|80> <TMP_BV_80_217|80>)) (== <TMP_BV_64_221|64> <TMP_BV_64_218|64>)) (== <TMP_BV_64_222|64> <TMP_BV_64_219|64>)) (== <TMP_BV_64_223|64> <TMP_BV_64_220|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_218|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_218|64>)[63:0]) <0x0|64>)
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_220|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_220|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_220|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_220|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_214|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_214|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_214|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_214|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_32_214|32> <TMP_BV_32_216|32>)) (== <TMP_BV_80_215|80> <TMP_BV_80_217|80>)) (== <TMP_BV_64_221|64> <TMP_BV_64_218|64>)) (== <TMP_BV_64_222|64> <TMP_BV_64_219|64>)) (== <TMP_BV_64_223|64> <TMP_BV_64_220|64>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 1 0 
1  |     0 0 0 1 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 1 0 0 0 
1  |     0 1 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 1 (cell size 2)
Access 5 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
29 -> 0 (size 1 / cell size 2 / offset 0
31 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_16_230|16> <TMP_BV_16_232|16>)) (== <TMP_BV_16_231|16> <TMP_BV_16_233|16>))

CONSTRAINTS

(not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_232|16>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_230|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_230|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_230|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_230|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_16_230|16> <TMP_BV_16_232|16>)) (== <TMP_BV_16_231|16> <TMP_BV_16_233|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 1 0 0 
1  |     0 0 0 0 1 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 0 0 0 0 
1  |     0 1 0 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 4)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 4 (cell size 4)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 4 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 2 (size 1 / cell size 1 / offset 0
46 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_241|32> <TMP_BV_32_243|32>)) (== <TMP_BV_16_242|16> <TMP_BV_16_245|16>)) (== <TMP_BV_8_246|8> <TMP_BV_8_244|8>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_8_244|8>)) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_241|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_241|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_241|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_241|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_241|32> <TMP_BV_32_243|32>)) (== <TMP_BV_16_242|16> <TMP_BV_16_245|16>)) (== <TMP_BV_8_246|8> <TMP_BV_8_244|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 1 0 0 0 
1  |     0 0 0 1 0 0 
2  |       0 0 0 1 0 
3  |         0 0 0 1 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 1 0 0 0 1 0 
1  |     0 1 0 0 0 1 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 1 0 
5  |             0 1 
6  |               0 
7  |                 

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 1 (cell size 2)
Access 5 cell 1 offset 0 size 1 (cell size 2)
Access 6 cell 0 offset 1 size 1 (cell size 2)
Access 7 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
29 -> 0 (size 1 / cell size 2 / offset 0
31 -> 1 (size 1 / cell size 2 / offset 0
67 -> 0 (size 1 / cell size 2 / offset 1
69 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_16_255|16> <TMP_BV_16_257|16>)) (== <TMP_BV_16_256|16> <TMP_BV_16_258|16>))

CONSTRAINTS

(not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_257|16>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_257|16>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_255|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_255|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_255|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_255|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_16_255|16> <TMP_BV_16_257|16>)) (== <TMP_BV_16_256|16> <TMP_BV_16_258|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 1 0 0 0 0 
1  |     0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 1 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 1 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 1 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 4)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 0 offset 0 size 4 (cell size 4)
Access 5 cell 2 offset 0 size 1 (cell size 2)
Access 6 cell 1 offset 0 size 1 (cell size 2)
Access 7 cell 2 offset 1 size 1 (cell size 2)
Access 8 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 4 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 2 (size 1 / cell size 2 / offset 0
46 -> 1 (size 1 / cell size 2 / offset 0
82 -> 2 (size 1 / cell size 2 / offset 1
84 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_268|32> <TMP_BV_32_270|32>)) (== <TMP_BV_16_269|16> <TMP_BV_16_272|16>)) (== <TMP_BV_16_273|16> <TMP_BV_16_271|16>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_271|16>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_271|16>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_268|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_268|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_268|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_268|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_268|32> <TMP_BV_32_270|32>)) (== <TMP_BV_16_269|16> <TMP_BV_16_272|16>)) (== <TMP_BV_16_273|16> <TMP_BV_16_271|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 1 0 0 0 0 
1  |     0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               1 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 8)
Access 2 cell 0 offset 1 size 1 (cell size 4)
Access 3 cell 1 offset 1 size 1 (cell size 8)
Access 4 cell 0 offset 0 size 4 (cell size 4)
Access 5 cell 1 offset 0 size 8 (cell size 8)
Access 6 cell 2 offset 0 size 8 (cell size 8)
Access 7 cell 2 offset 0 size 1 (cell size 8)
Access 8 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 8 / offset 0
20 -> 0 (size 1 / cell size 4 / offset 1
23 -> 1 (size 1 / cell size 8 / offset 1
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 1 (size 8 / cell size 8 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
72 -> 2 (size 1 / cell size 8 / offset 0
74 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_282|32> <TMP_BV_32_284|32>)) (== <TMP_BV_64_283|64> <TMP_BV_64_285|64>)) (== <TMP_BV_64_288|64> <TMP_BV_64_286|64>)) (== <TMP_BV_8_289|8> <TMP_BV_8_287|8>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_286|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_286|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_286|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_282|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_282|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_282|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_282|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_282|32> <TMP_BV_32_284|32>)) (== <TMP_BV_64_283|64> <TMP_BV_64_285|64>)) (== <TMP_BV_64_288|64> <TMP_BV_64_286|64>)) (== <TMP_BV_8_289|8> <TMP_BV_8_287|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               1 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 1 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 8)
Access 2 cell 0 offset 1 size 1 (cell size 4)
Access 3 cell 1 offset 1 size 1 (cell size 8)
Access 4 cell 0 offset 0 size 4 (cell size 4)
Access 5 cell 1 offset 0 size 8 (cell size 8)
Access 6 cell 2 offset 0 size 8 (cell size 8)
Access 7 cell 2 offset 0 size 1 (cell size 8)
Access 8 cell 3 offset 0 size 1 (cell size 2)
Access 9 cell 2 offset 1 size 1 (cell size 8)
Access 10 cell 3 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 8 / offset 0
20 -> 0 (size 1 / cell size 4 / offset 1
23 -> 1 (size 1 / cell size 8 / offset 1
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 1 (size 8 / cell size 8 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
72 -> 2 (size 1 / cell size 8 / offset 0
74 -> 3 (size 1 / cell size 2 / offset 0
110 -> 2 (size 1 / cell size 8 / offset 1
112 -> 3 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_300|32> <TMP_BV_32_302|32>)) (== <TMP_BV_64_301|64> <TMP_BV_64_303|64>)) (== <TMP_BV_64_306|64> <TMP_BV_64_304|64>)) (== <TMP_BV_16_307|16> <TMP_BV_16_305|16>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_304|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_304|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_304|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_304|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_300|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_300|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_300|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_300|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_300|32> <TMP_BV_32_302|32>)) (== <TMP_BV_64_301|64> <TMP_BV_64_303|64>)) (== <TMP_BV_64_306|64> <TMP_BV_64_304|64>)) (== <TMP_BV_16_307|16> <TMP_BV_16_305|16>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   1 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 1 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 9)
Access 2 cell 0 offset 1 size 1 (cell size 4)
Access 3 cell 1 offset 1 size 1 (cell size 9)
Access 4 cell 0 offset 0 size 4 (cell size 4)
Access 5 cell 1 offset 0 size 8 (cell size 9)
Access 6 cell 2 offset 0 size 8 (cell size 8)
Access 7 cell 3 offset 0 size 8 (cell size 8)
Access 8 cell 4 offset 0 size 8 (cell size 8)
Access 9 cell 4 offset 0 size 1 (cell size 8)
Access 10 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 9 / offset 0
20 -> 0 (size 1 / cell size 4 / offset 1
23 -> 1 (size 1 / cell size 9 / offset 1
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 1 (size 8 / cell size 9 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
59 -> 3 (size 8 / cell size 8 / offset 0
61 -> 4 (size 8 / cell size 8 / offset 0
87 -> 4 (size 1 / cell size 8 / offset 0
89 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_32_317|32> <TMP_BV_32_319|32>)) (== <TMP_BV_72_318|72> <TMP_BV_72_320|72>)) (== <TMP_BV_64_324|64> <TMP_BV_64_321|64>)) (== <TMP_BV_64_325|64> <TMP_BV_64_322|64>)) (== <TMP_BV_64_326|64> <TMP_BV_64_323|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_321|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_321|64>)[63:0]) <0x0|64>)
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_323|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_323|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_323|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_317|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_317|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_317|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_317|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_32_317|32> <TMP_BV_32_319|32>)) (== <TMP_BV_72_318|72> <TMP_BV_72_320|72>)) (== <TMP_BV_64_324|64> <TMP_BV_64_321|64>)) (== <TMP_BV_64_325|64> <TMP_BV_64_322|64>)) (== <TMP_BV_64_326|64> <TMP_BV_64_323|64>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 13
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   1 0 0 0 
9  |                     0 0 0 
10 |                       0 0 
11 |                         0 
12 |                           

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 
5  |             0 0 0 0 1 0 0 
6  |               0 0 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   0 0 0 0 
9  |                     0 1 0 
10 |                       0 1 
11 |                         0 
12 |                           

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 1 (cell size 4)
Access 1 cell 1 offset 0 size 1 (cell size 10)
Access 2 cell 0 offset 1 size 1 (cell size 4)
Access 3 cell 1 offset 1 size 1 (cell size 10)
Access 4 cell 0 offset 0 size 4 (cell size 4)
Access 5 cell 1 offset 0 size 8 (cell size 10)
Access 6 cell 2 offset 0 size 8 (cell size 8)
Access 7 cell 3 offset 0 size 8 (cell size 8)
Access 8 cell 4 offset 0 size 8 (cell size 8)
Access 9 cell 4 offset 0 size 1 (cell size 8)
Access 10 cell 1 offset 8 size 1 (cell size 10)
Access 11 cell 4 offset 1 size 1 (cell size 8)
Access 12 cell 1 offset 9 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 4 / offset 0
14 -> 1 (size 1 / cell size 10 / offset 0
20 -> 0 (size 1 / cell size 4 / offset 1
23 -> 1 (size 1 / cell size 10 / offset 1
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 1 (size 8 / cell size 10 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
59 -> 3 (size 8 / cell size 8 / offset 0
61 -> 4 (size 8 / cell size 8 / offset 0
87 -> 4 (size 1 / cell size 8 / offset 0
89 -> 1 (size 1 / cell size 10 / offset 8
125 -> 4 (size 1 / cell size 8 / offset 1
127 -> 1 (size 1 / cell size 10 / offset 9
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_32_338|32> <TMP_BV_32_340|32>)) (== <TMP_BV_80_339|80> <TMP_BV_80_341|80>)) (== <TMP_BV_64_345|64> <TMP_BV_64_342|64>)) (== <TMP_BV_64_346|64> <TMP_BV_64_343|64>)) (== <TMP_BV_64_347|64> <TMP_BV_64_344|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_342|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_342|64>)[63:0]) <0x0|64>)
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_344|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_344|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_344|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_344|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_338|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_338|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_338|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_338|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_32_338|32> <TMP_BV_32_340|32>)) (== <TMP_BV_80_339|80> <TMP_BV_80_341|80>)) (== <TMP_BV_64_345|64> <TMP_BV_64_342|64>)) (== <TMP_BV_64_346|64> <TMP_BV_64_343|64>)) (== <TMP_BV_64_347|64> <TMP_BV_64_344|64>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   1 0 0 0 1 0 
1  |     0 0 0 1 0 
2  |       0 0 0 1 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 1 0 0 0 
2  |       0 1 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
29 -> 0 (size 1 / cell size 4 / offset 0
31 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_32_355|32> <TMP_BV_32_357|32>)) (== <TMP_BV_16_356|16> <TMP_BV_16_358|16>))

CONSTRAINTS

(not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_32_357|32>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_355|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_355|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_355|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_355|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_355|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_355|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_355|32> <TMP_BV_32_357|32>)) (== <TMP_BV_16_356|16> <TMP_BV_16_358|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   1 0 0 0 1 0 0 
1  |     0 0 0 1 0 0 
2  |       0 0 0 0 1 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 
2  |       0 1 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 4 (cell size 4)
Access 6 cell 2 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 2 (size 1 / cell size 1 / offset 0
46 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_367|32> <TMP_BV_32_369|32>)) (== <TMP_BV_16_368|16> <TMP_BV_16_371|16>)) (== <TMP_BV_8_372|8> <TMP_BV_8_370|8>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_8_370|8>)) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_367|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_367|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_367|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_367|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_367|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_367|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_367|32> <TMP_BV_32_369|32>)) (== <TMP_BV_16_368|16> <TMP_BV_16_371|16>)) (== <TMP_BV_8_372|8> <TMP_BV_8_370|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   1 0 0 0 1 0 0 0 
1  |     0 0 0 1 0 0 0 
2  |       0 0 0 1 0 0 
3  |         0 0 0 1 0 
4  |           0 0 0 1 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 1 0 
2  |       0 1 0 0 0 1 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 1 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 1 (cell size 4)
Access 6 cell 1 offset 0 size 1 (cell size 2)
Access 7 cell 0 offset 1 size 1 (cell size 4)
Access 8 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
29 -> 0 (size 1 / cell size 4 / offset 0
31 -> 1 (size 1 / cell size 2 / offset 0
67 -> 0 (size 1 / cell size 4 / offset 1
69 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_32_382|32> <TMP_BV_32_384|32>)) (== <TMP_BV_16_383|16> <TMP_BV_16_385|16>))

CONSTRAINTS

(not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_32_384|32>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_32_384|32>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_382|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_382|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_382|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_382|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_382|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_382|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_32_382|32> <TMP_BV_32_384|32>)) (== <TMP_BV_16_383|16> <TMP_BV_16_385|16>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   1 0 0 0 1 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 
2  |       0 0 0 0 1 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 1 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 1 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 1 0 
7  |                 0 1 
8  |                   0 
9  |                     

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 0 offset 0 size 4 (cell size 4)
Access 6 cell 2 offset 0 size 1 (cell size 2)
Access 7 cell 1 offset 0 size 1 (cell size 2)
Access 8 cell 2 offset 1 size 1 (cell size 2)
Access 9 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 2 (size 1 / cell size 2 / offset 0
46 -> 1 (size 1 / cell size 2 / offset 0
82 -> 2 (size 1 / cell size 2 / offset 1
84 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_396|32> <TMP_BV_32_398|32>)) (== <TMP_BV_16_397|16> <TMP_BV_16_400|16>)) (== <TMP_BV_16_401|16> <TMP_BV_16_399|16>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_399|16>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_399|16>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_396|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_396|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_396|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_396|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_396|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_396|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_396|32> <TMP_BV_32_398|32>)) (== <TMP_BV_16_397|16> <TMP_BV_16_400|16>)) (== <TMP_BV_16_401|16> <TMP_BV_16_399|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   1 0 0 0 1 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 
2  |       0 0 0 1 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 1 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 8)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 8)
Access 5 cell 0 offset 0 size 4 (cell size 4)
Access 6 cell 1 offset 0 size 8 (cell size 8)
Access 7 cell 2 offset 0 size 8 (cell size 8)
Access 8 cell 2 offset 0 size 1 (cell size 8)
Access 9 cell 3 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 8 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 8 / offset 1
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 1 (size 8 / cell size 8 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
72 -> 2 (size 1 / cell size 8 / offset 0
74 -> 3 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_411|32> <TMP_BV_32_413|32>)) (== <TMP_BV_64_412|64> <TMP_BV_64_414|64>)) (== <TMP_BV_64_417|64> <TMP_BV_64_415|64>)) (== <TMP_BV_8_418|8> <TMP_BV_8_416|8>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_415|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_415|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_415|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_411|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_411|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_411|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_411|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_411|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_411|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_411|32> <TMP_BV_32_413|32>)) (== <TMP_BV_64_412|64> <TMP_BV_64_414|64>)) (== <TMP_BV_64_417|64> <TMP_BV_64_415|64>)) (== <TMP_BV_8_418|8> <TMP_BV_8_416|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   1 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 0 
2  |       0 0 0 1 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 1 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 1 0 
9  |                     0 1 
10 |                       0 
11 |                         

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 8)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 8)
Access 5 cell 0 offset 0 size 4 (cell size 4)
Access 6 cell 1 offset 0 size 8 (cell size 8)
Access 7 cell 2 offset 0 size 8 (cell size 8)
Access 8 cell 2 offset 0 size 1 (cell size 8)
Access 9 cell 3 offset 0 size 1 (cell size 2)
Access 10 cell 2 offset 1 size 1 (cell size 8)
Access 11 cell 3 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 8 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 8 / offset 1
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 1 (size 8 / cell size 8 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
72 -> 2 (size 1 / cell size 8 / offset 0
74 -> 3 (size 1 / cell size 2 / offset 0
110 -> 2 (size 1 / cell size 8 / offset 1
112 -> 3 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_430|32> <TMP_BV_32_432|32>)) (== <TMP_BV_64_431|64> <TMP_BV_64_433|64>)) (== <TMP_BV_64_436|64> <TMP_BV_64_434|64>)) (== <TMP_BV_16_437|16> <TMP_BV_16_435|16>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_434|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_434|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_434|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_434|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_430|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_430|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_430|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_430|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_430|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_430|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_430|32> <TMP_BV_32_432|32>)) (== <TMP_BV_64_431|64> <TMP_BV_64_433|64>)) (== <TMP_BV_64_436|64> <TMP_BV_64_434|64>)) (== <TMP_BV_16_437|16> <TMP_BV_16_435|16>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   1 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 0 
2  |       0 0 0 1 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     1 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 1 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 9)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 9)
Access 5 cell 0 offset 0 size 4 (cell size 4)
Access 6 cell 1 offset 0 size 8 (cell size 9)
Access 7 cell 2 offset 0 size 8 (cell size 8)
Access 8 cell 3 offset 0 size 8 (cell size 8)
Access 9 cell 4 offset 0 size 8 (cell size 8)
Access 10 cell 4 offset 0 size 1 (cell size 8)
Access 11 cell 1 offset 8 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 9 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 9 / offset 1
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 1 (size 8 / cell size 9 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
59 -> 3 (size 8 / cell size 8 / offset 0
61 -> 4 (size 8 / cell size 8 / offset 0
87 -> 4 (size 1 / cell size 8 / offset 0
89 -> 1 (size 1 / cell size 9 / offset 8
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_32_448|32> <TMP_BV_32_450|32>)) (== <TMP_BV_72_449|72> <TMP_BV_72_451|72>)) (== <TMP_BV_64_455|64> <TMP_BV_64_452|64>)) (== <TMP_BV_64_456|64> <TMP_BV_64_453|64>)) (== <TMP_BV_64_457|64> <TMP_BV_64_454|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_452|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_452|64>)[63:0]) <0x0|64>)
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_454|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_454|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_454|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_448|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_448|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_448|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_448|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_448|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_448|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_32_448|32> <TMP_BV_32_450|32>)) (== <TMP_BV_72_449|72> <TMP_BV_72_451|72>)) (== <TMP_BV_64_455|64> <TMP_BV_64_452|64>)) (== <TMP_BV_64_456|64> <TMP_BV_64_453|64>)) (== <TMP_BV_64_457|64> <TMP_BV_64_454|64>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   1 0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 0 0 0 0 0 0 
2  |       0 0 0 1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     1 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 1 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 1 0 
11 |                         0 1 
12 |                           0 
13 |                             

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 10)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 10)
Access 5 cell 0 offset 0 size 4 (cell size 4)
Access 6 cell 1 offset 0 size 8 (cell size 10)
Access 7 cell 2 offset 0 size 8 (cell size 8)
Access 8 cell 3 offset 0 size 8 (cell size 8)
Access 9 cell 4 offset 0 size 8 (cell size 8)
Access 10 cell 4 offset 0 size 1 (cell size 8)
Access 11 cell 1 offset 8 size 1 (cell size 10)
Access 12 cell 4 offset 1 size 1 (cell size 8)
Access 13 cell 1 offset 9 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 10 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 10 / offset 1
REWRITE MAP:
28 -> 0 (size 4 / cell size 4 / offset 0
44 -> 1 (size 8 / cell size 10 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
59 -> 3 (size 8 / cell size 8 / offset 0
61 -> 4 (size 8 / cell size 8 / offset 0
87 -> 4 (size 1 / cell size 8 / offset 0
89 -> 1 (size 1 / cell size 10 / offset 8
125 -> 4 (size 1 / cell size 8 / offset 1
127 -> 1 (size 1 / cell size 10 / offset 9
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_32_470|32> <TMP_BV_32_472|32>)) (== <TMP_BV_80_471|80> <TMP_BV_80_473|80>)) (== <TMP_BV_64_477|64> <TMP_BV_64_474|64>)) (== <TMP_BV_64_478|64> <TMP_BV_64_475|64>)) (== <TMP_BV_64_479|64> <TMP_BV_64_476|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_474|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_474|64>)[63:0]) <0x0|64>)
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_476|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_476|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_476|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_476|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_470|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_470|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_470|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_470|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_470|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_470|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_32_470|32> <TMP_BV_32_472|32>)) (== <TMP_BV_80_471|80> <TMP_BV_80_473|80>)) (== <TMP_BV_64_477|64> <TMP_BV_64_474|64>)) (== <TMP_BV_64_478|64> <TMP_BV_64_475|64>)) (== <TMP_BV_64_479|64> <TMP_BV_64_476|64>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 1 0 
1  |     0 0 0 0 1 
2  |       1 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 1 0 0 0 
1  |     0 0 1 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 1 (cell size 8)
Access 6 cell 1 offset 0 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
29 -> 0 (size 1 / cell size 8 / offset 0
31 -> 1 (size 1 / cell size 5 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_64_486|64> <TMP_BV_64_488|64>)) (== <TMP_BV_40_487|40> <TMP_BV_40_489|40>))

CONSTRAINTS

(not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_488|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_486|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_486|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_486|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_486|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_486|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_486|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_486|64> <TMP_BV_64_488|64>)) (== <TMP_BV_40_487|40> <TMP_BV_40_489|40>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 1 0 0 
1  |     0 0 0 0 0 1 
2  |       1 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 1 1 0 0 0 0 
1  |     0 0 1 0 0 0 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 2 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 0 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
28 -> 0 (size 4 / cell size 8 / offset 0
44 -> 2 (size 1 / cell size 1 / offset 0
46 -> 1 (size 1 / cell size 5 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_497|64> <TMP_BV_64_499|64>)) (== <TMP_BV_40_498|40> <TMP_BV_40_501|40>)) (== <TMP_BV_8_502|8> <TMP_BV_8_500|8>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_8_500|8>)) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_497|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_497|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_497|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_497|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_497|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_497|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_497|64> <TMP_BV_64_499|64>)) (== <TMP_BV_40_498|40> <TMP_BV_40_501|40>)) (== <TMP_BV_8_502|8> <TMP_BV_8_500|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 1 0 0 0 
1  |     0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 1 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 1 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 1 (cell size 8)
Access 6 cell 1 offset 0 size 1 (cell size 5)
Access 7 cell 0 offset 1 size 1 (cell size 8)
Access 8 cell 1 offset 1 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
29 -> 0 (size 1 / cell size 8 / offset 0
31 -> 1 (size 1 / cell size 5 / offset 0
67 -> 0 (size 1 / cell size 8 / offset 1
69 -> 1 (size 1 / cell size 5 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_64_511|64> <TMP_BV_64_513|64>)) (== <TMP_BV_40_512|40> <TMP_BV_40_514|40>))

CONSTRAINTS

(not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_513|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_513|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_511|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_511|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_511|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_511|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_511|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_511|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_511|64> <TMP_BV_64_513|64>)) (== <TMP_BV_40_512|40> <TMP_BV_40_514|40>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 1 0 0 0 0 
1  |     0 0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 1 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 1 0 
7  |                 0 1 
8  |                   0 
9  |                     

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 2 offset 0 size 1 (cell size 2)
Access 7 cell 1 offset 0 size 1 (cell size 5)
Access 8 cell 2 offset 1 size 1 (cell size 2)
Access 9 cell 1 offset 1 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
28 -> 0 (size 4 / cell size 8 / offset 0
44 -> 2 (size 1 / cell size 2 / offset 0
46 -> 1 (size 1 / cell size 5 / offset 0
82 -> 2 (size 1 / cell size 2 / offset 1
84 -> 1 (size 1 / cell size 5 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_524|64> <TMP_BV_64_526|64>)) (== <TMP_BV_40_525|40> <TMP_BV_40_528|40>)) (== <TMP_BV_16_529|16> <TMP_BV_16_527|16>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_527|16>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_527|16>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_524|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_524|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_524|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_524|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_524|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_524|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_524|64> <TMP_BV_64_526|64>)) (== <TMP_BV_40_525|40> <TMP_BV_40_528|40>)) (== <TMP_BV_16_529|16> <TMP_BV_16_527|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 1 0 0 0 0 
1  |     0 0 0 0 1 0 0 0 
2  |       1 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 1 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 1 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 1 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 8)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 8)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 1 offset 0 size 8 (cell size 8)
Access 7 cell 2 offset 0 size 8 (cell size 8)
Access 8 cell 2 offset 0 size 1 (cell size 8)
Access 9 cell 1 offset 4 size 1 (cell size 8)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 8 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 8 / offset 4
REWRITE MAP:
28 -> 0 (size 4 / cell size 8 / offset 0
44 -> 1 (size 8 / cell size 8 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
72 -> 2 (size 1 / cell size 8 / offset 0
74 -> 1 (size 1 / cell size 8 / offset 4
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_538|64> <TMP_BV_64_540|64>)) (== <TMP_BV_64_539|64> <TMP_BV_64_541|64>)) (== <TMP_BV_64_543|64> <TMP_BV_64_542|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_542|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_542|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_542|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_538|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_538|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_538|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_538|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_538|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_538|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_538|64> <TMP_BV_64_540|64>)) (== <TMP_BV_64_539|64> <TMP_BV_64_541|64>)) (== <TMP_BV_64_543|64> <TMP_BV_64_542|64>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 1 0 0 0 0 0 
2  |       1 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 1 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 1 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 1 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 1 0 
9  |                     0 1 
10 |                       0 
11 |                         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 8)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 8)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 1 offset 0 size 8 (cell size 8)
Access 7 cell 2 offset 0 size 8 (cell size 8)
Access 8 cell 2 offset 0 size 1 (cell size 8)
Access 9 cell 1 offset 4 size 1 (cell size 8)
Access 10 cell 2 offset 1 size 1 (cell size 8)
Access 11 cell 1 offset 5 size 1 (cell size 8)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 8 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 8 / offset 4
REWRITE MAP:
28 -> 0 (size 4 / cell size 8 / offset 0
44 -> 1 (size 8 / cell size 8 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
72 -> 2 (size 1 / cell size 8 / offset 0
74 -> 1 (size 1 / cell size 8 / offset 4
110 -> 2 (size 1 / cell size 8 / offset 1
112 -> 1 (size 1 / cell size 8 / offset 5
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_554|64> <TMP_BV_64_556|64>)) (== <TMP_BV_64_555|64> <TMP_BV_64_557|64>)) (== <TMP_BV_64_559|64> <TMP_BV_64_558|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_558|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_558|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_558|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_558|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_554|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_554|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_554|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_554|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_554|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_554|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_554|64> <TMP_BV_64_556|64>)) (== <TMP_BV_64_555|64> <TMP_BV_64_557|64>)) (== <TMP_BV_64_559|64> <TMP_BV_64_558|64>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 1 0 0 0 0 0 
2  |       1 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 1 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     1 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 1 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 12)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 12)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 1 offset 0 size 8 (cell size 12)
Access 7 cell 2 offset 0 size 8 (cell size 8)
Access 8 cell 1 offset 4 size 8 (cell size 12)
Access 9 cell 3 offset 0 size 8 (cell size 8)
Access 10 cell 3 offset 0 size 1 (cell size 8)
Access 11 cell 1 offset 8 size 1 (cell size 12)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 12 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 12 / offset 4
REWRITE MAP:
28 -> 0 (size 4 / cell size 8 / offset 0
44 -> 1 (size 8 / cell size 12 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
59 -> 1 (size 8 / cell size 12 / offset 4
61 -> 3 (size 8 / cell size 8 / offset 0
87 -> 3 (size 1 / cell size 8 / offset 0
89 -> 1 (size 1 / cell size 12 / offset 8
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_569|64> <TMP_BV_64_571|64>)) (== <TMP_BV_96_570|96> <TMP_BV_96_572|96>)) (== <TMP_BV_64_575|64> <TMP_BV_64_573|64>)) (== <TMP_BV_64_576|64> <TMP_BV_64_574|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_573|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_573|64>)[63:0]) <0x0|64>)
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_574|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_574|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_574|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_569|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_569|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_569|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_569|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_569|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_569|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_569|64> <TMP_BV_64_571|64>)) (== <TMP_BV_96_570|96> <TMP_BV_96_572|96>)) (== <TMP_BV_64_575|64> <TMP_BV_64_573|64>)) (== <TMP_BV_64_576|64> <TMP_BV_64_574|64>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 1 0 0 0 0 0 0 0 
2  |       1 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 1 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     1 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 1 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 1 0 
11 |                         0 1 
12 |                           0 
13 |                             

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 12)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 12)
Access 5 cell 0 offset 0 size 4 (cell size 8)
Access 6 cell 1 offset 0 size 8 (cell size 12)
Access 7 cell 2 offset 0 size 8 (cell size 8)
Access 8 cell 1 offset 4 size 8 (cell size 12)
Access 9 cell 3 offset 0 size 8 (cell size 8)
Access 10 cell 3 offset 0 size 1 (cell size 8)
Access 11 cell 1 offset 8 size 1 (cell size 12)
Access 12 cell 3 offset 1 size 1 (cell size 8)
Access 13 cell 1 offset 9 size 1 (cell size 12)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 12 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 12 / offset 4
REWRITE MAP:
28 -> 0 (size 4 / cell size 8 / offset 0
44 -> 1 (size 8 / cell size 12 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
59 -> 1 (size 8 / cell size 12 / offset 4
61 -> 3 (size 8 / cell size 8 / offset 0
87 -> 3 (size 1 / cell size 8 / offset 0
89 -> 1 (size 1 / cell size 12 / offset 8
125 -> 3 (size 1 / cell size 8 / offset 1
127 -> 1 (size 1 / cell size 12 / offset 9
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_588|64> <TMP_BV_64_590|64>)) (== <TMP_BV_96_589|96> <TMP_BV_96_591|96>)) (== <TMP_BV_64_594|64> <TMP_BV_64_592|64>)) (== <TMP_BV_64_595|64> <TMP_BV_64_593|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_592|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_592|64>)[63:0]) <0x0|64>)
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_593|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_593|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_593|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_593|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_588|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_588|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_588|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_588|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_588|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_588|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_588|64> <TMP_BV_64_590|64>)) (== <TMP_BV_96_589|96> <TMP_BV_96_591|96>)) (== <TMP_BV_64_594|64> <TMP_BV_64_592|64>)) (== <TMP_BV_64_595|64> <TMP_BV_64_593|64>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 1 
2  |       1 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 1 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 1 0 0 0 
4  |           0 1 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 1 (cell size 8)
Access 8 cell 1 offset 0 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
29 -> 0 (size 1 / cell size 8 / offset 0
31 -> 1 (size 1 / cell size 6 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_64_604|64> <TMP_BV_64_606|64>)) (== <TMP_BV_48_605|48> <TMP_BV_48_607|48>))

CONSTRAINTS

(not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_606|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_604|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_604|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_604|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_604|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_604|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_604|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_604|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_604|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_604|64> <TMP_BV_64_606|64>)) (== <TMP_BV_48_605|48> <TMP_BV_48_607|48>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 1 0 0 
1  |     0 0 0 0 0 0 0 1 
2  |       1 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 1 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 
4  |           0 1 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 4 (cell size 8)
Access 8 cell 2 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 0 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
28 -> 0 (size 4 / cell size 8 / offset 0
44 -> 2 (size 1 / cell size 1 / offset 0
46 -> 1 (size 1 / cell size 6 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_617|64> <TMP_BV_64_619|64>)) (== <TMP_BV_48_618|48> <TMP_BV_48_621|48>)) (== <TMP_BV_8_622|8> <TMP_BV_8_620|8>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_8_620|8>)) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_617|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_617|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_617|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_617|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_617|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_617|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_617|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_617|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_617|64> <TMP_BV_64_619|64>)) (== <TMP_BV_48_618|48> <TMP_BV_48_621|48>)) (== <TMP_BV_8_622|8> <TMP_BV_8_620|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 
4  |           0 1 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 1 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 1 (cell size 8)
Access 8 cell 1 offset 0 size 1 (cell size 6)
Access 9 cell 0 offset 1 size 1 (cell size 8)
Access 10 cell 1 offset 1 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
29 -> 0 (size 1 / cell size 8 / offset 0
31 -> 1 (size 1 / cell size 6 / offset 0
67 -> 0 (size 1 / cell size 8 / offset 1
69 -> 1 (size 1 / cell size 6 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_64_633|64> <TMP_BV_64_635|64>)) (== <TMP_BV_48_634|48> <TMP_BV_48_636|48>))

CONSTRAINTS

(not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_635|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_635|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_633|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_633|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_633|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_633|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_633|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_633|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_633|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_633|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_64_633|64> <TMP_BV_64_635|64>)) (== <TMP_BV_48_634|48> <TMP_BV_48_636|48>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 
1  |     0 0 0 0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 1 0 
9  |                     0 1 
10 |                       0 
11 |                         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 0 offset 0 size 4 (cell size 8)
Access 8 cell 2 offset 0 size 1 (cell size 2)
Access 9 cell 1 offset 0 size 1 (cell size 6)
Access 10 cell 2 offset 1 size 1 (cell size 2)
Access 11 cell 1 offset 1 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
28 -> 0 (size 4 / cell size 8 / offset 0
44 -> 2 (size 1 / cell size 2 / offset 0
46 -> 1 (size 1 / cell size 6 / offset 0
82 -> 2 (size 1 / cell size 2 / offset 1
84 -> 1 (size 1 / cell size 6 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_648|64> <TMP_BV_64_650|64>)) (== <TMP_BV_48_649|48> <TMP_BV_48_652|48>)) (== <TMP_BV_16_653|16> <TMP_BV_16_651|16>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_651|16>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_651|16>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_648|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_648|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_648|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_648|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_648|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_648|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_648|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_648|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_648|64> <TMP_BV_64_650|64>)) (== <TMP_BV_48_649|48> <TMP_BV_48_652|48>)) (== <TMP_BV_16_653|16> <TMP_BV_16_651|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 
2  |       1 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 1 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     1 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 8)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 8)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 8)
Access 7 cell 0 offset 0 size 4 (cell size 8)
Access 8 cell 1 offset 0 size 8 (cell size 8)
Access 9 cell 2 offset 0 size 8 (cell size 8)
Access 10 cell 2 offset 0 size 1 (cell size 8)
Access 11 cell 1 offset 4 size 1 (cell size 8)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 8 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 8 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 8 / offset 5
REWRITE MAP:
28 -> 0 (size 4 / cell size 8 / offset 0
44 -> 1 (size 8 / cell size 8 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
72 -> 2 (size 1 / cell size 8 / offset 0
74 -> 1 (size 1 / cell size 8 / offset 4
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_664|64> <TMP_BV_64_666|64>)) (== <TMP_BV_64_665|64> <TMP_BV_64_667|64>)) (== <TMP_BV_64_669|64> <TMP_BV_64_668|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_668|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_668|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_668|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_664|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_664|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_664|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_664|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_664|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_664|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_664|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_664|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_664|64> <TMP_BV_64_666|64>)) (== <TMP_BV_64_665|64> <TMP_BV_64_667|64>)) (== <TMP_BV_64_669|64> <TMP_BV_64_668|64>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 
2  |       1 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 1 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 1 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     1 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 0 1 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 1 0 
11 |                         0 1 
12 |                           0 
13 |                             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 8)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 8)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 8)
Access 7 cell 0 offset 0 size 4 (cell size 8)
Access 8 cell 1 offset 0 size 8 (cell size 8)
Access 9 cell 2 offset 0 size 8 (cell size 8)
Access 10 cell 2 offset 0 size 1 (cell size 8)
Access 11 cell 1 offset 4 size 1 (cell size 8)
Access 12 cell 2 offset 1 size 1 (cell size 8)
Access 13 cell 1 offset 5 size 1 (cell size 8)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 8 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 8 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 8 / offset 5
REWRITE MAP:
28 -> 0 (size 4 / cell size 8 / offset 0
44 -> 1 (size 8 / cell size 8 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
72 -> 2 (size 1 / cell size 8 / offset 0
74 -> 1 (size 1 / cell size 8 / offset 4
110 -> 2 (size 1 / cell size 8 / offset 1
112 -> 1 (size 1 / cell size 8 / offset 5
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_682|64> <TMP_BV_64_684|64>)) (== <TMP_BV_64_683|64> <TMP_BV_64_685|64>)) (== <TMP_BV_64_687|64> <TMP_BV_64_686|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_686|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_686|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_686|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_686|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_682|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_682|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_682|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_682|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_682|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_682|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_682|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_682|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_682|64> <TMP_BV_64_684|64>)) (== <TMP_BV_64_683|64> <TMP_BV_64_685|64>)) (== <TMP_BV_64_687|64> <TMP_BV_64_686|64>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 
2  |       1 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 1 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         1 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 1 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 12)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 12)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 12)
Access 7 cell 0 offset 0 size 4 (cell size 8)
Access 8 cell 1 offset 0 size 8 (cell size 12)
Access 9 cell 2 offset 0 size 8 (cell size 8)
Access 10 cell 1 offset 4 size 8 (cell size 12)
Access 11 cell 3 offset 0 size 8 (cell size 8)
Access 12 cell 3 offset 0 size 1 (cell size 8)
Access 13 cell 1 offset 8 size 1 (cell size 12)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 12 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 12 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 12 / offset 5
REWRITE MAP:
28 -> 0 (size 4 / cell size 8 / offset 0
44 -> 1 (size 8 / cell size 12 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
59 -> 1 (size 8 / cell size 12 / offset 4
61 -> 3 (size 8 / cell size 8 / offset 0
87 -> 3 (size 1 / cell size 8 / offset 0
89 -> 1 (size 1 / cell size 12 / offset 8
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_699|64> <TMP_BV_64_701|64>)) (== <TMP_BV_96_700|96> <TMP_BV_96_702|96>)) (== <TMP_BV_64_705|64> <TMP_BV_64_703|64>)) (== <TMP_BV_64_706|64> <TMP_BV_64_704|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_703|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_703|64>)[63:0]) <0x0|64>)
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_704|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_704|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_704|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_699|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_699|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_699|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_699|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_699|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_699|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_699|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_699|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_699|64> <TMP_BV_64_701|64>)) (== <TMP_BV_96_700|96> <TMP_BV_96_702|96>)) (== <TMP_BV_64_705|64> <TMP_BV_64_703|64>)) (== <TMP_BV_64_706|64> <TMP_BV_64_704|64>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 16
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 0 0 
2  |       1 0 0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 1 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 0 0 0 
11 |                         1 0 0 0 
12 |                           0 0 0 
13 |                             0 0 
14 |                               0 
15 |                                 

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 1 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 0 0 0 
11 |                         0 0 0 0 
12 |                           0 1 0 
13 |                             0 1 
14 |                               0 
15 |                                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 12)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 12)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 12)
Access 7 cell 0 offset 0 size 4 (cell size 8)
Access 8 cell 1 offset 0 size 8 (cell size 12)
Access 9 cell 2 offset 0 size 8 (cell size 8)
Access 10 cell 1 offset 4 size 8 (cell size 12)
Access 11 cell 3 offset 0 size 8 (cell size 8)
Access 12 cell 3 offset 0 size 1 (cell size 8)
Access 13 cell 1 offset 8 size 1 (cell size 12)
Access 14 cell 3 offset 1 size 1 (cell size 8)
Access 15 cell 1 offset 9 size 1 (cell size 12)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 12 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 12 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 12 / offset 5
REWRITE MAP:
28 -> 0 (size 4 / cell size 8 / offset 0
44 -> 1 (size 8 / cell size 12 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
59 -> 1 (size 8 / cell size 12 / offset 4
61 -> 3 (size 8 / cell size 8 / offset 0
87 -> 3 (size 1 / cell size 8 / offset 0
89 -> 1 (size 1 / cell size 12 / offset 8
125 -> 3 (size 1 / cell size 8 / offset 1
127 -> 1 (size 1 / cell size 12 / offset 9
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_720|64> <TMP_BV_64_722|64>)) (== <TMP_BV_96_721|96> <TMP_BV_96_723|96>)) (== <TMP_BV_64_726|64> <TMP_BV_64_724|64>)) (== <TMP_BV_64_727|64> <TMP_BV_64_725|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_724|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_724|64>)[63:0]) <0x0|64>)
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_725|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_725|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_725|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_725|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_720|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_720|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_720|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_720|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_720|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_720|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_720|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_720|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_720|64> <TMP_BV_64_722|64>)) (== <TMP_BV_96_721|96> <TMP_BV_96_723|96>)) (== <TMP_BV_64_726|64> <TMP_BV_64_724|64>)) (== <TMP_BV_64_727|64> <TMP_BV_64_725|64>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           1 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 1 1 0 0 0 
3  |         0 0 1 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 1 (cell size 12)
Access 8 cell 1 offset 0 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
29 -> 0 (size 1 / cell size 12 / offset 0
31 -> 1 (size 1 / cell size 9 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_96_735|96> <TMP_BV_96_737|96>)) (== <TMP_BV_72_736|72> <TMP_BV_72_738|72>))

CONSTRAINTS

(not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_96_737|96>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_735|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_735|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_735|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_735|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_735|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_735|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_735|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_735|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_735|96> <TMP_BV_96_737|96>)) (== <TMP_BV_72_736|72> <TMP_BV_72_738|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 1 0 0 
1  |     0 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           1 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 
3  |         0 0 1 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 2 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 0 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
28 -> 0 (size 4 / cell size 12 / offset 0
44 -> 2 (size 1 / cell size 1 / offset 0
46 -> 1 (size 1 / cell size 9 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_747|96> <TMP_BV_96_749|96>)) (== <TMP_BV_72_748|72> <TMP_BV_72_751|72>)) (== <TMP_BV_8_752|8> <TMP_BV_8_750|8>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_8_750|8>)) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_747|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_747|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_747|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_747|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_747|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_747|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_747|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_747|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_747|96> <TMP_BV_96_749|96>)) (== <TMP_BV_72_748|72> <TMP_BV_72_751|72>)) (== <TMP_BV_8_752|8> <TMP_BV_8_750|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 1 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 1 (cell size 12)
Access 8 cell 1 offset 0 size 1 (cell size 9)
Access 9 cell 0 offset 1 size 1 (cell size 12)
Access 10 cell 1 offset 1 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
29 -> 0 (size 1 / cell size 12 / offset 0
31 -> 1 (size 1 / cell size 9 / offset 0
67 -> 0 (size 1 / cell size 12 / offset 1
69 -> 1 (size 1 / cell size 9 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_96_762|96> <TMP_BV_96_764|96>)) (== <TMP_BV_72_763|72> <TMP_BV_72_765|72>))

CONSTRAINTS

(not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_96_764|96>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_96_764|96>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_762|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_762|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_762|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_762|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_762|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_762|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_762|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_762|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_762|96> <TMP_BV_96_764|96>)) (== <TMP_BV_72_763|72> <TMP_BV_72_765|72>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 
1  |     0 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 1 0 
9  |                     0 1 
10 |                       0 
11 |                         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 2 offset 0 size 1 (cell size 2)
Access 9 cell 1 offset 0 size 1 (cell size 9)
Access 10 cell 2 offset 1 size 1 (cell size 2)
Access 11 cell 1 offset 1 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
28 -> 0 (size 4 / cell size 12 / offset 0
44 -> 2 (size 1 / cell size 2 / offset 0
46 -> 1 (size 1 / cell size 9 / offset 0
82 -> 2 (size 1 / cell size 2 / offset 1
84 -> 1 (size 1 / cell size 9 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_776|96> <TMP_BV_96_778|96>)) (== <TMP_BV_72_777|72> <TMP_BV_72_780|72>)) (== <TMP_BV_16_781|16> <TMP_BV_16_779|16>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_779|16>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_779|16>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_776|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_776|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_776|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_776|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_776|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_776|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_776|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_776|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_776|96> <TMP_BV_96_778|96>)) (== <TMP_BV_72_777|72> <TMP_BV_72_780|72>)) (== <TMP_BV_16_781|16> <TMP_BV_16_779|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 1 
4  |           1 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     1 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 1 
2  |       0 1 1 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 1 offset 0 size 8 (cell size 9)
Access 9 cell 2 offset 0 size 8 (cell size 8)
Access 10 cell 2 offset 0 size 1 (cell size 8)
Access 11 cell 1 offset 4 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
28 -> 0 (size 4 / cell size 12 / offset 0
44 -> 1 (size 8 / cell size 9 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
72 -> 2 (size 1 / cell size 8 / offset 0
74 -> 1 (size 1 / cell size 9 / offset 4
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_791|96> <TMP_BV_96_793|96>)) (== <TMP_BV_72_792|72> <TMP_BV_72_794|72>)) (== <TMP_BV_64_796|64> <TMP_BV_64_795|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_795|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_795|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_795|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_791|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_791|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_791|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_791|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_791|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_791|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_791|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_791|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_791|96> <TMP_BV_96_793|96>)) (== <TMP_BV_72_792|72> <TMP_BV_72_794|72>)) (== <TMP_BV_64_796|64> <TMP_BV_64_795|64>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 1 0 0 
4  |           1 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     1 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 1 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 1 0 
11 |                         0 1 
12 |                           0 
13 |                             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 1 offset 0 size 8 (cell size 9)
Access 9 cell 2 offset 0 size 8 (cell size 8)
Access 10 cell 2 offset 0 size 1 (cell size 8)
Access 11 cell 1 offset 4 size 1 (cell size 9)
Access 12 cell 2 offset 1 size 1 (cell size 8)
Access 13 cell 1 offset 5 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
28 -> 0 (size 4 / cell size 12 / offset 0
44 -> 1 (size 8 / cell size 9 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
72 -> 2 (size 1 / cell size 8 / offset 0
74 -> 1 (size 1 / cell size 9 / offset 4
110 -> 2 (size 1 / cell size 8 / offset 1
112 -> 1 (size 1 / cell size 9 / offset 5
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_808|96> <TMP_BV_96_810|96>)) (== <TMP_BV_72_809|72> <TMP_BV_72_811|72>)) (== <TMP_BV_64_813|64> <TMP_BV_64_812|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_812|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_812|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_812|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_812|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_808|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_808|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_808|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_808|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_808|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_808|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_808|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_808|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_808|96> <TMP_BV_96_810|96>)) (== <TMP_BV_72_809|72> <TMP_BV_72_811|72>)) (== <TMP_BV_64_813|64> <TMP_BV_64_812|64>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 1 0 0 0 
4  |           1 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 1 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         1 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 1 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 1 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 1 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 12)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 12)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 12)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 1 offset 0 size 8 (cell size 12)
Access 9 cell 2 offset 0 size 8 (cell size 8)
Access 10 cell 1 offset 4 size 8 (cell size 12)
Access 11 cell 3 offset 0 size 8 (cell size 8)
Access 12 cell 3 offset 0 size 1 (cell size 8)
Access 13 cell 1 offset 8 size 1 (cell size 12)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 12 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 12 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 12 / offset 8
REWRITE MAP:
28 -> 0 (size 4 / cell size 12 / offset 0
44 -> 1 (size 8 / cell size 12 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
59 -> 1 (size 8 / cell size 12 / offset 4
61 -> 3 (size 8 / cell size 8 / offset 0
87 -> 3 (size 1 / cell size 8 / offset 0
89 -> 1 (size 1 / cell size 12 / offset 8
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_824|96> <TMP_BV_96_826|96>)) (== <TMP_BV_96_825|96> <TMP_BV_96_827|96>)) (== <TMP_BV_64_830|64> <TMP_BV_64_828|64>)) (== <TMP_BV_64_831|64> <TMP_BV_64_829|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_828|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_828|64>)[63:0]) <0x0|64>)
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_829|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_829|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_829|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_824|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_824|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_824|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_824|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_824|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_824|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_824|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_824|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_824|96> <TMP_BV_96_826|96>)) (== <TMP_BV_96_825|96> <TMP_BV_96_827|96>)) (== <TMP_BV_64_830|64> <TMP_BV_64_828|64>)) (== <TMP_BV_64_831|64> <TMP_BV_64_829|64>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 16
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 1 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 1 0 0 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 0 0 0 
11 |                         1 0 0 0 
12 |                           0 0 0 
13 |                             0 0 
14 |                               0 
15 |                                 

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 1 0 0 
4  |           0 0 0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 0 1 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 1 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 0 0 0 
11 |                         0 0 0 0 
12 |                           0 1 0 
13 |                             0 1 
14 |                               0 
15 |                                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 12)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 12)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 12)
Access 7 cell 0 offset 0 size 4 (cell size 12)
Access 8 cell 1 offset 0 size 8 (cell size 12)
Access 9 cell 2 offset 0 size 8 (cell size 8)
Access 10 cell 1 offset 4 size 8 (cell size 12)
Access 11 cell 3 offset 0 size 8 (cell size 8)
Access 12 cell 3 offset 0 size 1 (cell size 8)
Access 13 cell 1 offset 8 size 1 (cell size 12)
Access 14 cell 3 offset 1 size 1 (cell size 8)
Access 15 cell 1 offset 9 size 1 (cell size 12)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 12 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 12 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 12 / offset 8
REWRITE MAP:
28 -> 0 (size 4 / cell size 12 / offset 0
44 -> 1 (size 8 / cell size 12 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
59 -> 1 (size 8 / cell size 12 / offset 4
61 -> 3 (size 8 / cell size 8 / offset 0
87 -> 3 (size 1 / cell size 8 / offset 0
89 -> 1 (size 1 / cell size 12 / offset 8
125 -> 3 (size 1 / cell size 8 / offset 1
127 -> 1 (size 1 / cell size 12 / offset 9
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_844|96> <TMP_BV_96_846|96>)) (== <TMP_BV_96_845|96> <TMP_BV_96_847|96>)) (== <TMP_BV_64_850|64> <TMP_BV_64_848|64>)) (== <TMP_BV_64_851|64> <TMP_BV_64_849|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_848|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_848|64>)[63:0]) <0x0|64>)
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_849|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_849|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_849|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_849|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_844|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_844|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_844|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_844|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_844|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_844|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_844|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_844|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_844|96> <TMP_BV_96_846|96>)) (== <TMP_BV_96_845|96> <TMP_BV_96_847|96>)) (== <TMP_BV_64_850|64> <TMP_BV_64_848|64>)) (== <TMP_BV_64_851|64> <TMP_BV_64_849|64>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 
1  |     0 0 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 1 0 0 0 
6  |               0 1 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 1 (cell size 12)
Access 10 cell 1 offset 0 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
29 -> 0 (size 1 / cell size 12 / offset 0
31 -> 1 (size 1 / cell size 10 / offset 0
Start memory constraint: (and (and TRUE (== <TMP_BV_96_861|96> <TMP_BV_96_863|96>)) (== <TMP_BV_80_862|80> <TMP_BV_80_864|80>))

CONSTRAINTS

(not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_96_863|96>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_861|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_861|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_861|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_861|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_861|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_861|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_861|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_861|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_861|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_861|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_861|96> <TMP_BV_96_863|96>)) (== <TMP_BV_80_862|80> <TMP_BV_80_864|80>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 
1  |     0 0 0 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 
6  |               0 1 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 2 offset 0 size 1 (cell size 1)
Access 11 cell 1 offset 0 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
28 -> 0 (size 4 / cell size 12 / offset 0
44 -> 2 (size 1 / cell size 1 / offset 0
46 -> 1 (size 1 / cell size 10 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_875|96> <TMP_BV_96_877|96>)) (== <TMP_BV_80_876|80> <TMP_BV_80_879|80>)) (== <TMP_BV_8_880|8> <TMP_BV_8_878|8>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_8_878|8>)) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_875|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_875|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_875|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_875|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_875|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_875|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_875|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_875|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_875|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_875|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_875|96> <TMP_BV_96_877|96>)) (== <TMP_BV_80_876|80> <TMP_BV_80_879|80>)) (== <TMP_BV_8_880|8> <TMP_BV_8_878|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 13
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   0 0 0 0 
9  |                     0 0 0 
10 |                       0 0 
11 |                         0 
12 |                           

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 
6  |               0 1 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   0 0 0 0 
9  |                     0 1 0 
10 |                       0 1 
11 |                         0 
12 |                           

TOTAL CELLS: 2
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 1 (cell size 12)
Access 10 cell 1 offset 0 size 1 (cell size 10)
Access 11 cell 0 offset 1 size 1 (cell size 12)
Access 12 cell 1 offset 1 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
29 -> 0 (size 1 / cell size 12 / offset 0
31 -> 1 (size 1 / cell size 10 / offset 0
67 -> 0 (size 1 / cell size 12 / offset 1
69 -> 1 (size 1 / cell size 10 / offset 1
Start memory constraint: (and (and TRUE (== <TMP_BV_96_892|96> <TMP_BV_96_894|96>)) (== <TMP_BV_80_893|80> <TMP_BV_80_895|80>))

CONSTRAINTS

(not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_96_894|96>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_96_894|96>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_892|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_892|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_892|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_892|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_892|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_892|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_892|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_892|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_892|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_892|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and TRUE (== <TMP_BV_96_892|96> <TMP_BV_96_894|96>)) (== <TMP_BV_80_893|80> <TMP_BV_80_895|80>))
(and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 1 0 
11 |                         0 1 
12 |                           0 
13 |                             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 2 offset 0 size 1 (cell size 2)
Access 11 cell 1 offset 0 size 1 (cell size 10)
Access 12 cell 2 offset 1 size 1 (cell size 2)
Access 13 cell 1 offset 1 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
28 -> 0 (size 4 / cell size 12 / offset 0
44 -> 2 (size 1 / cell size 2 / offset 0
46 -> 1 (size 1 / cell size 10 / offset 0
82 -> 2 (size 1 / cell size 2 / offset 1
84 -> 1 (size 1 / cell size 10 / offset 1
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_908|96> <TMP_BV_96_910|96>)) (== <TMP_BV_80_909|80> <TMP_BV_80_912|80>)) (== <TMP_BV_16_913|16> <TMP_BV_16_911|16>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>))))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_911|16>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_16_911|16>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_908|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_908|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_908|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_908|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_908|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_908|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_908|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_908|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_908|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_908|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_908|96> <TMP_BV_96_910|96>)) (== <TMP_BV_80_909|80> <TMP_BV_80_912|80>)) (== <TMP_BV_16_913|16> <TMP_BV_16_911|16>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 1 
4  |           1 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         1 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 1 
2  |       0 1 1 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 1 offset 0 size 8 (cell size 10)
Access 11 cell 2 offset 0 size 8 (cell size 8)
Access 12 cell 2 offset 0 size 1 (cell size 8)
Access 13 cell 1 offset 4 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
28 -> 0 (size 4 / cell size 12 / offset 0
44 -> 1 (size 8 / cell size 10 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
72 -> 2 (size 1 / cell size 8 / offset 0
74 -> 1 (size 1 / cell size 10 / offset 4
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_925|96> <TMP_BV_96_927|96>)) (== <TMP_BV_80_926|80> <TMP_BV_80_928|80>)) (== <TMP_BV_64_930|64> <TMP_BV_64_929|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_929|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_929|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_929|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_925|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_925|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_925|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_925|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_925|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_925|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_925|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_925|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_925|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_925|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_925|96> <TMP_BV_96_927|96>)) (== <TMP_BV_80_926|80> <TMP_BV_80_928|80>)) (== <TMP_BV_64_930|64> <TMP_BV_64_929|64>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 16
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 1 0 0 
4  |           1 0 0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 0 0 0 
11 |                         1 0 0 0 
12 |                           0 0 0 
13 |                             0 0 
14 |                               0 
15 |                                 

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 1 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 0 0 0 
11 |                         0 0 0 0 
12 |                           0 1 0 
13 |                             0 1 
14 |                               0 
15 |                                 

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 1 offset 0 size 8 (cell size 10)
Access 11 cell 2 offset 0 size 8 (cell size 8)
Access 12 cell 2 offset 0 size 1 (cell size 8)
Access 13 cell 1 offset 4 size 1 (cell size 10)
Access 14 cell 2 offset 1 size 1 (cell size 8)
Access 15 cell 1 offset 5 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
28 -> 0 (size 4 / cell size 12 / offset 0
44 -> 1 (size 8 / cell size 10 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
72 -> 2 (size 1 / cell size 8 / offset 0
74 -> 1 (size 1 / cell size 10 / offset 4
110 -> 2 (size 1 / cell size 8 / offset 1
112 -> 1 (size 1 / cell size 10 / offset 5
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_944|96> <TMP_BV_96_946|96>)) (== <TMP_BV_80_945|80> <TMP_BV_80_947|80>)) (== <TMP_BV_64_949|64> <TMP_BV_64_948|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_948|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_948|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_948|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_948|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_944|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_944|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_944|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_944|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_944|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_944|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_944|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_944|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_944|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_944|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_944|96> <TMP_BV_96_946|96>)) (== <TMP_BV_80_945|80> <TMP_BV_80_947|80>)) (== <TMP_BV_64_949|64> <TMP_BV_64_948|64>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 16
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 1 0 0 0 
4  |           1 0 0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 0 1 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 0 0 0 
11 |                         0 0 0 0 
12 |                           0 0 0 
13 |                             1 0 
14 |                               0 
15 |                                 

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 1 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 0 1 
4  |           0 0 0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 
10 |                       0 0 0 0 1 
11 |                         0 0 0 0 
12 |                           0 0 0 
13 |                             0 0 
14 |                               0 
15 |                                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 12)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 12)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 12)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 12)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 1 offset 0 size 8 (cell size 12)
Access 11 cell 2 offset 0 size 8 (cell size 8)
Access 12 cell 1 offset 4 size 8 (cell size 12)
Access 13 cell 3 offset 0 size 8 (cell size 8)
Access 14 cell 3 offset 0 size 1 (cell size 8)
Access 15 cell 1 offset 8 size 1 (cell size 12)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 12 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 12 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 12 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 12 / offset 9
REWRITE MAP:
28 -> 0 (size 4 / cell size 12 / offset 0
44 -> 1 (size 8 / cell size 12 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
59 -> 1 (size 8 / cell size 12 / offset 4
61 -> 3 (size 8 / cell size 8 / offset 0
87 -> 3 (size 1 / cell size 8 / offset 0
89 -> 1 (size 1 / cell size 12 / offset 8
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_962|96> <TMP_BV_96_964|96>)) (== <TMP_BV_96_963|96> <TMP_BV_96_965|96>)) (== <TMP_BV_64_968|64> <TMP_BV_64_966|64>)) (== <TMP_BV_64_969|64> <TMP_BV_64_967|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_966|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_966|64>)[63:0]) <0x0|64>)
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_967|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_967|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_967|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_962|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_962|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_962|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_962|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_962|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_962|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_962|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_962|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_962|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_962|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_962|96> <TMP_BV_96_964|96>)) (== <TMP_BV_96_963|96> <TMP_BV_96_965|96>)) (== <TMP_BV_64_968|64> <TMP_BV_64_966|64>)) (== <TMP_BV_64_969|64> <TMP_BV_64_967|64>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
movl %edi, %ecx
movl %edi, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
nop 
nop 
nop 
nop 
addl %edx, %edi
salb $0x7, %dil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
movl %edx, %esi
movl (%r15,%rsi,1), %r8d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shrb %cl, %dl
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
.L_126820:
addl $0x4, %ecx
movq %r8, -0x4(%r15,%rcx,1)
addl $0x4, %edx
movq (%r15,%rdx,1), %r8
movl %r8d, %r9d
leaq -0x1010101(%r8), %rsi
negl %r9d
nop 
nop 
nop 
nop 
andq $0x80808080, %r9
andq %rsi, %r9
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
addl $0x1, %edx
movsbq -0x1(%r15,%rdx,1), %rsi
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
shlq $0x6, %rsi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
retq 
Total accesses: 18
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
------------------
0  |   0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 1 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 0 1 0 0 
7  |                 0 0 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 0 1 
9  |                     0 0 0 0 0 0 0 0 
10 |                       0 0 0 0 0 0 0 
11 |                         0 0 0 0 0 0 
12 |                           0 0 0 0 0 
13 |                             1 0 0 0 
14 |                               0 0 0 
15 |                                 0 0 
16 |                                   0 
17 |                                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 0 1 0 0 
4  |           0 0 0 0 0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 0 0 0 1 
7  |                 0 0 0 0 0 0 0 0 0 0 
8  |                   0 0 0 0 0 0 0 0 0 
9  |                     0 0 0 0 0 0 0 0 
10 |                       0 0 0 0 1 0 0 
11 |                         0 0 0 0 0 0 
12 |                           0 0 0 0 0 
13 |                             0 0 0 0 
14 |                               0 1 0 
15 |                                 0 1 
16 |                                   0 
17 |                                     

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 12)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 12)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 12)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 12)
Access 9 cell 0 offset 0 size 4 (cell size 12)
Access 10 cell 1 offset 0 size 8 (cell size 12)
Access 11 cell 2 offset 0 size 8 (cell size 8)
Access 12 cell 1 offset 4 size 8 (cell size 12)
Access 13 cell 3 offset 0 size 8 (cell size 8)
Access 14 cell 3 offset 0 size 1 (cell size 8)
Access 15 cell 1 offset 8 size 1 (cell size 12)
Access 16 cell 3 offset 1 size 1 (cell size 8)
Access 17 cell 1 offset 9 size 1 (cell size 12)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 12 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 12 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 12 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 12 / offset 9
REWRITE MAP:
28 -> 0 (size 4 / cell size 12 / offset 0
44 -> 1 (size 8 / cell size 12 / offset 0
46 -> 2 (size 8 / cell size 8 / offset 0
59 -> 1 (size 8 / cell size 12 / offset 4
61 -> 3 (size 8 / cell size 8 / offset 0
87 -> 3 (size 1 / cell size 8 / offset 0
89 -> 1 (size 1 / cell size 12 / offset 8
125 -> 3 (size 1 / cell size 8 / offset 1
127 -> 1 (size 1 / cell size 12 / offset 9
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_984|96> <TMP_BV_96_986|96>)) (== <TMP_BV_96_985|96> <TMP_BV_96_987|96>)) (== <TMP_BV_64_990|64> <TMP_BV_64_988|64>)) (== <TMP_BV_64_991|64> <TMP_BV_64_989|64>))

CONSTRAINTS

(not (not (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> <%rsi_2_INIT|64>[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0]) (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>)))[7:0] <0x0|8>)) (and (not (not (== (concat <0x0|1> (and <0x7|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <%rsi_2_INIT|64>[31:0]) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0] <0x0|32>)))))))
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_988|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_988|64>)[63:0]) <0x0|64>)
(== (plus (plus (sign-extend-64 <0xfffffffc|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(not (== (and (and (concat <0x0|32> -(concat <0x0|32> <TMP_BV_64_989|64>[31:0])[31:0]) (sign-extend-64 <0x80808080|32>)) (plus (sign-extend-64 <0xfefefeff|32>) <TMP_BV_64_989|64>)[63:0]) <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_989|64>[7:0])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>))))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x4|32>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (>> (concat <%rsi_2_INIT|64>[7:0] <0x0|1>) (concat <0x0|1> (and (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[7:0][7:0] <0x1f|8>)))[8:1])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (or (and (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (sign-extend-64 <TMP_BV_64_989|64>[15:8])) (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>)))[63:0] <0x0|64>)) (and (not (not (== (concat <0x0|57> (and <0x6|8>[7:0] <0x3f|8>))[7:0] <0x0|8>))) (== (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> <0x1|32>) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0])[31:0]))[31:0] <0x0|32>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_984|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_984|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_984|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_984|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_984|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_984|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_984|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_984|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_984|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_984|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_984|96> <TMP_BV_96_986|96>)) (== <TMP_BV_96_985|96> <TMP_BV_96_987|96>)) (== <TMP_BV_64_990|64> <TMP_BV_64_988|64>)) (== <TMP_BV_64_991|64> <TMP_BV_64_989|64>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> <%rdi_2_INIT|64>[31:0]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
Equivalent: yes
