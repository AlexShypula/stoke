time stoke debug verify --config verify.conf
Computing reference outputs for 0 testcases
Computing reference outputs for 0 testcases
Target                       Rewrite                        
                                                            
.strcpy:                     .strcpy:                       
movl %esi, %esi              nop                            
movl %edi, %eax              nop                            
movl %esi, %edi              nop                            
movq %rsi, %rdx              nop                            
movq %rax, %rcx              nop                            
orl %eax, %edi               movq %rsi, %rdx                
andl $0x3, %edi              movl %edi, %eax                
jne .L_126860                movq %rdi, %rcx                
movl %esi, %esi              andl $0x10, %esi               
movl (%r15,%rsi,1), %r8d     jne .L_126860                  
movl %r8d, %esi              xorl $0xfb, %esi               
leal -0x1010101(%r8), %edi   orb 0x4(%r15,%rsi,1), %sil     
notl %esi                    nop                            
andl %edi, %esi              nop                            
andl $0x80808080, %esi       nop                            
jne .L_126860                nop                            
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          nop                            
.L_126820:                   nop                            
addl $0x4, %edx              nop                            
movl %ecx, %ecx              nop                            
movl %r8d, (%r15,%rcx,1)     nop                            
addl $0x4, %ecx              nop                            
movl %edx, %edx              nop                            
movl (%r15,%rdx,1), %r8d     nop                            
movl %r8d, %r9d              nop                            
leal -0x1010101(%r8), %esi   nop                            
notl %r9d                    nop                            
nop                          nop                            
andl %esi, %r9d              nop                            
andl $0x80808080, %r9d       nop                            
je .L_126820                 nop                            
nop                          nop                            
nop                          jne .L_126860                  
nop                          .L_126820:                     
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          sall %cl, %eax                 
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          nop                            
.L_126860:                   nop                            
movl %edx, %edx              nop                            
movzbl (%r15,%rdx,1), %esi   nop                            
addl $0x1, %edx              nop                            
movl %ecx, %ecx              nop                            
movb %sil, (%r15,%rcx,1)     nop                            
addl $0x1, %ecx              nop                            
testb %sil, %sil             nop                            
jne .L_126860                nop                            
nop                          je .L_126820                   
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          nop                            
retq                         nop                            
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          subb %sil, %dl                 
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          nopl %eax                      
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          nop                            
nop                          nop                            
                             nop                            
                             nop                            
                             nop                            
                             nop                            
                             nop                            
                             nop                            
                             nop                            
                             nop                            
                             nop                            
                             nop                            
                             nop                            
                             nop                            
                             nop                            
                             .L_126860:                     
                             subl %ebp, %edx                
                             movsbq (%r15,%rdx,1), %rsi     
                             nop                            
                             nop                            
                             addb $0x1, %dl                 
                             nop                            
                             addl $0x1, %ecx                
                             movb %sil, -0x1(%r15,%rcx,1)   
                             testb %sil, %cl                
                             nop                            
                             nop                            
                             nop                            
                             nop                            
                             sarl $0xe0, %eax               
                             nop                            
                             nop                            
                             nop                            
                             nop                            
                             jne .L_126860                  
                             nop                            
                             nopl %eax                      
                             nop                            
                             nop                            
                             nop                            
                             nop                            
                             retq                           
                                                            
===========================================
Working on pair / P: 1 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 4
SAME MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 1 
2  |       0 
3  |         

NEXT MAP
     0 1 2 3 
------------------
0  |   0 0 0 
1  |     0 0 
2  |       0 
3  |         

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 1)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 2 offset 0 size 1 (cell size 1)
Access 3 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 1 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
13 -> 2 (size 1 / cell size 1 / offset 0
19 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_8_4|8> <TMP_BV_8_8|8>)) (== <TMP_BV_8_5|8> <TMP_BV_8_7|8>)) (== <TMP_BV_8_9|8> <TMP_BV_8_6|8>))

CONSTRAINTS

(not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_6|8>)[7:0]) <0x0|8>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_4|8>))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_4|8>))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_8_4|8> <TMP_BV_8_8|8>)) (== <TMP_BV_8_5|8> <TMP_BV_8_7|8>)) (== <TMP_BV_8_9|8> <TMP_BV_8_6|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 1 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 1)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 2 offset 0 size 1 (cell size 1)
Access 3 cell 3 offset 0 size 1 (cell size 1)
Access 4 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 1 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
44 -> 3 (size 1 / cell size 1 / offset 0
50 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_8_15|8> <TMP_BV_8_20|8>)) (== <TMP_BV_8_16|8> <TMP_BV_8_19|8>)) (== <TMP_BV_8_21|8> <TMP_BV_8_17|8>)) (== <TMP_BV_8_22|8> <TMP_BV_8_18|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_17|8>) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_18|8>)[7:0]) <0x0|8>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_15|8>))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_15|8>))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_8_15|8> <TMP_BV_8_20|8>)) (== <TMP_BV_8_16|8> <TMP_BV_8_19|8>)) (== <TMP_BV_8_21|8> <TMP_BV_8_17|8>)) (== <TMP_BV_8_22|8> <TMP_BV_8_18|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 0 0 
1  |     0 1 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 0 0 
1  |     0 0 0 1 
2  |       0 0 0 
3  |         0 1 
4  |           0 
5  |             

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 1)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 2 offset 0 size 1 (cell size 1)
Access 3 cell 1 offset 0 size 1 (cell size 2)
Access 4 cell 3 offset 0 size 1 (cell size 1)
Access 5 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 1 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
13 -> 2 (size 1 / cell size 1 / offset 0
19 -> 1 (size 1 / cell size 2 / offset 0
33 -> 3 (size 1 / cell size 1 / offset 0
39 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_8_29|8> <TMP_BV_8_34|8>)) (== <TMP_BV_16_30|16> <TMP_BV_16_32|16>)) (== <TMP_BV_8_35|8> <TMP_BV_8_31|8>)) (== <TMP_BV_8_36|8> <TMP_BV_8_33|8>))

CONSTRAINTS

(not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_31|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_33|8>)[7:0]) <0x0|8>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_29|8>))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_29|8>))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_8_29|8> <TMP_BV_8_34|8>)) (== <TMP_BV_16_30|16> <TMP_BV_16_32|16>)) (== <TMP_BV_8_35|8> <TMP_BV_8_31|8>)) (== <TMP_BV_8_36|8> <TMP_BV_8_33|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 1 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 0 1 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 1 
5  |             0 
6  |               

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 1 (cell size 1)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 2 offset 0 size 1 (cell size 1)
Access 3 cell 3 offset 0 size 1 (cell size 1)
Access 4 cell 1 offset 0 size 1 (cell size 2)
Access 5 cell 4 offset 0 size 1 (cell size 1)
Access 6 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 1 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
44 -> 3 (size 1 / cell size 1 / offset 0
50 -> 1 (size 1 / cell size 2 / offset 0
64 -> 4 (size 1 / cell size 1 / offset 0
70 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_8_44|8> <TMP_BV_8_50|8>)) (== <TMP_BV_16_45|16> <TMP_BV_16_48|16>)) (== <TMP_BV_8_51|8> <TMP_BV_8_46|8>)) (== <TMP_BV_8_52|8> <TMP_BV_8_47|8>)) (== <TMP_BV_8_53|8> <TMP_BV_8_49|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_46|8>) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_47|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_49|8>)[7:0]) <0x0|8>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_44|8>))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_44|8>))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_8_44|8> <TMP_BV_8_50|8>)) (== <TMP_BV_16_45|16> <TMP_BV_16_48|16>)) (== <TMP_BV_8_51|8> <TMP_BV_8_46|8>)) (== <TMP_BV_8_52|8> <TMP_BV_8_47|8>)) (== <TMP_BV_8_53|8> <TMP_BV_8_49|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 1 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 1)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 2 offset 0 size 1 (cell size 1)
Access 3 cell 3 offset 0 size 1 (cell size 1)
Access 4 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 1 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
99 -> 3 (size 1 / cell size 1 / offset 0
105 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_8_59|8> <TMP_BV_8_64|8>)) (== <TMP_BV_8_60|8> <TMP_BV_8_63|8>)) (== <TMP_BV_8_65|8> <TMP_BV_8_61|8>)) (== <TMP_BV_8_66|8> <TMP_BV_8_62|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_61|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_61|8>) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_61|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_61|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_62|8>)[7:0]) <0x0|8>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_59|8>))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_59|8>))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_8_59|8> <TMP_BV_8_64|8>)) (== <TMP_BV_8_60|8> <TMP_BV_8_63|8>)) (== <TMP_BV_8_65|8> <TMP_BV_8_61|8>)) (== <TMP_BV_8_66|8> <TMP_BV_8_62|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 1 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 0 1 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 1 
5  |             0 
6  |               

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 1 (cell size 1)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 2 offset 0 size 1 (cell size 1)
Access 3 cell 3 offset 0 size 1 (cell size 1)
Access 4 cell 1 offset 0 size 1 (cell size 2)
Access 5 cell 4 offset 0 size 1 (cell size 1)
Access 6 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 1 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
99 -> 3 (size 1 / cell size 1 / offset 0
105 -> 1 (size 1 / cell size 2 / offset 0
119 -> 4 (size 1 / cell size 1 / offset 0
125 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_8_74|8> <TMP_BV_8_80|8>)) (== <TMP_BV_16_75|16> <TMP_BV_16_78|16>)) (== <TMP_BV_8_81|8> <TMP_BV_8_76|8>)) (== <TMP_BV_8_82|8> <TMP_BV_8_77|8>)) (== <TMP_BV_8_83|8> <TMP_BV_8_79|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_76|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_76|8>) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_76|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_76|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_77|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_76|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_76|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_76|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_76|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_79|8>)[7:0]) <0x0|8>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_74|8>))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_74|8>))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_8_74|8> <TMP_BV_8_80|8>)) (== <TMP_BV_16_75|16> <TMP_BV_16_78|16>)) (== <TMP_BV_8_81|8> <TMP_BV_8_76|8>)) (== <TMP_BV_8_82|8> <TMP_BV_8_77|8>)) (== <TMP_BV_8_83|8> <TMP_BV_8_79|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 1 
2  |       0 0 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 1)
Access 1 cell 1 offset 0 size 1 (cell size 1)
Access 2 cell 2 offset 0 size 1 (cell size 1)
Access 3 cell 3 offset 0 size 1 (cell size 1)
Access 4 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 1 / offset 0
14 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
123 -> 3 (size 1 / cell size 1 / offset 0
129 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_8_89|8> <TMP_BV_8_94|8>)) (== <TMP_BV_8_90|8> <TMP_BV_8_93|8>)) (== <TMP_BV_8_95|8> <TMP_BV_8_91|8>)) (== <TMP_BV_8_96|8> <TMP_BV_8_92|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_91|8>) <0x0|8>)))
(or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_91|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_91|8>) <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_91|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_91|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_92|8>)[7:0]) <0x0|8>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_89|8>))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_89|8>))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_8_89|8> <TMP_BV_8_94|8>)) (== <TMP_BV_8_90|8> <TMP_BV_8_93|8>)) (== <TMP_BV_8_95|8> <TMP_BV_8_91|8>)) (== <TMP_BV_8_96|8> <TMP_BV_8_92|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 1 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 0 1 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 1 
5  |             0 
6  |               

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 1 (cell size 1)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 2 offset 0 size 1 (cell size 1)
Access 3 cell 3 offset 0 size 1 (cell size 1)
Access 4 cell 1 offset 0 size 1 (cell size 2)
Access 5 cell 4 offset 0 size 1 (cell size 1)
Access 6 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 1 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
123 -> 3 (size 1 / cell size 1 / offset 0
129 -> 1 (size 1 / cell size 2 / offset 0
143 -> 4 (size 1 / cell size 1 / offset 0
149 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_8_104|8> <TMP_BV_8_110|8>)) (== <TMP_BV_16_105|16> <TMP_BV_16_108|16>)) (== <TMP_BV_8_111|8> <TMP_BV_8_106|8>)) (== <TMP_BV_8_112|8> <TMP_BV_8_107|8>)) (== <TMP_BV_8_113|8> <TMP_BV_8_109|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_106|8>) <0x0|8>)))
(or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_106|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_106|8>) <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_106|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_106|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_107|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_106|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_106|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_106|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_106|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_109|8>)[7:0]) <0x0|8>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_104|8>))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_8_104|8>))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_8_104|8> <TMP_BV_8_110|8>)) (== <TMP_BV_16_105|16> <TMP_BV_16_108|16>)) (== <TMP_BV_8_111|8> <TMP_BV_8_106|8>)) (== <TMP_BV_8_112|8> <TMP_BV_8_107|8>)) (== <TMP_BV_8_113|8> <TMP_BV_8_109|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 5
SAME MAP
     0 1 2 3 4 
------------------
0  |   1 0 0 0 
1  |     0 0 0 
2  |       0 1 
3  |         0 
4  |           

NEXT MAP
     0 1 2 3 4 
------------------
0  |   0 0 0 0 
1  |     0 0 0 
2  |       0 0 
3  |         0 
4  |           

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 2 offset 0 size 1 (cell size 1)
Access 4 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
13 -> 2 (size 1 / cell size 1 / offset 0
19 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_119|32> <TMP_BV_32_123|32>)) (== <TMP_BV_8_120|8> <TMP_BV_8_122|8>)) (== <TMP_BV_8_124|8> <TMP_BV_8_121|8>))

CONSTRAINTS

(not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_121|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_119|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_119|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_119|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_119|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_119|32> <TMP_BV_32_123|32>)) (== <TMP_BV_8_120|8> <TMP_BV_8_122|8>)) (== <TMP_BV_8_124|8> <TMP_BV_8_121|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   1 0 0 0 0 
1  |     0 0 0 0 
2  |       0 0 1 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 0 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 2 offset 0 size 1 (cell size 1)
Access 4 cell 3 offset 0 size 1 (cell size 1)
Access 5 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
44 -> 3 (size 1 / cell size 1 / offset 0
50 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_131|32> <TMP_BV_32_136|32>)) (== <TMP_BV_8_132|8> <TMP_BV_8_135|8>)) (== <TMP_BV_8_137|8> <TMP_BV_8_133|8>)) (== <TMP_BV_8_138|8> <TMP_BV_8_134|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_133|8>) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_134|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_131|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_131|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_131|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_131|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_131|32> <TMP_BV_32_136|32>)) (== <TMP_BV_8_132|8> <TMP_BV_8_135|8>)) (== <TMP_BV_8_137|8> <TMP_BV_8_133|8>)) (== <TMP_BV_8_138|8> <TMP_BV_8_134|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   1 0 0 0 0 0 
1  |     0 0 0 0 0 
2  |       0 1 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 0 0 
2  |       0 0 0 1 
3  |         0 0 0 
4  |           0 1 
5  |             0 
6  |               

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 2 offset 0 size 1 (cell size 1)
Access 4 cell 1 offset 0 size 1 (cell size 2)
Access 5 cell 3 offset 0 size 1 (cell size 1)
Access 6 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
13 -> 2 (size 1 / cell size 1 / offset 0
19 -> 1 (size 1 / cell size 2 / offset 0
33 -> 3 (size 1 / cell size 1 / offset 0
39 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_146|32> <TMP_BV_32_151|32>)) (== <TMP_BV_16_147|16> <TMP_BV_16_149|16>)) (== <TMP_BV_8_152|8> <TMP_BV_8_148|8>)) (== <TMP_BV_8_153|8> <TMP_BV_8_150|8>))

CONSTRAINTS

(not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_148|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_150|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_146|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_146|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_146|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_146|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_146|32> <TMP_BV_32_151|32>)) (== <TMP_BV_16_147|16> <TMP_BV_16_149|16>)) (== <TMP_BV_8_152|8> <TMP_BV_8_148|8>)) (== <TMP_BV_8_153|8> <TMP_BV_8_150|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 
2  |       0 0 1 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 
2  |       0 0 0 0 1 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 1 
6  |               0 
7  |                 

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 2 offset 0 size 1 (cell size 1)
Access 4 cell 3 offset 0 size 1 (cell size 1)
Access 5 cell 1 offset 0 size 1 (cell size 2)
Access 6 cell 4 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
44 -> 3 (size 1 / cell size 1 / offset 0
50 -> 1 (size 1 / cell size 2 / offset 0
64 -> 4 (size 1 / cell size 1 / offset 0
70 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_32_162|32> <TMP_BV_32_168|32>)) (== <TMP_BV_16_163|16> <TMP_BV_16_166|16>)) (== <TMP_BV_8_169|8> <TMP_BV_8_164|8>)) (== <TMP_BV_8_170|8> <TMP_BV_8_165|8>)) (== <TMP_BV_8_171|8> <TMP_BV_8_167|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_164|8>) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_165|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_167|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_162|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_162|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_162|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_162|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_32_162|32> <TMP_BV_32_168|32>)) (== <TMP_BV_16_163|16> <TMP_BV_16_166|16>)) (== <TMP_BV_8_169|8> <TMP_BV_8_164|8>)) (== <TMP_BV_8_170|8> <TMP_BV_8_165|8>)) (== <TMP_BV_8_171|8> <TMP_BV_8_167|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   1 0 0 0 0 
1  |     0 0 0 0 
2  |       0 0 1 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 0 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 2 offset 0 size 1 (cell size 1)
Access 4 cell 3 offset 0 size 1 (cell size 1)
Access 5 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
99 -> 3 (size 1 / cell size 1 / offset 0
105 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_178|32> <TMP_BV_32_183|32>)) (== <TMP_BV_8_179|8> <TMP_BV_8_182|8>)) (== <TMP_BV_8_184|8> <TMP_BV_8_180|8>)) (== <TMP_BV_8_185|8> <TMP_BV_8_181|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_180|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_180|8>) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_180|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_180|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_181|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_178|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_178|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_178|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_178|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_178|32> <TMP_BV_32_183|32>)) (== <TMP_BV_8_179|8> <TMP_BV_8_182|8>)) (== <TMP_BV_8_184|8> <TMP_BV_8_180|8>)) (== <TMP_BV_8_185|8> <TMP_BV_8_181|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 
2  |       0 0 1 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 
2  |       0 0 0 0 1 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 1 
6  |               0 
7  |                 

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 2 offset 0 size 1 (cell size 1)
Access 4 cell 3 offset 0 size 1 (cell size 1)
Access 5 cell 1 offset 0 size 1 (cell size 2)
Access 6 cell 4 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
99 -> 3 (size 1 / cell size 1 / offset 0
105 -> 1 (size 1 / cell size 2 / offset 0
119 -> 4 (size 1 / cell size 1 / offset 0
125 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_32_194|32> <TMP_BV_32_200|32>)) (== <TMP_BV_16_195|16> <TMP_BV_16_198|16>)) (== <TMP_BV_8_201|8> <TMP_BV_8_196|8>)) (== <TMP_BV_8_202|8> <TMP_BV_8_197|8>)) (== <TMP_BV_8_203|8> <TMP_BV_8_199|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_196|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_196|8>) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_196|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_196|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_197|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_196|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_196|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_196|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_196|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_199|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_194|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_194|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_194|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_194|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_32_194|32> <TMP_BV_32_200|32>)) (== <TMP_BV_16_195|16> <TMP_BV_16_198|16>)) (== <TMP_BV_8_201|8> <TMP_BV_8_196|8>)) (== <TMP_BV_8_202|8> <TMP_BV_8_197|8>)) (== <TMP_BV_8_203|8> <TMP_BV_8_199|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   1 0 0 0 0 
1  |     0 0 0 0 
2  |       0 0 1 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 0 0 
1  |     0 0 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 1)
Access 3 cell 2 offset 0 size 1 (cell size 1)
Access 4 cell 3 offset 0 size 1 (cell size 1)
Access 5 cell 1 offset 0 size 1 (cell size 1)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 1 / offset 0
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
123 -> 3 (size 1 / cell size 1 / offset 0
129 -> 1 (size 1 / cell size 1 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_210|32> <TMP_BV_32_215|32>)) (== <TMP_BV_8_211|8> <TMP_BV_8_214|8>)) (== <TMP_BV_8_216|8> <TMP_BV_8_212|8>)) (== <TMP_BV_8_217|8> <TMP_BV_8_213|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_212|8>) <0x0|8>)))
(or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_212|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_212|8>) <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_212|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_212|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_213|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_210|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_210|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_210|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_210|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_210|32> <TMP_BV_32_215|32>)) (== <TMP_BV_8_211|8> <TMP_BV_8_214|8>)) (== <TMP_BV_8_216|8> <TMP_BV_8_212|8>)) (== <TMP_BV_8_217|8> <TMP_BV_8_213|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 
2  |       0 0 1 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 
2  |       0 0 0 0 1 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 1 
6  |               0 
7  |                 

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 2 offset 0 size 1 (cell size 1)
Access 4 cell 3 offset 0 size 1 (cell size 1)
Access 5 cell 1 offset 0 size 1 (cell size 2)
Access 6 cell 4 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
123 -> 3 (size 1 / cell size 1 / offset 0
129 -> 1 (size 1 / cell size 2 / offset 0
143 -> 4 (size 1 / cell size 1 / offset 0
149 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_32_226|32> <TMP_BV_32_232|32>)) (== <TMP_BV_16_227|16> <TMP_BV_16_230|16>)) (== <TMP_BV_8_233|8> <TMP_BV_8_228|8>)) (== <TMP_BV_8_234|8> <TMP_BV_8_229|8>)) (== <TMP_BV_8_235|8> <TMP_BV_8_231|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_228|8>) <0x0|8>)))
(or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_228|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_228|8>) <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_228|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_228|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_229|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_228|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_228|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_228|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_228|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_231|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_226|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_226|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_226|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_226|32>[7:0]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_32_226|32> <TMP_BV_32_232|32>)) (== <TMP_BV_16_227|16> <TMP_BV_16_230|16>)) (== <TMP_BV_8_233|8> <TMP_BV_8_228|8>)) (== <TMP_BV_8_234|8> <TMP_BV_8_229|8>)) (== <TMP_BV_8_235|8> <TMP_BV_8_231|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 6
SAME MAP
     0 1 2 3 4 5 
------------------
0  |   0 0 0 0 0 
1  |     0 0 0 1 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

NEXT MAP
     0 1 2 3 4 5 
------------------
0  |   0 1 0 0 0 
1  |     0 1 0 0 
2  |       0 0 0 
3  |         0 0 
4  |           0 
5  |             

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 2 offset 0 size 1 (cell size 1)
Access 5 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
13 -> 2 (size 1 / cell size 1 / offset 0
19 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_16_242|16> <TMP_BV_16_246|16>)) (== <TMP_BV_16_243|16> <TMP_BV_16_245|16>)) (== <TMP_BV_8_247|8> <TMP_BV_8_244|8>))

CONSTRAINTS

(not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_244|8>)[7:0]) <0x0|8>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_242|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_242|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_242|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_242|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_16_242|16> <TMP_BV_16_246|16>)) (== <TMP_BV_16_243|16> <TMP_BV_16_245|16>)) (== <TMP_BV_8_247|8> <TMP_BV_8_244|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 0 1 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 0 0 0 0 
1  |     0 1 0 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 2 offset 0 size 1 (cell size 1)
Access 5 cell 3 offset 0 size 1 (cell size 1)
Access 6 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
44 -> 3 (size 1 / cell size 1 / offset 0
50 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_16_255|16> <TMP_BV_16_260|16>)) (== <TMP_BV_16_256|16> <TMP_BV_16_259|16>)) (== <TMP_BV_8_261|8> <TMP_BV_8_257|8>)) (== <TMP_BV_8_262|8> <TMP_BV_8_258|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_257|8>) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_258|8>)[7:0]) <0x0|8>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_255|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_255|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_255|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_255|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_16_255|16> <TMP_BV_16_260|16>)) (== <TMP_BV_16_256|16> <TMP_BV_16_259|16>)) (== <TMP_BV_8_261|8> <TMP_BV_8_257|8>)) (== <TMP_BV_8_262|8> <TMP_BV_8_258|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 0 0 1 0 0 
2  |       0 0 0 0 0 
3  |         0 0 0 1 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 1 0 0 0 0 0 
1  |     0 1 0 0 0 1 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 1 
6  |               0 
7  |                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 2 offset 0 size 1 (cell size 1)
Access 5 cell 1 offset 0 size 1 (cell size 2)
Access 6 cell 3 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
13 -> 2 (size 1 / cell size 1 / offset 0
19 -> 1 (size 1 / cell size 2 / offset 0
33 -> 3 (size 1 / cell size 1 / offset 0
39 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_16_271|16> <TMP_BV_16_276|16>)) (== <TMP_BV_16_272|16> <TMP_BV_16_274|16>)) (== <TMP_BV_8_277|8> <TMP_BV_8_273|8>)) (== <TMP_BV_8_278|8> <TMP_BV_8_275|8>))

CONSTRAINTS

(not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_273|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_275|8>)[7:0]) <0x0|8>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_271|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_271|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_271|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_271|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_16_271|16> <TMP_BV_16_276|16>)) (== <TMP_BV_16_272|16> <TMP_BV_16_274|16>)) (== <TMP_BV_8_277|8> <TMP_BV_8_273|8>)) (== <TMP_BV_8_278|8> <TMP_BV_8_275|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 1 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 1 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 2 offset 0 size 1 (cell size 1)
Access 5 cell 3 offset 0 size 1 (cell size 1)
Access 6 cell 1 offset 0 size 1 (cell size 2)
Access 7 cell 4 offset 0 size 1 (cell size 1)
Access 8 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
44 -> 3 (size 1 / cell size 1 / offset 0
50 -> 1 (size 1 / cell size 2 / offset 0
64 -> 4 (size 1 / cell size 1 / offset 0
70 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_16_288|16> <TMP_BV_16_294|16>)) (== <TMP_BV_16_289|16> <TMP_BV_16_292|16>)) (== <TMP_BV_8_295|8> <TMP_BV_8_290|8>)) (== <TMP_BV_8_296|8> <TMP_BV_8_291|8>)) (== <TMP_BV_8_297|8> <TMP_BV_8_293|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_290|8>) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_291|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_293|8>)[7:0]) <0x0|8>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_288|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_288|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_288|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_288|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_16_288|16> <TMP_BV_16_294|16>)) (== <TMP_BV_16_289|16> <TMP_BV_16_292|16>)) (== <TMP_BV_8_295|8> <TMP_BV_8_290|8>)) (== <TMP_BV_8_296|8> <TMP_BV_8_291|8>)) (== <TMP_BV_8_297|8> <TMP_BV_8_293|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 0 1 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 0 0 0 0 
1  |     0 1 0 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 2 offset 0 size 1 (cell size 1)
Access 5 cell 3 offset 0 size 1 (cell size 1)
Access 6 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
99 -> 3 (size 1 / cell size 1 / offset 0
105 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_16_305|16> <TMP_BV_16_310|16>)) (== <TMP_BV_16_306|16> <TMP_BV_16_309|16>)) (== <TMP_BV_8_311|8> <TMP_BV_8_307|8>)) (== <TMP_BV_8_312|8> <TMP_BV_8_308|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_307|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_307|8>) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_307|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_307|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_308|8>)[7:0]) <0x0|8>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_305|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_305|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_305|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_305|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_16_305|16> <TMP_BV_16_310|16>)) (== <TMP_BV_16_306|16> <TMP_BV_16_309|16>)) (== <TMP_BV_8_311|8> <TMP_BV_8_307|8>)) (== <TMP_BV_8_312|8> <TMP_BV_8_308|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 1 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 1 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 2 offset 0 size 1 (cell size 1)
Access 5 cell 3 offset 0 size 1 (cell size 1)
Access 6 cell 1 offset 0 size 1 (cell size 2)
Access 7 cell 4 offset 0 size 1 (cell size 1)
Access 8 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
99 -> 3 (size 1 / cell size 1 / offset 0
105 -> 1 (size 1 / cell size 2 / offset 0
119 -> 4 (size 1 / cell size 1 / offset 0
125 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_16_322|16> <TMP_BV_16_328|16>)) (== <TMP_BV_16_323|16> <TMP_BV_16_326|16>)) (== <TMP_BV_8_329|8> <TMP_BV_8_324|8>)) (== <TMP_BV_8_330|8> <TMP_BV_8_325|8>)) (== <TMP_BV_8_331|8> <TMP_BV_8_327|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_324|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_324|8>) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_324|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_324|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_325|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_324|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_324|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_324|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_324|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_327|8>)[7:0]) <0x0|8>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_322|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_322|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_322|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_322|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_16_322|16> <TMP_BV_16_328|16>)) (== <TMP_BV_16_323|16> <TMP_BV_16_326|16>)) (== <TMP_BV_8_329|8> <TMP_BV_8_324|8>)) (== <TMP_BV_8_330|8> <TMP_BV_8_325|8>)) (== <TMP_BV_8_331|8> <TMP_BV_8_327|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 0 1 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 0 0 0 0 
1  |     0 1 0 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 2 offset 0 size 1 (cell size 1)
Access 5 cell 3 offset 0 size 1 (cell size 1)
Access 6 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
123 -> 3 (size 1 / cell size 1 / offset 0
129 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_16_339|16> <TMP_BV_16_344|16>)) (== <TMP_BV_16_340|16> <TMP_BV_16_343|16>)) (== <TMP_BV_8_345|8> <TMP_BV_8_341|8>)) (== <TMP_BV_8_346|8> <TMP_BV_8_342|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_341|8>) <0x0|8>)))
(or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_341|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_341|8>) <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_341|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_341|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_342|8>)[7:0]) <0x0|8>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_339|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_339|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_339|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_339|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_16_339|16> <TMP_BV_16_344|16>)) (== <TMP_BV_16_340|16> <TMP_BV_16_343|16>)) (== <TMP_BV_8_345|8> <TMP_BV_8_341|8>)) (== <TMP_BV_8_346|8> <TMP_BV_8_342|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 6 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 1 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 1 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 1 (cell size 2)
Access 1 cell 1 offset 0 size 1 (cell size 2)
Access 2 cell 0 offset 1 size 1 (cell size 2)
Access 3 cell 1 offset 1 size 1 (cell size 2)
Access 4 cell 2 offset 0 size 1 (cell size 1)
Access 5 cell 3 offset 0 size 1 (cell size 1)
Access 6 cell 1 offset 0 size 1 (cell size 2)
Access 7 cell 4 offset 0 size 1 (cell size 1)
Access 8 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
11 -> 0 (size 1 / cell size 2 / offset 0
14 -> 1 (size 1 / cell size 2 / offset 0
20 -> 0 (size 1 / cell size 2 / offset 1
23 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
123 -> 3 (size 1 / cell size 1 / offset 0
129 -> 1 (size 1 / cell size 2 / offset 0
143 -> 4 (size 1 / cell size 1 / offset 0
149 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_16_356|16> <TMP_BV_16_362|16>)) (== <TMP_BV_16_357|16> <TMP_BV_16_360|16>)) (== <TMP_BV_8_363|8> <TMP_BV_8_358|8>)) (== <TMP_BV_8_364|8> <TMP_BV_8_359|8>)) (== <TMP_BV_8_365|8> <TMP_BV_8_361|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_358|8>) <0x0|8>)))
(or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_358|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_358|8>) <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_358|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_358|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_359|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_358|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_358|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_358|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_358|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_361|8>)[7:0]) <0x0|8>)))))
(not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_356|16>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_356|16>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_356|16>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_16_356|16>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_16_356|16> <TMP_BV_16_362|16>)) (== <TMP_BV_16_357|16> <TMP_BV_16_360|16>)) (== <TMP_BV_8_363|8> <TMP_BV_8_358|8>)) (== <TMP_BV_8_364|8> <TMP_BV_8_359|8>)) (== <TMP_BV_8_365|8> <TMP_BV_8_361|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x2|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   1 0 0 0 0 0 
1  |     0 0 0 0 0 
2  |       0 0 0 1 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 1 0 0 0 
2  |       0 1 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
13 -> 2 (size 1 / cell size 1 / offset 0
19 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_32_373|32> <TMP_BV_32_377|32>)) (== <TMP_BV_16_374|16> <TMP_BV_16_376|16>)) (== <TMP_BV_8_378|8> <TMP_BV_8_375|8>))

CONSTRAINTS

(not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_375|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_373|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_373|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_373|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_373|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_373|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_373|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_32_373|32> <TMP_BV_32_377|32>)) (== <TMP_BV_16_374|16> <TMP_BV_16_376|16>)) (== <TMP_BV_8_378|8> <TMP_BV_8_375|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 
2  |       0 0 0 0 1 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 
2  |       0 1 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 3 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
44 -> 3 (size 1 / cell size 1 / offset 0
50 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_387|32> <TMP_BV_32_392|32>)) (== <TMP_BV_16_388|16> <TMP_BV_16_391|16>)) (== <TMP_BV_8_393|8> <TMP_BV_8_389|8>)) (== <TMP_BV_8_394|8> <TMP_BV_8_390|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_389|8>) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_390|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_387|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_387|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_387|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_387|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_387|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_387|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_387|32> <TMP_BV_32_392|32>)) (== <TMP_BV_16_388|16> <TMP_BV_16_391|16>)) (== <TMP_BV_8_393|8> <TMP_BV_8_389|8>)) (== <TMP_BV_8_394|8> <TMP_BV_8_390|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   1 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 
2  |       0 0 0 1 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 1 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 1 0 0 0 1 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 1 offset 0 size 1 (cell size 2)
Access 7 cell 3 offset 0 size 1 (cell size 1)
Access 8 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
13 -> 2 (size 1 / cell size 1 / offset 0
19 -> 1 (size 1 / cell size 2 / offset 0
33 -> 3 (size 1 / cell size 1 / offset 0
39 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_404|32> <TMP_BV_32_409|32>)) (== <TMP_BV_16_405|16> <TMP_BV_16_407|16>)) (== <TMP_BV_8_410|8> <TMP_BV_8_406|8>)) (== <TMP_BV_8_411|8> <TMP_BV_8_408|8>))

CONSTRAINTS

(not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_406|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_408|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_404|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_404|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_404|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_404|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_404|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_404|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_404|32> <TMP_BV_32_409|32>)) (== <TMP_BV_16_405|16> <TMP_BV_16_407|16>)) (== <TMP_BV_8_410|8> <TMP_BV_8_406|8>)) (== <TMP_BV_8_411|8> <TMP_BV_8_408|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   1 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 
2  |       0 0 0 0 1 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 1 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 1 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 1 
8  |                   0 
9  |                     

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 3 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 0 size 1 (cell size 2)
Access 8 cell 4 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
44 -> 3 (size 1 / cell size 1 / offset 0
50 -> 1 (size 1 / cell size 2 / offset 0
64 -> 4 (size 1 / cell size 1 / offset 0
70 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_32_422|32> <TMP_BV_32_428|32>)) (== <TMP_BV_16_423|16> <TMP_BV_16_426|16>)) (== <TMP_BV_8_429|8> <TMP_BV_8_424|8>)) (== <TMP_BV_8_430|8> <TMP_BV_8_425|8>)) (== <TMP_BV_8_431|8> <TMP_BV_8_427|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_424|8>) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_425|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_427|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_422|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_422|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_422|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_422|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_422|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_422|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_32_422|32> <TMP_BV_32_428|32>)) (== <TMP_BV_16_423|16> <TMP_BV_16_426|16>)) (== <TMP_BV_8_429|8> <TMP_BV_8_424|8>)) (== <TMP_BV_8_430|8> <TMP_BV_8_425|8>)) (== <TMP_BV_8_431|8> <TMP_BV_8_427|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 
2  |       0 0 0 0 1 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 
2  |       0 1 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 3 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
99 -> 3 (size 1 / cell size 1 / offset 0
105 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_440|32> <TMP_BV_32_445|32>)) (== <TMP_BV_16_441|16> <TMP_BV_16_444|16>)) (== <TMP_BV_8_446|8> <TMP_BV_8_442|8>)) (== <TMP_BV_8_447|8> <TMP_BV_8_443|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_442|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_442|8>) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_442|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_442|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_443|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_440|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_440|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_440|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_440|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_440|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_440|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_440|32> <TMP_BV_32_445|32>)) (== <TMP_BV_16_441|16> <TMP_BV_16_444|16>)) (== <TMP_BV_8_446|8> <TMP_BV_8_442|8>)) (== <TMP_BV_8_447|8> <TMP_BV_8_443|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   1 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 
2  |       0 0 0 0 1 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 1 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 1 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 1 
8  |                   0 
9  |                     

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 3 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 0 size 1 (cell size 2)
Access 8 cell 4 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
99 -> 3 (size 1 / cell size 1 / offset 0
105 -> 1 (size 1 / cell size 2 / offset 0
119 -> 4 (size 1 / cell size 1 / offset 0
125 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_32_458|32> <TMP_BV_32_464|32>)) (== <TMP_BV_16_459|16> <TMP_BV_16_462|16>)) (== <TMP_BV_8_465|8> <TMP_BV_8_460|8>)) (== <TMP_BV_8_466|8> <TMP_BV_8_461|8>)) (== <TMP_BV_8_467|8> <TMP_BV_8_463|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_460|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_460|8>) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_460|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_460|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_461|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_460|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_460|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_460|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_460|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_463|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_458|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_458|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_458|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_458|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_458|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_458|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_32_458|32> <TMP_BV_32_464|32>)) (== <TMP_BV_16_459|16> <TMP_BV_16_462|16>)) (== <TMP_BV_8_465|8> <TMP_BV_8_460|8>)) (== <TMP_BV_8_466|8> <TMP_BV_8_461|8>)) (== <TMP_BV_8_467|8> <TMP_BV_8_463|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   1 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 
2  |       0 0 0 0 1 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 
2  |       0 1 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 3 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 0 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
123 -> 3 (size 1 / cell size 1 / offset 0
129 -> 1 (size 1 / cell size 2 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_32_476|32> <TMP_BV_32_481|32>)) (== <TMP_BV_16_477|16> <TMP_BV_16_480|16>)) (== <TMP_BV_8_482|8> <TMP_BV_8_478|8>)) (== <TMP_BV_8_483|8> <TMP_BV_8_479|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_478|8>) <0x0|8>)))
(or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_478|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_478|8>) <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_478|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_478|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_479|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_476|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_476|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_476|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_476|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_476|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_476|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_32_476|32> <TMP_BV_32_481|32>)) (== <TMP_BV_16_477|16> <TMP_BV_16_480|16>)) (== <TMP_BV_8_482|8> <TMP_BV_8_478|8>)) (== <TMP_BV_8_483|8> <TMP_BV_8_479|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 6 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   1 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 
2  |       0 0 0 0 1 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 1 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 0 0 0 0 1 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 1 
8  |                   0 
9  |                     

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 4)
Access 1 cell 0 offset 0 size 1 (cell size 4)
Access 2 cell 1 offset 0 size 1 (cell size 2)
Access 3 cell 0 offset 1 size 1 (cell size 4)
Access 4 cell 1 offset 1 size 1 (cell size 2)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 3 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 0 size 1 (cell size 2)
Access 8 cell 4 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 1 size 1 (cell size 2)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 4 / offset 0
19 -> 0 (size 1 / cell size 4 / offset 0
22 -> 1 (size 1 / cell size 2 / offset 0
28 -> 0 (size 1 / cell size 4 / offset 1
31 -> 1 (size 1 / cell size 2 / offset 1
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
123 -> 3 (size 1 / cell size 1 / offset 0
129 -> 1 (size 1 / cell size 2 / offset 0
143 -> 4 (size 1 / cell size 1 / offset 0
149 -> 1 (size 1 / cell size 2 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_32_494|32> <TMP_BV_32_500|32>)) (== <TMP_BV_16_495|16> <TMP_BV_16_498|16>)) (== <TMP_BV_8_501|8> <TMP_BV_8_496|8>)) (== <TMP_BV_8_502|8> <TMP_BV_8_497|8>)) (== <TMP_BV_8_503|8> <TMP_BV_8_499|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_496|8>) <0x0|8>)))
(or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_496|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_496|8>) <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_496|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_496|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_497|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_496|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_496|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_496|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_496|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_499|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_32_494|32>)[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_32_494|32>))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_494|32>[7:0]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_494|32>[7:0]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x1|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_494|32>[15:8]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_32_494|32>[15:8]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_32_494|32> <TMP_BV_32_500|32>)) (== <TMP_BV_16_495|16> <TMP_BV_16_498|16>)) (== <TMP_BV_8_501|8> <TMP_BV_8_496|8>)) (== <TMP_BV_8_502|8> <TMP_BV_8_497|8>)) (== <TMP_BV_8_503|8> <TMP_BV_8_499|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffbd|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x4|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbf|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x2|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 7
SAME MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 0 0 0 0 0 
1  |     0 0 0 0 1 
2  |       1 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

NEXT MAP
     0 1 2 3 4 5 6 
------------------
0  |   0 1 1 0 0 0 
1  |     0 0 1 0 0 
2  |       0 0 0 0 
3  |         0 0 0 
4  |           0 0 
5  |             0 
6  |               

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 1 offset 0 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
13 -> 2 (size 1 / cell size 1 / offset 0
19 -> 1 (size 1 / cell size 5 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_510|64> <TMP_BV_64_514|64>)) (== <TMP_BV_40_511|40> <TMP_BV_40_513|40>)) (== <TMP_BV_8_515|8> <TMP_BV_8_512|8>))

CONSTRAINTS

(not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_512|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_510|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_510|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_510|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_510|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_510|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_510|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_510|64> <TMP_BV_64_514|64>)) (== <TMP_BV_40_511|40> <TMP_BV_40_513|40>)) (== <TMP_BV_8_515|8> <TMP_BV_8_512|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 0 0 0 0 1 
2  |       1 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 1 1 0 0 0 0 
1  |     0 0 1 0 0 0 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 3 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 0 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
44 -> 3 (size 1 / cell size 1 / offset 0
50 -> 1 (size 1 / cell size 5 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_523|64> <TMP_BV_64_528|64>)) (== <TMP_BV_40_524|40> <TMP_BV_40_527|40>)) (== <TMP_BV_8_529|8> <TMP_BV_8_525|8>)) (== <TMP_BV_8_530|8> <TMP_BV_8_526|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_525|8>) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_526|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_523|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_523|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_523|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_523|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_523|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_523|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_523|64> <TMP_BV_64_528|64>)) (== <TMP_BV_40_524|40> <TMP_BV_40_527|40>)) (== <TMP_BV_8_529|8> <TMP_BV_8_525|8>)) (== <TMP_BV_8_530|8> <TMP_BV_8_526|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 1 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 1 
7  |                 0 
8  |                   

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 1 offset 0 size 1 (cell size 5)
Access 7 cell 3 offset 0 size 1 (cell size 1)
Access 8 cell 1 offset 1 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
13 -> 2 (size 1 / cell size 1 / offset 0
19 -> 1 (size 1 / cell size 5 / offset 0
33 -> 3 (size 1 / cell size 1 / offset 0
39 -> 1 (size 1 / cell size 5 / offset 1
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_539|64> <TMP_BV_64_544|64>)) (== <TMP_BV_40_540|40> <TMP_BV_40_542|40>)) (== <TMP_BV_8_545|8> <TMP_BV_8_541|8>)) (== <TMP_BV_8_546|8> <TMP_BV_8_543|8>))

CONSTRAINTS

(not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_541|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_543|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_539|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_539|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_539|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_539|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_539|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_539|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_539|64> <TMP_BV_64_544|64>)) (== <TMP_BV_40_540|40> <TMP_BV_40_542|40>)) (== <TMP_BV_8_545|8> <TMP_BV_8_541|8>)) (== <TMP_BV_8_546|8> <TMP_BV_8_543|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 1 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 1 
8  |                   0 
9  |                     

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 3 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 0 size 1 (cell size 5)
Access 8 cell 4 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 1 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
44 -> 3 (size 1 / cell size 1 / offset 0
50 -> 1 (size 1 / cell size 5 / offset 0
64 -> 4 (size 1 / cell size 1 / offset 0
70 -> 1 (size 1 / cell size 5 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_64_556|64> <TMP_BV_64_562|64>)) (== <TMP_BV_40_557|40> <TMP_BV_40_560|40>)) (== <TMP_BV_8_563|8> <TMP_BV_8_558|8>)) (== <TMP_BV_8_564|8> <TMP_BV_8_559|8>)) (== <TMP_BV_8_565|8> <TMP_BV_8_561|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_558|8>) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_559|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_561|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_556|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_556|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_556|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_556|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_556|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_556|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_64_556|64> <TMP_BV_64_562|64>)) (== <TMP_BV_40_557|40> <TMP_BV_40_560|40>)) (== <TMP_BV_8_563|8> <TMP_BV_8_558|8>)) (== <TMP_BV_8_564|8> <TMP_BV_8_559|8>)) (== <TMP_BV_8_565|8> <TMP_BV_8_561|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 0 0 0 0 1 
2  |       1 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 1 1 0 0 0 0 
1  |     0 0 1 0 0 0 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 3 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 0 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
99 -> 3 (size 1 / cell size 1 / offset 0
105 -> 1 (size 1 / cell size 5 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_573|64> <TMP_BV_64_578|64>)) (== <TMP_BV_40_574|40> <TMP_BV_40_577|40>)) (== <TMP_BV_8_579|8> <TMP_BV_8_575|8>)) (== <TMP_BV_8_580|8> <TMP_BV_8_576|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_575|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_575|8>) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_575|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_575|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_576|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_573|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_573|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_573|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_573|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_573|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_573|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_573|64> <TMP_BV_64_578|64>)) (== <TMP_BV_40_574|40> <TMP_BV_40_577|40>)) (== <TMP_BV_8_579|8> <TMP_BV_8_575|8>)) (== <TMP_BV_8_580|8> <TMP_BV_8_576|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 1 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 1 
8  |                   0 
9  |                     

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 3 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 0 size 1 (cell size 5)
Access 8 cell 4 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 1 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
99 -> 3 (size 1 / cell size 1 / offset 0
105 -> 1 (size 1 / cell size 5 / offset 0
119 -> 4 (size 1 / cell size 1 / offset 0
125 -> 1 (size 1 / cell size 5 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_64_590|64> <TMP_BV_64_596|64>)) (== <TMP_BV_40_591|40> <TMP_BV_40_594|40>)) (== <TMP_BV_8_597|8> <TMP_BV_8_592|8>)) (== <TMP_BV_8_598|8> <TMP_BV_8_593|8>)) (== <TMP_BV_8_599|8> <TMP_BV_8_595|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_592|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_592|8>) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_592|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_592|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_593|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_592|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_592|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_592|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_592|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_595|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_590|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_590|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_590|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_590|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_590|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_590|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_64_590|64> <TMP_BV_64_596|64>)) (== <TMP_BV_40_591|40> <TMP_BV_40_594|40>)) (== <TMP_BV_8_597|8> <TMP_BV_8_592|8>)) (== <TMP_BV_8_598|8> <TMP_BV_8_593|8>)) (== <TMP_BV_8_599|8> <TMP_BV_8_595|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 8
SAME MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 0 0 0 0 0 0 
1  |     0 0 0 0 0 1 
2  |       1 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

NEXT MAP
     0 1 2 3 4 5 6 7 
------------------
0  |   0 1 1 0 0 0 0 
1  |     0 0 1 0 0 0 
2  |       0 0 0 0 0 
3  |         0 0 0 0 
4  |           0 0 0 
5  |             0 0 
6  |               0 
7  |                 

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 3 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 0 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
123 -> 3 (size 1 / cell size 1 / offset 0
129 -> 1 (size 1 / cell size 5 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_607|64> <TMP_BV_64_612|64>)) (== <TMP_BV_40_608|40> <TMP_BV_40_611|40>)) (== <TMP_BV_8_613|8> <TMP_BV_8_609|8>)) (== <TMP_BV_8_614|8> <TMP_BV_8_610|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_609|8>) <0x0|8>)))
(or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_609|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_609|8>) <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_609|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_609|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_610|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_607|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_607|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_607|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_607|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_607|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_607|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_607|64> <TMP_BV_64_612|64>)) (== <TMP_BV_40_608|40> <TMP_BV_40_611|40>)) (== <TMP_BV_8_613|8> <TMP_BV_8_609|8>)) (== <TMP_BV_8_614|8> <TMP_BV_8_610|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 1 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 1 
8  |                   0 
9  |                     

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 5)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 5)
Access 5 cell 2 offset 0 size 1 (cell size 1)
Access 6 cell 3 offset 0 size 1 (cell size 1)
Access 7 cell 1 offset 0 size 1 (cell size 5)
Access 8 cell 4 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 1 size 1 (cell size 5)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 5 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 5 / offset 4
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
123 -> 3 (size 1 / cell size 1 / offset 0
129 -> 1 (size 1 / cell size 5 / offset 0
143 -> 4 (size 1 / cell size 1 / offset 0
149 -> 1 (size 1 / cell size 5 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_64_624|64> <TMP_BV_64_630|64>)) (== <TMP_BV_40_625|40> <TMP_BV_40_628|40>)) (== <TMP_BV_8_631|8> <TMP_BV_8_626|8>)) (== <TMP_BV_8_632|8> <TMP_BV_8_627|8>)) (== <TMP_BV_8_633|8> <TMP_BV_8_629|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_626|8>) <0x0|8>)))
(or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_626|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_626|8>) <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_626|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_626|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_627|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_626|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_626|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_626|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_626|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_629|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_624|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_624|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_624|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_624|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_624|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_624|64>[39:32]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_64_624|64> <TMP_BV_64_630|64>)) (== <TMP_BV_40_625|40> <TMP_BV_40_628|40>)) (== <TMP_BV_8_631|8> <TMP_BV_8_626|8>)) (== <TMP_BV_8_632|8> <TMP_BV_8_627|8>)) (== <TMP_BV_8_633|8> <TMP_BV_8_629|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbc|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x5|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 
2  |       1 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 1 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 
2  |       0 0 0 0 0 0 
3  |         0 1 0 0 0 
4  |           0 1 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 1 offset 0 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
13 -> 2 (size 1 / cell size 1 / offset 0
19 -> 1 (size 1 / cell size 6 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_64_642|64> <TMP_BV_64_646|64>)) (== <TMP_BV_48_643|48> <TMP_BV_48_645|48>)) (== <TMP_BV_8_647|8> <TMP_BV_8_644|8>))

CONSTRAINTS

(not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_644|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_642|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_642|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_642|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_642|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_642|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_642|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_642|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_642|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_64_642|64> <TMP_BV_64_646|64>)) (== <TMP_BV_48_643|48> <TMP_BV_48_645|48>)) (== <TMP_BV_8_647|8> <TMP_BV_8_644|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 1 
2  |       1 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 1 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 
4  |           0 1 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 3 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 0 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
44 -> 3 (size 1 / cell size 1 / offset 0
50 -> 1 (size 1 / cell size 6 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_657|64> <TMP_BV_64_662|64>)) (== <TMP_BV_48_658|48> <TMP_BV_48_661|48>)) (== <TMP_BV_8_663|8> <TMP_BV_8_659|8>)) (== <TMP_BV_8_664|8> <TMP_BV_8_660|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_659|8>) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_660|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_657|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_657|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_657|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_657|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_657|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_657|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_657|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_657|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_657|64> <TMP_BV_64_662|64>)) (== <TMP_BV_48_658|48> <TMP_BV_48_661|48>)) (== <TMP_BV_8_663|8> <TMP_BV_8_659|8>)) (== <TMP_BV_8_664|8> <TMP_BV_8_660|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 
4  |           0 1 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 1 offset 0 size 1 (cell size 6)
Access 9 cell 3 offset 0 size 1 (cell size 1)
Access 10 cell 1 offset 1 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
13 -> 2 (size 1 / cell size 1 / offset 0
19 -> 1 (size 1 / cell size 6 / offset 0
33 -> 3 (size 1 / cell size 1 / offset 0
39 -> 1 (size 1 / cell size 6 / offset 1
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_675|64> <TMP_BV_64_680|64>)) (== <TMP_BV_48_676|48> <TMP_BV_48_678|48>)) (== <TMP_BV_8_681|8> <TMP_BV_8_677|8>)) (== <TMP_BV_8_682|8> <TMP_BV_8_679|8>))

CONSTRAINTS

(not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_677|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_679|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_675|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_675|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_675|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_675|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_675|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_675|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_675|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_675|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_675|64> <TMP_BV_64_680|64>)) (== <TMP_BV_48_676|48> <TMP_BV_48_678|48>)) (== <TMP_BV_8_681|8> <TMP_BV_8_677|8>)) (== <TMP_BV_8_682|8> <TMP_BV_8_679|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 1 
10 |                       0 
11 |                         

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 3 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 0 size 1 (cell size 6)
Access 10 cell 4 offset 0 size 1 (cell size 1)
Access 11 cell 1 offset 1 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
44 -> 3 (size 1 / cell size 1 / offset 0
50 -> 1 (size 1 / cell size 6 / offset 0
64 -> 4 (size 1 / cell size 1 / offset 0
70 -> 1 (size 1 / cell size 6 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_64_694|64> <TMP_BV_64_700|64>)) (== <TMP_BV_48_695|48> <TMP_BV_48_698|48>)) (== <TMP_BV_8_701|8> <TMP_BV_8_696|8>)) (== <TMP_BV_8_702|8> <TMP_BV_8_697|8>)) (== <TMP_BV_8_703|8> <TMP_BV_8_699|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_696|8>) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_697|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_699|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_694|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_694|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_694|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_694|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_694|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_694|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_694|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_694|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_64_694|64> <TMP_BV_64_700|64>)) (== <TMP_BV_48_695|48> <TMP_BV_48_698|48>)) (== <TMP_BV_8_701|8> <TMP_BV_8_696|8>)) (== <TMP_BV_8_702|8> <TMP_BV_8_697|8>)) (== <TMP_BV_8_703|8> <TMP_BV_8_699|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 1 
2  |       1 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 1 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 
4  |           0 1 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 3 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 0 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
99 -> 3 (size 1 / cell size 1 / offset 0
105 -> 1 (size 1 / cell size 6 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_713|64> <TMP_BV_64_718|64>)) (== <TMP_BV_48_714|48> <TMP_BV_48_717|48>)) (== <TMP_BV_8_719|8> <TMP_BV_8_715|8>)) (== <TMP_BV_8_720|8> <TMP_BV_8_716|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_715|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_715|8>) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_715|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_715|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_716|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_713|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_713|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_713|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_713|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_713|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_713|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_713|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_713|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_713|64> <TMP_BV_64_718|64>)) (== <TMP_BV_48_714|48> <TMP_BV_48_717|48>)) (== <TMP_BV_8_719|8> <TMP_BV_8_715|8>)) (== <TMP_BV_8_720|8> <TMP_BV_8_716|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 1 
10 |                       0 
11 |                         

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 3 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 0 size 1 (cell size 6)
Access 10 cell 4 offset 0 size 1 (cell size 1)
Access 11 cell 1 offset 1 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
99 -> 3 (size 1 / cell size 1 / offset 0
105 -> 1 (size 1 / cell size 6 / offset 0
119 -> 4 (size 1 / cell size 1 / offset 0
125 -> 1 (size 1 / cell size 6 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_64_732|64> <TMP_BV_64_738|64>)) (== <TMP_BV_48_733|48> <TMP_BV_48_736|48>)) (== <TMP_BV_8_739|8> <TMP_BV_8_734|8>)) (== <TMP_BV_8_740|8> <TMP_BV_8_735|8>)) (== <TMP_BV_8_741|8> <TMP_BV_8_737|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_734|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_734|8>) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_734|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_734|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_735|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_734|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_734|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_734|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_734|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_737|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_732|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_732|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_732|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_732|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_732|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_732|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_732|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_732|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_64_732|64> <TMP_BV_64_738|64>)) (== <TMP_BV_48_733|48> <TMP_BV_48_736|48>)) (== <TMP_BV_8_739|8> <TMP_BV_8_734|8>)) (== <TMP_BV_8_740|8> <TMP_BV_8_735|8>)) (== <TMP_BV_8_741|8> <TMP_BV_8_737|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 1 
2  |       1 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 1 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 
4  |           0 1 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 3 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 0 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
123 -> 3 (size 1 / cell size 1 / offset 0
129 -> 1 (size 1 / cell size 6 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_64_751|64> <TMP_BV_64_756|64>)) (== <TMP_BV_48_752|48> <TMP_BV_48_755|48>)) (== <TMP_BV_8_757|8> <TMP_BV_8_753|8>)) (== <TMP_BV_8_758|8> <TMP_BV_8_754|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_753|8>) <0x0|8>)))
(or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_753|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_753|8>) <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_753|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_753|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_754|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_751|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_751|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_751|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_751|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_751|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_751|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_751|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_751|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_64_751|64> <TMP_BV_64_756|64>)) (== <TMP_BV_48_752|48> <TMP_BV_48_755|48>)) (== <TMP_BV_8_757|8> <TMP_BV_8_753|8>)) (== <TMP_BV_8_758|8> <TMP_BV_8_754|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 5 6 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 1 0 0 
2  |       1 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 1 0 0 0 0 0 0 0 0 
1  |     0 0 1 0 0 0 0 0 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 1 0 0 0 0 0 0 
4  |           0 1 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 1 
10 |                       0 
11 |                         

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 8)
Access 1 cell 1 offset 0 size 4 (cell size 6)
Access 2 cell 0 offset 4 size 4 (cell size 8)
Access 3 cell 0 offset 4 size 1 (cell size 8)
Access 4 cell 1 offset 4 size 1 (cell size 6)
Access 5 cell 0 offset 5 size 1 (cell size 8)
Access 6 cell 1 offset 5 size 1 (cell size 6)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 3 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 0 size 1 (cell size 6)
Access 10 cell 4 offset 0 size 1 (cell size 1)
Access 11 cell 1 offset 1 size 1 (cell size 6)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 8 / offset 0
29 -> 1 (size 4 / cell size 6 / offset 0
32 -> 0 (size 4 / cell size 8 / offset 4
58 -> 0 (size 1 / cell size 8 / offset 4
61 -> 1 (size 1 / cell size 6 / offset 4
67 -> 0 (size 1 / cell size 8 / offset 5
70 -> 1 (size 1 / cell size 6 / offset 5
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
123 -> 3 (size 1 / cell size 1 / offset 0
129 -> 1 (size 1 / cell size 6 / offset 0
143 -> 4 (size 1 / cell size 1 / offset 0
149 -> 1 (size 1 / cell size 6 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_64_770|64> <TMP_BV_64_776|64>)) (== <TMP_BV_48_771|48> <TMP_BV_48_774|48>)) (== <TMP_BV_8_777|8> <TMP_BV_8_772|8>)) (== <TMP_BV_8_778|8> <TMP_BV_8_773|8>)) (== <TMP_BV_8_779|8> <TMP_BV_8_775|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_772|8>) <0x0|8>)))
(or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_772|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_772|8>) <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_772|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_772|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_773|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_772|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_772|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_772|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_772|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_775|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_770|64>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_770|64>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_64_770|64>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_64_770|64>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_770|64>[39:32]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_770|64>[39:32]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x5|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x5|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_770|64>[47:40]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_64_770|64>[47:40]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_64_770|64> <TMP_BV_64_776|64>)) (== <TMP_BV_48_771|48> <TMP_BV_48_774|48>)) (== <TMP_BV_8_777|8> <TMP_BV_8_772|8>)) (== <TMP_BV_8_778|8> <TMP_BV_8_773|8>)) (== <TMP_BV_8_779|8> <TMP_BV_8_775|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb9|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0x8|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffbb|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x6|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 9
SAME MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 
3  |         0 0 0 0 0 
4  |           1 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

NEXT MAP
     0 1 2 3 4 5 6 7 8 
------------------
0  |   0 1 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 
2  |       0 1 1 0 0 0 
3  |         0 0 1 0 0 
4  |           0 0 0 0 
5  |             0 0 0 
6  |               0 0 
7  |                 0 
8  |                   

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 1 offset 0 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
13 -> 2 (size 1 / cell size 1 / offset 0
19 -> 1 (size 1 / cell size 9 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_787|96> <TMP_BV_96_791|96>)) (== <TMP_BV_72_788|72> <TMP_BV_72_790|72>)) (== <TMP_BV_8_792|8> <TMP_BV_8_789|8>))

CONSTRAINTS

(not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_789|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_787|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_787|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_787|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_787|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_787|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_787|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_787|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_787|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_787|96> <TMP_BV_96_791|96>)) (== <TMP_BV_72_788|72> <TMP_BV_72_790|72>)) (== <TMP_BV_8_792|8> <TMP_BV_8_789|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           1 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 
3  |         0 0 1 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 3 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 0 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
44 -> 3 (size 1 / cell size 1 / offset 0
50 -> 1 (size 1 / cell size 9 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_801|96> <TMP_BV_96_806|96>)) (== <TMP_BV_72_802|72> <TMP_BV_72_805|72>)) (== <TMP_BV_8_807|8> <TMP_BV_8_803|8>)) (== <TMP_BV_8_808|8> <TMP_BV_8_804|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_803|8>) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_804|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_801|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_801|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_801|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_801|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_801|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_801|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_801|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_801|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_801|96> <TMP_BV_96_806|96>)) (== <TMP_BV_72_802|72> <TMP_BV_72_805|72>)) (== <TMP_BV_8_807|8> <TMP_BV_8_803|8>)) (== <TMP_BV_8_808|8> <TMP_BV_8_804|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 1 
9  |                     0 
10 |                       

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 1 offset 0 size 1 (cell size 9)
Access 9 cell 3 offset 0 size 1 (cell size 1)
Access 10 cell 1 offset 1 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
13 -> 2 (size 1 / cell size 1 / offset 0
19 -> 1 (size 1 / cell size 9 / offset 0
33 -> 3 (size 1 / cell size 1 / offset 0
39 -> 1 (size 1 / cell size 9 / offset 1
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_818|96> <TMP_BV_96_823|96>)) (== <TMP_BV_72_819|72> <TMP_BV_72_821|72>)) (== <TMP_BV_8_824|8> <TMP_BV_8_820|8>)) (== <TMP_BV_8_825|8> <TMP_BV_8_822|8>))

CONSTRAINTS

(not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_820|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_822|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_818|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_818|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_818|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_818|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_818|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_818|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_818|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_818|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_818|96> <TMP_BV_96_823|96>)) (== <TMP_BV_72_819|72> <TMP_BV_72_821|72>)) (== <TMP_BV_8_824|8> <TMP_BV_8_820|8>)) (== <TMP_BV_8_825|8> <TMP_BV_8_822|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 1 
10 |                       0 
11 |                         

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 3 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 0 size 1 (cell size 9)
Access 10 cell 4 offset 0 size 1 (cell size 1)
Access 11 cell 1 offset 1 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
44 -> 3 (size 1 / cell size 1 / offset 0
50 -> 1 (size 1 / cell size 9 / offset 0
64 -> 4 (size 1 / cell size 1 / offset 0
70 -> 1 (size 1 / cell size 9 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_96_836|96> <TMP_BV_96_842|96>)) (== <TMP_BV_72_837|72> <TMP_BV_72_840|72>)) (== <TMP_BV_8_843|8> <TMP_BV_8_838|8>)) (== <TMP_BV_8_844|8> <TMP_BV_8_839|8>)) (== <TMP_BV_8_845|8> <TMP_BV_8_841|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_838|8>) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_839|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_841|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_836|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_836|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_836|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_836|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_836|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_836|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_836|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_836|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_96_836|96> <TMP_BV_96_842|96>)) (== <TMP_BV_72_837|72> <TMP_BV_72_840|72>)) (== <TMP_BV_8_843|8> <TMP_BV_8_838|8>)) (== <TMP_BV_8_844|8> <TMP_BV_8_839|8>)) (== <TMP_BV_8_845|8> <TMP_BV_8_841|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           1 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 
3  |         0 0 1 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 3 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 0 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
99 -> 3 (size 1 / cell size 1 / offset 0
105 -> 1 (size 1 / cell size 9 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_854|96> <TMP_BV_96_859|96>)) (== <TMP_BV_72_855|72> <TMP_BV_72_858|72>)) (== <TMP_BV_8_860|8> <TMP_BV_8_856|8>)) (== <TMP_BV_8_861|8> <TMP_BV_8_857|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_856|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_856|8>) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_856|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_856|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_857|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_854|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_854|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_854|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_854|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_854|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_854|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_854|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_854|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_854|96> <TMP_BV_96_859|96>)) (== <TMP_BV_72_855|72> <TMP_BV_72_858|72>)) (== <TMP_BV_8_860|8> <TMP_BV_8_856|8>)) (== <TMP_BV_8_861|8> <TMP_BV_8_857|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 1 
10 |                       0 
11 |                         

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 3 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 0 size 1 (cell size 9)
Access 10 cell 4 offset 0 size 1 (cell size 1)
Access 11 cell 1 offset 1 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
99 -> 3 (size 1 / cell size 1 / offset 0
105 -> 1 (size 1 / cell size 9 / offset 0
119 -> 4 (size 1 / cell size 1 / offset 0
125 -> 1 (size 1 / cell size 9 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_96_872|96> <TMP_BV_96_878|96>)) (== <TMP_BV_72_873|72> <TMP_BV_72_876|72>)) (== <TMP_BV_8_879|8> <TMP_BV_8_874|8>)) (== <TMP_BV_8_880|8> <TMP_BV_8_875|8>)) (== <TMP_BV_8_881|8> <TMP_BV_8_877|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_874|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_874|8>) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_874|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_874|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_875|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_874|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_874|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_874|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_874|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_877|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_872|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_872|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_872|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_872|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_872|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_872|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_872|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_872|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_96_872|96> <TMP_BV_96_878|96>)) (== <TMP_BV_72_873|72> <TMP_BV_72_876|72>)) (== <TMP_BV_8_879|8> <TMP_BV_8_874|8>)) (== <TMP_BV_8_880|8> <TMP_BV_8_875|8>)) (== <TMP_BV_8_881|8> <TMP_BV_8_877|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 10
SAME MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 
4  |           1 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 
------------------
0  |   0 1 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 
3  |         0 0 1 0 0 0 
4  |           0 0 0 0 0 
5  |             0 0 0 0 
6  |               0 0 0 
7  |                 0 0 
8  |                   0 
9  |                     

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 3 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 0 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
123 -> 3 (size 1 / cell size 1 / offset 0
129 -> 1 (size 1 / cell size 9 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_890|96> <TMP_BV_96_895|96>)) (== <TMP_BV_72_891|72> <TMP_BV_72_894|72>)) (== <TMP_BV_8_896|8> <TMP_BV_8_892|8>)) (== <TMP_BV_8_897|8> <TMP_BV_8_893|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_892|8>) <0x0|8>)))
(or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_892|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_892|8>) <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_892|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_892|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_893|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_890|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_890|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_890|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_890|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_890|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_890|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_890|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_890|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_890|96> <TMP_BV_96_895|96>)) (== <TMP_BV_72_891|72> <TMP_BV_72_894|72>)) (== <TMP_BV_8_896|8> <TMP_BV_8_892|8>)) (== <TMP_BV_8_897|8> <TMP_BV_8_893|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 1 
10 |                       0 
11 |                         

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 9)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 9)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 9)
Access 7 cell 2 offset 0 size 1 (cell size 1)
Access 8 cell 3 offset 0 size 1 (cell size 1)
Access 9 cell 1 offset 0 size 1 (cell size 9)
Access 10 cell 4 offset 0 size 1 (cell size 1)
Access 11 cell 1 offset 1 size 1 (cell size 9)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 9 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 9 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 9 / offset 8
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
123 -> 3 (size 1 / cell size 1 / offset 0
129 -> 1 (size 1 / cell size 9 / offset 0
143 -> 4 (size 1 / cell size 1 / offset 0
149 -> 1 (size 1 / cell size 9 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_96_908|96> <TMP_BV_96_914|96>)) (== <TMP_BV_72_909|72> <TMP_BV_72_912|72>)) (== <TMP_BV_8_915|8> <TMP_BV_8_910|8>)) (== <TMP_BV_8_916|8> <TMP_BV_8_911|8>)) (== <TMP_BV_8_917|8> <TMP_BV_8_913|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_910|8>) <0x0|8>)))
(or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_910|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_910|8>) <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_910|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_910|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_911|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_910|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_910|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_910|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_910|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_913|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_908|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_908|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_908|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_908|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_908|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_908|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_908|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_908|96>[71:64]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_96_908|96> <TMP_BV_96_914|96>)) (== <TMP_BV_72_909|72> <TMP_BV_72_912|72>)) (== <TMP_BV_8_915|8> <TMP_BV_8_910|8>)) (== <TMP_BV_8_916|8> <TMP_BV_8_911|8>)) (== <TMP_BV_8_917|8> <TMP_BV_8_913|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb8|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0x9|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 11
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 
5  |             0 0 0 0 0 
6  |               0 0 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 
4  |           0 0 0 0 0 0 
5  |             0 1 0 0 0 
6  |               0 1 0 0 
7  |                 0 0 0 
8  |                   0 0 
9  |                     0 
10 |                       

TOTAL CELLS: 3
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 2 offset 0 size 1 (cell size 1)
Access 10 cell 1 offset 0 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
13 -> 2 (size 1 / cell size 1 / offset 0
19 -> 1 (size 1 / cell size 10 / offset 0
Start memory constraint: (and (and (and TRUE (== <TMP_BV_96_927|96> <TMP_BV_96_931|96>)) (== <TMP_BV_80_928|80> <TMP_BV_80_930|80>)) (== <TMP_BV_8_932|8> <TMP_BV_8_929|8>))

CONSTRAINTS

(not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_929|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_927|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_927|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_927|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_927|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_927|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_927|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_927|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_927|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_927|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_927|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and TRUE (== <TMP_BV_96_927|96> <TMP_BV_96_931|96>)) (== <TMP_BV_80_928|80> <TMP_BV_80_930|80>)) (== <TMP_BV_8_932|8> <TMP_BV_8_929|8>))
(and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 
6  |               0 1 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 2 offset 0 size 1 (cell size 1)
Access 10 cell 3 offset 0 size 1 (cell size 1)
Access 11 cell 1 offset 0 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
44 -> 3 (size 1 / cell size 1 / offset 0
50 -> 1 (size 1 / cell size 10 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_943|96> <TMP_BV_96_948|96>)) (== <TMP_BV_80_944|80> <TMP_BV_80_947|80>)) (== <TMP_BV_8_949|8> <TMP_BV_8_945|8>)) (== <TMP_BV_8_950|8> <TMP_BV_8_946|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_945|8>) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_946|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_943|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_943|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_943|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_943|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_943|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_943|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_943|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_943|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_943|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_943|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_943|96> <TMP_BV_96_948|96>)) (== <TMP_BV_80_944|80> <TMP_BV_80_947|80>)) (== <TMP_BV_8_949|8> <TMP_BV_8_945|8>)) (== <TMP_BV_8_950|8> <TMP_BV_8_946|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 13
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   0 0 0 0 
9  |                     0 0 0 
10 |                       0 0 
11 |                         0 
12 |                           

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 
6  |               0 1 0 0 0 0 
7  |                 0 0 0 0 0 
8  |                   0 0 0 0 
9  |                     0 0 0 
10 |                       0 1 
11 |                         0 
12 |                           

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 2 offset 0 size 1 (cell size 1)
Access 10 cell 1 offset 0 size 1 (cell size 10)
Access 11 cell 3 offset 0 size 1 (cell size 1)
Access 12 cell 1 offset 1 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
13 -> 2 (size 1 / cell size 1 / offset 0
19 -> 1 (size 1 / cell size 10 / offset 0
33 -> 3 (size 1 / cell size 1 / offset 0
39 -> 1 (size 1 / cell size 10 / offset 1
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_962|96> <TMP_BV_96_967|96>)) (== <TMP_BV_80_963|80> <TMP_BV_80_965|80>)) (== <TMP_BV_8_968|8> <TMP_BV_8_964|8>)) (== <TMP_BV_8_969|8> <TMP_BV_8_966|8>))

CONSTRAINTS

(not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_2_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_964|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_966|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_962|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_962|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_962|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_962|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_962|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_962|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_962|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_962|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_962|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_962|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_962|96> <TMP_BV_96_967|96>)) (== <TMP_BV_80_963|80> <TMP_BV_80_965|80>)) (== <TMP_BV_8_968|8> <TMP_BV_8_964|8>)) (== <TMP_BV_8_969|8> <TMP_BV_8_966|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         0 1 
12 |                           0 
13 |                             

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 2 offset 0 size 1 (cell size 1)
Access 10 cell 3 offset 0 size 1 (cell size 1)
Access 11 cell 1 offset 0 size 1 (cell size 10)
Access 12 cell 4 offset 0 size 1 (cell size 1)
Access 13 cell 1 offset 1 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
44 -> 3 (size 1 / cell size 1 / offset 0
50 -> 1 (size 1 / cell size 10 / offset 0
64 -> 4 (size 1 / cell size 1 / offset 0
70 -> 1 (size 1 / cell size 10 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_96_982|96> <TMP_BV_96_988|96>)) (== <TMP_BV_80_983|80> <TMP_BV_80_986|80>)) (== <TMP_BV_8_989|8> <TMP_BV_8_984|8>)) (== <TMP_BV_8_990|8> <TMP_BV_8_985|8>)) (== <TMP_BV_8_991|8> <TMP_BV_8_987|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_984|8>) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_985|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> <%rsi_2_INIT|64>[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_987|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_982|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_982|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_982|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_982|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_982|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_982|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_982|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_982|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_982|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_982|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_96_982|96> <TMP_BV_96_988|96>)) (== <TMP_BV_80_983|80> <TMP_BV_80_986|80>)) (== <TMP_BV_8_989|8> <TMP_BV_8_984|8>)) (== <TMP_BV_8_990|8> <TMP_BV_8_985|8>)) (== <TMP_BV_8_991|8> <TMP_BV_8_987|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 
6  |               0 1 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 2 offset 0 size 1 (cell size 1)
Access 10 cell 3 offset 0 size 1 (cell size 1)
Access 11 cell 1 offset 0 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
99 -> 3 (size 1 / cell size 1 / offset 0
105 -> 1 (size 1 / cell size 10 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_1002|96> <TMP_BV_96_1007|96>)) (== <TMP_BV_80_1003|80> <TMP_BV_80_1006|80>)) (== <TMP_BV_8_1008|8> <TMP_BV_8_1004|8>)) (== <TMP_BV_8_1009|8> <TMP_BV_8_1005|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1004|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1004|8>) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1004|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1004|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_1005|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_1002|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_1002|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_1002|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_1002|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_1002|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_1002|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_1002|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_1002|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_1002|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_1002|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_1002|96> <TMP_BV_96_1007|96>)) (== <TMP_BV_80_1003|80> <TMP_BV_80_1006|80>)) (== <TMP_BV_8_1008|8> <TMP_BV_8_1004|8>)) (== <TMP_BV_8_1009|8> <TMP_BV_8_1005|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         0 1 
12 |                           0 
13 |                             

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 2 offset 0 size 1 (cell size 1)
Access 10 cell 3 offset 0 size 1 (cell size 1)
Access 11 cell 1 offset 0 size 1 (cell size 10)
Access 12 cell 4 offset 0 size 1 (cell size 1)
Access 13 cell 1 offset 1 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
99 -> 3 (size 1 / cell size 1 / offset 0
105 -> 1 (size 1 / cell size 10 / offset 0
119 -> 4 (size 1 / cell size 1 / offset 0
125 -> 1 (size 1 / cell size 10 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_96_1022|96> <TMP_BV_96_1028|96>)) (== <TMP_BV_80_1023|80> <TMP_BV_80_1026|80>)) (== <TMP_BV_8_1029|8> <TMP_BV_8_1024|8>)) (== <TMP_BV_8_1030|8> <TMP_BV_8_1025|8>)) (== <TMP_BV_8_1031|8> <TMP_BV_8_1027|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1024|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1024|8>) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1024|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1024|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_1025|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1024|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1024|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1024|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1024|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_1027|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_1022|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_1022|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_1022|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_1022|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_1022|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_1022|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_1022|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_1022|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_1022|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_1022|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_96_1022|96> <TMP_BV_96_1028|96>)) (== <TMP_BV_80_1023|80> <TMP_BV_80_1026|80>)) (== <TMP_BV_8_1029|8> <TMP_BV_8_1024|8>)) (== <TMP_BV_8_1030|8> <TMP_BV_8_1025|8>)) (== <TMP_BV_8_1031|8> <TMP_BV_8_1027|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 3 4 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 12
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 1 
2  |       0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 
6  |               0 0 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 
6  |               0 1 0 0 0 
7  |                 0 0 0 0 
8  |                   0 0 0 
9  |                     0 0 
10 |                       0 
11 |                         

TOTAL CELLS: 4
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 2 offset 0 size 1 (cell size 1)
Access 10 cell 3 offset 0 size 1 (cell size 1)
Access 11 cell 1 offset 0 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
123 -> 3 (size 1 / cell size 1 / offset 0
129 -> 1 (size 1 / cell size 10 / offset 0
Start memory constraint: (and (and (and (and TRUE (== <TMP_BV_96_1042|96> <TMP_BV_96_1047|96>)) (== <TMP_BV_80_1043|80> <TMP_BV_80_1046|80>)) (== <TMP_BV_8_1048|8> <TMP_BV_8_1044|8>)) (== <TMP_BV_8_1049|8> <TMP_BV_8_1045|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1044|8>) <0x0|8>)))
(or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1044|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1044|8>) <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1044|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1044|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_1045|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_1042|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_1042|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_1042|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_1042|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_1042|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_1042|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_1042|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_1042|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_1042|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_1042|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and TRUE (== <TMP_BV_96_1042|96> <TMP_BV_96_1047|96>)) (== <TMP_BV_80_1043|80> <TMP_BV_80_1046|80>)) (== <TMP_BV_8_1048|8> <TMP_BV_8_1044|8>)) (== <TMP_BV_8_1049|8> <TMP_BV_8_1045|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
===========================================
Working on pair / P: 1 2 3 4 4 5 6 6 7 Q: 1 2 3 3 4 5 5 6
TARGET: 
.strcpy:
movl %esi, %esi
movl %edi, %eax
movl %esi, %edi
movq %rsi, %rdx
movq %rax, %rcx
orl %eax, %edi
andl $0x3, %edi
nop 
movl %esi, %esi
movl (%r15,%rsi,1), %r8d
movl %r8d, %esi
leal -0x1010101(%r8), %edi
notl %esi
andl %edi, %esi
andl $0x80808080, %esi
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
.L_126820:
addl $0x4, %edx
movl %ecx, %ecx
movl %r8d, (%r15,%rcx,1)
addl $0x4, %ecx
movl %edx, %edx
movl (%r15,%rdx,1), %r8d
movl %r8d, %r9d
leal -0x1010101(%r8), %esi
notl %r9d
nop 
andl %esi, %r9d
andl $0x80808080, %r9d
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
.L_126860:
movl %edx, %edx
movzbl (%r15,%rdx,1), %esi
addl $0x1, %edx
movl %ecx, %ecx
movb %sil, (%r15,%rcx,1)
addl $0x1, %ecx
testb %sil, %sil
nop 
nop 
nop 
nop 
nop 
nop 
retq 
REWRITE: 
.strcpy:
nop 
nop 
nop 
nop 
nop 
movq %rsi, %rdx
movl %edi, %eax
movq %rdi, %rcx
andl $0x10, %esi
nop 
xorl $0xfb, %esi
orb 0x4(%r15,%rsi,1), %sil
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126820:
nop 
nop 
nop 
nop 
nop 
nop 
nop 
sall %cl, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
subb %sil, %dl
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
.L_126860:
subl %ebp, %edx
movsbq (%r15,%rdx,1), %rsi
nop 
nop 
addb $0x1, %dl
nop 
addl $0x1, %ecx
movb %sil, -0x1(%r15,%rcx,1)
testb %sil, %cl
nop 
nop 
nop 
nop 
sarl $0xe0, %eax
nop 
nop 
nop 
nop 
nop 
nop 
nopl %eax
nop 
nop 
nop 
nop 
retq 
Total accesses: 14
SAME MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 0 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 0 0 0 0 0 0 0 0 1 0 0 
2  |       0 0 0 0 0 0 0 0 0 0 0 
3  |         0 0 0 0 0 0 0 0 0 0 
4  |           1 0 0 0 0 0 0 0 0 
5  |             0 0 0 0 0 0 0 0 
6  |               0 0 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         0 0 
12 |                           0 
13 |                             

NEXT MAP
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 
------------------
0  |   0 1 0 0 0 0 0 0 0 0 0 0 0 
1  |     0 1 0 0 0 0 0 0 0 0 0 0 
2  |       0 1 1 0 0 0 0 0 0 0 0 
3  |         0 0 1 0 0 0 0 0 0 0 
4  |           0 0 0 0 0 0 0 0 0 
5  |             0 1 0 0 0 0 0 0 
6  |               0 1 0 0 0 0 0 
7  |                 0 0 0 0 0 0 
8  |                   0 0 0 0 0 
9  |                     0 0 0 0 
10 |                       0 0 0 
11 |                         0 1 
12 |                           0 
13 |                             

TOTAL CELLS: 5
Access 0 cell 0 offset 0 size 4 (cell size 12)
Access 1 cell 1 offset 0 size 4 (cell size 10)
Access 2 cell 0 offset 4 size 4 (cell size 12)
Access 3 cell 1 offset 4 size 4 (cell size 10)
Access 4 cell 0 offset 8 size 4 (cell size 12)
Access 5 cell 0 offset 8 size 1 (cell size 12)
Access 6 cell 1 offset 8 size 1 (cell size 10)
Access 7 cell 0 offset 9 size 1 (cell size 12)
Access 8 cell 1 offset 9 size 1 (cell size 10)
Access 9 cell 2 offset 0 size 1 (cell size 1)
Access 10 cell 3 offset 0 size 1 (cell size 1)
Access 11 cell 1 offset 0 size 1 (cell size 10)
Access 12 cell 4 offset 0 size 1 (cell size 1)
Access 13 cell 1 offset 1 size 1 (cell size 10)
ALIASING CASES: 1
1 Aliasing cases.  Yay.
------ NEXT ALIASING CASE -----
TARGET MAP:
10 -> 0 (size 4 / cell size 12 / offset 0
29 -> 1 (size 4 / cell size 10 / offset 0
32 -> 0 (size 4 / cell size 12 / offset 4
43 -> 1 (size 4 / cell size 10 / offset 4
46 -> 0 (size 4 / cell size 12 / offset 8
72 -> 0 (size 1 / cell size 12 / offset 8
75 -> 1 (size 1 / cell size 10 / offset 8
81 -> 0 (size 1 / cell size 12 / offset 9
84 -> 1 (size 1 / cell size 10 / offset 9
REWRITE MAP:
12 -> 2 (size 1 / cell size 1 / offset 0
123 -> 3 (size 1 / cell size 1 / offset 0
129 -> 1 (size 1 / cell size 10 / offset 0
143 -> 4 (size 1 / cell size 1 / offset 0
149 -> 1 (size 1 / cell size 10 / offset 1
Start memory constraint: (and (and (and (and (and TRUE (== <TMP_BV_96_1062|96> <TMP_BV_96_1068|96>)) (== <TMP_BV_80_1063|80> <TMP_BV_80_1066|80>)) (== <TMP_BV_8_1069|8> <TMP_BV_8_1064|8>)) (== <TMP_BV_8_1070|8> <TMP_BV_8_1065|8>)) (== <TMP_BV_8_1071|8> <TMP_BV_8_1067|8>))

CONSTRAINTS

(not (not (== (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x4|32>) <%r15_2_INIT|64>) (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))) (plus <CELL_2_ADDR|64> <0x0|64>))
(not (not (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1064|8>) <0x0|8>)))
(or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1064|8>) <0x0|8>)))
(not (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (or (and (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1064|8>) <0x0|8>))))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1064|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1064|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_3_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_1065|8>)[7:0]) <0x0|8>))))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1064|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1064|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1064|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[63:8] (plus (concat <0x0|1> <0x1|8>) (concat <0x0|1> (concat <0x0|32> (plus (plus (concat <0x0|1> !<%rbp_2_INIT|64>[31:0]) <0x1|33>) (concat <0x0|1> (concat <%rsi_2_INIT|64>[63:8] (plus (plus (concat <0x0|1> !(concat (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[63:8] (or (concat <0x0|32> (xor (concat <0x0|32> (and <%rsi_2_INIT|64>[31:0] (sign-extend-32 <0x10|8>)))[31:0] (sign-extend-32 <0xfb|8>)))[7:0] <TMP_BV_8_1064|8>))[7:0]) <0x1|9>) (concat <0x0|1> <%rsi_2_INIT|64>[7:0]))[7:0])[31:0]))[31:0])[7:0]))[7:0])[31:0]))[31:0])) (plus <CELL_4_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0xffffffff|32>) <%r15_2_INIT|64>) (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])) (plus <CELL_1_ADDR|64> <0x1|64>))
(not (not (or (and (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>)) (== (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1] <0x0|32>)) (and (not (not (== (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>))[7:0] <0x0|8>))) (== (and (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> <%rdi_2_INIT|64>[31:0]))[31:0])[31:0]))[31:0])[7:0] (sign-extend-64 <TMP_BV_8_1067|8>)[7:0]) <0x0|8>)))))
(not (not (== (and (concat <0x0|32> (or (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])[31:0] (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0]))[31:0] (sign-extend-32 <0x3|8>)) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x0|64>))
(not (not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_1062|96>[31:0])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_1062|96>[31:0]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x0|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x4|64>))
(== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_1062|96>[63:32])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_1062|96>[63:32]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>)
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x4|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (and (concat <0x0|32> !(concat <0x0|32> (concat <0x0|32> <TMP_BV_96_1062|96>[95:64])[31:0])[31:0])[31:0] (concat <0x0|32> (plus (sign-extend-64 <0xfefefeff|32>) (concat <0x0|32> <TMP_BV_96_1062|96>[95:64]))[31:0])[31:0]))[31:0] <0x80808080|32>) <0x0|32>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x8|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x8|64>))
(not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_1062|96>[71:64]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_1062|96>[71:64]))[7:0]) <0x0|8>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> <%rsi_1_INIT|64>[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_0_ADDR|64> <0x9|64>))
(== (plus (plus (sign-extend-64 <0x0|32>) <%r15_1_INIT|64>) (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x1|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> (plus (concat <0x0|1> (sign-extend-32 <0x4|8>)) (concat <0x0|1> (concat <0x0|32> (concat <0x0|32> <%rdi_1_INIT|64>[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])[31:0]))[31:0])[31:0])) (plus <CELL_1_ADDR|64> <0x9|64>))
(not (not (== (and (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_1062|96>[79:72]))[7:0] (concat <0x0|32> (concat <0x0|24> <TMP_BV_96_1062|96>[79:72]))[7:0]) <0x0|8>)))
(== <%rsp_1_INIT|64> <%rsp_|64>)
(== <%rbp_1_INIT|64> <%rbp_|64>)
(== <%rsi_1_INIT|64> <%rsi_|64>)
(== <%rdi_1_INIT|64> <%rdi_|64>)
(== <%r15_1_INIT|64> <%r15_|64>)
(== <sigbus_1_INIT> <sigbus_>)
(== <sigfpe_1_INIT> <sigfpe_>)
(== <sigsegv_1_INIT> <sigsegv_>)
(== <%rsp_2_INIT|64> <%rsp_|64>)
(== <%rbp_2_INIT|64> <%rbp_|64>)
(== <%rsi_2_INIT|64> <%rsi_|64>)
(== <%rdi_2_INIT|64> <%rdi_|64>)
(== <%r15_2_INIT|64> <%r15_|64>)
(== <sigbus_2_INIT> <sigbus_>)
(== <sigfpe_2_INIT> <sigfpe_>)
(== <sigsegv_2_INIT> <sigsegv_>)
(and (and (and (and (and TRUE (== <TMP_BV_96_1062|96> <TMP_BV_96_1068|96>)) (== <TMP_BV_80_1063|80> <TMP_BV_80_1066|80>)) (== <TMP_BV_8_1069|8> <TMP_BV_8_1064|8>)) (== <TMP_BV_8_1070|8> <TMP_BV_8_1065|8>)) (== <TMP_BV_8_1071|8> <TMP_BV_8_1067|8>))
(and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and TRUE (<= <CELL_0_ADDR|64> <0xffffffffffffffb5|64>)) (>= <CELL_0_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_1_ADDR|64>) (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (or (<= (plus <CELL_0_ADDR|64> <0xc|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_0_ADDR|64>))) (<= <CELL_1_ADDR|64> <0xffffffffffffffb7|64>)) (>= <CELL_1_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_2_ADDR|64>) (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (or (<= (plus <CELL_1_ADDR|64> <0xa|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_1_ADDR|64>))) (<= <CELL_2_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_2_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>) (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (or (<= (plus <CELL_2_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_2_ADDR|64>))) (<= <CELL_3_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_3_ADDR|64> <0x40|64>)) (or (<= (plus <CELL_3_ADDR|64> <0x1|64>) <CELL_4_ADDR|64>) (<= (plus <CELL_4_ADDR|64> <0x1|64>) <CELL_3_ADDR|64>))) (<= <CELL_4_ADDR|64> <0xffffffffffffffc0|64>)) (>= <CELL_4_ADDR|64> <0x40|64>))
INEQUALITY: (== (concat <0x0|32> <%rdi_1_INIT|64>[31:0]) (concat <0x0|32> (s_shr (concat (concat <0x0|32> (s_shr (concat (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> (<< (concat <0x0|1> (concat <0x0|32> <%rdi_2_INIT|64>[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0]) (concat <0x0|25> (and <%rdi_2_INIT|64>[7:0][7:0] <0x1f|8>)))[31:0])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1])[31:0] <0x0|1>) (concat <0x0|25> (and <0xe0|8>[7:0] <0x1f|8>)))[32:1]))
INEQUALITY: (== <sigbus_1_INIT> <sigbus_2_INIT>)
INEQUALITY: (== <sigfpe_1_INIT> <sigfpe_2_INIT>)
INEQUALITY: (== (or (or (or (or (or (or (or (or (or (or (or <sigsegv_1_INIT> (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (and (and (not <sigfpe_1_INIT>) (not <sigbus_1_INIT>)) FALSE)) (or (or (or (or (or (or (or <sigsegv_2_INIT> (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)) (and (and (not <sigfpe_2_INIT>) (not <sigbus_2_INIT>)) FALSE)))
  (This case verified)
Equivalent: yes
