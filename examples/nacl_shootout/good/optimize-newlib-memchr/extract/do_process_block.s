  .text
  .globl do_process_block
  .type do_process_block, @function

#! file-offset 0x61860
#! rip-offset  0x21860
#! capacity    448 bytes

# Text                            #  Line  RIP      Bytes  Opcode              
.do_process_block:                #        0x21860  0      OPC=<label>         
  pushq %r14                      #  1     0x21860  2      OPC=pushq_r64_1     
  pushq %r13                      #  2     0x21862  2      OPC=pushq_r64_1     
  pushq %r12                      #  3     0x21864  2      OPC=pushq_r64_1     
  pushq %rbx                      #  4     0x21866  1      OPC=pushq_r64_1     
  subl $0x58, %esp                #  5     0x21867  3      OPC=subl_r32_imm8   
  addq %r15, %rsp                 #  6     0x2186a  3      OPC=addq_r64_r64    
  movl %edi, %edi                 #  7     0x2186d  2      OPC=movl_r32_r32    
  movq %rdi, 0x40(%rsp)           #  8     0x2186f  5      OPC=movq_m64_r64    
  movl %esi, %esi                 #  9     0x21874  2      OPC=movl_r32_r32    
  movl %edx, %edx                 #  10    0x21876  2      OPC=movl_r32_r32    
  movq %rdx, 0x28(%rsp)           #  11    0x21878  5      OPC=movq_m64_r64    
  movl %ecx, %r13d                #  12    0x2187d  3      OPC=movl_r32_r32    
  movl %r8d, %r8d                 #  13    0x21880  3      OPC=movl_r32_r32    
  movq %r8, 0x30(%rsp)            #  14    0x21883  5      OPC=movq_m64_r64    
  movl %r9d, %r9d                 #  15    0x21888  3      OPC=movl_r32_r32    
  movq %r9, 0x38(%rsp)            #  16    0x2188b  5      OPC=movq_m64_r64    
  movl 0x80(%rsp), %eax           #  17    0x21890  7      OPC=movl_r32_m32    
  movq %rax, 0x48(%rsp)           #  18    0x21897  5      OPC=movq_m64_r64    
  movl %r13d, %r12d               #  19    0x2189c  3      OPC=movl_r32_r32    
  nop                             #  20    0x2189f  1      OPC=nop             
  subl 0x28(%rsp), %r12d          #  21    0x218a0  5      OPC=subl_r32_m32    
  movslq %r12d, %r12              #  22    0x218a5  3      OPC=movslq_r64_r32  
  movq %r12, %rax                 #  23    0x218a8  3      OPC=movq_r64_r64    
  shlq $0x4, %rax                 #  24    0x218ab  4      OPC=shlq_r64_imm8   
  subq %r12, %rax                 #  25    0x218af  3      OPC=subq_r64_r64    
  leaq (%r12,%rax,4), %rdx        #  26    0x218b2  4      OPC=leaq_r64_m16    
  movq $0x8888888888888889, %r14  #  27    0x218b6  10     OPC=movq_r64_imm64  
  movq %rdx, %rax                 #  28    0x218c0  3      OPC=movq_r64_r64    
  mulq %r14                       #  29    0x218c3  3      OPC=mulq_r64        
  shrq $0x5, %rdx                 #  30    0x218c6  4      OPC=shrq_r64_imm8   
  leal 0x3c(%rdx), %edi           #  31    0x218ca  3      OPC=leal_r32_m16    
  movq %rsi, 0x20(%rsp)           #  32    0x218cd  5      OPC=movq_m64_r64    
  nop                             #  33    0x218d2  1      OPC=nop             
  nop                             #  34    0x218d3  1      OPC=nop             
  nop                             #  35    0x218d4  1      OPC=nop             
  nop                             #  36    0x218d5  1      OPC=nop             
  nop                             #  37    0x218d6  1      OPC=nop             
  nop                             #  38    0x218d7  1      OPC=nop             
  nop                             #  39    0x218d8  1      OPC=nop             
  nop                             #  40    0x218d9  1      OPC=nop             
  nop                             #  41    0x218da  1      OPC=nop             
  callq .malloc                   #  42    0x218db  5      OPC=callq_label     
  movl %eax, %ebx                 #  43    0x218e0  2      OPC=movl_r32_r32    
  testq %rbx, %rbx                #  44    0x218e2  3      OPC=testq_r64_r64   
  movq 0x20(%rsp), %rsi           #  45    0x218e5  5      OPC=movq_r64_m64    
  je .L_21a00                     #  46    0x218ea  6      OPC=je_label_1      
  shrq $0x1, %r12                 #  47    0x218f0  3      OPC=shrq_r64_one    
  movl %r12d, %r12d               #  48    0x218f3  3      OPC=movl_r32_r32    
  movq %r12, %rax                 #  49    0x218f6  3      OPC=movq_r64_r64    
  shlq $0x4, %rax                 #  50    0x218f9  4      OPC=shlq_r64_imm8   
  addq %r12, %rax                 #  51    0x218fd  3      OPC=addq_r64_r64    
  movq %rax, %rdx                 #  52    0x21900  3      OPC=movq_r64_r64    
  shlq $0x8, %rdx                 #  53    0x21903  4      OPC=shlq_r64_imm8   
  addq %rdx, %rax                 #  54    0x21907  3      OPC=addq_r64_r64    
  movq %rax, %rdx                 #  55    0x2190a  3      OPC=movq_r64_r64    
  shlq $0x10, %rdx                #  56    0x2190d  4      OPC=shlq_r64_imm8   
  addq %rdx, %rax                 #  57    0x21911  3      OPC=addq_r64_r64    
  leaq (%r12,%rax,8), %r12        #  58    0x21914  4      OPC=leaq_r64_m16    
  shrq $0x20, %r12                #  59    0x21918  4      OPC=shrq_r64_imm8   
  shrl $0x5, %r12d                #  60    0x2191c  4      OPC=shrl_r32_imm8   
  leal (,%r12,4), %eax            #  61    0x21920  8      OPC=leal_r32_m16    
  shll $0x6, %r12d                #  62    0x21928  4      OPC=shll_r32_imm8   
  subl %eax, %r12d                #  63    0x2192c  3      OPC=subl_r32_r32    
  movl %r13d, %r10d               #  64    0x2192f  3      OPC=movl_r32_r32    
  subl %r12d, %r10d               #  65    0x21932  3      OPC=subl_r32_r32    
  movl $0x1, 0x10(%rsp)           #  66    0x21935  8      OPC=movl_m32_imm32  
  nop                             #  67    0x2193d  1      OPC=nop             
  nop                             #  68    0x2193e  1      OPC=nop             
  nop                             #  69    0x2193f  1      OPC=nop             
  movl %ebx, 0x8(%rsp)            #  70    0x21940  4      OPC=movl_m32_r32    
  movl 0x48(%rsp), %eax           #  71    0x21944  4      OPC=movl_r32_m32    
  movl %eax, (%rsp)               #  72    0x21948  3      OPC=movl_m32_r32    
  movl 0x38(%rsp), %r9d           #  73    0x2194b  5      OPC=movl_r32_m32    
  movl 0x30(%rsp), %r8d           #  74    0x21950  5      OPC=movl_r32_m32    
  movl %r13d, %ecx                #  75    0x21955  3      OPC=movl_r32_r32    
  movl %r10d, %edx                #  76    0x21958  3      OPC=movl_r32_r32    
  movl 0x40(%rsp), %edi           #  77    0x2195b  4      OPC=movl_r32_m32    
  nop                             #  78    0x2195f  1      OPC=nop             
  movq %r10, 0x20(%rsp)           #  79    0x21960  5      OPC=movq_m64_r64    
  nop                             #  80    0x21965  1      OPC=nop             
  nop                             #  81    0x21966  1      OPC=nop             
  nop                             #  82    0x21967  1      OPC=nop             
  nop                             #  83    0x21968  1      OPC=nop             
  nop                             #  84    0x21969  1      OPC=nop             
  nop                             #  85    0x2196a  1      OPC=nop             
  nop                             #  86    0x2196b  1      OPC=nop             
  nop                             #  87    0x2196c  1      OPC=nop             
  nop                             #  88    0x2196d  1      OPC=nop             
  nop                             #  89    0x2196e  1      OPC=nop             
  nop                             #  90    0x2196f  1      OPC=nop             
  nop                             #  91    0x21970  1      OPC=nop             
  nop                             #  92    0x21971  1      OPC=nop             
  nop                             #  93    0x21972  1      OPC=nop             
  nop                             #  94    0x21973  1      OPC=nop             
  nop                             #  95    0x21974  1      OPC=nop             
  nop                             #  96    0x21975  1      OPC=nop             
  nop                             #  97    0x21976  1      OPC=nop             
  nop                             #  98    0x21977  1      OPC=nop             
  nop                             #  99    0x21978  1      OPC=nop             
  nop                             #  100   0x21979  1      OPC=nop             
  nop                             #  101   0x2197a  1      OPC=nop             
  callq .detach_job               #  102   0x2197b  5      OPC=callq_label     
  movl %eax, %ecx                 #  103   0x21980  2      OPC=movl_r32_r32    
  movl $0x0, 0x10(%rsp)           #  104   0x21982  8      OPC=movl_m32_imm32  
  movl %r12d, %r12d               #  105   0x2198a  3      OPC=movl_r32_r32    
  movq %r12, %rax                 #  106   0x2198d  3      OPC=movq_r64_r64    
  shlq $0x4, %rax                 #  107   0x21990  4      OPC=shlq_r64_imm8   
  subq %r12, %rax                 #  108   0x21994  3      OPC=subq_r64_r64    
  leaq (%r12,%rax,4), %rdx        #  109   0x21997  4      OPC=leaq_r64_m16    
  movq %rdx, %rax                 #  110   0x2199b  3      OPC=movq_r64_r64    
  xchgw %ax, %ax                  #  111   0x2199e  2      OPC=xchgw_ax_r16    
  mulq %r14                       #  112   0x219a0  3      OPC=mulq_r64        
  shrq $0x5, %rdx                 #  113   0x219a3  4      OPC=shrq_r64_imm8   
  addl %edx, %ebx                 #  114   0x219a7  2      OPC=addl_r32_r32    
  movl %ebx, 0x8(%rsp)            #  115   0x219a9  4      OPC=movl_m32_r32    
  movl %ecx, (%rsp)               #  116   0x219ad  3      OPC=movl_m32_r32    
  movl 0x38(%rsp), %r9d           #  117   0x219b0  5      OPC=movl_r32_m32    
  movl 0x30(%rsp), %r8d           #  118   0x219b5  5      OPC=movl_r32_m32    
  movq 0x20(%rsp), %r10           #  119   0x219ba  5      OPC=movq_r64_m64    
  nop                             #  120   0x219bf  1      OPC=nop             
  movl %r10d, %ecx                #  121   0x219c0  3      OPC=movl_r32_r32    
  movl 0x28(%rsp), %edx           #  122   0x219c3  4      OPC=movl_r32_m32    
  xorl %esi, %esi                 #  123   0x219c7  2      OPC=xorl_r32_r32    
  xorl %edi, %edi                 #  124   0x219c9  2      OPC=xorl_r32_r32    
  nop                             #  125   0x219cb  1      OPC=nop             
  nop                             #  126   0x219cc  1      OPC=nop             
  nop                             #  127   0x219cd  1      OPC=nop             
  nop                             #  128   0x219ce  1      OPC=nop             
  nop                             #  129   0x219cf  1      OPC=nop             
  nop                             #  130   0x219d0  1      OPC=nop             
  nop                             #  131   0x219d1  1      OPC=nop             
  nop                             #  132   0x219d2  1      OPC=nop             
  nop                             #  133   0x219d3  1      OPC=nop             
  nop                             #  134   0x219d4  1      OPC=nop             
  nop                             #  135   0x219d5  1      OPC=nop             
  nop                             #  136   0x219d6  1      OPC=nop             
  nop                             #  137   0x219d7  1      OPC=nop             
  nop                             #  138   0x219d8  1      OPC=nop             
  nop                             #  139   0x219d9  1      OPC=nop             
  nop                             #  140   0x219da  1      OPC=nop             
  callq .detach_job               #  141   0x219db  5      OPC=callq_label     
  movl %eax, %eax                 #  142   0x219e0  2      OPC=movl_r32_r32    
  addl $0x58, %esp                #  143   0x219e2  3      OPC=addl_r32_imm8   
  addq %r15, %rsp                 #  144   0x219e5  3      OPC=addq_r64_r64    
  popq %rbx                       #  145   0x219e8  1      OPC=popq_r64_1      
  popq %r12                       #  146   0x219e9  2      OPC=popq_r64_1      
  popq %r13                       #  147   0x219eb  2      OPC=popq_r64_1      
  popq %r14                       #  148   0x219ed  2      OPC=popq_r64_1      
  popq %r11                       #  149   0x219ef  2      OPC=popq_r64_1      
  andl $0xffffffe0, %r11d         #  150   0x219f1  7      OPC=andl_r32_imm32  
  nop                             #  151   0x219f8  1      OPC=nop             
  nop                             #  152   0x219f9  1      OPC=nop             
  nop                             #  153   0x219fa  1      OPC=nop             
  nop                             #  154   0x219fb  1      OPC=nop             
  addq %r15, %r11                 #  155   0x219fc  3      OPC=addq_r64_r64    
  jmpq %r11                       #  156   0x219ff  3      OPC=jmpq_r64        
  nop                             #  157   0x21a02  1      OPC=nop             
  nop                             #  158   0x21a03  1      OPC=nop             
  nop                             #  159   0x21a04  1      OPC=nop             
  nop                             #  160   0x21a05  1      OPC=nop             
  nop                             #  161   0x21a06  1      OPC=nop             
.L_21a00:                         #        0x21a07  0      OPC=<label>         
  movl $0x10020396, %ecx          #  162   0x21a07  5      OPC=movl_r32_imm32  
  movl $0x10020430, %edx          #  163   0x21a0c  5      OPC=movl_r32_imm32  
  movl $0xe4, %esi                #  164   0x21a11  5      OPC=movl_r32_imm32  
  movl $0x1002038c, %edi          #  165   0x21a16  5      OPC=movl_r32_imm32  
  nop                             #  166   0x21a1b  1      OPC=nop             
  nop                             #  167   0x21a1c  1      OPC=nop             
  nop                             #  168   0x21a1d  1      OPC=nop             
  nop                             #  169   0x21a1e  1      OPC=nop             
  nop                             #  170   0x21a1f  1      OPC=nop             
  nop                             #  171   0x21a20  1      OPC=nop             
  nop                             #  172   0x21a21  1      OPC=nop             
  callq .__assert_func            #  173   0x21a22  5      OPC=callq_label     
                                                                               
.size do_process_block, .-do_process_block

